commit 926d9947847a0683cf34de6fc231209747576088
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 10 08:11:01 2017 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r253576

commit 2ead0bd7a4111845cb91592b2aa33cd3d73d3fea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 10 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253571

commit f09e4ebed90abfc5dd7fb26c276e5d1eb82bd5e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253533

commit 7130705d9bc3b43df40558ef76c8a1cc71c077a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253516

commit 9f9ba77c5a259ed63baa3fd252d0bcbb71727154
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253503

commit 67c9fd3eb04b308cc5cb93ff7d0d577c2a8925e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 6 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r253469

commit dbce623ff3d83fcfe0239698376521786f8e3c61
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 5 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253433

commit 5ea4f5db7091b010d4448237cd2cd6e3301ae023
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 4 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253390

commit e89a8e414dc8e931b31dfd0c3e159def6f1e7765
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253373

commit 5874228595f3ec988cca6ac4f1e1b094c0156235
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Oct 2 20:44:07 2017 +0200

    backport: i386.c (ix86_split_idivmod): Use mode instead of always SImode for DIV and MOD in REG_EQUAL notes.
    
            Backported from mainline
            2017-09-30  Jakub Jelinek  <jakub@redhat.com>
    
            * config/i386/i386.c (ix86_split_idivmod): Use mode instead of
            always SImode for DIV and MOD in REG_EQUAL notes.
    
    From-SVN: r253364

commit 2bce85988254e70fbcb99920bb8d18b351fa75a0
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 2 18:10:40 2017 +0000

    backport: re PR tree-optimization/82337 (ICE: SSA corruption at tree-ssa-coalesce.c:1010)
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gimple-ssa-strength-reduction.c (find_phi_def): Don't record a
            phi definition if the PHI result appears in an abnormal PHI.
            (find_basis_for_base_expr): Don't record a basis if the LHS of the
            basis appears in an abnormal PHI.
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gcc.c-torture/compile/pr82337.c: New file.
    
    From-SVN: r253361

commit cf8ce4dd65282f54fc84218a214aaef5359b0f67
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon Oct 2 13:58:56 2017 +0200

    Handle libbacktrace in contrib/gcc_update
    
            contrib/
            * gcc_update (files_and_dependencies): Handle libbacktrace.
    
    trunk r253346
    
    From-SVN: r253349

commit 1611c7d968c5f4059deebc4947c839c698b0d0cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 2 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r253331

commit 409e4d28fee906162d3dc63eb8b7a006f300d777
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 1 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253324

commit 904ff03f2dc60587a40c605234569ceee94f562e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 30 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r253312

commit f418b52ac52cf09b6700dcc72923a600c601470f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 29 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r253271

commit 6bc08902f0ff5eacace42a47f4547a9c2abd78c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 28 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253245

commit dce41b9e58bc03bd3024707130d8ffe60bf7a1f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 27 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253219

commit df57bd21b567a41595f32f88cbfad8487920dc58
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253182

commit d30443c7b7bbf2be090fbc6d015a6451a01c4df6
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Mon Sep 25 23:49:58 2017 +0000

    [Patch, Darwin]  Fix 81037 by adjutng headers
    
    2017-09-26  Iain Sandoe  <iain@codesourcery.com>
                Ryan Mounce  <ryan@mounce.com.au>
    
            PR bootstrap/81037
            Backport from mainline r235362
            2016-04-22  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * system.h (list, map, set, vector): Include conditionally.
            * auto-profile.c (INCLUDE_MAP, INCLUDE_SET): Define.
            * graphite-isl-ast-to-gimple.c (INCLUDE_MAP): Define.
            * ipa-icf.c (INCLUDE_LIST): Define.
            * ipa-icf-gimple.c (INCLUDE_LIST): Define.
            * config/sh/sh.c (INCLUDE_VECTOR): Define.
            * config/sh/sh_treg_combine.cc (INCLUDE_ALGORITHM): Define.
            (INCLUDE_LIST, INCLUDE_VECTOR): Define.
            * fortran/trans-common.c (INCLUDE_MAP): Define.
    
            Backport from mainline r235361
            2016-04-22  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * auto-profile.c: Remove <string.h> include.
            * diagnostic.c: Remove <new> include.
            * genmatch.c: Likewise.
            * pretty-print.c: Likewise.
            * toplev.c: Likewise
            * c/c-objc-common.c: Likewise.
            * cp/error.c: Likewise.
            * fortran/error.c: Likewise.
    
    
    
    Co-Authored-By: Ryan Mounce <ryan@mounce.com.au>
    
    From-SVN: r253181

commit 0d4232b64705e8d51c0d7ee2fe04e9fde750218b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 25 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253128

commit e07183d1afbfa421dc772f2bb64589ac8fb33e79
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 24 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253119

commit 05fb7b992c742b461927328796ddc9800c699345
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 23 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253111

commit 8810189691a1d97322878938c26ffe2e3f12dfbd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 22 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253085

commit 5280b1967d8dedf7d1abdf403b649adeccb00fce
Author: Alexander Monakov <amonakov@ispras.ru>
Date:   Fri Sep 22 00:56:16 2017 +0300

    re PR tree-optimization/71702 (dr_group_sort_cmp violates transitivity required for qsort)
    
    PR tree-optimization/71702
    
            Backport r230667
            2015-11-20  Jim Wilson  <jim.wilson@linaro.org>
    
            * tree-vect-data-refs.c (compare_tree): Call STRIP_NOPS.
    
    From-SVN: r253081

commit c0ced9e080eca19fdd48bae7e959908ce3ab31c7
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Sep 21 22:55:45 2017 +0930

    PR81996, __builtin_return_address(0) fails
    
    rs6000_return_addr assumes that the stack link is at frame+0, which is
    true for count>0.  For count==0, rs6000_return_addr is called with
    frame==frame_pointer_rtx and the stack link is *not* at frame+0 if
    -fstack-protector-all or -fsanitize=address because rs6000.h sets
    FRAME_GROWS_DOWNWARD for those options.
    
            PR target/81996
            * gcc/config/rs6000/rs6000.c (rs6000_return_addr): Use
            stack_pointer_rtx for count 0.  Update comments.  Break up
            large rtl expression.
    
    From-SVN: r253070

commit 24b0a9e2315ce74ccfa1bbfb0c50957d8723b9a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 21 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253043

commit 4bb3a2bd89fe54e480458138d6db1ab6df351983
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 20 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r252987

commit b2211c974acea7293979423be782ee7528464d5b
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 10:12:58 2017 +0200

    Ignore empty string in target attribute (PR c++/81355).
    
    2017-09-19  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * config/i386/i386.c (sorted_attr_string): Skip empty strings.
    
    From-SVN: r252965

commit 229a00b22414084d522a8b69cb33168d44b54ae7
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 10:12:35 2017 +0200

    Remove test failing on the branch.
    
    2017-09-18  Martin Liska  <mliska@suse.cz>
    
            * gcc.dg/asan/pr81224.c: Remove.
    
    From-SVN: r252964

commit adc17d24f17acfc8a90244efec028fb59a68d185
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 19 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r252958

commit 54d61eb8e89d857e935de204cf5847ab40514267
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:34:10 2017 -0400

    PR c++/80294 - ICE with constexpr and inheritance.
    
            * constexpr.c (reduced_constant_expression_p):
            A null constructor element is non-constant.
            (cxx_eval_indirect_ref): Don't VERIFY_CONSTANT before
            returning an empty base.
    
    From-SVN: r252940

commit ef2dd804cd3547e172ea327d5fb6aff3fd64961a
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:34:03 2017 -0400

    PR c++/79607 - ICE with T{} initializer
    
            * decl.c (type_dependent_init_p): Check the type of a CONSTRUCTOR.
    
    From-SVN: r252939

commit 6df911fd1d0f8d697b3a133a8c48a2ecb46f1dd0
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:33:58 2017 -0400

    PR c++/72457 - ICE with list-value-initialized base.
    
            * init.c (expand_aggr_init_1): Only handle value-init of bases.
            * constexpr.c (build_data_member_initialization): Handle multiple
            initializers for the same field.
    
    From-SVN: r252938

commit 3632267ff2d567e12f4a77d28488733d480340f8
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:33:52 2017 -0400

    PR c++/55922 - list-value-initialization of base
    
            PR c++/63151
            * init.c (expand_aggr_init_1): Handle list-initialization from {}.
    
    From-SVN: r252937

commit 38f38646d3c0b82ab77f61ae72826fd607fff1a5
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 18 13:14:45 2017 +0000

    Backport PRs 64516, 68528, 80171, 80362
    
    2017-09-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-04-10  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80362
            * fold-const.c (fold_binary_loc): Look at unstripped ops when
            looking for NEGATE_EXPR in -A / -B to A / B folding.
    
            * gcc.dg/torture/pr80362.c: New testcase.
    
            2015-11-25  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68528
            * fold-const.c (fold_binary_loc): Do not call negate_expr_p
            on stripped operands.
    
            * gcc.dg/torture/pr68528.c: New testcase.
    
            2017-03-27  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80171
            * gimple-fold.c (fold_ctor_reference): Properly guard against
            NULL return value from canonicalize_constructor_val.
    
            * g++.dg/torture/pr80171.C: New testcase.
    
            2016-06-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/64516
            * fold-const.c (fold_unary_loc): Preserve alignment when
            folding a VIEW_CONVERT_EXPR into a MEM_REF.
    
            * gcc.dg/align-3.c: New testcase.
    
    From-SVN: r252926

commit 5a623b73d0a9c7005842a13555274e2b901d583f
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Sep 18 11:09:46 2017 +0200

    Remove test failing on the branch.
    
    2017-09-18  Martin Liska  <mliska@suse.cz>
    
            * gcc.dg/asan/pr81224.c: Remove.
    
    From-SVN: r252912

commit b37b491b75555b5d907602344c4d16ea7c27c4ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 18 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r252897

commit 69cee005301dfd0682c0e1b6c69fc0b4e029b8ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 17 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r252889

commit d048728160fa8edd6e26c81bfc5b71fb949aed54
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:40:37 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * gcc.target/powerpc/pr82112.c: New test.
            * g++.dg/ext/altivec-18.C: New test.
    
    From-SVN: r252887

commit b0bbde7311f92e56f369172e5b9e1513341f618e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:39:47 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * c-common.c (sync_resolve_size): Instead of c_dialect_cxx ()
            assertion check that in the condition.
            (get_atomic_generic_size): Likewise.  Before testing if parameter
            has pointer type, if it has array type, call for C++
            default_conversion to perform array-to-pointer conversion.
    
            * c-c++-common/pr82112.c: New test.
            * gcc.dg/pr82112.c: New test.
    
    From-SVN: r252886

commit f719df942b81b24e005850d31ffed9b2097486f8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:38:53 2017 +0200

    backport: re PR c/81687 (Compiler drops label in OpenMP region)
    
            Backported from mainline
            2017-08-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/81687
            * omp-low.c (omp_copy_decl): Don't remap FORCED_LABEL or DECL_NONLOCAL
            LABEL_DECLs.
            * tree-cfg.c (move_stmt_op): Don't adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels.
            (move_stmt_r) <case GIMPLE_LABEL>: Adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels here.
    
            * testsuite/libgomp.c/pr81687-1.c: New test.
            * testsuite/libgomp.c/pr81687-2.c: New test.
    
    From-SVN: r252885

commit 6119d408010c54f4bdadad36647e4f6cb5bfb8f3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:38:01 2017 +0200

    backport: re PR target/81621 (ICE in delete_insn, at cfgrtl.c:167 with s390x cross compiler)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81621
            * bb-reorder.c (pass_partition_blocks::execute): Return TODO_df_finish
            after setting changeable df flags.
    
            * gcc.dg/pr81621.c: New test.
    
    From-SVN: r252884

commit 0770fc0ac2cfde15f472885f2930683759107da9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:37:09 2017 +0200

    backport: re PR middle-end/81052 (ICE in verify_dominators, at dominance.c:1184)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81052
            * omp-low.c (diagnose_sb_0): Handle flag_openmp_simd like flag_openmp.
            (pass_diagnose_omp_blocks::gate): Enable also for flag_openmp_simd.
    
            * c-c++-common/pr81052.c: New test.
    
    From-SVN: r252883

commit 27e6376f7d1380dde8f2efe12cbe12dca4c900d6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:36:03 2017 +0200

    backport: re PR c/45784 (gcc OpenMP - error: invalid controlling predicate)
    
            Backported from mainline
            2017-07-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/45784
            * c-omp.c (c_finish_omp_for): If the condition is wrapped in
            rhs of COMPOUND_EXPR(s), skip them and readd their lhs into
            new COMPOUND_EXPRs around the rhs of the comparison.
    
            * testsuite/libgomp.c/pr45784.c: New test.
            * testsuite/libgomp.c++/pr45784.C: New test.
    
    From-SVN: r252882

commit 5f4e933dcb589ddc276c28f76ddf2997d0bd8edb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:35:03 2017 +0200

    backport: re PR target/81766 (ICE in maybe_add_or_update_dep_1, at sched-deps.c:924 caused by r250815)
    
            Backported from mainline
            2017-08-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81766
            * function.c (thread_prologue_and_epilogue_insns): Restore
            behavior of always calling find_many_sub_basic_blocks on
            the inserted prologue.
    
            * gcc.target/i386/pr81766.c: New testcase.
    
            2017-08-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/79499
            * function.c (thread_prologue_and_epilogue_insns): Determine blocks
            for find_many_sub_basic_blocks bitmap by looking up BLOCK_FOR_INSN
            of first NONDEBUG_INSN_P in each of the split_prologue_seq and
            prologue_seq sequences - if any.
    
            * gcc.dg/pr79499.c: New test.
    
    From-SVN: r252881

commit 1f691285eaac103ee89f2e220420cb64f557fe33
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:33:53 2017 +0200

    re PR libquadmath/65757 (gfortran gives incorrect result for anint with real*16 argument)
    
            PR libquadmath/65757
            * math/roundq.c: Cherry-pick upstream glibc 2015-04-28 change.
    
    From-SVN: r252880

commit 8ca123cb3663bc9b43b63a2f367011bb7c796fea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:33:01 2017 +0200

    backport: re PR c++/80984 (ICE with label/variable ambiguity)
    
            Backported from mainline
            2017-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80984
            * cp-gimplify.c (cp_genericize): Only look for VAR_DECLs in
            BLOCK_VARS (outer) chain.
            (cxx_omp_const_qual_no_mutable): Likewise.
    
            * g++.dg/opt/nrv18.C: New test.
    
    From-SVN: r252879

commit 08e4e740608a55a4a875ee04d2556e8e15e57aaf
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 16 20:31:58 2017 +0200

    backport: re PR c++/81154 (OpenMP with shared variable in a template class crash)
    
            Backported from mainline
            2017-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81154
            * semantics.c (handle_omp_array_sections_1, finish_omp_clauses):
            Complain about t not being a variable if t is OVERLOAD even
            when processing_template_decl.
    
            * g++.dg/gomp/pr81154.C: New test.
    
    From-SVN: r252878

commit 8bfe7a5b88709a39c7dbe905e5227fdb1bb71e8b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 16 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r252867

commit 0b2cadb4521955a4349d7f9619d1ac48c701769a
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 16:11:27 2017 +0200

    Backport r251049
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-11  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/79987
            * tree-chkp.c (chkp_get_bounds_for_decl_addr): Do not instrument
            variables of void type.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-11  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/79987
            * gcc.target/i386/mpx/pr79987.c: New test.
    
    From-SVN: r252819

commit fe784c1ca73eb5f2cd49e259bf7ab0e84428f2f4
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:14:40 2017 +0200

    Backport r249728
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * asan.c (instrument_derefs): Bail out inner references
            that are hard register variables.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * gcc.dg/asan/pr81224.c: New test.
    
    From-SVN: r252813

commit ea92ffc562b76087a7a362dd56c2633e8b0ddafe
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:14:19 2017 +0200

    Backport r251530
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * ipa-icf-gimple.c (func_checker::compare_tree_list_operand):
            Rename to ...
            (func_checker::compare_asm_inputs_outputs): ... this function.
            (func_checker::compare_gimple_asm): Use the function to compare
            also ASM constrains.
            * ipa-icf-gimple.h: Rename the function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * gcc.dg/ipa/pr82001.c: New test.
    
    From-SVN: r252812

commit b29facbd2b423f3ad897306d418cade0d5f9e714
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:14:01 2017 +0200

    Backport r251020
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * c-attribs.c (handle_target_attribute):
            Report warning for an empty string argument of target attribute.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * g++.dg/other/pr81355.C: New test.
    
    From-SVN: r252811

commit e20b4361767c6bcfc605ae4bd39a013ec618f05f
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:13:42 2017 +0200

    Backport r250951
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * ipa-icf-gimple.c (func_checker::compare_cst_or_decl): Consider
            LABEL_DECLs that can be from a different function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * gcc.dg/ipa/pr81696.c: New test.
    
    From-SVN: r252810

commit ba2a82273e96d1785994a9d596ca01018e5b6a70
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:13:21 2017 +0200

    Backport r250336
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-19  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/63361
            * c-c++-common/ubsan/float-cast-overflow-1.c: Add either
            -ffloat-store or -mieee for targets that need it.
    
    From-SVN: r252809

commit 29702edd6a6778e11fe05600ee6e99c786862443
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:13:04 2017 +0200

    Backport r249735
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * ipa-visibility.c (non_local_p): Handle visibility.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * c-attribs.c (handle_alias_ifunc_attribute): Append ifunc alias
            to a function declaration.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * gcc.target/i386/pr81128.c: New test.
    
    From-SVN: r252808

commit 93e19831d072c7b70518f00abd9d3687643efd4e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 15 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r252776

commit 8137419578caa42c23c3f3eaffa2330dbc55537e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r252741

commit 0efb6a4bbc9dd3ec9b0eb4449710be193cf2e1e8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 16:28:18 2017 +0100

    Fix libstdc++ tests using invalid effective-target
    
            * testsuite/20_util/reference_wrapper/80504.cc: Do not use invalid
            effective-target.
            * testsuite/22_locale/conversions/buffer/2.cc: Likewise.
            * testsuite/28_regex/basic_regex/ctors/basic/iter.cc: Likewise. Fix
            use of test_container.
    
    From-SVN: r252093

commit 20df2bb41f27dcd3bae16ce2f16b89b3e5223979
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 16:28:12 2017 +0100

    PR libstdc++/81468 constrain std::chrono::time_point constructor
    
            PR libstdc++/81468
            * include/std/chrono (time_point(const time_point<_Dur2>&)): Add
            missing constraint from LWG DR 1177.
            * testsuite/20_util/duration/cons/dr1177.cc: New.
            * testsuite/20_util/time_point/cons/81468.cc: New.
            * testsuite/20_util/duration/literals/range.cc: Update dg-error line.
    
    From-SVN: r252092

commit ec0fa188dc55119992f58f6315d18c52117180ae
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:22:50 2017 +0100

    Fix broken URLs in libstdc++ API docs
    
            * doc/doxygen/mainpage.html: Fix broken URLs.
    
    From-SVN: r252073

commit 609ef3026cdb9abdfac86e4366c349c93b68c61c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:10:44 2017 +0100

    PR libstdc++/81835 fix broken URLs in libstdc++ docs
    
            PR libstdc++/81835
            * doc/xml/manual/extensions.xml: Replace unstable URL.
            * doc/html/manual/ext_demangling.html: Regenerate.
            * libsupc++/cxxabi.h (__cxa_demangle): Fix broken URL.
    
    From-SVN: r252069

commit b7ccdb6b229b8ac3dad511c50a109887db14f4fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 13 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r252048

commit daf2ab6176c2a6fd1b30a1f0071e8c074f2de4b2
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 12 21:07:30 2017 +0000

    backport: re PR target/81833 (PowerPC: VSX: Miscompiles ffmpeg's scalarproduct_int16_vsx at -O1)
    
    [gcc]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * config/rs6000/altivec.md (altivec_vsum2sws): Convert from a
            define_insn to a define_expand.
            (altivec_vsum2sws_direct): New define_insn.
            (altivec_vsumsws): Convert from a define_insn to a define_expand.
    
    [gcc/testsuite]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * gcc.target/powerpc/pr81833-1.c: New file.
            * gcc.target/powerpc/pr81833-2.c: New file.
    
    From-SVN: r252044

commit d9221e0d7af6288a52021c95e2364465ef61bf71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 12 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r251993

commit 08bb186611f199c39513e59bf81eec97b83edbe0
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 11 21:53:38 2017 +0000

    xtensa: fix PR target/82181
    
    2017-09-11  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            * config/xtensa/xtensa.c (xtensa_mem_offset): Check that both
            words of DImode object are reachable by xtensa_uimm8x4 access.
    
    From-SVN: r251990

commit c1ea4dd9291079f34de278875c9021485c87bbef
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 11 11:44:11 2017 +0100

    PR c++/81852 define feature-test macro for -fthreadsafe-statics
    
    gcc/c-family:
    
            PR c++/81852
            * c-cppbuiltin.c (c_cpp_builtins): Define __cpp_threadsafe_static_init.
    
    gcc/testsuite:
    
            PR c++/81852
            * g++.dg/cpp1y/feat-cxx11.C: Check __cpp_threadsafe_static_init.
            * g++.dg/cpp1y/feat-cxx14.C: Likewise.
            * g++.dg/cpp1y/feat-cxx98.C: Likewise.
            * g++.dg/cpp1y/feat-neg.C: Likewise.
    
    From-SVN: r251975

commit 5bbbda4d3938753acda6c3558bfa168aa93a2e4d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 11 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251953

commit 48c47ba49d101b94dc9ea7912f7a07f1b6c2e30b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 10 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r251942

commit eb50a954e3eacad3bcabd99b561724db78b7dbaa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251914

commit e916aa1ae2379a1735578a29a17639c00202fba5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251858

commit dc9555c8b96d318c1876782d58c69e8b420c75a4
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Sep 7 07:22:07 2017 +0000

    x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Replace 'struct ucontext' with ucontext_t.
    
    2017-09-07  Matthias Klose  <doko@ubuntu.com>
    
            * include/x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Replace
            'struct ucontext' with ucontext_t.
            * include/i386-signal.h (HANDLE_DIVIDE_OVERFLOW): Likewise.
            * include/s390-signal.h (HANDLE_DIVIDE_OVERFLOW): Likewise.
    
    From-SVN: r251832

commit 32aa26f09ec911af481938e897f4458ea687dfaa
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Sep 7 07:18:57 2017 +0000

    asan_linux.cc: Include <signal.h>
    
    2017-09-07  Matthias Klose  <doko@ubuntu.com>
    
            * asan/asan_linux.cc: Include <signal.h>
    
    From-SVN: r251830

commit dc517c7308573905a2ecac4c942a2cdc322a4003
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Sep 7 07:17:17 2017 +0000

    backport: re PR sanitizer/81066 (sanitizer_stoptheworld_linux_libcdep.cc:276:22: error: aggregate ‘sigaltstack handler_stack’ has incomplete type and cannot be defined)
    
    2017-09-07  Matthias Klose  <doko@ubuntu.com>
    
            Backported from mainline
            2017-07-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81066
            * sanitizer_common/sanitizer_linux.h: Cherry-pick upstream r307969.
            * sanitizer_common/sanitizer_linux.cc: Likewise.
            * sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc: Likewise.
            * tsan/tsan_platform_linux.cc: Likewise.
    
    From-SVN: r251829

commit 158d2f50fa8ce7d935a12468d9c0112db967bef6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 7 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r251822

commit 495c4e6ea86f52457c9bc43090ada19005ef1ae6
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Sep 6 18:48:50 2017 +0000

    backport: re PR tree-optimization/81987 (ICE in verify_ssa with -O3 -march=skylake-avx512)
    
    [gcc]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * gimple-ssa-strength-reduction.c (insert_initializers): Don't
            insert an initializer in a location not dominated by the stride
            definition.
    
    [gcc/testsuite]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * g++.dg/torture/pr81987.C: New file.
    
    From-SVN: r251817

commit 418f8806d98c9a13ac97b3b59aa1bc78c1702f38
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 6 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251747

commit e834fadf024565cff573a470b35eb8ff517ccb99
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 5 21:52:01 2017 +0000

    backport: re PR tree-optimization/81503 (Wrong code at -O2)
    
    [gcc]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Ensure
            folded constant fits in the target type; reorder tests for clarity.
    
    [gcc/testsuite]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gcc.c-torture/execute/pr81503.c: New file.
    
    From-SVN: r251745

commit 3b08d87888677a1fcf583b3dd63d8c6f8dc13f8f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 5 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r251686

commit a5ad587d9742624e9e7942c64337c781e527c826
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 18:09:05 2017 +0100

    PR libstdc++/81751 don't call fflush(NULL)
    
    Backport from mainline
    2017-08-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79820
            PR libstdc++/81751
            * config/io/basic_file_stdio.cc (sys_open(FILE*, ios_base::openmode)):
            Call fflush on the stream instead of calling sync() while _M_cfile is
            null. Restore original value of errno.
            * testsuite/ext/stdio_filebuf/char/79820.cc: New.
            * testsuite/ext/stdio_filebuf/char/81751.cc: New.
    
    From-SVN: r251680

commit 0a3b7ea2654a1881da415ea016a22f715e2eb159
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 18:09:01 2017 +0100

    PR libstdc++/53984 handle exceptions in basic_istream::sentry
    
    Backport from mainline
    2017-07-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/53984
            * include/bits/basic_ios.h (basic_ios::_M_setstate): Adjust comment.
            * include/bits/istream.tcc (basic_istream::sentry): Handle exceptions
            during construction.
            * include/std/istream: Adjust comments for formatted input functions
            and unformatted input functions.
            * testsuite/27_io/basic_fstream/53984.cc: New.
            * testsuite/27_io/basic_istream/sentry/char/53984.cc: New.
    
    From-SVN: r251679

commit ae83fe38934b02c45ce4130692b0440e5ecc4559
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 18:08:56 2017 +0100

    PR libstdc++/81017 add noexcept to std::function move operations
    
    Backport from mainline
    2017-06-08  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81017
            * include/std/functional (function::function(function&&))
            (function::operator=(function&&)): Add noexcept.
            * testsuite/20_util/function/assign/move.cc: Check for noexcept.
            * testsuite/20_util/function/cons/move.cc: Likewise.
    
    From-SVN: r251678

commit cc4f8ae5900c397c70cc356acc0b46d74c7872d4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 18:08:51 2017 +0100

    Add noexcept to shared_ptr owner comparisons (LWG 2873)
    
    Backport from mainline
    2017-06-05  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/shared_ptr_base.h (__shared_ptr::owner_before)
            (__weak_ptr::owner_before, _Sp_owner_less::operator()): Add noexcept
            specifiers as per LWG 2873 and LWG 2942.
            * testsuite/20_util/owner_less/noexcept.cc: New.
            * testsuite/20_util/shared_ptr/observers/owner_before.cc: Test
            noexcept guarantees.
            * testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.
    
    From-SVN: r251677

commit 62576f0b220e11d7192d789ec337f3732c83c636
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:41:38 2017 +0100

    PR c++/82039 suppress -Wzero-as-null-pointer-constant warning
    
    Backport from mainline
    2017-08-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR c++/82039
            * include/ext/new_allocator.h (__gnu_cxx::new_allocator::allocate):
            Adjust null pointer constant to avoid warning.
    
    From-SVN: r251672

commit 3495af3f697b552eed2f622ad18bf1a8447d6b09
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:41:34 2017 +0100

    PR libstdc++/81891 fix double-free in hashtable constructor
    
    Backport from mainline
    2017-08-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81891
            * include/bits/hashtable.h (_Hashtable(_InputIterator, _InputIterator,
            size_type, const _H1&, const _H2&, const _Hash&, const _Equal&,
            const _ExtractKey&, const allocator_type&)): Let destructor do clean
            up if an exception is thrown.
            * testsuite/23_containers/unordered_map/cons/81891.cc: New.
    
    From-SVN: r251671

commit da5667f12acacc3ea7792c86fd4d0d0530e1e6a1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:41:29 2017 +0100

    PR libstdc++/81599 fix typo in Doxygen comments
    
    Backport from mainline
    2017-07-31  Marek Polacek  <polacek@redhat.com>
    
            PR libstdc++/81599
            * include/bits/stl_stack.h: Fix typo.
    
    From-SVN: r251670

commit 6d0de8ed95799afd1d463e3b0015462ec9f9d9fc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:41:25 2017 +0100

    PR libstdc++/81338 correctly manage string capacity
    
    Backport from mainline
    2017-07-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81338
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI] (basic_string):
            Declare basic_stringbuf to be a friend.
            * include/bits/sstream.tcc (basic_stringbuf::overflow)
            [_GLIBCXX_USE_CXX11_ABI]: Use unused capacity before reallocating.
            * include/std/sstream (basic_stringbuf::__xfer_bufptrs): Update string
            length to buffer length.
            * testsuite/27_io/basic_stringstream/assign/81338.cc: New.
    
    From-SVN: r251669

commit a925b08cfa4327f528f53ea031af46df1a66f9ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 4 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251630

commit 2bf7d391f6bd6d80e61e5a254e820ee4e44e5a1a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 3 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r251621

commit 3466739ca6469955d598d4f76a758dee869232fe
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Sat Sep 2 22:13:49 2017 +0200

    backport: re PR fortran/81770 (Bogus warning: Pointer in pointer assignment might outlive the pointer target)
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * expr.c (gfc_check_pointer_assign): Improve the check whether pointer
            may outlive pointer target.
    
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * gfortran.dg/warn_target_lifetime_3.f90: Fix a typo.
            * gfortran.dg/warn_target_lifetime_4.f90: New testcase.
    
    From-SVN: r251620

commit 4775a301b2e19cf01fbe1fa3ba8bd32efc0c6c93
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251614

commit 8656885d533a8542d83f3f49b84bc966d179b76b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Sep 1 13:15:44 2017 +0100

    Make std::scoped_allocator_adaptor's OUTERMOST recursive
    
    Backport from mainline
    2016-10-06  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2011.xml: Update status.
            * doc/html/manual/status.html: Regenerate.
            * include/std/scoped_allocator (__outer_allocator_t, __outermost_type):
            New helpers for recursive OUTERMOST.
            (__outermost): Use __outermost_type::_S_outermost.
            (__do_outermost, scoped_allocator_adaptor::__outermost_type): Remove.
            (scoped_allocator_adaptor::__outermost_alloc_traits): Use new
            __outermost_type helper.
            (scoped_allocator_adaptor::_Constructible): New alias template.
            (scoped_allocator_adaptor::scoped_allocator_adaptor<_Outer2>):
            Constrain template constructors.
            * testsuite/20_util/scoped_allocator/3.cc: New test.
            * testsuite/20_util/scoped_allocator/outermost.cc: New test.
    
    From-SVN: r251590

commit 588f1e660534c73b663b128a13081490ad3baf45
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 1 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251577

commit 1ddfab0ae3c2b4fb76866285b83115d1a774de48
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 31 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251550

commit 812f0e701452f6fa1f9d4a56e7ef0f20d5fed1be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 30 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251441

commit a8083093b31fc0ed16c42ffb17d03959747bebab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 29 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251392

commit 598059cf9aa9f14d49ea71e4c004e4262947fd71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 28 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251370

commit c9e727acfea79aa9fe19eb1367ea7ca623025b86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 27 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r251364

commit 791820402af2e47ff3fcc8b4123494f1b343e101
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 26 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r251359

commit 1b41770dd2943f454f098a72f9c8fde9363e1297
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 25 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251343

commit 0a00e7a2ed2267ad7350ac304db223ebdff30b4d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 24 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251322

commit eef5175cec549c705fc1b7cf431f6089ffe64745
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251297

commit 655b1fec3fcca98ea94bf12fdec80ee20b866002
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Aug 22 15:08:51 2017 -0500

    backport: re PR target/80210 (ICE in in extract_insn, at recog.c:2311 on ppc64 for with __builtin_pow)
    
    gcc/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * config/rs6000/rs6000.c (rs6000_activate_target_options): New function.
            (rs6000_set_current_function): Rewrite function to use it.
    
    gcc/testsuite/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * gcc.target/powerpc/pr80210.c: New test.
    
    From-SVN: r251291

commit 753706ed4724154ba63df77e02e0024ffecdcb46
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 10:32:36 2017 +0000

    backport: re PR lto/81487 ([mingw32] ld.exe: error: asprintf failed)
    
    lto-plugin/
            Backport from 2017-07-26 gcc-7-branch r250562.
            PR lto/81487
            * lto-plugin.c (claim_file_handler): Use xasprintf instead of
            asprintf.
            [hi!=0]: Swap hi and lo arguments supplied to xasprintf.
    gcc/
            Backport from 2017-07-26 gcc-7-branch r250562.
            PR 81487
            * tree-ssa-structalias.c (alias_get_name): Use xasprintf instead
            of asprintf.
    
    From-SVN: r251272

commit 5568877d2c9ae00ea677fab426cf301ae7bbab79
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 10:07:51 2017 +0000

    backport: re PR rtl-optimization/75964 (insn combiner removes comparison after ABS)
    
    gcc/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * simplify-rtx.c (simplify_const_relational_operation): Remove
            invalid handling of comparisons of integer ABS.
    gcc/testsuite/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * gcc.dg/torture/pr75964.c: New test.
    
    From-SVN: r251271

commit 70c2a2b6138b34e2987bf51bf7813160c1ef7642
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 10:01:38 2017 +0000

    backport: re PR target/81305 ([avr] avrtiny uses LDS for SREG in ISR routines which is out of range of LDS.)
    
    gcc/
            Backport from 2017-07-05 trunk r249995.
            PR target/81305
            * config/avr/avr.c (avr_out_movhi_mr_r_xmega) [CONSTANT_ADDRESS_P]:
            Don't depend on "optimize > 0".
            (out_movhi_r_mr, out_movqi_mr_r): Same.
            (out_movhi_mr_r, out_movqi_r_mr): Same.
            (avr_address_cost) [CONSTANT_ADDRESS_P]: Don't depend cost for
            io_address_operand on "optimize > 0".
    gcc/testsuite/
            Backport from 2017-07-05 trunk r249995, r249996.
            PR target/81305
            * gcc.target/avr/isr-test.h: New file.
            * gcc.target/avr/torture/isr-01-simple.c: New test.
            * gcc.target/avr/torture/isr-02-call.c: New test.
            * gcc.target/avr/torture/isr-03-fixed.c: New test.
    
    From-SVN: r251270

commit 0884c17d93e7622535d21969418b8aa43ec5092e
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 09:48:48 2017 +0000

    backport: re PR target/79883 (avr i18n: untranslated "interrupt" or "signal")
    
    gcc/
            Backport from 2016-06-15 trunk r237486.
            Backport from 2017-07-12 trunk r250156.
            PR target/79883
            PR target/67353
            * config/avr/avr.c (avr_set_current_function): Warn misspelled ISR
            only if -Wmisspelled-isr is on.  In diagnostic messages: Quote
            keywords and (parts of) identifiers.
            [WITH_AVRLIBC]: Warn functions named "ISR", "SIGNAL" or "INTERUPT".
            * doc/invoke.texi (AVR Options) <-Wmisspelled-isr>: Document.
    
    From-SVN: r251269

commit 9d41b2f566b74cd6d5ebf0f045843a8142fb30e5
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 09:29:30 2017 +0000

    backport: re PR target/80462 ([avr] Incorrect "warning: uninitialized variable 'xxx' put into program memory area" for identical strings)
    
    gcc/
            Backport from 2017-04-19 trunk r246997.
            PR target/80462
            * config/avr/avr.c (tree.h): Include it.
            (hash-table.h): Include it.
            (hash-set.h): Include it.
            (symtab.h): Include it.
            (inchash.h): Include it.
            (function.h): Include it.
            (hash-map.h): Include it.
            (plugin-api.h): Include it.
            (ipa-ref.h): Include it.
            (cgraph.h): Include it.
            (avr_encode_section_info): Don't warn for uninitialized progmem
            variable if it's just an alias.
    
            Backport from 2017-07-12 trunk r250151.
            PR target/81407
            * config/avr/avr.c (avr_encode_section_info)
            [progmem && !TREE_READONLY]: Error if progmem object needs
            constructing.
    
    From-SVN: r251267

commit 2e3d6f9ba8ebb733a94fa9b7ece683cbe4ce7906
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 08:40:15 2017 +0000

    backport: re PR target/81910 ([avr] ICE with "address" attribute on type)
    
    gcc/
            Backport from 2017-08-22 trunk r251256.
            PR target/81910
            * config/avr/avr.c (avr_handle_addr_attribute): Early return if
            not VAR_P. Filter attribute warnings with OPT_Wattributes.
            (avr_attribute_table) <io, io_low, address>: Initialize
            .decl_required with true.
    
    From-SVN: r251261

commit c96840b886f5ed19e5c7140cf2b10263bcb7ba54
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 22 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r251250

commit 300f411691e73d6e6c0d26e3e0a95a7e33dfdc6d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 21 00:16:32 2017 +0000

    Daily bump.
    
    From-SVN: r251212

commit 0237583fc912e9960e882df9e5f12c3d439a5a75
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 20 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251202

commit f8f3a6ff0a6a739d0a9486f2bd53429ecab71db1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Aug 19 10:25:14 2017 +0200

    re PR target/81894 (Typo in x86 built-in function list)
    
            PR target/81894
            * doc/extend.texi (x86 Built-in Functions): Correct the name of
            __builtin_ia32_lzcnt_u16.
    
    From-SVN: r251200

commit 18bf520c7fd3985a430bc974b9f78d391f082959
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 19 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r251193

commit eb58aeb0e01e563e6984d882977d1e08ac48cb37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 18 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251175

commit 6703b4bafd0f01a326630a43c7635f3d862fb560
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Aug 17 21:39:20 2017 +0200

    backport: re PR target/81861 (ASan pr64820.c testcase segfaults with LTO and -fstack-protector-strong)
    
            Backport from mainline
            2017-08-17  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR target/81861
            * config/i386/i386.c (ix86_option_override_internal): Save target
            specific options after ix86_stack_protector_guard_reg was changed.
    
    From-SVN: r251164

commit 9fd8cec2ea0be6bae290193b24e054150fa15591
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 17 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r251136

commit b0db6ba4d61747d6f97e83767a5b4ce0a3971bf8
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Aug 16 14:13:27 2017 +0000

    backport: re PR tree-optimization/81354 (Segmentation fault in SSA Strength Reduction using -O3)
    
    [gcc]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Insert on edges rather than explicitly creating landing pads.
            (analyze_candidates_and_replace): Commit edge inserts.
    
    
    [gcc/testsuite]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * g++.dg/torture/pr81354.C: New file.
    
    From-SVN: r251122

commit 99c29ae34a4129cc9ecb3cbc8d3a64ae125b58e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 16 00:17:39 2017 +0000

    Daily bump.
    
    From-SVN: r251110

commit 5d38124263e6c30fadf5e1e87287f4aa0289f2be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 14 00:16:40 2017 +0000

    Daily bump.
    
    From-SVN: r251077

commit e4f807f8156f513cbd8d6f83b7c4184228b0c49b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 13 00:16:32 2017 +0000

    Daily bump.
    
    From-SVN: r251069

commit 1572c5a40338a85450f31e21e6f6a29b6f2b74b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 12 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251061

commit 37aca1d477437bd8b3d1c10a4f0c25c997eeb512
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 11 00:16:43 2017 +0000

    Daily bump.
    
    From-SVN: r251042

commit 20ec9cdece5980bf4105953d1cd376798a0b1508
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r251014

commit dfb049d78429ca1d61d57f96a0557572d007b10d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 9 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r250980

commit 9e44ba4f75b90eae331dfd1f9ad4ce649deaeef2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250937

commit 0b8c7dd0ffe12fdd2a46ab9815d77182bab6832d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 7 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r250905

commit 8def470e96a4faf67026d320647567c240035c37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 6 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r250891

commit 87174362156430ed3ea995c701c0a21f04e4bb1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 5 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r250886

commit c6e4216297b3e7759ea3bc89e8ee0ad5d08abc9a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 4 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r250861

commit 05659118f8876b07ebcc508052131d7772faaa43
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 3 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r250838

commit 85414f534201a905dc438a9f1b04ef1b5cb7defb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 2 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r250807

commit 29c0f1e56351dbc90c94cfbf5365474fdcfddaca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 1 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250753

commit 4da69f0e523714752b67e07d1065be53b3bf4698
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 31 11:29:58 2017 +0200

    re PR sanitizer/81604 (Ubsan type reporting can be bogus in some cases)
    
            PR sanitizer/81604
            * ubsan.c (ubsan_type_descriptor): For UBSAN_PRINT_ARRAY don't
            change type to the element type, instead add eltype variable and
            use it where we are interested in the element type.
    
            * c-c++-common/ubsan/pr81604.c: New test.
    
    From-SVN: r250733

commit 63208112f3e39ee40f1bd6a3f8d60e1c1e8d4ec4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 31 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r250722

commit 298af5275c837389977ee3a900fc7136d5dddabe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 30 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r250715

commit e455bfbfe045ea694fd12989f79b46d25cf7961b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 29 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250690

commit 4fb3f8f60d6e06cdf43af58464b21d4746117616
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 28 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250644

commit da79256ec525bbb5cf1ae716344354fb9f26eaab
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 27 11:43:01 2017 +0200

    re PR tree-optimization/81555 (Wrong code at -O1)
    
            PR tree-optimization/81555
            PR tree-optimization/81556
            * tree-ssa-reassoc.c (rewrite_expr_tree): Add NEXT_CHANGED argument,
            if true, force CHANGED for the recursive invocation.
            (reassociate_bb): Remember original length of ops array, pass
            len != orig_len as NEXT_CHANGED in rewrite_expr_tree call.
    
            * gcc.c-torture/execute/pr81555.c: New test.
            * gcc.c-torture/execute/pr81556.c: New test.
    
    From-SVN: r250616

commit cefc659dcd5fb732672454cc11b1d1222878dda0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 27 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250598

commit 5070106bbb7e78d61b89caba13246cae5e6dc47a
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Jul 26 15:55:41 2017 +0000

    backport: rs6000.c (rs6000_elf_output_toc_section_asm_op): Align .toc.
    
    2017-07-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r235874
            2016-05-04  Alan Modra  <amodra@gmail.com>
    
            * config/rs6000/rs6000.c (rs6000_elf_output_toc_section_asm_op):
            Align .toc.
    
    From-SVN: r250580

commit 55d773401a2c8c387bf4fca699bab8f35cc15ed9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250551

commit 803bdb10605c0ca118d2dc727ece1903c7aae52c
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jul 25 19:44:10 2017 +0000

    backport: re PR tree-optimization/81162 (UBSAN switch triggers incorrect optimization in SLSR)
    
    [gcc]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Don't
            replace a negate with an add.
    
    [gcc/testsuite]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gcc.dg/ubsan/pr81162.c: New file.
    
    From-SVN: r250544

commit 8e7acaede1f10bcd82f5d53ace4aa3a4e6e1165e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 25 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250490

commit 65f69f384f61bb46bb8aca44fec5c3c293982f75
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Jul 24 22:29:02 2017 +0200

    re PR target/80569 (i686: "shrx" instruction generated in 16-bit mode)
    
            PR target/80569
            * config/i386/i386.c (ix86_option_override_internal): Disable
            BMI, BMI2 and TBM instructions for -m16.
    
    testsuite/ChangeLog:
    
            PR target/80569
            * gcc.target/i386/pr80569.c: New test.
    
    From-SVN: r250486

commit ecd2329336b4e2197f9b161bc4818f03ae199abe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 24 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r250467

commit 40dd2bcfad307163d36ab91faf7509b958f06a2e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250454

commit 776d8c2521478c5f92509c749dde5876fee741e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 22 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r250447

commit f1c58541249ac2f3ab94f3d6f255a50a59f9d1d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 21 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250409

commit c488c0cfe2339142872c73d291b865d9ba75c6a1
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Thu Jul 20 22:04:02 2017 +0000

    re PR go/81393 (Bootstrap failure on s390x-linux while building libgo against recent glibc)
    
            PR go/81393
    syscall: don't use GETREGS/SETREGS on s390
    
    They were removed in recent glibc.
    
    This is a backport of https://golang.org/cl/48231 to earlier branches.
    Define required type and constants in syscall package directly, don't
    try to pull them from the system header files.
    
    From-SVN: r250404

commit 123562673f40bc45265f5c2479329cab43122dcb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 20 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250373

commit 584cfed8580fe25d2b8aa6aad1ed34e9258eeb49
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 19 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250329

commit 7e212b0d5db79c2ebdd8519a953d999876cf899d
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Jul 18 23:44:03 2017 +0200

    re PR target/81471 (internal compiler error: in curr_insn_transform, at lra-constraints.c:3495)
    
            PR target/81471
            * config/i386/i386.md (rorx_immediate_operand): New mode attribute.
            (*bmi2_rorx<mode>3_1): Use rorx_immediate_operand as
            operand 2 predicate.
            (*bmi2_rorxsi3_1_zext): Use const_0_to_31_operand as
            operand 2 predicate.
            (ror,rol -> rorx splitters): Use const_int_operand as
            operand 2 predicate.
    
    testsuite/ChangeLog:
    
            PR target/81471
            * gcc.target/i386/pr81471.c: New test.
    
    From-SVN: r250322

commit a38283c94804d3336fa8f56043909d101536d042
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 18 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250291

commit 82a03b1a10d3490b12731a105d6515a8a0d6999f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 17 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r250248

commit 46b7f66445a8c999b739287035b8bcc195d189f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 16 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r250227

commit 5a2a69bf4526ef286affbd7e7a289886bac89609
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 15 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250218

commit 38ca7d2f2d951fd51399e2c7068fd84e2f2f59e9
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Jul 14 19:19:30 2017 +0200

    backport: re PR target/81375 (unrecognizable insn)
    
            Backport from mainline
            2017-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81375
            * config/i386/i386.md (divsf3): Add TARGET_SSE to TARGET_SSE_MATH.
            (rcpps): Ditto.
            (*rsqrtsf2_sse): Ditto.
            (rsqrtsf2): Ditto.
            (div<mode>3): Macroize insn from divdf3 and divsf3
            using MODEF mode iterator.
    
            Backport from mainline
            2017-07-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81300
            * config/i386/i386.md (setcc + movzbl/and to xor + setcc peepholes):
            Require dead FLAGS_REG at the beginning of a peephole.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81375
            * gcc.target/i386/pr81375.c: New test.
    
            Backport from mainline
            2017-07-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81300
            * gcc.target/i386/pr81300.c: New test.
    
    From-SVN: r250211

commit 09176aa24f95da7449bb68c78d802834280b9445
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250192

commit ec34d5cb65d5c56de84574362a3b925a77534513
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 13 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r250170

commit 4f9340b9aaf8bfd6c524cb8e4ba09e20e8bf94c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 12 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r250144

commit e60317ac59e273b7129e626c6708a98cf36830e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 11 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r250108

commit 77958d036e9f07c752dd121ce0e5133936ed38ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 10 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r250087

commit 3cd23e2fbdbf4e9a07bbe35732cfb034cc479479
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250076

commit 9a0cb9703ce752bdd055fdfa3165268b4c9c2ee6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r250069

commit 13990282fcfdff77a7b39f655a62c54d62884610
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 7 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r250044

commit d4ba265648bb075dc7d9d2cbdb0701d76e50aa61
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 6 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250009

commit 741fc6f258b6d31e8d40ecbb9244e365a83486b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 5 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r249979

commit 366426e0cabab5627dc8a955c0764539b5462265
Author: Thomas Preud'homme <thopre01@gcc.gnu.org>
Date:   Tue Jul 4 13:52:47 2017 +0000

    Fix ChangeLog format in r249901
    
    This patch fixes relative pathnames in gcc/ChangeLog for r249901.
    
    From-SVN: r249969

commit 16b277761b432510ad6dcf72d877ae72b5f0a4b7
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Jul 4 11:25:10 2017 +0100

    Use ucontext_t not struct ucontext in linux-unwind.h files.
    
    Current glibc no longer gives the ucontext_t type the tag struct
    ucontext, to conform with POSIX namespace rules.  This requires
    various linux-unwind.h files in libgcc, that were previously using
    struct ucontext, to be fixed to use ucontext_t instead.  This is
    similar to the removal of the struct siginfo tag from siginfo_t some
    years ago.
    
    This patch changes those files to use ucontext_t instead.  As the
    standard name that should be unconditionally safe, so this is not
    restricted to architectures supported by glibc, or conditioned on the
    glibc version.
    
    Tested compilation together with current glibc with glibc's
    build-many-glibcs.py.
    
            * config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),
            config/alpha/linux-unwind.h (alpha_fallback_frame_state),
            config/bfin/linux-unwind.h (bfin_fallback_frame_state),
            config/i386/linux-unwind.h (x86_64_fallback_frame_state,
            x86_fallback_frame_state), config/m68k/linux-unwind.h (struct
            uw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),
            config/pa/linux-unwind.h (pa32_fallback_frame_state),
            config/sh/linux-unwind.h (sh_fallback_frame_state),
            config/tilepro/linux-unwind.h (tile_fallback_frame_state),
            config/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use
            ucontext_t instead of struct ucontext.
    
    From-SVN: r249958

commit dadb919da51421d4a8c562768cf4f0277f45856b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 4 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249939

commit 90386c51812a0916ad9ff61e1b1eba8d9c0ae8f3
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Mon Jul 3 09:38:23 2017 +0000

    Fix gcc.target/arm/fpscr.c
    
    2017-07-03  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/testsuite/
        * gcc.target/arm/fpscr.c: Require arm_vfp_ok instead of arm_fp_ok and
        add -mfpu=vfp -mfloat-abi=softfp instead of fp_ok options.
    
    From-SVN: r249901

commit 8ca32c9674541a701f6cccf87f98452829af27ef
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Jul 3 08:43:40 2017 +0000

    Backport "Fix sigsegv in find_same_succ_bb"
    
    2017-07-03  Tom de Vries  <tom@codesourcery.com>
    
            backport from mainline:
            2017-07-03  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/81192
            * tree-ssa-tail-merge.c (same_succ_flush_bb): Handle
            BB_SAME_SUCC (bb) == NULL.
    
            * gcc.dg/pr81192.c: New test.
    
    From-SVN: r249899

commit 90e3efeb667584689b78d5a6bed06e476893bc34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 3 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r249889

commit 01847f42cb260e9160c96a5b5cb73a96486d3305
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 2 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249873

commit e01b1e7727b316bcd4904180c61e541e7adbaf63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 1 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249858

commit b85d3657da97b53be088f72e58b8737211a53a8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 30 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r249823

commit b5a49473db6d8b04213476fceeed4a543f7b3fab
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 29 18:57:47 2017 +0000

    backport: re PR sanitizer/78992 (Incorrect sigaction definition on 32-bit sparc)
    
            Backport from mainline
            2017-01-10  James Clarke  <jrtc27@jrtc27.com>
    
            PR sanitizer/78992
            * sanitizer_common/sanitizer_platform_limits_posix.h
            (struct __sanitizer_sigaction): Cherry-pick upstream r291561.
    
            2016-11-30  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR sanitizer/78532
            * sanitizer_common/sanitizer_platform_limits_posix.h
            (__sanitizer_sigaction): Adjust for sparc targets and various Glibc
            versions.
    
    From-SVN: r249808

commit ba9fe0d06a86bffae6d1de08d4e815736fbf9ffe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 29 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r249766

commit 74fc5cc3c41cbcb839bf45b1fbf6ea3ce0bc3132
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 28 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249714

commit 7a37c5e1ed1b4a4d265a620ad9505f2dc1a460cb
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jun 27 23:45:45 2017 +0200

    Revert: backport PRs 80382, 80966
    
    Those two changes aren't actually applicable to 5.  Sorry for the noise.
    
    
            Revert:
            Backports from trunk:
    
            2017-04-12  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80382
            * config/rs6000/sync.md (atomic_load<mode>, atomic_store<mode): Test
            for quad_address_p for TImode, instead of just not indexed_address.
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * config/rs6000/rs6000.c (rs6000_emit_allocate_stack): Assert that
            gen_add3_insn did not fail.
            * config/rs6000/rs6000.md (add<mode>3): If asked to add a constant to
            r0, construct that number in a temporary reg and add that reg to r0.
            If asked to put the result in r0 as well, fail.
    
    
            Revert:
            Backport from trunk:
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * gcc.target/powerpc/stack-limit.c: New testcase.
    
    From-SVN: r249711

commit 098c10ec560aaab5a34c5fee99e6228ab59c3022
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jun 27 20:24:51 2017 +0200

    Backport PRs 61729, 73650, 77850, 80382, 80618, 80692, 80902, 80966
    
            Backports from trunk:
    
            2016-08-15  Segher Boessenkool  <segher@kernel.crashing.org>
            PR rtl-optimization/73650
            * lra-constraints.c (simple_move_p): If the insn is multiple_sets
            it is not a simple move.
    
            2017-01-20  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/61729
            PR target/77850
            * config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Adjust address to
            read from, for big endian.
    
            2017-04-12  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80382
            * config/rs6000/sync.md (atomic_load<mode>, atomic_store<mode): Test
            for quad_address_p for TImode, instead of just not indexed_address.
    
            2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80692
            * real.c (do_compare): Give decimal_do_compare preference over
            comparing just the signs.
    
            2017-05-31  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80618
            * config/rs6000/vector.md (*vector_uneq<mode>): Write the nor in the
            splitter result in the canonical way.
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * config/rs6000/rs6000.c (rs6000_emit_allocate_stack): Assert that
            gen_add3_insn did not fail.
            * config/rs6000/rs6000.md (add<mode>3): If asked to add a constant to
            r0, construct that number in a temporary reg and add that reg to r0.
            If asked to put the result in r0 as well, fail.
    
            2017-06-23  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80902
            * builtins.c (expand_builtin_atomic_fetch_op): If emitting code after
            a call, force the call to not be a tail call.
    
    gcc/testsuite/
            Backports from trunk:
    
            2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80692
            * gcc.c-torture/execute/pr80692.c: New testcase.
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * gcc.target/powerpc/stack-limit.c: New testcase.
    
    From-SVN: r249707

commit 404d9c2d15a6771bcaf84a727f1ac07425e774ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 27 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249670

commit fb4a1c103c94ee92f05b69c350e7cc7005d6fb89
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 26 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249634

commit 4538645faeccfee2fdce61001e55ac324597641e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 25 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r249629

commit 0b9972501f9b8567a39c92df65c2724928456086
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 24 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249616

commit fa4c08c4e6683037b92a87d5644615f5ea980699
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Fri Jun 23 16:15:56 2017 +0000

    [ARM] Rename FPSCR builtins to correct names
    
    2017-06-23  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
        gcc/
        * gcc/config/arm/arm-builtins.c (arm_init_builtins): Rename
        __builtin_arm_ldfscr to __builtin_arm_get_fpscr, and rename
        __builtin_arm_stfscr to __builtin_arm_set_fpscr.
    
        gcc/testsuite/
        * gcc.target/arm/fpscr.c: New file.
    
    From-SVN: r249598

commit feaee53d0d4e30f5ee8c7e6111ea15cf7ec8caec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249580

commit 009631d0cb156c56728ca51a3b61d5e023064e2f
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:31:28 2017 +0200

    Backport r248729
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-31  Martin Liska  <mliska@suse.cz>
    
            PR target/79155
            * config/i386/cpuid.h: Fix typo in a comment in cpuid.h.
    
    From-SVN: r249538

commit 99f81a6cc8418f03b131c2135165068ebf7e2e62
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:30:56 2017 +0200

    Backport r248647
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-30  Martin Liska  <mliska@suse.cz>
    
            PR other/80909
            * auto-profile.c (get_function_decl_from_block): Fix
            parenthesis.
    
    From-SVN: r249537

commit 610b70cd057f048e1470fae4cd7b63d1a29c6a41
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:30:42 2017 +0200

    Backport r248489
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * params.def: Bound partial-inlining-entry-probability param.
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * g++.dg/ipa/pr80212.C: Remove the test as it does not longer
            split at the problematic spot.
            * gcc.dg/ipa/pr48195.c: Change 101 to 100 as 101 is no longer
            a valid value of the param.
    
    From-SVN: r249536

commit 838cfee5715d248c033288bd76aae362ae3d6f72
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:29:22 2017 +0200

    Backport r248089
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-16  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79850.
            * ipa-devirt.c (odr_types_equivalent_p): Fix typo.
    
    From-SVN: r249535

commit 0fce4ae689c4032eb57d13eb9e53a97ed4064048
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:29:02 2017 +0200

    Backport r248060
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-15  Martin Liska  <mliska@suse.cz>
    
            PR driver/31468
            * gcc.c (process_command): Do not allow empty argument of -o option.
    
    From-SVN: r249534

commit 7656da15019e23d8745860cc1d3459db229bd3b4
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:28:44 2017 +0200

    Backport r247507
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Add missing preposition.
            * gcov.c (function_info::function_info): Properly fill up
            all member variables.
    
    From-SVN: r249533

commit f4c3933e3beeffb18e86f5ad106b32ebc87d0697
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:28:22 2017 +0200

    Backport r247485
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            PR other/80589
            * common.opt: Fix typo.
            * doc/invoke.texi: Likewise.
    
    From-SVN: r249532

commit 391cc3169ad5c68a6f3061dd6d3710c7e1e3df32
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:28:05 2017 +0200

    Backport r247377
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Enhance documentation of gcov.
    
    From-SVN: r249531

commit 8ded369a4705157428d55436362e21379cac2e97
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:27:50 2017 +0200

    Backport r247376
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Sort options in alphabetic order.
            * doc/gcov-dump.texi: Likewise.
            * doc/gcov-tool.texi: Likewise.
            * gcov.c (print_usage): Likewise.
            * gcov-dump.c (print_usage): Likewise.
            * gcov-tool.c (print_merge_usage_message): Likewise.
            (print_rewrite_usage_message): Likewise.
            (print_overlap_usage_message): Likewise.
    
    From-SVN: r249530

commit 1c1758975fb0717bb1cbdd5203c2e5bddbe83915
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:27:31 2017 +0200

    Backport r247375
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/53915
            * gcov.c (format_gcov): Print 'NAN %' when top > bottom.
    
    From-SVN: r249529

commit 6f697a822bbf4713e4f8369a7401c70ce1bd4b10
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:26:58 2017 +0200

    Backport r247371
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR driver/56469
            * coverage.c (coverage_remove_note_file): New function.
            * coverage.h: Declare the function.
            * toplev.c (finalize): Clean if an error has been seen.
    
    From-SVN: r249528

commit 75681ee7ce0aadc71c33f8b478bb6f39a9b6a587
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 22 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249489

commit 50095b59d14f2fac2f4f1b0ace01b5c2e3c86e5a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 21 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249429

commit df5a684bedd7e8e92199e47c15ba9494dfd41ee3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 20 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r249391

commit 6995d252f90013c3414ef8e913e44d70dd8982e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 19 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249353

commit de3e4a101e02d82d35a72053a002595911c16a26
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 18 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249340

commit 7457a76e1f544da83dbbfc50c6ff43e051cd40dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 17 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249313

commit 3fa625272b07f02d0854d5e497e78d2d1b137ad4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 15:22:30 2017 +0100

    Fix std::wbuffer_convert::sync()
    
            * include/bits/locale_conv.h (wbuffer_convert::sync): Fix condition.
            * testsuite/22_locale/conversions/buffer/2.cc: New.
    
    From-SVN: r249259

commit 9a2f8681e270adc14d9a0ed30780fdcea1e33c0e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:55:17 2017 +0100

    Backport libstdc++ doc improvements from mainline
    
            * doc/xml/manual/appendix_contributing.xml: Link to the list of bad
            names, and link to the test docs and note higher DejaGnu version
            requirement.
            * doc/xml/manual/allocator.xml: Fix ViewCVS URLs.
            * doc/xml/manual/mt_allocator.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r249254

commit 7f8a20c8029d95218a2b8a67332e26cbb6d757ac
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:55:11 2017 +0100

    Fix missing return in libstdc++ header
    
            * include/bits/locale_conv.h (wbuffer_convert::_M_put): Add missing
            return statement.
    
    From-SVN: r249253

commit b90b40c6bae33a7f2bcc1ba987c851bc241a5f7c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 16 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r249230

commit b0c94355acdaf54413660f75c4303db5b012d4f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 15 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r249209

commit 1f19eeff72e4a59b0dcd0da57300b2a482cb85fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249176

commit 123325b316df6873a970828891f4bbfad9876ef6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 13 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r249139

commit 7790a01efe95cb9d0cecc8803f29a5d78c8e5788
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249107

commit 0c721bfdaa194e11839957841be4d63128362b53
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 11 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249099

commit b44cec4c3f29592b9d6b3a3d51d2d54a652046a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r249084

commit 25fbfe1a4e6d69c4c1a2871f98eaf31dc94a57fb
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Jun 9 21:23:48 2017 +0200

    backport: re PR fortran/70601 ([OOP] ICE on procedure pointer component call)
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * trans-expr.c (gfc_conv_procedure_call): Fix detection of allocatable
            function results.
    
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * gfortran.dg/proc_ptr_comp_50.f90: New test.
    
    From-SVN: r249073

commit 0bc645ce07f84e3b7c977ac3822b610558acc579
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Jun 9 19:21:15 2017 +0000

    sparc: Further adjustments for alloca epilogue blockage.
    
    gcc/
    
            PR target/80968
            * config/sparc/sparc.c (sparc_flat_expand_epilogue): Don't
            emit frame blockage here.
            (sparc_expand_epilogue): Do it here.
            * config/sparc/sparc.md (return expander): Emit frame blockage
            for alloca here too.
    
    From-SVN: r249072

commit 2293c46bfa8564952543137c2eff07f3d63e8382
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 9 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r249042

commit 24cc8a7421666010dfd53d41d33e387bd52c7c93
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 8 21:23:34 2017 +0200

    re PR c/81006 (ICE with zero-size array and #pragma omp task depend)
    
            PR c/81006
            * c-typeck.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * semantics.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * c-c++-common/gomp/pr81006.c: New test.
    
    From-SVN: r249038

commit 05647e5de50eeff033c17c0aa82dd0458607cc63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 8 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r249000

commit a374b7fb23e84269c6a988e71177d5bb0524422e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jun 7 18:00:56 2017 +0100

    PR libstdc++/81002 fix std::basic_regex range constructor
    
            PR libstdc++/81002
            * include/bits/regex_compiler.h (__compile_nfa): Add template argument
            list to specify traits type.
            * testsuite/28_regex/basic_regex/ctors/basic/iter.cc: New.
    
    From-SVN: r248993

commit 7b4fd8edcf32ecad22e8299ccdf4523ef805d585
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 7 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r248939

commit 5c47ba9c68368c4d1d51beec22fe5ebbc183a77e
Author: David S. Miller <davem@davemloft.net>
Date:   Tue Jun 6 18:54:55 2017 +0000

    sparc: Fix stack references in return delay slot.
    
    gcc/
    
            PR target/80968
            * config/sparc/sparc.c (sparc_expand_prologue): Emit frame
            blockage if function uses alloca.
    
    gcc/testsuite/
    
            * gcc.target/sparc/sparc-ret-3.c: New test.
    
    From-SVN: r248931

commit 2c72059d5d4ff2d6eea032f3d88ba94b9c6ac58e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 6 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248905

commit 8dc436c51043b7a42f0c66951042817df95085d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 5 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248864

commit 3fe9c923496a20663791574ffb246a0ba199d324
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 4 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r248856

commit 67aad15653452df117b43fc84ee1009c48d8d5ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 3 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r248848

commit 330482a728fdafba8977be1ed3182d98dc623f16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 2 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r248807

commit 02853cd988273c970cb3bffe827cf45543e8b574
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 1 23:51:51 2017 +0200

    backport: rdseedintrin.h (_rdseed16_step, [...]): Uglify argument names and/or local variable names in inline functions.
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            * config/i386/rdseedintrin.h (_rdseed16_step, _rdseed32_step,
            _rdseed64_step): Uglify argument names and/or local variable names
            in inline functions.
            * config/i386/rtmintrin.h (_xabort): Likewise.
            * config/i386/avx512vlintrin.h (_mm256_ternarylogic_epi64,
            _mm256_mask_ternarylogic_epi64, _mm256_maskz_ternarylogic_epi64,
            _mm256_ternarylogic_epi32, _mm256_mask_ternarylogic_epi32,
            _mm256_maskz_ternarylogic_epi32, _mm_ternarylogic_epi64,
            _mm_mask_ternarylogic_epi64, _mm_maskz_ternarylogic_epi64,
            _mm_ternarylogic_epi32, _mm_mask_ternarylogic_epi32,
            _mm_maskz_ternarylogic_epi32): Likewise.
            * config/i386/lwpintrin.h (__llwpcb, __lwpval32, __lwpval64,
            __lwpins32, __lwpins64): Likewise.
            * config/i386/avx2intrin.h (_mm_i32gather_pd, _mm_mask_i32gather_pd,
            _mm256_i32gather_pd, _mm256_mask_i32gather_pd, _mm_i64gather_pd,
            _mm_mask_i64gather_pd, _mm256_i64gather_pd, _mm256_mask_i64gather_pd,
            _mm_i32gather_ps, _mm_mask_i32gather_ps, _mm256_i32gather_ps,
            _mm256_mask_i32gather_ps, _mm_i64gather_ps, _mm_mask_i64gather_ps,
            _mm256_i64gather_ps, _mm256_mask_i64gather_ps, _mm_i32gather_epi64,
            _mm_mask_i32gather_epi64, _mm256_i32gather_epi64,
            _mm256_mask_i32gather_epi64, _mm_i64gather_epi64,
            _mm_mask_i64gather_epi64, _mm256_i64gather_epi64,
            _mm256_mask_i64gather_epi64, _mm_i32gather_epi32,
            _mm_mask_i32gather_epi32, _mm256_i32gather_epi32,
            _mm256_mask_i32gather_epi32, _mm_i64gather_epi32,
            _mm_mask_i64gather_epi32, _mm256_i64gather_epi32,
            _mm256_mask_i64gather_epi32): Likewise.
            * config/i386/pmm_malloc.h (_mm_malloc, _mm_free): Likewise.
            * config/i386/ia32intrin.h (__writeeflags): Likewise.
            * config/i386/avx512pfintrin.h (_mm512_mask_prefetch_i32gather_pd,
            _mm512_mask_prefetch_i32gather_ps, _mm512_mask_prefetch_i64gather_pd,
            _mm512_mask_prefetch_i64gather_ps, _mm512_prefetch_i32scatter_pd,
            _mm512_prefetch_i32scatter_ps, _mm512_mask_prefetch_i32scatter_pd,
            _mm512_mask_prefetch_i32scatter_ps, _mm512_prefetch_i64scatter_pd,
            _mm512_prefetch_i64scatter_ps, _mm512_mask_prefetch_i64scatter_pd,
            _mm512_mask_prefetch_i64scatter_ps): Likewise.
            * config/i386/gmm_malloc.h (_mm_malloc, _mm_free): Likewise.
            * config/i386/avx512fintrin.h (_mm512_ternarylogic_epi64,
            _mm512_mask_ternarylogic_epi64, _mm512_maskz_ternarylogic_epi64,
            _mm512_ternarylogic_epi32, _mm512_mask_ternarylogic_epi32,
            _mm512_maskz_ternarylogic_epi32, _mm512_i32gather_ps,
            _mm512_mask_i32gather_ps, _mm512_i32gather_pd, _mm512_i64gather_ps,
            _mm512_i64gather_pd, _mm512_i32gather_epi32, _mm512_i32gather_epi64,
            _mm512_i64gather_epi32, _mm512_i64gather_epi64): Likewise.
    
    From-SVN: r248804

commit e9a58d2ce9cb53b7d9f40a7ba683851432513ac0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 1 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r248767

commit dba944bbc3c87b611809bbe0b16ba802727cae7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 31 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r248716

commit 1c8937f155911fb82c55e110ba37e75faeccd2de
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:42:48 2017 +0000

    gcc: xtensa: fix fprintf format specifiers
    
    HOST_WIDE_INT may not be long as assumed in print_operand and
    xtensa_emit_call. Use HOST_WIDE_INT_PRINT_DEC/HOST_WIDE_INT_PRINT_HEX
    format strings instead of %ld/0x%lx. This fixes incorrect assembly code
    generation by the compiler running on armhf host.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2017-05-29  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_emit_call): Use
            HOST_WIDE_INT_PRINT_HEX instead of 0x%lx format string.
            (print_operand): Use HOST_WIDE_INT_PRINT_DEC instead of %ld
            format string.
    
    From-SVN: r248709

commit fd5d7a625565759b4ed9468378b69a195d26132a
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:41:58 2017 +0000

    xtensa: Fix PR target/78603
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2016-11-29  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (hwloop_optimize): Don't emit zero
            overhead loop start between a call and its CALL_ARG_LOCATION
            note.
    
    From-SVN: r248708

commit 1ceaef04a87f20d083a1c33eccdd79366ea4b6b9
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:40:34 2017 +0000

    xtensa: don't use unwind-dw2-fde-dip with elf targets
    
    Define LIB2ADDEH_XTENSA_UNWIND_DW2_FDE to unwind-dw2-fde.c in
    xtensa/t-elf and to unwind-dw2-fde-dip.c in xtensa/t-linux and use
    LIB2ADDEH_XTENSA_UNWIND_DW2_FDE in LIB2ADDEH definition.
    
    This fixes build for elf target with windowed xtensa core that currently
    breaks with the following error message:
    
      unwind-dw2-fde-dip.c:36:40: fatal error: elf.h: No such file or directory
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    libgcc/
            Backport from mainline
            2016-10-18  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/t-elf (LIB2ADDEH_XTENSA_UNWIND_DW2_FDE): New
            definition.
            * config/xtensa/t-linux (LIB2ADDEH_XTENSA_UNWIND_DW2_FDE): New
            definition.
            * config/xtensa/t-windowed (LIB2ADDEH): Use
            LIB2ADDEH_XTENSA_UNWIND_DW2_FDE defined by either xtensa/t-elf
            or xtensa/t-linux.
    
    From-SVN: r248707

commit f00ff8126fc5d7f2fe96360b45f8ae77bade5fcf
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:39:41 2017 +0000

    xtensa: fix libgcc build with --text-section-literals
    
    Functions __muldf3_aux, __divdf3_aux, __mulsf3_aux and __divsf3_aux
    don't start with leaf_entry, so they need explicit .literal_position,
    otherwise libgcc build fails in the presence of --text-section-literals.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    libgcc/
            Backport from mainline
            2016-02-17  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/ieee754-df.S (__muldf3_aux, __divdf3_aux): Add
            .literal_position before the function.
            * config/xtensa/ieee754-sf.S (__mulsf3_aux, __divsf3_aux):
            Likewise.
    
    From-SVN: r248706

commit ae3d752158aae5ee6ba38cf6b16e65c0fc2435fc
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:38:45 2017 +0000

    xtensa: fix xtensa_fallback_frame_state for call0 ABI
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2015-09-15  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.h (DWARF_ALT_FRAME_RETURN_COLUMN): New
            definition.
            (DWARF_FRAME_REGISTERS): Reserve space for one extra register in
            call0 ABI.
    
    libgcc/
            Backport from mainline
            2015-09-15  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/linux-unwind.h (xtensa_fallback_frame_state):
            Add support for call0 ABI.
    
    From-SVN: r248705

commit 5385af9b463a7b26e9857744f259ac7574b52770
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:37:42 2017 +0000

    xtensa: fix TLS calls for call0 ABI
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2015-09-15  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_call_tls_desc): Use a10 or a2
            to pass TLS call argument, according to current ABI.
            * config/xtensa/xtensa.md (tls_call pattern): Use callx8 or
            callx0 for TLS call, according to current ABI.
    
    From-SVN: r248704

commit 03ca272fcdf074e918cc754b76d2cdfe2c6b64d0
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:32:21 2017 +0000

    xtensa: fix _Unwind_GetCFA
    
    Returning context->cfa in _Unwind_GetCFA makes CFA point one stack frame
    higher than what was actually used by code at context->ra. This results
    in invalid CFA value in signal frames and premature unwinding completion
    in forced unwinding used by uClibc NPTL thread cancellation.
    Returning context->sp from _Unwind_GetCFA makes all CFA values valid and
    matching code that used them.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    libgcc/
            Backport from mainline
            2015-08-18  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/unwind-dw2-xtensa.c (_Unwind_GetCFA): Return
            context->sp instead of context->cfa.
    
    From-SVN: r248703

commit 1cf85cd9fb42c84c0fd30508dea40870c9a12f6b
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue May 30 23:31:36 2017 +0000

    xtensa: use unwind-dw2-fde-dip instead of unwind-dw2-fde
    
    This allows having exception cleanup code in binaries that don't
    register their unwind tables.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    libgcc/
            Backport from mainline
            2015-08-18  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/t-windowed (LIB2ADDEH): Replace unwind-dw2-fde
            with unwind-dw2-fde-dip.
    
    From-SVN: r248702

commit 3cc088dd9dc8caf41e1540f273bbcdc545393c9c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:27:04 2017 +0200

    backport: Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the environment.
    
            Backported from mainline
            2017-04-25  Jakub Jelinek  <jakub@redhat.com>
    
            * Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the
            environment.
    
    From-SVN: r248673

commit ec650160945edac3555ecf38a3a23477c72c053c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:26:33 2017 +0200

    backport: re PR rtl-optimization/80385 (Segfault in commutative_operand_precedence() rtlanal.c:3373)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80385
            * simplify-rtx.c (simplify_unary_operation_1): Don't transform
            (not (neg X)) into (plus X -1) for complex or non-integral modes.
    
            * g++.dg/opt/pr80385.C: New test.
    
    From-SVN: r248672

commit da086d5e0c0e96189d45aa80b9456d9f3ace6103
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:25:50 2017 +0200

    backport: re PR libgomp/80394 (Empty OpenMP task is wrongly removed when optimizing)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/80394
            * omp-low.c (scan_omp_task): Don't optimize away empty tasks
            if they have any depend clauses.
    
            * testsuite/libgomp.c/pr80394.c: New test.
    
    From-SVN: r248671

commit b399c1b5dd0d162afb6918a7bdc9ce6f8b2596e0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:25:10 2017 +0200

    backport: re PR c++/80363 (#'vec_cond_expr' not supported by dump_expr#<expression error>)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80363
            * error.c (dump_expr): Handle VEC_COND_EXPR like COND_EXPR.
    
            * g++.dg/ext/pr80363.C: New test.
    
    From-SVN: r248670

commit 5c9109679c5f8f49e2970324f53f24f1568589f2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:24:21 2017 +0200

    backport: re PR c++/80176 (cannot bind reference to static member function using object access expression)
    
            Backported from mainline
            2017-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80176
            * tree.c (lvalue_kind): For COMPONENT_REF with BASELINK second
            operand, if it is a static member function, recurse on the
            BASELINK.
    
            * g++.dg/init/ref23.C: New test.
    
    From-SVN: r248669

commit 6bf1a10ca1c20d493c33ccf7849e60bf9a8cf038
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:23:29 2017 +0200

    backport: re PR target/80286 (AVX2 _mm_cvtsi128_si32 doesn't return a proper 32bits int)
    
            Backported from mainline
            2017-04-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/80286
            * config/i386/i386.c (ix86_expand_args_builtin): If op has scalar
            int mode, convert_modes it to mode as unsigned, otherwise use
            lowpart_subreg to mode rather than SImode.
            * config/i386/sse.md (<mask_codefor>ashr<mode>3<mask_name>,
            ashr<mode>3, ashr<mode>3<mask_name>, <shift_insn><mode>3<mask_name>):
            Use DImode instead of SImode for the shift count operand.
            * config/i386/mmx.md (mmx_ashr<mode>3, mmx_<shift_insn><mode>3):
            Likewise.
    
            * gcc.target/i386/avx-pr80286.c: New test.
            * gcc.dg/pr80286.c: New test.
    
    From-SVN: r248668

commit 43df5a7cc3dc7496cee74c5772d5b667f92d7662
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:22:41 2017 +0200

    backport: re PR debug/80025 (ICE w/ -O2 (-O3, -Ofast) -g -ftracer (infinite recursion in rtx_equal_for_cselib_1))
    
            Backported from mainline
            2017-03-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/80025
            * cselib.c (cselib_hasher::equal): Pass 0 to rtx_equal_for_cselib_1.
            (rtx_equal_for_cselib_1): Add depth argument.  If depth
            is 128, don't look up VALUE locs and punt.  Increment
            depth in recursive calls when walking VALUE locs.
    
            * gcc.dg/torture/pr80025.c: New test.
    
    From-SVN: r248667

commit d650ab0ed20086aa516bc005099b7370c8d39043
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:21:17 2017 +0200

    backport: env.c (initialize_env): Initialize stacksize to 0.
    
            Backported from mainline
            2017-03-30  Jakub Jelinek  <jakub@redhat.com>
    
            * env.c (initialize_env): Initialize stacksize to 0.
    
    From-SVN: r248666

commit c919f41bddee9bfd4669fddefc16570dc60cc76f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:20:45 2017 +0200

    backport: re PR sanitizer/80168 (ICE in make_decl_rtl, at varasm.c:1311 w/ VLA and -fsanitize=address)
    
            Backported from mainline
            2017-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/80168
            * asan.c (instrument_derefs): Copy over last operand from
            original COMPONENT_REF to the new COMPONENT_REF with
            DECL_BIT_FIELD_REPRESENTATIVE.
            * ubsan.c (instrument_object_size): Likewise.
    
            * gcc.dg/asan/pr80168.c: New test.
    
    From-SVN: r248665

commit df974487f892203325685b9e4d566f97db99a322
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:20:03 2017 +0200

    backport: re PR rtl-optimization/80112 (ICE in doloop_condition_get at loop-doloop.c:158)
    
            Backported from mainline
            2017-03-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80112
            * loop-doloop.c (doloop_condition_get): Don't check condition
            if cmp isn't SET with IF_THEN_ELSE src.
    
            * gcc.dg/pr80112.c: New test.
    
    From-SVN: r248664

commit ac9fcfb72b38b307b5f0d5bf3c88cb56309ddfe6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:17:54 2017 +0200

    backport: re PR c++/80141 (ICE with pragma omp declare)
    
            Backported from mainline
            2017-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80141
            * semantics.c (finish_omp_clause) <case OMP_CLAUSE_SIMDLEN,
            case OMP_CLAUSE_ALIGNED>: Call maybe_constant_value only when not
            processing_template_decl.
    
            * g++.dg/gomp/pr80141.C: New test.
    
    From-SVN: r248663

commit 108358c7692648b5d4b84ed0877504a208bf5034
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:17:18 2017 +0200

    backport: re PR c++/80129 (wrong code with ternary struct assignment to const)
    
            Backported from mainline
            2017-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80129
            * gimplify.c (gimplify_modify_expr_rhs) <case COND_EXPR>: Clear
            TREE_READONLY on result if writing it more than once.
    
            * g++.dg/torture/pr80129.C: New test.
    
    From-SVN: r248662

commit 61384973125cc0c0c530a2e696cb14deb261931e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:16:31 2017 +0200

    backport: re PR c/80097 (internal compiler error in c_fully_fold_internal with std=c89 and -fsanitize=float-divide-by-zero)
    
            Backported from mainline
            2017-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/80097
            * c-typeck.c (build_binary_op): Add EXCESS_PRECISION_EXPR only around
            optional COMPOUND_EXPR with ubsan instrumentation.
    
            * gcc.dg/ubsan/pr80097.c: New test.
    
    From-SVN: r248661

commit d0332e3701009ca08109e8d1740608a2adc50054
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Tue May 30 10:15:55 2017 +0200

    backport: re PR c++/79896 (ICE in gimplify_expr, at gimplify.c:11950 on non-int128 target)
    
            Backported from mainline
            2017-03-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79896
            * decl.c (finish_enum_value_list): If value is error_mark_node,
            don't copy it and change its type.
            * init.c (constant_value_1): Return error_mark_node if DECL_INITIAL
            of CONST_DECL is error_mark_node.
    
            * g++.dg/ext/int128-5.C: New test.
    
    From-SVN: r248660

commit 5d54a48d9dadb2f9ce4d5c0ad514141c29c8aa8a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:15:05 2017 +0200

    backport: re PR c++/79896 (ICE in gimplify_expr, at gimplify.c:11950 on non-int128 target)
    
            Backported from mainline
            2017-03-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79896
            * decl.c (finish_enum_value_list): If value is error_mark_node,
            don't copy it and change its type.
            * init.c (constant_value_1): Return error_mark_node if DECL_INITIAL
            of CONST_DECL is error_mark_node.
    
            * g++.dg/ext/int128-5.C: New test.
    
    From-SVN: r248659

commit 4ff2190b680908df7dbe8a50439983c5ec9b3e3e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:13:33 2017 +0200

    backport: re PR sanitizer/79944 (asan: incorrect instrumentation of atomic operations)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/79944
            * asan.c (get_mem_refs_of_builtin_call): For BUILT_IN_ATOMIC* and
            BUILT_IN_SYNC*, determine the access type from the size suffix and
            always build a MEM_REF with that type.  Handle forgotten
            BUILT_IN_SYNC_FETCH_AND_NAND_16 and BUILT_IN_SYNC_NAND_AND_FETCH_16.
    
            * c-c++-common/asan/pr79944.c: New test.
    
    From-SVN: r248658

commit a8072ee317d80b74a3f1240a4f23e68a34979016
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:09:40 2017 +0200

    backport: re PR target/79932 (_mm512_packus_epi32 does not compile under -O0)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79932
            * config/i386/avx512vlintrin.h (_mm256_cmpge_epi32_mask,
            _mm256_cmpge_epi64_mask, _mm256_cmpge_epu32_mask,
            _mm256_cmpge_epu64_mask, _mm256_cmple_epi32_mask,
            _mm256_cmple_epi64_mask, _mm256_cmple_epu32_mask,
            _mm256_cmple_epu64_mask, _mm256_cmplt_epi32_mask,
            _mm256_cmplt_epi64_mask, _mm256_cmplt_epu32_mask,
            _mm256_cmplt_epu64_mask, _mm256_cmpneq_epi32_mask,
            _mm256_cmpneq_epi64_mask, _mm256_cmpneq_epu32_mask,
            _mm256_cmpneq_epu64_mask, _mm256_mask_cmpge_epi32_mask,
            _mm256_mask_cmpge_epi64_mask, _mm256_mask_cmpge_epu32_mask,
            _mm256_mask_cmpge_epu64_mask, _mm256_mask_cmple_epi32_mask,
            _mm256_mask_cmple_epi64_mask, _mm256_mask_cmple_epu32_mask,
            _mm256_mask_cmple_epu64_mask, _mm256_mask_cmplt_epi32_mask,
            _mm256_mask_cmplt_epi64_mask, _mm256_mask_cmplt_epu32_mask,
            _mm256_mask_cmplt_epu64_mask, _mm256_mask_cmpneq_epi32_mask,
            _mm256_mask_cmpneq_epi64_mask, _mm256_mask_cmpneq_epu32_mask,
            _mm256_mask_cmpneq_epu64_mask, _mm_cmpge_epi32_mask,
            _mm_cmpge_epi64_mask, _mm_cmpge_epu32_mask, _mm_cmpge_epu64_mask,
            _mm_cmple_epi32_mask, _mm_cmple_epi64_mask, _mm_cmple_epu32_mask,
            _mm_cmple_epu64_mask, _mm_cmplt_epi32_mask, _mm_cmplt_epi64_mask,
            _mm_cmplt_epu32_mask, _mm_cmplt_epu64_mask, _mm_cmpneq_epi32_mask,
            _mm_cmpneq_epi64_mask, _mm_cmpneq_epu32_mask, _mm_cmpneq_epu64_mask,
            _mm_mask_cmpge_epi32_mask, _mm_mask_cmpge_epi64_mask,
            _mm_mask_cmpge_epu32_mask, _mm_mask_cmpge_epu64_mask,
            _mm_mask_cmple_epi32_mask, _mm_mask_cmple_epi64_mask,
            _mm_mask_cmple_epu32_mask, _mm_mask_cmple_epu64_mask,
            _mm_mask_cmplt_epi32_mask, _mm_mask_cmplt_epi64_mask,
            _mm_mask_cmplt_epu32_mask, _mm_mask_cmplt_epu64_mask,
            _mm_mask_cmpneq_epi32_mask, _mm_mask_cmpneq_epi64_mask,
            _mm_mask_cmpneq_epu32_mask, _mm_mask_cmpneq_epu64_mask): Move
            definitions outside of __OPTIMIZE__ guarded section.
    
            * gcc.target/i386/pr79932-2.c: New test.
    
    From-SVN: r248657

commit a79b735de43ab1deb25b2b38fa13c47d77f55d9b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:08:59 2017 +0200

    backport: re PR target/79932 (_mm512_packus_epi32 does not compile under -O0)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79932
            * config/i386/avx512bwintrin.h (_mm512_packs_epi32,
            _mm512_maskz_packs_epi32, _mm512_mask_packs_epi32,
            _mm512_packus_epi32, _mm512_maskz_packus_epi32,
            _mm512_mask_packus_epi32): Move definitions outside of __OPTIMIZE__
            guarded section.
    
            * gcc.target/i386/pr79932-1.c: New test.
    
    From-SVN: r248656

commit c74d036337754929094edc68dd0a4409244f9330
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:08:24 2017 +0200

    backport: re PR rtl-optimization/79901 (ICE in prepare_cmp_insn, at optabs.c:3904)
    
            Backported from mainline
            2017-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/79901
            * config/i386/sse.md (*avx512bw_<code><mode>3<mask_name>): Renamed to
            ...
            (*avx512f_<code><mode>3<mask_name>): ... this.
            (<code><mode>3 with maxmin code iterator): Use VI8_AVX2_AVX512F
            iterator instead of VI8_AVX2_AVX512BW.
    
            * gcc.target/i386/pr79901.c: New test.
    
    From-SVN: r248655

commit 2dd17f6abf9045072858c958237031e002fcbefd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:07:30 2017 +0200

    backport: re PR rtl-optimization/79901 (ICE in prepare_cmp_insn, at optabs.c:3904)
    
            Backported from mainline
            2017-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/79901
            * expr.c (expand_expr_real_2): For vector MIN/MAX, if there is no
            min/max expander, expand it using expand_vec_cond_expr.
    
    From-SVN: r248654

commit 5f61c5f8b8b56e58b1ff211973de3734a52f7128
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:07:03 2017 +0200

    backport: re PR target/79807 (ICE in extract_insn, at recog.c:2311 (error: unrecognizable insn))
    
            Backported from mainline
            2017-03-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79807
            * config/i386/i386.c (ix86_expand_multi_arg_builtin): If target
            is a memory operand, increase num_memory.
            (ix86_expand_args_builtin): Likewise.
    
            * gcc.target/i386/pr79807.c: New test.
    
    From-SVN: r248653

commit 62b3732dd5d251d9e972568beb2e3051718114d0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:06:28 2017 +0200

    backport: re PR target/79729 (ICE in ix86_print_operand, at config/i386/i386.c:18231)
    
            Backported from mainline
            2017-02-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79729
            * config/i386/i386.c (ix86_print_operand) <case 'R'>: Replace
            gcc_unreachable with output_operand_lossage.
    
            * gcc.target/i386/pr79729.c: New test.
    
    From-SVN: r248652

commit c33bc9c37f2ef844bb917e9317ce501aa6ee53ef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:05:47 2017 +0200

    backport: re PR middle-end/79396 (ICE (verify_flow_info failed) with -fnon-call-exceptions -O2 -march=haswell)
    
            Backported from mainline
            2017-02-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/79396
            * tree-eh.c (operation_could_trap_p, stmt_could_throw_1_p): Handle
            FMA_EXPR like tcc_binary or tcc_unary.
    
            * g++.dg/opt/pr79396.C: New test.
    
    From-SVN: r248651

commit 62ef621875d49d47c86f3be5dd5df376e8ad3032
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:04:55 2017 +0200

    backport: re PR c++/79664 (ICE with #pragma omp parallel in constexpr function)
    
            Backported from mainline
            2017-02-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79664
            * parser.c (cp_parser_omp_teams, cp_parser_omp_target): Use
            SET_EXPR_LOCATION on OMP_TARGET/OMP_TEAMS tree.
            * constexpr.c (potential_constant_expression_1): Handle
            OMP_*, OACC_* and CILK_* trees.
    
            * g++.dg/gomp/pr79664.C: New test.
    
    From-SVN: r248650

commit 49d7d5e783ffb4b6c70d50b54498e5711c341eda
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:03:03 2017 +0200

    backport: re PR target/79570 (ICE in sel-sched-ir.c:4534 in pr69956.c)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79570
            * sel-sched.c (moveup_expr_cached): Don't call sel_bb_head
            on temporarily removed DEBUG_INSNs.
    
            * gcc.dg/pr79570.c: New test.
    
    From-SVN: r248649

commit 5bf4c04fce4dbd4a0759d36607324feb65a8bc35
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:02:18 2017 +0200

    backport: re PR c++/79641 (ICE with const variable and attribute)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79641
            * c-common.c (handle_mode_attribute): Use build_qualified_type to
            preserve quals.
    
            * c-c++-common/pr79641.c: New test.
    
    From-SVN: r248648

commit e30bf737fb94815e5a73e96558aac2617fba2ebd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:01:31 2017 +0200

    backport: re PR target/79494 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2330)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79494
            * config/i386/i386.c (ix86_expand_split_stack_prologue): Call
            make_reg_eh_region_note_nothrow_nononlocal on call_insn.
    
            * gcc.dg/pr79494.c: New test.
    
    From-SVN: r248646

commit 172ee05831c9bdec19418b105e1e55c2068213b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 10:00:48 2017 +0200

    backport: re PR target/79568 (ICE in extract_insn, at recog.c:2311 for pr70325.c (with -mavx512bw))
    
            Backported from mainline
            2017-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79568
            * config/i386/i386.c (ix86_expand_builtin): Handle
            OPTION_MASK_ISA_AVX512VL and OPTION_MASK_ISA_64BIT in
            ix86_builtins_isa[fcode].isa as a requirement of those
            flags and any other flag in the bitmask.
            (ix86_init_mmx_sse_builtins): Use 0 instead of
            ~OPTION_MASK_ISA_64BIT as mask.
            * config/i386/i386-builtin.def (bdesc_special_args,
            bdesc_args): Likewise.
    
            * gcc.target/i386/pr79568-1.c: New test.
            * gcc.target/i386/pr79568-2.c: New test.
            * gcc.target/i386/pr79568-3.c: New test.
    
    From-SVN: r248645

commit 1eb05d1695bfe166882ab48c6e5a9e08d4e6a85d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:59:29 2017 +0200

    backport: re PR target/79559 (ICE in ix86_print_operand, at config/i386/i386.c:18189)
    
            Backported from mainline
            2017-02-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79559
            * config/i386/i386.c (ix86_print_operand): Use output_operand_lossage
            instead of gcc_assert for K, r and R code checks.  Formatting fixes.
    
            * gcc.target/i386/pr79559.c: New test.
    
    From-SVN: r248644

commit 78773fc61156cf85911e9526e04d708d7876772a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:58:55 2017 +0200

    backport: re PR c++/79512 (ICE: Segfault in gimple_build_call_1, at gimple.c:218)
    
            Backported from mainline
            2017-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79512
            * c-parser.c (c_parser_omp_target): For -fopenmp-simd
            ignore #pragma omp target even when not followed by identifier.
    
            * parser.c (cp_parser_omp_target): For -fopenmp-simd
            ignore #pragma omp target even when not followed by identifier.
    
            * c-c++-common/gomp/pr79512.c: New test.
    
    From-SVN: r248643

commit a0e630b3b730b1846b6e480a6d261d90a5902ecb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:58:01 2017 +0200

    backport: re PR tree-optimization/79411 (ICE: SSA corruption (fail_abnormal_edge_coalesce))
    
            Backported from mainline
            2017-02-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/79411
            * tree-ssa-reassoc.c (is_reassociable_op): Return false if
            stmt operands are SSA_NAMEs used in abnormal phis.
            (can_reassociate_p): Return false if op is SSA_NAME used in abnormal
            phis.
    
            * gcc.c-torture/compile/pr79411.c: New test.
    
    From-SVN: r248642

commit fa0533fcfc81da7c5360ebe202e3892a2cefbadc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:57:10 2017 +0200

    backport: re PR middle-end/79399 (GCC fails to compile big source at -O0)
    
            Backported from mainline
            2017-02-07  Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR middle-end/79399
            * ira-int.h (struct target_ira_int): Change x_max_struct_costs_size
            type from int to size_t.
            * ira-costs.c (struct_costs_size): Change type from int to size_t.
    
    From-SVN: r248641

commit 0ed599f50d6c7a6b667c5315e33eed184c9b3b3d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:56:11 2017 +0200

    backport: re PR target/79197 (ICE in extract_insn in gcc/recog.c:2311)
    
            Backported from mainline
            2017-02-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79197
            * config/rs6000/rs6000.md (*fixuns_trunc<mode>di2_fctiduz): Rename to ...
            (fixuns_trunc<mode>di2): ... this, remove previous expander.  Put all
            conditions on a single line.
    
            * gcc.target/powerpc/pr79197.c: New test.
            * gcc.c-torture/compile/pr79197.c: New test.
    
    From-SVN: r248640

commit bced80a1c193070129da5a73f031d328bdc30032
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:55:06 2017 +0200

    backport: re PR c++/78341 (ICE on invalid C++ code on x86_64-linux-gnu  (internal compiler error: in cp_parser_std_attribute_spec, at cp/parser.c:24597))
    
            Backported from mainline
            2017-01-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78341
            * parser.c (cp_parser_std_attribute_spec): Remove over-eager
            assertion.  Formatting fix.
    
            * g++.dg/cpp0x/pr78341.C: New test.
    
    From-SVN: r248639

commit 0eeb3228b0efcf0711b0b48315fc2b7d9773f9d2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:54:21 2017 +0200

    backport: re PR middle-end/50199 (wrong code with -flto -fno-merge-constants)
    
            Backported from mainline
            2017-01-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/50199
            * lto-lang.c (lto_post_options): Force flag_merge_constants = 1
            if it was 0.
    
            * gcc.dg/lto/pr50199_0.c: New test.
    
    From-SVN: r248638

commit 01a4072b28f06bff939d1166c626bf99f0e19970
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:53:35 2017 +0200

    backport: re PR c++/78949 (incorrect "unused variable" warning with SSE2)
    
            Backported from mainline
            2017-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78949
            * typeck.c (cp_build_unary_op): Call mark_rvalue_use on arg if it has
            vector type.
    
            * c-c++-common/Wunused-var-16.c: New test.
    
    From-SVN: r248637

commit 174e43d9a58c85d602b34700178cfb22633aa269
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:52:55 2017 +0200

    backport: re PR fortran/78866 (ICE in gimplify_adjust_omp_clauses_1, at gimplify.c:8721)
    
            Backported from mainline
            2016-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/78866
            * openmp.c (resolve_omp_clauses): Diagnose assumed size arrays in
            OpenMP map, to and from clauses.
            * trans-openmp.c: Include diagnostic-core.h, temporarily redefining
            GCC_DIAG_STYLE to __gcc_tdiag__.
            (gfc_omp_finish_clause): Diagnose implicitly mapped assumed size
            arrays.
    
            * gfortran.dg/gomp/map-1.f90: Add expected error.
            * gfortran.dg/gomp/pr78866-1.f90: New test.
            * gfortran.dg/gomp/pr78866-2.f90: New test.
    
    From-SVN: r248636

commit ce18d8b570646cd8b6c63af45f789b08025d11c0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:51:58 2017 +0200

    backport: re PR c/77767 (Side-effect from VLA array parameters lost)
    
            Backported from mainline
            2016-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/77767
            * c-decl.c (grokdeclarator): If *expr is non-NULL, append expression
            to *expr instead of overwriting it.
    
            * gcc.c-torture/execute/pr77767.c: New test.
    
    From-SVN: r248635

commit 701d112e2eb4aedafbc7084664b7d017f06cd3f0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:51:12 2017 +0200

    backport: re PR ipa/77905 (ICE at -Os and above in both 32-bit and 64-bit modes on x86_64-linux-gnu (internal compiler error: in ipa_comdats, at ipa-comdats.c:352))
    
            Backported from mainline
            2016-12-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/77905
            * ipa-pure-const.c (cdtor_p): Return true for
            DECL_STATIC_{CON,DE}STRUCTOR even when it is
            DECL_LOOPING_CONST_OR_PURE_P.
    
            * g++.dg/ipa/pr77905.C: New test.
    
    From-SVN: r248634

commit 6c23e2707005af80663979cd16222b643f50f000
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:48:57 2017 +0200

    backport: re PR target/78796 (TLS fails to link on aarch64 with -mcmodel=large)
    
            Backported from mainline
            2016-12-14  Wilco Dijkstra  <wdijkstr@arm.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78796
            * config/aarch64/aarch64.c (aarch64_classify_symbol): Merge large
            model checks into switch.
    
            * gcc.dg/tls/pr78796.c: New test.
    
    From-SVN: r248632

commit 6f5f91a2a0fe40cf3ae36f7005f27d1f361698d6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:47:05 2017 +0200

    backport: re PR c++/78761 (C++14, compiler generate mangled name that can not be demangled)
    
            Backported from mainline
            2016-12-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78761
            * cp-demangle.c (cplus_demangle_type): Demangle Dc as decltype(auto).
            * testsuite/demangle-expected: Add test for decltype(auto).
    
    From-SVN: r248631

commit 13e3a0f5445434df86658735465148777b91a6bc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:46:27 2017 +0200

    backport: re PR c++/78649 (ICE on invalid C++ code on x86_64-linux-gnu (internal compiler error: tree check: expected class ‘type’, have ‘exceptional’ (error_mark) in build_value_init_noctor, at cp/init.c:380))
    
            Backported from mainline
            2016-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78649
            * pt.c (tsubst_init): Don't call build_value_init if decl's type
            is error_mark_node.
    
            * g++.dg/cpp0x/pr78649.C: New test.
    
    From-SVN: r248630

commit a0f9462b9e6091791db6ee7c418a33759a03602e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:45:47 2017 +0200

    backport: re PR fortran/78298 (ICE in lookup_decl_in_outer_ctx, bei omp-low.c:4115)
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/78298
            * tree-nested.c (convert_local_reference_stmt): After adding
            shared (FRAME.NN) clause to omp parallel, task or target,
            add it also to all outer omp parallel, task or target constructs.
    
            * gfortran.dg/gomp/pr78298.f90: New test.
    
    From-SVN: r248629

commit e2c405ac37fdfb7a7c0709c94082173743cc06eb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:44:51 2017 +0200

    backport: re PR middle-end/69183 (ICE when using OpenMP PRIVATE keyword in OMP DO loop not explicitly encapsulated in OMP PARALLEL region)
    
            Backported from mainline
            2016-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/69183
            * omp-low.c (build_outer_var_ref): Change lastprivate argument
            to code, pass it recursively, adjust uses.  For OMP_CLAUSE_PRIVATE
            on worksharing constructs, treat it like clauses on simd construct.
            Formatting fix.
            (lower_rec_input_clauses): For OMP_CLAUSE_PRIVATE_OUTER_REF pass
            OMP_CLAUSE_PRIVATE as last argument to build_outer_var_ref.
            (lower_lastprivate_clauses): Pass OMP_CLAUSE_LASTPRIVATE instead
            of true as last argument to build_outer_var_ref.
    
            * gfortran.dg/gomp/pr69183.f90: New test.
    
    From-SVN: r248628

commit abd8d9e75dd7fb34a653592480f3a030113883d0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:44:11 2017 +0200

    backport: re PR c++/77739 (internal compiler error: in create_tmp_var, at gimple-expr.c:524)
    
            Backported from mainline
            2016-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77739
            * cp-gimplify.c (cp_gimplify_tree) <case VEC_INIT_EXPR>: Pass
            false as handle_invisiref_parm_p to cp_genericize_tree.
            (struct cp_genericize_data): Add handle_invisiref_parm_p field.
            (cp_genericize_r): Don't wrap is_invisiref_parm into references
            if !wtd->handle_invisiref_parm_p.
            (cp_genericize_tree): Add handle_invisiref_parm_p argument,
            set wtd.handle_invisiref_parm_p to it.
            (cp_genericize): Pass true as handle_invisiref_parm_p to
            cp_genericize_tree.  Formatting fix.
    
            * g++.dg/cpp1y/pr77739.C: New test.
    
    From-SVN: r248627

commit 6d2420b3e5aefb4d0ada00922f8e04e7e7c5c733
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:43:37 2017 +0200

    backport: re PR middle-end/78416 (wrong code for division by (u128)~INT64_MAX at -O0)
    
            Backported from mainline
            2016-11-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78416
            * expmed.c (expand_divmod): Use wide_int for computation of
            op1_is_pow2.  Don't set it if op1 is 0.  Formatting fixes.
            Use size <= HOST_BITS_PER_WIDE_INT instead of
            HOST_BITS_PER_WIDE_INT >= size.
    
            * gcc.dg/torture/pr78416.c: New test.
    
    From-SVN: r248626

commit 8e9838cb421ed6d95a122ca291099cf422189281
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:42:48 2017 +0200

    backport: re PR middle-end/67335 (ICE in compiling omp simd function with unused argument)
    
            Backported from mainline
            2016-11-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/67335
            * omp-low.c (simd_clone_adjust_argument_types): Use NULL prefix
            for tmp simd array if DECL_NAME (parm) is NULL.
    
            * g++.dg/vect/simd-clone-7.cc: New test.
    
    From-SVN: r248625

commit a7491394a912df22fd1737f16f045924bdc9ef6f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:41:57 2017 +0200

    backport: re PR c++/77285 (extern thread_local linkage)
    
            Backported from mainline
            2016-11-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77285
            * mangle.c (mangle_tls_init_fn, mangle_tls_wrapper_fn): Call
            check_abi_tags.
    
            * g++.dg/tls/pr77285-1.C: New test.
            * g++.dg/tls/pr77285-2.C: New test.
    
    From-SVN: r248624

commit cdd17c3b486a427de8e92d89472530f277506138
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:40:21 2017 +0200

    backport: re PR rtl-optimization/78378 (wrong code when combining shift + mult + zero_extend)
    
            Backported from mainline
            2016-11-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/78378
            * combine.c (make_extraction): Use force_to_mode for non-{REG,MEM}
            inner only if pos is 0.  Fix up formatting.
    
            * gcc.c-torture/execute/pr78378.c: New test.
    
    From-SVN: r248623

commit b26fed3a7ac8694fc6534b346e06376563c2bc9c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:39:37 2017 +0200

    backport: re PR target/78227 (ICE: unrecognizable insn: in extract_insn, at recog.c:2311 with -mavx512bw and vector comare)
    
            Backported from mainline
            2016-11-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78227
            * config/i386/i386.c (ix86_expand_sse_cmp): Force dest into
            cmp_mode argument even for -O0 if cmp_mode != mode and maskcmp.
    
            * gcc.target/i386/pr78227-1.c: New test.
            * gcc.target/i386/pr78227-2.c: New test.
    
    From-SVN: r248622

commit 3bb63fe6bfed250088b4df9a19d4025866fabc04
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:38:19 2017 +0200

    backport: hashtab.h: Use standard GPLv3 with runtime exception boilerplate.
    
            Backported from mainline
            2016-11-01  Jakub Jelinek  <jakub@redhat.com>
    
            * hashtab.h: Use standard GPLv3 with runtime exception
            boilerplate.
    
    From-SVN: r248621

commit 7b67119fd03ebf1a3961377ac5d4e94e9b5d565b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:37:39 2017 +0200

    backport: re PR c++/78089 (__builtin_shuffle parsing bug)
    
            Backported from mainline
            2016-10-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78089
            * parser.c (cp_parser_postfix_expression): Replace return statement in
            the first switch with setting postfix_expression to the return
            expression and break;.
    
            * c-c++-common/builtin-shuffle-1.c: New test.
    
    From-SVN: r248620

commit 039fc560d9c42de7947e47b1515641de8f672296
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:36:52 2017 +0200

    backport: re PR rtl-optimization/77919 (ICE converting DC to V2DF mode)
    
            Backported from mainline
            2016-10-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/77919
            * expr.c (expand_expr_real_1) <normal_inner_ref>: Only avoid forcing
            into memory if both modes are complex and their inner modes have the
            same precision.  If the two modes are different complex modes, convert
            each part separately and generate a new CONCAT.
    
            * g++.dg/torture/pr77919-2.C: New test.
    
    From-SVN: r248619

commit c1d9256ba093e101dd007607c8f8b8efbbb3b83a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:36:13 2017 +0200

    backport: re PR rtl-optimization/77919 (ICE converting DC to V2DF mode)
    
            Backported from mainline
            2016-10-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/77919
            * expr.c (expand_expr_real_1) <normal_inner_ref>: Force CONCAT into
            MEM if mode1 is not a complex mode.
    
            * g++.dg/torture/pr77919.C: New test.
    
    From-SVN: r248618

commit 39d9411b3946897ecdcf44437d987297b3df59c8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:34:46 2017 +0200

    backport: re PR sanitizer/66343 ("Error: .Lubsan_type3 already defined" with UBSan and precompiled headers)
    
            Backported from mainline
            2016-10-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/66343
            * ubsan.c (ubsan_ids): New GTY(()) array.
            (ubsan_type_descriptor, ubsan_create_data): Use ubsan_ids
            instead of static local counters.
    
            * gcc.dg/pch/pr66343-1.c: New test.
            * gcc.dg/pch/pr66343-1.hs: New file.
            * gcc.dg/pch/pr66343-2.c: New test.
            * gcc.dg/pch/pr66343-2.hs: New file.
    
    From-SVN: r248616

commit 0de4ade15173d09a26714af99da2eb03ff72e4cf
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:32:25 2017 +0200

    backport: re PR c++/77467 (Segmentation fault with switch statement in constexpr function)
    
            Backported from mainline
            2016-09-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77467
            * constexpr.c (enum constexpr_switch_state): New.
            (struct constexpr_ctx): Add css_state field.
            (label_matches): Add CTX and STMT arguments, remove I and
            DEFAULT_LABEL.  For CASE_LABEL_EXPR assert ctx->css_state != NULL,
            handle default labels according to css_state.
            (cxx_eval_statement_list): Remove statement skipping, label_matches
            and default_label handling code.
            (cxx_eval_loop_expr): Exit after first iteration even if
            switches (jump_target).
            (cxx_eval_switch_expr): Set up css_state field in ctx, if default
            label has been seen in the body, but no cases matched, evaluate
            the body second time.
            (cxx_eval_constant_expression): Handle stmt skipping and label_matches
            here.  Handle PREDICT_EXPR.  For MODIFY_EXPR or INIT_EXPR, assert
            statement is not skipped.  For COND_EXPR during skipping, don't
            evaluate condition, just the then block and if still skipping at the
            end also the else block.
            (cxx_eval_outermost_constant_expr): Adjust constexpr_ctx initializer.
            (is_sub_constant_expr): Likewise.
    
            * g++.dg/cpp1y/constexpr-77467.C: New test.
    
    From-SVN: r248615

commit b8ea0a3858e7c22d7cff7f622f525c9124444cae
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:31:03 2017 +0200

    backport: re PR c++/77722 (-fsanitize=undefined doesn't give runtime error in function without return value, unless at least 2 instructions)
    
            Backported from mainline
            2016-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77722
            * cp-gimplify.c (cp_ubsan_maybe_instrument_return): Instrument also
            functions that have just a STATEMENT_LIST instead of BIND_EXPR, or
            BIND_EXPR with some statement rather than STATEMENT_LIST as body.
    
            * g++.dg/ubsan/return-4.C: New test.
            * g++.dg/ubsan/return-5.C: New test.
            * g++.dg/ubsan/return-6.C: New test.
    
    From-SVN: r248614

commit cceb9c943bbb81ffb0004dc978d43f63a417ccb0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:29:49 2017 +0200

    backport: re PR fortran/77666 (ICE in gfc_omp_clause_default_ctor, at fortran/trans-openmp.c:471)
    
            Backported from mainline
            2016-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77666
            * trans-openmp.c (gfc_omp_private_outer_ref): Return true even for
            references to allocatable arrays.
    
            * gfortran.dg/gomp/pr77666.f90: New test.
    
    From-SVN: r248613

commit a3768d48904d3f62edde679bf0e39414445f449a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:28:40 2017 +0200

    backport: re PR tree-optimization/77665 (ICE in expand_GOMP_SIMD_VF, at internal-fn.c:172)
    
            Backported from mainline
            2016-09-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77665
            * tree-inline.c (remap_gimple_stmt): Set has_simduid_loops
            for all IFN_GOMP_SIMD_* internal fns.
    
            * gfortran.dg/gomp/pr77665.f90: New test.
    
    From-SVN: r248612

commit 9bb238bbf3f876917decea780d08d03461a6dba4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:27:33 2017 +0200

    backport: re PR c++/77637 (ICE on x86_64-linux-gnu (Segmentation fault, tree_check, cp_parser_std_attribute_list...))
    
            Backported from mainline
            2016-09-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77637
            * parser.c (cp_parser_std_attribute_list): Reject ... without
            preceding attribute.
    
            * g++.dg/cpp0x/gen-attrs-62.C: New test.
    
    From-SVN: r248611

commit 33c84bf1799930f84fb9758decfa6823029d93b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:26:43 2017 +0200

    backport: re PR middle-end/77624 (ICE on x86_64-linux-gnu (internal compiler error: in fold_builtin_atomic_always_lock_free, at builtins.c:5583))
    
            Backported from mainline
            2016-09-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/77624
            * builtins.c (fold_builtin_atomic_always_lock_free): Only look through
            cast to void * if the cast is from some other pointer type.
    
            * c-c++-common/pr77624-1.c: New test.
            * c-c++-common/pr77624-2.c: New test.
    
    From-SVN: r248610

commit 3a3638198caab896fc23e012843082121106f7ea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:26:00 2017 +0200

    backport: re PR ipa/77587 (C compiler produces incorrect stack alignment with __attribute__((weak)))
    
            Backported from mainline
            2016-09-19  Jakub Jelinek  <jakub@redhat.com>
                        Jan Hubicka  <jh@suse.cz>
    
            PR target/77587
            * cgraph.c (cgraph_node::rtl_info): Pass &avail to
            ultimate_alias_target call, return NULL if avail < AVAIL_AVAILABLE.
            Call ultimate_alias_target just once, not up to 4 times.
    
            * gcc.dg/pr77587.c: New test.
            * gcc.dg/pr77587a.c: New file.
    
    From-SVN: r248609

commit ce4c1bf01a651b83ed3075bab6f1b129425ca426
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:24:56 2017 +0200

    backport: re PR c++/77375 (constant object with mutable subobject allocated in read-only memory)
    
            Backported from mainline
            2016-09-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77375
            * class.c (check_bases): Set CLASSTYPE_HAS_MUTABLE if any
            TYPE_HAS_MUTABLE_P for any bases.
    
            * g++.dg/cpp0x/mutable1.C: New test.
    
    From-SVN: r248608

commit 77fe8048b2d91dd3385c9685d9a8996f7d563f02
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:23:20 2017 +0200

    backport: re PR middle-end/77594 (double computation for __builtin_sub_overflow (0, ...))
    
            Backported from mainline
            2016-09-16  Jakub Jelinek  <jakub@redhat.com>
                        Eric Botcazou  <ebotcazou@adacore.com>
    
            PR middle-end/77594
            * internal-fn.c (expand_arith_overflow) <case MINUS_EXPR>: Don't fall
            through into expand_addsub_overflow after expand_neg_overflow.
    
            * gcc.target/i386/pr77594.c: New test.
    
    From-SVN: r248607

commit 739f04e5f09e12955d85ad2b546e497b12d3d8cc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:22:25 2017 +0200

    backport: re PR sanitizer/68260 (false positive with tsan)
    
            Backported from mainline
            2016-09-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/68260
            * tsan.c: Include target.h.
            (enum tsan_atomic_action): Add bool_clear and bool_test_and_set.
            (BOOL_CLEAR, BOOL_TEST_AND_SET): Define.
            (tsan_atomic_table): Add BUILT_IN_ATOMIC_CLEAR and
            BUILT_IN_ATOMIC_TEST_AND_SET entries.
            (instrument_builtin_call): Handle bool_clear and bool_test_and_set.
    
            * c-c++-common/tsan/pr68260.c: New test.
    
    From-SVN: r248606

commit e24106eb6ea83d9d85114e133168215a15689a78
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:21:41 2017 +0200

    backport: re PR fortran/77500 (ICE in gfc_trans_omp_atomic, at fortran/trans-openmp.c:2822)
    
            Backported from mainline
            2016-09-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77500
            * trans-openmp.c (gfc_trans_omp_atomic): For atomic write or
            swap, don't try to look through GFC_ISYM_CONVERSION.  In other cases,
            check that value.function.isym is non-NULL before dereferencing it.
    
            * gfortran.dg/gomp/pr77500.f90: New test.
    
    From-SVN: r248605

commit 30b50f05daadc52a1f16f69067af5ab00f5bc7c0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:20:41 2017 +0200

    backport: re PR fortran/77516 (ICE in is_gimple_min_invariant, at gimple-expr.c:706)
    
            Backported from mainline
            2016-09-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77516
            * omp-low.c (lower_rec_simd_input_clauses): Use max_vf for non-positive
            OMP_CLAUSE_SAFELEN_EXPR.
    
            * gfortran.dg/gomp/pr77516.f90: New test.
    
    From-SVN: r248604

commit ebd2f85818e76bf2c565cc59b35544e81dfa87a5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:19:49 2017 +0200

    backport: re PR sanitizer/77396 (address  sanitizer crashes if all static global variables are optimized)
    
            Backported from mainline
            2016-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/77396
            * asan/asan_globals.cc: Cherry-pick upstream r280657.
    
            2016-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/77396
            * g++.dg/asan/pr77396-2.C: New test.
    
            2016-09-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/77396
            * g++.dg/asan/pr77396.C: New test.
    
    From-SVN: r248603

commit 2ae7e23d5cb988e28e19f85547960d608c7a0d99
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:18:37 2017 +0200

    backport: re PR c++/77363 (Missing debug information in DWARF)
    
            Backported from mainline
            2016-08-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/77363
            * dwarf2out.c (modified_type_die): Use lookup_type_die (type)
            instead of lookup_type_die (type_main_variant (type)) even for array
            types.
    
            * g++.dg/debug/dwarf2/pr77363.C: New test.
    
    From-SVN: r248602

commit 1a21f546767e1ecdf1fb0d4cb359506a3e293921
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:17:45 2017 +0200

    backport: re PR middle-end/77377 (c-c++-common/pr59037.c ICEs with -fpic -msse on i686)
    
            Backported from mainline
            2016-08-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/77377
            * simplify-rtx.c (avoid_constant_pool_reference): For out of bounds
            constant pool reference return x instead of c.
    
            * gcc.target/i386/pr77377.c: New test.
    
    From-SVN: r248601

commit 32de0ec707640dbe04d1a9e8c9b5a269a4e32d30
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:15:49 2017 +0200

    backport: re PR target/71910 (ICE on valid OpenMP code)
    
            Backported from mainline
            2016-08-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/71910
            * tree-cfg.c (execute_fixup_cfg): Add node variable, use it.  Before inlining,
            add cgraph edge for the added __builtin_unreachable call.
    
            * g++.dg/gomp/pr71910.C: New test.
    
    From-SVN: r248598

commit 39ebb5bb57373844e2bd3548729b2b440c9c18b8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:13:36 2017 +0200

    backport: re PR tree-optimization/72824 (Signed floating point zero semantics broken at optimization level -O3 (tree-loop-distribute-patterns))
    
            Backported from mainline
            2016-08-15  Martin Liska  <mliska@suse.cz>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/72824
            * tree-loop-distribution.c (const_with_all_bytes_same)
            <case VECTOR_CST>: Fix a typo.
    
            * gcc.c-torture/execute/ieee/pr72824-2.c: New test.
    
    From-SVN: r248597

commit 32b2c4954ad0518764ba9418ab3bbf7c99633a5e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:12:08 2017 +0200

    backport: re PR c/67410 (c/c-typeck.c references out of bounds array)
    
            Backported from mainline
            2016-08-12  Jakub Jelinek  <jakub@redhat.com>
                        Martin Liska  <mliska@suse.cz>
    
            PR c/67410
            * c-typeck.c (set_nonincremental_init_from_string): Use / instead of
            % to determine val element to change.  Assert that
            wchar_bytes * charwidth fits into val array.
    
            * gcc.dg/pr67410.c: New test.
    
    From-SVN: r248596

commit 04e5af0b57d5a71ef293ca093f8e531d360a3d90
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:11:09 2017 +0200

    backport: re PR c++/72868 (Constexpr expressions mistreat case ranges)
    
            Backported from mainline
            2016-08-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/72868
            * constexpr.c (label_matches): Handle case range expressions.
    
            * g++.dg/cpp1y/constexpr-switch4.C: New test.
    
    From-SVN: r248595

commit 129b5a87032462b9cf38e6005227f1672e7889ee
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:09:01 2017 +0200

    backport: re PR c/72816 (ICE on x86_64-linux-gnu (tree check: expected tree that contains ‘decl with RTL’ structure, have ‘field_decl’ in set_decl_rtl, at emit-rtl.c:1282))
    
            Backported from mainline
            2016-08-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/72816
            * c-decl.c (grokdeclarator): When adding TYPE_DOMAIN for flexible
            array member through typedef, for orig_qual_indirect == 0 clear
            orig_qual_type.
    
            2016-08-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/72816
            * gcc.dg/pr72816.c: Remove dg-error.
    
            2016-08-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/72816
            * gcc.dg/pr72816.c: New test.
    
    From-SVN: r248594

commit d051687828de7b0162a8095cfa087fa79354d2ba
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:07:25 2017 +0200

    backport: re PR tree-optimization/72824 (Signed floating point zero semantics broken at optimization level -O3 (tree-loop-distribute-patterns))
    
            Backported from mainline
            2016-08-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/72824
            * tree-loop-distribution.c (const_with_all_bytes_same): Verify
            real_zerop is not negative.
    
            * gcc.c-torture/execute/ieee/pr72824.c: New test.
    
    From-SVN: r248593

commit 98046ea5a3d92b67d736537729098432fe00bb54
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 30 09:06:38 2017 +0200

    backport: re PR sanitizer/71953 (ICE using address sanitizers with PCH)
    
            Backported from mainline
            2016-07-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/71953
            * asan.c (asan_dynamic_init_call): Call asan_init_shadow_ptr_types
            before builtin_decl_implicit.
    
    From-SVN: r248592

commit 7330309b030bef0008333b8e74f21be41db1670e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 30 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r248588

commit 1f59132edb1131aac3fc603c816b1c2880feb80b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon May 29 21:09:44 2017 +0000

    install.texi (Options specification): Move entry of --enable-sjlj-exceptions.
    
            * doc/install.texi (Options specification): Move entry of
            --enable-sjlj-exceptions.
    
    From-SVN: r248585

commit 6947bfe2fb014e0d75b6a2d9a3ad7b2d087c88ba
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:13:50 2017 +0200

    Backport r247097
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Jan Hubicka  <hubicka@ucw.cz>
    
            PR middle-end/79931
            * ipa-devirt.c (dump_possible_polymorphic_call_targets): Fix ICE.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79931
            * g++.dg/ipa/pr79931.C: New test.
    
    From-SVN: r248569

commit a845b923622e302039b3b824503c428ffbbb39b2
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:13:20 2017 +0200

    Backport r246996
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-19  Richard Biener  <rguenther@suse.de>
    
            PR ipa/65972
            * auto-profile.c (afdo_vpt_for_early_inline): Update SSA
            when needed by AutoPGO.
    
    From-SVN: r248568

commit d32fc73eb9b6ba63596228b7f294c1a7b3f985a7
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:12:50 2017 +0200

    Backport r246995
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-19  Paulo J. Matos  <paulo@matos-sorge.com>
    
            PR lto/50345
            * doc/lto.texi: Remove an extra 'that'.
    
    From-SVN: r248567

commit b4cdd9352af07228c5af18399f67b55f9683409b
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:12:33 2017 +0200

    Backport r246961
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-18  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/78783
            * gcov-tool.c (gcov_output_files): Validate that destination
            file is either removed by the tool or by a user.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-18  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/78783
            * libgcov-driver.c (gcov_get_filename): New function.
    
    From-SVN: r248566

commit 8d425fb1bf13364991e7a58403c04dd5a1859e42
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:12:02 2017 +0200

    Backport r246903
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-13  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80413
            * gcov-io.c (gcov_write_string): Copy to buffer just when
            allocated size is greater than zero.
    
    From-SVN: r248565

commit 8790cddd49414f5381e3d03115bb2da9ccb87825
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:11:42 2017 +0200

    Backport r246848
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * cgraph.c (cgraph_node::dump): Dump calls_comdat_local.
            * ipa-split.c (split_function): Create a local comdat symbol
            if caller is in a comdat group.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * g++.dg/ipa/pr80212.C: New test.
    
    From-SVN: r248564

commit 714098318afce88df43ace80f9c9634dd9e4c362
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:10:58 2017 +0200

    Backport r246847
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * ipa-cp.c (determine_versionability): Handle calls_comdat_local
            flags.
    
    From-SVN: r248563

commit a33ad8cd4f2728dd8edf4b312833e2e53e9887c9
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:10:11 2017 +0200

    Backport r246837
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/70878
            * ubsan.c (instrument_object_size): Do not instrument register
            variables.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/70878
            * gcc.dg/ubsan/pr70878.c: New test.
    
    From-SVN: r248562

commit 3bbcface36ba3b4a7590a508259827807c814d7a
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:09:27 2017 +0200

    Backport r246804
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-10  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80224
            * gcov.c (print_usage): Fix usage string.
            (get_gcov_intermediate_filename): Remove.
            (output_gcov_file): Use both for normal and intermediate format.
            (generate_results): Do not initialize special file for
            intermediate format.
    
    From-SVN: r248561

commit 160789830dac2425d8f0bb5cf37eda4164c38597
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:09:07 2017 +0200

    Backport r246730
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-06  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80166
            * gcc.dg/asan/pr80166.c: New test.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-06  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80166
            * sanitizer_common/sanitizer_common_interceptors.inc (INTERCEPTOR):
            Cherry-pick upstream r299036.
    
    From-SVN: r248560

commit 1d7f4db0351821e7759fb76d3620af41c3f37a67
Author: Martin Liska <mliska@suse.cz>
Date:   Mon May 29 11:08:48 2017 +0200

    Backport r246530
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Richard Biener  <rguenther@suse.de>
    
            PR ipa/80205
            * tree-inline.c (copy_phis_for_bb): Do not create PHI node
            without arguments, generate default definition of a SSA name.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80205
            * g++.dg/ipa/pr80205.C: New test.
    
    From-SVN: r248559

commit 24fbb338b354f9cbdf4563fe08a684b92e82d01a
Author: Martin Liska <marxin@gcc.gnu.org>
Date:   Mon May 29 09:08:14 2017 +0000

    Backport r246525
    
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80104
            * cgraphunit.c (cgraph_node::expand_thunk): Mark argument of a
            thunk call as DECL_GIMPLE_REG_P when vector or complex type.
    2017-05-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80104
            * gcc.dg/ipa/pr80104.c: New test.
    
    From-SVN: r248558

commit 97b794832de31e8ef022e15015639a7c83ca803a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248549

commit 40ef91381ebcfba8712981eb7436f9d08afecfce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 28 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r248541

commit 9dda54799e66021fe9b7dac97797ee26d798db2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 27 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248529

commit 328646000f25807ed278f59d35a08d321ac9e4f7
Author: Sheldon Lobo <smlobo@sheldon.us.oracle.com>
Date:   Fri May 26 20:00:58 2017 +0000

    Fix a SPARC -mcbcond compare-and-branch out of range failure.
    
            Backported from mainline
            2017-05-24  Sheldon Lobo  <smlobo@sheldon.us.oracle.com>
    
            * config/sparc/sparc.md (length): Return the correct value for -mflat
            sibcalls to match output_sibcall.
    
    From-SVN: r248527

commit 21280b87d7829668c288e8d9a36051f38a6667cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248476

commit cb17f5b89db737c65278a95141369a73c629e9dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 25 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248438

commit 343caf01571f26900374a9422101567cbad471b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 24 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r248395

commit 340b0d2951a08d57571a88d768611186b002994d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 23 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r248353

commit 2a2b9059ded8e491417d3673217b967a8206c725
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 22 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248314

commit e9fa623da65178b144c947e2ee02387e7d631af0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 21 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r248309

commit df8360c91ea3c106451e56082435c26db3dea1d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 20 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r248304

commit 74f18523d2e61c95a0853c12ca43f1a183d62ad4
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri May 19 20:39:54 2017 +0200

    backport: unwind-arm.h: Make _Unwind_GetIP...
    
    2017-05-19  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-17  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/arm/unwind-arm.h: Make _Unwind_GetIP, _Unwind_GetIPInfo and
        _Unwind_SetIP available as functions for arm*-*-freebsd*.
        * config/arm/unwind-arm.c: Implement the above.
    
    From-SVN: r248301

commit 2677a544915bc6a9a32406432c1abd5e87e900fb
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri May 19 20:08:19 2017 +0200

    backport: re PR target/80799 (x86-32 bits generates MMX without EMMS)
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * config/i386/mmx.md (*mov<mode>_internal): Enable
            alternatives 11, 12, 13 and 14 also for 32bit targets.
            Remove alternatives 15, 16, 17 and 18.
            * config/i386/sse.md (vec_concatv2di): Change
            alternative (!x, *y) to (x, ?!*Yn).
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * g++.dg/other/i386-11.C: New test.
    
    From-SVN: r248297

commit f82f05ffb91128175dc3265cdcc6f541d0a1a74b
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Fri May 19 16:30:45 2017 +0300

    Don't assume __secure_getenv is available
    
    Glibc 2.17 made __secure_getenv an officially supported function, and
    renamed it secure_getenv. The libgfortran configure has checked for
    both of these, per
    https://sourceware.org/glibc/wiki/Tips_and_Tricks/secure_getenv.
    
    Unfortunately, while the dynamical library (libc.so) retains the
    __secure_getenv symbol for backwards compatibility, the static library
    (libc.a) does not. This means that a libgfortran.a compiled against an
    older glibc will not work if one tries to link against a newer
    libc.a. This creates problems for providing gfortran binary
    distributions that work on as many target systems as possible.
    
    Thus, retain the support for __secure_getenv but call it only via a
    weak reference.
    
    Backported from trunk.
    
    2017-05-19  Janne Blomqvist  <jb@gcc.gnu.org>
    
            * libgfortran.h: HAVE_SECURE_GETENV: Don't check
            HAVE___SECURE_GETENV.
            * environ/runtime.c (secure_getenv): Use __secure_getenv via a
            weak reference.
    
    From-SVN: r248275

commit 49c0f75d200c4ffe2e896d6d617176b71157566e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 19 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248257

commit fe9eba601c07388433035e8e2774b0eb8ccd2bd8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:47 2017 +0100

    Replace c++11 effective-target with dg-options directive
    
            * testsuite/22_locale/codecvt/codecvt_utf16/79980.cc: Replace
            effective-target with dg-options directive.
            * testsuite/22_locale/codecvt/codecvt_utf16/80041.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf16/members.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf16/misaligned.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8/79980.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8/members.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/79511.cc: Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/members.cc: Likewise.
    
    From-SVN: r248239

commit 8dc09b7cdf0b1fec93b62b3d0ec017e3f6c6b650
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:41 2017 +0100

    Skip C tests if test flags include C++ options
    
    Backport from mainline
    2016-08-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/18_support/bad_exception/23591_thread-1.c: Skip test if
            options are present that aren't valid for C.
            * testsuite/abi/header_cxxabi.c: Likewise.
    
    From-SVN: r248238

commit 550c2710dbc424f411f96d4ba75ba1314256eba6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:36 2017 +0100

    PR libstdc++/80504 qualify calls to avoid ADL
    
    Backport from mainline
    2017-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80504
            * include/std/functional (ref, cref): Qualify calls.
            * testsuite/20_util/reference_wrapper/80504.cc: New test.
    
    From-SVN: r248237

commit b797dfc016f7a1bcec1a953e98d805865d9622ee
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:22 2017 +0100

    PR libstdc++/80448 remove noexcept from defaulted functions
    
    Backport from mainline
    2017-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80448
            * include/experimental/bits/fs_dir.h (directory_iterator)
            (recursive_directory_iterator): Remove noexcept from defaulted
            constructors.
    
    From-SVN: r248236

commit 96964b4ba972fdf35f15ed594ae78902b843849a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:17 2017 +0100

    Uncomment std::reference_wrapper tests that no longer fail
    
    Backport from mainline
    2017-04-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/reference_wrapper/invoke.cc: Uncomment tests
            that no longer fail.
    
    From-SVN: r248235

commit d2665470476ff6cdd0846f9c32dfa02eeb5af662
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:13 2017 +0100

    Fix comments in libstdc++ header and test
    
    Backport from mainline
    2017-04-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/ios_base.h: Correct comment.
            * testsuite/util/testsuite_hooks.h: Likewise.
    
    From-SVN: r248234

commit 9303f5a311d05d59958c4a343a78d76a26824f20
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:07 2017 +0100

    PR libstdc++/67440 make pretty printers work with GDB 7.6 again
    
    Backport from mainline
    2017-03-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/67440
            * python/libstdcxx/v6/printers.py (find_type): Avoid gdb.Type.name
            for GDB 7.6 compatibility, use gdb.Type.unqualified instead.
    
    From-SVN: r248233

commit 8f150751c10eadd11a3ec73c850b45e4f7abd579
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:31:02 2017 +0100

    PR69699 document why __GLIBCXX__ macro is useless
    
    Backport from mainline
    2017-01-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69699
            * doc/xml/manual/abi.xml (abi.versioning.history): Explain why the
            _GLIBCXX__ macro is not useful. Remove redundant date information
            and link to the GCC release timeline.
            (abi.versioning.active): Move partial sentence into the previous
            paragraph.
            * doc/html/*: Regenerate.
    
    From-SVN: r248232

commit cd28b32b89145491c80cf5b0bcf5a6caca8ddfb1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:30:57 2017 +0100

    PR 71444 define more error constants for mingw-w64
    
    Backport from mainline
    2016-12-21  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71444
            * config/os/mingw32-w64/error_constants.h
            (address_family_not_supported, address_in_use, address_not_available)
            (already_connected, connection_aborted, connection_already_in_progress)
            connection_refused, connection_reset, cross_device_link)
            (destination_address_required, host_unreachable, message_size)
            (network_down, network_reset, network_unreachable, no_buffer_space)
            (no_protocol_option, not_a_socket, not_connected, operation_canceled)
            (operation_in_progress, operation_not_supported, protocol_error)
            (protocol_not_supported, too_many_links, too_many_symbolic_link_levels)
            (value_too_large, wrong_protocol_type): Define.
            (bad_message, identifier_removed, no_link, no_message_available)
            (no_message, no_stream_resources, not_a_stream, owner_dead)
            (state_not_recoverable, stream_timeout, text_file_busy): Define
            conditionally.
            * testsuite/19_diagnostics/headers/system_error/errc_std_c++0x.cc:
            Guard test for no_message with _GLIBCXX_HAVE_ENOMSG.
    
    From-SVN: r248231

commit 5298e715c4df822d31a6292b893f3f0a60c0304d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 16:30:42 2017 +0100

    libstdc++/78236 fix past-the-end std::regex_iterator
    
    Backport from mainline
    2016-11-09  Tim Shen  <timshen@google.com>
    
            PR libstdc++/78236
            * libstdc++-v3/include/bits/regex.h (regex_iterator::regex_iterator()):
            Define end() as _M_pregex == nullptr.
            * libstdc++-v3/include/bits/regex.tcc (regex_iterator::operator==(),
            regex_iterator::operator++()): Fix operator==() and operator++() to
            look at null-ness of _M_pregex on both sides.
            * testsuite/28_regex/regression.cc: New testcase.
    
    From-SVN: r248230

commit 570991d9d869ce316d882773c1c277a99c2ed881
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 10:23:43 2017 +0100

    PR59170 make pretty printers check for singular iterators
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/59170
            * python/libstdcxx/v6/printers.py (StdListIteratorPrinter.to_string)
            (StdSlistIteratorPrinter.to_string, StdVectorIteratorPrinter.to_string)
            (StdRbtreeIteratorPrinter.to_string)
            (StdDequeIteratorPrinter.to_string): Add check for value-initialized
            iterators.
            * testsuite/libstdc++-prettyprinters/simple.cc: Test them.
            * testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.
    
    From-SVN: r248183

commit a5a45881b5d693f92b748d60dcaa74bd96c6c6cc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 10:23:38 2017 +0100

    PR59161 make pretty printers always return strings
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/59161
            * python/libstdcxx/v6/printers.py (StdListIteratorPrinter.to_string)
            (StdSlistIteratorPrinter.to_string, StdVectorIteratorPrinter.to_string)
            (StdRbtreeIteratorPrinter.to_string, StdDequeIteratorPrinter.to_string)
            (StdDebugIteratorPrinter.to_string): Return string instead of
            gdb.Value.
            * testsuite/libstdc++-prettyprinters/59161.cc: New test.
    
    From-SVN: r248182

commit 9c4fa9d1d879bdfe5d857780a9018de8b651d37d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 10:23:29 2017 +0100

    Enable printers and xmethods for std::__cxx11::list
    
    Backport from mainline
    2016-10-11  Jonathan Wakely  <jwakely@redhat.com>
    
            * python/libstdcxx/v6/printers.py (build_libstdcxx_dictionary):
            Register printer for std::__cxx11::list.
            * python/libstdcxx/v6/xmethods.py (ListMethodsMatcher.match): Match
            std::__cxx11::list as well as std::list.
    
    From-SVN: r248181

commit ec9c0c3399cd25750b2f72bfc258414c088ddc75
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 18 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248175

commit b8aeab36640ff616790b088a7d28613728d1cb05
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 17 18:18:14 2017 +0100

    PR libstdc++/62045 fix O(N) insertion in pd_ds binary heap
    
    Backport from mainline
    2017-03-15  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>
    
            PR libstdc++/62045
            * include/ext/pb_ds/detail/binary_heap_/binary_heap_.hpp
            (is_heap): Remove.
            (push_heap): Remove the wrong checking using is_heap.
            (make_heap): Remove the assertion using is_heap.
            * include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp
            (modify): Ditto.
            (resize_for_insert_if_needed): Add PB_DS_ASSERT_VALID after
            calling make_heap.
    
    Backport from mainline
    2017-03-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/62045
            * testsuite/ext/pb_ds/regression/priority_queue_binary_heap-62045.cc:
            New test.
            * testsuite/ext/pb_ds/regression/priority_queues.cc: Fix copy&paste
            error in comment.
    
    From-SVN: r248164

commit 691b5f0119cb5958797ad6e47357e68d22c91fb1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 17 18:18:07 2017 +0100

    PR libstdc++/66059 optimise _Build_index_tuple
    
    Backport from mainline
    2015-11-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/66059
            * include/std/utility (_Build_index_tuple): Optimise.
    
    From-SVN: r248163

commit 506cc7253f7d2218b6f38c13224747454ddf86b8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 17 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r248132

commit 54a22558a0f80ebc839c7a0ce9993249718769e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 16 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r248083

commit b7f2b1aa18012c559a9b08006d46f2b41b0711ec
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 15 07:56:00 2017 +0000

    Revert backport of PR middle-end/80222
    
    2017-05-15  Richard Biener  <rguenther@suse.de>
    
            Revert backport of
            PR middle-end/80222
            * gimple-fold.c (gimple_fold_indirect_ref): Do not touch
            TYPE_REF_CAN_ALIAS_ALL references.
            * fold-const.c (fold_indirect_ref_1): Likewise.
    
            * g++.dg/pr80222.C: New testcase.
    
    From-SVN: r248048

commit 7b4988d43fba0e8c2898eed08ce489d1adab6a19
Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
Date:   Mon May 15 07:36:56 2017 +0000

    lb1spc.S: Emit .note.GNU-stack section for a non-executable stack.
    
            * config/sparc/lb1spc.S [__ELF__ && __linux__]: Emit .note.GNU-stack
            section for a non-executable stack.
    
    From-SVN: r248046

commit c18266ba69d2930735355b8bab5fa9154ef71c7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 15 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r248038

commit f25f5913ac49c220d719d86edc0d3d2664deb640
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 14 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r248013

commit 9b051d69a6087577cded15f2a0dcedb482f1902f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 13 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248000

commit 58aee5bc8268e9bb120d5fe5b2a838a2a92bb15f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247942

commit 67c6fa0b5573f4f2c1b41a60293ba57e9aca652f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 11 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r247875

commit 185f405769469dc6bcc49611bcfef1e4c55888cf
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed May 10 22:45:35 2017 +0200

    backport: config.host: Use the generic FreeBSD t-slibgcc-elf-ver for arm*-*-freebsd* instead of the...
    
    2017-05-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.host: Use the generic FreeBSD t-slibgcc-elf-ver for
        arm*-*-freebsd* instead of the t-slibgcc-libgcc.
    
    From-SVN: r247862

commit 76be39c51c3a7206a144e1c0740284746778a9cb
Author: Richard Biener <rguenther@suse.de>
Date:   Wed May 10 10:01:23 2017 +0000

    Backport PRs 79666, 79732, 79756, 79894
    
    2017-05-10  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-03-06  Richard Biener  <rguenther@suse.de>
    
            PR fortran/79894
            * trans.c (gfc_add_modify_loc): Weaken assert.
    
            2017-03-02  Richard Biener  <rguenther@suse.de>
    
            PR c/79756
            * c-common.c (c_common_mark_addressable_vec): Look through
            C_MAYBE_CONST_EXPR.
    
            * gcc.dg/vector-1.c: New testcase.
    
            2017-02-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79732
            * tree-inline.c (expand_call_inline): Handle anonymous
            SSA lhs properly when inlining a function without return
            value.
    
            * gcc.dg/torture/pr79732.c: New testcase.
    
            2017-02-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79666
            * tree-vrp.c (extract_range_from_binary_expr_1): Make sure
            to not symbolically negate if that may introduce undefined
            overflow.
    
            * gcc.dg/torture/pr79666.c: New testcase.
    
    From-SVN: r247829

commit fc3a9eb7df5b5a07460461903764479e2d550d6c
Author: Richard Biener <rguenther@suse.de>
Date:   Wed May 10 07:53:45 2017 +0000

    Backport PRs 80122, 80222, 80334, 80539
    
    2017-05-10  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-03-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80122
            * tree-inline.c (copy_bb): Do not expans va-arg packs or
            va_arg_pack_len when the inlined call stmt requires pack
            expansion itself.
            * tree-inline.h (struct copy_body_data): Make call_stmt a gcall *.
    
            * gcc.dg/torture/pr80122.c: New testcase.
    
            2017-03-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80222
            * gimple-fold.c (gimple_fold_indirect_ref): Do not touch
            TYPE_REF_CAN_ALIAS_ALL references.
            * fold-const.c (fold_indirect_ref_1): Likewise.
    
            * g++.dg/pr80222.C: New testcase.
    
            2017-04-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80334
            * tree-ssa-loop-ivopts.c (rewrite_use_address): Properly
            preserve alignment of accesses.
    
            * g++.dg/torture/pr80334.C: New testcase.
    
            2017-04-27  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80539
            * tree-chrec.c (chrec_fold_plus_poly_poly): Deal with not
            being in loop-closed SSA form conservatively.
            (chrec_fold_multiply_poly_poly): Likewise.
    
            * gcc.dg/torture/pr80539.c: New testcase.
    
    From-SVN: r247827

commit fd8c0059bddab705cf260ed6640cfb039ac516de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247822

commit b6efa95788f3d71fd444cbf727d8febfcd8c44b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247773

commit 392063af84f714b002d278e8e04756af78dd9f11
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon May 8 21:03:45 2017 +0000

    backport: PR target/69868 + swap optimization backports
    
    [gcc]
    
    2016-05-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            PR target/69868 + swap optimization backports
            * config/rs6000/rs6000.c (swap_web_entry): Enlarge
            special_handling bitfield.
            (special_handling_values): Add SH_XXPERMDI, SH_CONCAT, SH_VPERM,
            and SH_VPERM_COMP.
            (const_load_sequence_p): New.
            (load_comp_mask_p): New.
            (v2df_reduction_p): New.
            (rtx_is_swappable_p): Perform special handling for XXPERMDI and
            for reductions.
            (insn_is_swappable_p): Perform special handling for VEC_CONCAT,
            V2DF reductions, and various permutes.
            (adjust_xxpermdi): New.
            (adjust_concat): New.
            (find_swapped_load_and_const_vector): New.
            (replace_const_vector_in_load): New.
            (adjust_vperm): New.
            (adjust_vperm_comp): New.
            (handle_special_swappables): Call adjust_xxpermdi, adjust_concat,
            adjust_vperm, and adjust_vperm_comp.
            (replace_swap_with_copy): Allow vector NOT operations to also be
            replaced by copies.
            (dump_swap_insn_table): Handle new special handling values.
    
    [gcc/testsuite]
    
    2016-05-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            PR target/69868 + swap optimization backports
            * gcc.target/powerpc/swaps-p8-20.c: New.
            * gcc.target/powerpc/swaps-p8-23.c: New.
            * gcc.target/powerpc/swaps-p8-24.c: New.
    
    From-SVN: r247759

commit c605785584814c86b236e6478b2cb169e9fdd32b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 8 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r247730

commit 37379e8416d4458de5863e5261597b4ae50e3761
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 7 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r247723

commit e4a921a92fbd95f535fbf3cf1e444c1111fcb306
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 6 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r247706

commit 06d4654a9e827afaeba29aae278d81fe678a2028
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 5 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r247624

commit 57dc16c8108f3921fc6a30a091a2bed3c1fa0ab2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 4 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r247572

commit 7eb5bd4eca2ff12d0fe4388704062ac0bf61ed2c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 3 22:00:50 2017 +0200

    backport: re PR target/68491 (libgcc calls __get_cpuid with 0 level breaks on early 486)
    
            Backport from mainline
            2017-05-01  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68491
            * config/i386/cpuid.h (__get_cpuid): Always return 0 when
            __get_cpuid_max returns 0.
    
    From-SVN: r247566

commit 94a683f14f71ab12f92a8046ca1b98c19bdf8d1e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247530

commit f6f6493611e1fe76dd0510cc76fade22acea3060
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247456

commit e454b682cdd67a3787f7b7817b693066684518aa
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Mon May 1 12:51:22 2017 +0200

    backport: re PR fortran/80392 ([OOP] ICE with allocatable polymorphic function result in a procedure pointer component)
    
    2017-05-01  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * trans-types.c (gfc_get_derived_type): Prevent an infinite loop when
            building a derived type that includes a procedure pointer component
            with a polymorphic result.
    
    2017-05-01  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * gfortran.dg/proc_ptr_comp_49.f90: New test case.
    
    From-SVN: r247435

commit 5b0e1751305c28a79b4cf2b42ecf799b878175dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 1 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r247422

commit f8f655597bbcbf2a8dc94345f7ed3c72cbee16e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 30 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r247413

commit 23ea1ffc77c45f11ef3e2ee7610b97c44d1baf9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247402

commit 53484ae0279f10fe6b432591d6626d9a7d2137e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 28 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r247358

commit 5e3b0f4da0c060e338bd83a74df9c915f48d7918
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 27 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r247288

commit b4b92a83c66fcfebc27f1bc17fc931c43843fa74
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 26 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r247270

commit 761e84e2811aaf8976571bb30c0679524832245e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 25 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247118

commit 338450356e17b8da5cf8406ab44f6c4f96181e91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 24 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r247085

commit e4efd5075163a947d9d36383b3d76771946963fa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 23 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r247078

commit 33b8df8e440027b3df275db73a74962df6feb44c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 22 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r247072

commit cd93319bcfa6ccf2715ec76065ac0640d09bee99
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Apr 21 23:37:16 2017 +0200

    backport: re PR fortran/80361 ([OOP] bogus  recursive call to nonrecursive procedure with -fcheck=recursion)
    
    2017-04-21  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80361
            * class.c (generate_finalization_wrapper): Give the finalization wrapper
            the recursive attribute.
    
    2017-04-21  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80361
            * gfortran.dg/class_62.f90: New test case.
    
    From-SVN: r247071

commit 0629aac5a22d029d6fc7b8149fae37a33f381a60
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Apr 21 09:23:59 2017 +0000

    [ARM] PR68390 Incorrect code due to indirect tail call of varargs function with hard float ABI
    
    2017-04-21  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline
            +2015-11-23  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            PR target/68390
            gcc/
            * config/arm/arm.c (arm_function_ok_for_sibcall): Get function type
            for indirect function call.
    
            gcc/testsuite/
            * gcc.c-torture/execute/pr68390.c: New test.
    
    From-SVN: r247057

commit cfd02f3cd4ae8d39e117ec0d419ec54943dd3613
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 21 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247042

commit 64ee59bbea8f3cd86b064cb15309a5c8a252c73d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 20 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247008

commit dcd68c5509dc932b49e5c7a4be7ee6522cc91c1b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 19 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246984

commit a6c293c4901899437b0a508c72c69840bc7b7d8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 18 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246958

commit a22fa42ce4683345519f193265c30ef2cc042820
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 17 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246946

commit 1b669abf314b913c955e3f141796176bcf066f9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 16 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246942

commit 767aa8f8524d91ee79d3e02703f10deeadba1729
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 15 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246935

commit 29f0af6edd40f241e5fc0ba985c0b45194b198fd
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Fri Apr 14 15:00:02 2017 +0200

    backport: re PR fortran/59910 (ICE in gfc_conv_array_initializer, at fortran/trans-array.c:5327)
    
    2017-04-14  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from trunk
            2015-11-18  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/59910
            PR fortran/80388
            * primary.c (gfc_match_structure_constructor): Reduce a structure
            constructor in a DATA statement.
    
            * gfortran.dg/pr59910.f90: New test.
    
    From-SVN: r246929

commit 5d0af17da549abecf48b754c0019f27295f262c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246921

commit 8f2f671bc4842509772a57539a5b4996ce1779b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 13 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246896

commit ae58ca721253935f72e6afb80c168c15d38db06c
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Apr 12 13:45:27 2017 +0000

    backport: re PR target/80376 (Some vec_xxpermdi usage lead to ICE)
    
    2017-04-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/80376
            PR target/80315
            * config/rs6000/rs6000.c (rs6000_expand_unop_builtin): Return
            CONST0_RTX (mode) rather than const0_rtx where appropriate.
            (rs6000_expand_binop_builtin): Likewise.
            (rs6000_expand_ternop_builtin): Likewise; also add missing
            vsx_xxpermdi_* variants; also fix typo (arg1 => arg2) for
            vshasigma built-ins.
            * doc/extend.texi: Document that vec_xxpermdi's third argument
            must be a constant.
    
    From-SVN: r246874

commit 34cdd9951a0287cb6d4f05afaf827ecb7469b982
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246861

commit 075ad5b20e3c31a514141a7941d0469c2f66e0ed
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Apr 11 15:26:20 2017 +0000

    Fix PR80082: LDRD erronously used for 64bit load on ARMv7-R
    
    2017-04-11  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from GCC 6
        2017-04-06  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/80082
        * config/arm/arm-protos.h (FL_LPAE): Define macro.
        (FL_FOR_ARCH7VE): Add FL_LPAE.
        (arm_arch_lpae): Declare extern.
        * config/arm/arm.c (arm_arch_lpae): Declare.
        (arm_option_override): Define arm_arch_lpae.
        * config/arm/arm.h (TARGET_HAVE_LPAE): Redefine in term of
        arm_arch_lpae.
    
        gcc/testsuite/
        PR target/80082
        * gcc.target/arm/atomic_loaddi_10.c: New testcase.
        * gcc.target/arm/atomic_loaddi_11.c: Likewise.
    
    From-SVN: r246844

commit 7900d26c81ee754896d97b47fc57e668680a7019
Author: Martin Jambor <mjambor@suse.cz>
Date:   Tue Apr 11 15:31:16 2017 +0200

    [PR 77333] Fixup fntypes of gimple calls of clones
    
    2017-04-11  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2017-03-30  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/77333
            * cgraph.h (cgraph_build_function_type_skip_args): Declare.
            * cgraph.c (redirect_call_stmt_to_callee): Set gimple fntype so that
            it reflects the signature changes performed at the callee side.
            * cgraphclones.c (build_function_type_skip_args): Make public, renamed
            to cgraph_build_function_type_skip_args.
            (build_function_decl_skip_args): Adjust call to the above function.
    
    testsuite/
            * g++.dg/ipa/pr77333.C: New test.
    
    From-SVN: r246839

commit 1276baf6484d43d71901041706735d81a1a9b53a
Author: Bin Cheng <amker@gcc.gnu.org>
Date:   Tue Apr 11 08:15:51 2017 +0000

    backport: re PR tree-optimization/68021 (ice in rewrite_use_nonlinear_expr with -O3)
    
            Backport from mainline
            2016-02-10  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/68021
            * tree-ssa-loop-ivopts.c (get_computation_aff): Set ratio to 1 if
            when computing the value of biv cand by itself.
    
    
            gcc/testsuite
            PR tree-optimization/80345
            * gcc.c-torture/compile/pr80345.c
    
            Backport from mainline
            2016-02-10  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/68021
            * gcc.dg/tree-ssa/pr68021.c: New test.
    
    From-SVN: r246833

commit 48d6a21201c30d63b3341d20339df3cb7b4a97d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 11 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246828

commit 07f8a1235f262c13b35167a03af0f8ddd94d38e6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 10 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246795

commit 7532dfccc01a24a0ade525aa6cf19eba313a5357
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246790

commit 4e54a02e6cd840779f9237cb977fb193fde515a8
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Sat Apr 8 21:18:15 2017 +0200

    backport: aarch64-freebsd.h: Define MCOUNT_NAME.
    
    2017-04-08  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-04-08  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/aarch64/aarch64-freebsd.h: Define MCOUNT_NAME.
        Add comment for WCHAR_T.
    
    From-SVN: r246788

commit 32874f31ecc17b2d4038eb8c4a8dee136a5b8a20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 8 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246781

commit d80d6f67da8bf073c972e9a54888e375f8acdbe4
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Apr 7 21:37:08 2017 +0200

    backport: aarch64-freebsd.h: Define WCHAR_T.
    
    2017-04-07  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-04-07  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/aarch64/aarch64-freebsd.h: Define WCHAR_T.
    
    From-SVN: r246778

commit ec1416cce64305c0d5441bac657f70642c7775c1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Apr 7 07:15:54 2017 +0200

    backport: re PR target/79733 (ICE in int_mode_for_mode, at stor-layout.c:406)
    
            Backport from mainline
            2017-04-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/79733
            * config/i386/i386.c (ix86_expand_builtin)
            <case IX86_BUILTIN_KORTEST{C,Z}16>: Determine insn operand
            mode from insn data. Convert operands to insn operand mode.
            Copy operands that don't satisfy insn predicate to a register.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-04-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/79733
            * gcc.target/i386/pr79733.c: New test.
    
    From-SVN: r246752

commit 317c258cc7449e9baf557a9e911041b6f552d11b
Author: Alan Modra <amodra@gmail.com>
Date:   Fri Apr 7 11:49:19 2017 +0930

    [RS6000] Out-of-line register save functions can't be used from crtend.o
    
            PR target/45053
            * config/rs6000/t-crtstuff (CRTSTUFF_T_CFLAGS): Add -O2.
    
    From-SVN: r246751

commit c032b6dff4bd2e61db81f4df11ae40cfbb184e23
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246746

commit 9829379eb2e722ed7604ab9da9dda0d4ce0f1f25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 6 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246722

commit 35624d2816e8cd30cdef7c98a326d0f6ff17024c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 5 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r246696

commit c9c4e88309fa2f13ca114dbc1d6b412061735275
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 4 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246667

commit 467e6037587977141e61237471144cd87fa05499
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 3 13:06:52 2017 -0500

    backport: re PR target/80246 (Builtin's for POWER's dxex[q] and diex[q] use the wrong types)
    
            Backport from mainline
            2017-04-03  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * gcc.target/powerpc/dfp-builtin-1.c: Require hard_dfp, not
            powerpc_vsx_ok.
            (std, ld): Limit scan-assembler-times check to lp64.
            (stwu, stw, lwz): Add scan-assembler-times check for ilp32.
            * gcc.target/powerpc/dfp-builtin-2.c: Require hard_dfp, not
            powerpc_vsx_ok.
    
            PR target/80246
            * gcc.target/powerpc/pr80246.c: Require hard_dfp.
    
    From-SVN: r246660

commit b68d3d10904e8c66862ae86e4662b7e2e262012f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 3 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246640

commit 89aac938238e699284bb25572089859feaf5ae19
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246633

commit eca5cd7e961cb4bf2d2fa0a3d9384e075ee8c107
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 1 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246628

commit ce3e1ea091b3bedd743599a94f8ab4c6461bccf9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 31 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r246602

commit 4f3af0d09bcfc722b14fb0cda4554d5b505253ec
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Mar 30 15:09:32 2017 -0500

    backport: re PR target/80246 (Builtin's for POWER's dxex[q] and diex[q] use the wrong types)
    
    gcc/
            Backport from mainline
            2017-03-30  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * config/rs6000/dfp.md (dfp_dxex_<mode>): Update mode of operand 0.
            (dfp_diex_<mode>): Update mode of operand 1.
            * doc/extend.texi (dxex, dxexq): Document change to return type.
            (diex, diexq): Document change to argument type.
    
    gcc/testsuite/
            Backport from mainline
            2017-03-30  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * gcc.target/powerpc/dfp-builtin-1.c: Remove unneeded dg-skip-if for
            Darwin and SPE.
            (dxex, dxexq): Update return type.
            (diex, diexq): Update argument type.
            * gcc.target/powerpc/pr80246.c: New test.
    
    From-SVN: r246596

commit 4a4bce6abbc38f4e7f32ceb079795f3422166026
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 30 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246579

commit d20c6dd80453bb4dbcafa099d42d4c24e26fd618
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246558

commit 2d81bf901d8970937078030b37a3f2de9b3bcfd1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 28 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246514

commit 0a35d182dc6d776c2865441416f4c5d6b7a6cc02
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 27 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246487

commit 9e6172fb077c739d40973403fd5f40c95ac728d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246480

commit 48c4871167426df67abe42d6b94451995f996bae
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Mar 25 20:47:14 2017 +0100

    re PR target/80180 (Incorrect codegen from rdseed intrinsic use (CVE-2017-11671))
    
            PR target/80180
            * config/i386/i386.c (ix86_expand_builtin)
            <IX86_BUILTIN_RDSEED{16,32,64}_STEP>: Do not expand arg0 between
            flags reg setting and flags reg using instructions.
            <IX86_BUILTIN_RDRAND{16,32,64}_STEP>: Ditto.  Use non-flags reg
            clobbering instructions to zero extend op2.
    
    From-SVN: r246479

commit 44c02eb008ba978e4c16a1a116941f472c91dca3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 25 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246470

commit 42b664c32217f2299ca5c8d7ff6ad2f4533653d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 24 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246429

commit e422f4a353fefc94a9b02c3a7265d2bda6796288
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246411

commit 8cdba4c323da8244557526ea706adb19f1f05f8c
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 15:59:44 2017 +0100

    Backport r245647
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-22  Martin Liska  <mliska@suse.cz>
    
            PR lto/79587
            * data-streamer-in.c (streamer_read_gcov_count): Remove assert.
            * data-streamer-out.c (streamer_write_gcov_count_stream):
            Likewise.
            * value-prof.c (stream_out_histogram_value): Make assert more
            precise based on type of counter.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-22  Martin Liska  <mliska@suse.cz>
    
            PR lto/79587
            * gcc.dg/tree-prof/pr79587.c: New test.
    
    From-SVN: r246387

commit 1e83bcbb3df2520dcfb2cfe060f443943481c011
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:33:33 2017 +0100

    Backport r246345
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-22  Martin Liska  <mliska@suse.cz>
    
            PR target/79906
            * config/rs6000/rs6000.c (rs6000_inner_target_options): Show
            error message instead of an ICE.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-22  Martin Liska  <mliska@suse.cz>
    
            PR target/79906
            * g++.dg/ext/mv8.C: Add power* targets.
    
    From-SVN: r246380

commit 82e87d78ff84e645d52027f4b2bfb30f5c88e1fe
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:32:56 2017 +0100

    Backport r246321
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-21  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80081
            * Makefile.in: Add gcov-dump and fix installation of gcov-tool.
            * doc/gcc.texi: Include gcov-dump stuff.
            * doc/gcov-dump.texi: New file.
    
    From-SVN: r246379

commit 07443ef931d56e2d9b0a29216b421af597780d01
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:32:39 2017 +0100

    Backport r246316
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-21  Martin Liska  <mliska@suse.cz>
    
            * gcc.target/i386/pr65044.c: Add '.' in order to catch
            apostrophes.
    
    From-SVN: r246378

commit 21f4c507e293caf51066ce0c6ff8e4f31d00011c
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:32:17 2017 +0100

    Backport r246276
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79753
            * tree-chkp.c (chkp_build_returned_bound): Do not build
            returned bounds for a LHS that's not a BOUNDED_P type.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79753
            * gcc.target/i386/mpx/pr79753.c: New test.
    
    From-SVN: r246377

commit 8e40a96f47019d311bbdd41abf3a2d5ffdac1b89
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:31:53 2017 +0100

    Backport r246275
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR target/79769
            PR target/79770
            * tree-chkp.c (chkp_find_bounds_1): Handle REAL_CST,
            COMPLEX_CST and VECTOR_CST.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR target/79769
            PR target/79770
            * g++.dg/pr79769.C: New test.
            * gcc.target/i386/mpx/pr79770.c: New test.
    
    From-SVN: r246376

commit 022b97b5f8ff5e64dffbd33a63c5dd4a175628ee
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:31:29 2017 +0100

    Backport r246129
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79831
            * doc/invoke.texi (-Wchkp): Document the option.
    
    From-SVN: r246375

commit e1273aca15b5304d1c194ce2a7c035f3359c2a83
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:31:04 2017 +0100

    Backport r246098
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-13  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/78339
            * ipa-pure-const.c (warn_function_noreturn): If the declarations
            is a CHKP clone, use original declaration.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-13  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/78339
            * gcc.target/i386/mpx/pr78339.c: New test.
    
    From-SVN: r246374

commit 0e1a6859c9ba166adcc8ac76e9a78666a6f597c3
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:30:42 2017 +0100

    Backport r237353,r245997,r246027
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-06-13  Martin Liska  <mliska@suse.cz>
    
            PR target/65705
            PR target/69804
            PR sanitizer/71458
    
            * toplev.c (process_options): Enable MPX with LSAN and UBSAN.
            * tree-chkp.c (chkp_walk_pointer_assignments): Verify that
            FIELD != NULL.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-06-13  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/71458
            * gcc.target/i386/pr71458.c: New test.
    
    From-SVN: r246373

commit 837892028aed82160a8a3aa3eb9552a50929801d
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:29:56 2017 +0100

    Backport r245998
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79631
            * tree-chkp-opt.c (chkp_is_constant_addr): Call
            tree_int_cst_sign_bit just for INTEGER constants.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79631
            * gcc.target/i386/mpx/pr79631.c: New test.
    
    From-SVN: r246372

commit 6a097a9a20a4e647c5ebfbd1e9d5d4f85b924bba
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:29:36 2017 +0100

    Backport r245993
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79761
            * tree-chkp.c (chkp_get_bound_for_parm): Get bounds for a param.
            (chkp_find_bounds_1): Remove gcc_unreachable.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79761
            * g++.dg/pr79761.C: New test.
    
    From-SVN: r246371

commit 8e36d86d94180e518c4296c8fb90dccd6421a8e7
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:29:07 2017 +0100

    Backport r245992
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            * c-ada-spec.c (macro_length): Increment value instead of a pointer.
    
    From-SVN: r246370

commit 3b091142cc221423b37958389ad284c0d3e9fa60
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:28:50 2017 +0100

    Backport r245869
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79803
            * tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Remove
            assert.
            (pass_loop_prefetch::execute): Disabled optimization if an
            assumption about L1 cache size is not met.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79803
            * gcc.dg/tree-ssa/pr79803.c: New test.
    
    From-SVN: r246369

commit 33c57f7ca506223a907d80b1900257409cb9ad82
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:28:21 2017 +0100

    Backport r245868
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcse.c (struct gcse_expr): Use HOST_WIDE_INT instead of int.
            (hash_scan_set): Likewise.
            (dump_hash_table): Likewise.
            (hoist_code): Likewise.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcc.dg/pr79574-2.c: New test.
    
    From-SVN: r246368

commit 94638c46668f9fcce4fe4b782b58ac9409221af2
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:28:00 2017 +0100

    Backport r245531
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcse.c (want_to_gcse_p): Prevent integer overflow.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcc.dg/pr79574.c: New test.
    
    From-SVN: r246367

commit 1bf72984b03aa8faeebb3ebe66de45d7c537d8f8
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 13:27:32 2017 +0100

    Backport r245532
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79577
            * params.def (selsched-max-sched-times): Increase minimum to 1.
    
    From-SVN: r246366

commit f6bf60633258a4308b54f4fc8dd622b91240f86c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 22 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246340

commit 8904ddb68340cf6c9722c6eb5a4c0adebcee4211
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue Mar 21 23:56:52 2017 +0000

    PR c++/79548 - missing -Wunused-variable on a typedef'd variable in a function template
    
    gcc/c-family/ChangeLog:
    
            PR c++/79548
            * c-common.c (set_underlying_type): Mark type used only when
            original del is declared unused.
    
    gcc/testsuite/ChangeLog:
    
            PR c++/79548
            * g++.dg/warn/Wunused-var-26.C: New test.
    
    From-SVN: r246337

commit 5a9408d1149e1cd897cb20ca5dd7a28fc5f78868
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Mar 21 16:36:39 2017 +0000

    re PR target/79951 (ICE in extract_insn, at recog.c:2311 on ppc64le with -mno-cmpb)
    
            PR target/79951
            * config/rs6000/rs6000.md (copysign<mode>3_fcpsgn): Test
            for VECTOR_UNIT_VSX_P (<MODE>mode) too.
            * gcc.target/powerpc/pr79951.c: New.
    
    From-SVN: r246328

commit 0abcffc5220847eca5af3e54ac2acb9c4f60b684
Author: Tamar Christina <tamar.christina@arm.com>
Date:   Tue Mar 21 09:47:07 2017 +0000

    [PATCH][GCC][AArch64] Fix incorrect INS in SIMD mov pattern
    
    2017-03-21  Tamar Christina  <tamar.christina@arm.com>
    
            * config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>)
            Change ins into fmov.
    
    From-SVN: r246309

commit f54ea210f5201ef572351d29cfabc98be2fd8337
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 21 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246298

commit 95c5dbda6d646028ba8943bb9e86193dcf173283
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 20 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246269

commit af0136c570166b45381ee2f0577875cc7cf59925
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Mar 19 11:00:27 2017 +0100

    re PR target/71017 (libgcc/config/i386/cpuinfo.c:346:17: runtime error: left shift of 1 by 31 places cannot be represented in type 'int')
    
    2017-03-19  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR target/71017
            * config/i386/cpuid.h: Fix another undefined behavior.
    
    From-SVN: r246268

commit 98ac4db115a6e3c3bc7d936943b031b120200167
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 19 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r246262

commit 5e2ba180eb1707f90eba524e9f0890615f6e8e37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 18 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246250

commit 9c24e93e4350da302ffa8c0ea899f67a3485ee30
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Mar 17 19:28:42 2017 +0000

    Backport <codecvt> fixes from trunk
    
    Fix alignment bugs in std::codecvt_utf16
    
            * src/c++11/codecvt.cc (range): Add non-type template parameter and
            define oerloaded operators for reading and writing code units.
            (range<Elem, false>): Define partial specialization for accessing
            wide characters in potentially unaligned byte ranges.
            (ucs2_span(const char16_t*, const char16_t*, ...))
            (ucs4_span(const char16_t*, const char16_t*, ...)): Change parameters
            to range<const char16_t, false> in order to avoid unaligned reads.
            (__codecvt_utf16_base<char16_t>::do_out)
            (__codecvt_utf16_base<char32_t>::do_out)
            (__codecvt_utf16_base<wchar_t>::do_out): Use range specialization for
            unaligned data to avoid unaligned writes.
            (__codecvt_utf16_base<char16_t>::do_in)
            (__codecvt_utf16_base<char32_t>::do_in)
            (__codecvt_utf16_base<wchar_t>::do_in): Likewise for writes. Return
            error if there are unprocessable trailing bytes.
            (__codecvt_utf16_base<char16_t>::do_length)
            (__codecvt_utf16_base<char32_t>::do_length)
            (__codecvt_utf16_base<wchar_t>::do_length): Pass arguments of type
            range<const char16_t, false> to span functions.
            * testsuite/22_locale/codecvt/codecvt_utf16/misaligned.cc: New test.
    
    PR libstdc++/79980 fix target type of cast
    
            PR libstdc++/79980
            * src/c++11/codecvt.cc (to_integer(codecvt_mode)): Fix target type.
    
    PR libstdc++/80041 fix codecvt_utf16<wchar_t> to use UTF-16 not UTF-8
    
            PR libstdc++/80041
            * src/c++11/codecvt.cc (__codecvt_utf16_base<wchar_t>::do_out)
            (__codecvt_utf16_base<wchar_t>::do_in): Convert char arguments to
            char16_t to work with UTF-16 instead of UTF-8.
            * testsuite/22_locale/codecvt/codecvt_utf16/80041.cc: New test.
    
    Fix encoding() and max_length() values for codecvt facets
    
            * src/c++11/codecvt.cc (codecvt<char16_t, char, mbstate_t>)
            (codecvt<char32_t, char, mbstate_t>, __codecvt_utf8_base<char16_t>)
            (__codecvt_utf8_base<char32_t>, __codecvt_utf8_base<wchar_t>)
            (__codecvt_utf16_base<char16_t>, __codecvt_utf16_base<char32_t>)
            (__codecvt_utf16_base<wchar_t>, __codecvt_utf8_utf16_base<char16_t>)
            (__codecvt_utf8_utf16_base<char32_t>)
            (__codecvt_utf8_utf16_base<wchar_t>): Fix do_encoding() and
            do_max_length() return values.
            * testsuite/22_locale/codecvt/codecvt_utf16/members.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8/members.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/members.cc: New test.
    
    PR libstdc++/79980 fix BOM detection, maxcode checks, UCS2 handling
    
            PR libstdc++/79980
            * include/bits/locale_conv.h (__do_str_codecvt): Set __count on
            error path.
            * src/c++11/codecvt.cc (operator&=, operator|=, operator~): Overloads
            for manipulating codecvt_mode values.
            (read_utf16_bom): Compare input to BOM constants instead of integral
            constants that depend on endianness.  Take mode parameter by
            reference and adjust it, to distinguish between no BOM present and
            UTF-16BE BOM present.
            (ucs4_in, ucs2_span, ucs4_span): Adjust calls to read_utf16_bom.
            (surrogates): New enumeration type.
            (utf16_in, utf16_out): Add surrogates parameter to choose between
            UTF-16 and UCS2 behaviour.
            (utf16_span, ucs2_span): Use std::min not std::max.
            (ucs2_out): Use std::min not std::max.  Disallow surrogate pairs.
            (ucs2_in): Likewise. Adjust calls to read_utf16_bom.
            * testsuite/22_locale/codecvt/codecvt_utf16/79980.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8/79980.cc: New test.
    
    PR libstdc++/79511 fix endianness of UTF-16 data
    
            PR libstdc++/79511
            * src/c++11/codecvt.cc (write_utf16_code_point): Don't write 0xffff
            as a surrogate pair.
            (__codecvt_utf8_utf16_base<char32_t>::do_in): Use native endianness
            for internal representation.
            (__codecvt_utf8_utf16_base<wchar_t>::do_in): Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/79511.cc: New test.
    
    From-SVN: r246247

commit 4e9aad95c09f9f56b7fa1ff76f54ad6cee017a6d
Author: Tom de Vries <tom@codesourcery.com>
Date:   Fri Mar 17 12:35:17 2017 +0000

    Backport "Print bug url for gcov-dump --help"
    
    2017-03-17  Tom de Vries  <tom@codesourcery.com>
    
            * gcov-dump.c (print_usage): Print bug_report_url.
    
    From-SVN: r246222

commit f143d5c7e17bfa42fcc67c14b4ebe7f18363062d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 17 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246214

commit 3f7188d05bb72ae37fd5b34a81860159a8b55362
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 16 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246183

commit 1d8e11c642656e853dcb7f62ae111515954069b5
Author: Matthias Klose <doko@ubuntu.com>
Date:   Wed Mar 15 20:56:01 2017 +0000

    backport: Makefile.in: Install gcov-dump.
    
    2017-03-15  Matthias Klose  <doko@ubuntu.com>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            * Makefile.in: Install gcov-dump.
    
    From-SVN: r246176

commit 92f990269f0b7bde62555c1c9555e73dfb29eb99
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Mar 15 17:15:53 2017 +0100

    re PR target/80019 (ICE in ix86_vector_duplicate_value, at config/i386/i386.c:42584)
    
            PR target/80019
            * config/i386/i386.c (ix86_vector_duplicate_value): Create
            subreg of inner mode for values already in registers.
    
    testsuite/ChangeLog:
    
            PR target/80019
            * gcc.target/i386/pr80019.c: New test.
    
    From-SVN: r246168

commit 36290ff8f5f6bbe277845a04305e73a29d4faf37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 15 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246147

commit 69ba2dc5dcc21781f8f7f4410c02fe093048edd0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 14 20:50:16 2017 +0000

    Fix libstdc++ reserved names test to pass on AIX
    
            * testsuite/17_intro/names.cc: Undefine macros that clash with
            identifiers in AIX system headers.
    
    From-SVN: r246143

commit 09a6ea2b5cfd6058d08bde79e824231987226de5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246113

commit 357c5fee98e516c1935247e0cfb929ba777ebc92
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Mar 13 21:44:42 2017 +0200

    re PR libstdc++/80034 (unqualified calls to std::distance in std::list::sort)
    
    PR libstdc++/80034
    * include/bits/list.tcc (merge(list&&)): Use const for the size_t
    in the function and in the catch-block, qualify uses of std::distance.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/80034.cc: New.
    
    From-SVN: r246109

commit a8b980dacb6f423eddca0a3e22e7d0fa7322fa41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 13 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246080

commit d8463556fb0ecd19b47e2c291abd518406ed4a50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246073

commit 6e52ffadfbf41621d0cdf773aed88e23e8802a91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 11 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r246060

commit 8fad553f7e00eb5005fa1cb8db38f66583829989
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Mar 10 20:53:18 2017 +0000

    backport: re PR target/79439 (Missing nop instruction after recursive call corrupts TOC register)
    
    [gcc]
    2017-03-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79439
            * config/rs6000/predicates.md (current_file_function_operand): Do
            not allow self calls to be local if the function is replaceable.
    
    [gcc/testsuite]
    2017-03-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79439
            * gcc.target/powerpc/pr79439.c: New test.
    
    From-SVN: r246058

commit 0a222c3778030c04c4b7fbd5aee9882a13eb15e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r246017

commit 76921446138b63a4d73a7bcd338baa273f92adf8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 9 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245983

commit b0280f8a4f90fd2935168638136396029212bb8d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245964

commit 9747c90b849900ba533bf15ffcdee1da484d1b5a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Mar 7 19:43:15 2017 +0100

    backport: i386.c (ix86_local_alignment): Align most aggregates of 16 bytes and more to 16 bytes...
    
            Backport from mainline
            2017-03-07  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * config/i386/i386.c (ix86_local_alignment): Align most aggregates
            of 16 bytes and more to 16 bytes, not those of 16 bits and more.
    
    From-SVN: r245958

commit 72a266ea33292d6e2193c9d288cc1f0bd8bc6abc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245941

commit 86d40dcaf4d8cc07500638ca1821bb430981a994
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Mar 6 23:10:37 2017 +0000

    Fix typo.
    
    From-SVN: r245935

commit db4fdc0dc04cd34ada021eab06a89826f39bd2ee
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Mar 6 22:55:33 2017 +0000

    PR target 77850
    
            PR target 77850
            * config/pa/pa-64.h (PAD_VARARGS_DOWN): Don't pad down complex and
            vector types.
    
    From-SVN: r245934

commit cd62ec71bcc6b2beeaf5b871c9254158d0af2c70
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 6 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245905

commit 1104e1501cb6c1bc7304b72d159cdee9be7724fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 5 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245895

commit 80757e822e6b2ca70e073cee3a504a45d3d51b2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 4 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245888

commit 96c1c59618bacbabd02376632dfa2978ace7b37e
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Mar 3 10:35:17 2017 +0100

    i386.md (*pushxf_rounded): Use Pmode instead of DImode.
    
            * config/i386/i386.md (*pushxf_rounded): Use Pmode instead of DImode.
    
    From-SVN: r245863

commit 4be85e2555f75047448023523161cde42bd7495e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245855

commit d46560241d3991ea99cccf32b792b11a870c5735
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Mar 2 22:35:38 2017 +0100

    re PR target/79514 (ICE in curr_insn_transform, at lra-constraints.c:3773)
    
            PR target/79514
            * config/i386/i386.md (*pushxf_rounded): New insn_and_split pattern.
    
    testsuite/ChangeLog:
    
            PR target/79514
            * gcc.target/i386/pr79514.c: New test.
    
    From-SVN: r245854

commit e95f77d9b23f13c8cfb3dfc3efa860ae5f532a1f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Mar 2 18:59:06 2017 +0000

    PR libstdc++/79789 fix non-reserved names in headers
    
            PR libstdc++/79789
            * include/bits/ios_base.h (make_error_code, make_error_condition):
            Likewise.
            * include/bits/mask_array.h (mask_array): Likewise.
            * include/bits/regex.h (regex_token_iterator): Likewise.
            * include/bits/slice_array.h (slice_array): Likewise.
            * include/std/memory (undeclare_no_pointers): Likewise.
            * testsuite/17_intro/names.cc: New test.
    
    From-SVN: r245847

commit 39a79604f337700142de7b06091be05883510b3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245823

commit 131c883e311e2bf02a905ec1e6c44a763a2ab5d1
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Wed Mar 1 21:17:46 2017 +0000

    re PR target/79544 (vec_sra (unsigned long long,foo) generating vsrd instead of vsrad)
    
            PR target/79544
            * rs6000/rs6000-c.c (struct altivec_builtin_types): Use VSRAD for
            arithmetic shift of unsigned V2DI.
    
            * gcc.target/powerpc/pr79544.c: New.
    
    From-SVN: r245818

commit a5d5566902e1da94b5a315beb81c92a03da07100
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Mar 1 14:54:56 2017 +0100

    [PR 79579] Avoid segfault on NULL ipa_edge_args_vector
    
    2017-03-01  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2017-02-21  Martin Jambor  <mjambor@suse.cz>
    
            PR lto/79579
            * ipa-prop.c (ipa_prop_write_jump_functions): Bail out if no edges
            have been analyzed.
    
    From-SVN: r245810

commit f8d766f647941b37757dc7fade61bcd2e76f7d17
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 1 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r245797

commit 63d1bb64aaf09248ac6f27af86df452ee119e23e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Feb 28 22:19:56 2017 +0000

    re PR target/79749 (Many sparc testcases FAIL at -O0 with -fomit-frame-pointer)
    
            PR target/79749
            * config/sparc/sparc.c (sparc_frame_pointer_required): Add missing
            condition on optimize for the leaf function test.
    
    From-SVN: r245793

commit 1768c4a29349914079d8420f8acf33b0834f0a95
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 28 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245765

commit 61b1c77070947f65ab578ffe79c20bb25bee2ff1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 27 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r245748

commit 95504af4827e1ae5d7b026236c233e1209e28ca3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 26 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245742

commit 0e53f6bd94a36ba588e4342eaf8fd2ee574c31ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 25 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r245730

commit 2f0bb16078c93bea746125fd3609e89fc6a1663a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 10:54:21 2017 +0000

    trans.c (gnat_to_gnu): Do not apply special handling of boolean rvalues to function calls.
    
            * gcc-interface/trans.c (gnat_to_gnu): Do not apply special handling
            of boolean rvalues to function calls.
    
    From-SVN: r245708

commit 50c86b6887243040855170a93cc7d340fa88cb17
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 10:40:56 2017 +0000

    * gcc-interface/trans.c (return_value_ok_for_nrv_p): Add sanity check.
    
    From-SVN: r245703

commit f58d3456c582680045ba8b2380a4479fbb109f05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 24 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r245693

commit 2bd7c7b8152bd16b3ce02c8faa0547f67264af4a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 23 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245669

commit c0d93545ed8b5ef0d8ed96a27981732cbb961062
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Feb 22 22:54:56 2017 +0000

    backport: re PR target/79261 (vec_xxpermdi appears to have endian issues)
    
    [gcc]
    
    2017-02-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79261
            * config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Add
            support for CODE_FOR_vsx_xxpermdi_v2d[fi]_be.
            * config/rs6000/rs6000.md (reload_gpr_from_vsx<mode>): Call
            generator for vsx_xxpermdi_<mode>_be.
            * config/rs6000/vsx.md (vsx_xxpermdi_<mode>): Remove logic to
            force big-endian semantics.
            (vsx_xxpermdi_<mode>_be): New define_expand with same
            implementation as previous version of vsx_xxpermdi_<mode>.
    
    [gcc/testsuite]
    
    2017-02-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79261
            * gcc.target/powerpc/vec-xxpermdi.c: New file.
    
    From-SVN: r245664

commit b64b6f48f497e2b69724c8cabcc7507b8cb65aaa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 22 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245644

commit 8e6b76e41bd6a2b3ac396175736747bdd8b11ff3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 21 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245616

commit 06e187d9886eca500a136f5c37606cd36fa68b72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 20 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r245583

commit 19165663316f6d5027f8793a895a6b06d9627719
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Feb 19 17:12:34 2017 +0100

    re PR target/71017 (libgcc/config/i386/cpuinfo.c:346:17: runtime error: left shift of 1 by 31 places cannot be represented in type 'int')
    
    2017-02-19  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR target/71017
            * config/i386/cpuid.h: Fix undefined behavior.
    
    From-SVN: r245576

commit de1d26f3e669931cf9edcc7b0f7b996d857cd225
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 19 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r245567

commit e56c09f53ab5a8f55b0c08a3d9d3f11cc041c7a9
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sat Feb 18 22:58:48 2017 +0000

    backport: x86-64.h: Append --32 to the assembler options when -m16 is used on non-glibc systems as well.
    
            Backport from mainline
            2016-12-11  Roger Pau Monné  <roger.pau@citrix.com>
    
            * config/i386/x86-64.h: Append --32 to the assembler options when
            -m16 is used on non-glibc systems as well.
    
    From-SVN: r245566

commit e8ec4f770b25bf71837928d9cdcb6185e32c6d05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 18 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245556

commit 21327fe5f1a978d374beba579350734ff759eb8d
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Feb 17 20:23:28 2017 +0100

    backport: re PR sanitizer/79562 (sanitizer breaks bootstrap of x86_64-*-freebsd)
    
    2017-02-17  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backported from mainline
        2017-02-16  Andreas Tobler  <andreast@gcc.gnu.org>
    
        PR sanitizer/79562
        * sanitizer_common/sanitizer_platform_limits_posix.cc: Cherry-pick
        upstream r294806.
    
    From-SVN: r245547

commit 9cdd568036ada33c6cd7649c6f55e4359f1ca5a5
Author: Julia Koval <julia.koval@intel.com>
Date:   Fri Feb 17 17:35:37 2017 +0100

    re PR target/76731 ([AVX512] _mm512_i32gather_epi32 and other scatter/gather routines have incorrect signature)
    
            PR target/76731
            * config/i386/avx512fintrin.h
            (_mm512_i32gather_ps): Change __addr type to void const*.
            (_mm512_mask_i32gather_ps): Ditto.
            (_mm512_i32gather_pd): Ditto.
            (_mm512_mask_i32gather_pd): Ditto.
            (_mm512_i64gather_ps): Ditto.
            (_mm512_mask_i64gather_ps): Ditto.
            (_mm512_i64gather_pd): Ditto.
            (_mm512_mask_i64gather_pd): Ditto.
            (_mm512_i32gather_epi32): Ditto.
            (_mm512_mask_i32gather_epi32): Ditto.
            (_mm512_i32gather_epi64): Ditto.
            (_mm512_mask_i32gather_epi64): Ditto.
            (_mm512_i64gather_epi32): Ditto.
            (_mm512_mask_i64gather_epi32): Ditto.
            (_mm512_i64gather_epi64): Ditto.
            (_mm512_mask_i64gather_epi64): Ditto.
            (_mm512_i32scatter_ps): Change __addr type to void*.
            (_mm512_mask_i32scatter_ps): Ditto.
            (_mm512_i32scatter_pd): Ditto.
            (_mm512_mask_i32scatter_pd): Ditto.
            (_mm512_i64scatter_ps): Ditto.
            (_mm512_mask_i64scatter_ps): Ditto.
            (_mm512_i64scatter_pd): Ditto.
            (_mm512_mask_i64scatter_pd): Ditto.
            (_mm512_i32scatter_epi32): Ditto.
            (_mm512_mask_i32scatter_epi32): Ditto.
            (_mm512_i32scatter_epi64): Ditto.
            (_mm512_mask_i32scatter_epi64): Ditto.
            (_mm512_i64scatter_epi32): Ditto.
            (_mm512_mask_i64scatter_epi32): Ditto.
            (_mm512_i64scatter_epi64): Ditto.
            (_mm512_mask_i64scatter_epi64): Ditto.
            * config/i386/avx512pfintrin.h
            (_mm512_mask_prefetch_i32gather_pd): Change addr type to void const*.
            (_mm512_mask_prefetch_i32gather_ps): Ditto.
            (_mm512_mask_prefetch_i64gather_pd): Ditto.
            (_mm512_mask_prefetch_i64gather_ps): Ditto.
            (_mm512_prefetch_i32scatter_pd): Change addr type to void*.
            (_mm512_prefetch_i32scatter_ps): Ditto.
            (_mm512_mask_prefetch_i32scatter_pd): Ditto.
            (_mm512_mask_prefetch_i32scatter_ps): Ditto.
            (_mm512_prefetch_i64scatter_pd): Ditto.
            (_mm512_prefetch_i64scatter_ps): Ditto.
            (_mm512_mask_prefetch_i64scatter_pd): Ditto.
            (_mm512_mask_prefetch_i64scatter_ps): Ditto.
            * config/i386/avx512vlintrin.h
            (_mm256_mmask_i32gather_ps): Change __addr type to void const*.
            (_mm_mmask_i32gather_ps): Ditto.
            (_mm256_mmask_i32gather_pd): Ditto.
            (_mm_mmask_i32gather_pd): Ditto.
            (_mm256_mmask_i64gather_ps): Ditto.
            (_mm_mmask_i64gather_ps): Ditto.
            (_mm256_mmask_i64gather_pd): Ditto.
            (_mm_mmask_i64gather_pd): Ditto.
            (_mm256_mmask_i32gather_epi32): Ditto.
            (_mm_mmask_i32gather_epi32): Ditto.
            (_mm256_mmask_i32gather_epi64): Ditto.
            (_mm_mmask_i32gather_epi64): Ditto.
            (_mm256_mmask_i64gather_epi32): Ditto.
            (_mm_mmask_i64gather_epi32): Ditto.
            (_mm256_mmask_i64gather_epi64): Ditto.
            (_mm_mmask_i64gather_epi64): Ditto.
            (_mm256_i32scatter_ps): Change __addr type to void*.
            (_mm256_mask_i32scatter_ps): Ditto.
            (_mm_i32scatter_ps): Ditto.
            (_mm_mask_i32scatter_ps): Ditto.
            (_mm256_i32scatter_pd): Ditto.
            (_mm256_mask_i32scatter_pd): Ditto.
            (_mm_i32scatter_pd): Ditto.
            (_mm_mask_i32scatter_pd): Ditto.
            (_mm256_i64scatter_ps): Ditto.
            (_mm256_mask_i64scatter_ps): Ditto.
            (_mm_i64scatter_ps): Ditto.
            (_mm_mask_i64scatter_ps): Ditto.
            (_mm256_i64scatter_pd): Ditto.
            (_mm256_mask_i64scatter_pd): Ditto.
            (_mm_i64scatter_pd): Ditto.
            (_mm_mask_i64scatter_pd): Ditto.
            (_mm256_i32scatter_epi32): Ditto.
            (_mm256_mask_i32scatter_epi32): Ditto.
            (_mm_i32scatter_epi32): Ditto.
            (_mm_mask_i32scatter_epi32): Ditto.
            (_mm256_i32scatter_epi64): Ditto.
            (_mm256_mask_i32scatter_epi64): Ditto.
            (_mm_i32scatter_epi64): Ditto.
            (_mm_mask_i32scatter_epi64): Ditto.
            (_mm256_i64scatter_epi32): Ditto.
            (_mm256_mask_i64scatter_epi32): Ditto.
            (_mm_i64scatter_epi32): Ditto.
            (_mm_mask_i64scatter_epi32): Ditto.
            (_mm256_i64scatter_epi64): Ditto.
            (_mm256_mask_i64scatter_epi64): Ditto.
            (_mm_i64scatter_epi64): Ditto.
            (_mm_mask_i64scatter_epi64): Ditto.
            * config/i386/i386-builtin-types.def (V16SF_V16SF_PCFLOAT_V16SI_HI_INT)
            (V8DF_V8DF_PCDOUBLE_V8SI_QI_INT, V8SF_V8SF_PCFLOAT_V8DI_QI_INT)
            (V8DF_V8DF_PCDOUBLE_V8DI_QI_INT, V16SI_V16SI_PCINT_V16SI_HI_INT)
            (V8DI_V8DI_PCINT64_V8SI_QI_INT, V8SI_V8SI_PCINT_V8DI_QI_INT)
            (V8DI_V8DI_PCINT64_V8DI_QI_INT, V2DF_V2DF_PCDOUBLE_V4SI_QI_INT)
            (V4DF_V4DF_PCDOUBLE_V4SI_QI_INT, V2DF_V2DF_PCDOUBLE_V2DI_QI_INT)
            (V4DF_V4DF_PCDOUBLE_V4DI_QI_INT, V4SF_V4SF_PCFLOAT_V4SI_QI_INT)
            (V8SF_V8SF_PCFLOAT_V8SI_QI_INT, V4SF_V4SF_PCFLOAT_V2DI_QI_INT)
            (V4SF_V4SF_PCFLOAT_V4DI_QI_INT, V2DI_V2DI_PCINT64_V4SI_QI_INT)
            (V4DI_V4DI_PCINT64_V4SI_QI_INT, V2DI_V2DI_PCINT64_V2DI_QI_INT)
            (V4DI_V4DI_PCINT64_V4DI_QI_INT, V4SI_V4SI_PCINT_V4SI_QI_INT)
            (V8SI_V8SI_PCINT_V8SI_QI_INT, V4SI_V4SI_PCINT_V2DI_QI_INT)
            (V4SI_V4SI_PCINT_V4DI_QI_INT, VOID_PFLOAT_HI_V16SI_V16SF_INT)
            (VOID_PFLOAT_QI_V8SI_V8SF_INT, VOID_PFLOAT_QI_V4SI_V4SF_INT)
            (VOID_PDOUBLE_QI_V8SI_V8DF_INT, VOID_PDOUBLE_QI_V4SI_V4DF_INT)
            (VOID_PDOUBLE_QI_V4SI_V2DF_INT, VOID_PFLOAT_QI_V8DI_V8SF_INT)
            (VOID_PFLOAT_QI_V4DI_V4SF_INT, VOID_PFLOAT_QI_V2DI_V4SF_INT)
            (VOID_PDOUBLE_QI_V8DI_V8DF_INT, VOID_PDOUBLE_QI_V4DI_V4DF_INT)
            (VOID_PDOUBLE_QI_V2DI_V2DF_INT, VOID_PINT_HI_V16SI_V16SI_INT)
            (VOID_PINT_QI_V8SI_V8SI_INT, VOID_PINT_QI_V4SI_V4SI_INT)
            (VOID_PLONGLONG_QI_V8SI_V8DI_INT, VOID_PLONGLONG_QI_V4SI_V4DI_INT)
            (VOID_PLONGLONG_QI_V4SI_V2DI_INT, VOID_PINT_QI_V8DI_V8SI_INT)
            (VOID_PINT_QI_V4DI_V4SI_INT, VOID_PINT_QI_V2DI_V4SI_INT)
            (VOID_PLONGLONG_QI_V8DI_V8DI_INT, VOID_QI_V8SI_PCINT64_INT_INT)
            (VOID_PLONGLONG_QI_V4DI_V4DI_INT, VOID_PLONGLONG_QI_V2DI_V2DI_INT)
            (VOID_HI_V16SI_PCINT_INT_INT, VOID_QI_V8DI_PCINT64_INT_INT)
            (VOID_QI_V8DI_PCINT_INT_INT): Remove.
            (V16SF_V16SF_PCVOID_V16SI_HI_INT,  V8DF_V8DF_PCVOID_V8SI_QI_INT)
            (V8SF_V8SF_PCVOID_V8DI_QI_INT, V8DF_V8DF_PCVOID_V8DI_QI_INT)
            (V16SI_V16SI_PCVOID_V16SI_HI_INT, V8DI_V8DI_PCVOID_V8SI_QI_INT)
            (V8SI_V8SI_PCVOID_V8DI_QI_INT, V8DI_V8DI_PCVOID_V8DI_QI_INT)
            (VOID_PVOID_HI_V16SI_V16SF_INT, VOID_PVOID_QI_V8SI_V8DF_INT)
            (VOID_PVOID_QI_V8DI_V8SF_INT, VOID_PVOID_QI_V8DI_V8DF_INT)
            (VOID_PVOID_HI_V16SI_V16SI_INT, VOID_PVOID_QI_V8SI_V8DI_INT)
            (VOID_PVOID_QI_V8DI_V8SI_INT, VOID_PVOID_QI_V8DI_V8DI_INT)
            (V2DF_V2DF_PCVOID_V4SI_QI_INT, V4DF_V4DF_PCVOID_V4SI_QI_INT)
            (V2DF_V2DF_PCVOID_V2DI_QI_INT, V4DF_V4DF_PCVOID_V4DI_QI_INT
            (V4SF_V4SF_PCVOID_V4SI_QI_INT, V8SF_V8SF_PCVOID_V8SI_QI_INT)
            (V4SF_V4SF_PCVOID_V2DI_QI_INT, V4SF_V4SF_PCVOID_V4DI_QI_INT)
            (V2DI_V2DI_PCVOID_V4SI_QI_INT, V4DI_V4DI_PCVOID_V4SI_QI_INT)
            (V2DI_V2DI_PCVOID_V2DI_QI_INT, V4DI_V4DI_PCVOID_V4DI_QI_INT)
            (V4SI_V4SI_PCVOID_V4SI_QI_INT, V8SI_V8SI_PCVOID_V8SI_QI_INT)
            (V4SI_V4SI_PCVOID_V2DI_QI_INT, V4SI_V4SI_PCVOID_V4DI_QI_INT)
            (VOID_PVOID_QI_V8SI_V8SF_INT, VOID_PVOID_QI_V4SI_V4SF_INT)
            (VOID_PVOID_QI_V4SI_V4DF_INT, VOID_PVOID_QI_V4SI_V2DF_INT)
            (VOID_PVOID_QI_V4DI_V4SF_INT, VOID_PVOID_QI_V2DI_V4SF_INT)
            (VOID_PVOID_QI_V4DI_V4DF_INT, VOID_PVOID_QI_V2DI_V2DF_INT)
            (VOID_PVOID_QI_V8SI_V8SI_INT, VOID_PVOID_QI_V4SI_V4SI_INT)
            (VOID_PVOID_QI_V4SI_V4DI_INT, VOID_PVOID_QI_V4SI_V2DI_INT)
            (VOID_PVOID_QI_V4DI_V4SI_INT, VOID_PVOID_QI_V2DI_V4SI_INT)
            (VOID_PVOID_QI_V4DI_V4DI_INT, VOID_PVOID_QI_V2DI_V2DI_INT)
            (VOID_QI_V8SI_PCVOID_INT_INT, VOID_HI_V16SI_PCVOID_INT_INT)
            (VOID_QI_V8DI_PCVOID_INT_INT): Add.
            * config/i386/i386.c (ix86_init_mmx_sse_builtins): Adjust builtin
            definitions accordingly.
    
    From-SVN: r245537

commit 853a709124533005884371e0e70b8c4512264ea4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 17 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245522

commit c305387772b680aa10be4ef64eda403abedf3860
Author: Carl Love <cel@us.ibm.com>
Date:   Thu Feb 16 20:59:20 2017 +0000

    backport: re PR target/79545 (gcc[5/6]: RS6000, xvcvuxdsp and xvcvsxdsp RTL defines have wrong type)
    
    gcc/ChangeLog:
    
    2017-02-16  Carl Love  <cel@us.ibm.com>
    
       Backport from mainline commit r245460 on 2017-02-14
    
       PR 79545
       * config/rs6000/rs6000.c: Add case statement entry to make the xvcvuxdsp
       built-in argument unsigned.
       * config/rs6000/vsx.md: Fix the source and return operand types so they
       match the instruction definitions from the ISA document.  Fix typo
       in the instruction generation for the (define_insn "vsx_xvcvuxdsp"
       statement.
    
    
    gcc/testsuite/ChangeLog:
    
    2017-01-16  Carl Love  <cel@us.ibm.com>
    
       Backport from mainline commit r245460 on 2017-02-14
    
       PR 79545
       * gcc.target/powerpc/vsx-builtin-3.c: Add missing test case for the
       xvcvsxdsp and xvcvuxdsp instructions.
    
    From-SVN: r245518

commit 78cfba37a41596aad49f1dcdb3db298c88e4ccb5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 16 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245497

commit 75047a8a10cc7fb63fc38e66e6a3adedf3f70684
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 15 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245462

commit ba5c2578fe438784e00e00a74fc92ca5c03fb364
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 21:17:34 2017 +0000

    PR69321 fix any_cast<T>(any*) for non-copyable T
    
    Backport from mainline
    2017-01-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69321
            * include/experimental/any (__any_caster): Avoid instantiating
            manager function for types that can't be stored in any.
            * testsuite/experimental/any/misc/any_cast.cc: Likewise.
            * testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error.
    
    From-SVN: r245458

commit c990e075093b426e2aad975ee2591f1bb855e9f0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 21:17:29 2017 +0000

    PR69301 don't assume atomic<T> can default construct T
    
    Backport from mainline
    2017-01-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69301
            * include/std/atomic (atomic<T>::load, atomic<T>::exchange): Use
            aligned buffer instead of default-initialized variable.
            * testsuite/29_atomics/atomic/69301.cc: New test.
            * include/ext/pointer.h (_Pointer_adapter::operator++(int))
            (_Pointer_adapter::operator--(int)): Likewise.
    
    From-SVN: r245457

commit 1ef78854d220a861cfbd9ae37a8f576866f38c5c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 21:17:23 2017 +0000

    PR78702 fix accessibility of locale::facet::__shim
    
    Backport from mainline
    2017-01-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78702
            * include/bits/locale_classes.h (locale::facet::__shim): Change from
            private to protected.
            * src/c++11/cxx11-shim_facets.cc (__shim_accessor): Define helper to
            make locale::facet::__shim accessible.
    
    From-SVN: r245456

commit ecf76b5d064f448941a569a83c93ccd1fd7f383b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 21:17:18 2017 +0000

    PR78134 fix return types of heterogeneous lookup functions
    
    Backport from mainline
    2017-01-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78134
            * include/bits/stl_map.h (map::lower_bound, map::upper_bound)
            (map::equal_range): Fix return type of heterogeneous overloads.
            * include/bits/stl_multimap.h (multimap::lower_bound)
            (multimap::upper_bound, multimap::equal_range): Likewise.
            * include/bits/stl_multiset.h (multiset::lower_bound)
            (multiset::upper_bound, multiset::equal_range): Likewise.
            * include/bits/stl_set.h (set::lower_bound, set::upper_bound)
            (set::equal_range): Likewise.
            * testsuite/23_containers/map/operations/2.cc: Check return types.
            * testsuite/23_containers/multimap/operations/2.cc: Likewise.
            * testsuite/23_containers/multiset/operations/2.cc: Likewise.
            * testsuite/23_containers/set/operations/2.cc: Likewise.
    
    From-SVN: r245455

commit d8da03aa1f3819f35839ad1c576eeaa8b1ad61b9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 21:17:11 2017 +0000

    PR78273 fix count to work with partitioning function
    
    Backport from mainline
    2017-01-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78273
            * include/bits/stl_map.h (map::count<_Kt>(const _Kt&)): Don't assume
            the heterogeneous comparison can only find one match.
            * include/bits/stl_set.h (set::count<_Kt>(const _Kt&)): Likewise.
            * testsuite/23_containers/map/operations/2.cc: Test count works with
            comparison function that just partitions rather than sorting.
            * testsuite/23_containers/set/operations/2.cc: Likewise.
    
    From-SVN: r245454

commit 0ec41e9fbb443ea0f5e340c8fe63ffd8752e8fd1
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Feb 14 11:45:31 2017 +0100

    backport: [multiple changes]
    
    2016-03-01  Richard Biener  <rguenther@suse.de>
    
    2017-02-14  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-03-01  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70022
            PR target/79498
            * fold-const.c (fold_indirect_ref_1): Fix range checking for
            vector BIT_FIELD_REF extract.
    
    From-SVN: r245426

commit 40f667a96c13dbd19d1a88c42b0cb91ef3ff268d
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Feb 14 09:03:42 2017 +0100

    Replace XALLOCAVEC with XCNEWVEC (PR c/79471).
    
    2017-02-14  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-13  Martin Liska  <mliska@suse.cz>
    
            PR c/79471
            * calls.c (expand_call): Replace XALLOCAVEC with XCNEWVEC.
    
    From-SVN: r245418

commit c740558c53942c587cc7f19e9bdb423c39b1b748
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245412

commit 4d0efdd1941c065b2cf08436bc062aa95abe6ac8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 13 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245379

commit 0b4f0d3596881eec6c3c1307de947cd5422c93be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 12 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245368

commit c7c69b464ec0c955be4e3cad7b9f015b052edf61
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 11 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245351

commit 53c9e50664c231061e87ef592e9b02e7ea696dd2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 10 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r245318

commit 4ab4d7f890b85f4c3a9c0dfb6d7b23c80600582a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245289

commit d560fa2440abe8c872cf2786cbd2cc2381baa02a
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Feb 8 22:44:37 2017 +0100

    rs6000: Fix spelling of AltiVec in rs6000.opt (PR79397)
    
    It was spelled Altivec in two user-facing messages in rs6000.opt; let's
    be consistent.
    
    
            PR translation/79397
            * config/rs6000/rs6000.opt (maltivec=le, maltivec=be): Fix spelling
            of AltiVec.
    
    From-SVN: r245287

commit 7179557525dc4e81c47cbf644d8744f5a3483193
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Feb 8 00:37:22 2017 +0000

    trans-types.c (gfc_get_int_kind_from_width_isofortranen): Choose REAL type with the widest precision if...
    
    2017-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            * trans-types.c (gfc_get_int_kind_from_width_isofortranen):  Choose
            REAL type with the widest precision if two (or more) have the same
            storage size.
    
    From-SVN: r245265

commit e4c73f82d411fc2327737a036eb37177306f5b73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245262

commit 2d34b90ee2e3a701d2bac5d9c280c84c3fdf9fee
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Feb 7 12:51:00 2017 +0000

    [ARM][PR target/78945] Fix libatomic on armv7-m
    
    libatomic/
    
            Backport from mainline:
            2017-01-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/78945
            * config/arm/exch_n.c (libat_exchange): Check __ARM_FEATURE_SIMD32.
    
    From-SVN: r245247

commit 07f11561a45d46ad22f90b34cfb53e20e0c0077b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245235

commit d4fbac528bdfaafb16b2f02f6524d1003eb9e3e9
Author: Carl Love <cel@us.ibm.com>
Date:   Mon Feb 6 17:40:29 2017 +0000

    backport: dated 2017-01-26 and 2017-01-25 respectively
    
    
    gcc/ChangeLog:
    
    2017-02-06  Carl Love  <cel@us.ibm.com>
    
            Backport of two commits from mainline, r244943 and r244904,
            dated 2017-01-26 and 2017-01-25 respectively
    
            * config/rs6000/rs6000-c (altivec_overloaded_builtins): Fix order
            of entries for ALTIVEC_BUILTIN_VEC_PACKS.  Remove bogus entries
            for P8V_BUILTIN_VEC_VGBBD.
    
    gcc/testsuite/ChangeLog:
    
    2017-02-06  Carl Love  <cel@us.ibm.com>
            * gcc.target/powerpc/builtins-3-p8.c:  Add new testfile for missing
            vec_packs built-in tests.
    
    From-SVN: r245212

commit f7c2d9efe2ecc10695483ec8aa99379446817116
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 6 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245200

commit 6d138b2d8560c8cad6fa11f01628fa5a7a9168bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 5 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r245185

commit ff9120df4456ea0190a39804796e4a1105e46adb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 4 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r245175

commit a2d82db755f3ab3c929f1edaec402245f157dcf2
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Feb 3 19:06:58 2017 +0000

    backport: re PR testsuite/65484 (FAIL: g++.dg/vect/pr36648.cc on powerpc64)
    
    2017-02-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65484
            * g++.dg/vect/pr36648.cc: Modify to reflect that the loop is not
            vectorized on POWER unless hardware misaligned loads are
            available.
    
    From-SVN: r245164

commit c09827a09b43dcfa6b621a5ad42adce21091b551
Author: Maxim Ostapenko <m.ostapenko@samsung.com>
Date:   Fri Feb 3 09:13:06 2017 +0000

    re PR lto/79061 ([LTO][ASAN] LTO plus ASAN fails with "AddressSanitizer: initialization-order-fiasco")
    
            PR lto/79061
            * asan.c (asan_add_global): Force has_dynamic_init to zero in LTO mode.
    
    From-SVN: r245148

commit bafa195c08af0a6b2074f88b74b91d5d865e013c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245139

commit 66a78795786bc7cec1016b4fb0716e0e3c4343d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245112

commit 9f52e28b4680e10b6fa995735126acd2740ef7f1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 1 12:57:58 2017 +0000

    PR78346 make <bits/predefined_ops.h> handle stashing iterators
    
            PR libstdc++/78346
            * include/bits/predefined_ops.h (_Iter_equals_iter): Store iterator
            not its referent.
            (_Iter_comp_to_iter): Likewise.
            * testsuite/25_algorithms/search/78346.cc: New test.
    
    From-SVN: r245092

commit 26722ba9572c6d5124ae44ad9f0a304554668344
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 1 12:18:43 2017 +0000

    PR libstdc++/79254 fix exception-safety of std::string copy assignment
    
            PR libstdc++/79254
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI]
            (basic_string::operator=(const basic_string&)): If source object is
            small just deallocate, otherwise perform new allocation before
            making any changes.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:
            Test exception-safety of copy assignment when allocator propagates.
            * testsuite/21_strings/basic_string/allocator/char/copy_assign.cc:
            Likewise.
            * testsuite/util/testsuite_allocator.h (uneq_allocator::swap): Make
            std::swap visible.
    
    From-SVN: r245088

commit e46bd39e36e2d914e050416b6e5817da885c42f9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 1 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245077

commit 9c9e9827e6ef4a855407c6fbc4f60591e79ad6fa
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Jan 31 21:42:01 2017 +0000

    re PR fortran/79305 (real128 - undefined reference to cexpl)
    
    2017-01-31  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/79305
            * c99_protos.h: Spell HAVE_EXPL correctly.
            * intrinsics/c99_functions.c: Ditto.
    
    From-SVN: r245074

commit 30c74a3dfe25596c0a91700202fbd04560ec8f28
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 31 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r245042

commit 10da66140c7cbb0b7515cbf9c80f0d77fa23d7d0
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Jan 30 16:08:42 2017 +0000

    Only declare gets for C++ < 2014 on Solaris (PR libstdc++/78979)
    
            Backport from mainline
            2017-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR libstdc++/78979
            * inclhack.def (solaris_gets_c11, solaris_gets_cxx14)
            (solaris_std_gets_cxx14, solaris_stdlib_noreturn): New fixes.
            * fixincl.x: Regenerate.
            * tests/base/iso/stdio_iso.h [SOLARIS_GETS_C11_CHECK,
            SOLARIS_GETS_CXX14_CHECK, SOLARIS_STD_GETS_CXX14_CHECK,
            SOLARIS_STDLIB_NORETURN_CHECK]: New tests.
    
    From-SVN: r245034

commit 7819dab0c4f1bf9654c028005af2d3c41f8be512
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 30 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245018

commit 8299cc51060e55a8c361975a590233508623a083
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 29 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r245011

commit 8d4b7a8980a6b4bad4a7803b84d2d8fd639f20ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 28 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r245000

commit 1dc6fcd6331a98d6d22007f5b00e1876e09fa562
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 27 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r244958

commit 7cfcc8043b47ac8dae3b40925ccadcf11c981742
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 26 13:08:43 2017 +0000

    backport: [multiple changes]
    
    2017-01-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-01-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79034
            * tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):
            Propagate out degenerate PHIs in the joiner.
    
            * g++.dg/torture/pr79034.C: New testcase.
    
            2016-11-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78224
            * tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):
            Split the fallthru edge in case its successor may have PHIs.
            Do not free dominance info.
    
            * g++.dg/torture/pr78224.C: New testcase.
    
    From-SVN: r244930

commit 92763b509e67616f446e6d21e780f1aa727e75b9
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 26 08:16:37 2017 +0000

    backport: [multiple changes]
    
    2017-01-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77745
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            When removing redundant stores make sure to check compatibility
            of the TBAA state for downstream accesses.
            * tree-ssa-sccvn.c (visit_reference_op_store): Likewise for when
            value-numbering virtual operands for store matches.
    
            * g++.dg/torture/pr77745.C: New testcase.
    
            2016-09-29  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77768
            * tree-ssa-sccvn.c (visit_reference_op_store): Properly deal
            with stores to a place we know has a constant value.
            * tree-vrp.c (set_defs_to_varying): New helper avoiding
            writing to vr_const_varying.
            (vrp_initialize): Call it.
            (vrp_visit_stmt): Likewise.
            (evrp_dom_walker::before_dom_children): Likewise.
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            Handle stores to readonly memory when removing redundant stores.
    
            * gcc.dg/torture/pr77768.c: New testcase.
    
    From-SVN: r244918

commit d77711f48c5a9d63d507b17a585bf1ce57abf587
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244913

commit b3bafe18309c42b57903076129a0f485f68113ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 25 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r244886

commit 36e7ea4b97d44ce5174deb6b8e76333d9683b3d9
Author: Wilco Dijkstra <wilco@gcc.gnu.org>
Date:   Tue Jan 24 14:15:44 2017 +0000

    Add missing test.
    
        testsuite/
            * gcc.target/arm/pr78041.c: New test.
    
    From-SVN: r244873

commit dd361afeb75bab453b5005190856e12b47ed89b1
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Tue Jan 24 14:14:12 2017 +0000

    With -fpu=neon DI mode shifts are expanded after reload.
    
    With -fpu=neon DI mode shifts are expanded after reload.  DI mode registers can
    either fully or partially overlap on both ARM and Thumb-2.  However the shift
    expansion code can only deal with the full overlap case, and generates incorrect
    code for partial overlaps.  The fix is to add new variants that support either
    full overlap or no overlap.
    
            Backport from mainline
        gcc/
            PR target/78041
            * config/arm/neon.md (ashldi3_neon): Add "r 0 i" and "&r r i" variants.
            Remove partial overlap check for shift by 1.
            (ashldi3_neon): Likewise.
        testsuite/
            * gcc.target/arm/pr78041.c: New test.
    
    From-SVN: r244872

commit ac2bee4e73e440fe1f7405a4a454d2aba76e9ea6
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Tue Jan 24 13:56:50 2017 +0000

    backport: re PR tree-optimization/77450 (ICE: in verify_ssa, at tree-ssa.c:1016 on very simple code with vectors)
    
    2017-01-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-06  Richard Biener  <rguenther@suse.de>
    
            PR c/77450
            * c-common.c (c_common_mark_addressable_vec): Handle
            COMPOUND_LITERAL_EXPR.
    
    From-SVN: r244870

commit a88596b249b590252f0886febb200261b3a28089
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jan 24 11:30:44 2017 +0000

    Backport PRs 71848, 77646, 77648, 77879, 78188
    
    2017-01-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77646
            * tree-ssa-sccvn.c (visit_reference_op_call): Always value-number
            a VDEF.
    
            * gcc.dg/torture/pr77646.c: New testcase.
    
            2016-11-05  David Edelsohn  <dje.gcc@gmail.com>
                    Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/78188
            PR c++/71848
            * ipa-comdats.c (pass_ipa_comdats::gate): Require HAVE_COMDAT_GROUP.
    
            * g++.dg/ipa/pr78188.C: New test.
    
            2016-09-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77648
            * tree-ssa-structalias.c (process_constraint): Handle all DEREF
            with complex RHS.
            (make_transitive_closure_constraints): Adjust comment.
            (make_any_offset_constraints): New function.
            (handle_rhs_call): Make sure to first expand a pointer to all
            subfields before transitively closing it.
            (handle_const_call): Likewise.  Properly expand returned
            pointers as well.
            (handle_pure_call): Likewise.
    
            * gcc.dg/torture/pr77648-1.c: New testcase.
            * gcc.dg/torture/pr77648-2.c: Likewise.
    
            2016-10-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77879
            * tree-ssa-structalias.c (handle_const_call): Properly handle
            NRV return slots.
            (handle_pure_call): Likewise.
    
    From-SVN: r244864

commit 4a01eaca1188a80c6a5f949922755f5aa15ac6e5
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jan 24 08:06:29 2017 +0000

    Backport PRs 77436, 77450, 77605, 77855, 78047, 78185, 78333
    
    2017-01-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-10-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77855
            * tree-ssa-pre.c (prune_clobbered_mems): Queue exprs to remove
            instead of removing the current item while iterating over the set
            which is not safe.
    
            * gcc.dg/torture/pr77855.c: New testcase.
    
            2016-09-01  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77436
            * tree-chrec.c (tree_fold_binomial): Use widest_int, properly
            check whether the result fits the desired result type.
    
            * gcc.dg/torture/pr77436.c: New testcase.
    
            2016-09-06  Richard Biener  <rguenther@suse.de>
    
            PR c/77450
            c-family/
            * c-common.c (c_common_mark_addressable_vec): Handle
            COMPOUND_LITERAL_EXPR.
    
            * c-c++-common/vector-subscript-7.c: Adjust.
            * gcc.dg/pr77450.c: New testcase.
    
            2016-09-19  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77605
            * tree-data-ref.c (analyze_subscript_affine_affine): Use the
            proper niter to bound the loops.
    
            * gcc.dg/torture/pr77605.c: New testcase.
    
            2016-11-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78047
            * tree-ssa-structalias.c (push_fields_onto_fieldstack): Initialize
            fake field at offset zero conservatively regarding to may_have_pointers.
    
            2016-11-02  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78185
            * loop-invariant.c (find_invariant_insn): Never hoist trapping or
            faulting instructions.
            * tree-ssa-loop-im.c: Include tree-ssa-loop-niter.h.
            (fill_always_executed_in_1): Honor infinite child loops.
    
            * gcc.dg/pr78185.c: New testcase.
    
            2016-11-16  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78333
            * gimplify.c (gimplify_function_tree): Do not instrument
            GNU extern inline functions.
    
            * gcc.dg/pr78333.c: New testcase.
    
    From-SVN: r244853

commit c89747ea8be8c088959f82c9af1aa437fb6f9948
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 24 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r244841

commit 16a2959dd50905b1300957b4ad0276ec4c7131f4
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jan 23 13:25:17 2017 +0100

    Fix FAIL: gcc.dg/lto/pr69188 on bare-metal targets
    
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-01-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * gcc.dg/lto/pr69188_0.c: Require profiling support for testcase.
    
    From-SVN: r244798

commit d3c7638bc94647fb7392c02c1415c59de393941e
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jan 23 13:24:54 2017 +0100

    Do not declare artificial variables in tree-profile.c to have a definition (PR lto/69188).
    
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-20  Martin Liska  <mliska@suse.cz>
    
            PR lto/69188
            * tree-profile.c (init_ic_make_global_vars): Do not call
            finalize_decl.
            (gimple_init_gcov_profiler): Likewise.
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-20  Martin Liska  <mliska@suse.cz>
    
            PR lto/69188
            * gcc.dg/lto/pr69188_0.c: New test.
            * gcc.dg/lto/pr69188_1.c: New test.
    
    From-SVN: r244797

commit be142bc8cc04e9a23ca25da112bf6400852c78db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 23 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r244767

commit 3c2b09d63b397a08acee9bb97b7ababc5a1cd2c7
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sun Jan 22 16:05:45 2017 +0000

    backport: faq.xml: Update address of C++ ABI link.
    
            Merge from mainline
            2017-01-01  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * doc/xml/faq.xml: Update address of C++ ABI link.
            * doc/xml/manual/abi.xml: Ditto.
    
    From-SVN: r244761

commit 74011e1533e19e88ab79359a48df640e4f4953f9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 22 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244754

commit f3020f3680d71b36900ba273c8abbc8939081315
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sat Jan 21 22:04:31 2017 +0000

    backport: extend.texi (Cilk Plus Builtins): cilkplus.org now uses https by default.
    
            Backport from mainline
            2016-12-29  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * doc/extend.texi (Cilk Plus Builtins): cilkplus.org now uses
            https by default.
            * doc/passes.texi (Cilk Plus Transformation): Ditto.
            * doc/generic.texi (Statements for C++): Ditto, and use @uref.
    
    From-SVN: r244753

commit 0091c6a7753ff554c7582067b4f9e7e474931c48
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 21 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244737

commit 34284ac3d50238e30e090912c0de6fd53a867e7b
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 13:09:22 2017 +0100

    Reload global options when strict aliasing is dropped (PR ipa/79043).
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79043
            * function.c (set_cfun): Add new argument force.
            * function.h (set_cfun): Likewise.
            * ipa-inline-transform.c (inline_call): Use the function when
            strict alising from is dropped for function we inline to.
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79043
            * gcc.c-torture/execute/pr79043.c: New test.
    
    From-SVN: r244709

commit 0edc4aec3591dcb30a0a34f3c26f7c992f8fd5b9
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 13:04:46 2017 +0100

    backport: [multiple changes]
    
    2016-03-26  Richard Biener  <rguenther@suse.de> Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-03-26  Richard Biener  <rguenther@suse.de>
                        Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>
    
            PR ipa/70366
            * ipa-inline-transform.c (inline_call): Pass opts_for_fn (to->decl)
            instead of
            TREE_OPTIMIZATION (DECL_FUNCTION_SPECIFIC_OPTIMIZATION (to->decl))
            as 2nd argument to cl_optimization_restore().
    
    From-SVN: r244708

commit 26736ac3d17699a5287e02ae0a7908728098af85
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 13:03:55 2017 +0100

    alias-1.c: New testcase.
    
    * gcc.c-torture/execute/alias-1.c: New testcase. * c-common.c: Do not silently ignore -fstrict-aliasing changes.
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2015-12-01  Jan Hubicka  <hubicka@ucw.cz>
    
            * c-common.c (parse_optimize_options): Do not silently ignore
            -fstrict-aliasing changes.
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2015-12-01  Jan Hubicka  <hubicka@ucw.cz>
    
            * gcc.c-torture/execute/alias-1.c: New testcase.
    
    From-SVN: r244707

commit 210b9355f5b0e91f0baf313f11384579bb8b96a2
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 09:52:46 2017 +0100

    ipa-inline-transform.c (inline_call): Drop -fstrict-aliasing when inlining -fno-strict-aliasing into...
    
    * ipa-inline-transform.c (inline_call): Drop -fstrict-aliasing when     inlining -fno-strict-aliasing into -fstrict-aliasing body.
    
    From-SVN: r244690

commit 23d4c77b3744c1a42bd782f458614356ae5e06d9
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 09:49:08 2017 +0100

    Fix wrong assumption in contains_type_p (PR ipa/71207).
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-17  Martin Liska  <mliska@suse.cz>
    
            PR ipa/71207
            * ipa-polymorphic-call.c (contains_type_p): Fix wrong
            assumption and add comment.
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-17  Martin Liska  <mliska@suse.cz>
    
            PR ipa/71207
            * g++.dg/ipa/pr71207.C: New test.
    
    From-SVN: r244688

commit 6cfde88aee38b11ec8112de122856ba3aed5d33c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 20 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244670

commit afc1b096be39832eb311248f5bfcfb470f1eb765
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 19 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244606

commit 7636438af5f751f6959ecb163de1b71fee862734
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 18 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r244558

commit ddb7cdcc7fb3af645fdd945f17ed73919b4acb78
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Jan 17 10:11:20 2017 +0000

    backport: re PR rtl-optimization/78617 (LRA clobbers live register during rematerialization)
    
    2017-01-17 Thomas Preud'homme <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-12-07 Thomas Preud'homme <thomas.preudhomme@arm.com>
    
        gcc/
        PR rtl-optimization/78617
        * lra-remat.c (do_remat): Initialize live_hard_regs from live in
        registers, also setting hard registers mapped to pseudo registers.
    
        gcc/testsuite/
        PR rtl-optimization/78617
        * gcc.c-torture/execute/pr78617.c: New test.
    
    From-SVN: r244526

commit b6e59ffc991ace689e134124a17a97e322f28e91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 17 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244512

commit 7aef452718d875b5b1f7fc30fe18c8e704433bef
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Jan 16 15:32:39 2017 +0200

    PR libstdc++/78389 fix backwards size adjustments
    
    Backport from mainline
    2017-01-16  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/78389
    * include/bits/list.tcc (merge(list&&)): Fix backwards size adjustments.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/78389.cc: Add
    better test for the sizes.
    
    From-SVN: r244493

commit 7ccab5ab4a9af4775c41cc871ca0bc9080f70536
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 16 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244480

commit 4322dc13283f37ab02c2321566150df84667f022
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Sun Jan 15 18:27:08 2017 +0200

    backport: re PR libstdc++/78389 (list::merge and list::sort are not exception safe)
    
    Backport from mainline
    2017-01-13  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/78389
    * include/bits/list.tcc (merge(list&&)):
    Adjust list sizes if the comparator throws.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/78389.cc: New.
    
    From-SVN: r244475

commit 7d3b997592356e25d367b0d0f1391300ccfc2a04
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 15 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244469

commit 33fbf1b5e4cf8fbb688f1303b7272bfa40208d2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244457

commit 570fd49c50e6a9db1ea6f55e34a4edc386ea7077
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Jan 13 13:11:07 2017 +0000

    backport: re PR target/78253 ([ARM] call weak function instead of strong when called through pointer)
    
    2017-01-11  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline r244320.
            2017-01-11  Christophe Lyon  <christophe.lyon@linaro.org>
    
            PR target/78253
            * config/arm/arm.c (legitimize_pic_address): Handle reference to
            weak symbol.
            (arm_assemble_integer): Likewise.
    
    From-SVN: r244438

commit c1d8743b4f9722b14e0ceb34137c8a1256376da6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 13 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r244389

commit 6772bac7efb15af138ff8b6cd0c4d45eca07d929
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Jan 12 17:41:49 2017 +0000

    Fix build issue with NO_FUNCTION_CSE
    
            * postreload.c (reload_cse_simplify): Check for NO_FUNCTION_CSE
            definition instead of using it directly.
    
    From-SVN: r244376

commit 35995667c3eefd0332fdfc57b0c69dd31b89a0b3
Author: Nathan Sidwell <nathan@acm.org>
Date:   Thu Jan 12 12:40:28 2017 +0000

    re PR c++/77812 (incorrectly rejects valid C++ code that uses enum in template instantiation)
    
            cp/
            PR c++/77812
            * name-lookup.c (set_namespace_binding_1): An overload of 1 decl
            is a new overload.
    
            testsuite/
            PR c++/77812
            * g++.dg/pr77812.C: New.
    
    From-SVN: r244351

commit 6d4d4bc8301a3402b3613bcefe92d376efdf67d8
Author: Maxim Ostapenko <m.ostapenko@samsung.com>
Date:   Thu Jan 12 07:44:17 2017 +0000

    re PR lto/79042 (LTO doesn't propagate node->dynamically_initialized bit for varpool nodes.)
    
            PR lto/79042
            * lto-cgraph.c (lto_output_varpool_node): Pack dynamically_initialized
            bit.
            (input_varpool_node): Unpack dynamically_initialized bit.
            * lto-streamer.h (LTO_minor_version): Bump version.
    
    From-SVN: r244347

commit 1f2dd616c6854e41c7e691d91783d8bc95ffe1b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244344

commit be909d2275d97cdc54a019b5ba7e67eae4558e3f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jan 11 23:02:48 2017 +0100

    i386.c (memory_address_length): Increase len only when rip_relative_addr_p returns false.
    
            * config/i386/i386.c (memory_address_length): Increase len
            only when rip_relative_addr_p returns false.
    
    From-SVN: r244343

commit b627d5cea60b8f268ea66333bfaea1c82fcd5d3a
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Wed Jan 11 15:08:25 2017 +0000

    PR78255: Make postreload aware of NO_FUNCTION_CSE
    
    gcc/ChangeLog:
    2017-01-11  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            PR rtl-optimization/78255
            * gcc/postreload.c (reload_cse_simplify): Do not CSE a function if
            NO_FUNCTION_CSE is true.
    
    gcc/testsuite/ChangeLog:
    2017-01-11  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * gcc.target/arm/pr78255-2.c: Fix to work for targets
            that do not optimize for tailcall.
    
    2017-01-11  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            PR rtl-optimization/78255
            * gcc.target/aarch64/pr78255.c: New.
            * gcc.target/arm/pr78255-1.c: New.
            * gcc.target/arm/pr78255-2.c: New.
    
    From-SVN: r244319

commit c2fadcd2242143e78c05df3bd198dab2dc325bc6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 11 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244300

commit 74ef65a0257a7a4b38c685a38c8f42b5c251a870
Author: Bill Seurer <seurer@linux.vnet.ibm.com>
Date:   Tue Jan 10 19:11:55 2017 +0000

    backport: re PR sanitizer/65479 (sanitizer stack trace missing frames past #0 on powerpc64)
    
    2017-01-10  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-21  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            PR sanitizer/65479
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Add
            -fasynchronous-unwind-tables option when -fsanitize=address is
            specified.
    
    From-SVN: r244284

commit bd2dec34cf684a9e2687ea0b51cd7bd48ee9636a
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 10 15:08:42 2017 +0100

    Do not error when -E provided (PR pch/78970).
    
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-09  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * gcc.c (driver_handle_option): Handle OPT_E and set
            have_E.
            (lookup_compiler): Do not show error message with have_E.
    
    From-SVN: r244268

commit db763ca3a9fdafb68de4c247287010a6fd13e6a9
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 10 15:07:41 2017 +0100

    Error for '-' as filename of a precompiled header (PR pch/78970)
    
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-05  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * gcc.c (lookup_compiler): Reject '-' filename for a precompiled
            header.
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-05  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * c-opts.c (c_common_post_options): Reject '-' filename for a precompiled
            header.
    
    From-SVN: r244267

commit a78b66ccf112b9a9b4ca92b84cd53c506eee2e95
Author: Chung-Ju Wu <jasonwucj@gmail.com>
Date:   Tue Jan 10 04:23:35 2017 +0000

    re PR target/70668 (nds32-elf toolchain fails to compile on OSX)
    
    Fix PR70668.
    
            Backport from mainline
            2016-04-28  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70668
            * config/nds32/nds32.md (casesi): Don't access the operands array
            out of bounds.
    
    From-SVN: r244258

commit 6e94fd7fe1231091147f76da3c9b642ae0f34249
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 10 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r244253

commit 52278d1ea850620093b8ab5c7fc5b01dde30938e
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Mon Jan 9 22:06:20 2017 +0100

    backport: [multiple changes]
    
    2017-01-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
    toplevel:
        Backport from mainline
        2016-10-10  Andreas Tobler <andreast@gcc.gnu.org>
    
        * configure.ac: Add aarch64-*-freebsd*.
        * configure: Regenerate.
    
    gcc:
        Backport from mainline
        2016-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: Add aarch64-*-freebsd* support.
        * config.host: Likewise.
        * config/aarch64/aarch64-freebsd.h: New file.
        * config/aarch64/t-aarch64-freebsd: Ditto.
    
    libgcc:
        Backport from mainline
        2016-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.host: Add support for aarch64-*-freebsd*.
    
    From-SVN: r244243

commit cb65dd4453faacfee1ea18a65e6e14e2e24d996f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 9 11:09:09 2017 +0000

    Add missing dg-options to C++11 test.
    
            * testsuite/30_threads/thread/cons/lwg2097.cc: Compile with
            -std=gnu++11.
    
    From-SVN: r244222

commit d91e5e315357c4457c9ca68a5d5b84b5be065d67
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 9 11:05:01 2017 +0000

    Add missing dg-options to C++14 test
    
            * testsuite/25_algorithms/sort/78991.cc: Compile with -std=gnu++14.
    
    From-SVN: r244221

commit 00e1145d49f87cd916ffaf9b2ee007cfde576978
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 9 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r244211

commit 2988bbcb8a0f3e2228c298ad91fda7089313b711
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 8 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r244202

commit 3be86380fed142735cd3a1a17df9440c60a79a6c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244189

commit 78ba55d478e8eb8791cb5bb9bbcc364c3ed02994
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 6 14:04:33 2017 +0000

    Add deleted std::thread(const thread&&) constructor
    
    Backport from mainline
    2017-01-03  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78956
            * include/std/thread (thread(const thread&&)): Add deleted
            constructor.
            * testsuite/30_threads/thread/cons/lwg2097.cc: New test.
    
    From-SVN: r244158

commit bacb6e9152e9c2f2c3b9c5b2c2575b957758cdab
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 6 14:04:26 2017 +0000

    PR78991 make __gnu_cxx::__ops constructors explicit
    
            PR libstdc++/78991
            * include/bits/predefined_ops.h (_Iter_comp_iter, _Iter_comp_val)
            (_Val_comp_iter, _Iter_equals_val, _Iter_pred, _Iter_comp_to_val)
            (_Iter_comp_to_iter, _Iter_negate): Make constructors explicit.
            * testsuite/25_algorithms/sort/78991.cc: New test.
    
    From-SVN: r244157

commit 65a179e6f44a30f28d54c61690785b4e1895b750
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 6 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r244117

commit d2c56d02eb65c3933cd8d3b9e93c72d319434c3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 5 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r244081

commit 1eed6bb4d73378f627a61cb7680c5e63350dd8c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 4 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244038

commit b998b0057ac0f0ef2275509470d80d4c8dcebcd6
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 3 13:08:10 2017 +0100

    Fix tree-optimization/78886.
    
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-22  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78886
            * tree-ssa-strlen.c (handle_builtin_malloc): Return when LHS
            is equal to NULL.
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-22  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78886
            * gcc.dg/tree-ssa/pr78886.c: New test.
    
    From-SVN: r244019

commit d546e60673563c0fe0f4aa6490edaa16172190b8
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 3 11:54:40 2017 +0100

    Fill bitregion_{start,end} in store_constructor (PR tree-optimization/78428).
    
            Backport from mainline
            2016-12-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78428
            * expr.c (store_constructor_field): Add new arguments to the
            function.
            (store_constructor): Set up bitregion_end and add
            gcc_unreachable to fields that have either non-constant size
            or (and) offset.
    
            Backport from mainline
            2016-12-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78428
            * gcc.dg/tree-ssa/pr78428.c: New test.
    
    From-SVN: r244016

commit c4b33a2c20c7fb4fa8c63ae958925eaa735e971f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r244007

commit 7427d1a1f4933ba44b20c0519c2da9762231e6dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r243998

commit 567bbd2ad60e504a6c3deeede28b15b270bd56bf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 1 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r243988

commit 5959d97b2d1ed03e8fe2ae974c1e59df1dfc320c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 31 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r243985

commit 92283d12bcadebbf8aec4159c79dfef2dfda121e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 30 20:21:22 2016 +0100

    re PR translation/78745 (Truncated messages in po file)
    
            PR translation/78745
            * exgettext: Handle multi-line help texts in *.opt files.
            * gcc.pot: Regenerate.
    
    From-SVN: r243983

commit b6a128d59f4495aba636573897626118f4f11abf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 30 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243970

commit 1912effe99e5b3a655f94845b86179c04d074f3b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 29 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r243957

commit 83055c7ad08e77aa602f28dffb5e446a8a216f03
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 28 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243950

commit e3d4b40063523cbb49fdfbdaa616209ca9ee68e1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Dec 27 15:49:08 2016 +0100

    re PR translation/78922 (Comment submitted for translation in stringop.opt)
    
            PR translation/78922
            * config/i386/stringop.opt: Remove.
    
    From-SVN: r243940

commit 9998fd120e55155063aea80e9a19d037f0d737ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 27 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243930

commit b1f75d93fd50c58714469b2ee41579e12fa8a674
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 26 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r243920

commit c1d7236912801ac8d3fb0761e72a015f5f59df71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 25 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243917

commit a5c446816621c6cc9641d92bfa2f796cbce6b154
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 24 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r243911

commit e029f11cd2bf3fcee9fc98978ce2d766c5837711
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 23 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r243902

commit 18522701d605227c3ce4993ced9d3fb022f07ddb
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Dec 22 20:27:52 2016 +0000

    backport: re PR fortran/78239 (ICE in char_len_param_value, at fortran/decl.c:926, with -fimplicit-none)
    
    2016-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78239
            * decl.c (char_len_param_value): Also check for -fimplicit-none
            when determining if implicit none is in force.
    
    2016-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78239
            * gfortran.dg/fimplicit_none_1.f90:  New test.
            * gfortran.dg/fimplicit_none_2.f90:  New test
    
    From-SVN: r243895

commit 4ded66a2ca97c570bf3832ae4d8e24425421739a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 22 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243880

commit 8a7f19a25cc610142457a84927f85ab76a6f7907
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 21 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r243833

commit 99e5c6d999f5546c8ee4afc19f1ddcf27547421c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 20 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r243815

commit 83c65d6de8460954f00d719f299a3e4b3f1a366f
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Dec 19 17:22:05 2016 +0200

    backport: Make the perfect-forwarding constructor of a two-element tuple sfinae away when the first argument is an allocator_arg.
    
    Backport from mainline
    2016-12-19  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    Make the perfect-forwarding constructor of a two-element tuple
    sfinae away when the first argument is an allocator_arg.
    * include/std/tuple (tuple(_U1&&, _U2&&)): Constrain.
    * testsuite/20_util/tuple/cons/allocator_with_any.cc: New.
    
    From-SVN: r243797

commit 8c626c9e338bc36df93ee8486c36a5baa927d5a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 19 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243786

commit a087c714948b67c2ec8ed655ea97c02ce71e3534
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 18 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r243779

commit c46f038cc7421d57ccc5fc38a7bf0b546c4246de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 17 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r243767

commit 7ad61f3422d697dd1df444978bce060271920660
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 16 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r243732

commit d5901448e46cf3bbe1cd0124fe7dcc3380ab38f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 15 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r243676

commit 4f6d10b7071861a388809d35386e673c28feb45e
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Dec 14 10:31:37 2016 +0000

    re PR tree-optimization/78731 (Possible bug with switch when optimization is turned on.)
    
    2016-12-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78731
            * tree-ssa-threadedge.c (simplify_control_stmt_condition):
            If we've seen a backedge to not walk the SSA value chain.
            (thread_around_empty_blocks): Pass down whether we've seen
            a backedge to simplify_control_stmt_condition.
            (thread_through_normal_block): Likewise.
    
            * gcc.dg/torture/pr78731.c: New testcase.
    
    From-SVN: r243641

commit e6c47045f32a3b0790826e135d66994c045a736c
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 14 10:07:10 2016 +0000

    Improve comment for struct symbolic_number in bswap pass
    
    2016-12-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-25  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * tree-ssa-math-opts.c (struct symbolic_number): Improve comment.
    
    From-SVN: r243638

commit 90823811f91c1164e9d65eb93876b63149823858
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 14 10:07:01 2016 +0000

    Fix PR77673: bswap loads passed end of object
    
    2016-12-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-25  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR tree-optimization/77673
        * tree-ssa-math-opts.c (struct symbolic_number): Add new src field.
        (init_symbolic_number): Initialize src field from src parameter.
        (perform_symbolic_merge): Select most dominated statement as the
        source statement.  Set src field of resulting n structure from the
        input src with the lowest address.
        (find_bswap_or_nop): Rename source_stmt into ins_stmt.
        (bswap_replace): Rename src_stmt into ins_stmt.  Initially get source
        of load from src field rather than insertion statement.  Cancel
        optimization if statement analyzed is not dominated by the insertion
        statement.
        (pass_optimize_bswap::execute): Rename src_stmt to ins_stmt.  Compute
        dominance information.
    
        gcc/testsuite/
        PR tree-optimization/77673
        * gcc.dg/pr77673.c: New test.
    
    From-SVN: r243637

commit e3bf5b244e9d342740c63a3ee00570344f796550
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 14 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243627

commit c3ef1871289ba0fe59e79654e7438ed87a0161e0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Dec 13 11:53:03 2016 +0000

    Add missing header in Filesystem TS configure tests
    
    Backport from mainline
    2016-10-26  Uros Bizjak  <ubizjak@gmail.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Include <limits.h>
            for PATH_MAX in realpath test.
            * configure: Regenerate.
    
    From-SVN: r243604

commit 892f848c83fa60e376bec513a94765cbb57c6305
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Dec 13 11:52:59 2016 +0000

    Fix configure test for sendfile()
    
    Backport from mainline
    2016-05-25  Jonathan Wakely  <jwakely@redhat.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Fix test for sendfile.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
    From-SVN: r243603

commit b8515887bf7b270d7d2c02ee1f62d649fd0fba03
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Dec 13 09:39:02 2016 +0000

    Fix PR77933: stack corruption on ARM when using high registers and LR
    
    2016-12-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-17  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/77933
        * config/arm/arm.c (thumb1_expand_prologue): Distinguish between lr
        being live in the function and lr needing to be saved.  Distinguish
        between already saved pushable registers and registers to push.
        Check for LR being an available pushable register.
    
        gcc/testsuite/
        PR target/77933
        * gcc.target/arm/pr77933-1.c: New test.
        * gcc.target/arm/pr77933-2.c: Likewise.
    
    From-SVN: r243600

commit 2805df247c8e51236c1dc7ff8532ab210cdbf0cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 13 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r243586

commit 9f19138cf5eae37cf353460e2d77aaf61569111c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 16:36:30 2016 +0000

    Improve tests for contents of <new> header
    
    Backport from mainline
    2016-12-07  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/18_support/headers/new/synopsis.cc: Add C++14 declarations.
            * testsuite/18_support/headers/new/synopsis_cxx98.cc: New test.
    
    From-SVN: r243565

commit d9d4d3db9e3622352e5e75eb4154783cc1e2087a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 16:36:25 2016 +0000

    PR78465 Remove runtime tests for <atomic> macros
    
            PR libstdc++/78465
            * testsuite/29_atomics/headers/atomic/macros.cc: Replace runtime tests
            with preprocessor conditions.
    
    From-SVN: r243564

commit 068a429b13a5fc74e0577d2a8f169f4a249a2206
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 15:00:43 2016 +0000

    Backport all Filesystem library fixes from trunk
    
    This implements the following LWG DRs:
    2681 2682 2683 2706 2707 2712 2720 2723
    
            Backport from mainline
            PR libstdc++/70975
            PR libstdc++/71337
            PR libstdc++/78111
            * include/experimental/bits/fs_dir.h (recursive_directory_iterator):
            Overload pop (LWG 2706).
            * include/experimental/bits/fs_fwd.h (perms::resolve_symlinks):
            Replace with symlink_nofollow (LWG 2720).
            * include/experimental/bits/fs_ops.h
            (exists(const path&, error_code&)): Clear error if status is known
            (LWG 2725).
            * include/experimental/bits/fs_path.h (__is_path_src)
            (_S_range_begin, _S_range_end): Overload to treat string_view as a
            Source object.
            (path::operator+=, path::compare): Overload for basic_string_view.
            (path::path(string_type&&))
            (path::operator=(string&&), path::assign(string_type&&)): Define
            construction and assignment from string_type rvalues (LWG 2707).
            (path::_S_convert<_Iter>(_Iter, _Iter)): Remove cv-qualifiers from
            iterator's value_type.
            (path::_S_convert<_Iter>(_Iter __first, __null_terminated)): Likewise.
            Do not use operation not supported by input iterators.
            (path::__is_path_iter_src): Add partial specialization for const
            encoded character types.
            * src/filesystem/dir.cc (open_dir): Return same value for errors
            whether ignored or not.
            (_Dir::advance(error_code*, directory_options)): Return false on
            error.
            (directory_iterator(const path&, directory_options, error_code*)):
            Create end iterator on error (LWG 2723).
            (recursive_directory_iterator(const path&, directory_options,
            error_code*)): Likewise.
            (recursive_directory_iterator::increment): Reset state on error.
            (recursive_directory_iterator::pop): Define new overload.
            * src/filesystem/ops.cc (canonical): Set error for non-existent path.
            (file_time): Take error_code parameter and check for overflow.
            (close_fd): Remove.
            (do_copy_file): Report an error if source or destination is not a
            regular file (LWG 2712). Pass error_code in file_time calls.  Just
            use close(3) instead of close_fd, to prevent retrying on error.
            Check if _GLIBCXX_USE_FCHMODAT is defined.
            [_GLIBCXX_USE_SENDFILE]: Fallback to read/write operations in case
            sendfile fails with ENOSYS or EINVAL. Pass non-null pointer to
            sendfile for offset argument.
            (copy): Update comment to refer to LWG 2681. Implement 2682 and 2683
            resolutions.
            (equivalent): Fix error handling and result when only one file exists.
            (is_empty): Fix error handling.
            (last_write_time(const path&, error_code&)): Pass error_code in
            file_time calls.
            (last_write_time(const path&, file_time_type, error_code&)): Handle
            negative times correctly.
            (permissions(const path&, perms, error_code&)): Handle
            symlink_nofollow.
            (read_symlink): Add missing ec.clear().
            (status(const path&, error_code&)): Handle EOVERFLOW.
            (temp_directory_path): Pass error_code argument to other filesystem
            operations.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Update expected behaviour on error.
            * testsuite/experimental/filesystem/iterators/pop.cc: New.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Update expected behaviour on error.
            * testsuite/experimental/filesystem/operations/copy.cc: Update
            expected behaviour for copying directories with create_symlinks.
            Verify that error_code arguments are cleared if there's no error.
            Remove files created by tests. Test copying directories.
            * testsuite/experimental/filesystem/operations/copy_file.cc: Remove
            files created by tests.
            * testsuite/experimental/filesystem/operations/create_symlink.cc: New.
            * testsuite/experimental/filesystem/operations/equivalent.cc: New.
            * testsuite/experimental/filesystem/operations/exists.cc: Test
            overload taking an error_code.
            * testsuite/experimental/filesystem/operations/is_empty.cc: New.
            * testsuite/experimental/filesystem/operations/last_write_time.cc:
            New.
            * testsuite/experimental/filesystem/operations/permissions.cc: Test
            overload taking error_code. Test symlink_nofollow on non-symlinks.
            * testsuite/experimental/filesystem/operations/read_symlink.cc: New.
            * testsuite/experimental/filesystem/operations/remove_all.cc: New.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            Add testcase for inaccessible directory.
            * testsuite/experimental/filesystem/path/construct/range.cc: Test
            construction from input iterators with const value types.
            * testsuite/experimental/filesystem/path/construct/string_view.cc:
            New.
            * testsuite/util/testsuite_fs.h (scoped_file): Define RAII helper.
    
    From-SVN: r243557

commit e361da2c6fd293b43a44e66f4283fac7c6d0c5ff
Author: Bernd Schmidt <bernds@redhat.com>
Date:   Mon Dec 12 13:01:28 2016 +0000

    backport: re PR tree-optimization/77309 (wrong code at -Os and above on x86_64-linux-gnu (in the 64-bit mode))
    
            Backport from mainline
            2016-11-07  Bernd Schmidt  <bschmidt@redhat.com>
    
            PR rtl-optimization/77309
            * combine.c (make_compound_operation): Allow EQ for IN_CODE, and
            don't assume an equality comparison for plain COMPARE.
            (simplify_comparison): Pass a more accurate code to
            make_compound_operation.
    
            PR rtl-optimization/77309
            * gcc.dg/torture/pr77309.c: New test.
    
    From-SVN: r243550

commit 0b77c93621f4b63ee5c1cc7ae06ec2a8bb9ea681
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 12 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243535

commit e718604b0f1a8435856043ab23ab320c406fa3a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 11 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243521

commit c98ce63bc6cace8d75f491a5061711ab421a3470
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 10 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r243511

commit 1dde3089b12f9a29a18adafe95fbdbd284a4e1c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 9 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243471

commit 7b2873465cf6a8bf304c87603ac39fd4e48a6931
Author: Nathan Sidwell <nathan@acm.org>
Date:   Thu Dec 8 19:27:32 2016 +0000

    re PR c++/78551 (Internal compiler error with constexpr initialization of union)
    
            PR c++/78551
            * constexpr.c (extract_string_elt): New.  Broken out of ...
            (cxx_eval_array_reference): ... here.  Call it.
            (cxx_eval_store_expression): Convert init by STRING_CST into
            CONSTRUCTOR, if needed.
    
            PR c++/78551
            * g++.dg/cpp1y/pr78551.C: New.
    
    From-SVN: r243457

commit 11f9388afadad66ba216f5b1219af607779abe1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 8 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243421

commit 3841743088ab5fbcfd26238ec6f1ea4fc66ff63b
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Dec 8 00:11:23 2016 +0100

    rs6000: Don't forget to initialize the TOC (PR77957)
    
    The code generating traceback tables mistakenly does an early return
    if !optional_tbtab, which causes it to miss the code generating the TOC
    section.  This only matters if the TOC will be empty since otherwise
    the section is created elsewhere.
    
    This patch fixes it.
    
    
            PR target/77957
            * config/rs6000/rs6000.c (rs6000_output_function_epilogue): Don't
            return early if !optional_tbtab.
    
    From-SVN: r243416

commit 31ecce685371f1376c07991363c76b905b1e99a5
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 7 17:51:00 2016 +0000

    backport: [multiple changes]
    
    2016-12-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * config/arm/arm.md (arm_addsi3): Add alternative for addition of
        general register with general register or ARM constant into SP
        register.
    
        gcc/testsuite/
        * gcc.target/arm/empty_fiq_handler.c: New test.
    
        Backport from mainline
        2016-11-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/testsuite/
        * gcc.target/arm/empty_fiq_handler.c: Skip if -mthumb is passed in and
        target is Thumb-only.
    
    From-SVN: r243373

commit b6e0a58490cd5d1d2321d3352314784efc5ce90f
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Wed Dec 7 17:22:34 2016 +0200

    backport: Constrain optional's __constexpr_addressof in its return type and use a constexpr addressof for optional, if available.
    
    Backport from mainline
    2016-12-06  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    Constrain optional's __constexpr_addressof in its return type
    and use a constexpr addressof for optional, if available.
    * include/experimental/optional (__constexpr_addressof):
    Constrain in the return type instead of in a template parameter.
    (_Has_addressof_mem)
    (_Has_addressof_free, _Has_addressof, __constexpr_addressof):
    Guard with #ifndef __cpp_lib_addressof_constexpr.
    (operator->()): Use std::__addressof if it's constexpr.
    
    From-SVN: r243350

commit 95e947ba58c53daad550c2c52c22d6d11b34cb27
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Dec 7 01:08:40 2016 +0000

    backport: re PR tree-optimization/78646 (incorrect result type for pointer addition in slsr)
    
    2016-12-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Stefan Freudenberger  <stefan@reservoir.com>
    
            PR tree-optimization/78646
            * gimple-ssa-strength-reduction.c (replace_ref): The pointer
            addition used for the memory base expression should have the type
            of the candidate.
    
    From-SVN: r243331

commit e8705f72bfa44bc9f6d11a49d04c31ad2c8c4829
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 7 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r243326

commit 76be08a77a986a95445a0aee4ae1cb8af1bc32d3
Author: Aditya Kumar <hiraditya@msn.com>
Date:   Tue Dec 6 11:56:56 2016 +0000

    Add missing noexcept on std::_Sp_locker constructors
    
    2016-12-06  Aditya Kumar  <hiraditya@msn.com>
    
            * src/c++11/shared_ptr.cc (_Sp_locker::_Sp_locker(const void* p)): Add
            noexcept on constructor.
            (_Sp_locker::_Sp_locker(const void* p1, const void* p2)): Same.
    
    From-SVN: r243296

commit 5e0c835db3ada899e84b08e70fd9067a1e9b11e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 6 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r243275

commit 1816fe9e3dbcba2f4091692441b785df0afb11dd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 5 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243233

commit 377e3016d21632a3cd8c08ed4b5a802b95d572b7
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Sun Dec 4 17:34:13 2016 +0100

    backport: re PR fortran/78443 ([OOP] Incorrect behavior with non_overridable keyword)
    
    2016-12-04  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78443
            * class.c (add_proc_comp): Add a vtype component for non-overridable
            procedures that are overriding.
    
    2016-12-04  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78443
            * gfortran.dg/typebound_proc_35.f90: New test case.
    
    From-SVN: r243230

commit 87dbcb80f2a6f0c7fda00640745cded06cc81108
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 4 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r243225

commit f223a15cfc3b1de9358a93ce6ef97f7ff3a87b93
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 3 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243212

commit d11c8f105634b09a3363ee612599a7ed36044108
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Fri Dec 2 12:22:54 2016 +0000

    [ree] PR rtl-optimization/78038: Handle global register dataflow definitions in ree
    
    2016-12-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            Backport from mainline
            2016-10-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR rtl-optimization/78038
            * ree.c (get_defs): Return NULL if a defining insn for REG cannot
            be deduced to set REG through the RTL structure.
            (make_defs_and_copies_lists): Return false on a failing get_defs call.
    
            * gcc.target/aarch64/pr78038.c: New test.
    
    From-SVN: r243175

commit 04588de5bbcb89912187018ac1393845332818a0
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 2 08:51:58 2016 +0000

    S/390: Fix vector all/any cc modes.
    
    This fixes a problem with the vector compares producing CC mode
    results.
    
    The instructions produce condition code modes which can be either
    interpreted to check an ALL elements or an ANY element result.  As the
    modes where used before they could not be inverted by the middle-end
    by inverting the comparison code (e.g. eq to ne).  The result usually
    was just wrong.
    
    In fact inverting a comparison code on an CCVALL mode would require to
    also change the mode to CCVANY but this cannot be done easily in the
    middle-end.  With this patch the meaning of an ALL cc mode only refers
    to the not-inverted comparison code (e.g. eq, gt, ge).  With that
    change inverting the comparison code matches a not operation on the
    condition code mask again.
    
    Bootstrapped and regression tested on s390 and s390x.
    
    Bye,
    
    -Andreas-
    
    gcc/testsuite/ChangeLog:
    
    2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-scalar-cmp-1.c: Fix and harden the
            pattern checks.
            * gcc.target/s390/zvector/vec-cmp-1.c: New test.
    
    gcc/ChangeLog:
    
    2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-modes.def (CCVEQANY, CCVH, CCVHANY, CCVHU)
            (CCVHUANY): Remove modes.
            (CCVIH, CCVIHU, CCVIALL, CCVIANY, CCVFALL, CCVFANY): Add modes and
            documentation.
            * config/s390/s390.c (s390_match_ccmode_set): Rename cc modes.
            (s390_expand_vec_compare_scalar): Pick one of the cc consumer
            modes.
            (s390_branch_condition_mask): Adjust to use the new cc consumer
            modes.  The new modes allow for proper reversal in the middle-end.
            (s390_expand_vec_compare_cc): Determine the proper cc producer and
            consumer modes for a comparison.
            * config/s390/s390.md: Rename CCVH to CCVIH and CCVHU to CCVIHU
            throughout the file.
            * config/s390/vx-builtins.md: Likewise.
    
    From-SVN: r243169

commit b30a02c2674f491314474cb5fa2e728033fd601c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 2 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r243148

commit 562866d0cfef991a0f28108254686b673e4988c4
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Dec 1 23:13:25 2016 +0000

    backport: rs6000.c (insn_is_swappable_p): Properly look inside UNSPEC_VSX_XXSPLTW vec.
    
    2016-12-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-01  Alan Modra  <amodra@gmail.com>
    
            * gcc/config/rs6000/rs6000.c (insn_is_swappable_p): Properly
            look inside UNSPEC_VSX_XXSPLTW vec.
    
    From-SVN: r243144

commit 8d77535f438b871faa5916251560f24916347bec
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Dec 1 21:28:41 2016 +0000

    re PR fortran/78279 (ICE in identical_array_ref, at fortran/dependency.c:104)
    
    2016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78279
            * dependency.c (identical_array_ref): Convert gcc_assert to conditional
            and gfc_internal_error.
    
    2016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78279
            * gfortran.dg/pr78279.f90: New test.
    
    From-SVN: r243134

commit 132a96f91f7e74d92f79851a222fa67efd8d05e9
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Dec 1 15:15:40 2016 +0000

    Don't define libstdc++-internal macros in Solaris 10+ <math.h>
    
            fixincludes:
            Backport from mainline
            2016-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * inclhack.def (solaris_math_12): New fix.
            (hpux11_fabsf): Replace bypass by *-hp-hpux11* mach selector.
            * fixincl.x: Regenerate.
            * tests/base/math.h [SOLARIS_MATH_12_CHECK]: New test.
    
            libstdc++-v3:
            Backport from mainline
            2016-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Update comments.
            (__CORRECT_ISO_CPP11_MATH_H_PROTO): Rename to ...
            (__CORRECT_ISO_CPP11_MATH_H_PROTO_FP): ... this.
            Add test for C++11 <math.h> integral overloads.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
            * include/c_global/cmath [__cplusplus >= 201103L]: Reflect
            __CORRECT_ISO_CPP11_MATH_H_PROTO to
            __CORRECT_ISO_CPP11_MATH_H_PROTO_FP rename.
            * include/c_global/cmath [_GLIBCXX_USE_C99_MATH &&
            !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC && __cplusplus >= 201103L]
            (std::fpclassify): Wrap in !__CORRECT_ISO_CPP11_MATH_H_PROTO_INT.
            (std::isfinite): Likewise.
            (std::isinf): Likewise.
            (std::isnan): Likewise.
            (std::isnormal): Likewise.
            (std::signbit): Likewise.
            (std::isgreater): Likewise.
            (std::isgreaterequal): Likewise.
            (std::isless): Likewise.
            (std::islessequal): Likewise.
            (std::islessgreater): Likewise.
            (std::isunordered): Likewise.
            [__cplusplus >= 201103L && _GLIBCXX_USE_C99_MATH_TR1]
            (std::acosh): Likewise.
            (std::asinh): Likewise.
            (std::atanh): Likewise.
            (std::cbrt): Likewise.
            (std::copysign): Likewise.
            (std::erf): Likewise.
            (std::erfc): Likewise.
            (std::exp2): Likewise.
            (std::expm1): Likewise.
            (std::fdim): Likewise.
            (std::fma): Likewise.
            (std::fmax): Likewise.
            (std::fmin): Likewise.
            (std::hypot): Likewise.
            (std::ilogb): Likewise.
            (std::lgamma): Likewise.
            (std::llrint): Likewise.
            (std::llround): Likewise.
            (std::log1p): Likewise.
            (std::log2): Likewise.
            (std::logb): Likewise.
            (std::lrint): Likewise.
            (std::lround): Likewise.
            (std::nearbyint): Likewise.
            (std::nextafter): Likewise.
            (std::nexttoward): Likewise.
            (std::remainder): Likewise.
            (std::remquo): Likewise.
            (std::rint): Likewise.
            (std::round): Likewise.
            (std::scalbln): Likewise.
            (std::scalbn): Likewise.
            (std::tgamma): Likewise.
            (std::trunc): Likewise.
            * include/tr1/cmath [_GLIBCXX_USE_C99_MATH_TR1 && __cplusplus >=
            201103L]: Reflect __CORRECT_ISO_CPP11_MATH_H_PROTO to
            __CORRECT_ISO_CPP11_MATH_H_PROTO_FP rename.
    
    From-SVN: r243115

commit bed1063214368339707087183c35300f0d74731c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 1 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r243089

commit 041ffe0fe41e70ebe3f84c2bbd7f99062aabe288
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 30 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242986

commit 3db94cffbe6d8ecd1d117ae3af1f4dd3db0f7884
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Tue Nov 29 23:23:30 2016 +0000

    backport: re PR target/78426 (wrong code with strncmp on SH)
    
            Backported from mainline
            2016-11-19  Kaz Kojima  <kkojima@gcc.gnu.org>
    
            PR target/78426
            * config/sh/sh-mem.cc (sh_expand_cmpnstr): Use copy_to_mode_reg
            instead of force_reg.
            (sh_expand_setmem): Likewise.
    
    From-SVN: r242982

commit 0e001678669336f84bb3faa43d4c2fe2e1a3ec70
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 29 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242939

commit 4cc94eebc5ef1d95d44dcbc91f361b8702ab067f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 28 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242903

commit 3b0646f62f972c446fd64852a3b67c961416e73d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 27 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r242889

commit 153579c512a78119b3e312366c2f73c52fb16416
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 26 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r242885

commit 395578ca23614ad77c10ea436ee12f2f53fbdd5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 25 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242855

commit e32bdddd9133e166fa89f24553c59020cde1083c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Nov 24 20:11:49 2016 +0000

    re PR fortran/78500 (ICE in gfc_check_vardef_context, at fortran/expr.c:5289)
    
    2016-11-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78500
            * expr.c (gfc_check_vardef_contextm): Fix NULL pointer dereference.
            * interface.c (matching_typebound_op): Ditto.
    
    2016-11-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78500
            * gfortran.dg/class_result_4.f90: New test.
    
    From-SVN: r242849

commit 989186688620d2ff9cb464e802c151d92637b008
Author: Martin Liska <marxin@gcc.gnu.org>
Date:   Thu Nov 24 10:20:11 2016 +0000

    Add missing backport note to changelog entry
    
    From-SVN: r242826

commit 3f992f226c1e147a239a23a881f55c1aeaa808d2
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Nov 24 11:12:24 2016 +0100

    Add sem_item::m_hash_set (PR ipa/78309)
    
            PR ipa/78309
            * ipa-icf.c (void sem_item::set_hash): Update m_hash_set.
            (sem_function::get_hash): Use the new field.
            (sem_function::parse): Remove an argument from ctor.
            (sem_variable::parse): Likewise.
            (sem_variable::get_hash): Use the new field.
            (sem_item_optimizer::read_section): Use new ctor and set hash.
            * ipa-icf.h: _hash is removed from sem_item::sem_item,
            sem_variable::sem_variable, sem_function::sem_function.
    
    From-SVN: r242824

commit 970435faa1211f5ae33d1d2946077790340cf548
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 24 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242815

commit 7cc638cdf3d83d20ea3276b791e682bc20c5907f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Nov 23 22:48:54 2016 +0000

    re PR fortran/78297 (ICE in finish_equivalences, at fortran/trans-common.c:1246)
    
    2016-11-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78297
            * trans-common.c (finish_equivalences): Do not dereference a NULL pointer.
    
    2016-11-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78297
            * gfortran.dg/pr78297.f90: New test.
    
    From-SVN: r242811

commit e0f8e503509f722e906e5256e920af7efefb46ef
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Nov 23 22:40:26 2016 +0100

    i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.
    
            * config/i386/i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.
            (kxnor<mode>): Return "#" for alternative 0.
    
    From-SVN: r242801

commit 55e0e0f1462c7acd15af8829538f0ceaa7bc46ce
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Wed Nov 23 17:46:31 2016 +0100

    backport: re PR fortran/66227 ([OOP] EXTENDS_TYPE_OF n returns wrong result for polymorphic variable allocated to extended type)
    
    2016-11-23  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/66227
            * simplify.c (gfc_simplify_extends_type_of): Fix missed optimization.
            Prevent over-simplification. Fix a comment. Add a comment.
    
    2016-11-23  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/66227
            * gfortran.dg/extends_type_of_3.f90: Fix and extend the test case.
    
    From-SVN: r242770

commit de712d9ca3c624aad8e142186d7235f5abdc202d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Nov 23 15:27:12 2016 +0000

    Replace unsupported effective-target with dg-options
    
            * testsuite/24_iterators/reverse_iterator/71771.cc: Replace calls to
            C++14 std::rbegin and std::rend.  Use dg-options instead of
            effective-target.
    
    From-SVN: r242764

commit 7595fb19280e4837e9ffbb50f675a6badad68c1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 23 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r242730

commit f33f8590cd469f4bc5123e57f149e3d0dfbd4081
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Nov 22 19:19:58 2016 +0100

    Makefile.in ($(lang_checks_parallelized)): Fix detection of -j argument.
    
    gcc/ChangeLog
    
            * Makefile.in ($(lang_checks_parallelized)): Fix detection
            of -j argument.
    
    gcc/ada/ChangeLog
    
            * gcc-interface/Make-lang.in (check-acats): Fix detection
            of -j argument.
    
    libstdc++-v3/ChangeLog
    
            * testsuite/Makefile.am
            (check-DEJAGNU $(check_DEJAGNU_normal_targets)): Fix detection
            of -j argument.
            * testsuite/Makefile.in: Regenereate.
    
    From-SVN: r242716

commit 0a26a6f67ab909bf37450a87b9be17cb48823378
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 22 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242684

commit d40b6cc6178310f5118d1f40d8107efd4f29c586
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 21 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242644

commit f732cd1bafbfd0f199e951c35e21f3270d8d0871
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Nov 20 20:14:18 2016 +0000

    re PR fortran/69741 (Bad error in forall with array loop counters)
    
    2016-11-20  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69741
            * resolve.c (gfc_resolve_forall): Check for nonscalar index variables.
    
    2016-11-20  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69741
            * gfortran.dg/forall_18.f90: New testcase.
    
    From-SVN: r242643

commit 970f7ed86f5691b7c2839e2e62979abeb42f6015
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 20 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242630

commit d104df2a3ef8d69efa0f1581abe14267bc6e26be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 19 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r242611

commit 4edde1bce8b8f4de270aa491d49da6dbf7fbc3f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 18 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242579

commit 9ffe1ee11fa4bf963c815376bd91eb014f18b7c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 17 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242527

commit def9c89bec92f1d3d1be20adb4239c86f3f374d5
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Nov 16 11:31:18 2016 +0000

    Fix PR78294 - thread sanitizer broken when using ld.gold
    
    When one uses ld.gold to build gcc, the thread sanitizer doesn't work,
    because gold is more conservative when applying TLS relaxations than
    ld.bfd. In this case a missing initial-exec attribute on a declaration
    causes gcc to assume the general dynamic model. With ld.bfd this gets
    relaxed to initial exec when linking the shared library, so the missing
    attribute doesn't matter. But ld.gold doesn't perform this optimization
    and this leads to crashes on tsan instrumented binaries.
    
    See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78294
    and: https://sourceware.org/bugzilla/show_bug.cgi?id=20805
    
    The fix is easy, just add the missing attribute.
    
      PR sanitizer/78294
      * tsan/tsan_rtl.cc: Add missing attribute.
    
    From-SVN: r242483

commit 344a727c6e514e9989b160a9ffc867160d1475c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 16 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r242464

commit 8f7f77f3374016de62c193c7a5c9cee28c963ff1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Nov 15 14:44:15 2016 +0000

    Fix find&replace error in license boilerplate
    
            * testsuite/experimental/any/typedefs.cc: Fix license text.
            * testsuite/experimental/chrono/value.cc: Likewise.
            * testsuite/experimental/optional/assignment/1.cc: Likewise.
            * testsuite/experimental/optional/assignment/2.cc: Likewise.
            * testsuite/experimental/optional/assignment/3.cc: Likewise.
            * testsuite/experimental/optional/assignment/4.cc: Likewise.
            * testsuite/experimental/optional/assignment/5.cc: Likewise.
            * testsuite/experimental/optional/assignment/6.cc: Likewise.
            * testsuite/experimental/optional/cons/move.cc: Likewise.
            * testsuite/experimental/optional/cons/value.cc: Likewise.
            * testsuite/experimental/optional/constexpr/cons/value.cc: Likewise.
            * testsuite/experimental/optional/constexpr/make_optional.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/1.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/2.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/3.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/4.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/5.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/1.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/2.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/3.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/4.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/5.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/6.cc: Likewise.
            * testsuite/experimental/optional/make_optional.cc: Likewise.
            * testsuite/experimental/optional/observers/1.cc: Likewise.
            * testsuite/experimental/optional/observers/2.cc: Likewise.
            * testsuite/experimental/optional/observers/3.cc: Likewise.
            * testsuite/experimental/optional/observers/4.cc: Likewise.
            * testsuite/experimental/optional/observers/5.cc: Likewise.
            * testsuite/experimental/optional/relops/1.cc: Likewise.
            * testsuite/experimental/optional/relops/2.cc: Likewise.
            * testsuite/experimental/optional/relops/3.cc: Likewise.
            * testsuite/experimental/optional/relops/4.cc: Likewise.
            * testsuite/experimental/optional/relops/5.cc: Likewise.
            * testsuite/experimental/optional/relops/6.cc: Likewise.
            * testsuite/experimental/optional/requirements.cc: Likewise.
            * testsuite/experimental/optional/swap/1.cc: Likewise.
            * testsuite/experimental/optional/typedefs.cc: Likewise.
            * testsuite/experimental/ratio/value.cc: Likewise.
            * testsuite/experimental/string_view/typedefs.cc: Likewise.
            * testsuite/experimental/system_error/value.cc: Likewise.
            * testsuite/experimental/tuple/tuple_size.cc: Likewise.
            * testsuite/experimental/type_traits/value.cc: Likewise.
    
    From-SVN: r242420

commit 3c696aa89fe2b5da89e86a4549d65140b3f3d1dd
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue Nov 15 11:08:33 2016 +0000

    install.texi: Move the 'Overriding configure test results' subsub section to the...
    
    2016-11-15  Matthias Klose  <doko@ubuntu.com>
    
            * doc/install.texi: Move the 'Overriding configure test results'
            subsub section to the 'Cross-Compiler-Specific Options' sub section.
    
    From-SVN: r242411

commit a0f7c7802fc8c8b37347803cbe91d7529f09fd90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 15 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r242404

commit b0a3f04930058c1d51fa5cc6a134fe5c878a8cf5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 14 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r242370

commit 83d894bd37e80a540cdb643ee1512055b69b6c05
Author: Bob Duff <duff@adacore.com>
Date:   Sun Nov 13 18:38:16 2016 +0000

    decl.c (gnat_to_gnu_entity): In assertion about known Esize...
    
            * gcc-interface/decl.c (gnat_to_gnu_entity): In assertion about known
            Esize, protect with !is_type and change !Unknown_Esize to Known_Esize.
    
    From-SVN: r242365

commit 20f223e57cc4827e7684035f132b49612ef18513
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 13 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242343

commit 5d4a8b599e911c0cccb946f5cc6754ea5f56efb5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 12 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r242329

commit 61a37d2f7d3c29ffa2db2f9c6eeced463e5b0e13
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Nov 11 20:43:54 2016 +0100

    i386.md (*<shift_insn><mode>3_doubleword): Mark operand 0 as earlyclobber.
    
            * config/i386/i386.md (*<shift_insn><mode>3_doubleword): Mark
            operand 0 as earlyclobber.
            (*ashl<mode>3_doubleword): Ditto for all operand 0 alternatives.
    
    From-SVN: r242320

commit 7940b0c52426b55105b93cf8be3c1f47235f4d89
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Nov 11 18:04:18 2016 +0100

    re PR target/78310 (ICE: insn does not satisfy its constraints: {*bmi2_rorxdi3_1} with -mbmi2)
    
            PR target/78310
            * config/i386/i386.md (rotate to rotatex splitter): Avoid overflow
            when calculating operand 2.
            (rotate to rotatex zext splitter): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/78310
            * gcc.target/i386/pr78310.c: New test.
    
    From-SVN: r242124

commit edf91a080663a7a9da0738621080b18f03c24b38
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 11 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242063

commit e31c866c2ffca8c5af19f2e895ea53bcf11f026e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 10 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r242028

commit 4211cebdf7734f3cf21445df799374513184a963
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Wed Nov 9 21:41:17 2016 +0100

    re PR target/78262 (wrong code with -fschedule-insns)
    
            PR target/78262
            * config/i386/i386.md (*<shift_insn><mode>3_doubleword): Mark
            operand 0 as earlyclobber.
    
    testsuite/ChangeLog:
    
            PR target/78262
            * gcc.target/i386/pr78262.c: New test.
    
    From-SVN: r242022

commit 97b3648b6debf14f15f6c6d1fa5ebc55b044e137
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 9 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r241985

commit 2694b2b175ea4fb3c06e997d658c9ce92bb14507
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 8 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241947

commit f6ab988c396a3f7db954c33284aeda388f49ada8
Author: Florian Weimer <fweimer@redhat.com>
Date:   Mon Nov 7 20:54:05 2016 +0100

    PR libgcc/78064: Add missing include directive to unwind-c.c
    
            Backport from mainline
            2016-10-24  Florian Weimer  <fweimer@redhat.com>
    
    
            PR libgcc/78064
            * unwind-c.c: Include auto-target.h.
    
    From-SVN: r241929

commit b10b833baf34860c980b59fb1f97eed61ca755ef
Author: Jack Howarth <howarth.at.gcc@gmail.com>
Date:   Mon Nov 7 18:35:50 2016 +0000

    re PR driver/78206 (bootstrap failure under Apple sandbox that blacklists reads in /usr/local)
    
    2016-11-06  Jack Howarth  <howarth.at.gcc@gmail.com>
    
            PR driver/78206
            * incpath.c: (remove_dup(): Also silently ignore EPERM.
    
    From-SVN: r241920

commit 8d6c44a6a38d1f4212b1ce4e21802f8c09d4a794
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 7 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241889

commit 3ba41008c0fad8226d4bc5fd8bf83769792a0b6d
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Nov 6 20:30:31 2016 +0000

    backport: re PR fortran/69544 (Internal compiler error with -Wall and where)
    
    2016-11-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69544
            PR fortran/78178
            * gfortran.dg/where_5.f90:  New test.
            * gfortran.dg/where_6.f90:  New test.
    
    2016-11-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69544
            PR fortran/78178
            * match.c (match_simple_where):  Fill in locus for assigment
            in simple WHERE statement.
            (gfc_match_where):  Likewise.
    
    From-SVN: r241886

commit de587208a68757526010ae510df370ea8cadf5a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 6 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r241880

commit dbc2458bd2b73ecce6af99528fb4db7fe7c854b9
Author: Martin Sebor <msebor@redhat.com>
Date:   Sat Nov 5 23:57:13 2016 +0000

    PR c/71115 - [5/6 Regression] Missing warning: excess elements in struct initializer
    
    PR c/71115 - [5/6 Regression] Missing warning: excess elements in struct initializer
    Backport from trunk.
    
    gcc/c/ChangeLog:
            * c-typeck.c (error_init): Use
            expansion_point_location_if_in_system_header.
            (warning_init): Same.
    
    gcc/testsuite/ChangeLog:
            * gcc.dg/init-excess-2.c: New test.
            * gcc.dg/Woverride-init-1.c: Adjust.
            * gcc.dg/Woverride-init-2.c: Same.
    
    From-SVN: r241878

commit 3bcb6bd00a0cd83f9dccfa26c330afd724326f72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241865

commit ad3a50305eb9abecc26b9fe6289dbad071e7c017
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 4 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241835

commit 2c61d6d1167e3cdc0d31e7adfea6142d2561179e
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Nov 3 14:43:12 2016 +0100

    Create x.gcov file for binary w/o x.gcda file (PR
    
    From-SVN: r241820

commit 626ad6ba1250731200224589c0b56271292cb2ea
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Thu Nov 3 11:51:03 2016 +0000

    * explow.c (validize_mem): Do not modify the argument in-place
    
    From-SVN: r241814

commit 1e585d84f13aea3f2c618d6e8c2f1c799671cb0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 3 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r241806

commit e4738f47290acec257b6ae1b48a8cac1e75d205a
Author: Will Schmidt <will_schmidt@vnet.ibm.com>
Date:   Wed Nov 2 14:13:07 2016 +0000

    backport: re PR middle-end/72747 (powerpc: wrong code generated for vec_splats in cascading assignment)
    
    [gcc]
    
    2016-11-02  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            Backport from trunk
            2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            PR middle-end/72747
            * gimplify.c (gimplify_init_constructor): Move emit of constructor
            assignment to earlier in the if/else logic.
    
    [gcc/testsuite]
    
    2016-11-02  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            Backport from trunk
            2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            PR middle-end/72747
            * c-c++-common/pr72747-1.c: New test.
            * c-c++-common/pr72747-2.c: Likewise.
    
    From-SVN: r241793

commit 2a4de19c8d64f782b0a3efae76b0cbcdb86905f5
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Nov 2 10:35:57 2016 +0000

    Fix linker detection in check_gc_sections_available
    
            * lib/target-supports.exp (check_gc_sections_available): Use
            -print-prog-name=ld to determine linker used.
    
    From-SVN: r241785

commit 8f92ecb7d5264d1b71ad1d68571b06b004c27fff
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Nov 2 10:17:35 2016 +0000

    Parallelize check-gnat
    
            Backport from mainline
            2016-10-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * gcc-interface/Make-lang.in (lang_checks_parallelized): New target.
            (check_gnat_parallelize): Likewise.
    
    From-SVN: r241782

commit e86bc8a99534021aeffc0b827ce3cdff60fc136e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 2 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r241762

commit 245dd1fc8032e369b2e1d237bdd9da4deea2bcd6
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Nov 1 08:12:00 2016 +0000

    backport: re PR fortran/71902 (Unneeded temporary on reallocatable character assignment)
    
    2016-10-31  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71902
            * frontend-passes.c (realloc_string_callback): Also check for the
            lhs being deferred.  Name temporary variable "realloc_string".
    
    2016-10-31  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71902
            * gfortran.dg/dependency_47.f90:  New test.
            * gfortran.dg/dependency_49.f90:  New test.
    
    From-SVN: r241732

commit c73d688acecdbabc5a3748b5eb86d3e8b48428a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 1 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r241728

commit f454b05a320d8a8e77167013b086649a64f03bec
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Mon Oct 31 23:40:40 2016 +0000

    backport: re PR libfortran/78123 (Short reads with T edit descriptor not padding correctly)
    
    2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/78123
            * io/transfer.c (formatted_transfer_scalar_read): Clear seen_eor
            only if we have tabbed to left of current position.
            Backport from trunk
            PR fortran/78123
            * gfortran.dg/fmt_t_9.f: New test.
    
    From-SVN: r241727

commit 3e34e628666ab4931f0b15fc04d2d6dfacba84bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 31 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r241692

commit 350ff05b7048a416912206b8340945f1461c860a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 30 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241682

commit e3e4c86298e0c5579bf0f6133a543ec4a884c89c
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Oct 29 15:47:41 2016 +0000

    pa.h (BIGGEST_ALIGNMENT): Adjust comment.
    
            * config/pa/pa.h (BIGGEST_ALIGNMENT): Adjust comment.
            (MALLOC_ABI_ALIGNMENT): Define.
    
    From-SVN: r241678

commit 5a54e063d0b941957e4193afe4542b9c80f0f780
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 29 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241670

commit e9ba6cad4bda4e79126a71ed9623062ebc0253a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 28 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r241638

commit 7d62f913508aa74d0aeb2b9088139ff57233ad57
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 27 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241607

commit 16422bd83096a2e002a1ee553f9bb8b5b809be5f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 26 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r241543

commit e27413ad8d8f537b967ea4faf096c778b9720b16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 25 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r241500

commit 15c7455d0104af2aab90b27a53e5dd8faabf6d2a
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Oct 24 22:12:06 2016 +0000

    backport: re PR fortran/78021 (Wrong result with optimization on character constant)
    
    2016-10-24  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78021
            * gfc_compare_functions:  Strings with different lengths in
            argument lists compare unequal.
    
    2016-10-24  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78021
            * gfortran.dg/string_length_3.f90:  New test.
    
    From-SVN: r241498

commit 698d7502afc3d387df4b53a120fdb10cde31b838
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 24 21:36:49 2016 +0000

    re PR fortran/71895 (ICE in gfc_compare_derived_types, at fortran/interface.c:520)
    
    2016-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/71895
            * interface.c (gfc_compare_derived_types):  Convert gcc_assert()
            to a gfc_internal_error() to prevent an ICE.
    
    2016-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/71895
            * gfortran.dg/pr71895.f90: New test.
    
    From-SVN: r241496

commit 2697f45c2876c6fec46d4c24d1372bbd452a6d20
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Oct 24 12:14:52 2016 +0000

    re PR fortran/61420 ([OOP] type-bound procedure returning a procedure pointer fails to compile)
    
    2016-10-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/61420
            PR fortran/78013
            * resolve.c (resolve_variable): Obtain the typespec for a
            variable expression, when the variable is a function result
            that is a procedure pointer.
    
    2016-10-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/61420
            PR fortran/78013
            * gfortran.dg/proc_ptr_49.f90: New test.
    
    From-SVN: r241474

commit a67dab0de8633e27d3a9989cd6b5edcadf8c9084
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 24 02:41:12 2016 +0000

    backport: re PR tree-optimization/77916 (ICE in verify_gimple_in_cfg: invalid (pointer) operands to plus/minus)
    
    [gcc]
    
    2016-10-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77916
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Don't allow a MINUS_EXPR for pointer arithmetic for either known
            or unknown strides.
            (record_increment): Increments of -1 for unknown strides just use
            a multiply initializer like other negative values.
            (analyze_increments): Remove stopgap solution for -1 increment
            applied to pointer arithmetic.
            (insert_initializers): Requirement of initializer for -1 should be
            based on pointer-typedness of the candidate basis.
    
    [gcc/testsuite]
    
    2016-10-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77916
            * gcc.dg/torture/pr77916.c: New.
    
    From-SVN: r241462

commit 6f23e2619cde6aa34f5096fec17491452ead9992
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 24 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r241458

commit 28ec4e531b7bb4507abea240e1a556ce31b261d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 23 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241442

commit 1bd9211c07b8fbacaabe33c6f203a8a44b8f9dc3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 22 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241434

commit 6818bc5afea191620da2cd010cea6fbab61a6a99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 21 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241389

commit cd4409290ea224b9ef4ebb73e23fd103494ec251
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 20 12:17:55 2016 +0100

    PR78052 Define std::allocator<void>::{construct,destroy}
    
            PR libstdc++/78052
            * include/bits/allocator.h (allocator<void>::construct)
            (allocator<void>::destroy): Define.
            * testsuite/20_util/allocator/void.cc: New test.
    
    From-SVN: r241370

commit 88a8cdb1a0e33aa4c2501e1e5ff8690e7d42f768
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 20 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r241357

commit ea96581da7ec1afd8bc57a50c929fb7f23bc5941
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Oct 19 17:00:06 2016 +0200

    re PR target/77991 (ICE on x32 in plus_constant, at explow.c:87)
    
            PR target/77991
            * config/i386/i386.c (legitimize_tls_address)
            <case TLS_MODEL_INITIAL_EXEC>: For TARGET_64BIT || TARGET_ANY_GNU_TLS
            convert dest to Pmode if different than Pmode.
    
    testsuite/ChangeLog:
    
            PR target/77991
            * gcc.target/i386/pr77991.c: New test.
    
    From-SVN: r241346

commit 0df677c1a36e28d9d7782c79602d0a8e8f65fe11
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 19 11:36:24 2016 +0100

    PR77990 fix unique_ptr for non-copyable deleters
    
            PR libstdc++/77990
            * include/bits/unique_ptr.h (unique_ptr::unique_ptr(pointer)): Set
            pointer member after value-initialization of tuple.
            * testsuite/20_util/unique_ptr/assign/48635_neg.cc: Adjust dg-errors.
            * testsuite/20_util/unique_ptr/cons/77990.cc: New test.
    
    From-SVN: r241337

commit 3bf3b408ed8dcbbe4b90033438ad5bb110e5d8bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 19 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241324

commit b0a3fae2674141421cc1e59bcf625a2b763b716f
Author: Kugan Vivekanandarajah <kuganv@linaro.org>
Date:   Tue Oct 18 09:38:25 2016 +0000

    backport: tree-vrp.c (vrp_intersect_ranges_1): Allocate bitmap before copying.
    
    2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2016-10-11  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            * tree-vrp.c (vrp_intersect_ranges_1): Allocate bitmap before
              copying.
    
    From-SVN: r241298

commit f5831f498d3b7fb023ee339b571eb43cf79a86e0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 18 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241290

commit 3e5347700d6dd3671b8ec3891b6096195f1724f6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 17 23:22:54 2016 +0000

    backport: re PR fortran/77978 (stop codes misinterpreted in both f2003 and f2008)
    
    2016-10-17  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77978
            * match.c (gfc_match_stopcode): Fix error reporting for several
            deficiencies in matching stop-codes.
    
    2016-10-17  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77978
            * gfortran.dg/pr77978_1.f90: New test.
            * gfortran.dg/pr77978_2.f90: Ditto.
            * gfortran.dg/pr77978_3.f90: Ditto.
    
    From-SVN: r241286

commit 0ab73e5201638ab32f83d5d15119a3c2d776fd7e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:50 2016 +0100

    Update docs on libstdc++ source-code layout
    
    Backport from mainline:
    2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/appendix_contributing.xml (contrib.organization):
            Replace <literallayout> with nested <variablelist> elements. Update
            some more outdated text.
            * doc/html/*: Regenerate.
    
    Backport from mainline:
    2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/appendix_contributing.xml (contrib.organization):
            Describe other subdirectories and add markup. Remove outdated
            reference to check-script target.
    
    From-SVN: r241270

commit 4d3f494a640e0da71d0c005d6e1a335dc86f0b5f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:44 2016 +0100

    Change test to use VERIFY not assert
    
    Backport from mainline:
    2016-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/26_numerics/random/default_random_engine.cc: Use VERIFY
            instead of assert.
    
    From-SVN: r241269

commit 701f0bcee6f679f58734019886d05b85f4d4b28b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:40 2016 +0100

    Remove redundant const qualifiers from string_view
    
    Backport from mainline:
    2016-10-11  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/string_view (basic_string_view::_S_compare):
            Remove redundant const from return type.
            * include/std/string_view (basic_string_view:_S_compare): Likewise.
    
    From-SVN: r241268

commit 4f940ecad01be4a3b77b2f432d73b1663786889d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:35 2016 +0100

    Use normal mode containers in searchers
    
    Backport from mainline:
    2016-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/functional (boyer_moore_searcher)
            (__boyer_moore_map_base, __boyer_moore_array_base): Qualify containers
            with _GLIBCXX_STD_C.
    
    From-SVN: r241267

commit 6ddedda20090d314f7fce3f89d7461feda85a705
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:31 2016 +0100

    Add noexcept to std::function swap
    
    Backport from mainline:
    2016-08-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/77322
            * doc/xml/manual/intro.xml: Document DR 2062 change.
            * include/std/functional (function::swap): Add noexcept.
            (swap(function<Res(Args...)&, function<Res(Args...)&)): Likewise.
            * testsuite/20_util/function/77322.cc: New test.
    
    From-SVN: r241266

commit 703390ebaf43f08a0e7ff5b510e12186faa44033
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:25 2016 +0100

    Fix invalid dg-do directive
    
    Backport from mainline:
    2016-08-17  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/reference_wrapper/invoke-2.cc: Fix invalid dg-do
            directive.
    
    From-SVN: r241265

commit 012ed5c2fa8904b0506129aa38667fa5b27ed24d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:19 2016 +0100

    Use ::new to avoid finding overloaded operator new
    
    Backport from mainline:
    2016-08-06  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/72820
            * include/std/functional (_Function_base::_Base_manager::_M_clone):
            Qualify new operator.
            * testsuite/20_util/function/cons/72820.cc: New test.
    
    From-SVN: r241264

commit d73e8794f69c28329738adc7c8c8e1172fdabdf2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 18:03:09 2016 +0100

    Backport fixes to std::experimental::sample
    
            PR libstdc++/77994
            * include/experimental/algorithm (experimental::sample): Convert size
            argument to iterator difference type. Fix invalid use of input
            iterator. Defend against overloaded comma operator.
    
    From-SVN: r241263

commit 8be5dcae3e7191676b4092acbcc40d178936bbbe
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 17 14:24:21 2016 +0000

    backport: re PR tree-optimization/77937 (ICE: in replace_one_candidate, at gimple-ssa-strength-reduction.c:3370)
    
    [gcc]
    
    2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gimple-ssa-strength-reduction.c (analyze_increments): Use
            POINTER_TYPE_P on the candidate type to determine whether
            candidates in this chain require pointer arithmetic.
    
            2016-10-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gimple-ssa-strength-reduction.c (analyze_increments): Set cost
            to infinite when we have a pointer with an increment of -1.
    
    [gcc/testsuite]
    
    2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gcc.dg/torture/pr77937-1.c: New.
            * gcc.dg/torture/pr77937-2.c: New.
    
    From-SVN: r241244

commit e16f01428dec7112931b5de80a37dd1f0328e28c
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Oct 17 15:19:04 2016 +0200

    Do not merge BBs with a different EH landing pads (PR
    
            Backported from mainline
            2016-10-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/77943
            * g++.dg/tree-ssa/pr77943.C: New test.
            Backported from mainline
            2016-10-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/77943
            * tree-ssa-tail-merge.c (merge_stmts_p): Do not merge BBs with
            a different EH landing pads.
    
    From-SVN: r241240

commit 637cdad58e3ed2c9450efc5e8ac932d56168e02b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 17 08:56:14 2016 +0000

    system-darwin-ppc64.ads (Support_64_Bit_Divides): Delete.
    
            * system-darwin-ppc64.ads (Support_64_Bit_Divides): Delete.
            * system-linux-armeb.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mips.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mips64el.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mipsel.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-sparcv9.ads (Support_64_Bit_Divides): Likewise.
            * system-rtems.ads (Support_64_Bit_Divides): Likewise.
    
    From-SVN: r241233

commit ae354399c3d49f7ab9b6a4fafac94710e515beb8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 17 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241224

commit 71209619f8455018b50d4e4008bc7e09268cc2d5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Oct 16 19:38:31 2016 +0000

    sparc.c (sparc_expand_vector_init): Only accept literal constants in CONST_VECTORs.
    
            * config/sparc/sparc.c (sparc_expand_vector_init): Only accept literal
            constants in CONST_VECTORs.
    
    From-SVN: r241220

commit e50572b0a2ae82294e44879145266e99bbd5c25d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Oct 16 14:05:04 2016 +0000

    backport: system-aix.ads (Always_Compatible_Rep): Change to False.
    
            Backport from mainline
            2016-10-16  Eric Botcazou  <ebotcazou@adacore.com>
    
            * system-aix.ads (Always_Compatible_Rep): Change to False.
            * system-aix64.ads (Always_Compatible_Rep): Likewise.
            * system-hpux-ia64.ads (Always_Compatible_Rep): Likewise.
            * system-hpux.ads (Always_Compatible_Rep): Likewise.
            * system-linux-alpha.ads (Always_Compatible_Rep): Likewise.
            * system-linux-hppa.ads (Always_Compatible_Rep): Likewise.
            * system-linux-ia64.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mips.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mips64el.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mipsel.ads (Always_Compatible_Rep): Likewise.
            * system-linux-s390.ads (Always_Compatible_Rep): Likewise.
            * system-linux-s390x.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sh4.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sparc.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sparcv9.ads (Always_Compatible_Rep): Likewise.
            * system-rtems.ads (Always_Compatible_Rep): Likewise.
    
    From-SVN: r241215

commit 35bac5608404ffff525c3d8aa7da3726b4bd5ac6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 16 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r241208

commit 21af3715b72c31d2d65c5adba1aac6447b74c7ab
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Oct 15 22:43:42 2016 +0000

    sparc.c (sparc_expand_vec_perm_bmask): Use a scratch register as destination of bmask.
    
            * config/sparc/sparc.c (sparc_expand_vec_perm_bmask): Use a scratch
            register as destination of bmask.
            (vector_init_bshuffle): Likewise.
            * config/sparc/sparc.md (vec_perm_constv8qi): Likewise.
            (bmaskdi_vis): Enable only in 64-bit mode.
    
    From-SVN: r241207

commit 9a15adf1c9152955b8fe596134861b7b6b263d5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 15 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r241194

commit 69e98f5b1875035831b4d7424289ba4d9fc04918
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 14 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r241144

commit ced916930454c5a707d37887720932ab1fb62c89
Author: Andrew Senkevich <andrew.senkevich@intel.com>
Date:   Thu Oct 13 21:19:00 2016 +0000

    Delete x86 deprecated pcommit instruction support
    
    Delete x86 pcommit instruction support, which has been deprecated:
    
    https://software.intel.com/en-us/blogs/2016/09/12/deprecate-pcommit-instruction
    
    gcc/
    
    2016-10-13  Andrew Senkevich  <andrew.senkevich@intel.com>
    
            Backport from trunk
            * common/config/i386/i386-common.c (OPTION_MASK_ISA_PCOMMIT_UNSET,
            OPTION_MASK_ISA_PCOMMIT_SET): Deleted definitions.
            (ix86_handle_option): Deleted handle of OPT_mpcommit.
            * config.gcc: Deleted pcommitintrin.h
            * config/i386/pcommitintrin.h: Deleted file.
            * config/i386/cpuid.h (bit_PCOMMIT): Deleted.
            * config/i386/driver-i386.c (host_detect_local_cpu): Deleted pcommit
            detection.
            * config/i386/i386-c.c (ix86_target_macros_internal): Deleted define
            __PCOMMIT__.
            * config/i386/i386.c (ix86_target_string): Deleted -mpcommit.
            (PTA_PCOMMIT, IX86_BUILTIN_PCOMMIT, __builtin_ia32_pcommit): Deleted.
            (ix86_option_override_internal): Deleted handle of option.
            (ix86_valid_target_attribute_inner_p): Deleted pcommit.
            * config/i386/i386.h (TARGET_PCOMMIT, TARGET_PCOMMIT_P): Deleted.
            * config/i386/i386.md (unspecv): Deleted UNSPECV_PCOMMIT.
            (pcommit): Deleted instruction.
            * config/i386/i386.opt: Mention -mpcommit deprecation.
            * config/i386/x86intrin.h: Deleted inclusion of pcommitintrin.h.
    
    gcc/testsuite/
    
    2016-10-13  Andrew Senkevich  <andrew.senkevich@intel.com>
    
            Backport from trunk
            * testsuite/gcc.target/i386/pcommit-1.c: Deleted test.
            * testsuite/gcc.target/i386/sse-12.c: Deleted -pcommit option.
            * testsuite/gcc.target/i386/sse-13.c: Ditto.
            * testsuite/gcc.target/i386/sse-14.c: Ditto.
            * testsuite/gcc.target/i386/sse-22.c: Ditto.
            * testsuite/gcc.target/i386/sse-23.c: Ditto.
            * testsuite/g++.dg/other/i386-2.C: Ditto.
            * testsuite/g++.dg/other/i386-3.C: Ditto.
    
    From-SVN: r241142

commit 390fb743e4ee6f2cf85574beaf7f353b82e6e51a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 13 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r241079

commit d257ecc41c9ef36fcf2f53bb74de4d1045abb11e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 12 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r241014

commit f4529fe5595ae16a9415bbd9ebb0c0fd9564c4f7
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Oct 11 20:05:44 2016 +0000

    backport: system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.
    
            Backport from mainline
            2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>
    
            * system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.
            * system-linux-mips.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-mips64el.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-mipsel.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-sparcv9.ads (Backend_Overflow_Checks): Likewise.
            * system-rtems.ads: Likewise.
    
            2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>
                        Tristan Gingold  <gingold@adacore.com>
    
            * system-linux-ppc64.ads: Delete.
            * system-linux-ppc.ads: Make 32-bit/64-bit neutral.
            * gcc-interface/Makefile.in (PowerPC/Linux): Simplify.
    
    From-SVN: r241006

commit c0bd0d6389eb9445b78414e2c808cf173d3ae254
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 11 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r240960

commit 1c1e75e846247a03bf3972b86244391cd38d386b
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Oct 10 14:27:07 2016 +0000

    gen-avr-mmcu-texi.c (string.h): Include.
    
            * config/avr/gen-avr-mmcu-texi.c (string.h): Include.
    
    From-SVN: r240927

commit 51a2a98de7be36a142d9ad31344a5a3470ad2c89
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 10 08:53:06 2016 +0000

    utils.c (convert): For a biased input type, convert the bias itself to the base type before adding it.
    
            * gcc-interface/utils.c (convert): For a biased input type, convert
            the bias itself to the base type before adding it.
    
    From-SVN: r240912

commit f46162af4144d991836f5cfa2132fb0ec3d6fa11
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 10 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240905

commit 21993fb474a76499a58cfb4fb923025b5df5e0d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 9 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240894

commit 6c3b3966190ab51684ac918f95c9c622498ccd7a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 8 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240880

commit ceb5b1cb3e3d88e302ec90d5d71d490eec6f76e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 7 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240847

commit 039f5657c339034d4e47736f92c2ecb394c73a4b
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Oct 6 19:55:20 2016 +0200

    re PR target/77874 (two problems with gcc.target/i386/avx-1.c)
    
            PR target/77874
            * config/i386/sse.md (<mask_codefor><code><mode>3<mask_name>):
            Remove wrong assert.
            (<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>:
            Use <round_constraint> as operand 1 constraint.
    
    From-SVN: r240838

commit 8d6fa8f77cf1e7c3e18b9aa460c9923cd58af840
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 6 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240821

commit 49c03dbc2c021c6c5957a7c297bece5e511863d0
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Oct 5 22:49:28 2016 +0000

    re PR fortran/58991 (ICE with associate and character string constant)
    
    2016-10-05  Steven G. Kargl  <kargls@gcc.gnu.org>
    
            PR fortran/58991
            PR fortran/58992
            * resolve.c (resolve_assoc_var):  Fix CHARACTER type-spec for a
            selector in ASSOCIATE.
            (resolve_fl_variable): Skip checks for an ASSOCIATE variable.
    
    
    2016-10-05  Steven G. Kargl  <kargls@gcc.gnu.org>
    
            PR fortran/58991
            PR fortran/58992
            * gfortran.dg/associate_22.f90: New test.
    
    From-SVN: r240817

commit c0a6a24656034850a5b216f3dd35108acee32485
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 5 14:51:03 2016 +0100

    PR 70564 disambiguate constructor for not_fn call wrapper
    
            PR libstdc++/70564
            * include/experimental/functional (_Not_fn): Add second parameter to
            disambiguate copying from initialization by not_fn.
            (not_fn): Add second argument to initialization.
            * testsuite/experimental/functional/not_fn.cc: Copy call wrapper using
            direct-initialization. Test abstract class.
    
    From-SVN: r240790

commit 09b5f8a00e96feb00994492f4a4417c9fb9b7370
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 5 14:43:58 2016 +0100

    77864 Fix noexcept conditions for map/set default constructors
    
            PR libstdc++/77864
            * include/bits/stl_map.h (map::map()): Use nothrow constructibility
            of comparison function in conditional noexcept.
            * include/bits/stl_multimap.h (multimap::multimap()): Likewise.
            * include/bits/stl_multiset.h (multiset::multiset()): Likewise.
            * include/bits/stl_set.h (set::set()): Likewise.
            * testsuite/23_containers/map/cons/noexcept_default_construct.cc:
            New test.
            * testsuite/23_containers/multimap/cons/noexcept_default_construct.cc:
            Likewise.
            * testsuite/23_containers/multiset/cons/noexcept_default_construct.cc:
            Likewise.
            * testsuite/23_containers/set/cons/noexcept_default_construct.cc:
            Likewise.
    
    From-SVN: r240789

commit dd56ef2e9f33318309d9e3bfc41ec027822f1d1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 5 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240759

commit 9a8a15f59b71192049e87023c9337e4e258fa1d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 4 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r240736

commit d0e9e0b166b087df9654d906ac5c1287fd7c28c4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 3 15:42:06 2016 +0100

    Fix libstdc++ versioned namespace build
    
            PR libstdc++/68323
            PR libstdc++/77794
            * config/abi/pre/gnu-versioned-namespace.ver: Add export for
            __cxa_thread_atexit.
            * include/Makefile.am: Add <experimental/lfts_config.h>
            * include/Makefile.in: Regenerate.
            * src/filesystem/Makefile.in: Likewise.
            * include.bits/basic_string.h: Fix nesting of versioned namespaces.
            * include/bits/c++config: Declare versioned namespaces for literals.
            * include/bits/regex.h (basic_regex, match_results): Add workarounds
            for PR c++/59256.
            * include/bits/uniform_int_dist.h: Fix nesting of versioned namespace.
            * include/std/chrono: Likewise.
            * include/std/complex: Likewise.
            * include/experimental/fs_fwd.h: Declare versioned namespace.
            * include/experimental/lfts_config.h: Declare versioned namespaces.
            * include/experimental/algorithm: Include
            <experimental/lfts_config.h>.
            * include/experimental/any: Likewise.
            * include/experimental/chrono: Likewise.
            * include/experimental/functional: Likewise.
            * include/experimental/optional: Likewise.
            * include/experimental/ratio: Likewise.
            * include/experimental/system_error: Likewise.
            * include/experimental/tuple: Likewise.
            * include/experimental/type_traits: Likewise.
            * include/experimental/string_view: Likewise. Fix nesting of
            versioned namespaces.
            * include/experimental/string_view.tcc: Reopen inline namespace for
            non-inline function definitions.
            * testsuite/17_intro/using_namespace_std_exp_neg.cc: New test.
            * testsuite/20_util/duration/literals/range.cc: Adjust dg-error line.
            * testsuite/experimental/any/misc/any_cast_neg.cc: Likewise.
            * testsuite/ext/profile/mutex_extensions_neg.cc: Likewise.
    
    From-SVN: r240720

commit a33f2984ed0d1df3c20468f8acaf1c01e53b8d83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 3 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240703

commit 2b0fd2596823e3234038e63b2c95ba26751cffca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 2 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240697

commit 8a366c698f42ed2d9d591271662e7b2a32464b4b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Oct 1 04:58:02 2016 +0000

    backport: re PR fortran/77391 (gfortran allows CHARACTER(LEN=:),PARAMETER:: STRING='constant'   buts does not report it as an extension)
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/77391
            * resolve.c (deferred_requirements): New function to check F2008:C402.
            (resolve_fl_variable,resolve_fl_parameter): Use it.
    
            PR fortran/77391
            * gfortran.dg/pr77391.f90: New test.
    
    From-SVN: r240693

commit 36cc17b282a980297acf300f37475055f5c929b7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Oct 1 00:46:28 2016 +0000

    backport: re PR fortran/77380 (ICE in gfc_check_dependency, at fortran/dependency.c:1255)
    
    2016-09-30  Steven G. Kargl <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/77380
            * dependency.c (gfc_check_dependency): Do not assert with
            -fcoarray=lib.
    
            PR fortran/77380
            * gfortran.dg/pr77380.f90: New test.
    
    From-SVN: r240692

commit 95ed066dc5ba90003c60788a28e035e0ff9a9cb2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 1 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r240689

commit 6630b202dc3d749ec55a80ee41bd25c19977dac3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 22:40:18 2016 +0000

    backport: re PR fortran/61318 (Improve error diagnostic by pointing to the expression and not to declared-at of a USE-associated variable)
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/61318
            * interface.c (compare_parameter): Use better locus for error message.
    
            PR fortran/61318
            * gfortran.dg/pr61318.f90: New test.
    
    From-SVN: r240683

commit f7c54da711846c384b470033117a18545c5f3749
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 21:46:14 2016 +0000

    backport: re PR fortran/71859 (ICE on same variable/subroutine name (verify_gimple failed))
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/71859
            * gfortran.dg/pr71859.f90: New test.
            * gfortran.dg/intrinsic_numeric_arg.f: Update error message.
            * gfortran.dg/coarray_collectives_1.f90: Ditto.
    
            PR fortran/71859
            * check.c(numeric_check): Prevent ICE.  Issue error for invalid
            subroutine as an actual argument when numeric argument is expected.
    
    From-SVN: r240682

commit 54e020f0b416cdaf2bba7a9a379346e6f1f8c6cc
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 21:02:56 2016 +0000

    backport: re PR fortran/69867 (ICE on initializing character in type with array of incompatible data)
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/69867
            * decl.c (build_struct): Ensure that pointers point to something.
    
            PR fortran/69962
            * decl.c (gfc_set_constant_character_len):  if expr is not
            constant issue an error instead of an ICE.
    
            PR fortran/69962
            * gfortran.dg/pr69962.f90: New test.
    
            PR fortran/69867
            * gfortran.dg/pr69867.f90: New test.
    
    From-SVN: r240679

commit e0c3bdd95261b026f0e9169e93fbc91d95ccfdd8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 19:21:12 2016 +0000

    backport: re PR fortran/77351 (ICE in remove_trim, at frontend-passes.c:1145)
    
    2016-09-30  Steven g. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/77351
            * frontend-passes.c (remove_trim,combine_array_constructor): Check for
            NULL pointer.
    
            PR fortran/77351
            * gfortran.dg/pr77351.f90: New test.
    
    From-SVN: r240678

commit 2058a9532f6fedef6d669aa4d397cd9f91cb8234
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 17:54:15 2016 +0000

    backport: re PR fortran/68566 (ICE on using unusable array in reshape (double free or corruption))
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/68566
            * check.c (gfc_check_reshape): Check for constant expression.
    
            PR fortran/68566
            * gfortran.dg/pr68566.f90: new test.
    
    From-SVN: r240671

commit 07b6f44cc3231413ee5e443d4ad0a87faac2775e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 16:58:31 2016 +0000

    backport: re PR fortran/71799 (ICE in DO loop code emission (gfc_resolve_iterator))
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/71799
            * gfortran.dg/pr71799.f90: New test.
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/71799
            * resolve.c(gfc_resolve_iterator): Failure of type conversion need
            not ICE.
    
    From-SVN: r240668

commit 8e7af537f841e6078a4fafc5c7e8274bad04c32b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 30 15:50:31 2016 +0000

    backport: re PR fortran/70006 (Duplicate errors "label not defined")
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/70006
            * io.c (gfc_resolve_dt): Use correct locus.
            * resolve.c (resolve_branch): Ditto.
    
    2016-09-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/70006
            * gfortran.dg/pr70006.f90: New test.
    
    From-SVN: r240659

commit a023997f454512a8b8bda756a4d5fe1cb7094ea7
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Sep 30 04:49:36 2016 +0000

    backport: re PR fortran/77707 (formatted direct access: nextrec off by one)
    
    2016-09-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/77707
            io/transfer.c (next_record): Flush before calculating next_record.
            Correctly calculate.
    
            * gfortran.dg/inquire_17.f90: New test.
    
    From-SVN: r240645

commit 0f837c532868efc48325b24d6172a8a40c30a6b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 30 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240641

commit 12d3325d13d189bf9507c8afc48fe4fef0c8d35a
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 29 22:09:42 2016 +0000

    backport: re PR fortran/77420 (gfortran and equivalence produces internal compiler error)
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/77420
            * trans-common.c:  Handle array elements in equivalence when
            the lower and upper bounds of array spec are NULL.
    
            PR fortran/77460
            * simplify.c (simplify_transformation_to_scalar):  On error, result
            may be NULL, simply return.
    
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
    
            PR fortran/77420
            * gfortran.dg/pr77420_1.f90: New test.
            * gfortran.dg/pr77420_2.f90: Ditto.
            * gfortran.dg/pr77420_3.f90: New test. Requires ...
            * gfortran.dg/pr77420_4.f90: this file.
    
            PR fortran/77460
            * gfortran.dg/pr77460.f90: New test.
    
    From-SVN: r240640

commit 32e9d8f1687203b507e9ee1721e1f68af00e0951
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 29 20:32:22 2016 +0000

    backport: re PR fortran/77506 (F2008 Standard does not allow CHARACTER(LEN=*) in array constructor)
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77506
            * array.c (gfc_match_array_constructor): CHARACTER(len=*) cannot
            appear in an array constructor.
    
            PR fortran/77507
            * intrinsic.c (add_functions):  Use correct keyword.
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77507
            * ieee/ieee_arithmetic.F90 (IEEE_VALUE_4,IEEE_VALUE_8,IEEE_VALULE_10,
            IEEE_VALUE_16):  Use correct keyword.
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77506
            * gfortran.dg/pr77506.f90: New test.
    
            PR fortran/77507
            * gfortran.dg/pr77507.f90: New test.
    
    From-SVN: r240636

commit f3a3d5db5a1c6060a7b636653a0bda2489b89ca4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 29 19:34:59 2016 +0000

    backport: re PR fortran/71067 (ICE on data initialization with insufficient value)
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71067
            * decl.c (match_data_constant): On error, set 'result' to NULL.
    
            PR fortran/77260
            * gcc/fortran/trans-decl.c (generate_local_decl): Suppress warning
            for unused variable if symbol is entry point.
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71067
            * gfortran.dg/pr71067_1.f90: New test.
            * gfortran.dg/pr71067_2.f90: Ditto.
    
            PR fortran/77260
            * gfortran.dg/pr77260_1.f90: New test.
            * gfortran.dg/pr77260_2.f90: Ditto.
    
    From-SVN: r240635

commit 445595db2a9317963daf4a674d0f1eb92374d37d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 29 18:35:49 2016 +0000

    backport: re PR fortran/69514 (ICE with nested array constructor)
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69514
            * array.c (gfc_match_array_constructor):  If type-spec is present,
            walk the array constructor performing possible conversions for
            numeric types.
    
    2016-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>
                Louis Krupp      <lkrupp@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69514
            * gfortran.dg/pr69514_1.f90: New test.
            * gfortran.dg/pr69514_2.f90: New test.
    
    Co-Authored-By: Louis Krupp <lkrupp@gcc.gnu.org>
    
    From-SVN: r240628

commit cd6f0c9f3b82185500134ac1a1f88ad7af910671
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 29 00:18:44 2016 +0000

    backport: re PR fortran/71730 (ICE when character length specification uses an undefined variable)
    
    2016-09-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            backport from trunk
            PR fortran/71730
            * gfortran.dg/pr71730.f90: New test.
            * gfortran.dg/bounds_check_strlen_2.f90: Fix invalid code.
            * gfortran.dg/array_constructor_27.f03: Update dg-error message.
            * gfortran.dg/array_constructor_26.f03: Ditto.
    
            PR fortran/77612
            * gfortran.dg/pr77612.f90: New test.
    
    2016-09-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            backport from trunk
            PR fortran/71730
            * decl.c (char_len_param_value): Check return value of
            gfc_reduce_init_expr().
    
            PR fortran/77612
            * decl.c (char_len_param_value): Check parent namespace for
            seen_implicit_none.
    
    From-SVN: r240608

commit 16b806d940a921806a5d0820322a1d74ea698eb4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 29 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240605

commit 1a06efa64fc38ea45769775bac2bc09ec266d880
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Sep 28 23:38:13 2016 +0000

    backport: re PR fortran/77694 (ICE in optimize_binop_array_assignment, at fortran/frontend-passes.c:1080)
    
    2016-09-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            backport from trunk
            PR fortran/77694
            * frontend-passes.c (optimize_binop_array_assignment): Check pointer
            for NULL.
    
    2016-09-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            backport from trunk
            PR fortran/77694
            * gfortran.dg/pr77694.f90: New test.
    
    From-SVN: r240604

commit 0050c3d6addc8f08cc5307866bec066492816d39
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Sep 28 21:36:59 2016 +0000

    backport: re PR rtl-optimization/71709 (powerpc64le: argument to strcpy() optimised out)
    
    2016-09-28  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                Alan Modra  <amodra@gmail.com>
    
            Backport from mainline
            2016-07-01  Alan Modra  <amodra@gmail.com>
    
            PR rtl-optimization/71709
            * ira-lives.c (find_call_crossed_cheap_reg): Exit loop on arg reg
            being set, not referenced.
    
    
    Co-Authored-By: Alan Modra <amodra@gmail.com>
    
    From-SVN: r240599

commit 879e4caebaf5ae93a370e8dddff63dd81a585dbe
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Sep 28 18:37:45 2016 +0100

    Correct libgcc complex multiply excess precision handling (PR libgcc/77519).
    
    libgcc complex multiply is meant to eliminate excess
    precision from certain internal values by forcing them to memory in
    exactly those cases where the type has excess precision.  But in
    https://gcc.gnu.org/ml/gcc-patches/2014-09/msg01894.html I
    accidentally inverted the logic so that values get forced to memory in
    exactly the cases where it's not needed.  (This is a pessimization in
    the no-excess-precision case, in principle could lead to bad results
    depending on code generation in the excess-precision case.  Note: I do
    not have a test demonstrating bad results.)
    
    Bootstrapped with no regressions on x86_64-pc-linux-gnu.  Code size
    went down on x86_64 as expected; old sizes:
    
       text    data     bss     dec     hex filename
        887       0       0     887     377 _muldc3.o
        810       0       0     810     32a _mulsc3.o
       2032       0       0    2032     7f0 _multc3.o
        983       0       0     983     3d7 _mulxc3.o
    
    New sizes:
    
        847       0       0     847     34f _muldc3.o
        770       0       0     770     302 _mulsc3.o
       2032       0       0    2032     7f0 _multc3.o
        951       0       0     951     3b7 _mulxc3.o
    
            Backport from mainline
            2016-09-07  Joseph Myers  <joseph@codesourcery.com>
    
            PR libgcc/77519
            * libgcc2.c (NOTRUNC): Invert settings.
    
    From-SVN: r240586

commit 3f4dd6aa11307e4063a4bc47ad579b8a0a61ccc3
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Wed Sep 28 12:48:16 2016 +0000

    backport: re PR testsuite/77411 (object-size-9.c -fpic -m32 failure)
    
    backport from mainline
    2016-09-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>
                Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/77411
            * c-c++-common/ubsan/object-size-9.c: Call __builtin_exit in C++.
    
    From-SVN: r240575

commit 8e3d81855d00c91414bc11079b56fb33e8641910
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 28 13:47:24 2016 +0100

    libstdc++/77686 use may_alias for std::function storage
    
            PR libstdc++/77686
            * include/std/functional (_Any_data): Add may_alias attribute.
    
    From-SVN: r240574

commit 2ce5546486a79822a04f3804262022770399f59f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 28 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240561

commit a424a3cb04f16429e68eb6c21a241072abdfa188
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 27 16:37:44 2016 +0100

    Fix lifetime of mutex lock in debug iterator
    
            * include/debug/safe_iterator.h (_Safe_iterator::operator++()): Fix
            lifetime of lock.
    
    From-SVN: r240549

commit 1dee0646ff0364a0d7fa7192e58e25e09a650e70
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Tue Sep 27 14:30:46 2016 +0000

    backport: rs6000.c (rs6000_output_symbol): Don't modify VAR_DECL string.
    
            Backport from mainline
            2016-09-27  David Edelsohn  <dje.gcc@gmail.com>
    
            * config/rs6000/rs6000.c (rs6000_output_symbol): Don't modify
            VAR_DECL string.
    
    From-SVN: r240544

commit 4cbf07a7c6eee3cf43597729308772d901b6ebee
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Sep 27 12:44:42 2016 +0000

    re PR target/77478 (Incorrect code generated with -O3, m32, -msse2 and -ffast-math)
    
    2016-09-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77478
            * tree-vect-loop-manip.c (vect_gen_niters_for_prolog_loop):
            Fix alignment of SSA var used before the alignment prologue.
    
            * gcc.dg/torture/pr77478.c: New testcase.
    
    From-SVN: r240532

commit 5cec3f42a3d710ccdef6bd9fbe554a562eefadb4
Author: Senthil Kumar Selvaraj <senthil_kumar.selvaraj@atmel.com>
Date:   Tue Sep 27 06:39:59 2016 +0000

    Backport fix for PR 65210
    
    gcc/ChangeLog
    
    2016-09-27  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            Backport from trunk r227496
    
            PR target/65210
            * config/avr/avr.c (avr_eval_addr_attrib): Look for io_low
            attribute as well.
    
    gcc/testsuite/ChangeLog
    
    2016-09-27  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            Backport from trunk r227496
    
            PR target/65210
            * gcc.target/avr/pr65210.c: New test.
    
    From-SVN: r240521

commit cc1dadb0d4db190cbdc9bed8e1d87c07ce5f2b9d
Author: Senthil Kumar Selvaraj <saaadhu@gcc.gnu.org>
Date:   Tue Sep 27 06:13:38 2016 +0000

    Revert part of r240397 that got accidentally committed
    
    From-SVN: r240520

commit 9528ced8751e8e55d80f998213b8044cbd7cdb8b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 27 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r240512

commit f7a41e0de384fd40dba9a3b27cd4dc663cc8cf4c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 26 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240480

commit 64ef7ccb58e007c3f423451703fb74f31cdb5ccd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 25 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r240468

commit 3ab477e1b87e3ae48f269985a77507db6e7aa984
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 24 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240459

commit 02a8e3a0a2e0b80d46814d7035ae578095df1ebd
Author: Senthil Kumar Selvaraj <senthil_kumar.selvaraj@atmel.com>
Date:   Fri Sep 23 08:20:40 2016 +0000

    backport: avr.c (avr_rtx_costs_1): Handle DImode MULT.
    
    Backport from 2016-09-22 trunk r240388.
    
    2016-09-22  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            * config/avr/avr.c (avr_rtx_costs_1): Handle DImode MULT.
            (avr_address_cost): Replace 61 with MAX_LD_OFFSET(mode).
    
    From-SVN: r240397

commit 6b934f5732cee5ecf082fe100c6fcee1d82be424
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 23 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240384

commit edfdf9a5d6cc4ac7d4ce1567732c1466da47ab24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 22 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240337

commit 91d32da67dfb92422ceb0e7d482539d9c543c9f0
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Sep 21 19:51:39 2016 +0200

    Fix JUMP_LABEL documentation
    
    
            * doc/rtl.texi (JUMP_LABEL): Document RETURN and SIMPLE_RETURN values.
    
    From-SVN: r240327

commit d45b6f6bd94315d2c8486afa41a98fb28accc436
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Sep 21 17:25:29 2016 +0200

    dump-noaddr.x: Remove debug statements.
    
            * gcc.c-torture/unsorted/dump-noaddr.x: Remove debug statements.
    
    From-SVN: r240320

commit bc588d77b3163aedf8047125959567781d714a38
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Sep 21 14:11:59 2016 +0000

    backport: re PR target/77326 ([avr] Invalid optimization omits comparison)
    
    gcc/
            Backport from 2016-09-21 trunk r240306.
            PR target/77326
            * config/avr/avr.c (hard-reg-set.h): Move #include up in front
            of rtl.h to that HARD_CONST is defined in rtl.h.
            (avr_notice_update_cc) [CC_NONE]: If insn touches some regs
            mentioned in cc_status, do CC_STATUS_INIT.
    
    gcc/testsuite/
            Backport from 2016-09-21 trunk r240306.
            PR target/77326
            * gcc.target/avr/torture/pr77326.c: New test.
    
    From-SVN: r240315

commit a7697d136e7b3b529f13dbaeffecd19ff3df1d5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 21 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r240295

commit 375acfebca4b84d087bfdfbe9feeca6a01e9dca6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 20 11:03:07 2016 +0100

    Replace casts with floordiv operator in Python xmethods
    
            * python/libstdcxx/v6/xmethods.py (DequeWorkerBase.__init__)
            (DequeWorkerBase.index, VectorWorkerBase.get): Use // for division.
    
    From-SVN: r240260

commit 0148a041ba4a6b88c9adf2194a411fef1ed081ec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 20 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240252

commit 760b143fa2597aa79508a7276bb70e15b90dc332
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 19 18:14:11 2016 +0100

    libstdc++/77645 fix deque and vector xmethods for Python 3
    
            PR libstdc++/77645
            * python/libstdcxx/v6/xmethods.py (DequeWorkerBase.__init__)
            (DequeWorkerBase.index, VectorWorkerBase.get): Cast results of
            division to int to work with Python 3.
    
    From-SVN: r240242

commit 5d1e95e278d2a1182d20d49de60e85c45905dfa0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 19 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240222

commit 541ea9da2fb225497a6a2033a9d3b55d6c461e5c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 18 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240216

commit e92aee27c4e932336b3ee71f355fc6b1c3f388d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 17 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r240211

commit 6886e0ba29a54e46f760f4545ff07bb99171fd6e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Sep 16 22:38:50 2016 +0100

    Fix documentation for overflow-checking builtins
    
            * doc/extend.texi (Integer Overflow Builtins): Fix type of out
            parameters for functions taking long long arguments.
    
    From-SVN: r240202

commit 9bebd03791f327ceebe0d8048ee92382f40299bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 16 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240170

commit ba3586b2ea3100a6abd673bb7c667cd44c70415f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 15 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240149

commit a2ad38592a791509472b84a47635414f56648b87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 14 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r240125

commit 6ace9a45cb2dd6f87913f71e0101229b27b8ae95
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 13 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240104

commit eaf929cbbc128f0f2c08dadac829bb575ee79f35
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 12 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240086

commit 7b4271e2cea2311a11c55a356e087f71bcf67180
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 11 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240077

commit 91d480eac01d28869d7f1d1819e4a4028bd0dc99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 10 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240060

commit 843eb1332afcac72a8e565e0d4b15ecba00be0e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 9 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240040

commit 3a5f0f08c490cf992d902be49d9c5e8faa01ddd8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 8 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r240034

commit 00e69c92283c75dbf443dd37889672d46f637797
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 7 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r240020

commit d799286c23ba30b936dfd640871a554f5a78f225
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Wed Sep 7 00:26:11 2016 +0200

    re PR debug/57519 (DW_TAG_imported_declaration put in wrong class (base class instead of derived class))
    
    2016-09-07  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR debug/57519
            * g++.dg/debug/dwarf2/imported-decl-2.C: Likewise.
    
    From-SVN: r240017

commit f63c020d651e16bd04492c072c78b27d7db2401e
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Sep 6 17:25:09 2016 +0200

    c_by_val_1.f: Correct the call to c_to_c and c_to_c8.
    
            * gfortran.dg/c_by_val_1.f: Correct the call to c_to_c and c_to_c8.
    
    From-SVN: r240011

commit 487f69ea23c96748e8920517a81fde954b13ed4f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 6 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r240002

commit 483ce67199833f92f715db0fd1b6339d10872c1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 5 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239983

commit 61c042261102575236cfa608a81cd1ec0b36afd2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 4 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239972

commit e8bdbe61d9ea528b84f3c6caa07931de98ee8887
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 3 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239967

commit 067e94d8b10251a1d291f3d69d850b20c4cca9ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 2 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239950

commit 5449cd475862f9aca30629a61f8d52058a720b8f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 1 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r239909

commit 2048dd138ad17391c5229985eea7d6d2d50e34d3
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 09:39:22 2016 +0000

    * config.host: Add support for arm*-*-phoenix* targets.
    
    From-SVN: r239887

commit ab5bb2b2a94ae7919bccba1ef40d4869dcb22659
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 09:38:42 2016 +0000

    config.gcc: Add support for arm*-*-phoenix* targets.
    
            * config.gcc: Add support for arm*-*-phoenix* targets.
            * config/arm/t-phoenix: New.
            * config/phoenix.h: New.
    
    From-SVN: r239886

commit 2f70dce0b92e05c4cbba2046a565b0be87edfdf3
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 09:37:05 2016 +0000

    * config.sub: Add support for Phoenix-RTOS targets.
    
    From-SVN: r239885

commit 38c959aae367fabd9739793a67355fa58ccebad4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 31 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239876

commit aef8d3a056ccfc253afad1a50f60a531d8fac4e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 30 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r239848

commit f8c014ea57d5c12060d04588ee19caa8dc10ea9b
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Mon Aug 29 22:26:13 2016 +0200

    re PR target/77403 (assemble failure of vinserti64x4 with -masm=intel)
    
            PR target/77403
            * config/i386/sse.md (vec_set_lo_<mode><mask_name>): Fix assembler
            template for intel asm dialect.
            (vec_set_hi_<mode><mask_name>): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/77403
            * gcc.target/i386/pr77403.c: New test.
    
    From-SVN: r239842

commit 3787ecfdcd566854f35e92c5e8528fb617b769e6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Aug 29 14:44:41 2016 +0000

    * Makefile.in (gcov-iov.h): Add dummy recipe.
    
    From-SVN: r239825

commit 3ed8374491a502e749a738d72d000fe36e95bae0
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Aug 29 07:57:16 2016 +0000

    backport: re PR sanitizer/64078 (FAIL: c-c++-common/ubsan/object-size-9.c)
    
    2016-08-29  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2015-09-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR sanitizer/64078
            * c-c++-common/ubsan/object-size-9.c (s): Add alignment attribute.
            (f2, f3): Make the function static.
            * c-c++-common/ubsan/object-size-10.c (a, b): Add alignment attribute.
    
    From-SVN: r239816

commit f61f7dc5bf5f0e7f458010d884620f502b10a7e5
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Aug 29 07:20:03 2016 +0000

    backport: re PR testsuite/65940 (g++.dg/other/anon5.C requires dwarf4 support in  ld)
    
    2016-08-29  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            PR testsuite/65940
            2016-02-01  Uros Bizjak  <ubizjak@gmail.com>
    
            * g++.dg/other/anon5.C (dg-opetions): Use -gdwarf-2 instead of -g.
    
    From-SVN: r239815

commit 68576bfc502dbadf79070c0a7ca02608cb239981
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 29 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239812

commit 32483c959abc9f735870b52e60f15c0bcf1621aa
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sun Aug 28 22:02:07 2016 +0000

    re PR testsuite/77034 (g++.dg/init/elide5.C fails on powerpc64-unknown-linux-gnu with -m32)
    
    2016-08-28  Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/77034
            Backported from mainline
            2016-07-25  Jason Merrill  <jason@redhat.com>
    
            * g++.dg/init/elide5.C (operator new): Use decltype(sizeof(1)) instead
            of unsigned long.
    
    From-SVN: r239811

commit 5e8eeac4bf98eb1a6c115d149ed5181eaaffe6b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 28 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239802

commit d135215a54c81331840785df8b88251252b4dcc6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 27 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239791

commit 09b84ed3b18ff68aafe203d021cdd0cd88f4450e
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Fri Aug 26 09:37:20 2016 +0000

    [AArch64][GCC 5] Backport Work around for PR target/64971
    
            Backport from mainline
            2016-04-20  Andrew Pinski  <apinski@cavium.com>
                        Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/64971
            * config/aarch64/aarch64.md (sibcall): Force call
            address to be DImode for ILP32.
            (sibcall_value): Likewise.
    
            * gcc.c-torture/compile/pr37433-1.c: New testcase.
    
    From-SVN: r239770

commit acad930f41714b1793fafe02a7d5e51939ee195a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 26 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239764

commit 0a23c3476b86597ead27a32f2e0c5bdbb6c12c30
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Aug 25 16:12:23 2016 +0000

    backport: re PR target/72863 (Powerpc64le: redundant swaps when using vec_vsx_ld/st)
    
    [gcc]
    
    2016-08-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline (minus test for POWER9 support)
            2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/72863
            * vsx.md (vsx_load_<mode>): For P8LE, emit swaps at expand time.
            (vsx_store_<mode>): Likewise.
    
    [gcc/testsuite]
    
    2016-08-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/72863
            * gcc.target/powerpc/pr72863.c: New test.
    
    From-SVN: r239762

commit 9501daabe2873bf4529dcf053bcecaf1c9c14f6e
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Aug 25 09:26:15 2016 +0000

    [expr.c] PR middle-end/71700: zero-extend sub-word value when widening constructor element
    
            Backport from mainline
            2016-07-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR middle-end/71700
            * expr.c (store_constructor): Mask sign-extended bits when widening
            sub-word constructor element at the start of a word.
    
            * gcc.c-torture/execute/pr71700.c: New test.
    
    From-SVN: r239754

commit fbaa2aa4913ce63ebfe26b15aa6774a80e928c9a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 25 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r239749

commit 60fe2f23ca565c3e654c97182d7d7764f49ff172
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 24 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239724

commit 2620360b5d04105f35899b165b303321d5c40f4d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 15:23:40 2016 +0100

    * testsuite/23_containers/map/77334.cc: Use dg-options for C++11.
    
    From-SVN: r239703

commit bbe31563e58f0e93740eb62f72f9964a993cfd0c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 15:20:50 2016 +0100

    libstdc++/77334 move assign RB trees of non-copyable types
    
            PR libstdc++/77334
            * include/bits/stl_tree.h (_Rb_tree::_M_move_assign): New functions.
            (_Rb_tree::operator=(_Rb_tree&&)): Dispatch to _M_move_assign.
            Include _Compare in noexcept.
            * testsuite/23_containers/map/77334.cc: New test.
    
    From-SVN: r239701

commit 06ffb5c0b4b5028de292f5e1b858a26be883f4cd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 13:23:16 2016 +0100

    Update links to libstdc++ Doxygen pages
    
            * doc/xml/api.xml: Replace hardcoded links for specific versions with
            link to docs for all releases.
            * doc/html/*: Regenerate.
    
    From-SVN: r239697

commit 235e0cee2126163eccc0e2280c16210de7fe5840
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 13:23:11 2016 +0100

    libstdc++/71771 constrain reverse_iterator difference op
    
            * include/bits/stl_iterator.h
            (operator-(reverse_iterator<Iter>, reverse_iterator<Iter>): Constrain
            for C++11 and later.
            * testsuite/24_iterators/reverse_iterator/71771.cc: New test.
    
    From-SVN: r239696

commit e153fa109c7e00d3c012324443cc4290f1f4b504
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 23 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239678

commit 6e0689949bb454f8b78192d5b160949b57127b08
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Aug 22 20:57:37 2016 +0200

    backport: re PR target/76342 (AVX512: _mm512_undefined_epi32() intrinsic missing (incorrectly named _mm512_undefined_si512))
    
            Backport from mainline
            2016-08-14  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/76342
            * config/i386/avx512fintrin.h (_mm512_undefined_epi32):
            Renamed from _mm512_undefined_si512.
            (_mm_undefined_si512): New definition.
    
            Backport from mainline:
            2016-08-09  David Wohlferd  <dw@LimeGreenSocks.com>
    
            * config/i3836/avx512fintrin.h (_mm512_cvtsepi64_epi32): Remove
            unused variable __O.
    
            Backport from mainline:
            2016-08-09  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/72843
            * config/i386/i386.md (*movtf_internal): Use
            lra_in_progress || reload_completed instead of !can_create_pseudo_p
            in the insn constraint.
            (*movxf_internal): Ditto.
            (*movdf_internal): Ditto.
            (*movsf_internal): Ditto.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-08-14  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/76342
            * gcc.target/i386/pr76342.c: New test.
    
    From-SVN: r239669

commit ca877ac94817bcaf5a6328565827ea5f1b3ae9de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 22 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239644

commit e3f9b79189c804d1291ce3d5892aff66d6f77d74
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 21 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239640

commit bd4e2c7886bcc9b3c06b7723b2973bdb5ab8b999
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 20 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r239634

commit ffed4f041846adb8ea9f9677cf98fec442dae677
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 19 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239601

commit 8bdd483f256121a3b623297ee573646d3b56b29e
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Aug 18 12:14:33 2016 +0000

    backport: re PR target/71338 ([RL78] mulu instruction not used on G10)
    
    gcc/
            Backport from mainline
            2016-06-17  DJ Delorie  <dj@redhat.com>
    
            PR target/71338
            * config/rl78/rl78-expand.c (umulqihi3): Enable for G10.
            * config/rl78/rl78-virtual.c (umulhi3_shift_virt): Likewise.
            (umulqihi3_virt): Likewise.
            * config/rl78/rl78-real.c (umulhi3_shift_real): Likewise.
            (umulqihi3_real): Likewise.
    
    From-SVN: r239568

commit 8b47372000585a0db6131d5620a0eeaea40d95b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 18 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239551

commit 0f122ed8de9def93863659e5c414c6c37a44fe08
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 17 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r239516

commit dc34bb446e0755214f7a130d67b9f4a6e417f957
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Aug 16 12:43:30 2016 +0000

    * doc/install.texi (*-*-solaris2*): Adjust latest change.
    
    From-SVN: r239501

commit a46d246c96c0da87c3ead9ebdab5b10590d9b41c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 16 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239490

commit 6ad082d373d637264a0ab7980009d28913c10948
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Aug 15 13:20:09 2016 +0200

    Fix invalid memory access in gcc.c (driver/72765)
    
            Backported from mainline
            2016-08-15  Martin Liska  <mliska@suse.cz>
    
            PR driver/72765
            * gcc.c (do_spec_1): Call save_string with the right size.
            (save_string): Do an assert about string we copy.
    
    From-SVN: r239477

commit 6c89f58d241ec03e6dba2a726e2341f35f113492
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Aug 15 09:16:49 2016 +0000

    install.texi (*-*-solaris2*): Fix version number and document requirement on GNU make for building libjava...
    
            * doc/install.texi (*-*-solaris2*): Fix version number and document
            requirement on GNU make for building libjava with the Solaris linker.
    
    From-SVN: r239466

commit 4253c29ae055b9ab5ae6874d85acec7b3ba544a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 15 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239458

commit cf1703274841192b9258390f2bbe62d4de8e5eb6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 14 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239450

commit ea95d376dee5e76db7d7be317d9b5361b5d41b50
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Aug 13 15:04:04 2016 +0000

    backport: re PR fortran/68147 (Potential incorrect code generation for string self-assignment)
    
    2016-08-13  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/68147
            * frontend-passes.c (realloc_string_callback): Don't set
            walk_subtrees.
    
    2016-08-13  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            * gfortran.dg/realloc_on_assign_26.f90:  New test case.
    
    From-SVN: r239445

commit f6509baf6d64fbcc1218895d0a526c6536255882
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 13 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r239439

commit b1fa43b83c2eef36068abf3738bd0174115ce6cb
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Fri Aug 12 18:56:30 2016 +0000

    backport: re PR tree-optimization/71083 (Unaligned bit-field address when predictive commoning)
    
    2016-08-12  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-08-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/71083
            * tree-predcom.c (ref_at_iteration): Correctly align the
            reference type.
    
    testsuite:
    2016-08-12  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-08-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/71083
            * gcc.c-torture/execute/pr71083.c: New test.
            * gnat.dg/loop_optimization23.adb: New test.
            * gnat.dg/loop_optimization23_pkg.ads: New test.
            * gnat.dg/loop_optimization23_pkg.adb: New test.
    
    From-SVN: r239424

commit a77babffddded625e7e43f32c7b18714bfa8cebf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 12 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239398

commit 4f86e9b1ea298a0b2d95677c733ae0bda8bc53ab
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Thu Aug 11 17:28:51 2016 +0000

    backport: re PR libfortran/71123 (Namelist read failure on Windows)
    
    2016-08-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/71123
            PR libgfortran/73142
            * io/list_read (eat_spaces): Eat '\r' as part of spaces.
    
            * gfortran.dg/namelist_90.f: New test.
    
    From-SVN: r239382

commit e6d4736e4e615e964d644bdf181e23396b33a5a6
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Thu Aug 11 09:57:58 2016 +0200

    backport: re PR fortran/72698 (ICE in lhd_incomplete_type_error, at langhooks.c:205)
    
    gcc/testsuite/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/72698
            * gfortran.dg/allocate_with_source_20.f03: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/72698
            * trans-stmt.c (gfc_trans_allocate): Prevent generating code for
            copy of zero sized string and with it an ICE.
    
    From-SVN: r239353

commit 6b908b9f9ba550c3efb2f7f40c0431ba38265f7a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 11 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239349

commit 860cd2ed83f516bbde98fd8d56f052dcbcb5b4bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 10 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r239312

commit 9d4a16f98bb9866d7b0c449553f911d3cb8f37e7
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Aug 9 20:33:00 2016 +0000

    backport: re PR fortran/71795 (Two Bugs in array constructors (optimization))
    
    2016-08-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71795
            * frontend-passes.c (combine_array_constructor):  Don't
            do anything if the expression is inside an array iterator.
    
    2016-08-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71795
            * gfortran.dg/array_constructor_50.f90:  New test.
    
    From-SVN: r239302

commit 2c6dce924ac4ab09c09c48a94515efe305806025
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Aug 9 06:28:57 2016 +0000

    backport: re PR fortran/69742 (ICE with -O3 and ASSOCIATE containing repeated expression)
    
    2016-08-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69742
            * frontend-passes.c (cfe-expr_0):  Don't register functions
            from within an ASSOCIATE statement.
    
    2016-08-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/69742
            * gfortran.dg/associate_21.f90:  New test.
    
    From-SVN: r239271

commit 391f5ea06709c4c95e3a56c1d0f51bff336f4548
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 9 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239262

commit 674577d6ddc9121c6765cb3b30700768748e3080
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Aug 8 22:00:37 2016 +0000

    backport: re PR fortran/60526 (Accepts-invalid: Variable name same as type name)
    
    2016-08-08  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/60526
            * decl.c (build_sym):  If the name has already been defined as a
            type, it has a symtree with an upper case letter at the beginning.
            If such a symtree exists, issue an error and exit.  Don't do
            this if there is no corresponding upper case letter.
    
    2016-08-08  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/60526
            * gfortran.dg/type_decl_4.f90:  New test.
    
    From-SVN: r239259

commit b8377ab8fb714e909adb89427acfcb1d646b615e
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 8 10:13:54 2016 +0000

    backport: re PR rtl-optimization/71976 (insn-combiner deletes a live 64-bit shift)
    
            Backport from 2016-07-29 trunk r238863.
            PR rtl-optimization/71976
            * combine.c (get_last_value): Return 0 if the argument for which
            the function is called has a wider mode than the recorded value.
    
    From-SVN: r239239

commit c9c31e0f35936fcbb373cc78f27cddb684a44726
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Mon Aug 8 10:24:22 2016 +0200

    backport: re PR fortran/70524 (ICE when using  -frepack-arrays -Warray-temporaries)
    
    gcc/testsuite/ChangeLog:
    
    2016-08-08  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70524
            * gfortran.dg/dependency_48.f90: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-08-08  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70524
            * trans-array.c (gfc_trans_dummy_array_bias): Ensure that the
            location information is correctly set.
            * trans-decl.c (gfc_trans_deferred_vars): Set the locus of the
            current construct early.
    
    From-SVN: r239232

commit 5e48ff02586f7ccb75e173f2b7e509d46e45c678
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Aug 8 06:29:16 2016 +0000

    re PR fortran/70040 (ICE in gimplify.c with deferred-length strings)
    
    2016-08-08  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/70040
            Backport from trunk
            * gfortran.dg/pr70040.f90:  New testcase.
    
    From-SVN: r239229

commit 4689b06a7126d7dcf43896cd0a0912993ecefa15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 8 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239226

commit cb02ed0d148a7c0d299acaa63229ed8f105dc7e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 7 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239214

commit 23441d2f60b7f0537a844d6174f72166ec279cdf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:55 2016 +0100

    Use correct value category in std::function constraint
    
            * include/std/functional (function::_Callable): Use lvalue in
            result_of expression.
            * testsuite/20_util/function/cons/refqual.cc: New test.
    
    From-SVN: r239208

commit 3d06e8eb9353058330f462ea85b747c3269cf6ba
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:51 2016 +0100

    Move allocator in RB tree move constructors
    
    Backport from mainline
    2016-07-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71964
            * include/bits/stl_tree.h (_Rb_tree(_Rb_tree&&)): Move allocator.
            * testsuite/23_containers/set/allocator/71964.cc: New test.
    
    From-SVN: r239207

commit 2a35627433cca17eb8018b1b22f6038e851ec720
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:46 2016 +0100

    Fix std::wstring allocator tests
    
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc:
            Remove reundant check for _GLIBCXX_USE_WCHAR_T and fix char type.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/noexcept.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc:
            Likewise.
    
    From-SVN: r239206

commit 60a1663f2267932e70665209910ddcec77a13bc3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:42 2016 +0100

    Fix construction of std::function from null pointer-to-member
    
            PR libstdc++/69293
            * include/std/functional (_Function_base::_M_not_empty_function):
            Change overloads for pointers to take arguments by value.
            * testsuite/20_util/function/cons/57465.cc: Add tests for
            pointer-to-member cases.
    
    From-SVN: r239205

commit 1fdb895a9d96d63b5353fa26f0f653a7de7a09db
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:38 2016 +0100

    Change libstdc++ manual to refer to release not trunk
    
            * doc/xml/manual/status_cxx2011.xml: Change "mainline GCC SVN" to
            refer to the release series.
            * doc/xml/manual/status_cxx2014.xml: Likewise.
            * doc/html/manual/status.xml: Regenerate.
    
    From-SVN: r239204

commit ffc0e8700d1aa34a35d28947421dbf097f6bb8a9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:21:33 2016 +0100

    Improve comments on check_v3_target_filesystem_ts
    
            * testsuite/lib/libstdc++.exp (check_v3_target_filesystem_ts): Improve
            comments.
    
    From-SVN: r239203

commit 8ff325d31b20b4d9a10b76cc67f70887ae634d0c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 6 00:16:06 2016 +0000

    Daily bump.
    
    From-SVN: r239186

commit cace1462160bc49a805b51c757b1a434abc509dc
Author: Nathan Sidwell <nathan@acm.org>
Date:   Fri Aug 5 19:58:36 2016 +0000

    re PR c++/68724 (ice in unify, at cp/pt.c:19902)
    
            PR c++/68724
            * pt.c (unify): TRAIT_EXPR is an expr.
    
            PR c++/68724
            * g++.dg/cpp0x/pr68724.C: New.
    
    From-SVN: r239177

commit eba2666f38d6ec302264a5b0a13fe3d90d8f2e33
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 5 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239158

commit 77a8b3737bad243ba37d14a2e26e6e87dbe35f37
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Aug 4 23:25:33 2016 +0200

    re PR target/72805 (AVX512: invalid code generation involving masks)
    
            PR target/72805
            * config/i386/avx512fintrin.h (_mm512_cmp_epi32_mask) [!__OPTIMIZE__]:
            Cast builtin function result to __mmask16 instead of __mmask8.
            (_mm512_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.
            (_mm512_mask_cmp_epi32_mask) [!__OPTIMIZE__]: Ditto.
            (_mm512_mask_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.
    
    From-SVN: r239155

commit 9e9ff1bf78b5c2d22dc8f7061e7637faed0aef7c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 4 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239110

commit 9ea188d84b23f4e8622538752c444810aa549b49
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 3 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r239006

commit 882c54bb4ab5556aa5801bebcfd3666131fac833
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 2 10:53:45 2016 +0100

    Support using -flto with libstdc++ testsuite
    
            * testsuite/lib/libstdc++.exp (v3-build_support): Add -fno-lto
            to additional flags for compiling libtestc++.a objects.
    
    From-SVN: r238980

commit 7a9cb0a4a606d0b59baa06737cdc0e0c38338895
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 2 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r238974

commit b5ab3a7fc7b9414526f6d463063099d09f88067d
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 1 12:44:18 2016 +0000

    backport: re PR target/72767 ([avr] Some branches report too small insn length)
    
            Backport from 2016-08-01 trunk r238948.
            PR target/72767
            * config/avr/avr.md (length) [branch]: Correct insn length
            attribute for forward branches.
    
    From-SVN: r238950

commit 71b56c3a6ed355f1483ed9d1645c2ffb87e1e58d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 1 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r238931

commit edd208315444553fd0d017571cac781f7d7eaa87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 31 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r238912

commit 52ecf49b54cd19e0a44de5a244eb184ecdcb2b07
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 30 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r238900

commit ee27d4a4e685dc60ad56612c040ef47214ce08e8
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jul 29 12:42:55 2016 +0000

    i386.c (ix86_expand_args_builtin): Add break.
    
            * config/i386/i386.c (ix86_expand_args_builtin): Add break.
            (ix86_expand_round_builtin): Likewise.
    
    From-SVN: r238866

commit 28710a875bbecce99ae7cd85b107693693a33ea0
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jul 29 11:26:46 2016 +0000

    re PR c/7652 (-Wswitch-break : Warn if a switch case falls through)
    
            PR c/7652
            * config/rs6000/rs6000.c (altivec_expand_ld_builtin): Likewise.
            (altivec_expand_st_builtin): Likewise.
    
    From-SVN: r238858

commit 57f10c54711f2caafebeaf151db55fab530f552b
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Fri Jul 29 05:16:05 2016 +0000

    [multiple changes]
    
    2016-07-29  Steven G. Kargl  <kargl@gcc.gnu.org>
                Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71883
            * frontend-passes.c (gfc_run_passes): Bail out if there are any
            errors.
            * error.c (gfc_internal_error): If there are any errors in the
            buffer, exit with EXIT_FAILURE.
    
    2016-07-29  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/71883
            * gfortran.dg/pr71883.f90 : New test.
    
    From-SVN: r238848

commit 802df4477b95062423a6b26bb6fd55468d8af9e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 29 00:16:05 2016 +0000

    Daily bump.
    
    From-SVN: r238843

commit f5c5e6d29110034e5ca781f3d7fa09d7e5aa2c7d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 28 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r238804

commit d72603df73a8487a9f0b8469502951261b4a621b
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Jul 27 18:14:12 2016 +0200

    rs6000: Fix logic for when to emit .machine (PR71216)
    
    The current logic determining whether to use .machine in the generated
    asm code puts it there if the compiler is not configured with a default
    target cpu, _or_ no -mcpu= was given on the command line.  It should
    be "and" instead.
    
    
            PR target/71216
            * config/rs6000/rs6000.c (rs6000_file_start): Fix condition for
            when to emit a ".machine" pseudo-op.
    
    From-SVN: r238789

commit 0532a688599764a3ed0658f9f17e9b7c30cfaff4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 27 00:16:04 2016 +0000

    Daily bump.
    
    From-SVN: r238776

commit 856aa28cb8ed7aa13e482b18da28d2e85e272c67
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jul 26 16:29:12 2016 -0400

    PR c++/71833 - member template with two parameter packs
    
            * pt.c (coerce_template_parameter_pack): Fix logic for
            pack index.
    
    From-SVN: r238765

commit a57ce13728b271cdc5ae812f770a8d2e0fa9be18
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Jul 26 19:59:32 2016 +0930

    [RS6000] push_secondary_reload ICE
    
            PR target/72103
            * config/rs6000/rs6000.c (rs6000_secondary_reload): Initialize
            sri->t_icode.
    
    From-SVN: r238746

commit 783abf27a929d714921ebfe9282ea2bfa7b5adc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 26 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238739

commit da2bafc7891b7303d065b45b9b1ad2654e096f76
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 25 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r238698

commit 5e59ddcc9873cf40c23f6e99299b7f880b06adb0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 24 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238678

commit d74fced0dcf94604fd4590249bb1bc789002b014
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 23 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r238672

commit 236cb0260ad4ed662ca0c8526d435fc41a301299
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Fri Jul 22 17:21:10 2016 +0200

    backport: re PR fortran/71807 (Internal compiler error with NULL() reference in structure constructor)
    
    gcc/fortran/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backported from trunk:
            PR fortran/71807
            * trans-expr.c (gfc_trans_subcomponent_assign): Special casing
            when allocatable component is set to null() in initializer.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backported from trunk:
            PR fortran/71807
            * gfortran.dg/null_9.f90: New test.
    
    From-SVN: r238650

commit 86e81ee4dcd43b8d61fd7f43b3d92177f6627fe1
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Fri Jul 22 16:12:59 2016 +0200

    backport: re PR fortran/70842 (internal compiler error with character members within a polymorphic pointer)
    
    gcc/testsuite/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70842
            * gfortran.dg/select_type_35.f03: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70842
            * simplify.c (gfc_simplify_len): Only for unlimited polymorphic
            types replace the expression's _data ref with a _len ref.
    
    From-SVN: r238644

commit 765c42ab615e5826bbeee8a82815d9a14da1cd3a
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:51:22 2016 -0400

    PR c++/69223 - ICE with deduced template return type.
    
            * semantics.c (apply_deduced_return_type): Call
            complete_type_or_else before building the new RESULT_DECL.
    
    From-SVN: r238630

commit e7cb6cc01eba54b89a916d9df3030a8ceac220c9
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:51:15 2016 -0400

    PR c++/71630 - extern variable template
    
            * pt.c (instantiate_decl): Fix pattern_defined for namespace scope
            variable templates.
    
    From-SVN: r238629

commit 41506fa12c5614a39a7dd2ff7f146acdeb6d2caa
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:51:07 2016 -0400

    PR c++/71913 - missing copy elision with new.
    
            * call.c (unsafe_copy_elision_p): It's OK to elide when
            initializing an unknown object.
    
    From-SVN: r238628

commit 4f1d1c8f1248f68abf50bd73a0df54802e2f11df
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 22 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238615

commit 50876668f49c905d4ac549bc8c9db8166d82357d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 21 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238555

commit 323d171f9019dff605e78c6d027348e8d38b7e00
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jul 20 16:16:40 2016 +0200

    re PR c++/71909 (g++ accepts an unreachable function catch block that lacks a corresponding try)
    
            PR c++/71909
            * parser.c (cp_parser_save_member_function_body): Consume
            __transaction_relaxed or __transaction_atomic with optional
            attribute.  Only skip catch with block if try keyword is seen.
    
            * g++.dg/parse/pr71909.C: New test.
            * g++.dg/tm/pr71909.C: New test.
    
    From-SVN: r238526

commit 46f2e7001b112259cf745ca9d05c5f12b414ce36
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Jul 20 15:31:19 2016 +0200

    re PR fortran/71688 (ICE in analyze, at cgraphunit.c:632 with -fcoarray=lib)
    
    Fix PR fortran/71688
    
    2016-07-20  Martin Jambor  <mjambor@suse.cz>
    
            PR fortran/71688
            * trans-decl.c (gfc_generate_function_code): Use get_create rather
            than create to get a call graph node.
    
    testsuite/
            * gfortran.dg/pr71688.f90: New test.
    
    From-SVN: r238516

commit f94596882aa02ece584206a15d77bb7d0da90ea3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 20 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r238504

commit 6c1a79ad0d6d6070384573bb8994a1c6890558a7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 19:39:26 2016 +0200

    re PR middle-end/71874 (memmove works wrong)
    
            PR middle-end/71874
            * gimple-fold.c (fold_builtin_memory_op): Use
            get_addr_base_and_unit_offset instead of get_ref_base_and_extent.
    
            * g++.dg/torture/pr71874.C: New test.
    
    From-SVN: r238486

commit b34cb81465f1ea8cd97ed6281d3270c0e1b26d24
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 19 18:17:05 2016 +0100

    libstdc++/71320 Add or remove file permissions correctly
    
    Backport from mainline
    2016-06-06  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71320
            * src/filesystem/ops.cc (permissions(const path&, perms, error_code&)):
            Add or remove permissions according to perms argument.
            * testsuite/experimental/filesystem/operations/permissions.cc: New
            test.
    
    From-SVN: r238483

commit cc441bd93f4d2ce760ca1f27e80ac7f7f9b203a3
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jul 19 15:35:43 2016 +0200

    Fix compiling large files
    
            Backported from mainline
            2016-03-15  Richard Henderson  <rth@redhat.com>
    
            * line-map.c (new_linemap): Make alloc_size a size_t.
    
    From-SVN: r238474

commit 966f8720694d502b0269ad7c37ec696a945c5985
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 11:25:10 2016 +0200

    backport: re PR c++/71871 (ICE on mixing templates and vector extensions ternary operator)
    
            Backported from mainline
            2016-07-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71871
            * typeck.c (build_x_conditional_expr): Revert the 2012-10-25 change.
    
            * g++.dg/ext/vector31.C: New test.
    
    From-SVN: r238464

commit 33800c8d66a016060296e29dbab6ba23619c0423
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 11:02:11 2016 +0200

    backport: re PR middle-end/71758 (ICE in verify_gimple_in_cfg, at tree-cfg.c:5212)
    
            Backported from mainline
            2016-07-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71758
            * omp-low.c (expand_omp_target): Gimplify device.
    
            * c-c++-common/gomp/pr71758.c: New test.
            * gfortran.dg/gomp/pr71758.f90: New test.
    
    From-SVN: r238462

commit 933342941d6f2c69b7813a27100d715e1bd7d90e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 19 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238451

commit 75191c9fb18233dd446997c565942396040b186e
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jul 18 14:59:10 2016 +0200

    re PR rtl-optimization/71634 (Invalid write with in mark_loops_for_removal (ira-build.c:2256) with --param ira-max-loops-num=0)
    
    Fix PR rtl-optimization/71634
    
            Backported from mainline
            2016-07-12  Martin Liska  <mliska@suse.cz>
    
            * ira-build.c (mark_loops_for_removal): Properly iterate
            loops.
    
    From-SVN: r238430

commit 23873af78674708ea4a92c86dc87fca7b565b0d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 18 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238422

commit 2d7b4fd85945f2de9be387cba767a836bd39e441
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 17 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238417

commit 2d7fbc3f0f2c39e6e3e741972ab4ecc469fcdf34
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Jul 16 05:10:10 2016 +0000

    backport: re PR fortran/71764 (ICE in gfc_trans_structure_assign)
    
    2016-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71764
            * trans-expr.c (gfc_trans_structure_assign): Remove assert.
    
            * gfortran.dg/pr71764.f90: New test.
    
    From-SVN: r238411

commit 5f845c3b1e7ce9a8fdcfab120bae11325f9c7ac9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 16 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238407

commit 982bb366329a9c5f63dafd4b074a0469530c4190
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 15 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238360

commit 8e1b147c521aa1f27278f5e658b8feed70d414b8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 14 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238317

commit d53706d2082e6d27a33359842487d50d5ff8fdf9
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Wed Jul 13 19:30:58 2016 +0200

    backport: re PR fortran/71623 (Segfault when allocating deferred-length characters to size of a pointer)
    
    gcc/fortran/ChangeLog:
    
    2016-07-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71623
            * trans-stmt.c (gfc_trans_allocate): Add code of pre block of typespec
            in allocate to parent block.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71623
            * gfortran.dg/deferred_character_18.f90: New test.
    
    From-SVN: r238308

commit d8242b8db4c061681eb4b895e65f7ce2deca98ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 13 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238275

commit 802cf37f415bdce34287019845c93424bedc2670
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jul 12 17:13:47 2016 +0200

    backport: re PR target/70098 (PowerPC64: eigen hits ICE following invalid register assignment)
    
            Backport from mainline
            2016-07-06  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70098
            PR target/71763
            * config/rs6000/rs6000.md (*ctr<mode>_internal1, *ctr<mode>_internal2,
            *ctr<mode>_internal5, *ctr<mode>_internal6): Add *wi to the output
            constraint.
    
    gcc/testsuite/
            PR target/70098
            PR target/71763
            * gcc.target/powerpc/pr71763.c: New file.
    
    From-SVN: r238251

commit 397c5bf9204cc87a406dc83301e8f8790ef269b9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 12 11:56:11 2016 +0100

    Implement N4258 noexcept for std::basic_string.
    
            Backport from mainline
            2015-10-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/21_strings/basic_string/allocator/char/minimal.cc: Guard
            explicit instantiation with check for new ABI.
            * testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc:
            Likewise. Use wchar_t as char_type.
    
            Backport from mainline
            2015-09-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/58265
            * doc/xml/manual/intro.xml: Document LWG 2063 and 2064 resolutions.
            * doc/html/manual/bugs.html: Regenerate.
            * include/bits/basic_string.h (basic_string): Implement N4258. Add
            correct exception-specifications and propagate allocators correctly.
            * include/bits/basic_string.tcc (basic_string::swap): Propagate
            allocators correctly.
            * include/debug/string (__gnu_debug::basic_string): Add correct
            exceptions-specifications and allcoator-extended constructors.
            * testsuite/21_strings/basic_string/allocator/char/copy.cc: New.
            * testsuite/21_strings/basic_string/allocator/char/copy_assign.cc:
            New.
            * testsuite/21_strings/basic_string/allocator/char/minimal.cc: New.
            * testsuite/21_strings/basic_string/allocator/char/move.cc: New.
            * testsuite/21_strings/basic_string/allocator/char/move_assign.cc:
            New.
            * testsuite/21_strings/basic_string/allocator/char/noexcept.cc: New.
            * testsuite/21_strings/basic_string/allocator/char/swap.cc: New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc: New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:
            New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc: New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move.cc: New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc:
            New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/noexcept.cc: New.
            * testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc: New.
            * testsuite/util/testsuite_allocator.h (tracker_allocator): Define
            defaulted assignment operators.
    
    From-SVN: r238241

commit 1a9a2c70448e82ca4b7cfe3dafd585ca6d89daf3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 12 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238235

commit 1228ceef4848560eac605a0fae862c2f73125cd7
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Jul 11 20:08:51 2016 +0000

    backport: re PR fortran/71783 (ICE on valid code in gimplify_var_or_parm_decl at gimplify.c:1801)
    
    2016-07-11  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71783
            * frontend-passes.c (create_var):  Always allocate a charlen
            for character variables.
    
    2016-07-11  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71783
            * gfortran.dg/dependency_46.f90:  New test.
    
    From-SVN: r238225

commit 0e65d0e29593036c816e840e85b8e9a74e010453
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 11 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r238200

commit f92f8f2f0fac394e3dd52c6049a3d447d54e4c97
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 10 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238194

commit 1c7980628c18740eff71e040c67bdfd7bdc96a45
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 9 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238189

commit 1e17a8f8c66013417c39ac6820880aba11ea73bb
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Fri Jul 8 14:58:57 2016 -0700

    backport: parse.c (matcha): Define.
    
            Backport from trunk:
            2016-07-08  Cesar Philippidis  <cesar@codesourcery.com>
    
            gcc/fortran/
            * parse.c (matcha): Define.
            (decode_oacc_directive): Add spec_only local var and set it.  Use
            matcha to parse acc directives except for routine and declare.  Return
            ST_GET_FCN_CHARACTERISTICS if a non-declarative directive could be
            matched.
    
            gcc/testsuite/
            * gfortran.dg/goacc/pr71704.f90: New test.
    
    From-SVN: r238184

commit a9571e58f5f994dbc9f72eea2e80a0fdcd6f287a
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jul 8 22:21:02 2016 +0200

    Do not consider COMPLEX_TYPE as fold_convertible_p
    
            Backported from mainline
            2016-07-08  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/71606
            * fold-const.c (fold_convertible_p): As COMPLEX_TYPE
            folding produces SAVE_EXPRs, thus return false for the type.
            Backported from mainline
            2016-07-08  Martin Liska  <mliska@suse.cz>
    
            * gcc.dg/torture/pr71606.c: New test.
    
    From-SVN: r238173

commit 8a17b1ccd75891e496896d41d5fe9ae2ebc9bd4e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jul 8 14:29:06 2016 +0100

    Update LWG issues lists and implementation status
    
    Backport from mainline
    2015-06-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/html/ext/lwg-active.html: Update to R93.
            * doc/html/ext/lwg-closed.html: Likewise.
            * doc/html/ext/lwg-defects.html: Likewise.
            * doc/html/manual/*: Regenerate.
            * doc/xml/manual/intro.xml: Document status of several DRs.
    
    From-SVN: r238162

commit dddb67df9819ce2439c5a09051dd2ba20a6ec302
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 8 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r238153

commit ada9ca29df71a3e1663f9fbf5f30c8cd5aabd88f
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Jul 7 19:08:00 2016 +0200

    rs6000: Fix gcc.target/powerpc/ti_math1.c on GCC 5 (PR69019)
    
    This testcase currently fails on GCC 5, for LE only.  Since it is fixed
    for 6 and later, and backporting the relevant code is rather invasive,
    let's just weaken the testcase for GCC 5 instead.
    
    
           PR target/69019
           * gcc.target/powerpc/ti_math1.c: Allow addze as well as adde.
    
    From-SVN: r238121

commit c3b53b35b1dbba276a8902807705031d0f3827ea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:59:39 2016 +0200

    backport: re PR c/68062 (ICE when comparing vectors)
    
            Backported from mainline
            2016-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/68062
            * c-c++-common/vector-compare-4.c: Add -Wno-psabi to dg-options.
    
    From-SVN: r238108

commit 3eb86bf8203ef3c49c56edd0dee69d48a5dfe38a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:58:43 2016 +0200

    backport: vector-compare-4.c: Prune "non-standard ABI extension" warning.
    
            Backported from mainline
            2016-02-02  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * c-c++-common/vector-compare-4.c: Prune "non-standard ABI extension"
            warning.
    
    From-SVN: r238105

commit 0310db3e485593e5a30d85921eb58b59c998beae
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:51:01 2016 +0200

    backport: re PR fortran/71717 (A gfortran silent "wrong code" bug in the transition from 4.9.0 -> 4.9.1, using OpenMP.)
    
            Backported from mainline
            2016-07-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71717
            * trans-openmp.c (gfc_omp_privatize_by_reference): Return false
            for GFC_DECL_ASSOCIATE_VAR_P with POINTER_TYPE.
    
            * testsuite/libgomp.fortran/associate3.f90: New test.
    
    From-SVN: r238104

commit e74885afa7b58f32e866d0dbef27d5fd88dc5ca9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:50:01 2016 +0200

    backport: re PR fortran/71704 (ICE with -fopenmp and some omp constructs)
    
            Backported from mainline
            2016-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71704
            * parse.c (matchs, matcho): Move right before decode_omp_directive.
            If spec_only, only gfc_match the keyword and if successful, goto
            do_spec_only.
            (matchds, matchdo): Define.
            (decode_omp_directive): Add spec_only local var and set it.
            Use matchds or matchdo macros instead of matchs or matcho
            for declare target, declare simd, declare reduction and threadprivate
            directives.  Return ST_GET_FCN_CHARACTERISTICS if a non-declarative
            directive could be matched.
            (next_statement): For ST_GET_FCN_CHARACTERISTICS restore
            gfc_current_locus from old_locus even if there is no label.
    
            * gfortran.dg/gomp/pr71704.f90: New test.
    
    From-SVN: r238103

commit 0e8f52c0afe7dc14e4937e7f004989a2b729f9c8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:49:04 2016 +0200

    backport: re PR fortran/71705 (ICE in lower_omp_target, at omp-low.c:16136)
    
            Backported from mainline
            2016-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71705
            * trans-openmp.c (gfc_trans_omp_clauses): Set TREE_ADDRESSABLE on
            decls in to/from clauses.
    
            * gfortran.dg/gomp/pr71705.f90: New test.
    
    From-SVN: r238102

commit a51922e1e6be2edcd462ff9cc7b2507b06cd09f0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:48:16 2016 +0200

    backport: re PR middle-end/71626 (ICE at -O1 and above on x86_64-linux-gnu (in output_constant_pool_2, at varasm.c:3837))
    
            Backported from mainline
            2016-06-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71626
            * config/i386/i386.c (ix86_expand_vector_move): For SUBREG of
            a constant, force its SUBREG_REG into memory or register instead
            of whole op1.
    
            * gcc.c-torture/execute/pr71626-1.c: New test.
            * gcc.c-torture/execute/pr71626-2.c: New test.
    
    From-SVN: r238101

commit b5af6820de98cfd9eb0ae2004308c264541f0374
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:47:20 2016 +0200

    backport: re PR tree-optimization/71588 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu: in execute_todo, at passes.c:2009)
    
            Backported from mainline
            2016-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/71588
            * tree-ssa-strlen.c (valid_builtin_call): New function.
            (adjust_last_stmt, handle_builtin_memset, strlen_optimize_stmt): Use
            it.
    
            * gcc.dg/pr71558.c: New test.
    
    From-SVN: r238100

commit 66801cc21fad1878a7cc5ad02e056db23f1c5f47
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:46:33 2016 +0200

    backport: re PR middle-end/71581 (ICE on valid code on x86_64-linux-gnu with -Wuninitialized (Segmentation fault))
    
            Backported from mainline
            2016-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71581
            * tree-ssa-uninit.c (warn_uninit): If EXPR and VAR are NULL,
            see if T isn't anonymous SSA_NAME with COMPLEX_EXPR created
            for conversion of scalar user var to complex type and use the
            underlying SSA_NAME_VAR in that case.  If EXPR is still NULL,
            punt.
    
            * gcc.dg/pr71581.c: New test.
    
    From-SVN: r238099

commit e604e4e89670192f01deefa900a5eb11893d06b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:45:44 2016 +0200

    backport: re PR c++/71528 (multiple extern reference declarations produce uninitialized access)
    
            Backported from mainline
            2016-06-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71528
            * decl.c (duplicate_decls): For DECL_INITIALIZED_P non-external
            olddecl vars, preserve their TREE_READONLY bit.
    
            * g++.dg/opt/pr71528.C: New test.
    
    From-SVN: r238098

commit 0da68630d9b6bff37a7863079f7660d8588bb094
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:44:33 2016 +0200

    backport: re PR c++/71516 (ICE on invalid C++ code (invalid use of forward declared type) on x86_64-linux-gnu: Segmentation fault (program cc1plus))
    
            Backported from mainline
            2016-06-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71516
            * decl.c (complete_vars): Handle gracefully type == error_mark_node.
    
            * g++.dg/init/pr71516.C: New test.
    
    From-SVN: r238097

commit a554921f61e90339c82e31c4a6d0c877723cb191
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:43:50 2016 +0200

    backport: re PR middle-end/71494 (label as value in nested function)
    
            Backported from mainline
            2016-06-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71494
            * tree-nested.c (convert_nonlocal_reference_stmt): For GIMPLE_GOTO
            without LABEL_DECL, set *handled_ops_p to false instead of true.
    
            * gcc.c-torture/execute/pr71494.c: New test.
    
    From-SVN: r238096

commit 210bc3f9c0d6f6a8b35acf436ed1492f587608ef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:42:43 2016 +0200

    backport: re PR sanitizer/71498 (ubsan bounds checking influenced by surrounding code)
    
            Backported from mainline
            2016-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/71498
            * c-gimplify.c (ubsan_walk_array_refs_r): Set *walk_subtrees = 0 on
            all BIND_EXPRs, and on all BIND_EXPRs recurse also on BIND_EXPR_BODY.
    
            * c-c++-common/ubsan/bounds-13.c: New test.
    
    From-SVN: r238095

commit dff1ad34a472315e456dfa6188ae5088e36228ac
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:41:25 2016 +0200

    backport: re PR c++/70641 (ICE on valid code at -O1 and above on x86_64-linux-gnu: verify_gimple failed)
    
            Backported from mainline
            2016-04-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/70641
            * ipa-pure-const.c (pass_nothrow::execute): Call maybe_clean_eh_stmt
            on all recursive call stmts.  Return TODO_cleanup_cfg if any dead
            eh edges have been purged.
    
            * g++.dg/opt/pr70641.C: New test.
    
    From-SVN: r238094

commit 539645578a9c3b6862c9c03560e62b56cc8dcced
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:40:43 2016 +0200

    backport: re PR target/70633 (ICE on valid code at -Os (in 32-bit mode) on x86_64-linux-gnu: output_operand: invalid expression as operand)
    
            Backported from mainline
            2016-04-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/70633
            * gimplify.c (gimplify_init_constructor): Clear TREE_STATIC if
            gimplification turns some element into non-constant.
    
            * gcc.c-torture/compile/pr70633.c: New test.
    
    From-SVN: r238093

commit 0dec00b72b6b9cb2ed197abfdf322003ffbe23b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:39:40 2016 +0200

    backport: re PR debug/70628 (ICE in get_reg_rtx, at emit-rtl.c:1025)
    
            Backported from mainline
            2016-04-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/70628
            * explow.c (convert_memory_address_addr_space_1): Formatting fix.
    
            PR debug/70628
            * rtl.h (convert_memory_address_addr_space_1): New prototype.
            * explow.c (convert_memory_address_addr_space_1): No longer static,
            add NO_EMIT argument and don't call convert_modes if true, pass
            it down recursively, remove break after return.
            (convert_memory_address_addr_space): Adjust caller.
            * simplify-rtx.c (simplify_unary_operation_1): Call
            convert_memory_address_addr_space_1 instead of convert_memory_address,
            if it returns NULL, don't simplify.
    
            * gcc.dg/torture/pr70628.c: New test.
    
    From-SVN: r238092

commit 21abdacbec1fb71dfe5bc17b60e658bb60691937
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:34:07 2016 +0200

    backport: re PR target/70574 (wrong code with -mavx2, read of partially initialised stack variable)
    
            Backported from mainline
            2016-04-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/70574
            * fwprop.c (forward_propagate_and_simplify): Don't add
            REG_EQUAL note if DF_REF_REG (use) is a paradoxical subreg.
            (try_fwprop_subst): Don't add REG_EQUAL note if there are any
            paradoxical subregs within *loc.
    
            * gcc.target/i386/avx2-pr70574.c: New test.
    
    From-SVN: r238091

commit 00bebe248ca005f4bd9289bf93dab172734444b0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 7 14:33:10 2016 +0200

    backport: re PR c++/70336 (Incorrect Wconversion warning)
    
            Backported from mainline
            2016-04-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/70336
            * match.pd (nested int casts): Limit to GIMPLE.
    
            * c-c++-common/pr70336.c: New test.
            * gcc.dg/torture/builtin-isinf_sign-1.c (foo): Guard tests
            no longer optimized away at -O0 with #ifndef __OPTIMIZE__.
    
    From-SVN: r238090

commit 3073e060311922c91a74ba7f95e952c836756f0f
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 7 10:33:01 2016 +0000

    backport: [multiple changes]
    
    2016-07-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-06-07  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/71423
            * match.pd ((X | ~Y) -> Y <= X): Properly invert the comparison
            for signed ops.
    
            * gcc.dg/torture/pr71423.c: New testcase.
    
            2016-06-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71452
            * tree-ssa.c (non_rewritable_lvalue_p): Make sure that the
            type used for the SSA rewrite has enough precision to cover
            the dynamic type of the location.
    
            * gcc.dg/torture/pr71452.c: New testcase.
    
            2016-06-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71522
            * tree-ssa.c (non_rewritable_lvalue_p): Do not rewrite non-float
            copying into float copying.
    
            * gcc.dg/torture/pr71522.c: New testcase.
    
    From-SVN: r238084

commit 6f35912ae3287a8b93c6c530c00b4423bd9b908c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 7 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r238071

commit 189b00f6fd98e25ef86d40ffdd025a06bc0d7df7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 6 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r238027

commit 65f1537f3904639efe0f5fb99eed4afb75b4669d
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Tue Jul 5 17:58:35 2016 +0000

    re PR c++/71214 (Typo in feature test macro for rvalue references)
    
    Fix PR c++/71214
    
             PR c++/71214
            * c-cppbuiltin.c (c_cpp_builtins): Define * __cpp_rvalue_references.
    
    From-SVN: r238020

commit 2938602907c9a3a71562a81e3460eec896e1dba6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 5 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237996

commit 4b386db09235e8efc76063ca59eca7d3323b5498
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Jul 4 16:52:21 2016 +0300

    backport: re PR libstdc++/71313 ([Filesystem TS] remove_all fails to remove directory contents recursively)
    
            Backport from mainline
            2016-07-04  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            PR libstdc++/71313
            * src/filesystem/ops.cc (remove_all(const path&, error_code&)):
            Call remove_all for children of a directory.
            * testsuite/experimental/filesystem/operations/create_directories.cc:
            Adjust.
    
    From-SVN: r237981

commit 021de257a6476c120bffff62afaf58d11ab5a447
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 4 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237952

commit 93aa5c5dd59cf117eb149ce55b52e46e5215cc4e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 3 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237947

commit 745b7ab1d162b82e32324241e1ddab74061bc0a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 2 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237934

commit d7ecb13e87ea4aa1e21d75876ca64b6c7443ac9a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Jul 1 07:41:01 2016 +0000

    arm.c (arm_function_ok_for_sibcall): Add another check for NULL decl.
    
            * config/arm/arm.c (arm_function_ok_for_sibcall): Add another check
            for NULL decl.
    
    From-SVN: r237905

commit 359af05b2b4d2b9196a671c8c57e4bd5c216c583
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 1 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237900

commit a4026c723da695fd34e1dd9b5514f380bbe9ce2e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 30 11:08:32 2016 +0200

    re PR middle-end/71693 (ICE: verify_gimple failed (type mismatch in shift expression, -O0, -O1, -O2, -O3))
    
            PR middle-end/71693
            * fold-const.c (fold_binary_loc) <case RROTATE_EXPR>: Cast
            TREE_OPERAND (arg0, 0) and TREE_OPERAND (arg0, 1) to type
            first when permuting bitwise operation with rotate.  Cast
            TREE_OPERAND (arg0, 0) to type when cancelling two rotations.
    
            * gcc.c-torture/compile/pr71693.c: New test.
    
    From-SVN: r237877

commit 93dd6108dd94faa145387d928a28844ec03c64f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 30 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237867

commit 6317e93eb1409103566ff02d01b815ba79935f14
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 29 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237834

commit 109e48ff092f716d0da16d3f375bebd0955d6114
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 28 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237808

commit 7f1005e379b642611817b7a74be4f00baac644ea
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Jun 27 20:57:13 2016 +0000

    re PR fortran/70673 (ICE with module containing functions with allocatable character scalars)
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * frontend-passes.c (realloc_string_callback): Add a call to
            gfc_dep_compare_expr.
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * gfortran.dg/pr70673.f90: New test.
    
    From-SVN: r237805

commit ae2c0367741852fdbc8b16d492e91a6cc14e44ab
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Jun 27 20:54:56 2016 +0000

    re PR fortran/70673 (ICE with module containing functions with allocatable character scalars)
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * frontend-passes.c (realloc_string_callback): Add a call to
            gfc_dep_compare_expr.
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * gfortran.dg/pr70673.f90: New test.
    
    From-SVN: r237804

commit c39f4ac558753e77534bbf8193dd416d89352081
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 27 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237795

commit 67cc39ff1130b19d946c846597415e53a4da02a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 26 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237786

commit ff6f9138fdc55bde34ccea753bff2be5a782529f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 25 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237777

commit 71256a433dc22f3852a39647b535fc7bc72bad9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 24 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237751

commit 87cb6531f37cccd2262b16fa2193ce7014e9bb3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 23 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237724

commit 95709a4caa9bd975e8ce268f1563ea73156d4da9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 22 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237673

commit fd8092a96ab2e46ae9f005f4bc745347b8936762
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jun 21 10:43:12 2016 +0000

    backport: re PR target/30417 (Section .data cannot be moved with -mmcu=atmega88)
    
            Backport from 2016-06-21 trunk r237639.
            PR target/30417
            * config/avr/gen-avr-mmcu-specs.c (print_mcu):
            [*link_data_start]: Wrap -Tdata into %{!Tdata:...}.
            [*link_text_start]: Wrap -Ttext into %{!Ttext:...}.
    
    From-SVN: r237641

commit 8f30f3862cfe7de4389c2bc22722dfb1fe3c0125
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jun 21 10:18:26 2016 +0000

    re PR target/71103 (avr-gcc crashes with unrecognizable insn error)
    
            PR target/71103
            * config/avr/avr.md (movqi): Only handle loading subreg:qi of
            constant addresses if can_create_pseudo_p.
    
    From-SVN: r237637

commit 55ce5e80070ef4b3434bba3311224cda94e27e10
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 21 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r237624

commit 9aee1a0dd2d1d49de83071b2079e625c7c85f563
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Jun 20 11:55:11 2016 +0000

    backport: re PR target/71103 (avr-gcc crashes with unrecognizable insn error)
    
    gcc/
            Backport from 2016-06-20 trunk r237589, r236558.
            PR target/71103
            * config/avr/avr.md (movqi): Handle loading subreg:qi (const,
            symbol_ref,label_ref).
    
    gcc/testsuite/
            Backport from 2016-06-20 trunk r237589, r236558.
            PR target/71103
            * gcc.target/avr/pr71103.c: New test.
            * gcc.target/avr/torture/pr71103-2.c: New test.
    
    Co-Authored-By: Pitchumani Sivanupandi <pitchumani.s@atmel.com>
    
    From-SVN: r237593

commit 2ab11ea0ecd66dd8f3dbb320219d07d4752e3cd3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 20 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r237584

commit 5a9c157f5b40576ad18b37e9be4fa321abe18bdb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 19 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237577

commit 88f2f33e16134b1c1ee171b4bb1ecaac3ab37f20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 18 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r237568

commit bfa5790b88e78fc402c0be1c12fcfd248f3de1cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 17 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237545

commit 687117c0604e9c5e74173ee79d9d571fc61d259f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 16 12:38:21 2016 +0200

    re PR target/71554 (Miscompilation of __builtin_mul_overflow on i686)
    
            PR target/71554
            * config/i386/i386.md (setcc + movzbl peephole2): Use reg_set_p.
            (setcc + and peephole2): Likewise.
    
            * gcc.c-torture/execute/pr71554.c: New test.
    
            Backported from mainline
            2015-04-29  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.md (setcc+movzbl peephole2): Check also clobbered
            reg.
            (setcc+andl peephole2): Ditto.
    
    From-SVN: r237520

commit 355019bb52d66a97bffa17ef1bef4a5303a79ba8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 16 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237500

commit de610ca2848eb10a2f3f07dbb5bef08d41bd96fe
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed Jun 15 21:19:08 2016 +0200

    backport: freebsd.h: Only enable unaligned access for armv6 on FreeBSD 11 and above.
    
    2016-06-15  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backported from mainline
        2016-06-14  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/arm/freebsd.h: Only enable unaligned access for armv6 on
        FreeBSD 11 and above.
    
    From-SVN: r237494

commit 704ed208e06d1c3c3c8b264b5d2a4205a8c566e8
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Wed Jun 15 14:43:09 2016 +0000

    David Edelsohn  <dje.gcc@gmail.com>
    
            Backport from mainline
            2016-06-13  David Edelsohn  <dje.gcc@gmail.com>
    
            * inclhack.def (aix_stdlib_malloc): New fix.
            (aix_stdlib_realloc): New fix.
            (aix_stdlib_calloc): New fix.
            (aix_stdlib_valloc): New fix.
            * fixincl.x: Regenerate.
            * tests/base/stdlib.h [AIX_STDLIB_MALLOC]: New test.
            [AIX_STDLIB_REALLOC]: New test.
            [AIX_STDLIB_CALLOC]: New test.
            [AIX_STDLIB_VALLOC]: New test.
    
    From-SVN: r237479

commit 65ac5163fc0acefad2f2eeb7ba5cc75d4920b1eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 15 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r237468

commit 98c75e1f6c21904d06b0ea8a9093e902259b2eb3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 14 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237421

commit 7f1e783b2d4e1904d5694f1ccf62299c94933003
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Jun 13 10:29:35 2016 +0000

    re PR tree-optimization/71505 (-O3 internal compiler error in vect_analyze_data_ref_accesses, at tree-vect-data-refs.c:2596)
    
    2016-06-13  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71505
            * tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Make
            assert match comment.
    
    From-SVN: r237373

commit 5fb1cc7175a201f427b3b56faacbd032009c688a
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Mon Jun 13 08:37:31 2016 +0000

    S/390: Fix MAX_ARGS value.
    
    gcc/ChangeLog:
    
    2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/71379
            * config/s390/s390.c (s390_expand_builtin): Increase MAX_ARGS by
            one.
    
    From-SVN: r237365

commit ab1fbd9be42f2bd8bc207c35b6e9c6d20e083b99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 13 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r237347

commit 241167178d7b5dee82ef0168ba9e891afe996f7e
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Jun 12 20:25:25 2016 +0200

    re PR fortran/60751 (Extra comma in WRITE statement not diagnosed)
    
    2016-06-12  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/60751
            * io.c (gfc_resolve_dt): Replace GFC_STD_GNU with GFC_STD_LEGACY.
    
            * gfortran.dg/comma_IO_extension_1.f90: New test.
            * gfortran.dg/comma_IO_extension_2.f90: Likewise.
            * gfortran.dg/array_constructor_49.f90: Remove extra comma in WRITE
            statement.
            * gfortran.dg/graphite/pr38083.f90: Likewise.
            * gfortran.dg/guality/pr41558.f90: Likewise.
            * gfortran.dg/integer_exponentiation_6.F90: Likewise and add
            missing format.
    
    From-SVN: r237340

commit b33338d1a644e93ed709cf041dd11c1f70276314
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 12 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237334

commit 0ff18176cfd4e02d7c3ef11e305a1bc5643a9b77
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 11 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r237321

commit d5480ae0cd12592c11771474223127b09edd51d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 10 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237283

commit ce9d877e0001168c1f314cd670bc00db98423c89
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 9 00:16:56 2016 +0000

    Daily bump.
    
    From-SVN: r237246

commit f3d5f4fb7e6c6403e14912ee11b45c485b05ed91
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 8 20:05:38 2016 +0200

    re PR c++/71442 (r232569 breaks -Wunused-*)
    
            PR c++/71442
            * pt.c (tsubst_copy): Only set TREE_USED on DECLs.
    
            * g++.dg/cpp0x/Wunused-variable-1.C: New test.
    
    From-SVN: r237234

commit 07c3e9dc1a67b7f77bea348163551eb835589070
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 8 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237192

commit f71b9526b86970fd115c3cd0ab77f93f2206830a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Jun 7 16:51:33 2016 -0500

    backport: invoke.texi (RS/6000 and PowerPC Options): Document -mhtm and -mno-htm.
    
            Backport from mainline
            2016-06-07  Peter Bergner  <bergner@vnet.ibm.com>
    
            * doc/invoke.texi (RS/6000 and PowerPC Options): Document -mhtm and
            -mno-htm.
    
    From-SVN: r237188

commit 15e0956f3ccb9d33a96c7c5efd52e08738dbd3e8
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Jun 7 17:23:42 2016 +0200

    re PR target/71389 (ICE on trunk gcc on ivybridge target (df_refs_verify))
    
            PR target/71389
            * config/i386/i386.c (ix86_avx256_split_vector_move_misalign):
            Copy op1 RTX to avoid invalid sharing.
            (ix86_expand_vector_move_misalign): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/71389
            * g++.dg/pr71389.C: New test.
    
    From-SVN: r237178

commit 658b4b19f27da3fb8c98df1a9453a9c61974aa5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 7 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r237160

commit b576451b8be1855f8e3c7500fea1c34f37a537cc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 6 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237113

commit 3b8b50691c1942c8a859d5c9158c4ba787f8bf8b
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jun 5 17:47:50 2016 +0200

    backport: re PR target/67310 ([PATCH] gcc 4.8.4 fails to compile with -march=native on VIA nano CPU)
    
            Backport from mainline
            2016-06-01  Uros Bizjak  <ubizjak@gmail.com>
                        Jocelyn Mayer  <l_indien@magic.fr>
    
            PR target/67310
            * config/i386/driver-i386.c (host_detect_local_cpu): Correctly
            detect processor family for signature_CENTAUR_ebx.
            <case PROCESSOR_I486>: Pass c3, winchip2 or winchip-c6 for
            signature_CENTAUR_ebx.
            <case PROCESSOR _PENTIUMPRO>: Pass c3-2 for signature_CENTAUR_ebx.
            <default>: Pass x86-64 for has_longmode.
    
    From-SVN: r237100

commit 831edff3414208bf0f1dc987505feaaec37e3fad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r237095

commit b3804b11961af729c1b2be56100e2d8c50eeda6c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 4 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237085

commit 36f82abe0d6c9e702d09ada2ad137a3123c02172
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Jun 3 23:14:17 2016 +0200

    backport: config.gcc: Move hard float support for arm*hf*-*-freebsd* into armv6*-*-freebsd* for...
    
    2016-06-03  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2016-05-30  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: Move hard float support for arm*hf*-*-freebsd* into
        armv6*-*-freebsd* for FreeBSD 11. Eliminate the arm*hf*-*-freebsd*
        target.
    
    From-SVN: r237081

commit 85a9823647e58d434b11782c2758da37bf8eaf50
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Jun 3 09:36:14 2016 +0000

    BASE-VER: Set to 5.4.1.
    
    2016-06-03  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 5.4.1.
    
    From-SVN: r237059

commit c8898526d699174304c71ad2c2f0805bf7e27d93
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Fri Jun 3 08:41:59 2016 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r237056

commit 85e2bf3105bda32b785ea241125ed9561e102564
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 3 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r237048

commit f4ff63a2600444fc3d358d2ded933bbf82d14759
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Jun 2 17:44:59 2016 +0000

    re PR fortran/70350 (ICE with -fcheck=all and array initialization)
    
    2016-06-02  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70350
            Backport from trunk.
            * trans-expr.c (gfc_trans_assignment_1): Exclude initialization
            assignments from check on assignment of scalars to unassigned
            arrays and correct wrong code within the corresponding block.
    
    From-SVN: r237043

commit caade42da637e7855683309b9d5e7b9b17761790
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 2 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r237023

commit 42ce502900d1763f2d9985275db56d675ad2eeef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 1 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r236970

commit 36641e38cb8f6be52072f1d255f1d1735284aacb
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue May 31 21:28:26 2016 +0000

    re PR ada/71317 (Compiling gnat for rtems fails at s-taprop.adb)
    
            * s-osinte-kfreebsd-gnu.ads (clock_getres): Define.
    
            PR ada/71317
            * s-osinte-rtems.ads (clock_getres): Define.
    
    From-SVN: r236949

commit c1f31b340e360cecd4fcc11510e956b93b42d6d3
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue May 31 11:23:59 2016 +0000

    [AArch64] PR target/68696 FAIL: gcc.target/aarch64/vbslq_u64_1.c scan-assembler-times bif\tv 1
    
            PR target/68696
            * config/aarch64/aarch64-simd.md (*aarch64_simd_bsl<mode>_alt):
            New pattern.
            (aarch64_simd_bsl<mode>_internal): Update comment to reflect
            the above.
    
    From-SVN: r236918

commit 422214005a807ca199aa9fd0dd77904437cb6f2e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 31 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r236904

commit a1c9dd9b54764ed0e268451b9f20a7c5962f98d0
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Mon May 30 11:26:09 2016 +0200

    backport: re PR sanitizer/68042 (c-c++-common/asan/(memcmp-1.c|sanity-check-pure-c-1.c) failures on x86_64-apple-darwin14 after r229111)
    
    2016-05-30  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from trunk.
            2015-10-23  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>
    
            PR sanitizer/68042
            * c-c++-common/asan/sanity-check-pure-c-1.c: Adjust test
            to pass on Darwin.
    
    From-SVN: r236873

commit bd4fd2e460e9eeca874652bbaebffe859875029b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 30 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r236865

commit f566b6b4c5246a28f82977e9e7e9fbacf43d6043
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 29 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r236855

commit 41b30a254c3a656b6761469ee1bf8a9fa4e9219c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 28 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236840

commit 1bb5eb81284314564ea17c3e911ca864eb65a1cf
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri May 27 03:17:03 2016 +0000

    backport: re PR fortran/66461 (ICE on missing end program in fixed source)
    
    2016-05-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/66461
            * scanner.c (gfc_next_char_literal): Clear end_flag when adjusting
            current locus back to old_locus.
    
            Backport from trunk.
            PR fortran/66461
            * gfortran.dg/unexpected_eof.f: New test.
    
    From-SVN: r236807

commit f14a514e34a7f1fe3c5cd55b5276f380256b4d8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 27 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r236802

commit 5e652dbf9be9523c13799452324b8c8490b52dfa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 26 18:33:17 2016 +0100

    libstdc++/70762 fix fallback implementation of nonexistent_path
    
    Backport from mainline
    2016-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70762
            * testsuite/util/testsuite_fs.h (__gnu_test::nonexistent_path): Use
            static counter to return a different path on every call.
    
    From-SVN: r236788

commit c54d8841d5c03c88270a6f84777a3bd7fba19874
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 26 16:26:41 2016 +0100

    Add dg-require-filesystem-ts directive to test
    
            * testsuite/experimental/filesystem/path/native/string.cc: Add
            dg-require-filesystem-ts directive.
    
    From-SVN: r236778

commit b3a41829900265e7bbd4305464cc6aa523b3b231
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 26 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236759

commit 4d82561eeed5e6d5e6a4612d8ae013d3d765c594
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 17:41:42 2016 +0100

    libstdc++/69703 ignore endianness in codecvt_utf8
    
    Backport from mainline
    2016-04-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69703
            * src/c++11/codecvt.cc (__codecvt_utf8_base<char16_t>::do_in,
            __codecvt_utf8_utf16_base<char16_t>::do_in): Fix mask operations.
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69703
            * src/c++11/codecvt.cc (__codecvt_utf8_base<char16_t>::do_in)):
            Override endianness bit in mode.
            * testsuite/22_locale/codecvt/codecvt_utf8/69703.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/66855.cc: Test
            that little_endian mode is ignored.
            * testsuite/experimental/filesystem/path/native/string.cc: New test.
    
    From-SVN: r236734

commit 3a54601da763076f6851026e6e562d6e26e940cc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:43:17 2016 +0100

    Test begin and end functions for directory iterators
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_dir.h (begin, end): Add noexcept.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Test begin and end functions.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Likewise.
    
    From-SVN: r236718

commit 2218243ebd239ee565ecfaaa5d20716533cc83a5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:43:12 2016 +0100

    libstdc++/71038 fix error checks in filesystem::copy_file
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71038
            * src/filesystem/ops.cc (do_copy_file): Fix backwards conditions.
            * testsuite/experimental/filesystem/operations/copy_file.cc: New test.
    
    From-SVN: r236717

commit 515e1860d3d1660e7d6f31a02f4b55d4e85f8514
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:43:06 2016 +0100

    Optimize __directory_iterator_proxy for the common case
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_dir.h (__directory_iterator_proxy):
            Overload operator* to move from rvalues.
    
    From-SVN: r236716

commit d67dba4a9645daf1d479e15322ed5b6f80b2db5c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:43:02 2016 +0100

    libstdc++/71036 Handle EEXIST in filesystem::create_directory
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71036
            * src/filesystem/ops.cc (create_dir): Handle EEXIST from mkdir.
            * testsuite/experimental/filesystem/operations/create_directory.cc:
            New test.
    
    From-SVN: r236715

commit aecaeabf8d7ed0de0add432346b62ca8d361e59c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:42:57 2016 +0100

    libstdc++/71037 Add base path to filesystem::canonical exceptions
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71037
            * src/filesystem/ops.cc (canonical(const path&, const path&)): Add
            base path to exception.
            * testsuite/experimental/filesystem/operations/canonical.cc: Test
            paths contained in exception.
    
    From-SVN: r236714

commit 47cc02ad782f5d3fb3e5985856f2b248b6d3cff0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:42:51 2016 +0100

    libstdc++/71005 fix post-increment for filesystem iterators
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71005
            * include/experimental/bits/fs_dir.h (__directory_iterator_proxy):
            New type.
            (directory_iterator::operator++(int)): Return proxy.
            (recursive_directory_iterator::operator++(int)): Likewise.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Test post-increment.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Likewise.
    
    From-SVN: r236713

commit 5ac1c1969fc15e2c3a99fde735ceeff1e7960597
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:42:45 2016 +0100

    libstdc++/71004 fix recursive_directory_iterator default constructor
    
    Backport from mainline
    2016-05-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71004
            * include/experimental/bits/fs_dir.h (recursive_directory_iterator):
            Initialize scalar member variables in default constructor.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Test default construction.
    
    From-SVN: r236712

commit 8a1d215a4a91e18704d1c5f884c4bbce7658cb68
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:42:40 2016 +0100

    libstdc++/70609 fix filesystem::copy()
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70609
            * src/filesystem/ops.cc (close_fd): New function.
            (do_copy_file): Set permissions before copying file contents. Check
            result of closing file descriptors. Don't copy streambuf when file
            is empty.
            (copy(const path&, const path&, copy_options, error_code&)): Use
            lstat for source file when copy_symlinks is set.
            * testsuite/experimental/filesystem/operations/copy.cc: Test copy().
    
    From-SVN: r236711

commit 3b6a1ea62e17a7e3a4c9fb2c87d677f84b31ea64
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:42:35 2016 +0100

    Add noexcept to Filesystem TS operators
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_fwd.h (operator&, operator|, operator^,
            operator~ operator&=, operator|=, operator^=): Add noexcept to
            overloaded operators for copy_options, perms and directory_options.
            * src/filesystem/ops.cc (make_file_type, make_file_status,
            is_not_found_errno, file_time): Add noexcept.
    
    From-SVN: r236710

commit 49001010f4bcdc08b4a12c466bed4648330dddf2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 25 10:08:08 2016 +0200

    i386.h (TARGET_AVOID_4BYTE_PREFIXES): Define.
    
            * config/i386/i386.h (TARGET_AVOID_4BYTE_PREFIXES): Define.
            * config/i386/constraints.md (Yr): Test TARGET_AVOID_4BYTE_PREFIXES
            rather than X86_TUNE_AVOID_4BYTE_PREFIXES.  Use SSE_REGS instead
            of ALL_SSE_REGS.  Return SSE_REGS also when TARGET_AVX.
    
    From-SVN: r236692

commit 1d1b027c079b1c6d5d82b93e7f3fb7944f58fa1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 25 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236687

commit 2d3f51b070f97b1935f63a5fb3d3138fdde1eec0
Author: Richard Biener <rguenther@suse.de>
Date:   Tue May 24 10:47:40 2016 +0000

    re PR testsuite/71254 ([AArch64] ICE after backport of fix for PR 67278)
    
    2016-05-24  Richard Biener  <rguenther@suse.de>
    
            PR testsuite/71254
            * gcc.dg/simd-7.c: Compile on x86_64 and i?86 only.
    
    From-SVN: r236633

commit 09bef4589de49bfa5ea9bb904cd71ecf71e434fe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 24 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236621

commit ad2162e3e4659985b85e36f7f89092e465332f03
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon May 23 17:03:08 2016 +0200

    [PR libffi/65567] libffi: Fix, and simply libffi_feature_test
    
    Backport trunk r236594:
    
            libffi/
            PR libffi/65567
            * testsuite/lib/libffi.exp (libffi_feature_test): Fix, and simply.
    
    From-SVN: r236596

commit 23a074950221aba0bf8d22b466b44616df10e751
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 23 12:51:29 2016 +0000

    Backport PRs 68142, 69634, 69845, 70347
    
    2016-05-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-11  Alexandre Oliva  <aoliva@redhat.com>
    
            PR target/69634
            * regstat.c (regstat_bb_compute_calls_crossed): Disregard
            debug insns.
    
            * gcc.dg/pr69634.c: New.
    
            2016-03-23  Patrick Palka  <ppalka@gcc.gnu.org>
    
            PR c++/70347
            * typeck.c (process_init_constructor_union): If the initializer
            is empty, use the union's NSDMI if it has one.
    
            * g++.dg/cpp1y/nsdmi-union1.C: New test.
    
            2015-10-30  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68142
            * fold-const.c (extract_muldiv_1): Avoid introducing undefined
            overflow.
    
            * c-c++-common/ubsan/pr68142.c: New testcase.
    
            2016-03-24  Richard Henderson  <rth@redhat.com>
    
            PR middle-end/69845
            * fold-const.c (extract_muldiv_1): Correct test for multiplication
            overflow.
    
            * gcc.dg/tree-ssa/pr69845-1.c: New test.
            * gcc.dg/tree-ssa/pr69845-2.c: New test.
    
    From-SVN: r236588

commit 88c63e01a2f3fe9004476d05fd344003177a2ced
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 23 10:41:35 2016 +0000

    Backport PRs 66487, 68814, 69003, 69239, 69252
    
    2016-05-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-12-11  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/68814
            * rtlanal.c (set_noop_p): Use BITS_BIG_ENDIAN instead of
            BYTES_BIG_ENDIAN.
    
            2016-01-12  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/69003
            * lto-partition.c (rename_statics): Fix pasto.
    
            2016-01-13  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/66487
            * ipa-polymorphic-call.c (inlined_polymorphic_ctor_dtor_block_p):
            use block_ultimate_origin
            (noncall-stmt_may_be_vtbl_ptr_store): Likewise.
    
            2016-02-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/69239
            * g++.dg/ipa/pr69239.C: New test.
    
            2016-01-21  Roman Zhuykov  <zhroma@ispras.ru>
    
            PR target/69252
            * modulo-sched.c (optimize_sc): Allow branch-scheduling to add a new
            first stage.
    
            2016-01-21  Martin Sebor  <msebor@redhat.com>
    
            PR target/69252
            * gcc.target/powerpc/pr69252.c: New test.
    
    From-SVN: r236583

commit 16e7200a3a42d38c43c1051501ab708ecd6bd836
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 23 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r236573

commit 9085a2abb8a2384bfbf4fce8c7d7aed2d1f6b417
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 22 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236561

commit 02329b71adbe3b8744df371fbd7a98327ee61ad7
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Sat May 21 08:35:25 2016 +0000

    @@ -1,3 +1,22 @@
    2016-05-21  Iain Sandoe  <iain@codesourcery.com>
                Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from mainline
            2015-12-17  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            gcc:
            PR target/67973
            * configure.ac (gcc_cv_as_stabs_directive): New test.
            * configure: Regenerate.
            * config.in: Regenerate.
            * config/darwin.h (DBX_DEBUGGING_INFO): Wrap in
            HAVE_AS_STABS_DIRECTIVE.
            (PREFERRED_DEBUGGING_TYPE): Likewise.
            * config/i386/darwin.h (PREFERRED_DEBUGGING_TYPE): Only include
            DBX_DEBUG if HAVE_AS_STABS_DIRECTIVE.
    
            * doc/sourcebuild.texi (Effective-Target Keywords, Environment
            attributes): Document stabs.
    
            gcc/testsuite:
            PR target/67973
    
            * lib/target-supports.exp (check_effective_target_stabs): New proc.
            * g++.dg/cpp0x/alias-decl-debug-0.C: Restrict to stabs targets.
            * g++.dg/other/PR23205.C: Likewise.
            * g++.dg/other/pr23205-2.C: Likewise.
            * gcc.dg/20040813-1.c: Likewise.
            * gcc.dg/darwin-20040809-2.c: Likewise.
            * objc.dg/stabs-1.m: Likewise.
    
    
    Co-Authored-By: Dominique d'Humieres <dominiq@lps.ens.fr>
    
    From-SVN: r236556

commit faee23a53be08ce777bdec7185c8053eb71b5a4d
Author: Chung-Lin Tang <cltang@codesourcery.com>
Date:   Sat May 21 08:26:11 2016 +0000

    backport: nios2.c (nios2_delegitimize_address): Make assert less restrictive.
    
    2016-05-21  Chung-Lin Tang  <cltang@codesourcery.com>
    
            Backport from mainline
            2015-06-29  Sandra Loosemore  <sandra@codesourcery.com>
    
            * config/nios2/nios2.c (nios2_delegitimize_address): Make
            assert less restrictive.
    
    From-SVN: r236555

commit 1388b2a0e3beb44db5a45e0a51b7fa63a4a3310d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 21 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r236551

commit dc0c17c8d0aaefb7f6f86c71226f90cbea5a414d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 20 20:50:45 2016 +0000

    arm.c (arm_expand_prologue): Set the stack usage to 0 for naked functions.
    
            * config/arm/arm.c (arm_expand_prologue): Set the stack usage to 0
            for naked functions.
            (thumb1_expand_prologue): Likewise.
    
    From-SVN: r236541

commit 267500fd392206552521c94c76c5a46e2a646cf3
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Fri May 20 19:09:59 2016 +0000

    re PR c++/70466 ([ICE on invalid code in tree check: expected constructor, have parm_decl in convert_like_real, at cp/call.c:6371 with -std=c++11)
    
    /cp
    2016-05-20  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70466
            * call.c (convert_like_real): Check that we are actually converting
            from an init list.
    
    /testsuite
    2016-05-20  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70466
            * g++.dg/template/pr70466-1.C: New.
            * g++.dg/template/pr70466-2.C: Likewise.
    
    From-SVN: r236530

commit 67caa92045cfb3be2ad7d484c5d33cd9d43f57d3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 20 21:00:54 2016 +0200

    re PR fortran/71204 (ICE with -O0 in expand_expr_real_1, at expr.c:9651)
    
            PR fortran/71204
            * frontend-passes.c (realloc_string_callback): Clear inserted_block
            and changed_statement before calling create_var.
    
            * gfortran.dg/pr71204.f90: New test.
    
    From-SVN: r236528

commit 8902556d25b1f7e150431bd6e61c363fac201df2
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri May 20 17:40:45 2016 +0200

    sched-deps.c (sched_analyze_2): Also force pending loads from memory.
    
            * sched-deps.c (sched_analyze_2) <case TRAP_IF>: Also
            force pending loads from memory.
    
    From-SVN: r236517

commit 77e4d5ead8e25c402ace30ca52d66190a512bc08
Author: Richard Biener <rguenther@suse.de>
Date:   Fri May 20 13:24:29 2016 +0000

    backport: [multiple changes]
    
    2016-05-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-03-02  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/67278
            * tree-cfg.c (verify_expr): Adjust BIT_FIELD_REF case.
    
            * gcc.dg/simd-7.c: New testcase.
    
            2016-03-02  Richard Biener  <rguenther@suse.de>
                    Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/67278
            * config/i386/i386.c (type_natural_mode): Handle XFmode vectors.
    
            * gcc.dg/simd-8.c: New testcase.
    
            2016-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/67278
            * gcc.dg/simd-7.c: Add -w -Wno-psabi to dg-options.
    
            PR target/67278
            * gcc.dg/simd-8.c: Add -w -Wno-psabi to dg-options.
    
    From-SVN: r236512

commit 24db0334c96e135943feea37d9951158a4b2287c
Author: Richard Biener <rguenther@suse.de>
Date:   Fri May 20 13:03:19 2016 +0000

    backport: re PR tree-optimization/69720 (wrong code at -O3 on x86_64-linux-gnu)
    
    2016-05-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-29  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69720
            * tree-vect-loop.c (get_initial_def_for_reduction): Avoid
            the adjustment_def path for possibly vectorized defs.
            (vect_create_epilog_for_reduction): Handle vectorized initial
            defs properly.
    
            * gcc.dg/vect/vect-outer-pr69720.c: New testcase.
    
    From-SVN: r236510

commit b43ef71e39f105930b8bda1045f75149b846a781
Author: Richard Biener <rguenther@suse.de>
Date:   Fri May 20 08:51:06 2016 +0000

    Backport PRs 67921, 70623, 70780, 70931, 70941
    
    2016-05-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-01  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/67921
            * fold-const.c (split_tree): New parameters.  Convert pointer
            type variable part to proper type before negating.
            (fold_binary_loc): Pass new arguments to split_tree.
    
            * c-c++-common/ubsan/pr67921.c: New test.
    
            2016-05-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70941
            * fold-const.c (split_tree): Always convert to the original type
            before negating.
    
            * gcc.dg/torture/pr70941.c: New testcase.
    
            2016-05-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/70941
            * gcc.dg/torture/pr70941.c (abort): Remove prototype.
            (a, b, c, d): Change type from char to signed char.
            (main): Compare against (signed char) -1634678893 instead of
            hardcoded -109.  Use __builtin_abort instead of abort.
    
            2016-05-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70931
            * dwarf2out.c (native_encode_initializer): Skip zero-sized fields.
    
            * gfortran.dg/pr70931.f90: New testcase.
    
            2016-04-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70623
            * tree-ssa-pre.c (changed_blocks): Make global ...
            (compute_antic): ... local here.  Move and fix worklist
            handling here.  Do not clear EDGE_DFS_BACK.
            (compute_antic_aux): Add dumping for MAX assumed succs.  Remove
            worklist handling, dump when ANTIC_IN changed.
            (compute_partial_antic_aux): Remove worklist handling.
            (init_pre): Do not compute post dominators.  Add a comment about
            the CFG order chosen.
            (fini_pre): Do not free post dominators.
    
            * gcc.dg/torture/pr70623.c: New testcase.
            * gcc.dg/torture/pr70623-2.c: Likewise.
    
            2016-04-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70780
            * tree-ssa-pre.c (compute_antic_aux): Also return true if the block
            wasn't visited yet.
            (compute_antic): Mark blocks with abnormal preds as visited as
            they have a final empty antic-in solution already.
    
            * gcc.dg/torture/pr70780.c: New testcase.
    
    From-SVN: r236497

commit a88cc6a1e63f9203325cf398e096174ea77c267d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 20 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r236493

commit d0aaf2a1c082d661c5dcff1e23233c79618453bb
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 19 17:10:50 2016 +0200

    Respect --param ipa-max-agg-items=0
    
    2016-05-19  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/70646
            * ipa-prop.c (determine_locally_known_aggregate_parts): Bail out early
            if parameter PARAM_IPA_MAX_AGG_ITEMS is zero.
    
    From-SVN: r236474

commit 34c9dd0bd40c61295c78ccb92ab125630c91c46c
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 19 17:09:21 2016 +0200

    [PR 70646] Store size to inlining predicate conditions
    
    2016-05-19  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/70646
            * ipa-inline.h (condition): New field size.
            * ipa-inline-analysis.c (add_condition): New parameter SIZE, use it
            for comaprison and store it into the new condition.
            (evaluate_conditions_for_known_args): Use condition size to check
            access sizes for all but CHANGED conditions.
            (unmodified_parm_1): New parameter size_p, store access size into it.
            (unmodified_parm): Likewise.
            (unmodified_parm_or_parm_agg_item): Likewise.
            (eliminated_by_inlining_prob): Pass NULL to unmodified_parm as size_p.
            (set_cond_stmt_execution_predicate): Extract access sizes and store
            them to conditions.
            (set_switch_stmt_execution_predicate): Likewise.
            (will_be_nonconstant_expr_predicate): Likewise.
            (will_be_nonconstant_predicate): Likewise.
            (inline_read_section): Stream condition size.
            (inline_write_summary): Likewise.
            * lto-streamer.h (LTO_minor_version): Bump.
    
    testsuite/
            * gcc.dg/ipa/pr70646.c: New test.
    
    From-SVN: r236473

commit 143719d8b582fec3904a56da23f28cee886f0ae4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu May 19 12:44:31 2016 +0200

    Backport PRs 67394, 69687, 70481, 70492, 70498
    
            Backported from mainline
            2016-05-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/70498
            * cp-demangle.c (d_expression_1): Formatting fix.
    
            2016-05-02  Marcel Böhme  <boehme.marcel@gmail.com>
    
            PR c++/70498
            * cp-demangle.c: Parse numbers as integer instead of long to avoid
            overflow after sanity checks. Include <limits.h> if available.
            (INT_MAX): Define if necessary.
            (d_make_template_param): Takes integer argument instead of long.
            (d_make_function_param): Likewise.
            (d_append_num): Likewise.
            (d_identifier): Likewise.
            (d_number): Parse as and return integer.
            (d_compact_number): Handle overflow.
            (d_source_name): Change variable type to integer for parsed number.
            (d_java_resource): Likewise.
            (d_special_name): Likewise.
            (d_discriminator): Likewise.
            (d_unnamed_type): Likewise.
            * testsuite/demangle-expected: Add regression test cases.
    
            2016-04-08  Marcel Böhme  <boehme.marcel@gmail.com>
    
            PR c++/69687
            * cplus-dem.c: Include <limits.h> if available.
            (INT_MAX): Define if necessary.
            (remember_type, remember_Ktype, register_Btype, string_need):
            Abort if we detect cases where we the size of the allocation would
            overflow.
    
            PR c++/70492
            * cplus-dem.c (gnu_special): Handle case where consume_count returns
            -1.
    
            2016-03-31  Mikhail Maltsev  <maltsevm@gmail.com>
                        Marcel Bohme  <boehme.marcel@gmail.com>
    
            PR c++/67394
            PR c++/70481
            * cplus-dem.c (squangle_mop_up): Zero bsize/ksize after freeing
            btypevec/ktypevec.
            * testsuite/demangle-expected: Add coverage tests.
    
    From-SVN: r236452

commit 164bbc0d3b9683ad8a9126baaf17cb5ac0fb072b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu May 19 12:40:57 2016 +0200

    backport: re PR other/61321 (demangler crash on casts in template parameters)
    
            Backported from mainline
            2015-11-27  Pedro Alves  <palves@redhat.com>
    
            PR other/61321
            PR other/61233
            * demangle.h (enum demangle_component_type)
            <DEMANGLE_COMPONENT_CONVERSION>: New value.
    
            * cp-demangle.c (d_demangle_callback, d_make_comp): Handle
            DEMANGLE_COMPONENT_CONVERSION.
            (is_ctor_dtor_or_conversion): Handle DEMANGLE_COMPONENT_CONVERSION
            instead of DEMANGLE_COMPONENT_CAST.
            (d_operator_name): Return a DEMANGLE_COMPONENT_CONVERSION
            component if handling a conversion.
            (d_count_templates_scopes, d_print_comp_inner): Handle
            DEMANGLE_COMPONENT_CONVERSION.
            (d_print_comp_inner): Handle DEMANGLE_COMPONENT_CONVERSION instead
            of DEMANGLE_COMPONENT_CAST.
            (d_print_cast): Rename as ...
            (d_print_conversion): ... this.  Adjust comments.
            (d_print_cast): Rewrite - simply print the left subcomponent.
            * cp-demint.c (cplus_demangle_fill_component): Handle
            DEMANGLE_COMPONENT_CONVERSION.
    
            * testsuite/demangle-expected: Add tests.
    
    From-SVN: r236451

commit b9a5c52ec7193c3269712453d93f4a4c79a3db32
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Thu May 19 12:39:16 2016 +0200

    cp-demangle.c (d_dump): Fix syntax error.
    
            * cp-demangle.c (d_dump): Fix syntax error.
            (d_identifier): Adjust type of len to match d_source_name.
            (d_expression_1): Fix out-of-bounds access.  Check code variable for
            NULL before dereferencing it.
            (d_find_pack): Do not recurse for FIXED_TYPE, DEFAULT_ARG and NUMBER.
            (d_print_comp_inner): Add NULL pointer check.
            * testsuite/demangle-expected: Add new testcases.
    
    From-SVN: r236450

commit d3797c3f9db091363764e4ef840a4d39657ce003
Author: Richard Sandiford <richard.sandiford@arm.com>
Date:   Thu May 19 08:38:23 2016 +0000

    PR 69400: Invalid 128-bit modulus result
    
    Backport from mainline:
    
    gcc/
    2016-01-26  Richard Sandiford  <richard.sandiford@arm.com>
    
            PR tree-optimization/69400
            * wide-int.cc (wi_pack): Take the precision as argument and
            perform canonicalization here rather than in the callers.
            Use the main loop to handle all full-width HWIs.  Add a
            zero HWI if in_len isn't a full result.
            (wi::divmod_internal): Update accordingly.
            (wi::mul_internal): Likewise.  Simplify.
    
    gcc/testsuite/
    2016-01-26  Richard Sandiford  <richard.sandiford@arm.com>
    
            PR tree-optimization/69400
            * gcc.dg/plugin/wide-int_plugin.c (test_wide_int_mod_trunc): New
            function.
            (plugin_init): Call it.
            * gcc.dg/torture/pr69400.c: New test.
    
    From-SVN: r236444

commit d7646ad95debc42674a3cb2e4a8d1129740b61bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 19 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236436

commit 4b55f936e31bf79cbed4212fcf1212c58d6c20d4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 18 23:28:49 2016 +0200

    backport: re PR sanitizer/71160 (libasan: Backport support for malloc within dlsym)
    
            Backported from mainline
            2016-05-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/71160
            * asan/asan_malloc_linux.cc: Cherry pick upstream r254395
            and r269633.
    
    From-SVN: r236433

commit 2b76b57236afbbd3eb7c1b8543c13619e8f0f140
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 18 21:41:34 2016 +0200

    re PR target/71145 (Alpha: Error: No lda !gpdisp!278 was found)
    
            PR target/71145
            * config/alpha/alpha.md (trap): Add (use (reg:DI 29)).
            (*exception_receiver_1): Return "#" for TARGET_EXPLICIT_RELOCS.
    
    From-SVN: r236426

commit 444caa93d07379cc764416e222ac06bed2c1badb
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 18 11:59:19 2016 -0400

    PR c++/70505 - partial instantiation of template-id
    
            * pt.c (tsubst_baselink): Give the new TEMPLATE_ID_EXPR
            unknown_type_node, too.
    
    From-SVN: r236411

commit 6ec15d083ad623221bdbb64e98a12ea3ad2183ed
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 18 11:59:13 2016 -0400

    PR c++/70494 - lambda capture of array
    
            * decl.c (cxx_maybe_build_cleanup): Handle non-decls.
            * typeck2.c (split_nonconstant_init_1): Use it.
    
    From-SVN: r236410

commit 9463e8870e77cde0f9136876e06cf779c4a104f3
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 18 11:59:05 2016 -0400

    PR c++/70648 - constexpr empty list-initialization
    
            * constexpr.c (cxx_eval_store_expression): Also copy
            CONSTRUCTOR_NO_IMPLICIT_ZERO.
    
    From-SVN: r236409

commit 765829d9e0a784a8dd56b7517d30c4b0b18f238f
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Wed May 18 11:59:00 2016 -0400

    PR c++/70353 - __func__ and constexpr
    
    gcc/
            * tree-inline.c (remap_decls): Don't add_local_decl if
            cfun is null.
    gcc/cp/
            * decl.c (make_rtl_for_nonlocal_decl): Don't defer local statics
            in constexpr functions.
    
    From-SVN: r236408

commit 959b8346a371e60b1d19d4378d6d576b63aa4ca8
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 18 11:58:54 2016 -0400

    PR c++/70095 - variable template partial specialization
    
            * pt.c (instantiate_decl): Fix call to variable_template_p.
    
    From-SVN: r236407

commit bd4a0d068584743e40ad0651e218ddfbefd10072
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Wed May 18 11:58:49 2016 -0400

    Fix constexpr handling of SAVE_EXPR in loops.
    
            * constexpr.c (struct constexpr_ctx): Add save_exprs field.
            (cxx_eval_loop_expr): Discard SAVE_EXPR values before looping.
            (cxx_eval_constant_expression) [SAVE_EXPR]: Add it to the set.
            (cxx_eval_outermost_constant_expr, is_sub_constant_expr): Initialize.
    
    From-SVN: r236406

commit 7c7bf2f86e5b9de752530a778909c11a596ed40a
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 18 11:58:42 2016 -0400

    * method.c (synthesized_method_walk): operator= can also be constexpr.
    
    From-SVN: r236405

commit 9354014403197ec39ccf3aa1f90ed846596ba135
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 18 17:45:08 2016 +0200

    re PR target/71161 (Lots of ASAN and libgo runtime FAILs after r236090)
    
            PR target/71161
            * elf.c (phdr_callback) [__i386__]: Add
            __attribute__((__force_align_arg_pointer__)).
    
    From-SVN: r236404

commit 1f29c13643a4675429667f8567f7c9095964887a
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed May 18 12:53:32 2016 +0000

    [AArch64] PR target/70809: Delete aarch64_vmls<mode> pattern
    
    2016-05-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            Backport from mainline
            2016-05-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70809
            * config/aarch64/aarch64-simd.md (aarch64_vmls<mode>): Delete.
    
            * gcc.target/aarch64/pr70809_1.c: New test.
    
    From-SVN: r236386

commit 3c65a10977e3488a89bc041a973a50e84f505dd0
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Wed May 18 12:41:07 2016 +0000

    backport: tail_indirect_call_1.c: Scan for "br\t", "blr\t" and switch to scan-assembler-times.
    
            Backport from mainline r236377.
            2016-05-18  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.target/aarch64/tail_indirect_call_1.c: Scan for "br\t",
            "blr\t" and switch to scan-assembler-times.
    
    From-SVN: r236379

commit df69d3a49b5a0b6646e67037d9cc0d3e32f9db94
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 18 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r236352

commit 19a44fdf12a23d227e36c4dc0df98a0ed747aa7e
Author: Jim Wilson <jim.wilson@linaro.org>
Date:   Tue May 17 18:42:16 2016 +0000

    Make -fabi-version docs match the implementation.
    
            gcc/
            PR c++/70613
            * doc/invoke.texi (-fabi-version): Document version 9.
            (-Wabi): Document version 9.  Mention version 8 is default for GCC 5.1.
    
    From-SVN: r236339

commit f2f52d57ecc53dcd707b6fea751944e18459ce92
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 17 06:17:53 2016 +0000

    [RTEMS] Fix moxie libgcc support
    
    libgcc/
    
            PR libgcc/70720
            * config.host (moxie-*-rtems*): Merge this stanza with other moxie
            targets so the same extra_parts are built.  Also have tmake_file add
            on to its value rather than override.
    
    From-SVN: r236308

commit f8d4d15bd519cdf85ac2424fac76dde23c556e18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 17 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r236303

commit 9bc49139d3b21b6a843c28b16c5ec310a88d397c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 16 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236261

commit 3e0f82f1f996b7f0019244cbaafb234dd2210635
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun May 15 21:52:15 2016 +0000

    backport: pr70963.c: Require at least power8 at both compile and run time.
    
    2016-05-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/pr70963.c: Require at least power8 at both
            compile and run time.
    
    From-SVN: r236258

commit 3a468ef142eaf975be4178880ecfa1975a355ef7
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun May 15 21:01:50 2016 +0000

    re PR fortran/69603 (ICE: segfault with -fimplicit-none and proc_ptr_comp_24.f90)
    
    2016-05-15  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69603
            * interface.c (compare_parameter): Check for non-NULL pointer.
    
    2016-05-15  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69603
            * gfortran.dg/pr69603.f90: New testcase.
    
    From-SVN: r236256

commit 528f9920908b7eb8a1d1d3e834ba35bc73769615
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 15 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236246

commit d9d74b3c8938cc67243abd14d145e14a6dbfa170
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 14 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236235

commit 328298983899c6c0c5c3d3b9897dad21feac00a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 13 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236187

commit 2cab65c22136c61d03175a368dfaa1e977bc219b
Author: Martin Liska <mliska@suse.cz>
Date:   Thu May 12 16:33:58 2016 +0200

    Handle memory leak in tree-inline.c.
    
            Backport from mainline
            2016-05-10  Martin Liska  <mliska@suse.cz>
    
            * tree-inline.c (remap_dependence_clique): Do not remap
            debugging statements.
    
    From-SVN: r236178

commit 3156cce875c32b70813fdb46f882cff27a04cea6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 12 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r236150

commit 1a53e308f7285345b1c1670d697aa0fd0e6beeb9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 11 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r236108

commit 01dff59203e598fb9f2eb7d39f4d2e2e7b04c964
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue May 10 16:07:04 2016 +0000

    backport: re PR target/70963 (vec_cts/vec_ctf intrinsics produce wrong results for 64-bit floating point)
    
    [gcc]
    
    2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/70963
            * config/rs6000/vsx.md (vsx_xvcvdpsxds_scale): Generate correct
            code for a zero scale factor.
            (vsx_xvcvdpuxds_scale): Likewise.
    
    [gcc/testsuite]
    
    2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/70963
            * gcc.target/powerpc/pr70963.c: New.
    
    From-SVN: r236089

commit 135b98a388b04d2f9cb2b15a35e65206de66fedf
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue May 10 09:03:20 2016 +0000

    S/390: Disable scalar vector instructions with -mno-vx.
    
    Although the scalar variants of the vector instructions aren't
    actually vector instructions they are still executed in the vector
    facility and therefore need to be disabled when disabling the facility
    with -mno-vx.
    
    Fixed with the attached patch.  Committed to head, GCC 6, and GCC 5
    branches.
    
    gcc/ChangeLog:
    
    2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.md ("*vec_cmp<insn_cmp>df_cconly")
            ("*fixuns_truncdfdi2_z13")
            ("*fixuns_trunc<FP:mode><GPR:mode>2_z196")
            ("*fix_truncdfdi2_bfp_z13", "*floatunsdidf2_z13")
            ("*extendsfdf2_z13"): Replace TARGET_Z13 with TARGET_VX.
    
    From-SVN: r236069

commit 614dabe75be2f3766ff1fb975a70ca83f3b541b5
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 10 06:58:22 2016 +0000

    [libatomic] Add RTEMS support
    
    gcc/
    
            * config/rtems.h (LIB_SPEC): Add -latomic.
    
    libatomic/
    
            * configure.tgt (configure_tgt_pre_target_cpu_XCFLAGS): New variable.
            (*-*-rtems*): New supported target.
            * config/rtems/host-config.h: New file.
            * config/rtems/lock.c: Likewise.
    
    From-SVN: r236061

commit 3ea23b5c4c9bead10bc8460c2b27765514421458
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 10 06:40:35 2016 +0000

    [RTEMS] Redefine microblaze LINK_SPEC
    
    gcc/
    
            * config/microblaze/rtems.h: Redefine LINK_SPEC to avoid
            xilink.ld and flags not relevant to RTEMS.
    
    From-SVN: r236059

commit f33e82d38e29a5ca3386b6ba1ba8e7ecb0b79639
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 10 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236054

commit 2e2ad96d6cb639f7ede76a2f2eb3303c452eaf8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 9 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236015

commit adced628b11a3e2e34ba8845a44967641ae15854
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Sun May 8 11:45:03 2016 +0000

    Compile libcilkrts with -funwind-tables (PR target/60290)
    
            Backport from mainline
            2016-04-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/60290
            * Makefile.am (GENERAL_FLAGS): Add -funwind-tables.
            * Makefile.in: Regenerate.
    
    From-SVN: r236006

commit 9d25379383455dfca9521b7bbbc827556a2f4190
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 8 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r236001

commit 851dcc2d8191ca8dfa2e85e72795fe3c28abf40f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 7 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r235990

commit 3e4ac2f3d742b0704d7ec98825e56465ea3266a8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 6 09:12:09 2016 +0000

    re PR ada/70969 (bootstrap failure: s-unstyp.ads:40:15: violation of No_Elaboration_Code_All at line 42)
    
            PR ada/70969
            * system-darwin-ppc64.ads: Add pragma No_Elaboration_Code_All.
            * system-linux-armeb.ads: Likewise.
            * system-linux-mips64el.ads: Likewise.
            * system-linux-mips.ads: Likewise.
            * system-linux-mipsel.ads: Likewise.
            * system-linux-ppc64.ads: Likewise.
            * system-linux-sparcv9.ads: Likewise.
            * system-rtems.ads: Likewise.
    
    From-SVN: r235948

commit 8e896e0c9909be5c045310007f5a55ea492741a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 6 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r235938

commit e4dc3d6ffcc2a7032a1630e5328752da42366fc8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 5 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r235916

commit 6b1f6b335722bd66792805359fdb1105897e72e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 4 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235854

commit 7ca234f886203d3eb14a34fce6c96e6c66feb2cc
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Tue May 3 21:44:04 2016 +0000

    re PR c++/70635 (ICE on (and rejects) valid code on x86_64-linux-gnu: Segmentation fault (program cc1plus))
    
    /cp
    2016-05-03  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70635
            * pt.c (resolve_typename_type): Fix typos in infinite recursion
            avoidance mechanism.
    
    /testsuite
    2016-05-03  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70635
            * g++.dg/parse/pr70635.C: New.
    
    From-SVN: r235846

commit e564e71ebbe1e05ac2500d9945e2f075b4645092
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue May 3 00:51:30 2016 +0000

    backport: re PR libfortran/70684 (incorrect reading of values from file on Windows)
    
    2016-05-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from mainline
            PR libgfortran/70684
            * gfortran.dg/list_read_14.f90: New test.
    
            Backport from trunk.
            PR libgfortran/70684
            * io/list_read (check_buffers): Add '\r' to check for end of line.
    
    From-SVN: r235801

commit 2f44a38f972c17d8e6c9857551d494f1f8c40331
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 3 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235798

commit ff468c89ef964a3e537c8c8649c26937b3b283ac
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon May 2 13:22:23 2016 +0000

    Fix make install-gcc-specs with empty GCC_SPEC_FILES
    
            * gcc-interface/Makefile.in (install-gcc-specs): Use foreach.
            Honor DESTDIR.
    
    From-SVN: r235758

commit 7ebda199a54ae6e863f42cb8cc8ec36bd55e2e81
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 2 11:36:38 2016 +0000

    backport: re PR middle-end/70526 (GCC 6 miscompiles Firefox JIT compiler)
    
    2016-05-02  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-04-05  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70526
            * tree-sra.c (build_ref_for_offset): Use prev_base to
            extract the alias pointer type.
    
            * g++.dg/torture/pr70526.C: New testcase.
    
    From-SVN: r235751

commit 43c1e873aa0c8686e7321646d65d829522eece1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 2 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r235695

commit e70981f7f93add8887449f517c94b8b8b4509c27
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 1 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r235684

commit fa21137898d571da5d39dec365dc25eb0485f8fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 30 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r235666

commit a14c450a5037640591130e12f9ffef6d140c68cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 29 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235617

commit 9b9d99f1a51ce20e00b7bf5c03f8a68dfc697298
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 28 21:47:06 2016 +0200

    re PR target/70858 (__builtin_ia32_bextr_u64 ICE with '-m32 -march=core-avx2')
    
            PR target/70858
            * config/i386/i386.c (bdesc_special_args): Add | OPTION_MASK_ISA_64BIT
            to __builtin_ia32_lwpval64 and __builtin_ia32_lwpins64.
            (bdesc_args): Add | OPTION_MASK_ISA_64BIT to __builtin_ia32_bextr_u64,
            __builtin_ia32_bextri_u64, __builtin_ia32_bzhi_di,
            __builtin_ia32_pdep_di and __builtin_ia32_pext_di.
    
            * gcc.target/i386/pr70858.c: New test.
    
    From-SVN: r235610

commit 8860c4830c16061e28c229261f0d5672a93559b8
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Apr 28 16:37:27 2016 +0000

    re PR java/70839 (Every libjava execution test FAILs: Incorrect library ABI version detected)
    
    2016-04-28  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR java/70839
            * decl.c (parse_version): Remove minor handling.
    
    From-SVN: r235582

commit 447b2e36092656782448bc8cf715f9850d81793b
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Apr 28 14:44:07 2016 +0000

    [ARM] PR driver/70132: Avoid double fclose in driver-arm.c
    
            Backport from mainline
            2016-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR driver/70132
            * config/arm/driver-arm.c (host_detect_local_cpu): Reorder exit logic
            to not call fclose twice on file.
    
    From-SVN: r235573

commit 5afcbba4f66bdedab68c7c30d126222230c022e5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Apr 28 10:59:05 2016 +0000

    re PR ada/70786 (Missing "not" breaks Ada.Text_IO.Get_Immediate(File, Item, Available))
    
            PR ada/70786
            * a-textio.adb (Get_Immediate): Add missing 'not' in expression.
    
    From-SVN: r235556

commit d1ca856e8b5dc779b4842ae0ff338370821c5bc6
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Thu Apr 28 08:45:06 2016 +0000

    backport: arm.c (thumb1_reorg): Check that the comparison is against the constant 0.
    
    2016-01-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-01-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * config/arm/arm.c (thumb1_reorg): Check that the comparison is
        against the constant 0.
    
    From-SVN: r235549

commit 841e483375dfc99fc1a2f00a724c737682f97972
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Apr 28 08:24:25 2016 +0000

    decl.c (parse_version): Freeze the minor version in the abi version.
    
    2016-04-28  Matthias Klose  <doko@ubuntu.com>
    
            * decl.c (parse_version): Freeze the minor version in the abi version.
    
    From-SVN: r235548

commit 6d30ef2e8a35b956e82c7dd19b11d3feb2397e2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235541

commit a029bd377242cc67a3200b90527a6022489bf092
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Apr 27 18:47:50 2016 +0000

    backport: rs6000-builtin.def: Correct pasto error for stxvd2x and stxvw4x built-in functions.
    
    2016-04-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-builtin.def: Correct pasto error for
            stxvd2x and stxvw4x built-in functions.
    
    From-SVN: r235528

commit a34244c00149053940c620d332be4a34c7d3d8b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 27 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r235462

commit 35f2867d3752ec55b5d72eeee30124430ecc7505
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 26 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235426

commit 85131ea0607b059e08401c2fb7ffe742b84cd79a
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Apr 25 22:28:36 2016 +0000

    backport: re PR target/70098 (PowerPC64: eigen hits ICE following invalid register assignment)
    
    [gcc]
    
    2016-04-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-03-14  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70098
            * config/rs6000/rs6000.md (*ctr<mode>_internal1, *ctr<mode>_internal2,
            *ctr<mode>_internal5, *ctr<mode>_internal6): Also allow "d" as output.
            (define_split for the GPR case): Use int_reg_operand instead of
            gpc_reg_operand for the output.
    
    [gcc/testsuite]
    
    2016-04-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-03-14  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70098
            * lib/target-supports.exp (check_effective_target_powerpc64_no_dm):
            New function.
            * g++.dg/pr70098.C: New testcase.
    
    From-SVN: r235423

commit 44c692ebf27688c6dfe38e8dd7bc33ef7d347fdd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 25 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r235399

commit cc380bdfd6b9e7086a5f377514fa4f26920a9310
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 24 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235388

commit db86612cc12a757a2bda263f38963e5cfc018bfd
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sat Apr 23 23:38:57 2016 +0200

    backport: libjava.exp (libjava_arguments): Use 'file normalize' rather than the defunct DejaGnu 'absolute' proc.
    
    2016-04-23  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            backport from trunk:
            2016-04-20  Ben Elliston  <bje@gnu.org>
    
            * testsuite/lib/libjava.exp (libjava_arguments): Use 'file
            normalize' rather than the defunct DejaGnu 'absolute' proc.
    
    From-SVN: r235386

commit 10c713510199fe93bbf52beed0e5588f815a6366
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 23 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235377

commit f2867927dab84a24aeba948ebf0322e3f8a6f76d
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Apr 22 13:05:54 2016 +0000

    Replace -skip-rax-setup with -mskip-rax-setup
    
            Backport from mainline
            * doc/invoke.texi: Replace -skip-rax-setup with -mskip-rax-setup.
    
    From-SVN: r235365

commit 5147da7e07ea9be7e48c6f20ec74308c63fbb839
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 22 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235355

commit c1d12780417b8351246c15de54dc2a641d2cdc8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 21 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r235299

commit dcb0d1a1a293708ac3e7ecaa28b4489c644c7914
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Apr 20 14:00:43 2016 +0100

    Fix assertions for move assignment of trivial types
    
    Backport from mainline
    2016-01-26  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69478
            * include/bits/stl_algobase.h (__copy_move<_IsMove, true,
            random_access_iterator_tag>): Check is_move_assignable when moving.
            (__copy_move_backwards<_IsMove, true, random_access_iterator_tag>):
            Likewise.
            * testsuite/25_algorithms/copy/move_iterators/69478.cc: New.
            * testsuite/25_algorithms/copy_backward/move_iterators/69478.cc: New.
            * testsuite/25_algorithms/move/69478.cc: New.
            * testsuite/25_algorithms/move_backward/69478.cc: New.
    
    From-SVN: r235278

commit 4cc8cffeb86dcee3328cdab1db95c047daed1ee5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Apr 20 14:00:37 2016 +0100

    Ensure std::thread helpers have internal linkage
    
    Backport from mainline
    2016-04-05  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70503
            * src/c++11/thread.cc (execute_native_thread_routine,
            execute_native_thread_routine_compat): Give internal linkage.
            * testsuite/30_threads/thread/70503.cc: New test.
    
    From-SVN: r235277

commit 47822deeff124b25415b49a058d3636e24d42cff
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Apr 20 14:00:24 2016 +0100

    Avoid including all of <random> in <algorithm>
    
    Backport from mainline
    2016-01-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69464
            * include/Makefile.am: Add new header.
            * include/Makefile.in: Regenerate.
            * include/bits/random.h (uniform_int_distribution): Move to
            bits/uniform_int_dist.h.
            * include/bits/random.tcc (uniform_int_distribution::operator(),
            uniform_int_distribution::__generate_impl): Likewise.
            * include/bits/uniform_int_dist.h: New header.
            * include/bits/stl_algo.h [__cplusplus >= 201103L]: Include
            <bits/uniform_int_dist.h> instead of <random>.
            * testsuite/20_util/specialized_algorithms/uninitialized_copy/
            move_iterators/1.cc: Include correct header for uninitialized_copy.
            * testsuite/20_util/specialized_algorithms/uninitialized_copy_n/
            move_iterators/1.cc: Likewise.
            * testsuite/25_algorithms/nth_element/58800.cc: Include correct
            header for vector.
            * testsuite/26_numerics/random/pr60037-neg.cc: Adjust dg-error lines.
            * testsuite/libstdc++-prettyprinters/whatis.cc: Include <random>.
    
    From-SVN: r235276

commit 445ed9c330ad3acf3d27b3377087c56feca37c0e
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Wed Apr 20 07:09:32 2016 +0000

    PR70674: S/390: Add memory barrier to stack pointer restore from fpr.
    
    This patches fixes a problem with stack variable accesses being
    scheduled after the stack pointer restore instructions.  In the
    testcase this happened with the stack variable 'a' accessed through the
    frame pointer.
    
    The existing stack_tie we have in the backend is basically useless
    when trying to block stack variable accesses from being scheduled
    across an insn.  The alias set of stack variables and the frame alias
    set usually differ and hence aren't in conflict with each other.  The
    solution appears to be a magic MEM term with a scratch register which
    is handled as a full memory barrier when analyzing scheduling
    dependencies.
    
    With the patch a (clobber (mem:BLK (scratch))) is being added to the
    restore instruction in order to prevent any memory operations to be
    scheduled across the insn.  The patch does that only for the one case
    where the stack pointer is restored from an FPR.  Theoretically this
    might happen also in the case where the stack pointer gets restored
    using a load multiple.  However, triggering that problem with
    load-multiple appears to be much harder since the load-multiple will
    restore the frame pointer as well.  So in order to see the problem a
    different call-clobbered register would need to be used as temporary
    stack pointer.
    
    Another case which needs to be handled some day is the stack pointer
    allocation part.  It needs to be a memory barrier as well.
    
    Bootstrapped and regression tested with --with-arch z196 and z13 on
    s390 and s390x.
    
    gcc/ChangeLog:
    
    2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/70674
            * config/s390/s390.c (s390_restore_gprs_from_fprs): Pick the new
            stack_restore_from_fpr pattern when restoring r15.
            (s390_optimize_prologue): Strip away the memory barrier in the
            parallel when trying to get rid of restore insns.
            * config/s390/s390.md ("stack_restore_from_fpr"): New insn
            definition for loading the stack pointer from an FPR.  Compared to
            the normal move insn this pattern includes a full memory barrier.
    
    gcc/testsuite/ChangeLog:
    
    2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/70674
            * gcc.target/s390/pr70674.c: New test.
    
    From-SVN: r235233

commit 8b8affde42c1e886e007f46166368e3307495481
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 20 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r235228

commit 5437dc3af2301c263ed6c86e21ab023f8dbab025
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 19 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r235180

commit ef20d71932dd2d937b5d574694a6701f74d17879
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Apr 18 15:21:52 2016 +0000

    re PR c/70297 (GCC Segfaults when using -g3)
    
            PR c/70297
            * c-decl.c (merge_decls): Also set TYPE_ALIGN and TYPE_USER_ALIGN.
    
            * decl.c (duplicate_decls): Also set TYPE_ALIGN and TYPE_USER_ALIGN.
    
            * c-c++-common/pr70297.c: New test.
            * g++.dg/cpp0x/typedef-redecl.C: New test.
            * gcc.dg/typedef-redecl2.c: New test.
    
    From-SVN: r235150

commit 29eec15a98cb7cd134f9026d3600f81f33558ea5
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Apr 18 15:18:48 2016 +0000

    backport: decl.c (duplicate_decls): When combining typedefs, remove the new type from the variants list.
    
            Backport from mainline
            2015-11-11  Jason Merrill  <jason@redhat.com>
    
            * decl.c (duplicate_decls): When combining typedefs, remove the
            new type from the variants list.
    
    From-SVN: r235149

commit 871c1caa8ace015827341ae590972d2503bf490f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 18 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r235088

commit 187da3a557c60243facc30b74a9906e0c661df7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 17 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r235068

commit bd959ca885f05d0a0d5250a9404d57bae4ed20a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 16 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r235056

commit f738d80fc472d246751c704ad8417b8d3f14238b
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Apr 15 13:03:58 2016 -0400

    pt.c (tsubst_copy_and_build): Get LAMBDA_EXPR_RETURN_TYPE from the instantiated closure.
    
            * pt.c (tsubst_copy_and_build) [LAMBDA_EXPR]: Get
            LAMBDA_EXPR_RETURN_TYPE from the instantiated closure.
    
    From-SVN: r235044

commit 0fe8ce168f472fef4472e25c892ce07ba4335d66
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Apr 15 13:03:33 2016 -0400

    re PR c++/67164 (ICE: tree check: expected class ‘expression’, have ‘exceptional’ (argument_pack_select) in tree_operand_check, at tree.h:3356)
    
            PR c++/67164
    
            * pt.c (copy_template_args): New.
            (tsubst_pack_expansion): Use it.
    
    From-SVN: r235043

commit d8b410a7711ebc418c75e49fe244b47402ea8102
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Fri Apr 15 15:13:42 2016 +0000

    AVX-512, Fix mode size check.
    
    PR target/70662
    gcc/
            * config/i386/sse.md(define_insn "<avx512>_vec_dup<mode><mask_name>"):
            Fix mode size check.
    
    From-SVN: r235037

commit 0aa4e3fb1231e331c943d92fd203559dcfd4545c
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Fri Apr 15 09:36:31 2016 +0000

    AVX-512. Use proper mem ops modifier for Intel syntax in broadcast patter.
    
    PR target/70662
    gcc/
            * config/i386/sse.md: Use proper memory operand
            modifiers.
    gcc/testsuite.
            * gcc.target/i386/pr70662.c: New test.
    
    From-SVN: r235013

commit 6e646d8b461562323ce0be5c6b0e2df399f8c8a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 15 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234998

commit e2a8f34ab10c016da8bf4141725a1c7fee4fa1b5
Author: Kyrylo Tkachov <ktkachov@gcc.gnu.org>
Date:   Thu Apr 14 13:45:34 2016 +0000

    [AArch64] Backport of PR target/70044 fix to GCC 5
    
    2016-04-14  Nick Clifton  <nickc@redhat.com>
                Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70044
            * config/aarch64/aarch64.c
            (aarch64_override_options_after_change): When forcing
            flag_omit_frame_pointer to be true, use a special value that can
            be detected if this function is called again, thus preventing
            flag_omit_leaf_frame_pointer from being forced to be false.
    
            * gcc.target/aarch64/pr70044.c: New test.
    
    From-SVN: r234974

commit 4655e8f467f3a1fe13b2730fe14dfef40bc46416
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 14 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234968

commit 45b00b48abe3a6f0f449bfea0a2a1dfe642590b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 13 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234928

commit d25915b9b36b50ea5d669027e19f9415c39845b7
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Apr 13 08:28:36 2016 +0930

    Fix target/70107, another case of PR c++/70096
    
    gcc/cp/
            PR target/70107
            PR c++/70096
            * pt.c (tsubst_decl): Clear the DECL_MODE of the new decl.
    
    gcc/testsuite/
            * g++.dg/template/ptrmem30.C (read): Rename to data_read.
            (Holder::foo): Reflect this.
    
            PR c++/70096
            * g++.dg/template/ptrmem30.C: New test.
    
    From-SVN: r234924

commit 878c7517238537e9c18a277f0fdd209c85537e90
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Apr 12 20:55:33 2016 +0000

    re PR target/70630 (sparc bootstrap failure: sparc.c:4919:6: error: suggest explicit braces to avoid ambiguous 'else')
    
            PR target/70630
            * config/sparc/sparc.c (sparc_compute_frame_size): Add parentheses.
    
    From-SVN: r234919

commit e018eb9f0c4a6db6e07b9b8b29ebefa5fd88e150
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Apr 12 10:58:28 2016 +0000

    [ARM] PR target/70566 Check that condition register is dead in tst-imm -> lsls-imm Thumb2 peepholes
    
            Backport from mainline
            2016-04-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70566
            * config/arm/thumb2.md (tst + branch-> lsls + branch
            peephole below *orsi_not_shiftsi_si): Require that condition
            register is dead after the peephole.
            (second peephole after the above): Likewise.
    
            * gcc.c-torture/execute/pr70566.c: New test.
    
    From-SVN: r234898

commit 880b4f9d63c0ef2d2fe91668a7b0bbb019a962e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 12 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r234891

commit 983a8546cb788738412c796b2e09e44ab1dd934d
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Apr 11 23:16:51 2016 +0930

    PR70117, ppc long double isinf
    
    gcc/
            PR target/70117
            * builtins.c (fold_builtin_classify): For IBM extended precision,
            look at just the high-order double to test for NaN.
            (fold_builtin_interclass_mathfn): Similarly for Inf.  For isnormal
            test just the high double for Inf but both doubles for subnormal
            limit.
    gcc/testsuite/
            * gcc.target/powerpc/pr70117.c: New.
    
    From-SVN: r234880

commit 9ad8a17fb71734e7d9b87249d5bc98798af9184d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 11 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r234871

commit bfb07b1f5e6f5f5c6326de5c53ad70caf64f673c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 10 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r234866

commit e183d29c9d18a152918a6d2f6a80c47cea4128a1
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sat Apr 9 18:14:02 2016 +0200

    re PR fortran/70592 (Addressing error in dynamically-allocated character array)
    
    2016-04-09  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/70592
            * gfortran.dg/deferred_character_17.f90: New test.
    
    From-SVN: r234858

commit 74cd71ff8b2ec1208a4955abb55f7f85d42c63fb
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Apr 9 16:09:42 2016 +0000

    uninit-19.c: Fix warning line for hppa*64*-*-*.
    
            * gcc.dg/uninit-19.c: Fix warning line for hppa*64*-*-*.
    
    From-SVN: r234857

commit 89db1a8a31bb0fd012d6a541ce96162c7b344a3e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Apr 9 15:55:42 2016 +0000

    re PR tree-optimization/68644 (FAIL: gcc.dg/tree-ssa/ivopts-lt-2.c scan-tree-dump-times ivopts "PHI <p_" 1)
    
            PR tree-optimization/68644
            * gcc.dg/tree-ssa/ivopts-lt-2.c: Skip on hppa*-*-*.
    
    From-SVN: r234855

commit 2b2bde05e768900ece8c410908bd9d48f048e554
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Apr 9 15:47:50 2016 +0000

    re PR testsuite/64886 (FAIL: gcc.dg/pr64434.c scan-rtl-dump-times expand "Swap operands" 1)
    
            PR rtl-optimization/64886
            * gcc.dg/pr64434.c: Skip on hppa*-*-hpux*.
    
    From-SVN: r234853

commit b22e701790055906219909f6f20e4f06d9283de3
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Apr 9 02:46:50 2016 +0000

    backport: re PR target/70416 ([SH]: error: 'asm' operand requires impossible reload when building ruby2.3)
    
    gcc/
            Backport from mainline
            2016-04-03  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/70416
            PR target/67391
            * config/sh/sh.md (*addsi3): Allow pattern when reload_in_progress is
            set, but not for SP_REG operands.
    
    gcc/testsuite/
            Backport from mainline
            2016-04-03  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/70416
            PR target/67391
            * gcc.target/sh/torture/pr70416.c: New.
    
    From-SVN: r234847

commit a0402cb1fd4ec2337f04f7db5045d52ab69a6b44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 9 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234845

commit 216aaa9033bba01f4a88036b29211530bcc06921
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 8 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234819

commit 539a2c2fafeb478b449c8caeb801557e8e715c3c
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Thu Apr 7 13:43:30 2016 +0200

    [PR libgomp/69414] Fix handling of subarrays with update directive
    
            libgomp/
            Backport trunk r234428:
    
            2016-03-23  James Norris  <jnorris@codesourcery.com>
                        Daichi Fukuoka <dc-fukuoka@sgi.com>
    
            PR libgomp/69414
            * oacc-mem.c (delete_copyout, update_dev_host): Fix device address.
            * testsuite/libgomp.oacc-c-c++-common/update-1.c: Additional tests.
            * testsuite/libgomp.oacc-c-c++-common/update-1-2.c: Likewise.
            * testsuite/libgomp.oacc-fortran/update-1.f90: New file.
    
    From-SVN: r234806

commit de6dce9091b07450d1ff78e8a39b095b4de24dec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 7 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r234804

commit 9ed21246ce198aecd70828ffc4991a6b241e78d5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Apr 6 15:28:34 2016 +0000

    * gcc.c-torture/execute/20101011-1.c (__VISIUM__): Set DO_TEST to 0.
    
    From-SVN: r234788

commit 165b72fa075971ead4084acc3b402aa1d8849975
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Wed Apr 6 17:27:11 2016 +0200

    sse.md (shuffletype): Add V32HI and V4TI modes.
    
            * config/i386/sse.md (shuffletype): Add V32HI and V4TI modes.
            (ssescalarsize): Add V8SF, V4SF, V4DF and V2DF modes.
    
    From-SVN: r234786

commit bef47e2c117b84ca2b00167974d48f179f6a650a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Apr 6 15:08:05 2016 +0000

    Makefile.am (libstdc++-symbols.ver): Remove useless /dev/null.
    
            * src/Makefile.am (libstdc++-symbols.ver): Remove useless /dev/null.
            * src/Makefile.in: Regenerate.
    
    From-SVN: r234783

commit 8d7db618baa6ffb3f95fcf2602f0fc8128fc6291
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 6 10:31:27 2016 +0000

    backport: re PR tree-optimization/70177 (ICE in extract_ops_from_tree starting with r233660)
    
    2016-04-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-03-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/70177
            * gimple-expr.h (extract_ops_from_tree_1): Renamed to ...
            (extract_ops_from_tree): ... this.  In the 2 argument
            overload remove _1 suffix.
            * gimple-expr.c (extract_ops_from_tree_1): Renamed to ...
            (extract_ops_from_tree): ... this.
            * gimple.c (gimple_build_assign, gimple_assign_set_rhs_from_tree):
            Adjust callers.
            * tree-ssa-loop-niter.c (derive_constant_upper_bound): Likewise.
            * tree-ssa-forwprop.c (defcodefor_name): Call 3 operand
            extract_ops_from_tree instead of 2 operand one.
    
            * gcc.dg/pr70177.c: New test.
    
    From-SVN: r234776

commit 529826c6fafe2fece87cad3986fe8cfc61a24083
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 6 08:09:40 2016 +0000

    backport: [multiple changes]
    
    2016-04-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-24  Richard Biener  <rguenther@suse.de>
                    Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/69760
            * tree-scalar-evolution.c (interpret_rhs_expr): Re-write
            conditionally executed ops to well-defined overflow behavior.
    
            * gcc.dg/torture/pr69760.c: New testcase.
    
            2016-03-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69983
            * tree-chrec.c (eq_evolutions_p): Handle conversions, compare
            types and fall back to operand_equal_p.
    
            * gcc.dg/graphite/isl-codegen-loop-dumping.c: Adjust.
    
    From-SVN: r234775

commit 2aa80e80f623db26abbc90267b4b5efe2991e7d8
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 6 07:57:47 2016 +0000

    backport: re PR tree-optimization/68963 (O3 vs. O2 discards part of loop and terminates early)
    
    2016-04-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-24  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68963
            * tree-ssa-loop-niter.c (derive_constant_upper_bound_ops): Fix
            bogus check.
            (record_nonwrapping_iv): Do not fall back to the low/high bound
            for non-constant IV bases if the stmt is not always executed.
    
            * gcc.dg/torture/pr68963.c: New testcase.
    
    From-SVN: r234774

commit 6c18825951ce3848dc59ed95afb36a03f7f7eea8
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 6 07:51:19 2016 +0000

    backport: [multiple changes]
    
    2016-04-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-03-01  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70022
            * fold-const.c (fold_indirect_ref_1): Fix range checking for
            vector BIT_FIELD_REF extract.
    
            * gcc.dg/pr70022.c: New testcase.
    
            2016-03-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70115
            * tree-ssa-loop-ivcanon.c (propagate_into_all_uses): Remove.
            (propagate_constants_for_unrolling): Use replace_uses_by.
    
            * gcc.dg/torture/pr70115.c: New testcase.
    
            2016-03-29  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70424
            * ipa-prop.c (ipa_compute_jump_functions_for_edge): Always
            use alignment returned by get_pointer_alignment_1 if it is
            bigger than BITS_PER_UNIT.
            * builtins.c (get_pointer_alignment_1): Do not return true
            for alignment extracted from SSA info.
    
    From-SVN: r234773

commit 35439ce311d893083fd20312c91a162353065da0
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 6 07:45:34 2016 +0000

    Backport PRs 70333, 70430, 70450, 70484
    
    2016-04-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-03-30  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70450
            * fold-const.c (extract_muldiv_1): Fix thinko in wide_int::from
            usage.
    
            * gcc.dg/torture/pr70450.c: New testcase.
    
            2016-03-22  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70333
            * fold-const.c (extract_muldiv_1): Properly perform multiplication
            in the wide type.
    
            * gcc.dg/torture/pr70333.c: New testcase.
    
            2016-04-04  Richard Biener  <rguenther@suse.de>
    
            PR rtl-optimization/70484
            * rtl.h (canon_output_dependence): Declare.
            * alias.c (canon_output_dependence): New function.
            * dse.c (record_store): Use canon_output_dependence rather
            than canon_true_dependence.
    
            * gcc.dg/torture/pr70484.c: New testcase.
    
            2016-03-31  Richard Biener  <rguenther@suse.de>
    
            PR c++/70430
            * typeck.c (cp_build_binary_op): Fix operand order of vector
            conditional in truth op handling.
    
            * g++.dg/ext/vector30.C: New testcase.
    
    From-SVN: r234772

commit 494d1e1efd44e671d26a0504746fe80eb811fbae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 6 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234770

commit 448044026d6b3b6d5e3d73ee9f62e137b2f0850f
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Tue Apr 5 23:44:43 2016 +0000

    predicates.md (integer_store_memory_operand): Accept REG+D operands with a large offset when reload_in_progress is true.
    
            * config/pa/predicates.md (integer_store_memory_operand): Accept
            REG+D operands with a large offset when reload_in_progress is true.
            (floating_point_store_memory_operand): Likewise.
    
    From-SVN: r234766

commit 9abf12c0b2965bd4ff1b26fd711fcc71997a3316
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Apr 5 20:46:55 2016 +0200

    backport: sse.md (define_insn "<avx512>_vec_dup<mode>_1"): Fix assembler to make source always 128bit.
    
            Backport from mainline
            2015-12-08  Kirill Yukhin  <kirill.yukhin@intel.com>
    
            * config/i386/sse.md (define_insn "<avx512>_vec_dup<mode>_1"): Fix
            assembler to make source always 128bit.
    
    From-SVN: r234759

commit 482b10b228086bd2cca64c52e9ff42eff8e25339
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Apr 5 20:03:55 2016 +0200

    re PR target/70510 (ICE: output_operand: invalid %-code with -mavx512bw -masm=intel when emitting vpbroatcast)
    
            PR target/70510
            * config/i386/sse.md (iptr): Add V64QI, V32HI, V16SI and V8DI modes.
    
    testsuite/ChangeLog:
    
            PR target/70510
            * gcc.target/i386/pr70510.c: New test.
    
    From-SVN: r234758

commit ee7968cb18da1649d78182a4d33e1283dcae631d
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Tue Apr 5 11:44:17 2016 +0200

    [multiple changes]
    
    2016-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
                Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR libgfortran/70235
            * io/write_float.def: Fix PF format for negative values of the scale
            factor.
    
    2016-04-05  Dominique d'Humieres  <dominiq@lps.ens.fr>
                Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            * gfortran.dg/fmt_pf.f90: New test.
    
    From-SVN: r234741

commit 5d43bff2113b092e9a44bd14da354286c409bc0d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Apr 5 10:23:46 2016 +0200

    re PR target/70525 (generating 'vpandn' without the mode suffix, gnu as fails to assemble (-mavx512bw))
    
            PR target/70525
            * config/i386/sse.md (*andnot<mode>3): Simplify assertions.
            Use vpandn<ssemodesuffix> for V16SI/V8DImode, vpandnq for
            V32HI/V64QImode, don't use <mask_operand3_1>, fix up formatting.
            (*andnot<mode>3_mask): Remove insn with VI12_AVX512VL iterator.
    
            * gcc.target/i386/pr70525.c: New test.
    
    From-SVN: r234740

commit c099cc5ef32e614ed9f043532d280001822bc76c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234730

commit aa9e26b1be6d2f9d88b6b4cc534d3867dfdef9c0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Apr 4 22:29:45 2016 +0000

    re PR target/67172 (i686-w64-mingw32 dwarf2 bootstrap fails with undefined reference to __EH_FRAME_BEGIN__)
    
            PR target/67172
            * libgcc2.c (L__main): Undefine __LIBGCC_EH_FRAME_SECTION_NAME__ if
            __MINGW32__ is defined.
    
    From-SVN: r234728

commit b77a97a38f46764261b0bb8c3dee9f49e14f2116
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Apr 4 15:45:59 2016 +0000

    re PR middle-end/70457 (ICE (segfault) in gimple_expand_builtin_pow on powerpc64le-linux-gnu)
    
    [gcc]
    
    2016-04-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                Jakub Jelinek <jakub@redhat.com>
    
            PR middle-end/70457
            * tree-inline.c (estimate_num_insn): Use gimple_call_builtin_p
            to ensure a call statement is compatible with a built-in's
            prototype.
            * tree-ssa-math-opts.c (execute_cse_sincos_1): Likewise.
            (pass_cse_sincos::execute): Likewise.
            (pass_optimize_widening_mul::execute):  Likewise.
    
    [gcc/testsuite]
    
    2016-04-04  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                Jakub Jelinek <jakub@redhat.com>
    
            PR middle-end/70457
            * gcc.dg/torture/pr70457.c: New.
    
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    
    From-SVN: r234717

commit fc318732fd32169863fe8d45f0dfa317fc8387e5
Author: Andre Vehreschild <vehre@gmx.de>
Date:   Mon Apr 4 11:47:47 2016 +0200

    re PR fortran/66911 (ICE on allocate character with source as a derived type component)
    
    gcc/fortran/ChangeLog:
    
    2016-04-04  Andre Vehreschild  <vehre@gmx.de>
    
            PR fortran/66911
            * trans-stmt.c (gfc_trans_allocate): Get the deferred length of an
            expression by converting the expression when the length is not set
            in the symbol's ts.
    
    gcc/testsuite/ChangeLog:
    
    2016-04-04  Andre Vehreschild  <vehre@gmx.de>
    
            PR fortran/66911
            * gfortran.dg/deferred_character_16.f90: New test.
    
    From-SVN: r234712

commit eec8e23d0feb7437b73effcb24afb34726bdb005
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Mon Apr 4 11:33:54 2016 +0200

    re PR fortran/65795 (Segfault (invalid write) for ALLOCATE statement involving COARRAYS)
    
    gcc/fortran/ChangeLog:
    
    2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/65795
            * trans-array.c (gfc_array_allocate): When the array is a coarray,
            do not nullyfing its allocatable components in array_allocate, because
            the nullify missed the array ref and nullifies the wrong component.
            Cosmetics.
    
    gcc/testsuite/ChangeLog:
    
    2016-04-04  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/65795
            * gfortran.dg/coarray_allocate_6.f08: New test.
    
    From-SVN: r234711

commit 054ebf2f90367a42132c0f1df593e17792747c5e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 4 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234704

commit 43d33447958d8f1bf2747151ecf133b447207deb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 3 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r234700

commit 1707e253346b5c7111cdb1b5effdca627bf34eba
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Apr 2 08:56:49 2016 +0000

    decl.c (components_to_record): Restrict the previous change to fields with variable size.
    
            * gcc-interface/decl.c (components_to_record): Restrict the previous
            change to fields with variable size.
    
    From-SVN: r234697

commit aeae253d935773e5dee01f0141f7e5cf3b39c55d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 2 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234690

commit 85c8d280b6208b1e14082d2fc8a2747cd00616d9
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Apr 1 17:35:12 2016 +0000

    backport: re PR rtl-optimization/68236 (selective scheduling with --param=sched-autopref-queue-depth=10 ICEs a lot @ aarch64)
    
            Backport from mainline r230088
    
            2015-11-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR rtl-optimization/68236
            * haifa-sched.c (autopref_multipass_dfa_lookahead_guard): Return 0
            if insn_queue doesn't exist.
            (haifa_sched_finish): Reset insn_queue to NULL.
    
    From-SVN: r234680

commit 99826904187e49347bf18ae86d2c13acc46634a0
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Fri Apr 1 15:31:43 2016 +0000

    backport: re PR target/69890 (FAIL: gcc.target/i386/chkp-* on x86_64-apple-darwin15)
    
    gcc/testsuite/
    
            Backport from mainline r234666.
            2016-04-01  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR target/69890
            * gcc.dg/strlenopt.h (memmove): New.
            * gcc.target/i386/chkp-strlen-1.c: Include "../../gcc.dg/strlenopt.h"
            instead of "string.h".
            * gcc.target/i386/chkp-strlen-2.c: Likewise.
            * gcc.target/i386/chkp-strlen-3.c: Likewise.
            * gcc.target/i386/chkp-strlen-4.c: Likewise.
            * gcc.target/i386/chkp-strlen-5.c: Likewise.
            * gcc.target/i386/chkp-stropt-1.c: Likewise.
            * gcc.target/i386/chkp-stropt-10.c: Likewise.
            * gcc.target/i386/chkp-stropt-11.c: Likewise.
            * gcc.target/i386/chkp-stropt-12.c: Likewise.
            * gcc.target/i386/chkp-stropt-13.c: Likewise.
            * gcc.target/i386/chkp-stropt-14.c: Likewise.
            * gcc.target/i386/chkp-stropt-15.c: Likewise.
            * gcc.target/i386/chkp-stropt-16.c: Likewise.
            * gcc.target/i386/chkp-stropt-2.c: Likewise.
            * gcc.target/i386/chkp-stropt-3.c: Likewise.
            * gcc.target/i386/chkp-stropt-4.c: Likewise.
            * gcc.target/i386/chkp-stropt-5.c: Likewise.
            * gcc.target/i386/chkp-stropt-6.c: Likewise.
            * gcc.target/i386/chkp-stropt-7.c: Likewise.
            * gcc.target/i386/chkp-stropt-8.c: Likewise.
            * gcc.target/i386/chkp-stropt-9.c: Likewise.
    
    From-SVN: r234677

commit 6bbc41858faf7cadd39308145a15bda552ad2fbd
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Apr 1 12:22:05 2016 +0000

    backport: re PR testsuite/70004 (FAIL: gcc.target/aarch64/scalar_shift_1.c scan-assembler-times neg\\td[0-9]+, d[0-9]+ 4)
    
            Backport from mainline r233964.
    
            2016-03-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70004
            * gcc.target/aarch64/scalar_shift_1.c: (test_corners_sisd_di):
            Delete.
            (test_corners_sisd_si): Likewise.
            (main): Remove checks of the above.
            * gcc.target/aarch64/shift_wide_invalid_1.c: New test.
    
    From-SVN: r234669

commit 1154bccfbd1fec256fad4b4bc346a3cb94f4877e
Author: James Greenhalgh <jgreenhalgh@gcc.gnu.org>
Date:   Fri Apr 1 09:45:44 2016 +0000

    Backport: [PATCH] Do not set structural equality on polynomial types
    
    gcc/ChangeLog:
    
            PR target/67896
            * config/aarch64/aarch64-builtins.c
            (aarch64_init_simd_builtin_types): Do not set structural
            equality to __Poly{8,16,64,128}_t types.
    
    gcc/testsuite/ChangeLog:
    
            PR target/67896
            * gcc.target/aarch64/simd/pr67896.C: New.
    
    From-SVN: r234665

commit b0ad257c8d2018f50c38c56d54605af9bc74dcd2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 1 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234660

commit 07b001db03ca8fddbc71f9ae5c060e2517d03302
Author: Nathan Sidwell <nathan@acm.org>
Date:   Thu Mar 31 20:51:20 2016 +0000

    re PR c++/70393 (Miscompilation: missing constructor call for static object)
    
            PR c++/70393
            * varasm.c (output_constructor_regular_field): Flush bitfield
            earlier.  Assert we don't want to move backwards.
    
            cp/
            PR c++/70393
            * constexpr.c (cxx_eval_store_expression): Keep CONSTRUCTOR
            elements in field order.
    
            testsuite/
            PR c++/70393
            * g++.dg/cpp0x/constexpr-virtual6.C: New.
    
    From-SVN: r234653

commit b5205f698dc016c8a24b3694c90e47aacf7d56bc
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Mar 31 16:29:56 2016 +0000

    [ARM] Fix sync.md ldrd output template for non-unified syntax
    
            * config/arm/sync.md (arm_atomic_loaddi2_ldrd): Fix output template
            for non-unified syntax.
    
            * gcc.target/arm/atomic_loaddi_relaxed_cond.c: New test.
    
    From-SVN: r234641

commit 68d8bd59a02542d84cb61bea8e692870bf368693
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Thu Mar 31 15:25:33 2016 +0000

    re PR target/70453 (gcc generates invalid instruction vextractu64x4 (should be: vextracti64x4))
    
    Fix PR target/70453.
    
    gcc/
            * config/i386/sse.md (define_mode_attr shuffletype): Fix typo.
    
    gcc/testsuite/
            * gcc.target/i386/pr70453.c: New test.
    
    From-SVN: r234635

commit 43520b48ecb5cf33d3ac3756e2d0c9433f96e3c1
Author: Andrey Belevantsev <abel@ispras.ru>
Date:   Thu Mar 31 17:50:57 2016 +0300

    backport: re PR rtl-optimization/69307 (wrong code with -O2 -fselective-scheduling @ armv7a)
    
            Backport from mainline
            2016-03-12  Andrey Belevantsev  <abel@ispras.ru>
    
            gcc/
            PR rtl-optimization/69307
            * sel-sched.c (choose_best_pseudo_reg): Properly check for hard
            registers in modes that span more than one register.
    
            testsuite/
            PR rtl-optimization/69307
            * gcc.dg/pr69307.c: New test.
    
    From-SVN: r234629

commit 4ce81535cb72354c48a792731cbc4a2667732228
Author: Andrey Belevantsev <abel@ispras.ru>
Date:   Thu Mar 31 17:16:18 2016 +0300

    backport: re PR rtl-optimization/69102 (ICE: in move_op_ascend, at sel-sched.c:6138 with -fselective-scheduling2)
    
            Backport from mainline
            2016-03-21  Andrey Belevantsev  <abel@ispras.ru>
    
            gcc/
            PR rtl-optimization/69102
            * sched-deps.c (sched_analyze_insn): Do not set last_args_size field
            when we have a readonly dependency context.
    
            testsuite/
            PR rtl-optimization/69102
            * gcc.c-torture/compile/pr69102.c: New test.
    
    From-SVN: r234625

commit baa3ee2f77021ad0f80aeb9f57737e096cb67198
Author: Andrey Belevantsev <abel@ispras.ru>
Date:   Thu Mar 31 17:01:22 2016 +0300

    backport: re PR rtl-optimization/69032 (ICE: in cfg_preds_1, at sel-sched-ir.c:4809 with -fsched-pressure -fsel-sched-pipelining -fselective-scheduling)
    
            Backport from mainline
            2016-03-15  Andrey Belevantsev  <abel@ispras.ru>
    
            gcc/
            PR rtl-optimization/69032
            * sel-sched-ir.c (get_seqno_by_preds): Include both insn and head when
            looping backwards over basic block insns.
    
            testsuite/
            PR rtl-optimization/69032
            * gcc.dg/pr69032.c: New test.
    
    From-SVN: r234624

commit def3ca53fad2343be04627e9887037b367d707ad
Author: Andrey Belevantsev <abel@ispras.ru>
Date:   Thu Mar 31 16:55:36 2016 +0300

    backport: re PR target/66660 ([ia64] Speculative load not checked before use, leading to a NaT Consumption Vector interruption)
    
    
            Backport from mainline
            2016-03-15  Andrey Belevantsev  <abel@ispras.ru>
    
            PR target/66660
            * sel-sched-ir.c (merge_expr): Avoid changing the speculative pattern
            to non-speculative when propagating trap bits.
    
    From-SVN: r234622

commit d34fe60ddc63b10831a0e0b56c413f0d0a07dd5b
Author: Andrey Belevantsev <abel@ispras.ru>
Date:   Thu Mar 31 16:50:15 2016 +0300

    backport: re PR target/64411 (ICE: in verify_target_availability, at sel-sched.c:1577 with -Os -mcmodel=medium -fPIC -fschedule-insns -fselective-scheduling)
    
            Backport from mainline
            2016-03-15  Andrey Belevantsev  <abel@ispras.ru>
    
            gcc/
            PR target/64411
            * sched-deps.c (get_implicit_reg_pending_clobbers): New function,
            factored out from ...
            (sched_analyze_insn): ... here.
            * sched-int.h (get_implicit_reg_pending_clobbers): Declare it.
            * sel-sched-ir.c (setup_id_implicit_regs): New function, use
            get_implicit_reg_pending_clobbers in it.
            (setup_id_reg_sets): Use setup_id_implicit_regs.
            (deps_init_id): Ditto.
    
            testsuite/
            PR target/64411
            * gcc.target/i386/pr64411.C: New test.
    
    From-SVN: r234620

commit 2f57e7eb762cbc6f83771b3dd5f7f0d5846b4214
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Mar 31 15:13:13 2016 +0200

    re PR rtl-optimization/70460 (Miscompilation of glibc on i686-linux starting with r234101)
    
            PR rtl-optimization/70460
            * ira.c (indirect_jump_optimize): Don't substitute LABEL_REF
            with operand from REG_LABEL_OPERAND, instead substitute
            SET_SRC or REG_EQUAL note content if it is a LABEL_REF.
            Don't do anything for REG_NON_LOCAL_GOTO jumps.
    
            * gcc.c-torture/execute/pr70460.c: New test.
    
    From-SVN: r234617

commit 270ef50758c7b5014ed625b16723cab420d5517e
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Mar 31 16:54:40 2016 +1030

    [RS6000] reload_vsx_from_gprsf splitter
    
    This is PR68973 part 2, caused by the reload_vsx_from_gprsf splitter
    emitting an invalid move.  Part 1 deferred for branch until it is
    proven that the reload change is necessary.
    
            Backport from mainline
            2016-02-16  Alan Modra  <amodra@gmail.com>
            PR target/68973
            * config/rs6000/rs6000.md (reload_vsx_from_gprsf): Rewrite splitter.
            (p8_mtvsrd_df, p8_mtvsrd_sf): New.
            (p8_mtvsrd_1, p8_mtvsrd_2): Delete.
            (p8_mtvsrwz): New.
            (p8_mtvsrwz_1, p8_mtvsrwz_2): Delete.
            (p8_xxpermdi_<mode>): Take two DF inputs rather than one TF.
            (p8_fmrgow_<mode>): Likewise.
            (reload_vsx_from_gpr<mode>): Adjust for above.  Use "wa" for
            clobber constraint.
            (reload_fpr_from_gpr<mode>): Adjust for above.  Use "d" for
            op0 constraint.
            (reload_vsx_from_gprsf): Use p8_mtvsrd_sf rather than attempting
            to use movdi_internal64.  Remove op0_di.
            * config/rs6000/vsx.md (vsx_xscvspdpn_directmove): Make op1 SFmode.
    
    From-SVN: r234608

commit 72a00d874c4fa1b01edc4d7e803318a55b5e8686
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 31 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234606

commit 1f9d9ef170c6c41b504b940740a950b220e17ef5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 19:05:06 2016 +0200

    Fix gcc.target/i386/avx-vextractf128-256-5.c with Solaris as (PR testsuite/70356)
    
    2016-03-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR testsuite/70356
            * gcc.target/i386/avx-vextractf128-256-5.c: Move
            dg-require-effective-target after dg-do.
    
    From-SVN: r234579

commit cfd79878e1570aa8c72480ec90da195dca7c6cc1
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Mar 30 16:25:06 2016 +0000

    Respect transparent alias chains of assembler names (PR target/69917)
    
            Backport from mainline
            2016-03-23  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR target/69917
            * config/i386/sol2.h (ASM_OUTPUT_DEF_FROM_DECLS): Follow
            transparent alias chain for decl assembler name.
            * config/sol2.c (solaris_assemble_visibility): Likewise.
    
    From-SVN: r234578

commit 0e3913fec955e782fd54f2052047e6e262aa8949
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Wed Mar 30 15:58:10 2016 +0000

    backport: re PR target/69614 (wrong code with -Os -fno-expensive-optimizations -fschedule-insns -mtpcs-leaf-frame -fira-algorithm=priority @ armv7a)
    
    2016-03-30  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backported from the mainline
            2016-03-12  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/69614
            * lra-constraints.c (delete_move_and_clobber): New.
            (remove_inheritance_pseudos): Use it.
    
    2016-03-30  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backported from the mainline
            2016-03-12  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/69614
            * gcc.target/arm/pr69614.c: New.
    
    From-SVN: r234577

commit 3d17a2fa1e79012207605368c9afe50bd2714b09
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 16:14:02 2016 +0200

    re PR target/70421 (wrong code with v16si vector and useless cast at -O -mavx512f)
    
            PR target/70421
            * config/i386/i386.c (ix86_expand_vector_set): Fix up argument order
            in gen_blendm expander.
    
            * gcc.dg/torture/pr70421.c: New test.
            * gcc.target/i386/avx512f-pr70421.c: New test.
    
    From-SVN: r234570

commit 6b66e874f6a324a2cf2b12394d1960d907f8f7e3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:45:39 2016 +0200

    backport: re PR rtl-optimization/70429 (Wrong code with -O1.)
    
            Backported from mainline
            2016-03-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/70429
            * combine.c (simplify_shift_const_1): For ASHIFTRT don't optimize
            (cst1 >> count) >> cst2 into (cst1 >> cst2) >> count if
            mode != result_mode.
    
            * gcc.c-torture/execute/pr70429.c: New test.
    
    From-SVN: r234567

commit 4735713ffdda53b8d78725e5d30d145a478b521c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:44:30 2016 +0200

    backport: re PR target/70329 (wrong code with -mavx512bw and 64byte vectors)
    
            Backported from mainline
            2016-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/70329
            * config/i386/i386.c (ix86_expand_vecop_qihi): Don't bother computing
            d.perm[i] for i >= d.nelt.  If not full_interleave, compute d.perm[i]
            in a way that works also for AVX512BW.
    
            * gcc.target/i386/avx512bw-pr70329-1.c: New test.
            * gcc.target/i386/avx512bw-pr70329-2.c: New test.
    
    From-SVN: r234566

commit f1781599a74af4038c322c76a411338c26fe89d9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:43:44 2016 +0200

    backport: re PR target/70296 (Incorrect handling of vector X; if X is function-like macro)
    
            Backported from mainline
            2016-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/70296
            * config/rs6000/rs6000-c.c (rs6000_macro_to_expand): If IDENT is
            function-like macro, peek following token(s) if it is followed
            by CPP_OPEN_PAREN token with optional padding in between, and
            if not, don't treat it like a macro.
    
            * include/cpplib.h (cpp_fun_like_macro_p): New prototype.
            * macro.c (cpp_fun_like_macro_p): New function.
    
            * gcc.target/powerpc/altivec-36.c: New test.
    
    From-SVN: r234565

commit b2e1956a4ec409a16b42f13b992c7453b7f7d57a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:42:43 2016 +0200

    backport: re PR c++/70272 (-flifetime-dse miscompilation starting with r217967)
    
            Backported from mainline
            2016-03-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/70272
            * decl.c (begin_destructor_body): Don't insert clobber if
            is_empty_class (current_class_type).
    
            * g++.dg/opt/flifetime-dse6.C: New test.
            * g++.dg/tree-ssa/ehcleanup-1.C: Adjust unreachable count.
    
    From-SVN: r234564

commit c167fb2e1e2ae42193cc43b527e7857cfb0e64d4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:41:40 2016 +0200

    backport: re PR rtl-optimization/70222 (Test miscompiled with -O1)
    
            Backported from mainline
            2016-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/70222
            * combine.c (simplify_shift_const_1): For A >> B >> C LSHIFTRT
            optimization if mode is different from result_mode, queue up masking
            of the result in outer_op.  Formatting fix.
    
            * gcc.c-torture/execute/pr70222-1.c: New test.
            * gcc.c-torture/execute/pr70222-2.c: New test.
    
    From-SVN: r234563

commit f3db380df4a76d682702aa49ab9ef1dea8d8621c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:40:50 2016 +0200

    backport: re PR tree-optimization/70169 (ICE at -O1 and above on x86_64-linux-gnu in gen_lsm_tmp_name, at tree-ssa-loop.c:791)
    
            Backported from mainline
            2016-03-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/70169
            * tree-ssa-loop.c (gen_lsm_tmp_name): Handle FUNCTION_DECL and
            LABEL_DECL like VAR_DECL.  Emit nothing instead of gcc_unreachable
            for unknown codes.
    
            * gcc.dg/pr70169.c: New test.
    
    From-SVN: r234562

commit dda6eb90105ec7584ab42993bb2e8e1a376f1481
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:39:58 2016 +0200

    backport: re PR tree-optimization/70152 (gcc ICE at -O3 and above on valid code on x86_64-linux-gnu in "replace_uses_by")
    
            Backported from mainline
            2016-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/70152
            * tree-sra.c (replace_removed_params_ssa_names): Copy over
            SSA_NAME_OCCURS_IN_ABNORMAL_PHI from old_name to new_name.
    
            * gcc.dg/pr70152.c: New test.
    
    From-SVN: r234561

commit 1b054adbf5c48629cb143284a542fd1afb3e2950
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:39:20 2016 +0200

    backport: re PR target/70062 (ICE: in decide_alg, at config/i386/i386.c:26173 with -mmemcpy-strategy=libcall)
    
            Backported from mainline
            2016-03-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/70062
            * config/i386/i386.c (decide_alg): Add RECUR argument.  Revert
            2016-02-22 changes, instead don't recurse if RECUR is already true.
            Don't change *dynamic_check if RECUR.  Adjust recursive caller
            to pass true to the new argument.
            (ix86_expand_set_or_movmem): Adjust decide_alg caller.
    
            * gcc.target/i386/pr70062.c: New test.
    
            2016-02-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69888
            * config/i386/i386.c (decide_alg): Ensure we don't recurse with
            identical arguments.  Formatting and spelling fixes.
    
            * gcc.target/i386/pr69888.c: New test.
    
    From-SVN: r234560

commit a99c6fdb44a6d36ea35116c5dd4b353aa066edd7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:38:21 2016 +0200

    backport: re PR target/70028 (Error: operand size mismatch for `kmovw' (wrong assembly generated) with -mavx512bw -masm=intel)
    
            Backported from mainline
            2016-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/70028
            * config/i386/i386.md (kmovw): Move m constraint to 2nd alternative.
            (*movhi_internal): Put mask moves from and to memory separately
            from moves from/to GPRs.
    
            * gcc.target/i386/pr70028.c: New test.
    
    From-SVN: r234558

commit ae28fe00182592137ee903434a54021b4641bcb9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:35:50 2016 +0200

    backport: re PR target/69969 (Function attribute no-vsx)
    
            Backported from mainline
            2016-02-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69969
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Don't
            complain about -mallow-movmisalign without -mvsx if
            TARGET_ALLOW_MOVMISALIGN was not set explicitly.
    
            * gcc.target/powerpc/pr69969.c: New test.
    
    From-SVN: r234556

commit a0803d1cbe2ca95682095b9c1b04329ff530f524
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:34:48 2016 +0200

    backport: re PR rtl-optimization/69891 (wrong code with -mstringop-strategy=libcall @ i686)
    
            Backported from mainline
            2016-02-26  Jakub Jelinek  <jakub@redhat.com>
                        Eric Botcazou  <ebotcazou@adacore.com>
    
            PR rtl-optimization/69891
            * dse.c (scan_insn): If we can't figure out memset arguments
            or they are non-constant, call clear_rhs_from_active_local_stores.
    
            * gcc.target/i386/pr69891.c: New test.
    
    From-SVN: r234555

commit 8526d55665f5836122708fe8b25d57f741e7b03c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:33:42 2016 +0200

    backport: re PR debug/69705 (segfault in libgomp.fortran/task1.f90 with -flto -fno-use-linker-plugin -fno-toplevel-reorder -O1 -g)
    
            Backported from mainline
            2016-02-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/69705
            * dwarf2out.c (gen_variable_die): Work around buggy LTO
            - allow NULL decl for Fortran DW_TAG_common_block variables.
    
    From-SVN: r234554

commit a6f4d30c0d04a5448757da23e12c1756f5a4cb50
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:33:02 2016 +0200

    backport: re PR c++/69826 (problem with cilkplus pragma and preprocessor variable)
    
            Backported from mainline
            2016-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/69826
            * c-pragma.c (c_pp_lookup_pragma): Handle PRAGMA_CILK_GRAINSIZE.
            (init_pragma): Register PRAGMA_CILK_GRAINSIZE even for
            flag_preprocess_only.
    
            * c-c++-common/cilk-plus/CK/pr69826-1.c: New test.
            * c-c++-common/cilk-plus/CK/pr69826-2.c: New test.
    
    From-SVN: r234553

commit 9772c916700305cd8f8b1bca5fa4ecbeb14f6a39
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:32:08 2016 +0200

    backport: re PR middle-end/69838 (Lra deletes EH_REGION)
    
            Backported from mainline
            2016-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/69838
            * lra.c (lra_process_new_insns): If non-call exceptions are enabled,
            call copy_reg_eh_region_note_forward on before and/or after sequences
            and remove note from insn if it no longer can throw.
    
    From-SVN: r234552

commit 118b5e43bb7cab48071bfc9a367c4ff158cfc820
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:31:21 2016 +0200

    backport: re PR c++/67767 (-Wsuggest-attribute=noreturn suggests noreturn for function which already has noreturn and cold.)
    
            Backported from mainline
            2016-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/67767
            * parser.c (cp_parser_std_attribute_spec_seq): Don't assume
            attr_spec is always single element chain, chain all the attributes
            properly together in the right order.
    
            * g++.dg/cpp0x/pr67767.C: New test.
    
    From-SVN: r234551

commit a7a74ac9195d6be17d88793e563ae2e125dc80be
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:30:40 2016 +0200

    backport: re PR tree-optimization/69802 (gcc ICE at -O1 and above  on valid code on x86_64-linux-gnu with “seg fault”)
    
            Backported from mainline
            2016-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/69802
            * tree-ssa-reassoc.c (update_range_test): If op is
            SSA_NAME_IS_DEFAULT_DEF, give up unless tem is a positive
            op == 1 test of precision 1 integral op, otherwise handle
            that case as op itself.  Fix up formatting.
            (optimize_range_tests_to_bit_test, optimize_range_tests): Fix
            up formatting.
    
            * gcc.dg/pr69802.c: New test.
    
    From-SVN: r234550

commit 1233a69f6d42614aed24322836f6d83bef71a7e0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:29:47 2016 +0200

    backport: re PR c++/69797 (ICE on invalid code on x86_64-linux-gnu in operator[], at vec.h:714)
    
            Backported from mainline
            2016-02-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/69797
            * c-common.c (sync_resolve_size): Diagnose too few arguments
            even when params is non-NULL empty vector.
    
            * c-c++-common/pr69797.c: New test.
    
    From-SVN: r234549

commit 141504091c637f346d418f1ee7576922a283b76e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:28:24 2016 +0200

    backport: re PR bootstrap/69885 (ICE in maybe_legitimize_operand, at optabs.c:6903 on m68k-linux-gnu)
    
            Backported from mainline
            2016-02-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69885
            * gcc.dg/pr69885.c: New test.
    
            2016-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/69764
            PR rtl-optimization/69771
            * optabs.c (expand_binop): Ensure for shift optabs invalid CONST_INT
            op1 is valid for GET_MODE_INNER (mode) and force it into a reg.
    
            2016-02-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/69764
            PR rtl-optimization/69771
            * optabs.c (expand_binop_directly): For shift_optab_p, force
            convert_modes with VOIDmode if xop1 has VOIDmode.
    
            * c-c++-common/pr69764.c: New test.
            * gcc.dg/torture/pr69771.c: New test.
    
    From-SVN: r234548

commit 0294b65bb342a15c587f3ee002419b0d837e0675
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Mar 30 14:27:12 2016 +0200

    backport: re PR ipa/68672 (g++.dg/torture/pr68470.C: ICE: cannot update SSA form: statement uses released SSA name)
    
            Backported from mainline
            2016-02-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/68672
            * ipa-split.c (split_function): Compute retval early in all cases
            if split_part_return_p and return_bb is not EXIT.  Remove all
            clobber stmts and reset all debug stmts that refer to SSA_NAMEs
            defined in split part, except if it is retval, in that case replace
            the old retval with the lhs of the call to the split part.
    
            * g++.dg/ipa/pr68672-1.C: New test.
            * g++.dg/ipa/pr68672-2.C: New test.
            * g++.dg/ipa/pr68672-3.C: New test.
    
    From-SVN: r234547

commit eae31798d3b200ae66c178c19984f1b9190cee04
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Mar 30 11:06:36 2016 +1030

    [RS6000] PR70052, ICE compiling _Decimal128 test case
    
    gcc/
            PR target/70052
            * config/rs6000/constraints.md (j): Simplify.
            * config/rs6000/predicates.md (easy_fp_constant): Exclude
            decimal float 0.D.
            * config/rs6000/rs6000.md (zero_fp): New mode_attr.
            (mov<mode>_hardfloat, mov<mode>_hardfloat32, mov<mode>_hardfloat64,
             mov<mode>_64bit_dm, mov<mode>_32bit): Use zero_fp in place of j
            in all constraint alternatives.
            (movtd_64bit_nodm): Delete "j" constraint alternative.
    gcc/testsuite/
            * gcc.dg/dfp/pr70052.c: New test.
    
    From-SVN: r234543

commit 2d3f36ea4f6eea61a261b3bea6d037f38165d1ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 30 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r234541

commit 65ce754b8859273e4d828ce5d00be89339672afa
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Mar 29 13:28:34 2016 +0000

    [ARM][5 Backport] PR target/69875 Fix atomic_loaddi expansion
    
            PR target/69875
            * config/arm/arm.h (TARGET_HAVE_LPAE): Define.
            * config/arm/unspecs.md (VUNSPEC_LDRD_ATOMIC): New value.
            * config/arm/sync.md (arm_atomic_loaddi2_ldrd): New pattern.
            (atomic_loaddi_1): Delete.
            (atomic_loaddi): Rewrite expander using the above changes.
    
            * gcc.target/arm/atomic_loaddi_acquire.x: New file.
            * gcc.target/arm/atomic_loaddi_relaxed.x: Likewise.
            * gcc.target/arm/atomic_loaddi_seq_cst.x: Likewise.
            * gcc.target/arm/atomic_loaddi_1.c: New test.
            * gcc.target/arm/atomic_loaddi_2.c: Likewise.
            * gcc.target/arm/atomic_loaddi_3.c: Likewise.
            * gcc.target/arm/atomic_loaddi_4.c: Likewise.
            * gcc.target/arm/atomic_loaddi_5.c: Likewise.
            * gcc.target/arm/atomic_loaddi_6.c: Likewise.
            * gcc.target/arm/atomic_loaddi_7.c: Likewise.
            * gcc.target/arm/atomic_loaddi_8.c: Likewise.
            * gcc.target/arm/atomic_loaddi_9.c: Likewise.
    
    From-SVN: r234521

commit 63ecd76643ed4f9e0a6456eeb7a3bf06bcf73a29
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Mar 29 13:14:59 2016 +0000

    [ARM] Split out armv7ve effective target check
    
            Backport from mainline
            2016-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * lib/target-supports.exp: Remove v7ve entry from loop
            creating effective target checks.
            (check_effective_target_arm_arch_v7ve_ok): New procedure.
            (add_options_for_arm_arch_v7ve): Likewise.
    
    From-SVN: r234518

commit 31bd561a0bc8cdd8e858ae2d57d0e6db3b2dba91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 29 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234514

commit cdcd3d44373749a64c76e91f9a4f1f5582ab6831
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Mon Mar 28 18:29:14 2016 +0200

    re PR fortran/70397 (ice while allocating ultimate polymorphic)
    
    gcc/fortran/ChangeLog:
    
    2016-03-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70397
            * trans-expr.c (gfc_class_len_or_zero_get): Add function to return a
            constant zero tree, when the class to get the _len component from is
            not unlimited polymorphic.
            (gfc_copy_class_to_class): Use the new function.
            * trans.h: Added interface of new function gfc_class_len_or_zero_get.
    
    gcc/testsuite/ChangeLog:
    
    2016-03-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70397
            * gfortran.dg/unlimited_polymorphic_25.f90: New test.
            * gfortran.dg/unlimited_polymorphic_26.f90: New test.
    
    From-SVN: r234507

commit 9dc443e6ce6ad1f36e8c5562ab6e880b7a4a7244
Author: Alessandro Fanfarillo <afanfa@gcc.gnu.org>
Date:   Mon Mar 28 04:17:43 2016 -0600

    STOP managed by external library when coarrays are used
    
    From-SVN: r234503

commit 8a7c025d0e38cd77d709a8741998cdeae9e5b91d
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Mon Mar 28 08:01:56 2016 +0000

    re PR target/70406 (ICE: in extract_insn, at recog.c:2287 (unrecognizable insn) with -mtune=pentium2 -mavx512f)
    
    PR target/70406.
    
    gcc/
             * config/i386/i386.md (define_split, andn): Fix modes.
    
    gcc/testsuite/
             * gcc.target/i386/pr70406.c: New test.
    
    From-SVN: r234501

commit 39b0011ba50a237f95c74281a9fce71492725b6e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234498

commit 297a39b703aeb90f012fb2521db0389336e3b018
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Mar 27 10:00:23 2016 +0000

    decl.c (components_to_record): Add special case for single field with representation clause at offset 0.
    
            * gcc-interface/decl.c (components_to_record): Add special case for
            single field with representation clause at offset 0.
    
    From-SVN: r234495

commit c981566ba9398133d3b5b4703bca60bd83d05835
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 27 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r234492

commit 4c17c14f6040e7e40b392fc0e7f5f263ae6269fc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 26 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234488

commit 09fde8085caf00a73277fa7bdff3b6c2f4f3666a
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Mar 25 01:00:40 2016 +0000

    re PR target/70319 (FAIL: gcc.dg/sso/q2.c   -O1 -fno-inline  execution test)
    
            PR target/70319
            * config/pa/pa.md (bswapdi2): Use a scratch register.
    
    From-SVN: r234476

commit 0b0e823e51a67497f3fd90affe2c7da3a1cb0b70
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 25 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234473

commit b6b358ed8a9066ae12d4c1cb6ee6ab391f7b0968
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 24 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234446

commit 0895cf01eebbdf82bbb05557c8f5c128bf4d3591
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Mar 23 12:03:17 2016 +0000

    Skip gcc.target/sparc/20151219-1.c in 64-bit mode
    
            Backport from mainline
            2016-01-06  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc.target/sparc/20151219-1.c: Skip in 64-bit mode.
    
    From-SVN: r234424

commit faed8dee5cd95c755197d4177e11c4ea0888f15a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 23 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234412

commit f78c731284df3c77fbec57151bea6cfb01072bf7
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 22 12:30:49 2016 +0100

    Skip static ctors/dtors in IPA ICF (PR ipa/70306)
    
            * gcc.dg/ipa/pr70306.c: New test.
            * ipa-icf.c (sem_function::parse): Skip static
            constructors and destructors.
    
    From-SVN: r234397

commit d8597ac7eb9eeabc5f356e1d4c0d732ca5006312
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Tue Mar 22 11:13:44 2016 +0000

    re PR target/70325 (ICE on __builtin_ia32_storedquqi256_mask)
    
    PR target/70325.
    
    gcc/
            * config/i386/i386.c (def_builtin): Handle
            OPTION_MASK_ISA_AVX512VL to be and-ed with other
            bits.
            (const struct builtin_description bdesc_special_args[]):
            Remove duplicate ISA bits.
    gcc/testsuite/
            * gcc.target/i386/pr70325.c: New test.
    
    From-SVN: r234396

commit 37bc8b493a11553fdf59ea0d0ccd04882f6f788b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 22 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234388

commit 9e0225cc7265585603f8c63bcec109d014d16fa2
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Mar 21 21:05:53 2016 +0100

    re PR target/70327 (ICE: in extract_insn, at recog.c:2287 (unrecognizable insn) with -mavx512ifma and v4ti argument)
    
            PR target/70327
            * config/i386/i386.md (movxi): Use ix86_expand_vector_move instead
            of ix86_expand_move.
            (movoi): Ditto.
            (movti): Use general_operand for operand 1 predicate.
    
    testsuite/ChangeLog:
    
            PR target/70327
            * gcc.target/i386/pr70327.c: New test.
    
    From-SVN: r234381

commit 0ba430f7bea7e52fc404c1c485a78835ae51ff97
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Mar 21 16:05:37 2016 +0000

    Backport "Set dump_file to NULL in cgraph_node::get_body"
    
    2016-03-21  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-03-18  Tom de Vries  <tom@codesourcery.com>
    
            PR ipa/70269
            * cgraph.c (cgraph_node::get_body): Set dump_file to NULL after save.
    
            * gcc.dg/pr70269.c: New test.
    
    From-SVN: r234375

commit d154216f3394062fc4fc33c29f17325307444bdd
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Mar 21 16:05:28 2016 +0000

    Backport "Fix fdump-ipa-all-graph"
    
    2016-03-21  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-03-18  Tom de Vries  <tom@codesourcery.com>
    
            * gcc.dg/pr70161-2.c: New test.
            * gcc.dg/pr70161.c: New test.
    
            2016-03-15  Tom de Vries  <tom@codesourcery.com>
    
            PR ipa/70161
            * cgraph.c (cgraph_node::get_body): Save, reset and restore
            dump_file_name.
            * passes.c (execute_one_ipa_transform_pass): Add missing argument to
            execute_function_dump.
            (execute_one_pass): Don't dump function if it will be dumped after ipa
            transform.
    
    From-SVN: r234374

commit fb17d2e0830303f1db0e11749b7fb46b77769d48
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Mar 21 12:09:48 2016 +0000

    re PR c++/70209 (ICE in strip_typedefs, at cp/tree.c:1377)
    
            PR c++/70209
            * tree.c (strip_typedefs): Call strip_typedefs again on the
            DECL_ORIGINAL_TYPE result.
    
            * g++.dg/ext/attribute-may-alias-4.C: New test.
    
    From-SVN: r234367

commit d346ed8eed114e373c7ce8d0852465e0a5d85068
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Mar 21 11:18:33 2016 +0000

    Save call-clobbered registers in _mcount on 32-bit Solaris/x86 (PR target/38239)
    
            Backport from mainline
            2016-03-16  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/38239
            * config/sol2/gmon.c [__i386__] (_mcount): Save and restore
            call-clobbered registers.
            (internal_mcount): Remove __i386__ handling.
    
    From-SVN: r234365

commit 59d731f20f141f8e56485e269c326bae8d3650ec
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Mon Mar 21 10:53:50 2016 +0000

    re PR target/70293 ([ICE, AVX-512] Wrong reg constraints in vec_dup)
    
    PR target/70293.
    
    gcc/
            * config/i386 (define_insn "*vec_dup<mode>"/AVX2): Block
            third alternative for AVX-512VL target,
    gcc/testsuite/
            * gcc.target/i386/pr70293.c: New test.
    
    From-SVN: r234364

commit a14f41d5d06e95a6d40459cef3e5f95eedd57acd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 21 00:16:21 2016 +0000

    Daily bump.
    
    From-SVN: r234357

commit b301d0ea5710874107e39f404e87bb753d488718
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 20 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234354

commit b4f745c931598af41f513a2a403377395ac220b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 19 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r234349

commit 907aa8270d0cd2e00e9ef676cb47af15ed509a3a
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 18 16:17:04 2016 -0400

    re PR c++/70139 (-fno-elide-constructor makes static std::regex to throw)
    
            PR c++/70139
            * constexpr.c (cxx_eval_call_expression): Don't shortcut trivial copy.
    
    From-SVN: r234346

commit d38d879aba5136acfd024d814bd8a0d5338be423
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Fri Mar 18 12:05:47 2016 +0000

    g++.dg/ext/pr57735.C should not run if the testsuite is explicitly passing -mfloat-abi=hard
    
    2016-03-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
        Backport from mainline
        gcc/testsuite/
        2015-06-09  James Greenhalgh  <james.greenhalgh@arm.com>
    
        * g++.dg/ext/pr57735.C: Do not override -mfloat-abi directives
        passed by the testsuite driver.
    
    From-SVN: r234326

commit 0ae9334aa7798f9b2e1baeb1e59a69660387a5cd
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Fri Mar 18 11:05:42 2016 +0000

    backport: no-volatile-in-it.c: Skip if -mcpu is overriden.
    
    2016-03-18  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
        Backport from mainline
        2015-07-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
        * gcc.target/arm/no-volatile-in-it.c: Skip if -mcpu is overriden.
    
    From-SVN: r234324

commit 1daf837f31258e4f65c44b2bb97f79f7c358c261
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 18 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234314

commit 7602f7fd5fe766da7516cc01a43f9b5fe3cba89f
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Mar 17 22:55:38 2016 +0000

    re PR target/70188 (gcc 4.9+ miscompiles code on hppa)
    
            PR target/70188
            * config/pa/constraints.md: Revert 2015-02-13 change.  Use
            define_constraint for "Q" and "T" constraints.
    
    From-SVN: r234310

commit dc6a63d475ee4367389fd25799a1b45b5aa37a0d
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Thu Mar 17 17:02:11 2016 +0000

    backport: simd.exp: Skip all tests if no arm_neon_ok effective target support.
    
    2016-03-17  Andre Vieira  <Andre.SimoesDiasVieira@arm.com>
    
        Backport from mainline.
        2015-05-21  Sandra Loosemore  <sandra@codesourcery.com>
    
        * gcc.target/arm/simd/simd.exp: Skip all tests if no arm_neon_ok
        effective target support.  If no arm_neon_hw support, do not attempt
        to execute the tests; only compile them.
        * gcc.target/arm/simd/vextf32_1.c: Remove explicit "dg-do run"
        and "dg-require-effective-target arm_neon_ok".
        * gcc.target/arm/simd/vextp16_1.c: Likewise.
        * gcc.target/arm/simd/vextp64_1.c: Likewise.
        * gcc.target/arm/simd/vextp8_1.c: Likewise.
        * gcc.target/arm/simd/vextQf32_1.c: Likewise.
        * gcc.target/arm/simd/vextQp16_1.c: Likewise.
        * gcc.target/arm/simd/vextQp64_1.c: Likewise.
        * gcc.target/arm/simd/vextQp8_1.c: Likewise.
        * gcc.target/arm/simd/vextQs16_1.c: Likewise.
        * gcc.target/arm/simd/vextQs32_1.c: Likewise.
        * gcc.target/arm/simd/vextQs64_1.c: Likewise.
        * gcc.target/arm/simd/vextQs8_1.c: Likewise.
        * gcc.target/arm/simd/vextQu16_1.c: Likewise.
        * gcc.target/arm/simd/vextQu32_1.c: Likewise.
        * gcc.target/arm/simd/vextQu64_1.c: Likewise.
        * gcc.target/arm/simd/vextQu8_1.c: Likewise.
        * gcc.target/arm/simd/vexts16_1.c: Likewise.
        * gcc.target/arm/simd/vexts32_1.c: Likewise.
        * gcc.target/arm/simd/vexts64_1.c: Likewise.
        * gcc.target/arm/simd/vexts8_1.c: Likewise.
        * gcc.target/arm/simd/vextu16_1.c: Likewise.
        * gcc.target/arm/simd/vextu32_1.c: Likewise.
        * gcc.target/arm/simd/vextu64_1.c: Likewise.
        * gcc.target/arm/simd/vextu8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16p8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16qp8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16qs8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16qu8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16s8_1.c: Likewise.
        * gcc.target/arm/simd/vrev16u8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32p16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32p8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qp16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qp8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qs16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qs8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qu16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32qu8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32s16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32s8_1.c: Likewise.
        * gcc.target/arm/simd/vrev32u16_1.c: Likewise.
        * gcc.target/arm/simd/vrev32u8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64f32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64p16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64p8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qf32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qp16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qp8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qs16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qs32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qs8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qu16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qu32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64qu8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64s16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64s32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64s8_1.c: Likewise.
        * gcc.target/arm/simd/vrev64u16_1.c: Likewise.
        * gcc.target/arm/simd/vrev64u32_1.c: Likewise.
        * gcc.target/arm/simd/vrev64u8_1.c: Likewise.
        * gcc.target/arm/simd/vtrnf32_1.c: Likewise.
        * gcc.target/arm/simd/vtrnp16_1.c: Likewise.
        * gcc.target/arm/simd/vtrnp8_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqf32_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqp16_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqp8_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqs16_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqs32_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqs8_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqu16_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqu32_1.c: Likewise.
        * gcc.target/arm/simd/vtrnqu8_1.c: Likewise.
        * gcc.target/arm/simd/vtrns16_1.c: Likewise.
        * gcc.target/arm/simd/vtrns32_1.c: Likewise.
        * gcc.target/arm/simd/vtrns8_1.c: Likewise.
        * gcc.target/arm/simd/vtrnu16_1.c: Likewise.
        * gcc.target/arm/simd/vtrnu32_1.c: Likewise.
        * gcc.target/arm/simd/vtrnu8_1.c: Likewise.
        * gcc.target/arm/simd/vuzpf32_1.c: Likewise.
        * gcc.target/arm/simd/vuzpp16_1.c: Likewise.
        * gcc.target/arm/simd/vuzpp8_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqf32_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqp16_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqp8_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqs16_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqs32_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqs8_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqu16_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqu32_1.c: Likewise.
        * gcc.target/arm/simd/vuzpqu8_1.c: Likewise.
        * gcc.target/arm/simd/vuzps16_1.c: Likewise.
        * gcc.target/arm/simd/vuzps32_1.c: Likewise.
        * gcc.target/arm/simd/vuzps8_1.c: Likewise.
        * gcc.target/arm/simd/vuzpu16_1.c: Likewise.
        * gcc.target/arm/simd/vuzpu32_1.c: Likewise.
        * gcc.target/arm/simd/vuzpu8_1.c: Likewise.
        * gcc.target/arm/simd/vzipf32_1.c: Likewise.
        * gcc.target/arm/simd/vzipp16_1.c: Likewise.
        * gcc.target/arm/simd/vzipp8_1.c: Likewise.
        * gcc.target/arm/simd/vzipqf32_1.c: Likewise.
        * gcc.target/arm/simd/vzipqp16_1.c: Likewise.
        * gcc.target/arm/simd/vzipqp8_1.c: Likewise.
        * gcc.target/arm/simd/vzipqs16_1.c: Likewise.
        * gcc.target/arm/simd/vzipqs32_1.c: Likewise.
        * gcc.target/arm/simd/vzipqs8_1.c: Likewise.
        * gcc.target/arm/simd/vzipqu16_1.c: Likewise.
        * gcc.target/arm/simd/vzipqu32_1.c: Likewise.
        * gcc.target/arm/simd/vzipqu8_1.c: Likewise.
        * gcc.target/arm/simd/vzips16_1.c: Likewise.
        * gcc.target/arm/simd/vzips32_1.c: Likewise.
        * gcc.target/arm/simd/vzips8_1.c: Likewise.
        * gcc.target/arm/simd/vzipu16_1.c: Likewise.
        * gcc.target/arm/simd/vzipu32_1.c: Likewise.
        * gcc.target/arm/simd/vzipu8_1.c: Likewise.
    
    From-SVN: r234298

commit 3963d6932fbb2186051b48537e158b148982f0c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 17 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r234275

commit 9459cffee1fa9af372875f7425201e6c379ac93d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 16 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r234244

commit 64667682d6063460b218af872ef86dca60a869e1
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Mar 16 08:34:54 2016 +1030

    Fix thinko in indirect_jump_optimize
    
            PR rtl-optimization/69195
            PR rtl-optimization/47992
            * ira.c (indirect_jump_optimize): Ignore artificial defs.
            Add comments.
    
    From-SVN: r234236

commit 16a96fa4e370d18e59520c78ab2715fb06c98a07
Author: Bernd Schmidt <bernds@redhat.com>
Date:   Tue Mar 15 03:14:38 2016 +0000

    Backport PR69941 patch from mainline.
    
            PR rtl-optimization/69941
            * postreload.c (reload_combine_recognize_pattern): Ensure all uses of
            the reg share its mode.
    
            PR rtl-optimization/69941
            * gcc.dg/torture/pr69941.c: New test.
    
    From-SVN: r234210

commit 5009be00e2c360806d29e235490cca13df36265e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 15 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234204

commit 889f034cacab75f520ac0b75f0bbdbb5b2798a4e
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Mar 14 18:06:45 2016 +0000

    re PR target/70131 (PowerPC ISA 2.07 is inefficient at doint (float)(int)x.)
    
    [gcc]
    2016-03-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/70131
            * config/rs6000/rs6000.md (round32<mode>2_fprs): Do not do the
            optimization if we have direct move.
            (roundu32<mode>2_fprs): Likewise.
    
    [gcc/testsuite]
    2016-03-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/70131
            * gcc.target/powerpc/ppc-round2.c: New test.
    
    From-SVN: r234186

commit 616a94a9c34ebbab511c14d5c6d52eb626c17998
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Mar 14 09:56:47 2016 +0000

    Only assume 4-byte stack alignment on Solaris/x86 (PR target/62281)
    
            Backport from mainline
            2016-03-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/62281
            * config/i386/sol2.h (STACK_REALIGN_DEFAULT): Define.
    
    From-SVN: r234179

commit 16b61dca7a7b31c19af0e5135112fd2a262f8d39
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 14 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234174

commit badf183b3ce85b854e3d0cbdbc98682aef0094c7
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Mon Mar 14 00:22:15 2016 +0100

    re PR fortran/45076 ([OOP] gfortran.dg/dynamic_dispatch_6.f03 ICEs with -fprofile-use)
    
    2016-03-13  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/45076
            gfortran.dg/prof/prof.exp: New script.
            gfortran.dg/prof/dynamic_dispatch_6.f03: New test.
    
    From-SVN: r234172

commit 3e4a6da2ed269fe954ef93df2ef326b1e589f848
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 13 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234165

commit b958b335db2a53fbe41090813663ed4ca8c13b9d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 12 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234157

commit 32932262c006432ba627131fd1ed6ce812519cfb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 11 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r234129

commit a90c1b6167563245d6b6dbcc3f995e6e2b5ee07c
Author: Ulrich Weigand <uweigand@de.ibm.com>
Date:   Thu Mar 10 23:59:20 2016 +0000

    re PR target/70168 (Wrong code generation in __sync_val_compare_and_swap on PowerPC)
    
            PR target/70168
            * config/rs6000/rs6000.c (rs6000_expand_atomic_compare_and_swap):
            Handle overlapping retval and newval.
    
    From-SVN: r234127

commit 92ca59a4271143bede76e1415ae198e5786d0fd0
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Mar 10 21:18:14 2016 +1030

    PR69195, Reload confused by invalid reg_equiv
    
    Optimizing indirect jumps to direct jumps, and deleting dead insns can
    lead to changes in register lifetimes, which in turn can result in bad
    reg_equiv info being passed to reload.  So do these tasks before
    calculating reg_equiv info.
    
    gcc/
            PR rtl-optimization/69195
            PR rtl-optimization/47992
            * ira.c (recorded_label_ref): Delete.
            (update_equiv_regs): Return void.
            (indirect_jump_optimize): New function.
            (ira): Call indirect_jump_optimize and delete_trivially_dead_insns
            before regstat_compute_ri.  Don't rebuild_jump_labels here.
    gcc/testsuite/
            * gcc.dg/pr69195.c: New.
            * gcc.dg/pr69238.c: New.
    
    From-SVN: r234102

commit 5dc3c3b3c8c65b9a5b3ad8f74de654f848414792
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 10 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234096

commit 344f495e34a711025eed43906b8cd9ba135eb163
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Mar 9 20:49:58 2016 +0000

    Backport PRs 49630, 54070, 60593, 60795, 61147, 64324, 69423
    
    2016-03-09  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/69423
            * trans-decl.c (create_function_arglist): Deferred character
            length functions, with and without declared results, address
            the passed reference type as '.result' and the local string
            length as '..result'.
            (gfc_null_and_pass_deferred_len): Helper function to null and
            return deferred string lengths, as needed.
            (gfc_trans_deferred_vars): Call it, thereby reducing repeated
            code, add call for deferred arrays and reroute pointer function
            results. Avoid using 'tmp' for anything other that a temporary
            tree by introducing 'type_of_array' for the arrayspec type.
    
    2016-03-09  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/64324
            * resolve.c (check_uop_procedure): Prevent deferred length
            characters from being trapped by assumed length error.
    
            Backport from trunk.
            PR fortran/49630
            PR fortran/54070
            PR fortran/60593
            PR fortran/60795
            PR fortran/61147
            PR fortran/64324
            * trans-array.c (gfc_conv_scalarized_array_ref): Pass decl for
            function as well as variable expressions.
            (gfc_array_init_size): Add 'expr' as an argument. Use this to
            correctly set the descriptor dtype for deferred characters.
            (gfc_array_allocate): Add 'expr' to the call to
            'gfc_array_init_size'.
            * trans.c (gfc_build_array_ref): Expand logic for setting span
            to include indirect references to character lengths.
            * trans-decl.c (gfc_get_symbol_decl): Ensure that deferred
            result char lengths that are PARM_DECLs are indirectly
            referenced both for directly passed and by reference.
            (create_function_arglist): If the length type is a pointer type
            then store the length as the 'passed_length' and make the char
            length an indirect reference to it.
            (gfc_trans_deferred_vars): If a character length has escaped
            being set as an indirect reference, return it via the 'passed
            length'.
            * trans-expr.c (gfc_conv_procedure_call): The length of
            deferred character length results is set TREE_STATIC and set to
            zero.
            (gfc_trans_assignment_1): Do not fix the rse string_length if
            it is a variable, a parameter or an indirect reference. Add the
            code to trap assignment of scalars to unallocated arrays.
            * trans-stmt.c (gfc_trans_allocate): Remove 'def_str_len' and
            all references to it. Instead, replicate the code to obtain a
            explicitly defined string length and provide a value before
            array allocation so that the dtype is correctly set.
            trans-types.c (gfc_get_character_type): If the character length
            is a pointer, use the indirect reference.
    
    2016-03-09  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/69423
            * gfortran.dg/deferred_character_15.f90 : New test.
    
    2016-03-09  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/49630
            * gfortran.dg/deferred_character_13.f90: New test for the fix
            of comment 3 of the PR.
    
            Backport from trunk.
            PR fortran/54070
            * gfortran.dg/deferred_character_8.f90: New test
            * gfortran.dg/allocate_error_5.f90: New test
    
            Backport from trunk.
            PR fortran/60593
            * gfortran.dg/deferred_character_10.f90: New test
    
            Backport from trunk.
            PR fortran/60795
            * gfortran.dg/deferred_character_14.f90: New test
    
            Backport from trunk.
            PR fortran/61147
            * gfortran.dg/deferred_character_11.f90: New test
    
            Backport from trunk.
            PR fortran/64324
            * gfortran.dg/deferred_character_9.f90: New test
    
    From-SVN: r234093

commit c34c838d047050ba5804358760fd1d6a69be6a60
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 9 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r234073

commit e44caa00f35ce7b7167b4410823054ba99469725
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 8 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234054

commit ef55d00e9fe96b98212f32ff09ced90640baa357
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon Mar 7 16:17:49 2016 +0100

    Fix PR 69666 and PR 69920
    
    2016-03-07  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/69666
            PR middle-end/69920
            * tree-sra.c (sra_modify_assign): Do not attempt to create
            default_def replacements for unscalarizable regions.  Do not
            remove loads of uninitialized aggregates to SSA_NAMEs.
    
    testsuite/
            * gcc.dg/torture/pr69932.c: New test.
            * gcc.dg/torture/pr69936.c: Likewise.
    
    From-SVN: r234030

commit 1c94932e9d42d3490a6be119964bde0c843f6d59
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Mar 7 09:43:14 2016 -0500

    re PR c++/67364 ("accessing uninitialized member" error in constexpr context)
    
            PR c++/67364
    
            * constexpr.c (cxx_eval_store_expression): Replace
            CONSTRUCTOR_ELTS in nested CONSTRUCTORs, too.
    
    From-SVN: r234028

commit bf8776a311b8a9324bba6a3dad4a36f598f30514
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Mon Mar 7 08:18:25 2016 +0000

    backport: re PR rtl-optimization/65932 (Linux-3.10.75 on arm926ej-s does not boot due to wrong code generation)
    
    2016-03-07  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline
            2016-02-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/65932
            PR target/67714
            * config/arm/arm.c (arm_new_rtx_costs, MULT case): Properly extract
            the operands of the SIGN_EXTENDs from a SMUL[TB][TB] rtx.
    
    From-SVN: r234019

commit 2606e3baace4b77d2b6333643023bc0838d2a7ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 7 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r234016

commit def586eb55d8ce75c4a3e743ca705202b61b64c3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 6 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r234011

commit 26e43035f46b75f59b9489c618887a1f62183821
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r233993

commit a6d7da222d45e2c1dabbd96e4701e9461895aea5
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 4 17:09:19 2016 -0500

    re PR c++/67364 ("accessing uninitialized member" error in constexpr context)
    
            PR c++/67364
    
            * constexpr.c (cxx_eval_component_reference): Further tweak.
    
    From-SVN: r233983

commit 6c3af4b8fc147b2408040c4f10382fabec5ad5e6
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Mar 4 19:53:58 2016 +0000

    Remove c++98_only on g++.dg/template/typename21.C
    
            Backport from mainline
            * g++.dg/template/typename21.C: Remove c++98_only.
    
    From-SVN: r233978

commit d90fdf4bf9349527ea6d1d7f6b177520500273b1
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Mar 4 19:47:40 2016 +0000

    Replace c++98 with c++98_only
    
            Backport from mainline
            2016-03-04  H.J. Lu  <hongjiu.lu@intel.com>
    
            * g++.dg/template/typename21.C: Replace c++98 with c++98_only.
    
    From-SVN: r233976

commit 84c4e510a6a8f7409c96fcc55ff4b9981138e605
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 4 11:08:06 2016 -0500

    re PR c++/70067 (internal compiler error: in strip_typedefs, at cp/tree.c:1466)
    
            PR c++/70067
    
            * tree.c (strip_typedefs): Handle TYPENAME_TYPE lookup finding the
            same type.
    
    From-SVN: r233974

commit 41d3cf7084f128de2bf4df5a43c546db854bcb32
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Mar 4 15:54:00 2016 +0100

    re PR target/70059 (Invalid codegen on AVX-512 when using _mm512_inserti64x4(x, y, 0))
    
            PR target/70059
            * config/i386/sse.md (vec_set_lo_<mode><mask_name>,
            <extract_type_2>_vinsert<shuffletype><extract_suf_2>_mask): Formatting
            fixes.
            (vec_set_hi_<mode><mask_name>): Likewise.  Swap VEC_CONCAT operands.
    
            * gcc.target/i386/avx512f-pr70059.c: New test.
            * gcc.target/i386/avx512dq-pr70059.c: New test.
    
    From-SVN: r233969

commit 775d670450453cf01cbb1e18cb8bc83136b493ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 4 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r233952

commit 828755c3b0f9b485567668efa0869b295c4884d8
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Mar 3 17:45:27 2016 -0500

    * call.c (build_aggr_conv): Use get_nsdmi.
    
    From-SVN: r233950

commit 9edbe2b5e5cedcc314d8fb917fb3c647cfbf9b9e
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Mar 3 17:45:22 2016 -0500

    re PR c++/51406 ([c++0x] Incorrect result of static_cast to rvalue reference to base class.)
    
            PR c++/51406
    
            * typeck.c (build_static_cast_1): Avoid folding back to lvalue.
    
    From-SVN: r233949

commit 1b6e8e9fe937206d429d8d1a7fc0e7ce7991bfce
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Mar 3 17:45:16 2016 -0500

    re PR c++/67364 ("accessing uninitialized member" error in constexpr context)
    
            PR c++/67364
    
            * constexpr.c (cxx_eval_component_reference): Just return an empty
            CONSTRUCTOR for an empty class.
    
    From-SVN: r233948

commit 0fa002d10c50bd7c23470b6a8436a5ceab1d5d2f
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Thu Mar 3 13:52:57 2016 +0000

    backport: Fix "#pragma GCC pop_options"
    
    2016-03-03  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
        Backport from mainline
        2015-10-14  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
        Fix "#pragma GCC pop_options"
    
        gcc/ChangeLog
    
        * targhooks.c (default_target_option_pragma_parse): Do not warn if
        called on behalf of "#pragma GCC pop_options".
    
        gcc/testsuite/ChangeLog
        * gcc.dg/pragma-pop_options-1.c: New test.
    
    From-SVN: r233939

commit 2319dc8d42bdeee20ef73b2fb5161e4fa477ce0f
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Mar 3 09:56:28 2016 +0000

    Invoke gdb with -batch to avoid prompts
    
            * lib/gcc-gdb-test.exp (gdb-test): Make log message match command.
            Invoke gdb with -batch.
            * lib/gcc-simulate-thread.exp (simulate-thread): Likewise.
    
    From-SVN: r233931

commit ae74d1d313a1d90da4b83ab4be9772b0c9451e44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 3 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233924

commit 8c736dd1737cf8e3e96e421647e2afdd9f2be352
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Wed Mar 2 12:55:55 2016 +0000

    Fix g++.dg/cpp0x/constexpr-array13.C
    
            Backport from mainline
            2015-11-25  Paolo Carlini  <paolo.carlini@oracle.com>
    
            * g++.dg/cpp0x/constexpr-array13.C: Fix.
    
    From-SVN: r233903

commit 37f5b437b488badc538a18ec4f6e75bb8d0fef6a
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed Mar 2 07:58:59 2016 +0000

    * gcc.target/i386/pr70007.c: Tweak.
    
    From-SVN: r233895

commit 8fe1a6a83d110be19ab3156493050fb48cde6c69
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Wed Mar 2 02:46:19 2016 +0000

    Fix SFINAE with calls to mark_used.
    
    2015-04-16  Paolo Carlini  <paolo.carlini@oracle.com>
    
            * call.c (build_op_delete_call, build_over_call): Check mark_used
            return value.
            * class.c (resolve_address_of_overloaded_function): Likewise.
            * decl.c (cxx_maybe_build_cleanup): Likewise.
            * pt.c (gen_elem_of_pack_expansion_instantiation, tsubst_baselink,
            tsubst_qualified_id, tsubst_copy, tsubst_copy_and_build): Likewise.
            * rtti.c (build_dynamic_cast_1): Likewise.
            * semantics.c (process_outer_var_ref): Likewise.
            * typeck.c (build_class_member_access_expr,
            cp_build_function_call_vec, cp_build_addr_expr_1): Likewise.
    
    From-SVN: r233884

commit 3feee0768051d1fc7f313cbc3964094a50ced274
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Mar 1 21:46:12 2016 -0500

    re PR c++/69261 (Copying char arrays during constexpr evaluation does not work reliably)
    
            PR c++/69261
    
            * constexpr.c (find_array_ctor_elt): Handle splitting RANGE_EXPR.
    
    From-SVN: r233883

commit ae521b7a344883021b422d7a765d855853f70252
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Mar 2 02:45:45 2016 +0000

    re PR c++/68087 (ICE with constexpr in array with negative index)
    
            PR c++/68087
    
    2016-03-01  Markus Trippelsdorf  <markus@trippelsdorf.de>
                Paolo Carlini  <paolo.carlini@oracle.com>
    /cp
            * constexpr.c (cxx_eval_array_reference): Use tree_fits_shwi_p before
            tree_to_shwi to avoid ICEs.
    
    Co-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>
    
    From-SVN: r233882

commit cbc2b50fabcd7144e8348519f701d21266fdf220
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Mar 1 21:45:04 2016 -0500

    re PR c++/67104 (Constant expression factory function initializes std::array with static storage duration strangely)
    
            PR c++/67104
    
            * constexpr.c (array_index_cmp, find_array_ctor_elt): New.
            (cxx_eval_array_reference, cxx_eval_store_expression): Use them.
    
    From-SVN: r233881

commit 8dd00747e3a104fa5d03313a7eb2b95f2a0fbb41
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Mar 1 21:44:58 2016 -0500

    re PR c++/51489 (constexpr not working consistently)
    
            PR c++/51489
    
            * constexpr.c (cxx_eval_binary_expression): Don't VERIFY_CONSTANT
            the operands.
    
    From-SVN: r233880

commit 9983b300c012a24c27cde527f1eaba53d95ff485
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Mar 1 21:44:46 2016 -0500

    re PR c++/69995 ([C++14] Invalid result when evaluating constexpr function)
    
            PR c++/69995
    
            * constexpr.c (cxx_eval_call_expression): Unshare arg.
            (cxx_eval_constant_expression) [DECL_EXPR]: Unshare init.
            [TARGET_EXPR]: Unshare init.
    
    From-SVN: r233879

commit 70a8246f0eb845a628de93130e655a69022ec829
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 2 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r233873

commit fe6db0c9b50fb5f79c1e7b009b65a77501a7e28d
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue Mar 1 22:34:40 2016 +0000

    re PR rtl-optimization/70007 (wrong code with -mbmi2)
    
            PR rtl-optimization/70007
            * gcse.c (compute_ld_motion_mems): Tidy up and also invalidate memory
            references present in REG_EQUAL notes attached to non-SET patterns.
    
    From-SVN: r233868

commit a9afd61192f390a3334d643090b411058491c49f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 1 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r233831

commit ecd1156d259c2273d773e55de7d63750d6c74e77
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 29 09:49:17 2016 -0500

    re PR c++/69995 ([C++14] Invalid result when evaluating constexpr function)
    
            PR c++/69995
            * constexpr.c (cxx_eval_store_expression): Unshare init.
    
    From-SVN: r233813

commit 1f78ae2b87238ee2095443b3c8a3f2f8718db9f0
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 29 09:49:12 2016 -0500

    re PR c++/65985 (compiler segfault with assert() in constexpr constructor body)
    
            PR c++/65985
            * constexpr.c (build_constexpr_constructor_member_initializers):
            Handle an additional STATEMENT_LIST.
    
    From-SVN: r233812

commit de572954077405ca6c9803d1ad5adfa67fc73f83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 29 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233800

commit 71f80ce52709abbd725d243d2a18615b44effa91
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Feb 28 22:40:06 2016 +0000

    re PR fortran/60126 (Internal compiler error with code using pointer reshaping (gfortran 4.8.2))
    
    2016-02-28  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/60126
            * gfortran.dg/pr60126.f90: New test.
    
    From-SVN: r233798

commit f1a3feaab544e44b7a511f7973de0558cffb40aa
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sun Feb 28 18:54:00 2016 +0000

    Add a test for PR tree-optimization/69989
    
            Backport from mainline
            PR tree-optimization/69989
            * gcc.dg/torture/pr69989.c: New test.
    
    From-SVN: r233794

commit a9f143e0a27e221df407c2d145b5d1a6401107ea
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Feb 28 06:50:27 2016 +0000

    backport: re PR fortran/61156 (Internal compiler error for Fortran files when specifying a file instead of an include directory with -I)
    
    2016-02-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backported from mainline
            PR fortran/61156
            * scanner.c (add_path_to_list): If include path is not a directory,
            issue a fatal error.
    
            * gfortran.dg/include_6.f90: Update test.
    
    From-SVN: r233789

commit df42868b18eb1cb6ae4955a658d5e8790c7035dc
Author: Jeff Law <law@redhat.com>
Date:   Sat Feb 27 23:43:07 2016 -0700

    Revert
            2016-02-26  Richard Biener  <rguenther@suse.de>
                        Jeff Law  <law@redhat.com>
    
            Backport from mainline
            2016-02-26  Richard Biener  <rguenther@suse.de>
                        Jeff Law  <law@redhat.com>
    
            PR tree-optimization/69740
            * cfghooks.c (remove_edge): Request loop fixups if we delete
            an edge that might turn an irreducible loop into a natural
            loop.
    
    
            Revert
            2016-02-26  Richard Biener  <rguenther@suse.de>
                        Jeff Law  <law@redhat.com>
    
            Backport from mainline
            2016-02-26  Richard Biener  <rguenther@suse.de>
                        Jeff Law  <law@redhat.com>
    
            PR tree-optimization/69740
            * gcc.c-torture/compile/pr69740-1.c: New test.
            * gcc.c-torture/compile/pr69740-2.c: New test.
    
    2016-02-26  Richard Biener  <rguenther@suse.de>
    
    From-SVN: r233788

commit 3049c3ad7dbf0d5a72817e5d89c667ff5961c31e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 28 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r233785

commit bc2232f4e1e30d751f8a4236a0faa3664e1e2ab1
Author: Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
Date:   Sat Feb 27 05:11:26 2016 -0700

    Right size for coarray events
    
    From-SVN: r233780

commit 7df03670965c79d7d3c08e25302d1acafeb8bd00
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 27 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r233774

commit c6f571e70f044b422ea8bf86325394aa570e540b
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Feb 26 22:56:02 2016 +0000

    re PR tree-optimization/69740 (gcc ICE at -O2 and above on valid code on x86_64-linux-gnu in "verify_loop_structure")
    
    
            PR tree-optimization/69740
            * cfghooks.c (remove_edge): Request loop fixups if we delete
            an edge that might turn an irreducible loop into a natural
            loop.
    
            PR tree-optimization/69740
            * gcc.c-torture/compile/pr69740-1.c: New test.
            * gcc.c-torture/compile/pr69740-2.c: New test.
    
    
    Co-Authored-By: Jeff Law <law@redhat.com>
    
    From-SVN: r233769

commit 271457aceeb7a3c7ff42695c20a054891235f3fd
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Feb 26 15:29:31 2016 +0000

    p8vector-ldst.c: Adjust to test desired functionality for both 32-bit and 64-bit.
    
    2016-02-26  Michael Meissner <meissner@linux.vnet.ibm.com>
                Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p8vector-ldst.c: Adjust to test desired
            functionality for both 32-bit and 64-bit.
    
    
    Co-Authored-By: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
    
    From-SVN: r233741

commit 4c8b6553a97efd96d943c43ba152a4071bfc1cce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 26 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r233731

commit 8afa56a6e302b50b90db0dfa3beb169e817e785e
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Thu Feb 25 15:33:50 2016 +0000

    backport: Make-lang.in: Invoke gperf with -L C++.
    
    2016-02-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backported from mainline
            2016-02-19  Jakub Jelinek  <jakub@redhat.com>
                        Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            * Make-lang.in: Invoke gperf with -L C++.
            * cfns.gperf: Remove prototypes for hash and libc_name_p
            inlines.
            * cfns.h: Regenerated.
            * except.c (nothrow_libfn_p): Adjust.
    
    From-SVN: r233720

commit b0ef0f8c5d0f082a0b21339000af481715e955da
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Feb 25 09:10:09 2016 -0500

    re PR c++/67364 ("accessing uninitialized member" error in constexpr context)
    
            PR c++/67364
            * constexpr.c (cxx_eval_component_reference): Don't complain about
            unevaluated empty classes.
    
    From-SVN: r233718

commit 5a4ae38855f341f89a7d677291c91022cd916420
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Feb 25 09:10:03 2016 -0500

    re PR c++/68049 (template instantiation involving may_alias defines symbol twice)
    
            PR c++/68049
            * tree.c (strip_typedefs): Use DECL_ORIGINAL_TYPE.
    
    From-SVN: r233717

commit 76d2434b60abfd955b5275873c29862982fb0719
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 11:13:52 2016 +0000

    S/390: Move movstr-2.c into vector subdir.
    
    gcc/testsuite/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-23  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/md/movstr-2.c: Move and rename to ...
            * gcc.target/s390/vector/stpcpy-1.c: ... this one.
    
    From-SVN: r233710

commit eee5ae21899a4ee4e830d1b5aa835fc531125178
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 11:11:57 2016 +0000

    S/390: Turn movstr-1.c into compile only test.
    
    gcc/testsuite/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-23  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/md/movstr-1.c: Turn into compile test.
    
    From-SVN: r233709

commit dcd99fd2c7cde7efdd5d3c93644d10ec01fedb59
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 11:10:37 2016 +0000

    S/390: z13 Add missing commutative operand markers.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vector.md: Add missing commutative operand markers
            to the patterns which qualify for one.
            * config/s390/vx-builtins.md: Likewise.
    
    From-SVN: r233708

commit 0374fa2d36438793d77e62a6fb836fed5418516b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 11:09:21 2016 +0000

    S/390: Add single element vector types to iterators.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vector.md (VI, VI_QHS): Add single element vector
            types to mode iterators.
            (vec_double): ... and mode attribute.
            * config/s390/vx-builtins.md (non_vec_int): Likewise.
    
    From-SVN: r233707

commit 49fc74681b63819a263a22204a67680117074445
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 11:07:54 2016 +0000

    S/390: z13 Change predicates of 128 bit add sub.
    
    So far usage of 128 bit add/sub instruction was rejected if the second
    operand was a constant because the predicate rejected this.
    
    gcc/testsuite/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/int128-1.c: New test.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vector.md ("<ti*>add<mode>3", "<ti*>sub<mode>3"):
            Change the predicate of op2 from nonimmediate to general and let
            reload fix it if necessary.
    
    From-SVN: r233706

commit 5a48c05495242f893471b3dc219eef8c9b33c4c1
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:19:53 2016 +0000

    S/390: Add vec_sub_u128 to vecintrin.h
    
    This adds a missing macro to the vecintrin.h header file.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vecintrin.h (vec_sub_u128): Define missing macro.
    
    From-SVN: r233705

commit 00f113583e6d11de71efc272f7075958b126f4c4
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:13:32 2016 +0000

    S/390: z13 fix mode in vcond expansion
    
    For floating point vector compares the target mode is an integer mode
    which accidently was used as register mode when forcing the compare
    operands into regs.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_expand_vcond): Use the compare operand
            mode.
    
    gcc/testsuite/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-vcond-1.c: New test.
    
    From-SVN: r233704

commit cc06a7c8bc2813b7d7337fe3cb421bd686fee1dc
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:11:56 2016 +0000

    S/390: z13 inline stpcpy implementation.
    
    A handwritten loop for stpcpy using the new z13 vector instructions
    appears to be much faster than the millicoded instruction.  However,
    the implementation is much longer and therefore will only be enabled
    when optimization for speed.
    
    gcc/testsuite/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/md/movstr-2.c: New test.
    
            gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-protos.h: Add s390_expand_vec_movstr prototype.
            * config/s390/s390.c (s390_expand_vec_movstr): New function.
            * config/s390/s390.md ("movstr<P:mode>"): Call
            s390_expand_vec_movstr.
    
    From-SVN: r233703

commit 472a8e97c6248dbe2f59f203a1bbdef835a9d24e
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:10:11 2016 +0000

    S/390: z13 lcbb fix address operand.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.md: Add missing output modifier for operand 1
            to print it as address properly.
    
    From-SVN: r233702

commit b9526c2222fda269f87727f101329fe762c2a536
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:09:07 2016 +0000

    S/390: Add IBM z13 pipeline description
    
    This patch adds proper support for the -mtune=z13 option by adding a
    z13 pipeline description.  As started with zEC12 we mostly make use of
    the sched reorder hooks to implement a grouping strategy.  However,
    this time we also keep an eye at the instruction mix provided in the
    out of order window to allow the hardware to exploit the different
    units.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/2827.md: Rename ooo_* insn attributes to zEC12_*.
            * config/s390/2964.md: New file.
            * config/s390/s390.c (s390_get_sched_attrmask): Use the right set
            of insn grouping attributes depending on the CPU level.
            (s390_get_unit_mask): New function.
            (s390_sched_score): Remove the OOO from the scheduling macros.
            Add loop to calculate a score for the instruction mix.
            (s390_sched_reorder): Likewise plus improve debug output.
            (s390_sched_variable_issue): Rename macros as above.  Calculate
            the unit distances after actually scheduling an insn.  Improve
            debug output.
            (s390_sched_init): Clear last_scheduled_unit_distance array.
            * config/s390/s390.md: Include 2964.md.
    
    From-SVN: r233701

commit 6fa6f7b62b8d6c2e57149e261d18c94ed5d4de7c
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:07:45 2016 +0000

    S/390: PR 69625: Add test case
    
    gcc/testsuite/ChangeLog
    
    2016-02-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-19  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/69625
            * gcc.target/s390/pr69625.c: Add test case.
    
    From-SVN: r233700

commit c4b73363315197ba8874d6232925c9bd84162081
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:06:36 2016 +0000

    S/390: Remove superfluous loops.
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_register_info_set_ranges): Remove
            superfluous loops.
    
    From-SVN: r233699

commit 6b2d1a1477e0ef1f6eb697a5e78caf1e10947227
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:05:39 2016 +0000

    S/390: Fix 64 bit sibcall
    
    This fixes a problem revealed during the split-stack work:
    https://gcc.gnu.org/ml/gcc-patches/2016-02/msg00322.html
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_emit_call): Add missing 64 bit check.
    
    From-SVN: r233698

commit b9e428f109f1acd43e8192e8ab72dc19110abc53
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:04:30 2016 +0000

    S/390: Fix r6 vararg handling.
    
    This patch fixes a problem introduced with the GPR into FPR slot save
    feature for leaf functions.
    
    r6 is argument register as well as call-saved.  Currently we might
    decide that it will be a candidate for being saved into an FPR.  If it
    turns out later that r6 also needs to be saved due to being required
    for vararg we undo the FPR save decision and put it on the stack
    again.  Unfortunately the code did not adjust the GPR restore range
    accordingly so that the register does not get restored in the load
    multiple.
    
    This fixes the following testcases on s390x:
    
    < FAIL: libgomp.c/doacross-1.c execution test
    < FAIL: libgomp.c/doacross-2.c execution test
    < FAIL: libgomp.c/doacross-3.c execution test
    < FAIL: libgomp.c++/doacross-1.C execution test
    
    gcc/ChangeLog:
    
    2016-02-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/69625
            * config/s390/s390.c (SAVE_SLOT_NONE, SAVE_SLOT_STACK): New
            defines.
            (s390_register_info_gprtofpr): Use new macros above.
            (s390_register_info_stdarg_fpr): Adjust max_fpr to better match
            its name.
            (s390_register_info_stdarg_gpr): Adjust max_gpr to better match
            its name.  Adjust restore and save gpr ranges.
            (s390_register_info_set_ranges): New function.
            (s390_register_info): Use new macros above.  Call
            s390_register_info_set_ranges.
            (s390_optimize_register_info): Likewise.
            (s390_hard_regno_rename_ok): Use new macros.
            (s390_hard_regno_scratch_ok): Likewise.
            (s390_emit_epilogue): Likewise.
            (s390_can_use_return_insn): Likewise.
            (s390_optimize_prologue): Likewise.
            * config/s390/s390.md (GPR2_REGNUM, GPR6_REGNUM): New constants.
    
    From-SVN: r233697

commit a273aa997403ea0932a48bc4b69aacc18c429209
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:03:22 2016 +0000

    S/390: Use %qs in error messages.
    
    gcc/ChangeLog
    
    2016-02-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-01-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            * config/s390/s390-c.c (s390_resolve_overloaded_builtin): Format
            declaration name with %qs and print it in both error messages.  Also
            fix indentation.
    
    From-SVN: r233696

commit f43e9de21d28247f25266fd493ee46bbd6ed1d6c
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:02:16 2016 +0000

    PR other/69006: S/390: Fix extra newlines after
    
    PR other/69006: S/390: Fix extra newlines after
     diagnostics.
    
    gcc/ChangeLog
    
    2016-02-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-01-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR other/69006
            * config/s390/s390-c.c (s390_resolve_overloaded_builtin): Remove
            trailing blank line from error message.
    
    From-SVN: r233695

commit 8e14a66a9f4e54cd949d83d00256076d1d60e56d
Author: Robin Dapp <rdapp@linux.vnet.ibm.com>
Date:   Thu Feb 25 10:01:01 2016 +0000

    S/390: Turn constm1_operand into all_ones_operand
    
    gcc/ChangeLog:
    
    2016-02-25  Robin Dapp  <rdapp@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-12-18  Robin Dapp  <rdapp@linux.vnet.ibm.com>
    
            * config/s390/predicates.md: Change and rename
            constm1_operand to all_ones_operand
            * config/s390/s390.c (s390_expand_vcond): Use all_ones_operand
            * config/s390/vector.md: Likewise
    
    From-SVN: r233694

commit e1e1c0c95e66c3a92fee49b72df4b2c58a7d3cd7
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Feb 25 09:07:08 2016 +0000

    backport: [multiple changes]
    
    2016-02-25  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69776
            * tree-ssa-sccvn.h (vn_reference_lookup): Adjust prototype.
            * tree-ssa-sccvn.c (vn_reference_lookup): Add parameter to
            indicate whether we can use TBAA to disambiguate against stores.
            Use alias-set zero if not.
            (visit_reference_op_store): Do not use TBAA when looking up
            redundant stores.
            * tree-ssa-pre.c (compute_avail): Use TBAA here.
            (eliminate_dom_walker::before_dom_children): But not when looking
            up redundant stores.
    
            * gcc.dg/torture/pr69776.c: New testcase.
    
            2016-02-16  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69776
            * tree-ssa-alias.c (indirect_ref_may_alias_decl_p): Get alias
            sets from caller.
            (indirect_refs_may_alias_p): Likewise.
            (refs_may_alias_p_1): Pass alias sets as from ao_ref.
            * tree-ssa-sccvn.c (vn_reference_lookup): Also adjust vr alias-set
            according to tbaa_p.
            * tree-ssa-dom.c (lookup_avail_expr): Add tbaa_p flag.
            (optimize_stmt): For redundant store discovery do not allow tbaa.
    
            * gcc.dg/torture/pr69776-2.c: New testcase.
    
    From-SVN: r233693

commit 103ced8be9e96cebe0aa9b930a28bf7a44302e72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 25 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233689

commit 89457ea47c5a5f1ed31d06ae965189e026a3eb63
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Feb 24 14:55:45 2016 -0500

    PR c++/69323 - valid
    
            * pt.c (instantiate_class_template_1): Set
            processing_template_decl before substituting friend_type.
    
    From-SVN: r233679

commit 909c5774c3360a0f78759eddd65a5bcd208a10d1
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Feb 24 17:20:00 2016 +0100

    revert: re PR tree-optimization/69666 (gcc ICE at -O2 and -O3 on valid code on x86_64-linux-gnu in "verify_gimple failed")
    
    2016-02-24  Martin Jambor  <mjambor@suse.cz>
    
            revert:
            2016-02-23  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/69666
            * tree-sra.c (sra_modify_assign): Do not attempt to create
            default_def replacements for unscalarizable regions.
    
    From-SVN: r233674

commit 27a8a63d85a628c479c60add4e33e5d9b838ccd5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 24 13:58:07 2016 +0000

    libstdc++/69939 Qualify get and forward
    
            PR libstdc++/69939
            * include/experimental/tuple (__apply_impl): Qualify get and forward.
    
    From-SVN: r233665

commit 727616d536cd4bce932980f0a8b7902790042c34
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Feb 24 12:55:31 2016 +0000

    backport: [multiple changes]
    
    2016-02-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-02-17  Richard Biener  <rguenther@suse.de>
    
            PR rtl-optimization/69609
            * bb-reorder.c (struct bbro_basic_block_data): Add priority member.
            (find_traces_1_round): When ending a trace update cached priority
            of successors.
            (bb_to_key): Use cached priority when available.
            (copy_bb): Initialize cached priority.
            (reorder_basic_blocks_software_trace_cache): Likewise.
    
            2016-02-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69719
            * tree-vect-data-refs.c (vect_prune_runtime_alias_test_list):
            Properly use absolute of the difference of the two offsets to
            compare or adjust the segment length.
    
            * gcc.dg/torture/pr69719.c: New testcase.
    
            2016-02-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69719
            * tree-vect-data-refs.c (vect_prune_runtime_alias_test_list):
            Adjust previous fix by ensuring that dr_a1 is left of dr_a2.
    
            2016-02-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69783
            * tree-vect-data-refs.c (vect_prune_runtime_alias_test_list):
            Add trivially correct cases.
    
            * gcc.dg/vect/pr69783.c: New testcase.
    
    From-SVN: r233661

commit 2e25113b597a9bbc91c1782ab043865538a4c865
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Feb 24 06:45:41 2016 +0000

    backport: re PR fortran/65996 (gfortran ICE with -dH)
    
    2016-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backported from mainline
            PR fortran/65996
            * error.c (gfc_error): Save the state of abort_on_error and set
            it to false for buffered errors to allow normal processing.
            Restore the state before leaving.
    
            PR fortran/65996
            * gfortran.dg/pr65996.f90: New test.
    
    From-SVN: r233653

commit a624ebfa90f98022c871bfb45712ff3fb27ed1ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 24 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233651

commit 1cb1bfb61f115317542659bd5b65ac18aaca7e19
Author: Martin Jambor <mjambor@suse.cz>
Date:   Tue Feb 23 13:54:44 2016 +0100

    [pr 69666] No SRA default_def replacements for unscalarizable regions
    
    2016-02-23  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/69666
            * tree-sra.c (sra_modify_assign): Do not attempt to create
            default_def replacements for unscalarizable regions.
    
    testsuite/
            * gcc.dg/tree-ssa/pr69666.c: New test.
    
    From-SVN: r233629

commit 6ca6952329d581a787b2031484295a5b70c20d91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 23 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233619

commit fa205a3570e7a3e46ec6fa4e7036b36837158d01
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 22 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233596

commit 8fcb3191149eb8f761ec94704c555fc5453934a4
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Sun Feb 21 13:48:49 2016 +0100

    [multiple changes]
    
    2016-02-21  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/57365
            gfortran.dg/allocate_with_source_18.f03: New test.
    
    2016-02-21  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/52531
            gfortran.dg/gomp/pr52531.f90: New test.
    
    From-SVN: r233594

commit d4bf7f545b7cb59315e5873712d3da5abbe62d43
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 21 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r233591

commit 110b8151549f700d4e069b6520545fa65d9919fe
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Sat Feb 20 05:58:00 2016 +0000

    backport: re PR testsuite/68580 (FAIL: c-c++-common/tsan/pr65400-1.c -O0 execution test)
    
    2016-02-20  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-02-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR testsuite/68580
            * c-c++-common/tsan/pr65400-1.c (v, q, o): Make 8-byte aligned.
    
    From-SVN: r233581

commit d84f50ac94606d171418bfd3d9f11cb0f72e29ae
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 19 23:31:29 2016 -0500

    re PR c++/69743 (function overload with variadic arguments - template instantiation depth exceeds maximum (gcc4, clang - no problem))
    
            PR c++/69743
            * call.c (remaining_arguments): No longer static.
            * cp-tree.h: Declare it.
            * pt.c (more_specialized_fn): Use it.
    
    From-SVN: r233580

commit 6e0362c12ed0d9b1666ce4127b81eae7b76e2c4e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 20 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233577

commit 84d033e1f8a2a99bf373a1672a770d41376914a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 19 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r233542

commit d97576f1877ce85fe9cf9abd8887cc6dd3ab671e
Author: Bernd Schmidt <bernds@redhat.com>
Date:   Thu Feb 18 15:23:11 2016 +0000

    Backport PR69648 fix from mainline (set of picreg removed during lra).
    
            PR rtl-optimization/69648
            * lra-constraints.c (update_ebb_live_info): Don't remove sets of
            pic_offset_table_rtx.
    
    From-SVN: r233523

commit ad02ad1316ba2bf3780d0867ab2cb45424ee500f
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Feb 18 09:49:22 2016 -0500

    re PR c++/68585 (c++14 code accepted by 4.9 not accepted by 5 and 6)
    
            PR c++/68585
            * constexpr.c (cxx_eval_bare_aggregate): Fix 'changed' detection.
    
    From-SVN: r233522

commit 780c160fc7f848979431777eaeabb4f40ff25891
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Feb 18 09:49:16 2016 -0500

    re PR c++/68679 (gcc-5.2.1 ICE in C++11 anon union of structs with template fns, OK in gcc <= 4.9.3)
    
            PR c++/68679
            * decl2.c (reset_type_linkage_2): Look through member templates.
    
    From-SVN: r233521

commit d35c19e98f8151ff19a162aa0968d45c6dd18155
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 18 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233510

commit 3a3c55ec2eb25b6aca73ff6b9fef7f4bab5ad6ee
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Feb 17 17:49:22 2016 +0000

    backport: altivec.md (*altivec_lvxl_<mode>_internal): Output correct instruction.
    
    [gcc]
    
    2016-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.md (*altivec_lvxl_<mode>_internal): Output
            correct instruction.
    
    [gcc/testsuite]
    
    2016-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2012-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/vec-cg.c: New test.
    
    From-SVN: r233503

commit 75edbcefd26068f680c356f2608a4fd4a2943f0b
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Feb 17 17:34:58 2016 +0000

    re PR libfortran/69651 ([6 Regession] Usage of unitialized pointer io/list_read.c)
    
    2016-02-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR libgfortran/69651
            * io/list_read.c (push_char4): Fix the pointer usage for xrealloc.
    
    From-SVN: r233501

commit 23091dd42ae66543eacb4b24bd9aa7fe90c1d55c
Author: Bernd Schmidt <bernds@redhat.com>
Date:   Wed Feb 17 13:10:59 2016 +0000

    Backport use-after-free fix for PR69522.
    
    c/
            PR c/69522
            * c-parser.c (c_parser_braced_init): New arg outer_obstack.  All
            callers changed.  If nested_p is true, use it to call
            finish_implicit_inits.
            * c-tree.h (finish_implicit_inits): Declare.
            * c-typeck.c (finish_implicit_inits): New function.  Move code
            from ...
            (push_init_level): ... here.
            (set_designator, process_init_element): Call finish_implicit_inits.
    
    testsuite/
            PR c/69522
            gcc.dg/pr69522.c: New test.
    
    From-SVN: r233492

commit 30081f1ee0ea960a138658ee0609831971102998
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Feb 17 09:23:56 2016 +0000

    exp_ch4.adb (Expand_N_Indexed_Component): Active synchronization if the prefix denotes an entity which Has_Atomic_Components.
    
            * exp_ch4.adb (Expand_N_Indexed_Component): Active synchronization if
            the prefix denotes an entity which Has_Atomic_Components.
    
    From-SVN: r233486

commit a5917b2899d529e76e48d36fb476055a937e5832
Author: Tim Shen <timshen@google.com>
Date:   Wed Feb 17 04:38:15 2016 +0000

    backport: re PR libstdc++/69794 (std::regex_search match failure with regex object with flags grep|icase)
    
            Backport from mainline
            2016-02-16  Tim Shen  <timshen@google.com>
    
            PR libstdc++/69794
            * include/bits/regex_scanner.h: Add different special character
            sets for grep and egrep regex.
            * include/bits/regex_scanner.tcc: Use _M_spec_char more uniformly.
            * testsuite/28_regex/regression.cc: Add new testcase.
    
    From-SVN: r233483

commit ad6c283f2bb8c885f6898c24a77ce4d4b6f04d05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 17 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233479

commit c80ffb3d16077c67e6f72ada752f0ade7d9f543f
Author: Bernd Schmidt <bernds@codesourcery.com>
Date:   Tue Feb 16 21:37:01 2016 +0000

    Backport PR69752 fix.
    
            PR rtl-optimization/69752
            * ira.c (update_equiv_regs): When looking for more than a single SET,
            also take other side effects into account.
    
    From-SVN: r233476

commit 32cbdcd2a78f51a758ca7b9cc7f136cb72b73eda
Author: Bernd Schmidt <bernds@codesourcery.com>
Date:   Tue Feb 16 21:13:59 2016 +0000

    Backport lra-remat fix from mainline, PR68730
    
            PR rtl-optimization/68730
            * lra-remat.c (insn_to_cand_activation): New static variable.
            (lra_remat): Allocate and free it.
            (create_cand): New arg activation. Initialize a field in
            insn_to_cand_activation if it is nonnull.
            (create_cands): Pass the activation insn to create_cand when making
            a candidate involving an output reload.  Reorganize code a little.
            (do_remat): Keep track of active status of candidates in a separate
            bitmap.
    
    From-SVN: r233475

commit 2c0f1bf4d7ad73556f00b1f37dc7ce0039ac01af
Author: Bernd Schmidt <bernds@codesourcery.com>
Date:   Tue Feb 16 21:09:43 2016 +0000

    Fix bswap optimization on big-endian (PR69714, 67781).
    
            PR tree-optimization/69714
            * tree-ssa-math-opts.c (find_bswap_or_nop): Revert previous change.
            Return NULL if we have irrelevant high bytes on BIG_ENDIAN.
    
    testsuite/
            PR tree-optimization/69714
            * gcc.dg/torture/pr69714.c: New test.
    
    From-SVN: r233473

commit c126f330fbbed185b6630c790d956f12f2aff3d7
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Feb 16 17:52:32 2016 +0000

    misc.c (gnat_enum_underlying_base_type): New function.
    
            * gcc-interface/misc.c (gnat_enum_underlying_base_type): New function.
            (LANG_HOOKS_ENUM_UNDERLYING_BASE_TYPE): Define to above.
    
    From-SVN: r233468

commit 31a293e4ac6d85ddac28c821d07fde964f8d3315
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Feb 16 15:13:05 2016 +0000

    [ARM] Adjust tests after fix for PR 65932
    
            PR target/65932
            * gcc.target/arm/wmul-1.c: Add -mtune=cortex-a9 to dg-options.
            xfail the scan-assembler test.
            * gcc.target/arm/wmul-2.c: Likewise.
            * gcc.target/arm/wmul-3.c: Simplify test to generate a single smulbb.
    
    From-SVN: r233455

commit 47f93a9e2c072c3eec981cad28005422d4647682
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Feb 16 15:11:26 2016 +0000

    [ARM] PR target/65932: stop changing signedness in PROMOTE_MODE
    
            Backport from trunk:
            2016-02-04  Jim Wilson  <jim.wilson@linaro.org>
    
            PR target/65932
            PR target/67714
            * config/arm/arm.h (PROMOTE_MODE): Don't set UNSIGNEDP for QImode and
            HImode.
    
    From-SVN: r233454

commit 9ff0a5a7e6f7497847f0f65bf4cc7fd2706727f3
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Feb 16 13:49:22 2016 +0000

    backport "Don't call call_cgraph_insertion_hooks in simd_clone_create"
    
    2016-02-16  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-02-16  Tom de Vries  <tom@codesourcery.com>
    
            PR lto/67709
            * omp-low.c (simd_clone_create): Remove call to
            symtab->call_cgraph_insertion_hooks.
    
            * testsuite/libgomp.fortran/declare-simd-4.f90: New test.
    
    From-SVN: r233450

commit 00cd1633af4dab2c8281d43603734354a7944911
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Feb 16 13:49:12 2016 +0000

    backport "Fix ICE for SIMD clones usage in LTO"
    
    2016-02-16  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2015-10-21  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            * omp-low.c (simd_clone_create): Set in_other_partition
            for created clones.
    
            * gcc.dg/lto/simd-function_0.c: New test.
    
    From-SVN: r233449

commit b036cca3c7b5610689cb200b567d675558d6840b
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue Feb 16 00:51:58 2016 +0000

    backport: re PR fortran/69668 (Error reading namelist opened with DELIM='NONE')
    
    2016-02-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from mainline
            PR libgfortran/69668
            * gfortran.dg/namelist_38.f90: Update test.
            * gfortran.dg/namelist_84.f90: Update test.
    
    From-SVN: r233443

commit d1e95fed0e033e6b588eb33afe55732a47c63f5b
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue Feb 16 00:38:18 2016 +0000

    backport: re PR libfortran/69651 ([6 Regession] Usage of unitialized pointer io/list_read.c)
    
    2016-02-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/69651
            PR libgfortran/69668
            * io/list_read.c: Entire file trailing spaces removed.
            (CASE_SEPARATORS): Remove '!'.
            (is_separator): Add namelist mode as condition with '!'.
            (push_char): Remove un-needed memset. (push_char4): Likewise and remove
            'new' pointer. (eat_separator): Remove un-needed use of notify_std.
            (read_logical): If '!' bang encountered when not in namelist mode got
            bad_logical to give an error. (read_integer): Likewise reject '!'.
            (read_character): Remove condition testing c = '!' which is now inside
            the is_separator macro. Remove code related to DELIM_NONE.
            (parse_real): Reject '!' unless in namelist mode. (read_complex): Reject
            '!' unless in namelist mode. (read_real): Likewise reject '!'.
            * gfortran.dg/read_bang.f90: New test.
            * gfortran.dg/read_bang4.f90: New test.
            * gfortran.dg/namelist_87.f90: New test.
            * gfortran.dg/namelist_88.f90: New test.
    
    From-SVN: r233442

commit 43cfdfedf33c1dbcf8bf4f80752660b510abd9bf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 16 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233440

commit df18605dd74c347961b30dd621d2c42e6a649413
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 15 16:16:10 2016 -0500

    re PR c++/68890 (ICE in verify_ctor_sanity, at cp/constexpr.c:2113)
    
            PR c++/68890
    
            * constexpr.c (verify_ctor_sanity): Remove CONSTRUCTOR_NELTS check.
    
    From-SVN: r233433

commit 5acae4276ab242f7f99104a24216bc22d6487bf8
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Feb 15 18:25:08 2016 +0000

    backport: pa.md (absqi2, [...]): New.
    
            Backport from mainline
            * config/pa/pa.md (absqi2, absghi2, bswaphi2, bswapsi2, bswapdi2): New.
    
    From-SVN: r233427

commit 73a2800b873f8056cc37b0e9663724dd7a7014c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 15 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233416

commit 9e581a7d4d8acd33b9c58de160b4cfd9ffd18ebe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 14 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233404

commit fc4985d7ab7c22a1a0b322d0909ba7912c06d823
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Feb 13 08:46:49 2016 +0000

    backport: re PR target/67260 ([sh] Register spill bug for sibcall+complex+softfloat)
    
    gcc/
            Backport from mainline
            2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67260
            * config/sh/sh.md (sibcall_value_pcrel): Replace =&k scratch reg with
            fixed R1_REG scratch reg.
    
    gcc/testsuite/
            Backport from mainline
            2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67260
            * gcc.target/sh/torture/pr67260.c: New.
    
    From-SVN: r233401

commit c1dce994bd40e7bdf0258b77928c51f4200639c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 13 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233395

commit 61706414d2f14aa552be6fb9b31a033bf381a37f
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Feb 12 19:32:21 2016 +0100

    combine: More distribute_notes trouble (PR69737)
    
    PR64682 is a problem in distribute_notes, where it has trouble putting
    a REG_DEAD note for a reg that is set twice in the right spot.  My fix
    for that did the wrong thing for PR69567.  And then my attempted fix
    for that one made PR64682 fail again.
    
    Instead, let's just lose the note in such complicated cases, like we
    already do in certain similar cases.
    
    
            Backport from mainline
            2016-02-11  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/64682
            PR rtl-optimization/69567
            PR rtl-optimization/69737
            * combine.c (distribute_notes) <REG_DEAD>: If the register is set
            in I2 as well, just lose it.
    
    From-SVN: r233384

commit f0a9b62883243a5a04a351ba09604073dca07e3e
Author: Tobias Burnus <burnus@net-b.de>
Date:   Fri Feb 12 17:31:25 2016 +0100

    Back-port EVENTS patch.
    
    
    Co-Authored-By: Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
    From-SVN: r233379

commit decfb859468368dd03b562d15493a1743d412c32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 12 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r233360

commit fa575aab7dc49fa7d518ed98c683f4a001972c5c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Feb 11 13:30:27 2016 +0000

    allocator_traits<allocator<T>> partial specialization
    
            PR libstdc++/60976
            * include/bits/alloc_traits.h (allocator_traits<allocator<_Tp>>):
            Define partial specialization.
            * testsuite/20_util/shared_ptr/cons/58659.cc: Add construct and
            destroy members to std::allocator explicit specialization.
    
    From-SVN: r233343

commit 36ddb7b267874c31c2b5fca2c48c6daa9cbdd37b
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Feb 11 13:27:14 2016 +0000

    Backport PRs 69308, 69574, 69579, 69606, 69715
    
    2016-02-11  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-01-18  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/69308
            * gimple.c (gimple_could_trap_p_1): Handle GIMPLE_COND.
    
            2016-02-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69574
            * tree-chrec.c (hide_evolution_in_other_loops_than_loop): Instead
            of asserting return chrec_dont_know.
    
            * gcc.dg/torture/pr69574.c: New testcase.
    
            2016-02-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69579
            * tree-ssa-loop-ivcanon.c (propagate_constants_for_unrolling):
            Do not propagate through abnormal PHI results.
    
            * gcc.dg/setjmp-6.c: New testcase.
    
            2016-02-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69606
            * tree-ssa-math-opts.c (bswap_replace): Clear flow sensitive
            info on the result before moving a stmt.
    
            * gcc.dg/torture/pr69606.c: New testcase.
    
            2016-02-09  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69715
            * tree-ssa.c (execute_update_addresses_taken): Mark non-decl
            LHS on calls as non-rewritable.
    
            * gcc.dg/torture/pr69715.c: New testcase.
    
    From-SVN: r233341

commit 2557c6d1f9294c1d09c704a75809f1523902176f
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Feb 11 09:13:23 2016 +0000

    backport: re PR target/69713 (Invalid code of optimization in SH)
    
    gcc/
            Backport from mainline
            2016-02-11  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/69713
            * config/sh/sh.md (casesi_worker_0): Add T_REG use.
    
    From-SVN: r233326

commit 0030c29ffd78cd2096107260516706c5738b1e0b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 11 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233313

commit 808c924a308fdb10cd0634fd7cec43c1e08aface
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Feb 10 14:36:19 2016 -0500

    re PR c++/68926 (decltype and sfinae to check for template instance availability fails to compile)
    
            PR c++/68926
    
            * pt.c (resolve_nondeduced_context): Add complain parm.
            (do_auto_deduction): Pass it.
            * cvt.c (convert_to_void): Likewise.
            * decl.c (cp_finish_decl): Likewise.
            * init.c (build_new): Likewise.
            * rtti.c (get_tinfo_decl_dynamic): Likewise.
            * semantics.c (finish_decltype_type): Likewise.
            * typeck.c (decay_conversion): Likewise.
            * cp-tree.h: Adjust declaration.
            * call.c (standard_conversion): Add complain parm, pass it along.
            (implicit_conversion): Pass it.
    
    From-SVN: r233306

commit 6d2becc2c90b93aae5dbbfc6eaf85f123a31f00b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:46:38 2016 +0100

    backport: re PR c++/59627 (ICE with OpenMP "declare reduction" and -flto)
    
            Backported from mainline
            2016-02-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/59627
            * parser.c (cp_parser_omp_declare_reduction): Set assembler name
            of the DECL_OMP_DECLARE_REDUCTION_P decls.
    
            * g++.dg/gomp/pr59627.C: New test.
    
    From-SVN: r233302

commit f166b486a7b14fd6a5a0b7ec566f748ce80385fa
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:44:52 2016 +0100

    backport: re PR c/69669 (ICE with enum __attribute__((mode(QI))))
    
            Backported from mainline
            2016-02-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/69669
            * c-decl.c (finish_enum): When honoring mode attribute,
            make sure to use proper TYPE_MIN_VALUE and TYPE_MAX_VALUE.
    
            * c-c++-common/pr69669.c: New test.
    
    From-SVN: r233301

commit 81969d115ac48d1696c22f8b0146618f5a2a0040
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:44:07 2016 +0100

    backport: re PR middle-end/69546 (wrong code with -O and simple int128 arithmetics)
    
            Backported from mainline
            2016-01-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/69546
            * wide-int.cc (wi::divmod_internal): For unsigned division
            where both operands fit into uhwi, if o1 is 1 and o0 has
            msb set, if divident_prec is larger than bits per hwi,
            clear another quotient word and return 2 instead of 1.
            Similarly for remainder with msb in HWI set, if dividend_prec
            is larger than bits per hwi.
    
            * gcc.dg/torture/pr69546.c: New test.
    
    From-SVN: r233300

commit 3d863dc5d25a432a00fbe7987352d74e1eb39fe9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:43:01 2016 +0100

    backport: re PR pch/68176 (all pch tests fail on eglibc systems (with bits/predefs.h))
    
            Backported from mainline
            2016-01-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR pch/68176
            * files.c (_cpp_find_file): Set file->implicit_preinclude even if
            included from file->implicit_preinclude header.
    
    From-SVN: r233299

commit 32e6d8c40bd542528ca8e977303937c9144d0ac6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:42:34 2016 +0100

    backport: re PR tree-optimization/69399 (wrong code with -O and int128)
    
            Backported from mainline
            2016-01-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/69399
            * wide-int.h (wi::lrshift): For larger precisions, only
            use fast path if shift is known to be < HOST_BITS_PER_WIDE_INT.
    
            * gcc.dg/torture/pr69399.c: New test.
    
    From-SVN: r233298

commit 62fe1b8c01a6c2ec6771c95f035aed275c2d5705
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:41:37 2016 +0100

    backport: re PR other/69432 (ICE in connect_traces, at dwarf2cfi.c with -O3 -m32 -minline-stringops-dynamically)
    
            Backported from mainline
            2016-01-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69432
            * config/i386/i386.c: Include dojump.h.
            (expand_small_movmem_or_setmem,
            expand_set_or_movmem_prologue_epilogue_by_misaligned_moves): Spelling
            fixes.
            (ix86_expand_set_or_movmem): Call do_pending_stack_adjust () early
            if dynamic_check != -1.
    
            * g++.dg/opt/pr69432.C: New test.
    
    From-SVN: r233297

commit 22270f3d5ec7770f59bcc4c1c3a84a17b001e698
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:40:54 2016 +0100

    backport: re PR target/69187 (ICE: Aborted when native compiling neon code with __builtin_neon_vmlals_lanev4hi)
    
            Backported from mainline
            2016-01-21  Stefan Sørensen  <stefan.sorensen@spectralink.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69187
            PR target/65624
            * config/arm/arm-builtins.c (arm_expand_neon_builtin): Increase
            args array size by one to avoid buffer overflow.
    
            * gcc.target/arm/pr69187.c: New test.
    
    From-SVN: r233296

commit 4c931acbf1c83dc2f3d80d6d0305e64ae5eb92a0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:38:42 2016 +0100

    backport: re PR middle-end/67653 (ICE on valid code on x86_64-linux-gnu: verify_gimple failed)
    
            Backported from mainline
            2016-01-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/67653
            * gimplify.c (gimplify_asm_expr): Warn if it is too late to
            attempt to mark memory input operand addressable and
            call prepare_gimple_addressable in that case.  Don't adjust
            input_location for diagnostics, use error_at instead.
    
            * c-c++-common/pr67653.c: New test.
            * gcc.dg/torture/pr29119.c: Add dg-warning.
    
    From-SVN: r233295

commit a96a832da39ce7507c10368913091d2896c78374
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:36:53 2016 +0100

    backport: re PR debug/65779 (undefined local symbol on powerpc [regression])
    
            Backported from mainline
            2016-01-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/65779
            * shrink-wrap.c: Include valtrack.h.
            (move_insn_for_shrink_wrap): Add DEBUG argument.  If
            MAY_HAVE_DEBUG_INSNS, call dead_debug_add on DEBUG_INSNs
            in between insn and where it will be moved to.  Call
            dead_debug_insert_temp.
            (prepare_shrink_wrap): Adjust caller.  Call dead_debug_local_init
            first and dead_debug_local_finish at the end.
            For uses and defs bitmap, handle all regs in between REGNO and
            END_REGNO, not just the first one.
    
            * gcc.dg/pr65779.c: New test.
    
    From-SVN: r233294

commit 0baced3d86411365e6142bf5675ae8ac38f5336d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:34:30 2016 +0100

    backport: re PR rtl-optimization/68955 (wrong code at -O3 on x86-64-linux-gnu in 32-bit mode)
    
            Backported from mainline
            2016-01-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/68955
            PR rtl-optimization/64557
            * dse.c (record_store, check_mem_read_rtx): Don't call get_addr
            here.  Fix up formatting.
            * alias.c (get_addr): Handle VALUE +/- CONST_SCALAR_INT_P.
    
            * gcc.dg/torture/pr68955.c: New test.
    
    From-SVN: r233293

commit cfc25160245c06858f1513409454173e7796adf5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:32:37 2016 +0100

    backport: re PR target/68269 (FAIL: gcc.dg/pr68129_1.c (internal compiler error))
    
            Backported from mainline
            2016-01-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/68269
            * combine.c (expand_field_assignment): Punt if compute_mode is
            unsupported scalar mode.
    
    From-SVN: r233292

commit 43340c576f2ee0658788aa5cee1ef4e573ad53b5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:31:06 2016 +0100

    backport: re PR tree-optimization/69214 (ICE (segfault) at -Os on x86_64-linux-gnu in "fail_abnormal_edge_coalesce")
    
            Backported from mainline
            2016-01-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/69214
            * tree-vrp.c (simplify_cond_using_ranges): Don't propagate
            innerop into a comparison if SSA_NAME_OCCURS_IN_ABNORMAL_PHI.
            Formatting fix.
    
            * gcc.c-torture/compile/pr69214.c: New test.
    
    From-SVN: r233291

commit e07f042b1b93a2a60d8711c12c6bd37ea87252fb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:29:49 2016 +0100

    backport: re PR fortran/69128 (OpenMP workshare problem with SUM())
    
            Backported from mainline
            2016-01-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/69128
            * trans.h (OMPWS_SCALARIZER_BODY): Define.
            (OMPWS_NOWAIT): Renumber.
            * trans-stmt.c (gfc_trans_where_3): Only set OMPWS_SCALARIZER_WS
            if OMPWS_SCALARIZER_BODY is not set already, and set also
            OMPWS_SCALARIZER_BODY until the final loop creation.
            * trans-expr.c (gfc_trans_assignment_1): Likewise.
            * trans-openmp.c (gfc_trans_omp_workshare): Also clear
            OMPWS_SCALARIZER_BODY.
            * trans-array.c (gfc_trans_scalarized_loop_end): Don't create
            OMP_FOR if OMPWS_SCALARIZER_BODY is set.
    
            * gfortran.dg/gomp/pr69128.f90: New test.
    
    From-SVN: r233289

commit b2b9c1863bce1c2375a0bd33b3418dffe013645f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:28:44 2016 +0100

    backport: re PR c/68960 (__attribute__ ((aligned ())) is ignored for OpenMP private variables)
    
            Backported from mainline
            2016-01-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/68960
            * gimple-expr.c (copy_var_decl): If var has DECL_USER_ALIGN set, copy
            it and DECL_ALIGN too.
    
            * testsuite/libgomp.c/pr68960.c: New test.
    
    From-SVN: r233288

commit 978076bb5d0e3c8231e48ca6f630948122151182
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:27:20 2016 +0100

    backport: re PR sanitizer/69055 (Internal compiler error -fsanitize=float-cast-overflow)
    
            Backported from mainline
            2016-01-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/69055
            * ubsan.c (ubsan_instrument_float_cast): Call
            initialize_sanitizer_builtins.
    
            * gfortran.dg/pr69055.f90: New test.
    
    From-SVN: r233287

commit 701ecb3bec34b48e770fc64a5052026bb07bd33d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:26:21 2016 +0100

    backport: re PR target/69015 (ICE: RTL check: expected code 'code_label', have 'return' in find_cond_trap, at ifcvt.c:3715 with -fno-if-conversion and __builtin_trap())
    
            Backported from mainline
            2016-01-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69015
            * ifcvt.c (find_cond_trap): Give up if returnjump_p (jump).
    
            * gcc.dg/pr69015.c: New test.
    
    From-SVN: r233286

commit 0d9c8382212e792a379f53399a4bc76099398ae2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:24:29 2016 +0100

    backport: re PR c++/67376 (Comparison with pointer to past-the-end of array fails inside constant expression)
    
            Backported from mainline
            2015-12-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/67376
            * fold-const.c (size_low_cst): Removed.
            (fold_comparison): For POINTER_PLUS_EXPR where base is ADDR_EXPR
            call get_inner_reference and handle INDIRECT_REF base of it.  Use
            offset_int for computation of the bitpos.
            (fold_binary_loc) <case EQ_EXPR, NE_EXPR>: Formatting
            fixes for X +- Y CMP X and C - X CMP X folding.  Add X CMP X +- Y
            and X CMP C - X folding.
    
            * g++.dg/cpp0x/constexpr-67376.C: New test.
    
    From-SVN: r233285

commit fdaac062c0d4b401626cbec6a798f0a4706c593b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 10 19:22:19 2016 +0100

    backport: re PR preprocessor/57580 (Repeated _Pragma message directives in macro causes problems)
    
            Backported from mainline
            2015-12-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR preprocessor/57580
            * c-ppoutput.c (print): Change printed field to bool.
            Move src_file last for smaller padding.
            (init_pp_output): Set print.printed to false instead of 0.
            (scan_translation_unit): Fix up formatting.  Set print.printed
            to true after printing something other than newline.
            (scan_translation_unit_trad): Set print.printed to true instead of 1.
            (maybe_print_line_1): Set print.printed to false instead of 0.
            (print_line_1): Likewise.
            (do_line_change): Set print.printed to true instead of 1.
            (cb_define, dump_queued_macros, cb_include, cb_def_pragma,
            dump_macro): Set print.printed to false after printing newline.
    
            * c-c++-common/cpp/pr57580.c: New test.
            * c-c++-common/gomp/pr57580.c: New test.
    
    From-SVN: r233284

commit 6e356d838f33cf68151c4c61c9f73f30e43d3976
Author: Ian Lance Taylor <iant@google.com>
Date:   Wed Feb 10 15:14:24 2016 +0000

    re PR go/68562 (morestack misaligns stack on x86_64)
    
            PR go/68562
            * config/i386/morestack.S (__stack_split_initialize): Align
            stack.
    
    From-SVN: r233274

commit 7a072794bbbaa7bf4890ad072a379b2a737e8ed1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 10 11:10:58 2016 +0000

    Constrain std::valarray functions and operators
    
            PR libstdc++/69116
            * include/bits/valarray_before.h (__fun, __fun_with_valarray): Only
            define result_type for types which can be safely used with valarrays.
            * testsuite/26_numerics/valarray/69116.cc: New.
    
    From-SVN: r233263

commit 550cd99c0cd97e535991862396951cfa534e6df1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 10 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233258

commit eb90733e072b5899df80c4a7ae517c7e8a37eebd
Author: Alexander Fomin <alexander.fomin@intel.com>
Date:   Tue Feb 9 17:01:39 2016 +0000

    backport: Fix expectation in AVX512 logic instructions test.
    
    Backport from mainline.
    
    2016-02-09  Alexander Fomin  <alexander.fomin@intel.com>
    Fix expectation in AVX512 logic instructions test.
    
    gcc/testsuite
    
            * gcc.target/i386/avx512f-klogic-2.c: Adjust expectation.
    
    From-SVN: r233247

commit 38b1de39fbefcbec06b8eadaf182e0240f5d466f
Author: Bernd Schmidt <bernds@gcc.gnu.org>
Date:   Tue Feb 9 14:45:29 2016 +0000

    Add missing file from previous commit.
    
    From-SVN: r233244

commit e1faa2e681dc0e98da5de129216d814d957d4103
Author: Bernd Schmidt <bernds@codesourcery.com>
Date:   Tue Feb 9 13:10:39 2016 +0000

    re PR middle-end/65702 (ICE (tree check: expected ssa_name, have var_decl in expand_gimple_basic_block, at cfgexpand.c:5506) on arm-linux-gnueabihf)
    
            PR middle-end/65702
            * varasm.c (make_decl_rtl): Mark invalid register vars as
            DECL_EXTERNAL.
    
    testsuite/
            PR middle-end/65702
            * c-c++-common/pr67639.c: New test.
    
    From-SVN: r233242

commit 8734f7f1056bd436de6e0fef42b833eae63193db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 9 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r233233

commit c0d1a7b57489ee255e6536ad189bac364e7c2b5c
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 8 14:22:57 2016 -0500

    re PR c++/69009 (ICE in instantiate_decl, at cp/pt.c:21511)
    
            PR c++/69009
    
            * pt.c (partial_specialization_p, impartial_args): New.
            (instantiate_decl): Call impartial_args.
    
    From-SVN: r233226

commit 63c957a93e9bd312784911cde1d7251d25ce68d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 8 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r233205

commit 1695e164471d6207de00df90ca9afe3e4c502408
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 7 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233198

commit 7d7f149a4fe41be8b1a8d898dcc68c10ba671428
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 6 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233193

commit ea64500f2f3bb7e2cf1c5b84fa27404cb8744435
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 5 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233163

commit 8650bfabe59a70fa51ce3899671ea3ebcfcf66d8
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Feb 5 00:16:44 2016 +0100

    combine: distribute_notes again (PR69567, PR64682)
    
    As it happens the patch I did over a year ago for PR64682 isn't quite
    correct.  This is PR69567.  This fixes it.
    
    
            Backport from mainline
            2016-02-04  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/64682
            PR rtl-optimization/69567
            * combine.c (distribute_notes) <REG_DEAD>: Place the death note
            before I2 only if the register is both used and set in I2.
    
    From-SVN: r233160

commit 1c19200e0a4e2577db6ba21ec779733ab3467b1e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Feb 4 14:58:21 2016 +0100

    backport: re PR target/69644 (ICE with -O on __sync_bool_compare_and_swap with short in extract_insn, at recog.c:2286)
    
            Backported from mainline
            2016-02-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69644
            * config/rs6000/rs6000.c (rs6000_expand_atomic_compare_and_swap):
            Force oldval into register if it does not satisfy reg_or_short_operand
            predicate.  Fix up formatting.
    
            * gcc.dg/pr69644.c: New test.
    
    From-SVN: r233138

commit b903960a8bae475736d830aeebc120935c315ea3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 4 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233118

commit 7ec73b85ffc3a0aa7c1a99411c0754a94cf9fe06
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Wed Feb 3 13:48:27 2016 +0000

    re PR target/69118 (Wrong condition in avx512f_maskcmp<mode>3)
    
    PR target/69118.
    
    gcc/
            * config/i386/sse.md (define_insn "avx512f_maskcmp<mode>3"):
            Fix target.
    
    From-SVN: r233104

commit cbcd8c73e36fcca4cfc47b7c40bafee1b48309dd
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Wed Feb 3 10:44:18 2016 +0100

    re PR fortran/67451 ([F08] ICE with sourced allocation from coarray.)
    
    gcc/testsuite/ChangeLog:
    
    2016-02-03  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/67451
            PR fortran/69418
            * gfortran.dg/coarray_allocate_2.f08: New test.
            * gfortran.dg/coarray_allocate_3.f08: New test.
            * gfortran.dg/coarray_allocate_4.f08: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-02-03  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/67451
            PR fortran/69418
            * trans-expr.c (gfc_copy_class_to_class): For coarrays just the
            pointer is passed.  Take it as is without trying to deref the
            _data component.
            * trans-stmt.c (gfc_trans_allocate): Take care of coarrays as
            argument to source=-expression.
    
    From-SVN: r233099

commit 1eca57ef904583944fa181550a24836a7791e740
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 3 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r233095

commit 1b9d976e2292a2f5353097fffc6e0c3b8a9bb634
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Feb 2 17:08:56 2016 +0100

    re PR target/67032 (Geode optimizations incorrectly return -NaN)
    
            PR target/67032
            * config/i386/i386.c (geode_cost): Increase cost of MMX and SSE moves.
    
    From-SVN: r233080

commit c06dfe00b08aff678d625bd8fd615f9934730d41
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Feb 2 11:59:41 2016 +1030

    [RS6000] lqarx and stqcx. registers
    
    lqarx RT and stqcx. RS are valid only with even numbered gprs.  The
    predicate to enforce this happens to allow a loophole, closed by this
    patch.
    
            PR target/69548
    gcc/
            * config/rs6000/predicates.md (quad_int_reg_operand): Don't
            allow subregs.
    gcc/testsuite/
            * gcc.target/powerpc/pr69548.c: New test.
    
    From-SVN: r233066

commit 9e52a7993920e1ff97e95fac52620a2db35d153b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 2 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r233063

commit f4a0a2af66f77762698b6a2c517a94a58e91c15e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Feb 1 20:25:12 2016 +0000

    Commit fixincl.x for last update.
    
    From-SVN: r233048

commit e15c905782c4ea97c858d0cae3b05ec744d01bbf
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Feb 1 20:22:43 2016 +0000

    re PR target/68741 (FAIL: tr1/8_c_compatibility/cstdio/functions.cc (test for excess errors))
    
            PR target/68741
            * inclhack.def (hpux_vsscanf): New fix.
            * fixincl.x: Regenerated.
            * tests/base/stdio.h [HPUX_VSSCANF_CHECK]: New test.
    
    From-SVN: r233047

commit 822a8753b2165092b04710ed6210f27f1cd93972
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Feb 1 20:20:56 2016 +0000

    Update preferred stack boundary in ix86_update_stack_boundary
    
    __tls_get_addr must be called with 16-byte aligned stack, which is
    guaranted by setting preferred_stack_boundary to 128 bits.  Preferred
    stack boundary adjustment for __tls_get_addr should be done in
    ix86_update_stack_boundary, not ix86_compute_frame_layout Also
    there is no need to over-align stack for __tls_get_addr and function
    with __tls_get_addr call isn't a leaf function.
    
    gcc/
    
            Backport from mainline
            PR target/68986
            * config/i386/i386.c (ix86_compute_frame_layout): Move stack
            alignment adjustment to ...
            (ix86_update_stack_boundary): Here.  Don't over-align stack nor
            change stack_alignment_needed for __tls_get_addr.
            (ix86_finalize_stack_realign_flags): Use stack_alignment_needed
            if __tls_get_addr is called.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/68986
            * gcc.target/i386/pr68986-1.c: New test.
            * gcc.target/i386/pr68986-2.c: Likewise.
            * gcc.target/i386/pr68986-3.c: Likewise.
    
    From-SVN: r233046

commit 7299946a834f20fcab6d4553b0712696a40aa0e9
Author: Richard Henderson <rth@redhat.com>
Date:   Sun Jan 31 23:06:53 2016 -0800

    re PR target/69305 (wrong code with -O and int128 @ aarch64)
    
    PR target/69305
    
      * config/aarch64/aarch64-modes.def (CC_Cmode): New
      * config/aarch64/aarch64-protos.h: Update.
      * config/aarch64/aarch64.c (aarch64_zero_extend_const_eq): New.
      (aarch64_select_cc_mode): Add check for use of CC_Cmode.
      (aarch64_get_condition_code_1): Handle CC_Cmode.
      * config/aarch64/aarch64.md (addti3): Use adddi3_compareC.
      (*add<mode>3_compareC_cconly_imm): New.
      (*add<mode>3_compareC_cconly): New.
      (*add<mode>3_compareC_imm): New.
      (add<mode>3_compareC): New.
      (add<mode>3_carryin, *addsi3_carryin_uxtw): Sort compare operand
      to be first.  Use aarch64_carry_operation.
      (*add<mode>3_carryin_alt1, *addsi3_carryin_alt1_uxtw): Remove.
      (*add<mode>3_carryin_alt2, *addsi3_carryin_alt2_uxtw): Remove.
      (*add<mode>3_carryin_alt3, *addsi3_carryin_alt3_uxtw): Remove.
      (subti3): Use subdi3_compare1.
      (*sub<mode>3_compare0): Rename from sub<mode>3_compare0.
      (sub<mode>3_compare1): New.
      (*sub<mode>3_carryin0, *subsi3_carryin_uxtw): New.
      (*sub<mode>3_carryin): Use aarch64_borrow_operation.
      (*subsi3_carryin_uxtw): Likewise.
      (*ngc<mode>, *ngcsi_uxtw): Likewise.
      (*sub<mode>3_carryin_alt, *subsi3_carryin_alt_uxtw): New.
      * config/aarch64/iterators.md (DWI): New.
      * config/aarch64/predicates.md (aarch64_carry_operation): New.
      (aarch64_borrow_operation): New.
    
    From-SVN: r233031

commit a4976e0460ab152a790d9259453c1abc3aa024e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 1 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r233025

commit ee44c88be538762a0e99c37726d35e97347b8c63
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sun Jan 31 15:49:13 2016 +0000

    * fi.po: Update.
    
    From-SVN: r233022

commit 5a67b9ce8e7532294ec6835e256a7002d3864621
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 31 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r233014

commit a53c6cda07dfdc5a3fba45e01a880d24c237e9ba
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Sat Jan 30 18:13:29 2016 +0100

    backport: [multiple changes]
    
    2016-01-30  Bud Davis  <jmdavis@link.com>
                Mikael Morin  <mikael@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/59746
            * symbol.c (gfc_restore_last_undo_checkpoint): Delete
            a common block symbol if it was put in the list.
    
    2016-01-30  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/66707
            gfortran.dg/common_23.f90: New test.
    
            Backport from trunk.
            2015-08-08  Bud Davis  <jmdavis@link.com>
                        Mikael Morin  <mikael@gcc.gnu.org>
    
            PR fortran/59746
            * gfortran.dg/common_22.f90: New.
    
    From-SVN: r233009

commit 2e0e3c4998e4eb9a35da4b31a4d048a08278f589
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sat Jan 30 01:20:27 2016 +0000

    re PR target/65546 (FAIL: gcc.dg/vect/costmodel/ppc/costmodel-vect-31a.c)
    
    2016-01-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65546
            * gcc.dg/vect/costmodel/ppc/costmodel-vect-31a.c: Correct
            condition being checked, and disable it when the target supports
            misaligned loads and stores.
    
    From-SVN: r233007

commit 70d1b893fbf317bd53ec85d25397aadf7b11fb99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 30 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r233004

commit e622efc67e421fa109f2893bd6a1832ed529f1d1
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Jan 29 18:00:35 2016 +0100

    md.texi (Machine Constraints): Update description of C constraint.
    
            * doc/md.texi (Machine Constraints): Update description
            of C constraint.
    
    From-SVN: r232989

commit 12398291c37b69c0d5640be80b45264d77e4fa45
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Jan 29 17:52:15 2016 +0100

    re PR target/69459 (wrong code with -O2 and vector arithmetics @ x86_64)
    
            PR target/69459
            * config/i386/constraints.md (C): Only accept constant zero operand.
            (BC): New constraint.
            * config/i386/sse.md (*mov<mode>_internal): Use BC constraint
            instead of C constraint.
            * doc/md.texi (Machine Constraints): Update description
            of C constraint.
    
    testsuite/ChangeLog:
    
            PR target/69459
            * gcc.target/i386/pr69459.c: New test.
    
    From-SVN: r232988

commit 9811cedf82cd5431ea9c9fe2d167a5483f3a9827
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jan 29 15:37:02 2016 +0100

    re PR target/69551 (Wrong code with single element vector insert)
    
            PR target/69551
            * config/i386/i386.c (ix86_expand_vector_set) <case V4SImode>: For
            SSE1, copy target into the temporary reg first before recursing
            on it.
    
            * gcc.target/i386/pr69551.c: New test.
    
    From-SVN: r232983

commit 2d9d1f106b9ea0b61e1bff890659b9d05e965caa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 29 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232962

commit 805dd1c847283b4e138099e5517d3172a4e5251b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jan 28 22:08:23 2016 +0100

    re PR middle-end/69542 (-fcompare-debug failure in simplify-rtx.c on i?86 since r232905)
    
            PR middle-end/69542
            * lra-remat.c (calculate_local_reg_remat_bb_data): Only consider
            non-debug insns.
    
            * gcc.dg/torture/pr69542.c: New test.
    
    From-SVN: r232949

commit bf372c838c2705dab88f3b35945ca232dde5edd1
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Jan 28 19:31:56 2016 +0000

    Fix up the change for c/68062.
    
    From-SVN: r232941

commit c690a7878c19b93da1b957bb23efa638c104fe31
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Thu Jan 28 19:42:36 2016 +0100

    re PR fortran/69484 (documentation issue: -Wtabs and -Wall)
    
    2016-01-28  Janus Weil  <janus@gcc.gnu.org>
    
            PR fortran/69484
            * invoke.texi: Fix documentation of -Wall with respect to -Wtabs.
    
    From-SVN: r232940

commit 1a38ce4cddb9f8851e9e4ca3119ba7cf0b9a79fb
Author: Richard Henderson <rth@redhat.com>
Date:   Thu Jan 28 10:11:27 2016 -0800

    re PR rtl-optimization/69447 (wrong code with -O2 -fno-schedule-insns and mixed 8/16/32/64bit arithmetics @ armv7a)
    
    PR rtl-opt/69447
    
      * lra-remat.c (subreg_regs): New.
      (dump_candidates_and_remat_bb_data): Dump it.
      (operand_to_remat): Reject if operand in subreg_regs.
      (set_bb_regs): Collect subreg_regs.
      (lra_remat): Init and free subreg_regs.  Compute
      calculate_local_reg_remat_bb_data before create_cands.
    
    From-SVN: r232938

commit 15f585f126a83661232b1370fdcfaf602430456c
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu Jan 28 19:04:00 2016 +0100

    [PR 69355] Correct hole detection when total_scalarization fails
    
    2016-01-28  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/69355
            * tree-sra.c (analyze_access_subtree): Correct hole detection when
            total_scalarization fails.
    
    testsuite/
            * gcc.dg/tree-ssa/pr69355.c: New test.
    
    From-SVN: r232937

commit ea1e93a2063381977e0c8f6e587f342c81625ce0
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Thu Jan 28 11:36:30 2016 +0100

    re PR fortran/62536 (ICE (segfault) for invalid END BLOCK statement)
    
    gcc/testsuite/ChangeLog:
    
    2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/62536
            * gfortran.dg/block_14.f08: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-01-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/62536
            * decl.c: Prevent setting gfc_current_ns to NULL when block statement's
            nesting is incomplete.  There is already an error conditon, so having
            gfc_current_ns pointing to an eventually wrong namespace does not matter
            that much.
    
    From-SVN: r232918

commit b71037bad46819d2d55c39433507472424e3760f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 28 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232910

commit 8192d6827531c8351081b5ff87400d91219edd8c
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Jan 27 20:31:00 2016 +0000

    re PR c/68062 (ICE when comparing vectors)
    
            PR c/68062
            * c-typeck.c (build_binary_op) [EQ_EXPR, GE_EXPR]: Promote operand
            to unsigned, if needed.  Add -Wsign-compare warning.
    
            * typeck.c (cp_build_binary_op): Promote operand to unsigned, if
            needed.  Add -Wsign-compare warning.
    
            * c-c++-common/vector-compare-4.c: New test.
    
    From-SVN: r232903

commit c3dd1518f0552b21f161c6b32927004cef7df0d3
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jan 27 14:18:33 2016 -0500

    re PR c++/68949 (Implicit initialization of array member silently miscompiling.)
    
            PR c++/68949
    
            * optimize.c (maybe_clone_body): Clear DECL_SAVED_TREE of the alias.
            * semantics.c (expand_or_defer_fn_1): Keep DECL_SAVED_TREE of
            maybe-in-charge *tor.
    
    From-SVN: r232896

commit 9eaf4a5884554d31d114092bf81bfd9a2595570c
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jan 27 14:18:28 2016 -0500

    re PR c++/69131 (default constructor of union incorrectly deleted)
    
            PR c++/69131
    
            * method.c (walk_field_subobs): Add dtor_from_ctor parm.
            (process_subob_fn): Likewise.  Don't consider triviality if true.
            (synthesize_method_walk): Pass it.
    
    From-SVN: r232895

commit 12b4f1e6a63b10d383dcc53327f672274a903a18
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Wed Jan 27 15:48:04 2016 +0100

    re PR fortran/69268 (Sourced allocation calls function twice)
    
    gcc/testsuite/ChangeLog:
    
    2016-01-27  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/69268
            * gfortran.dg/allocatable_scalar_13.f90: Fixing counts of malloc/
            free to fit the actual number of calls.
            * gfortran.dg/allocate_with_source_16.f90: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-01-27  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/69268
            * trans-stmt.c (gfc_trans_allocate): Make sure the source=
            expression is evaluated once only. Use gfc_trans_assignment ()
            instead of explicitly calling gfc_trans_string_copy () to
            reduce the code complexity in trans_allocate.
    
    From-SVN: r232876

commit 5d7105e87c61dce603dec80e841ebebfee9ef0e8
Author: Tom de Vries <tom@codesourcery.com>
Date:   Wed Jan 27 07:13:47 2016 +0000

    Fix pass number in autopar/pr69110.c
    
    2016-01-27  Tom de Vries  <tom@codesourcery.com>
    
            * gcc.dg/autopar/pr69110.c: Fix pass number.
    
    From-SVN: r232865

commit ede8e3e82cf43b8219569b4da7814fb4865f8b22
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 27 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232860

commit 183c91b4f43866f82b5155c01cb26ad3b85ec464
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Jan 26 22:14:53 2016 +0000

    Handle DR_NUM_DIMENSIONS == 0 in initialize_data_dependence_relation
    
    2016-01-26  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/69110
            * tree-data-ref.c (initialize_data_dependence_relation): Handle
            DR_NUM_DIMENSIONS == 0.
    
            * gcc.dg/autopar/pr69110.c: New test.
    
            * testsuite/libgomp.c/pr69110.c: New test.
    
    From-SVN: r232853

commit 8243ae892cb293406e2fac8ad715d65d09b08080
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Jan 26 21:43:49 2016 +0000

    mksysinfo: backport patches from trunk
    
    Backports the following changes from trunk:
        https://golang.org/cl/17893
        https://golang.org/cl/16588
        https://golang.org/cl/16580
        https://golang.org/cl/16534
        https://golang.org/cl/14858
    
    The patch was put together by Lynn Boger.
    
    From-SVN: r232849

commit 3def2f004266f7d318ab6b0afa903971868f1350
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jan 26 12:07:13 2016 +0000

    * config/ia64/ia64.c (ia64_expand_vecint_compare): Use gen_int_mode.
    
    From-SVN: r232823

commit fb6fdec59a0ed4807d7a2625da6708615352a295
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 26 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232808

commit 668602fb03a006332cf80b7150873b91686288f2
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Jan 25 10:51:20 2016 -0600

    re PR fortran/61831 (runtime error: pointer being freed was not allocated)
    
            PR fortran/61831
            * gfortran.dg/derived_constructor_comps_6.f90: Add missing } to fix
            up dg-additional-options.
    
    From-SVN: r232799

commit 1375ec323ef9aa9173463dea4974475c50c53591
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Mon Jan 25 12:36:11 2016 +0100

    re PR fortran/68283 (ice: gfc_variable_attr(): Bad array reference)
    
    2016-01-25  Dominique d'Humieres <dominiq@lps.ens.fr>
    
            PR fortran/68283
            * primary.c (gfc_variable_attr): revert revision r221955,
            call gfc_internal_error only if there is no error.
    
            PR fortran/68283
            gfortran.dg/pr68283.f90: New test.
    
    From-SVN: r232790

commit 76db38deba0c6f32838569a92bec2374dcce4b80
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 25 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232782

commit 84500a0131f431780f395420bbba104f23ff80bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 24 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r232772

commit ab6d1c84386ca1eca94141e4b01817198564017e
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sat Jan 23 20:43:19 2016 +0000

    Fix clobber removal in parloops
    
    2016-01-23  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/69426
            * tree-parloops.c (eliminate_local_variables_stmt): Handle vdef of
            removed clobber.
    
            * gcc.dg/autopar/pr69426.c: New test.
    
    From-SVN: r232768

commit ca254bf7e622e0d57edda6ae50bc3ea70d3b8bf2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 23 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232759

commit ca140bff1b7a4769a34db20534df52174955ff02
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Fri Jan 22 15:37:50 2016 +0000

    [ARM] Fix PR target/69403: Bug in thumb2_ior_scc_strict_it pattern
    
            Backport from mainline
            2016-01-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/69403
            * config/arm/thumb2.md (*thumb2_ior_scc_strict_it): Convert to
            define_insn_and_split.  Ensure operands[1] and operands[0] do not
            get assigned the same register.
    
            * gcc.c-torture/execute/pr69403.c: New test.
    
    From-SVN: r232733

commit e908269c5dbee27547e842432407b16f5e023660
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 22 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r232715

commit e9dd44638f850d4215c41c8854365c2fe5c8d78f
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jan 21 08:33:06 2016 +0000

    S/390: Fix cfi for GPR 2 FPR saves
    
    gcc/ChangeLog:
    
    2016-01-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                Backported from mainline
                2015-07-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                * config/s390/s390.c (s390_save_gprs_to_fprs): Add CFA_REGISTER
                reg note to the GPR -> FPR save instructions.
    
    gcc/testsuite/ChangeLog:
    
    2016-01-21  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                Backported from mainline
                2015-07-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                * gcc.target/s390/gpr2fprsavecfi.c: New test.
    
    From-SVN: r232665

commit e2ff61b7f83894393e58b7ef0705f10bbd38a149
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Thu Jan 21 08:29:28 2016 +0000

    backport: re PR tree-optimization/67781 (wrong code generated on big-endian with -O1 -fexpensive-optimizations)
    
    2016-01-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-01-08  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR tree-optimization/67781
        * tree-ssa-math-opts.c (find_bswap_or_nop): Zero out bytes in cmpxchg
        and cmpnop in two steps: first the ones not accessed in original
        gimple expression in a endian independent way and then the ones not
        accessed in the final result in an endian-specific way.
    
        gcc/testsuite/
        PR tree-optimization/67781
        * gcc.c-torture/execute/pr67781.c: New file.
    
    From-SVN: r232664

commit 9cd386c5c20fb1c0d0f4e5554a546e01b7624ca2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 21 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232643

commit 5c57b3d71757cb87f3aea47a60f0ec897df24006
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Wed Jan 20 15:35:11 2016 +0000

    backport: mpxrt.c (handler): Fix verbosity for error message.
    
    libmpx/
    
            Backport from mainline r232619.
            2016-01-20  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            * mpxrt/mpxrt.c (handler): Fix verbosity for
            error message.
    
    From-SVN: r232621

commit fa0793392a9c5e2923effb0222047fa2f4b4a5d2
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Wed Jan 20 14:34:55 2016 +0000

    Require non-x32 target for compile-time MPX tests
    
    Compile-time MPX tests don't need the MPX run-time library.  They
    should pass for non-x32 target.
    
            Backport from mainline
            PR testsuite/69366
            * g++.dg/pr63995-1.C: Require non-x32 target, instead of,
            the MPX run-time library, for compile-time MPX test.
            * gcc.target/i386/chkp-always_inline.c: Likewise.
            * gcc.target/i386/chkp-bndret.c: Likewise.
            * gcc.target/i386/chkp-builtins-1.c: Likewise.
            * gcc.target/i386/chkp-builtins-2.c: Likewise.
            * gcc.target/i386/chkp-builtins-3.c: Likewise.
            * gcc.target/i386/chkp-builtins-4.c: Likewise.
            * gcc.target/i386/chkp-const-check-1.c: Likewise.
            * gcc.target/i386/chkp-const-check-2.c: Likewise.
            * gcc.target/i386/chkp-hidden-def.c: Likewise.
            * gcc.target/i386/chkp-label-address.c: Likewise.
            * gcc.target/i386/chkp-lifetime-1.c: Likewise.
            * gcc.target/i386/chkp-narrow-bounds.c: Likewise.
            * gcc.target/i386/chkp-remove-bndint-1.c: Likewise.
            * gcc.target/i386/chkp-remove-bndint-2.c: Likewise.
            * gcc.target/i386/chkp-strchr.c: Likewise.
            * gcc.target/i386/chkp-strlen-1.c: Likewise.
            * gcc.target/i386/chkp-strlen-2.c: Likewise.
            * gcc.target/i386/chkp-strlen-3.c: Likewise.
            * gcc.target/i386/chkp-strlen-4.c: Likewise.
            * gcc.target/i386/chkp-strlen-5.c: Likewise.
            * gcc.target/i386/chkp-stropt-1.c: Likewise.
            * gcc.target/i386/chkp-stropt-10.c: Likewise.
            * gcc.target/i386/chkp-stropt-11.c: Likewise.
            * gcc.target/i386/chkp-stropt-12.c: Likewise.
            * gcc.target/i386/chkp-stropt-13.c: Likewise.
            * gcc.target/i386/chkp-stropt-14.c: Likewise.
            * gcc.target/i386/chkp-stropt-15.c: Likewise.
            * gcc.target/i386/chkp-stropt-16.c: Likewise.
            * gcc.target/i386/chkp-stropt-2.c: Likewise.
            * gcc.target/i386/chkp-stropt-3.c: Likewise.
            * gcc.target/i386/chkp-stropt-4.c: Likewise.
            * gcc.target/i386/chkp-stropt-5.c: Likewise.
            * gcc.target/i386/chkp-stropt-6.c: Likewise.
            * gcc.target/i386/chkp-stropt-7.c: Likewise.
            * gcc.target/i386/chkp-stropt-8.c: Likewise.
            * gcc.target/i386/chkp-stropt-9.c: Likewise.
            * gcc.target/i386/pr63995-2.c: Likewise.
            * gcc.target/i386/pr64805.c: Likewise.
            * gcc.target/i386/pr65044.c: Likewise.
            * gcc.target/i386/pr65167.c: Likewise.
            * gcc.target/i386/pr65183.c: Likewise.
            * gcc.target/i386/pr65184.c: Likewise.
            * gcc.target/i386/thunk-retbnd.c: Likewise.
    
    From-SVN: r232617

commit e7b2fe40fe49ea4fee0d67bd44a976d6c4f66080
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Jan 20 11:24:51 2016 +0000

    re PR c/68513 (ICE in gimplify_expr, at gimplify.c:8832, c_maybe_const_expr in IL)
    
            PR c/68513
            * match.pd ((x & ~m) | (y & m)): Only perform on GIMPLE.
    
            * gcc.dg/pr68513.c: New test.
    
    From-SVN: r232605

commit e2d2c5216babc7d9dcca4125c8f311830134bd52
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 20 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232597

commit 02d151cd0bd88dc71cfd84b50a8c82b2f83c3274
Author: Sergei Trofimovich <siarheit@google.com>
Date:   Tue Jan 19 23:12:22 2016 +0000

    ia64: don't use dynamic relocations for local symbols
    
    Backported from trunk for PR other/60465.
    
    From-SVN: r232594

commit f8ccacad8ab4f4b0436f6f0e1b8ec579185b7154
Author: Jeff Law <law@redhat.com>
Date:   Tue Jan 19 14:03:57 2016 -0700

    backport: PR tree-optimization/pr67755
    
    
    
            Backport from mainline
            2016-01-12  Jeff Law  <law@redhat.com>
    
            PR tree-optimization/pr67755
            * tree-ssa-threadupdate.c (struct ssa_local_info_t): Add new field
            "need_profile_correction".
            (thread_block_1): Initialize new field to false by default.  If we
            have multiple thread paths through a common joiner to different
            final targets, then set new field to true.
            (compute_path_counts): Only do count adjustment when it's really
            needed.
    
    From-SVN: r232584

commit e380d0a53bf964c471345bae3f63284d4868936c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jan 19 18:51:38 2016 +0100

    re PR testsuite/68820 (FAIL: gcc.c-torture/execute/builtins/memops-asm.c execution,  -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects)
    
            PR testsuite/68820
            * gcc.c-torture/execute/builtins/memops-asm.x: New file.
            * gcc.c-torture/execute/builtins/strstr-asm.x: Ditto.
            * gcc.c-torture/execute/builtins/strstr-asm.c: Remove dg-options.
    
    From-SVN: r232575

commit 7d13ac952d0dbdd6c1be4ff51a170ccf5267ca91
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Jan 19 17:11:53 2016 +0000

    re PR c++/68965 (`-Wunused-parameter` is reported in variadic lambda or function using sizeof...(xs))
    
            PR c++/68965
            * pt.c (tsubst_copy): Mark elements in expanded vector as used.
    
            * g++.dg/cpp1y/parameter-pack-1.C: New test.
            * g++.dg/cpp1y/parameter-pack-2.C: New test.
    
    From-SVN: r232574

commit 00caa8b52343dbdb31993c4ba5442dfb09831886
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Jan 19 15:02:15 2016 +0000

    [ARM] PR target/69135: Mark ARMv8 vcvt instructions as unconditional
    
            Backport from mainline
            2016-01-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/69135
            * config/arm/vfp.md (l<vrint_pattern><su_optab><mode>si2): Set "conds"
            attribute to unconditional.  Remove %? from output template.
    
            * gcc.target/arm/pr69135_1.c: New test.
    
    From-SVN: r232570

commit 167c1ac98b7856e45770129c83b0786ac22343ec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 19 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232545

commit b7ac02b8cdb2e3ecb8ad72a07b64b506a20a6521
Author: Alexander Fomin <alexander.fomin@intel.com>
Date:   Mon Jan 18 17:09:06 2016 +0000

    Backport to mainline
    2015-10-09  Alexander Fomin  <alexander.fomin@intel.com>
    
    gcc/
    
            PR target/67895
            * config/i386/sse.md (define_insn "sse_cvtsi2ss<round_name>"):
            Adjust embedded rounding/SAE specifier position.
            (define_insn "sse_cvtsi2ssq<round_name>"): Likewise.
            (define_insn "cvtusi2<ssescalarmodesuffix>32<round_name>"): Likewise.
            (define_insn "cvtusi2<ssescalarmodesuffix>64<round_name>"): Likewise.
            (define_insn "sse2_cvtsi2sdq<round_name>"): Likewise.
            (define_insn "avx512dq_rangep<mode><mask_name><round_saeonly_name>"):
            Likewise.
            (define_insn "avx512dq_ranges<mode><round_saeonly_name>"): Likewise.
    
    gcc/testsuite
    
            PR target/67895
            * gcc.target/i386/avx512dq-vrangepd-1.c: Adjust.
            * gcc.target/i386/avx512dq-vrangeps-1.c: Likewise.
            * gcc.target/i386/avx512dq-vrangesd-1.c: Likewise.
            * gcc.target/i386/avx512dq-vrangess-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtsi2sd64-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtsi2ss-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtsi2ss64-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtusi2sd64-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtusi2ss-1.c: Likewise.
            * gcc.target/i386/avx512f-vcvtusi2ss64-1.c: Likewise.
    
    From-SVN: r232533

commit 8c8d74fe1e1433597dc6e450c5c9ebe38a323461
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 18 16:28:48 2016 +0000

    Fix C++98 std::signbit<long double>
    
            PR libstdc++/60637
            * include/c_global/cmath (signbit) [__cplusplus < 201103L]: Use
            __builtin_signbitf or __builtin_signbitl as appropriate.
            * testsuite/26_numerics/headers/cmath/60637.cc: New.
    
    From-SVN: r232532

commit 9f06f3d057215409b7e0ed680fae2f0604625019
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Jan 18 17:19:53 2016 +0100

    backport: re PR target/69140 (stack alignment + O1 breaks with Microsoft ABI)
    
            Backport from mainline
            2016-01-07  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/69140
            * config/i386/i386.c (ix86_frame_pointer_required): Enable
            frame pointer for TARGET_64BIT_MS_ABI when stack is misaligned.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-01-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/69140
            * gcc.target/i386/pr69140.c: New test
    
    From-SVN: r232528

commit b5cc80d167c3dfbef1c524bbcc49e424189a7314
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jan 18 10:29:45 2016 +0000

    re PR ada/69219 (error on nested subprograms with Inline_Always and Intrinsic)
    
            PR ada/69219
            * gcc-interface/trans.c (check_inlining_for_nested_subprog): Consider
            the parent function instead of the current function in order to issue
            the warning or the error.  Add guard for ignored functions.
    
    From-SVN: r232499

commit b12261353940c12f215669abe42f9a18fe896012
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Jan 18 02:46:58 2016 +0000

    backport: re PR tree-optimization/68799 (lto ICE on powerpc64le-linux-gnu builing python 2.7.x)
    
    2016-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2016-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/68799
            * gimple-ssa-strength-reduction.c (create_phi_basis): Directly
            look up phi candidates in the statement-candidate map.
            (phi_add_costs): Likewise.
            (record_phi_increments): Likewise.
            (phi_incr_cost): Likewise.
            (ncd_with_phi): Likewise.
            (all_phi_incrs_profitable): Likewise.
    
    From-SVN: r232492

commit 92de5ddf833f171daf94ccc71e071a5e55b571a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 18 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232489

commit 3d246b85ce85b77203403bafe0b4febaab0e61bc
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Jan 17 17:34:12 2016 +0000

    backport: re PR fortran/61831 (runtime error: pointer being freed was not allocated)
    
    2016-01-17  Mikael Morin  <mikael@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/61831
            * gfortran.dg/derived_constructor_components_6.f90: New file.
            * gfortran.dg/allocate_with_source_14.f03: Change count of
            __builtin_malloc from 21 to 23.
    
    2016-01-17  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/66082
            * gfortran.dg/alloc_comp_auto_array_3.f90: New file. Count of
            __builtin_malloc increased from 3 to 4, relative to trunk.
    
    2016-01-17  Mikael Morin  <mikael@gcc.gnu.org>
                Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from trunk.
            PR fortran/61831
            * trans-array.c (gfc_conv_array_parameter): Guard allocatable
            component deallocation code generation with descriptorless
            calling convention flag.
            * trans-expr.c (gfc_conv_expr_reference): Remove allocatable
            component deallocation code generation from revision 212329.
            (expr_may_alias_variables): New function.
            (gfc_conv_procedure_call): New boolean elemental_proc to factor
            check for procedure elemental-ness.  Rename boolean f to nodesc_arg
            and declare it in the outer scope.  Use expr_may_alias_variables,
            elemental_proc and nodesc_arg to decide whether generate allocatable
            component deallocation code.
            (gfc_trans_subarray_assign): Set deep copy flag.
    
    2016-01-17  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/66082
            * trans-array.c (gfc_conv_array_parameter): Ensure that all
            non-variable arrays with allocatable components have the
            components deallocated after the procedure call.
    
    From-SVN: r232482

commit ee63d05e8f16ba39ee7b64792786bc2b7e38f80b
Author: Kugan Vivekanandarajah <kuganv@linaro.org>
Date:   Sun Jan 17 02:44:26 2016 +0000

    backport: re PR target/69194 (internal compiler error: in extract_insn, at recog.c:2286)
    
    2016-01-17  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2016-01-12  Kugan Vivekanandarajah  <kuganv@linaro.org>
                        Jim Wilson  <jim.wilson@linaro.org>
    
            PR target/69194
            * config/arm/arm-builtins.c (arm_expand_neon_args): Call
            copy_to_mode_reg instead of force_reg.
    
    2016-01-17  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2016-01-12  Kugan Vivekanandarajah  <kuganv@linaro.org>
                        Jim Wilson  <jim.wilson@linaro.org>
    
            PR target/69194
            * gcc.target/arm/pr69194.c: New test.
    
    From-SVN: r232481

commit 0c09802c21cf345a11c470656b3d314eeb8e8804
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 17 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232479

commit b319833d4c6b9590cb4b196ad786094bd38922dd
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sat Jan 16 23:11:22 2016 +0000

    Add __int128 symbols to x32 aseline_symbols.txt
    
            Backport from mainline
            * config/abi/post/x86_64-linux-gnu/x32/baseline_symbols.txt: Add
            __int128 symbols.
    
    From-SVN: r232477

commit 948246bed4392d3747234c1144ef4fb01c2cc6a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 16 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232459

commit 83d875c4b463e3404b4ec76ce95f9eb43ca2bef9
Author: Alexander Fomin <alexander.fomin@intel.com>
Date:   Fri Jan 15 11:03:24 2016 +0000

    backport: re PR target/69228 (Default mask is not allowed for AVX512 prefetch gather/scatter insns)
    
    Backport from mainline
    2016-01-13  Alexander Fomin  <alexander.fomin@intel.com>
    
    gcc/
    
            PR target/69228
            * config/i386/sse.md (define_expand "avx512pf_gatherpf<mode>sf"):
            Change first operand predicate from register_or_constm1_operand
            to register_operand.
            (define_expand "avx512pf_gatherpf<mode>df"): Likewise.
            (define_expand "avx512pf_scatterpf<mode>sf"): Likewise.
            (define_expand "avx512pf_scatterpf<mode>df"): Likewise.
            (define_insn "*avx512pf_gatherpf<mode>sf"): Remove.
            (define_insn "*avx512pf_gatherpf<mode>df"): Likewise.
            (define_insn "*avx512pf_scatterpf<mode>sf"): Likewise.
            (define_insn "*avx512pf_scatterpf<mode>df"): Likewise.
            * config/i386/i386.c (ix86_expand_builtin): Remove first operand
            comparison with constm1_rtx from vec_prefetch_gen part.
    
    gcc/testsuite
    
            PR target/69228
            * gcc.target/i386/avx512pf-vscatterpf0dpd-1.c: Adjust.
            * gcc.target/i386/avx512pf-vscatterpf0dps-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf0qpd-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf0qps-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf1dpd-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf1dps-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf1qpd-1.c: Likewise.
            * gcc.target/i386/avx512pf-vscatterpf1qps-1.c: Likewise.
    
    From-SVN: r232412

commit c57ac69f3afa3770939921f59223097610ea9f83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 15 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232397

commit 0d67d0324416247b623bd18dc80f7b0252309518
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Thu Jan 14 21:57:35 2016 +0100

    re PR fortran/66680 (ICE with openmp, a loop and a type bound procedure)
    
    2016-01-14  Dominique d'Humieres <dominiq@lps.ens.fr>
    
            PR fortran/66680
            * testsuite/libgomp.fortran/pr66680.f90: New test.
    
    From-SVN: r232388

commit 7cdf798794bb7dfa2e0e5a6ebf4bb692817d4d5c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 14 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232358

commit 3c3b25e061b70ff05d0b4a8957e6cdc602d63a98
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jan 13 12:18:02 2016 +0000

    re PR tree-optimization/69013 (gfortran-5.3.0 ICE in prune_uninit_phi_opnds_in_unrealizable_paths, at tree-ssa-uninit.c:1121)
    
    2016-01-13  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69013
            * tree-ssa-uninit.c (prune_uninit_phi_opnds_in_unrealizable_paths):
            Exchange assert for a test.
    
    From-SVN: r232321

commit 358a2126bc703e551449c8e3f4cca8ea742e9a81
Author: Max Ostapenko <m.ostapenko@partner.samsung.com>
Date:   Wed Jan 13 11:27:38 2016 +0200

    Cherry-pick r224315 and r241487 from upstream.
    
            PR sanitizer/69147
            * asan/asan_mac.cc: Cherry pick upstream r241487.
            * sanitizer_common/sanitizer_mac.cc: Cherry pick upstream r224315.
            * sanitizer_common/sanitizer_mac.h: Likewise.
    
    From-SVN: r232316

commit bcc8e48311195de20bad96e668c36606e98e9e19
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 13 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232303

commit d1ad57cc17f01ef78f2961217519d94d8b0e57f6
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 12 19:57:56 2016 +0000

    Fix alignment check in AVX-512 masked store
    
            Backport from mainline
            2016-01-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69198
            * config/i386/i386.c (ix86_expand_special_args_builtin): Ensure
            aligned_mem is properly set for AVX512-VL floating point masked
            stores.
    
            2015-12-04  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            * config/i386/sse.md (<avx512>_store<mode>_mask): Fix
            operand checked for alignment.
    
    From-SVN: r232295

commit 606d9e7a0779f88fdbe53e5f02c3dbdc35da184c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jan 12 17:02:15 2016 +0000

    Remove noexcept from function template that can throw
    
            PR libstdc++/69092
            * include/bits/basic_string.h (basic_string::_S_copy_chars<_Iterator>):
            Remove _GLIBCXX_NOEXCEPT.
            testsuite/21_strings/basic_string/cons/char/69092.cc: New.
    
    From-SVN: r232282

commit 5b41cafb342e065634ffd0eeb2e7f2776fcc1820
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jan 12 16:54:10 2016 +0000

    libstdc++/68995 qualify calls to __callable_functor
    
            PR libstdc++/68995
            * include/std/functional (_Function_handler::_M_invoke): Qualify
            __callable_functor.
            * testsuite/20_util/function/68995.cc: New.
    
    From-SVN: r232281

commit f0424299a9639f13111b0fa12577dfd6cf564c1c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jan 12 14:55:00 2016 +0000

    Prevent recursive instantiation in std::function
    
            PR libstdc++/69005
            PR libstdc++/69222
            * include/std/functional (function::_Invoke): Remove, use result_of.
            (function::_Callable): Replace alias template with class template
            and use partial specialization instead of _NotSelf alias template.
            (function(_Functor)): Add "not self" constraint so that _Callable is
            not used while type is incomplete.
            * testsuite/20_util/function/69222.cc: New.
    
    From-SVN: r232274

commit e4ab3e74deffdafca7b838751456494d2ad073a6
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Tue Jan 12 13:54:45 2016 +0000

    Backport: [PATCH] Be less conservative in process_{output,input}_constraints (PR target/65689)
    
    gcc/
    
            Backport from mainline r222186.
            2015-04-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/65689
            * genpreds.c (struct constraint_data): Add maybe_allows_reg and
            maybe_allows_mem bitfields.
            (maybe_allows_none_start, maybe_allows_none_end,
            maybe_allows_reg_start, maybe_allows_reg_end, maybe_allows_mem_start,
            maybe_allows_mem_end): New variables.
            (compute_maybe_allows): New function.
            (add_constraint): Use it to initialize maybe_allows_reg and
            maybe_allows_mem fields.
            (choose_enum_order): Sort the non-is_register/is_const_int/is_memory/
            is_address constraints such that those that allow neither mem nor
            reg come first, then those that only allow reg but not mem, then
            those that only allow mem but not reg, then the rest.
            (write_allows_reg_mem_function): New function.
            (write_tm_preds_h): Call it.
            * stmt.c (parse_output_constraint, parse_input_constraint): Use
            the generated insn_extra_constraint_allows_reg_mem function
            instead of always setting *allows_reg = true; *allows_mem = true;
            for unknown extra constraints.
    
    gcc/testsuite/
    
            Backport from mainline r222186.
            2015-04-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/65689
            * gcc.target/aarch64/c-output-template-4.c: New test.
    
    From-SVN: r232269

commit 8a211105c0d2f9b33a261968142247a88cd799c1
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Tue Jan 12 01:39:54 2016 +0000

    pa.c (pa_emit_move_sequence): Handle floating point reloads for other unsupported memory operands.
    
            * config/pa/pa.c (pa_emit_move_sequence): Handle floating point
            reloads for other unsupported memory operands.
    
    From-SVN: r232254

commit aba9bc4a0b08bbb7a2486d07e220d7bdb04fb3da
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 12 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r232247

commit dcd1687970d9aca17d1308c43c5ee16a08185c8e
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jan 11 23:56:50 2016 +0000

    * zh_CN.po: Update.
    
    From-SVN: r232245

commit fa1a3e52117345392d862a9c6f28f3f787258d88
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon Jan 11 13:44:53 2016 +0100

    [PR ipa/66616] Copy can_change_signature flag to artificial thunks
    
    2016-01-11  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/66616
            * cgraphclones.c (duplicate_thunk_for_node): Copy can_change_signature
            flag.
    
    From-SVN: r232226

commit 0f27a5bbeaa800f389cebde1bae67517233e78d5
Author: Yury Gribov <ygribov@gcc.gnu.org>
Date:   Mon Jan 11 09:11:11 2016 +0000

    Backport fix docs for -frandom-seed.
    
    2016-01-11  Yury Gribov  <y.gribov@samsung.com>
    
            Backport from mainline
            2016-01-11  Yury Gribov  <y.gribov@samsung.com>
    
            PR 67425
            * common.opt (frandom-seed): Fix parameter name.
            * doc/invoke.texi (frandom-seed): Ditto and describe parameter.
    
    From-SVN: r232210

commit d3baf89e1e39e41461dd536d177b1c0155f747f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 11 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r232205

commit 3697b64ce4dccf5de26d662e434df7510b27bee8
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Jan 10 18:06:43 2016 +0000

    Backport PRs 49954, 50221, 63932, 66408, 67674, 67779, 68216
    
    2016-01-10  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from mainline.
            PR fortran/50221
            PR fortran/68216
            PR fortran/63932
            PR fortran/66408
            * trans_array.c (gfc_conv_scalarized_array_ref): Pass the
            symbol decl for deferred character length array references.
            * trans-stmt.c (gfc_trans_allocate): Keep the string lengths
            to update deferred length character string lengths.
            * trans-types.c (gfc_get_dtype_rank_type); Use the string
            length of deferred character types for the dtype size.
            * trans.c (gfc_build_array_ref): For references to deferred
            character arrays, use the domain max value, if it is a variable
            to set the 'span' and use pointer arithmetic for acces to the
            element.
            (trans_code): Set gfc_current_locus for diagnostic purposes.
    
            Backport from mainline.
            PR fortran/67674
            * trans-expr.c (gfc_conv_procedure_call): Do not fix deferred
            string lengths of components.
    
            Backport from mainline.
            PR fortran/49954
            * resolve.c (deferred_op_assign): New function.
            (gfc_resolve_code): Call it.
            * trans-array.c (concat_str_length): New function.
            (gfc_alloc_allocatable_for_assignment): Jump directly to alloc/
            realloc blocks for deferred character length arrays because the
            string length might change, even if the shape is the same. Call
            concat_str_length to obtain the string length for concatenation
            since it is needed to compute the lhs string length.
            Set the descriptor dtype appropriately for the new string
            length.
            * trans-expr.c (gfc_trans_assignment_1): Fix the rse string
            length for all characters, other than deferred types. For
            concatenation operators, push the rse.pre block to the inner
            most loop so that the temporary pointer and the assignments
            are properly placed.
    
            Backport from mainline.
            PR fortran/67779
            * trans_array.c (gfc_conv_scalarized_array_ref): Add missing
            se->use_offset from condition for calculation of 'base'.
    
    2015-01-10  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from mainline.
            PR fortran/50221
            * gfortran.dg/deferred_character_1.f90: New test.
            * gfortran.dg/deferred_character_4.f90: New test for comment
            #4 of the PR.
    
            Backport from mainline.
            PR fortran/68216
            * gfortran.dg/deferred_character_2.f90: New test.
    
            Backport from mainline.
            PR fortran/67674
            * gfortran.dg/deferred_character_3.f90: New test.
    
            Backport from mainline.
            PR fortran/63932
            * gfortran.dg/deferred_character_5.f90: New test.
    
            Backport from mainline.
            PR fortran/66408
            * gfortran.dg/deferred_character_6.f90: New test.
    
            Backport from mainline.
            PR fortran/49954
            * gfortran.dg/deferred_character_7.f90: New test.
    
            Backport from mainline.
            PR fortran/67779
            * gfortran.dg/actual_array_offset_1: New test.
    
    From-SVN: r232203

commit 253f719fd45e9b0a7a81ba8bd13eaca3f9e1c03c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 10 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232193

commit 8e6f3b6480fc86ec89101008d86901e64dae63b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 9 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r232183

commit 51ff2b518b63b028b9797f58371bc2db623e0465
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jan 8 19:13:32 2016 +0000

    re PR c++/68449 (ICE in cxx_eval_constant_expression on atomic_load in C++)
    
            PR c++/68449
            * constexpr.c (cxx_eval_constant_expression): Handle NULL initializer.
    
            * g++.dg/pr68449.C: New.
    
    From-SVN: r232177

commit 3fd435477c4d9581e76c73a894a84cf837dff20d
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jan 8 11:01:35 2016 -0500

    re PR middle-end/68983 (ICE: in store_field, at expr.c:6659)
    
            PR c++/68983
    
            PR c++/67557
            * call.c (unsafe_copy_elision_p): Look through COMPOUND_EXPR.
    
    From-SVN: r232169

commit 6d4826f7a24ccbc7ffee34bb676748022f95d2b2
Author: Martin Jambor <mjambor@suse.cz>
Date:   Fri Jan 8 13:30:56 2016 +0100

    [PR 68851] Do not collect thunks in collect_callers
    
    2016-01-08  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/68851
    gcc/
            * cgraph.c (collect_callers_of_node_1): Do not collect thunks.
            * cgraph.h (cgraph_node): Change comment of collect_callers.
    
    testsuite/
            * g++.dg/ipa/pr68851.C: New test.
    
    From-SVN: r232159

commit cf46a2accfb56b42de478694b6c3a54e95032bdb
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Fri Jan 8 10:36:37 2016 +0000

    [ARM] PR target/68648: Fold NOT of CONST_INT in andsi_iorsi3_notsi splitter
    
            PR target/68648
            * config/arm/arm.md (*andsi_iorsi3_notsi): Try to simplify
            the complement of operands[3] during splitting.
    
            * gcc.c-torture/execute/pr68648.c: New test.
    
    From-SVN: r232157

commit b2a55e91819c5b77840a3a7134a616d2ed369828
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 8 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r232145

commit 9f275898d13e17f6ef0d81698d770c8ade954497
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 7 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r232119

commit 42a11bf849771c25a80ecb3cd4c79491476d19fa
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Wed Jan 6 17:32:41 2016 +0000

    backport: re PR other/67627 (libatomic parallel build failure)
    
    2016-01-06  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            Backport from mainline:
            2016-01-06  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR other/67627
            * Makefile.am (all-multi): Add dependency.
            * Makefile.in: Regenerate.
    
    From-SVN: r232105

commit 2ecbc6cab7da5ce6c5faa659d28b6c03ac89c44f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 6 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232095

commit 41a2d55cf55fe2f1a0bb713394330f46e528cd14
Author: Peter Bergner <bergner@gcc.gnu.org>
Date:   Tue Jan 5 11:16:02 2016 -0600

    Fix PR number in revision  231911 ChangeLogs
    
    From-SVN: r232078

commit baad0e18880c9324961afb76b6eb9619ad67dae5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 5 00:16:07 2016 +0000

    Daily bump.
    
    From-SVN: r232068

commit b1d80644d7a986527bb74456f4eca7bfe2d3b2c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 4 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r232044

commit 72df0c122aa6317b913c46c26e695659c8a99e3c
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sun Jan 3 17:34:00 2016 +0000

    jvm.h (GCJ_CXX_ABI_VERSION): Freeze the ABI for releases made from the gcc-5-branch.
    
    2016-01-03  Matthias Klose  <doko@ubuntu.com>
    
            * include/jvm.h (GCJ_CXX_ABI_VERSION): Freeze the ABI for releases
            made from the gcc-5-branch.
    
    From-SVN: r232041

commit 38c411eb4039e7d4e7913740db4a307c578efd77
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 3 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r232037

commit bd4ecf8fb673a341a1d82845ff8455297ffaa88d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 2 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r232032

commit 851cdb38d878e908d89244bc46fef7bdf3b34fbc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 1 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r232022

commit 2a924a591af64ae9c20a4854b9fab7a8a7140ce2
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Thu Dec 31 08:46:35 2015 +0000

    AVX-512. Fix AVX-512 broadcast pattern.
    
    gcc/
            * config/i386/sse.md (define_insn "vec_dup<mode>"): Separate EVEX
            alternative.
    gcc/testsuite/
            * gcc.target/i386/avx512f-vbroadcastsd-3.c: New test.
    
    From-SVN: r232015

commit 2b65d413f837ae88df3757500d62582747ef9042
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 31 00:24:59 2015 +0000

    Backport PR c/68668 patch to fix PR c/69037.
    
    gcc/c:
            PR c/69037
            Backport from mainline:
    
            2015-12-07  Marek Polacek  <polacek@redhat.com>
    
            PR c/68668
            * c-decl.c (grokdeclarator): If ORIG_QUAL_INDIRECT is indirect, use
            TREE_TYPE of ORIG_QUAL_TYPE, otherwise decrement ORIG_QUAL_INDIRECT.
    
    gcc/testsuite:
            PR c/69037
            Backport from mainline:
    
            2015-12-07  Marek Polacek  <polacek@redhat.com>
    
            PR c/68668
            * gcc.dg/pr68668.c: New test.
    
    From-SVN: r232014

commit 1eb98da185d409cc5b42df5cb3fdba293cc8adc6
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 31 00:18:37 2015 +0000

    * fr.po: Update.
    
    From-SVN: r232013

commit 15ad0d0727075177157d36717329fe530329c883
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 31 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r232010

commit fcd9ba4972550bec5c9caeaf56338effa824845d
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Dec 30 22:32:34 2015 +0000

    re PR libfortran/68987 (double free or corruption in _gfortran_st_write_done when a write statement to an internal file uses an invalid format and the ERR= specifier appears.)
    
    2015-12-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR fortran/68987
            * gfortran.dg/error_format_2.f90: New test.
    
    From-SVN: r232008

commit b9e5be871e65e81f7e018151627abb000a56082a
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Dec 30 20:32:53 2015 +0000

    coarray_40.f90: Link with libatomic if available.
    
            * gfortran.dg/coarray_40.f90: Link with libatomic if available.
            * gfortran.dg/coarray_lib_comm_1.f90: Revise to use
            dg-additional-options.
    
    From-SVN: r232006

commit 6e370ba89f03b7e99d09a8fd606e67f82be78018
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Dec 30 18:06:51 2015 +0000

    Fix for PR68987
    
    From-SVN: r232004

commit 87d9848d76001983e7ba58014ddaa745d52d1872
Author: Kirill Yukhin <kyukhin@gcc.gnu.org>
Date:   Wed Dec 30 15:14:11 2015 +0000

    [Obvious] Remove redundant brances from the test.
    
    From-SVN: r232002

commit 7a9c74b43b361218c20ded03963d0b4a90f98552
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Wed Dec 30 14:50:43 2015 +0000

    AVX-512. Split out mask version for vec_extract_hi_<mode>.
    
    gcc/
            * config/i386/sse.md (define_insn "vec_extract_hi_<mode>_maskm"):
            Remove "prefix_extra".
            (define_insn "vec_extract_hi_<mode>_mask"): New.
            (define_insn "vec_extract_hi_<mode>"): Remove masking.
    gcc/testsuite/
            * gcc.target/i386/avx-vextractf128-256-5.c: New test.
            * gcc.target/i386/avx512vl-vextractf32x4-1.c: Fix scan pattern.
            * gcc.target/i386/avx512vl-vextracti32x4-1.c: Ditto.
    
    From-SVN: r232001

commit 7301feb65480a1c617517fadb22ff14ccdeeaeca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 30 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r231999

commit 1f70edb1c8fa22294f01e32183bcbca5da78d618
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 29 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231987

commit 21246482d3f147c1903c4f712fbe4f726732cd4d
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Dec 28 20:41:05 2015 +0000

    pr67609.c: Add -fno-common option on hppa*-*-hpux*.
    
            * gcc.dg/torture/pr67609.c: Add -fno-common option on hppa*-*-hpux*.
    
    From-SVN: r231978

commit 368329a4b074d434a612d344d2d4efd2a113cca6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 28 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231969

commit 09ef4fec1225c8b414a77255fceed1a27e4b1aad
Author: Edward Smith-Rowland <3dw4rd@verizon.net>
Date:   Mon Dec 28 00:09:16 2015 +0000

    2015-12-27  Edward Smith-Rowland  <3dw4rd@verizon.net>
            * include/bits/c++0x_warning.h Remove experimental language.
    
    From-SVN: r231967

commit bb0d7745bd311efce88af818b4cbfd29e5cdc969
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 27 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231963

commit 96affefa184d650d9f29d31d693fcdaabe3574e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 26 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231959

commit e01307405aea52fbc60e3a91e4839581ea91dde5
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Dec 25 22:07:52 2015 +0100

    backport: freebsd64.h: Delete FREEBSD_DYNAMIC_LINKER32/64 defines.
    
    2015-12-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-12-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/rs6000/freebsd64.h: Delete FREEBSD_DYNAMIC_LINKER32/64
        defines. Use FBSD_DYNAMIC_LINKER instead.
        Rename and simplify LINK_OS_FREEBSD_SPEC_DEF32/64 to
        LINK_OS_FREEBSD_SPEC_DEF.
    
    From-SVN: r231956

commit 67d41eb9b9e2ce363f9b06058830874779e2ef7f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 25 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r231950

commit 680e7d61348ad139fffd852d2098186dc8f67fa7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 24 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r231941

commit 56fb4e1ab89b79ee0fd5c79354dd1abfbe790820
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 23 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231921

commit 0eba268e2075a90cf1247a6fbf1dd9e124498e29
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 22 16:49:25 2015 -0500

    re PR c++/66921 (failure to determine size of static constexpr array that is nested within a templated class)
    
            PR c++/66921
            * decl.c (cp_complete_array_type): Allow an initializer that
            already has array type.
    
    From-SVN: r231917

commit f1ccaf63f3a7c9370aeb0c4ff913d644bc13d3f7
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 22 16:49:18 2015 -0500

    re PR c++/67339 (Segfault when parsing a typename involving a template-alias)
    
            PR c++/67339
            * parser.c (cp_parser_elaborated_type_specifier): Use CLASS_TYPE_P
            rather than check for RECORD_TYPE.
    
    From-SVN: r231916

commit 8c92fd6c7a5ba76645101683c84e62db6eeda077
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Dec 22 14:52:40 2015 -0600

    backport: re PR target/68772 (Many -gstabs tests FAIL with Xcode 7 as)
    
    gcc/
            Backport from mainline
            PR target/68772
            * config/rs6000/rs6000.h (ASM_CPU_SPEC): For -mcpu=powerpc64le,
            pass %(asm_cpu_power8).
    
    gcc/testsuite/
            Backport from mainline
            PR target/68772
            * gcc.target/powerpc/pr68872.c: New test.
    
    From-SVN: r231911

commit 243ac4d1346a0e328648c1ebc341d2fe72a6f623
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 22 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231891

commit 91f0bc24051dc630fbae16e1ad5d00d7ae7fda8c
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Mon Dec 21 11:42:12 2015 +0000

    Fix typo
    
    From-SVN: r231878

commit 1f18ea53e83b9477d887c9a9316536973b6e3954
Author: Jason Merrill <jason@redhat.com>
Date:   Sun Dec 20 22:04:18 2015 -0500

    re PR c++/67411 (internal compiler error: in tsubst_copy, at cp/pt.c:13473)
    
            PR c++/67411
            * decl2.c (decl_maybe_constant_var_p): Use DECL_HAS_VALUE_EXPR_P.
    
    From-SVN: r231870

commit 317119dbb75a6c6487c9868dd6269b4a23344a90
Author: Jason Merrill <jason@redhat.com>
Date:   Sun Dec 20 20:52:00 2015 -0500

    re PR c++/67411 (internal compiler error: in tsubst_copy, at cp/pt.c:13473)
    
            PR c++/67411
    
            * decl2.c (decl_maybe_constant_var_p): A proxy isn't constant.
    
    From-SVN: r231868

commit f17316ad4b6f87d026b45a907845b164ccbea300
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 21 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r231866

commit 600a0d07466f313dd687d193fee1c46ef733dd2f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 20 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231854

commit 2e3764fd3e94ca8b09d1ff0eafc61d27479ab070
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Dec 19 21:59:47 2015 +0000

    re PR rtl-optimization/68910 (huge stack frame and poor code with instruction scheduling at -O2)
    
            PR rtl-optimization/68910
            * emit-rtl.c (set_unique_reg_note) <>REG_EQUAL>: Add bypass for USEs.
            * config/sparc/sparc.md (anddi3): Enable only in 64-bit mode.
            (iordi3): Likewise.
            (xordi3): Likewise.
            (one_cmpldi2): Likewise.
            (*anddi3_sp32): Delete.
            (*and_not_di_sp32): Likewise.
            (*iordi3_sp32): Likewise.
            (*or_not_di_sp32): Likewise.
            (*xordi3_sp32): Likewise.
            (*xor_not_di_sp32): Likewise.
            (32-bit DImode logical operations splitter): Likewise.
            (*one_cmpldi2_sp32): Likewise.
    
    From-SVN: r231852

commit d677d58de7c43f39474ecdd12d95e544340ccc10
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Dec 19 01:52:17 2015 +0000

    re PR target/68729 (../Xbae/Methods.c:1772:1: ICE: in extract_insn, at recog.c:2343)
    
            PR target/68729
            * config/pa/pa.c (pa_emit_move_sequence): Reorganize handling of
            floating-point reloads. Only reload operands that are not valid
            floating-point memory operands.
    
    From-SVN: r231846

commit 0af3f49b35976ca98f7b1944f96f630b71e9a612
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 19 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231843

commit 70cb78547d0bdea7bc2ed60ec52d472d197e26fa
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:17:48 2015 +0000

    S/390: Make constant checking more strict
    
    gcc/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/predicates.md (const_mask_operand): New predicate.
            * config/s390/s390-builtins.def: Set a smaller bitmask for a few builtins.
            * config/s390/vector.md: Change predicate from immediate_operand
            to either const_int_operand or const_mask_operand.  Add special
            insn conditions on patterns which have to exclude certain values.
            * config/s390/vx-builtins.md: Likewise.
    
    From-SVN: r231834

commit d2d495c5d63da38a3cc31e9f24e0b46febf6ea4f
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:16:04 2015 +0000

    S/390: vec_set mode DI->SI for shift_count
    
    gcc/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vector.md ("*vec_set<mode>"): Change shift count
            mode from DI to SI.
    
    From-SVN: r231833

commit 54d72c5d6109a95218d8cbc94f3cadb981b87730
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:14:22 2015 +0000

    S/390: Fix vec_splat_* builtins.
    
    gcc/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtin-types.def: New builtin types added.
            * config/s390/s390-builtins.def: Add s390_vec_splat_* definitions.
            * config/s390/s390.c (s390_expand_builtin): Always truncate
            constants to the mode in the pattern.
            * config/s390/vecintrin.h: Let the vec_splat_* macros point to the
            respective builtin __builtin_s390_vec_splat_*.
    
    gcc/testsuite/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/zvector/vec-splat-2.c: New test.
    
    From-SVN: r231832

commit 13c63110f4b5b7b6296e39d867c91d10dda59c55
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:11:14 2015 +0000

    S/390: Sort builtin types - cleanup only.
    
    Backport from mainline
    
    gcc/ChangeLog:
    
    2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtin-types.def: Sort builtin types.
    
    From-SVN: r231831

commit 85e8f3cba58b492514a80a2db4e7d8f5b466b32c
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:09:27 2015 +0000

    S/390: Fix RT flag in vstrc instruction.
    
    Backport from mainline.
    
    gcc/ChangeLog:
    
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-c.c (s390_get_vstring_flags): Invert the
            condition for the RT flag.
    
    From-SVN: r231830

commit 82d522e8209851eb15c1cb43c0423c166412e2e9
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:06:59 2015 +0000

    S/390: const_vec_duplicate_p backport as private function.
    
    gcc/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/constraints.md: Use private backport of
            const_vec_duplicate_p s390_const_vec_duplicate_p.
            * config/s390/s390-protos.h: Add prototype for
            s390_const_vec_duplicate_p.
            * config/s390/s390.c (s390_const_vec_duplicate_p): New function.
            (s390_contiguous_bitmask_vector_p): Use s390_const_vec_duplicate_p.
            (print_operand): Likewise.
    
    From-SVN: r231828

commit 6cd7c2a42d581cf21e22204bc166581060a72a7f
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 19:03:17 2015 +0000

    S/390: Enable vrepi constants.
    
    Backport from mainline
    
    gcc/testsuite/ChangeLog:
    
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-vrepi-1.c: New test.
    
    gcc/ChangeLog:
    
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/constraints.md ("jKK"): New constraint.
            * config/s390/s390.c (tm-constrs.h): Include for
            satisfies_constraint_*.
            (s390_legitimate_constant_p): Allow jKK constants.  Use
            satisfies_constraint_* also for the others.
            (legitimate_reload_vector_constant_p): Likewise.
            (print_operand): Allow h output modifier on vectors.
            * config/s390/vector.md ("mov<mode>"): Add vrepi.
    
    From-SVN: r231827

commit 5cbd1132ea78cc4851a5b3dd46772e29d0de53c5
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 18 18:59:23 2015 +0000

    S/390: Fix vrepi constraint letter.
    
    gcc/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vector.md ("*vec_splats<mode>"): Fix constraint
            letter I->K.
    
    gcc/testsuite/ChangeLog:
    
    2015-12-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backported from mainline
            2015-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/zvector/vec-splat-1.c: New test.
    
    From-SVN: r231826

commit f588ec9006880c03b6e0901326bb4b7ec405dce4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 18 15:38:17 2015 +0100

    backport: re PR tree-optimization/68835 (ICE in set_value_range, at tree-vrp.c:387, with __int128 bit field)
    
            Backported from mainline
            2015-12-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/68835
            * tree.c (get_int_cst_ext_nunits): Return
            cst.get_precision () / HOST_BITS_PER_WIDE_INT + 1
            for all unsigned wi::neg_p (cst) constants.
            (build_new_int_cst): If cst.get_precision is not a multiple
            of HOST_BITS_PER_WIDE_INT, zero extend -1 to the precision
            % HOST_BITS_PER_WIDE_INT.
    
            * gcc.dg/pr68835-1.c: New test.
            * gcc.dg/pr68835-2.c: New test.
    
    From-SVN: r231817

commit 6089f40f6eb4e419ccb0b5db253319fc7a9e58d6
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Dec 18 01:17:53 2015 +0000

    backport: syscall: Add definition for NLA_HDRLEN
    
    Backport from mainline:
    
        syscall: Add definition for NLA_HDRLEN
    
        This change updates mksysinfo.sh so it correctly
        includes the define NLA_HDRLEN in the syscall package.
    
        Fixes golang/go/#13629
    
        Reviewed-on: https://go-review.googlesource.com/17893
    
    From-SVN: r231797

commit edbd27d28cd391869ce09c93d44c27ff5214130d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 18 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231792

commit 00a165eefa7e222cb193141755e41c94bf55ef9a
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Dec 17 11:52:10 2015 -0500

    re PR c++/67550 (Initialization of local struct array with elements of global array yields zeros instead of initializer values)
    
            PR c++/67550
    
            * init.c (constant_value_1): Don't return a CONSTRUCTOR missing
            non-constant elements.
    
    From-SVN: r231779

commit 923434cfbc433651cfef2b736e68d02af1aa9ed4
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Dec 17 11:52:04 2015 -0500

    re PR c++/67576 (expression of typeid( expression ) is evaluated twice)
    
            PR c++/67576
    
            PR c++/25466
            * rtti.c (build_typeid): Use save_expr, not stabilize_reference.
    
    From-SVN: r231778

commit 05b82b1f148e21e2ddbb0f356bb1539a2cd309a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 17 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231730

commit 2077b927e99f09011548be7657558c3d42c303e7
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Dec 17 00:14:13 2015 +0000

    re PR target/68779 (HPPA/PARISC 32-bit Linux kernel build triggers multiple ICEs)
    
            PR target/68779
            * config/pa/pa.md (atomic_loaddi): Honor -mdisable-fpregs.
            (atomic_loaddi_1): Likewise.
            (atomic_storedi): Likewise.
            (atomic_storedi_1): Likewise.
            (atomic_loaddf): Likewise.
            (atomic_loaddf_1): Likewise.
            (atomic_storedf): Likewise.
            (atomic_storedf_1): Likewise.
            Move all atomic patterns to end of file.
    
    From-SVN: r231728

commit 6f840695de9b94514ae1397005360a17fb97983c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Dec 16 21:11:01 2015 +0000

    Fix TYPE_MAIN_VARIANT construction for arrays of qualified typedefs (PR c/68162).
    
    PR c/68162 reports a spurious warning about incompatible types
    involving arrays of const double, constructed in one place using a
    typedef for const double and in another place literally using const
    double.
    
    The problem is that the array of the typedef was incorrectly
    constructed without a TYPE_MAIN_VARIANT being an array of unqualified
    elements as it should be (though it seems some more recent change
    resulted in this producing incorrect diagnostics, likely the support
    for C++-style handling of arrays of qualified type).  This patch fixes
    the logic in grokdeclarator to determine first_non_attr_kind, which is
    used to determine whether it is necessary to use the TYPE_MAIN_VARIANT
    of the type in the declaration specifiers.
    
    However, fixing that logic introduces a failure of
    gcc.dg/debug/dwarf2/pr47939-4.c, a test introduced along with
    first_non_attr_kind.  Thus, it is necessary to track the original
    qualified typedef when qualifying an array type, to use it rather than
    a newly-constructed type, to avoid regressing regarding typedef names
    in debug info.  This is done along lines I suggested in
    <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=47939#c6>: track the
    original type and the number of levels of array indirection at which
    it appears, and, in possibly affected cases, pass extra arguments to
    c_build_qualified_type (with default arguments to avoid needing to
    pass those extra arguments explicitly everywhere).  Given Richard's
    recent fix to dwarf2out.c, this allows the C bug to be fixed without
    causing debug information regressions.
    
    Bootstrapped with no regressions on x86_64-unknown-linux-gnu.
    
    gcc/c:
            PR c/68162
            * c-decl.c (grokdeclarator): Set first_non_attr_kind before
            following link from declarator to next declarator.  Track original
            qualified type and pass it to c_build_qualified_type.
            * c-typeck.c (c_build_qualified_type): Add arguments
            orig_qual_type and orig_qual_indirect.
    
    gcc/c-family:
            PR c/68162
            * c-common.h (c_build_qualified_type): Add extra default
            arguments.
    
    gcc/cp:
            PR c/68162
            * tree.c (c_build_qualified_type): Add extra arguments.
    
    gcc/testsuite:
            PR c/68162
            * gcc.dg/pr68162-1.c: New test.
    
    From-SVN: r231722

commit fd08bbfeda98a3b07e47760668f5eb12d11f090a
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Dec 16 13:36:55 2015 -0500

    re PR c++/63628 ([c++1y] cannot use decltype on captured arg-pack)
    
            PR c++/63628
            * pt.c (tsubst_pack_expansion): Also make dummy decls if
            retrieve_local_specialization fails.
    
    From-SVN: r231715

commit cdf67a89b2538f5508a47867ea39ea35f81e9ba2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 16 14:16:00 2015 +0000

    Fix cv-qualifiers in std::bind invocation
    
            PR libstdc++/68912
            * include/std/functional (_Bind::operator()): Use lvalue functor to
            deduce return type.
            * testsuite/20_util/bind/68912.cc: New.
    
    From-SVN: r231692

commit c6f35deb166f15a993de8b64ed42c31c4c5eaeb4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 16 11:48:55 2015 +0000

    libstdc++/68921 add timeout argument to futex(2)
    
            PR libstdc++/68921
            * src/c++11/futex.cc
            (__atomic_futex_unsigned_base::_M_futex_wait_until): Use null pointer
            as timeout argument.
    
    From-SVN: r231679

commit 14415e109e03a03e7dceee03462800b29eccc875
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Dec 16 11:12:06 2015 +0000

    backport: re PR c++/68184 (Exception from a virtual function does not get caught)
    
    2015-12-16  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-12-02  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/68184
            * cgraphunit.c (cgraph_node::analyze): Set can_throw_external.
    
            * g++.dg/torture/pr68184.C: New testcase.
    
    From-SVN: r231677

commit fbd9458e8461b76367d8e9cb75134b5f01a96360
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Dec 16 09:07:45 2015 +0000

    backport: [multiple changes]
    
    2015-12-16  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-12-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68636
            * builtins.c (get_pointer_alignment_1): Take care of byte to
            bit alignment computation overflow.
    
            2015-11-30  Richard Biener  <rguenther@suse.de>
    
            PR c/68162
            * dwarf2out.c (gen_type_die_with_usage): Keep variant types
            of arrays.
    
    From-SVN: r231673

commit a8cd808f311ccc57eff91ddb101abf0cde0980f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 16 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231667

commit c6db389829c65f8034e3e881d9bb7cf515fcc21a
Author: Alessandro Fanfarillo <afanfa@gcc.gnu.org>
Date:   Tue Dec 15 06:27:15 2015 -0700

    Fix ICE for coarray Critical inside module procedure
    
    From-SVN: r231650

commit fa979e815c9dbcc950ed4b5726f04f187d7a4ce1
Author: Tim Shen <timshen@google.com>
Date:   Tue Dec 15 05:19:20 2015 +0000

    backport: re PR libstdc++/68863 (Regular expressions: Backreferences don't work in negative lookahead)
    
            Backport from mainline
            2015-12-15  Tim Shen  <timshen@google.com>
    
            PR libstdc++/68863
            * include/bits/regex_executor.tcc (_Executor::_M_lookahead):
            Copy the captured content for lookahead, so that the backreferences
            inside can refer to them.
            * testsuite/28_regex/algorithms/regex_match/ecma/char/68863.cc:
            New testcase.
    
    From-SVN: r231642

commit 2cbab8d9c93a6b666ed2b9d623e04dd90b96edc1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 15 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231637

commit 5a7beff3980f8083d59e90cc4c9b341488219ef7
Author: Tobias Burnus <burnus@gcc.gnu.org>
Date:   Mon Dec 14 20:22:30 2015 +0100

    gcc/fortran/ChangeLog: Correct commit date.
    
    gcc/testsuite/ChangeLog: Ditto.
    
    From-SVN: r231627

commit 57a67f43f7d8b2ef7cfcf5e393af0fa021d30a48
Author: Tobias Burnus <burnus@net-b.de>
Date:   Mon Dec 14 20:12:40 2015 +0100

    backport: trans.c (gfc_allocate_using_lib,gfc_deallocate_with_status): Introducing __asm__ __volatile__ ("":::"memory") after image control statements.
    
    gcc/fortran/
    2015-12-09  Tobias Burnus  <burnus@net-b.de>
                Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
            Backport from mainline.
            2015-12-09  Tobias Burnus  <burnus@net-b.de>
                Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
            * trans.c (gfc_allocate_using_lib,gfc_deallocate_with_status):
            Introducing __asm__ __volatile__ ("":::"memory")
            after image control statements.
            * trans-stmt.c  (gfc_trans_sync, gfc_trans_event_post_wait,
            gfc_trans_lock_unlock, gfc_trans_critical): Ditto.
            * trans-intrinsic.c (gfc_conv_intrinsic_caf_get,
            conv_caf_send): Introducing __asm__ __volatile__ ("":::"memory")
            after send, before get and around sendget.
    
    
    gcc/testsuite/
    2015-12-09  Tobias Burnus  <burnus@net-b.de>
                Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
            Backport from mainline.
            2015-12-09  Tobias Burnus  <burnus@net-b.de>
                Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
            * gfortran.dg/coarray_40.f90: New.
    
    
    Co-Authored-By: Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
    
    From-SVN: r231626

commit e17f722ec899eadd123aa0056a5f98e7efcbc6bd
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon Dec 14 17:31:26 2015 +0100

    [PR 66616] Check for thunks when adding extra constants to clones
    
    2015-12-14  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/66616
            * ipa-cp.c (propagate_constants_accross_call): Move thuk check...
            (call_passes_through_thunk_p): ...here.
            (find_more_scalar_values_for_callers_subset): Perform thunk checks
            like propagate_constants_accross_call does.
    
    testsuite/
            * g++.dg/ipa/pr66616.C: New test.
    
    From-SVN: r231622

commit bdd1d91ab164f67282dafac1f64d6c0e6c37dcfd
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Mon Dec 14 13:31:08 2015 +0000

    Backport: [Patch AArch64] Reinstate CANNOT_CHANGE_MODE_CLASS to fix pr67609
    
    gcc/
    
            PR rtl-optimization/67609
            * config/aarch64/aarch64-protos.h
            (aarch64_cannot_change_mode_class): Bring back.
            * config/aarch64/aarch64.c
            (aarch64_cannot_change_mode_class): Likewise.
            * config/aarch64/aarch64.h (CANNOT_CHANGE_MODE_CLASS): Likewise.
            * config/aarch64/aarch64.md (aarch64_movdi_<mode>low): Use
            zero_extract rather than truncate.
            (aarch64_movdi_<mode>high): Likewise.
    
    gcc/testsuite/
    
            PR rtl-optimization/67609
            * gcc.dg/torture/pr67609.c: New.
    
    From-SVN: r231615

commit 4800db4bd7a5cdde84e82ef08c8b425c10cac489
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Dec 14 14:21:43 2015 +0100

    backport: re PR target/67484 (options-save.c sanitizer asan detects freed storage referenced  heap-use-after-free)
    
            Backport from mainline
            2015-12-11  Martin Liska  <mliska@suse.cz>
                        Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/67484
            * config/i386/i386.c (ix86_valid_target_attribute_tree):
            Use ggc_strdup to copy option_strings to opts->x_ix86_arch_string and
            opts->x_ix86_tune_string.
    
    From-SVN: r231614

commit f2106c44624fa9f288f6be174144528fb409ce6c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 14 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r231603

commit 3723a0a56551e35e5ad23df519fd3804fdecb70e
Author: Alexandre Oliva <aoliva@gcc.gnu.org>
Date:   Sun Dec 13 20:47:00 2015 +0000

    Oops, I failed to put in a ChangeLog entry for the previous commit.
    
    From-SVN: r231601

commit ce0990b94770b61a5cd4cd8ef6a83b55f226bf80
Author: Alexandre Oliva <aoliva@gcc.gnu.org>
Date:   Sun Dec 13 20:43:44 2015 +0000

    [PR67355] drop dummy zero from reverse VTA ops, fix infinite recursion
    
    VTA's cselib expression hashing compares expressions with the same
    hash before adding them to the hash table.  When there is a collision
    involving a self-referencing expression, we could get infinite
    recursion, in spite of the cycle breakers already in place.  The
    problem is currently latent in the trunk, because by chance we don't
    get a collision.
    
    Such value cycles are often introduced by reverse_op; most often,
    they're indirect, and then value canonicalization takes care of the
    cycle, but if the reverse operation simplifies to the original value,
    we used to issue a (plus V (const_int 0)), because at some point
    adding a plain value V to a location list as a reverse_op equivalence
    caused other problems.
    
    This dummy zero, in turn, caused the value canonicalizer to not fully
    realize the equivalence, leading to more complex graphs and,
    occasionally, to infinite recursion when comparing such
    value-plus-zero expressions recursively.
    
    Simply using V solves the infinite recursion from the PR testcase,
    since the extra equivalence and the preexisting value canonicalization
    together prevent recursion while the unrecognized equivalence
    wouldn't, but it exposed another infinite recursion in
    memrefs_conflict_p: get_addr had a cycle breaker in place, to skip RTL
    referencing values introduced after the one we're examining, but it
    wouldn't break the cycle if the value itself appeared in the
    expression being examined.
    
    After removing the dummy zero above, this kind of cycle in the
    equivalence graph is no longer introduced by VTA itself, but dummy
    zeros are also present in generated code, such as in the 32-bit x86's
    pro_epilogue_adjust_stack_si_add epilogue insn generated as part of
    the builtin longjmp in _Unwind_RaiseException building libgcc's
    unwind-dw2.o.  So, break the recursion cycle for them too.
    
    
    for  gcc/ChangeLog
    
            PR debug/67355
            * var-tracking.c (reverse_op): Don't add dummy zero to reverse
            ops that simplify back to the original value.
            * alias.c (refs_newer_value_p): Cut off recursion for
            expressions containing the original value.
    
    From-SVN: r231600

commit 2c03e8e621972c2ad26133ab30fefcdf6ce17b6b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 13 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231590

commit bf3997a9e17d84b6fd499da641330504606315f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 12 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231579

commit 8abb919aa8098ca16d127bb88494e7f75a6296f4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 11 12:46:50 2015 +0000

    Improve generated libstdc++ API docs
    
            * doc/doxygen/user.cfg.in: Use EXTENSION_MAPPING tag. Add new headers
            to INPUT. Remove obsolete XML_SCHEMA and XML_DTD tags. Update
            PREDEFINED macros. Set BRIEF_MEMBER_DESC for man-pages.
            * include/backward/strstream: Correct @file comment.
            * include/bits/forward_list.h: Improve Doxygen comments.
            * include/bits/locale_facets_nonio.h: Likewise.
            * include/debug/vector (_Safe_vector): Add @brief section to comment.
            * include/experimental/fs_fwd.h: Correct @file comment.
            * include/experimental/fs_ops.h: Likewise.
            * include/experimental/string_view.tcc: Likewise.
            * include/experimental/optional: Document experimental status.
            * include/experimental/string_view: Correct @file comment.
            * include/ext/pb_ds/detail/bin_search_tree_/traits.hpp: Reduce
            whitespace to avoid Doxygen bug.
            * include/std/bitset: Remove redundant @class Doxygen command. Add
            parentheses to avoid Doxygen bug.
            * include/std/mutex: Improve Doxygen comments.
            * include/tr2/dynamic_bitset: Add missing @param documentation.
            * scripts/run_doxygen: Rename man pages for std::experimental types.
    
    From-SVN: r231563

commit d5635c6af6875da584ee90b404dc0a1088569e2b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 11 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231550

commit d98346656ac972628512fb835de76810613209be
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Dec 10 23:29:12 2015 +0100

    re PR rtl-optimization/68376 (wrong code at -O1 and above on x86_64-linux-gnu)
    
            PR rtl-optimization/68376
            PR rtl-optimization/68670
            * ifcvt.c (noce_try_abs): For one_cmpl allow < 0, >= 0
            or > -1 conditions regardless of negate, and disallow
            all other conditions.
    
            * gcc.c-torture/execute/pr68376-2.c (f5, f6, f7, f8): New
            tests.
            (main): Call them.
            * gcc.dg/pr68670-1.c: New test.
            * gcc.dg/pr68670-2.c: New test.
    
    From-SVN: r231546

commit f9858a285695bfbbe1e4ccefb58eb11faf675784
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Thu Dec 10 21:26:54 2015 +0100

    backport: freebsd64.h: Remove the redefinition of WCHAR_TYPE.
    
    2015-12-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-12-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/rs6000/freebsd64.h: Remove the redefinition of WCHAR_TYPE.
    
    From-SVN: r231545

commit f2a32bc4930226092ad91400601fce81311764c0
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Dec 10 17:42:05 2015 +0100

    backport: re PR target/68701 ("gcc -m32 -finstrument-functions -ffixed-ebp" produces internal compiler error)
    
            Backport from mainline
            2015-12-08  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68701
            * config/i386/i386.c (ix86_option_override_internal): Enable
            -maccumulate-outgoing-args when %ebp is fixed due to stack
            realignment requirements.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2015-12-08  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68701
            * gcc.target/i386/pr68701-1.c: New test.
            * gcc.target/i386/pr68701-2.c: Ditto.
    
    From-SVN: r231528

commit f183fafb4ac4b9184e71eb982dda8979acbe5db8
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Dec 10 11:20:43 2015 +0000

    backport: cfgexpand.c (expand_gimple_stmt_1): Return statement with DECL as return value is allowed to have NULL bounds.
    
    gcc/
    
            Backport from mainline r231224.
            2015-12-03  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            * cfgexpand.c (expand_gimple_stmt_1): Return statement with
            DECL as return value is allowed to have NULL bounds.
    
    From-SVN: r231502

commit d7728f481db95a3c1b2dfdb85ec63ae0e053f22d
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Dec 10 09:38:07 2015 +0100

    re PR tree-optimization/65948 (FAIL: g++.dg/lto/20101010-4 cp_lto_20101010-4_0.o-cp_lto_20101010-4_0.o link)
    
    PR lto/65948
    
    From-SVN: r231489

commit 78b73994960c630ccb7d6104de36705b920f51ca
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Dec 10 01:34:50 2015 +0000

    fptr.c (__canonicalize_funcptr_for_compare): Remove code to initialize call to __dl_fixup once.
    
            * config/pa/fptr.c (__canonicalize_funcptr_for_compare): Remove code
            to initialize call to __dl_fixup once.
    
    From-SVN: r231487

commit e4dceaed4fc9f19ffba1acea6b14f5556c8e466c
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Dec 10 00:44:13 2015 +0000

    re PR target/68729 (../Xbae/Methods.c:1772:1: ICE: in extract_insn, at recog.c:2343)
    
            PR target/68729
            * config/pa/pa.c (pa_emit_move_sequence): Don't check that mode is
            consistent with modes of the input and output operands when doing
            reloads to and from floating point registers.  Do reload for all
            address forms.
    
    From-SVN: r231483

commit d749ff5493b3862889c4a77a30d4a48cf67eb1d9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 10 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r231480

commit f1efe332766101c0fd83363658ddd4c3358b7494
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Dec 9 19:39:01 2015 +0100

    sse4_1-roundps-1.c: Remove ASM_SUFFIX define.
    
            * gcc.target/i386/sse4_1-roundps-1.c: Remove ASM_SUFFIX define.
            * gcc.target/i386/sse4_1-roundps-2.c: Ditto.
            * gcc.target/i386/sse4_1-roundps-3.c: Ditto.
            * gcc.target/i386/sse4_1-roundsd-1.c: Ditto.
            * gcc.target/i386/sse4_1-roundsd-2.c: Ditto.
            * gcc.target/i386/sse4_1-roundsd-3.c: Ditto.
            * gcc.target/i386/sse4_1-roundss-1.c: Ditto.
            * gcc.target/i386/sse4_1-roundss-2.c: Ditto.
            * gcc.target/i386/sse4_1-roundss-3.c: Ditto.
    
            * gcc.target/i386/sse4_1-round.h (do_round): Fix inline asm statements.
            * gcc.target/i386/sse4_1-roundsd-4.c (do_round): Ditto.
            * gcc.target/i386/sse4_1-roundss-4.c (do_round): Ditto.
    
    From-SVN: r231466

commit 269538b41a92e2f195a7d65fd53ef130b1ca877d
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Dec 9 12:55:38 2015 +0100

    re PR ipa/68790 (gcc.c-torture/execute/20050713-1.c FAILs with -O0 -fipa-icf)
    
    Fix PR ipa/68790
    
            PR ipa/68790
            * ipa-icf.c (sem_function::param_used_p): Return true
            if ipa_node_params_sum equals to NULL.
            * gcc.dg/ipa/pr68790.c: New test.
    
    From-SVN: r231451

commit fd0356ddc9a42cb75030f5d4ed8e3983eed7e1b8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 9 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231433

commit 5d8674c4ebd131be9daf56a0d90e36a692c76653
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Dec 8 14:00:31 2015 +0000

    Backport libstdc++ documentation improvements
    
            * doc/xml/manual/abi.xml: Backport documentation improvements from
            mainline.
            * doc/xml/manual/configure.xml: Likewise.
            * doc/xml/manual/diagnostics.xml: Likewise.
            * doc/xml/manual/extensions.xml: Likewise.
            * doc/xml/manual/status_cxx2011.xml: Likewise.
            * doc/xml/manual/status_cxx2014.xml: Likewise.
            * doc/xml/manual/using.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r231409

commit 55b67ecd9800a39695d8f6051797734f53127062
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 8 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231390

commit 7855d818377db3c4cadf4021d27a9cbeb6dd0b6d
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Dec 7 16:37:27 2015 +0100

    Fix changelog entry and add pr66896.C.
    
    From-SVN: r231366

commit 0233ce98f2a7adb2c7dc3c48d168f44faf81cbe2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Dec 7 10:11:06 2015 +0100

    backport: re PR tree-optimization/68680 (On-stack VLA does not cause instrumentation with -fstack-protector)
    
            Backport from mainline
            2015-12-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/68680
            * calls.c (special_function_p): Return ECF_MAY_BE_ALLOCA for
            BUILT_IN_ALLOCA{,_WITH_ALIGN}.  Don't check for __builtin_alloca
            by name.
    
            * gcc.target/i386/pr68680.c: New test.
    
    From-SVN: r231357

commit c78b554f6b022ba35b4e27b2148183285739e3dc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Dec 7 09:58:24 2015 +0100

    backport: re PR tree-optimization/68671 (gcc.dg/torture/pr66952.c FAILs with -fno-tree-dce)
    
            Backported from mainline
            2015-12-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/68671
            * tree-ssa-reassoc.c (maybe_optimize_range_tests): For basic
            blocks starting with the successor of first bb we've modified
            and ending with last_bb call reset_flow_sensitive_info_in_bb.
    
            * gcc.dg/pr68671.c: New test.
    
    From-SVN: r231356

commit c5610a2afacd217fc70255d36e37c237fc7f0a93
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 7 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231346

commit 0557bed939b421623a7886cdc6f58af4b89f18f0
Author: Piotr Trojanek <piotr.trojanek@gmail.com>
Date:   Sun Dec 6 18:53:54 2015 +0000

    re PR ada/60164 (Missing parenthesis in the documentation)
    
            PR ada/60164
            * doc/gnat_ugn/gnat_and_program_execution.rst (gnatmem): Fix typo.
    
    From-SVN: r231343

commit 159be064acee3cc3ba72d7c131be510c06a7cedb
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Dec 6 15:28:40 2015 +0000

    re PR ada/56274 (libada bootstrap failure on kfreebsd ("pthread_rwlock_t" not declared in "OS_Interface"))
    
            PR ada/56274
            * s-osinte-kfreebsd-gnu.ads (pthread_rwlock_t): New subtype.
            (pthread_rwlockattr_t): Likewise.
    
    From-SVN: r231338

commit 17b61d4053655080cb97a68450901a6cc6a596ca
Author: Ludovic Brenta <ludovic@ludovic-brenta.org>
Date:   Sun Dec 6 14:11:35 2015 +0000

    re PR ada/49944 (Bootstrapping on x86_64-pc-kfreebsd-gnu fails with "s-taprop.adb:856:10: "pthread_attr_setaffinity_np" is undefined (more references follow)")
    
            PR ada/49944
            * s-osinte-freebsd.ads: Minor reformatting.
            (Stack_Base_Available): Correct comments.
            * s-osinte-kfreebsd-gnu.ads (Time_Slice_Supported, nanosleep,
            clock_id_t, clock_gettime, Stack_Base_Available, Get_Page_Size,
            mprotect, pthread_mutexattr_setprotocol,pthread_mutexattr_getprotocol
            pthread_mutexattr_setprioceiling, pthread_mutexattr_getprioceiling,
            pthread_attr_setscope, pthread_attr_getscope,
            pthread_attr_setinheritsched, pthread_attr_getinheritsched,
            Time_Slice_Supported): Copy from s-osinte-freebsd.ads.
            * gcc-interface/Makefile.in (x86/kfreebsd): Use the POSIX version of
            the System.Task_Primitives.Operations package.
    
    From-SVN: r231334

commit 5c032850c198962fc6c7dcac9d8dda245932ff04
Author: Ludovic Brenta <ludovic@ludovic-brenta.org>
Date:   Sun Dec 6 14:00:34 2015 +0000

    re PR ada/49940 (Bootstrapping on x86_64-pc-kfreebsd-gnu fails with "s-taprop.adb:717:32: "lwp_self" is undefined")
    
            PR ada/49940
            * s-osinte-kfreebsd-gnu.ads (lwp_self): New imported function.
    
    From-SVN: r231331

commit 301c40e404716fd1904371bb4e250c771f8b02ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 6 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231325

commit 996aba65d993ae75159c8a24a60e119e8fe9cdd0
Author: Juoko Orava <jouko.orava@iki.fi>
Date:   Sun Dec 6 01:33:23 2015 +0200

    re PR fortran/50201 (gfortran with -static causes seg fault at runtime for writing double prec array with precision increased to kind=16)
    
    2015-12-05  Juoko Orava <jouko.orava@iki.fi>
    
            PR fortran/50201
            * io/write_float.def: Avoid marking quadmath_snprintf as an untyped
            weak reference, which fixing linking with -static.
    
    From-SVN: r231323

commit b8527ce42cd215e99624f2c17a5dac52031396fa
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Dec 5 22:18:44 2015 +0000

    fptr.c (__canonicalize_funcptr_for_compare): Initialize fixup values if saved GOT address doesn't match runtime address.
    
            * config/pa/fptr.c (__canonicalize_funcptr_for_compare): Initialize
            fixup values if saved GOT address doesn't match runtime address.
            (fixup_branch_offset): Reorder list.
    
    From-SVN: r231321

commit 5645f8126e2ebfbbfcf626daac2b82a4bcc389c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 5 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231313

commit ff37d74d221fbcb7631d7b1514e48b2595062a00
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 4 20:44:22 2015 +0000

    Fix ambiguity with multiple enable_shared_from_this bases
    
            PR libstdc++/56383
            * testsuite/20_util/enable_shared_from_this/56383.cc: New.
            * include/bits/shared_ptr_base.h (__enable_shared_from_this): Make
            friend declaration match previous declaration of
            __enable_shared_from_this_helper.
            * include/bits/shared_ptr.h (enable_shared_from_this): Likewise.
    
    From-SVN: r231308

commit 73b1f3519b71e52f8a4c3238cc4287fc609c7e70
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 4 20:44:13 2015 +0000

    Define path::_Cmpt after specializing path::__is_encoded_char
    
            * include/experimental/bits/fs_path.h (path::_Cmpt): Move definition
            after path::__is_encoded_char explicit specializations.
    
    From-SVN: r231307

commit b811d34cd03e1769a4dc921a5fc5f2ae20b8c682
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Dec 4 20:54:19 2015 +0100

    backport: freebsd64.h (ELFv2_ABI_CHECK): Add new macro.
    
    2015-12-04  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-12-01  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/rs6000/freebsd64.h (ELFv2_ABI_CHECK): Add new macro.
        (SUBSUBTARGET_OVERRIDE_OPTIONS): Use it to decide whether to set
        rs6000_current_abi to ABI_AIX or ABI_ELFv2.
    
    From-SVN: r231302

commit 0ad170ba9a50930d38f1776d75ba6ce7b3060fd5
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Dec 4 20:51:35 2015 +0100

    backport: re PR libffi/65726 (libffi fails to build when not bootstrapping: configure: error: C++ preprocessor "/lib/cpp" fails sanity check)
    
    2015-12-04  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-12-01  Andreas Tobler  <andreast@gcc.gnu.org>
    
        PR libffi/65726
        * Makefile.def (lang_env_dependencies): Make libffi depend
        on cxx.
        * Makefile.in: Regenerate.
    
    From-SVN: r231301

commit ef35df10ba03a2f5aea821bbbe0d29d1d69b27f9
Author: Jan Sommer <soja-lists@aries.uberspace.de>
Date:   Fri Dec 4 18:40:14 2015 +0000

    re PR ada/68169 (s-osinte-rtems.ads is out of synch with type definitions of current newlib)
    
            PR ada/68169
            * s-oscons-tmplt.c: Generate pthread constants for RTEMS
            * s-osinte-rtems.ads: Declare pthread structs as opaque types in Ada
    
    From-SVN: r231297

commit 5c61c612b3a6c9b6178fd3b5d47826740a954ac3
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Dec 4 12:07:57 2015 -0500

    * include/bits/c++config: Fix abi_tag in special modes.
    
    From-SVN: r231283

commit 2f7c1b521885b98b9bc3d453ef12387ecb46641b
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Fri Dec 4 11:44:17 2015 +0000

    Fix c++/67337 (segfault in mangle.c)
    
            PR c++/67337
            * mangle.c (write_template_prefix): Guard against context==NULL.
    
    From-SVN: r231257

commit 0debc64b2438f97feaa94eef0033e0001f8af46e
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 4 11:01:45 2015 +0000

    BASE-VER: Set to 5.3.1.
    
    2015-12-04  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 5.3.1.
    
    From-SVN: r231256

commit 7a5558ee1c57939c34d0d9a337b26533c94a75e2
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Fri Dec 4 10:45:05 2015 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r231254

commit 2aa49890461176d1523b4e3c8588ff29f283dfdd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 4 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231241

commit 67373d06122a5b932c866dbe45fba99b665af9d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 3 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r231215

commit 131bdc7437d92b5259dc02278d6e17a357a9f0f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 2 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231139

commit 1f110c8a2c572ba83c9abef1380c934807442d1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 1 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231092

commit 73853cda61d58bcb4fea43748563360d1f40940c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 30 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r231055

commit 886f333a5a8e6ce589cab4cd996948da224ad22e
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sun Nov 29 22:41:48 2015 +0000

    re PR ada/68564 (Ada fails to bootstrap on sparc64-linux-gnu)
    
    2015-11-29  Matthias Klose  <doko@ubuntu.com>
    
            PR ada/68564
            * gcc-interface/Makefile.in: Fix powerpc/powerpc64* and
            mipsel/mips64el bitness detection.
            Merge the mipsel/mips64el definitions into one.
    
    From-SVN: r231052

commit f80d3d6cb5565bb109881b36d5e86761c6e2ac5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 29 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231041

commit c908ee0f3397f25df2d13db597f1ae57bf1d5e85
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sat Nov 28 21:23:30 2015 +0000

    freebsd.h (SUBTARGET32_DEFAULT_CPU): Change to i586.
    
            * config/i386/freebsd.h (SUBTARGET32_DEFAULT_CPU): Change to i586.
            Remove support for FreeBSD 5 and earlier.
    
    From-SVN: r231036

commit 64bc719d2e1bb68594e364c4c0b67c1517d2f98b
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sat Nov 28 02:41:20 2015 +0000

    re PR ada/68564 (Ada fails to bootstrap on sparc64-linux-gnu)
    
    2015-11-28  Matthias Klose  <doko@ubuntu.com>
    
            PR ada/68564
            * gcc-interface/Makefile.in: Fix sparc/sparc64 bitness detection.
    
    From-SVN: r231029

commit f16df7637e68af4e94080c39614319a6476f0450
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 28 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r231026

commit 0e8410bfc5b31746b7a978e88db5ce2e874ab89f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Nov 27 20:42:47 2015 +0100

    re PR tree-optimization/68552 (ICE in in expand_expr_real_2 with -O2 -ftree-vectorize)
    
            PR tree-optimization/68552
            * optabs.c (expand_vec_perm_1): Move vec_shr handling from here...
            (expand_vec_perm): ... here.  Do it regardless of vec_perm_const_optab
            or whether v0 == v1.
    
    From-SVN: r231024

commit ee5e58815e079037f452301450dd9e1c931834cb
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Fri Nov 27 15:08:23 2015 +0100

    re PR fortran/68218 (ALLOCATE with size given by a module function)
    
    gcc/fortran/ChangeLog:
    
    2015-11-27  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/68218
            * trans-array.c (gfc_array_init_size): Add gfc_evaluate_now() when
            array spec in allocate is a function call.
    
    gcc/testsuite/ChangeLog:
    
    2015-11-27  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/68218
            * gfortran.dg/allocate_with_arrayspec_1.f90: New test.
    
    From-SVN: r231014

commit c09610fb3fb2bcd15a70df8a495493f7cee145af
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Nov 27 13:13:48 2015 +0100

    re PR rtl-optimization/68250 (wrong code at -O2 and -O3 on x86_64-linux-gnu (in 64-bit mode))
    
            PR rtl-optimization/68250
            * gcc.c-torture/execute/pr68250.c: New test.
    
    From-SVN: r231010

commit b75de9491170d05fb831687bb62381355ab911e9
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Nov 27 11:42:15 2015 +0000

    * gcc.dg/pr63568.c: Convert to GIMPLE.
    
    From-SVN: r231008

commit 037fa57b3999bb573b8c0f2cb94b8e5b7e2f4618
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 27 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r230989

commit 2394a58e2ca34c2f27d9acdca3bb731ada6cd5fa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Nov 26 16:12:31 2015 +0000

    Ensure another pretty-printer test uses C++98 mode
    
            * testsuite/libstdc++-prettyprinters/debug.cc: Add -std=gnu++98 to
            dg-options and avoid use of uniform-init.
    
    From-SVN: r230976

commit def915dfd579447b4825921d0c890c621990362e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Nov 26 16:07:50 2015 +0000

    Ensure pretty-printer test uses C++98 mode
    
            * testsuite/libstdc++-prettyprinters/simple.cc: Add -std=gnu++98 to
            dg-options and avoid use of uniform-init.
    
    From-SVN: r230974

commit ae5f280362b4d182faa7beafcabc02298933c67e
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Thu Nov 26 14:07:55 2015 +0000

    backport: re PR rtl-optimization/67037 (Wrong code at -O1 and above on ARM)
    
    2015-11-26  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2015-09-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR rtl-optimization/67037
            * lra-constraints.c (process_addr_reg): Use copy_rtx when necessary.
    
    testsuite:
    2015-11-26  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2015-09-30  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR rtl-optimization/67037
            * gcc.c-torture/execute/pr67037.c: New test.
    
    From-SVN: r230964

commit 38d094dfd554b0955808ea057a6d3b18354e92c2
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Thu Nov 26 13:51:04 2015 +0000

    * configure: Regenerate.
    
    From-SVN: r230960

commit 4eaee15c27c24651a6d50546583ca1af401d01f9
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Thu Nov 26 13:47:10 2015 +0000

    * configure: Regenerate.
    
    From-SVN: r230957

commit 749ec6369eebbf5d92b8bdcd5d9b68e9a091d52a
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Thu Nov 26 13:36:26 2015 +0000

    backport: libtool.m4 (export_symbols_cmds): Add global TLS "L" symbols.
    
            Backport from mainline
            2015-11-26  David Edelsohn  <dje.gcc@gmail.com>
    
            * m4/libtool.m4 (export_symbols_cmds) [AIX]: Add global TLS "L"
            symbols.
    
    From-SVN: r230952

commit 78a5972fd946b790a34d581fe5fa7aec06222a0f
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Thu Nov 26 13:32:38 2015 +0000

    backport: rs6000.c (rs6000_declare_alias): Rename and globalize both the symbol and the "dot" symbol for function descriptors.
    
    Backport from mainline
    2015-11-25  David Edelsohn  <dje.gcc@gmail.com>
    
            * config/rs6000/rs6000.c (rs6000_declare_alias): Rename and globalize
            both the symbol and the "dot" symbol for function descriptors. Fix
            inversion for rename of symbols with dollar sign.
    
    From-SVN: r230951

commit 35a7afe1ac9543bcbe7ef1b6e3431896ecc23370
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Nov 26 12:28:57 2015 +0000

    backport: re PR target/68416 ([MPX] GCC emits a lot of redundant bndmov instructions)
    
    gcc/
    
            Backport from mainline r230938.
            2015-11-26  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/68416
            * config/i386/i386.h (enum reg_class): Add
            bounds registers to ALL_REGS.
    
    gcc/testsuite/
    
            Backport from mainline r230938.
            2015-11-26  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR target/68416
            * gcc.target/i386/mpx/pr68416.c: New test.
    
    From-SVN: r230945

commit c536efcb77b4b5b33f032749153979dd6ab07eac
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 26 12:55:14 2015 +0100

    re PR rtl-optimization/68249 (wrong code at -O2 and -O3 on x86_64-linux-gnu)
    
            PR rtl-optimization/68249
            PR rtl-optimization/68321
            * gcc.c-torture/execute/pr68249.c: New test.
            * gcc.c-torture/execute/pr68321.c: New test.
    
    From-SVN: r230941

commit 3ee0705b649ba5677b5b8f9ce32295910427f249
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Nov 26 11:36:40 2015 +0000

    [calls.c] PR rtl-optimization/67226: Take into account pretend_args_size when checking stack offsets for sibcall optimisation
    
            Backport from mainline
            2015-11-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
                        Bernd Schmidt  <bschmidt@redhat.com>
    
            PR rtl-optimization/67226
            * calls.c (store_one_arg): Take into account
            crtl->args.pretend_args_size when checking for overlap between
            arg->value and argblock + arg->locate.offset during sibcall
            optimization.
    
            * gcc.c-torture/execute/pr67226.c: New test.
    
    From-SVN: r230936

commit 31ed6bb92875ad33add972adcd932f340493e13a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 26 11:21:42 2015 +0100

    re PR c++/68508 (Internal compiler error with parentheses around return value in C++14 with ASan enabled)
    
            PR c++/68508
            * cp-tree.h (cp_ubsan_maybe_instrument_downcast): Add INTYPE argument.
            * cp-ubsan.c (cp_ubsan_maybe_instrument_downcast): Likewise.  Use
            it instead of or in addition to TREE_TYPE (op).  Use
            is_properly_derived_from, return NULL_TREE if TREE_TYPE (intype) and
            TREE_TYPE (type) are the same type minus qualifiers.
            * typeck.c (build_static_cast_1): Adjust callers.
    
            * g++.dg/ubsan/pr68508.C: New test.
    
    From-SVN: r230933

commit 718fafac911ac5e20529168e23683a96449b036c
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Thu Nov 26 10:10:58 2015 +0000

    [ARM] Disable neon testing for armv7-m
    
    2015-11-26  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * lib/target-supports.exp
            (check_effective_target_arm_neon_ok_nocache): Add check
            for M profile.
    
    From-SVN: r230930

commit c7ed358227bdd330848a4ac2655c9cd8453a8ca6
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Thu Nov 26 00:24:33 2015 +0000

    re PR go/61303 (gccgo: segfault, regression since 4.8.2)
    
            PR go/61303
        runtime: don't overallocate in select code
    
        If we've already allocated an fd_set, don't allocate another one.
    
        Also, don't bother to read from rdwake if it wasn't returned in select.
    
        Fixes https://gcc.gnu.org/PR61303.
    
        Reviewed-on: https://go-review.googlesource.com/17243
    
    From-SVN: r230923

commit 1f8e5bf5d24e04316fa01212400ba4d30d2fe6cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 26 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r230920

commit 2a7d8a291f29e2be4b159b81ee00e8465fa727e5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Nov 25 22:13:00 2015 +0100

    backport: re PR c++/67354 (internal compiler error: in add_to_same_comdat_group, at symtab.c:421)
    
            Backported from mainline
            2015-11-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/67354
            * cp-tree.h (defer_mangling_aliases): Declare.
            (generate_mangling_aliases): New prototype.
            * decl2.c (defer_mangling_aliases): New variable.
            (note_mangling_alias): Use !defer_mangling_aliases
            instead of at_eof.
            (generate_mangling_aliases): No longer static. Clear
            defer_mangling_aliases.
            * optimize.c (maybe_thunk_body): Defer emitting mangling aliases
            if !defer_mangling_aliases until the fns are put into the same
            comdat group.
    
            * g++.dg/abi/mangle67.C: New test.
    
            2015-05-09  Aldy Hernandez  <aldyh@redhat.com>
    
            PR bootstrap/66085
            * decl2.c (note_mangling_alias): Declare arguments as unused.
    
            2015-05-08  Jason Merrill  <jason@redhat.com>
    
            * decl2.c (mangling_aliases): New variable.
            (note_mangling_alias, generate_mangling_aliases): New.
            (cp_write_global_declarations): Call generate_mangling_aliases.
            (generate_mangling_alias): Split out from...
            * mangle.c (mangle_decl): ...here.
            * cp-tree.h: Declare note_mangling_alias.
    
    From-SVN: r230905

commit 7a0cde5b02931a314c75c33a04b10003fc7cc8d3
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Wed Nov 25 20:46:43 2015 +0000

    constexpr-array13.C: Fix.
    
    2015-11-25  Paolo Carlini  <paolo.carlini@oracle.com>
    
            * g++.dg/cpp0x/constexpr-array13.C: Fix.
    
    From-SVN: r230904

commit ed0a994cb2b1a02a14109f5b57112c00395acaf8
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Nov 25 14:56:18 2015 -0500

    re PR sanitizer/67941 (calls on function pointer from a captureless lambda cause ubsan warning)
    
            PR c++/67941
    
            * lambda.c (maybe_add_lambda_conv_op): Mark _FUN as
            no_sanitize_undefined.
    
    From-SVN: r230901

commit f9ab4149565f17af12d9b36b94af3df39189310a
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Nov 25 14:56:12 2015 -0500

    re PR c++/68422 (compile-time cost of sizeof... is quadratic)
    
            PR c++/68422
    
            * cp-tree.h (PACK_EXPANSION_SIZEOF_P): New.
            * parser.c (cp_parser_sizeof_pack): Set it.
            * pt.c  (tsubst_copy) [SIZEOF_EXPR]: Likewise.
            (tsubst_pack_expansion): Improve T... shortcut when set.
    
    From-SVN: r230900

commit 816225fc64a113f6454ff710b13745c03ac958d6
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Nov 25 14:56:06 2015 -0500

    re PR c++/67813 ([C++14] copy-initialization of object with pointer member fails in constexpr function)
    
            PR c++/67813
    
            * constexpr.c (cxx_eval_store_expression): Always use *valp if
            set.
    
    From-SVN: r230899

commit db1f6418ae5bbad75e5ccd7bb03593ffa4781c3a
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Wed Nov 25 17:57:15 2015 +0000

    re PR rtl-optimization/67954 (internal compiler error: in patch_jump_insn, at cfgrtl.c:1303)
    
    2015-11-25  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR rtl-optimization/67954
            * lra-constraints.c (curr_insn_transform): Add check on scratch
            pseudo when change class to NO_REGS.  Add an assert.
    
    From-SVN: r230893

commit 7ed4416700e188475092d93bdee7b72883d16025
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Nov 25 16:42:18 2015 +0000

    re PR c++/68087 (ICE with constexpr in array with negative index)
    
    /cp
    2015-11-25  Markus Trippelsdorf  <markus@trippelsdorf.de>
                Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/68087
            * constexpr.c (cxx_eval_array_reference): Use tree_fits_shwi_p before
            tree_to_shwi to avoid ICEs.
    
    /testsuite
    2015-11-25  Markus Trippelsdorf  <markus@trippelsdorf.de>
                Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/68087
            * g++.dg/cpp0x/constexpr-array13.C: New.
    
    Co-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>
    
    From-SVN: r230887

commit e46a69126fe040f4b3d4b8c9371770911a1eb77f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Nov 25 16:11:40 2015 +0000

    Extend valid values of iostream bitmask types
    
    Backport from mainline
    2015-11-12  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/56158
            * include/bits/ios_base.h (_Ios_Fmtflags, _Ios_Openmode, _Ios_Iostate):
            Define enumerators to ensure all values of type int are valid values
            of the enumeration type.
            * testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Add new cases.
            * testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.
            * testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.
    
    From-SVN: r230884

commit 71132305056a7354b6f90d63c23e22b27cd579b8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Nov 25 16:11:33 2015 +0000

    Backport shrink_to_fit() fix for -fno-exceptions
    
    2015-09-17  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/allocator.h (__shrink_to_fit_aux<T, true>::_S_do_it):
            Do nothing if exceptions are disabled.
            * include/bits/basic_string.h (basic_string::shrink_to_fit): Likewise.
    
    From-SVN: r230883

commit dad90a7c1033f53099814d1d7bc93fcd106aa43e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 25 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230849

commit 8070afb014903863b18a8e691ffbd7e45c04f39e
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Nov 24 20:43:50 2015 +0000

    backport: rs6000.md (UNSPEC_XSRDPI): New unspec.
    
    2015-11-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport form mainline
            2015-11-24  David Edelsohn  <dje.gcc@gmail.com>
                        Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.md (UNSPEC_XSRDPI): New unspec.
            (Fv2): New mode attribute to be used when ISA 2.07 instructions
            are used on SF values, and ISA 2.06 instructions on DF values.
            (add<mode>3_fpr): Use <Fv2> instead of <Fv>.
            (sub<mode>3_fpr): Use <Fv2> instead of <Fv>.
            (mul<mode>3_fpr): Use <Fv2> instead of <Fv>.
            (div<mode>3_fpr): Use <Fv2> instead of <Fv>.
            (sqrt<mode>2): Use <Fv2> instead of <Fv>.
            (fre<Fs>): Use <Fv2> instead of <Fv>.
            (rsqrt<mode>2): Use <Fv2> instead of <Fv>.
            (cmp<mode>_fpr): Use <Fv2> instead of <Fv>.
            (xsrdpi<mode>): Add support for the lround function.
            (lround<mode>di2): Likewise.
            (fma<mode>4_fpr): Use <Fv2> instead of <Fv>.
            (fms<mode>4_fpr): Use <Fv2> instead of <Fv>.
            (nfma<mode>4_fpr): Use <Fv2> instead of <Fv>.
            (nfms<mode>4_fpr): Use <Fv2> instead of <Fv>.
    
    From-SVN: r230841

commit e045ab5c8e88ce8069ec47b10bf1b61a72f56a01
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Tue Nov 24 21:41:40 2015 +0100

    backport: freebsd.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Bring in the commit from r125920 for FreeBSD.
    
    2015-11-24  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-11-18  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/i386/freebsd.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Bring in the
        commit from r125920 for FreeBSD.
    
    From-SVN: r230840

commit 1554888dc25b17aac3c9553ccadaf56818c42c4a
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Nov 24 20:40:10 2015 +0000

    backport: re PR fortran/68196 (ICE on function result with procedure pointer component)
    
    2015-11-24  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/68196
            * class.c (has_finalizer_component): Prevent infinite recursion
            through this function if the derived type and that of its
            component are the same.
            * trans-types.c (gfc_get_derived_type): Do the same for proc
            pointers by ignoring the explicit interface for the component.
    
            PR fortran/66465
            * check.c (same_type_check): If either of the expressions is
            BT_PROCEDURE, use the typespec from the symbol, rather than the
            expression.
    
    2015-11-24  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/68196
            * gfortran.dg/proc_ptr_47.f90: New test.
    
            Backport from trunk.
            PR fortran/66465
            * gfortran.dg/pr66465.f90: New test.
    
    From-SVN: r230839

commit 8dbf08a87f39b02b8861714005f7780e0862c3f6
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Nov 24 16:10:55 2015 +0000

    backport: re PR target/68059 ([arm] libgcc uses __write to report error)
    
    2015-11-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            Backport from mainline
            2015-11-23  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/68059
            * config/arm/linux-atomic-64bit.c (__write): Rename to...
            (write): ...this and fix the return type.
    
    From-SVN: r230820

commit 459c8436e0a51357cdee4c76485e488ae630f0d7
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Tue Nov 24 15:34:29 2015 +0000

    backport: re PR c/68337 ([MPX] memcpy() for arrays with function pointers results in huge resource usage and binaries)
    
    gcc/
    
            Backport from mainline r230796.
            2015-11-24  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR c/68337
            * gimple-fold.c: Include ipa-chkp.h.
            (gimple_fold_builtin_memory_op): Don't fold call if we
            are going to instrument it and it may copy pointers.
    
    gcc/testsuite/
    
            Backport from mainline r230796.
            2015-11-24  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR c/68337
            * gcc.target/i386/mpx/pr68337-1.c: New test.
            * gcc.target/i386/mpx/pr68337-2.c: New test.
    
    From-SVN: r230817

commit ac67f5c782a98f8ddedc3cde83f9704c4fc4caed
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Nov 24 14:24:24 2015 +0000

    [RTL-ree] PR rtl-optimization/68194: Restrict copy instruction in presence of conditional moves
    
            PR rtl-optimization/68194
            PR rtl-optimization/68328
            PR rtl-optimization/68185
            * ree.c (combine_reaching_defs): Reject copy_needed case if
            copies_list is not empty.
    
            * gcc.c-torture/execute/pr68185.c: New test.
            * gcc.c-torture/execute/pr68328.c: Likewise.
    
    From-SVN: r230812

commit 48575eb9bfb59d72e5a5b0ebea7e39416533b770
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Nov 24 13:25:07 2015 +0000

    Handle C++11 <math.h> overloads on Solaris 12
    
            * acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): New test.
            * configure.ac: Use it.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
            * include/c_global/cmath [__cplusplus >= 201103L]
            (std::fpclassify): Wrap in !__CORRECT_ISO_CPP11_MATH_H_PROTO.
            (std::isfinite): Likewise.
            (std::isinf): Likewise.
            (std::isnan): Likewise.
            (std::isnormal): Likewise.
            (std::signbit): Likewise.
            (std::isgreater): Likewise.
            (std::isgreaterequal): Likewise.
            (std::isless): Likewise.
            (std::islessequal): Likewise.
            (std::islessgreater): Likewise.
            (std::isunordered): Likewise.
            (std::acosh): Likewise.
            (std::asinh): Likewise.
            (std::atanh): Likewise.
            (std::cbrt): Likewise.
            (std::copysign): Likewise.
            (std::erf): Likewise.
            (std::erfc): Likewise.
            (std::exp2): Likewise.
            (std::expm1): Likewise.
            (std::fdim): Likewise.
            (std::fma): Likewise.
            (std::fmax): Likewise.
            (std::fmin): Likewise.
            (std::hypot): Likewise.
            (std::ilogb): Likewise.
            (std::lgamma): Likewise.
            (std::llrint): Likewise.
            (std::llround): Likewise.
            (std::log1p): Likewise.
            (std::log2): Likewise.
            (std::logb): Likewise.
            (std::lrint): Likewise.
            (std::lround): Likewise.
            (std::nearbyint): Likewise.
            (std::nextafter): Likewise.
            (std::nexttoward): Likewise.
            (std::remainder): Likewise.
            (std::remquo): Likewise.
            (std::rint): Likewise.
            (std::round): Likewise.
            (std::scalbln): Likewise.
            (std::scalbn): Likewise.
            (std::tgamma): Likewise.
            (std::trunc): Likewise.
            * include/tr1/cmath [_GLIBCXX_USE_C99_MATH_TR1] (std::tr1::acosh):
            Wrap in !__CORRECT_ISO_CPP11_MATH_H_PROTO.
            (std::tr1::asinh): Likewise.
            (std::tr1::atanh): Likewise.
            (std::tr1::cbrt): Likewise.
            (std::tr1::copysign): Likewise.
            (std::tr1::erf): Likewise.
            (std::tr1::erfc): Likewise.
            (std::tr1::exp2): Likewise.
            (std::tr1::expm1): Likewise.
            (std::tr1::fabs): Likewise.
            (std::tr1::fdim): Likewise.
            (std::tr1::fma): Likewise.
            (std::tr1::fmax): Likewise.
            (std::tr1::fmin): Likewise.
            (std::tr1::hypot): Likewise.
            (std::tr1::ilogb): Likewise.
            (std::tr1::lgamma): Likewise.
            (std::tr1::llrint): Likewise.
            (std::tr1::llround): Likewise.
            (std::tr1::log1p): Likewise.
            (std::tr1::log2): Likewise.
            (std::tr1::logb): Likewise.
            (std::tr1::lrint): Likewise.
            (std::tr1::lround): Likewise.
            (std::tr1::nearbyint): Likewise.
            (std::tr1::nextafter): Likewise.
            (std::tr1::nexttoward): Likewise.
            (std::tr1::remainder): Likewise.
            (std::tr1::remquo): Likewise.
            (std::tr1::rint): Likewise.
            (std::tr1::scalbln): Likewise.
            (std::tr1::scalbn): Likewise.
            (std::tr1::tgamma): Likewise.
            (std::tr1::trunc): Likewise.
            (std::tr1::pow): Likewise.
    
            * testsuite/26_numerics/headers/cmath/c99_classification_macros_c.cc:
            Restrict dg-xfail-if to *-*-solaris2.1[01]*.
    
    From-SVN: r230808

commit 43648352b5fe6ab4b400c5e9feb8352e256c286d
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Nov 24 13:14:58 2015 +0000

    re PR middle-end/68221 (libgomp reduction-11/12 failures)
    
    2015-11-24  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68221
            * tree-ssa-sccvn.c (copy_reference_ops_from_ref): Properly
            use mem_ref_offset.
    
    From-SVN: r230806

commit 7efa52b07a025ad07efed94e2b4394c3e2435dd5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Nov 24 12:10:45 2015 +0100

    re PR target/68483 (gcc 5.2: suboptimal code compared to 4.9)
    
            PR target/68483
            * tree-vect-generic.c (lower_vec_perm): If VEC_PERM_EXPR
            is valid vec_shr pattern, don't lower it even if can_vec_perm_p
            returns false.
            * optabs.c (shift_amt_for_vec_perm_mask): Return NULL_RTX
            whenever first is nelt or above.  Don't mask expected with
            2 * nelt - 1.
    
            * gcc.target/i386/pr68483-1.c: New test.
            * gcc.target/i386/pr68483-2.c: New test.
    
    From-SVN: r230799

commit d9663729efec1126dd1ee0f7575b20c42aa820a0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Nov 24 08:43:07 2015 +0000

    decl.c (is_cplusplus_method): Check that the type of the first parameter (indirectly) has C++ convention too.
    
            * gcc-interface/decl.c (is_cplusplus_method): Check that the type of
            the first parameter (indirectly) has C++ convention too.
    
    From-SVN: r230789

commit 350fedec27271bbfd988c6c1b0a2693276f8b349
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 24 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r230782

commit b33cda2673be66dec7d859fc9d2c893fd848e533
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Mon Nov 23 21:18:03 2015 +0000

    re PR go/68496 ([libgo] reflect test fails on Linux x86-64)
    
            PR go/68496
        reflect: Allocate space for FFI functions returning a zero-sized type.
    
        The libffi library does not understand zero-sized types.  We represent
        them as a struct with a single field of type void.  If such a type is
        returned from a function, libffi will copy 1 byte of data.  Allocate
        space for that byte, although we won't use it.
    
        Fixes https://gcc.gnu.org/PR68496.
    
        Reviewed-on: https://go-review.googlesource.com/17175
    
    From-SVN: r230777

commit af0b994d1ed429118c7aa91c991a15aad08873b4
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Nov 23 19:25:32 2015 +0000

    backport: re PR target/67808 (LRA ICEs on simple double to long double conversion test case)
    
    [gcc]
    2015-11-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-10-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/67808
            * config/rs6000/rs6000.md (extenddftf2): In the expander, only
            allow registers, but provide insns for the combiner to create for
            loads from memory. Separate VSX code from non-VSX code. For
            non-VSX code, combine extenddftf2_fprs into extenddftf2 and rename
            externaldftf2_internal to externaldftf2_fprs. Reorder constraints
            so that registers come before memory operations. Drop support from
            converting DFmode to TFmode, if the DFmode value is in a GPR
            register.
            (extenddftf2_fprs): Likewise.
            (extenddftf2_internal): Likewise.
            (extenddftf2_vsx): Likewise.
            (extendsftf2): In the expander, only allow registers, but provide
            insns for the combiner to create for stores and loads.
    
    [gcc/testsuite]
    2015-11-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            2015-10-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
                Peter Bergner <bergner@vnet.ibm.com>
    
            PR target/67808
            * gcc.target/powerpc/pr67808.c: New test.
    
    From-SVN: r230769

commit 06ea46882f38668cccb06344420c49e8eef7c24a
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Nov 23 15:20:42 2015 +0000

    [AArch64] PR target/68363 Check that argument is real INSN in aarch64_madd_needs_nop
    
            Backport from mainline
            2015-11-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/68363
            * config/aarch64/aarch64.c (aarch64_madd_needs_nop): Reject arguments
            that are not INSN_P.
    
            * gcc.target/aarch64/pr68363_1.c: New test.
    
    From-SVN: r230763

commit 25aec7d46704baf906e97b1bf6c31183e5ee6737
Author: Martin Liska <marxin@gcc.gnu.org>
Date:   Mon Nov 23 15:14:41 2015 +0000

    Fix ChangeLog entries.
    
    From-SVN: r230761

commit a39a211c5eada2dccc4ca49dcc8702950cbba2cb
Author: Martin Liska <marxin@gcc.gnu.org>
Date:   Mon Nov 23 13:58:40 2015 +0000

    re PR ipa/65908 (ICE: in expand_thunk, at cgraphunit.c:1700)
    
    PR ipa/65908
    
            * ipa-icf.c (sem_item::target_supports_symbol_aliases): Remove
            construction of arg_types.
            (sem_function::sem_function): Likewise.
            (sem_function::~sem_function): Remove destruction of arg_types.
            (sem_function::compatible_parm_types_p): New function.
            (sem_function::equals_wpa): Reorg matching of return values
            and parameter types.
            (sem_function::equals_private): Reorg mathcing of argument types.
            (sem_function::parse_tree_args): Remove.
            (sem_function::param_used_p): New function.
            * ipa-icf.h (init_wpa): Do not call it.
            (parse_tree_args): Remove.
            (compatible_parm_types_p): Declare.
            (result_type): Remove.
            (arg_types): Remove.
            (param_used_p): Declare.
            * g++.dg/ipa/pr65908.C: New testcase.
    
    From-SVN: r230756

commit 2d4b95af9c90edf33bb8b5415b88fd9909b1531e
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Nov 23 11:03:49 2015 +0000

    * zh_CN.po: Update.
    
    From-SVN: r230751

commit 77640d1a32e974a3b3b1a9b695a62a626e2d5a83
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 23 08:32:28 2015 +0000

    backport: re PR middle-end/56956 (ftrapv traps on valid abs-like code)
    
    2015-11-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-10-29  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/56956
            * fold-const.c (fold_cond_expr_with_comparison): Do not fold
            unsigned conditonal negation to ABS_EXPR.
    
            * c-c++-common/ubsan/pr56956.c: New testcase.
    
    From-SVN: r230736

commit 6846ba22d6fa59439282a41beba445622ad3e6a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 23 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230732

commit 733ee91ed1faa4b1b2add3ca8b82201139444e4f
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Nov 22 20:23:39 2015 +0100

    backport: re PR fortran/67460 (Spurious: f951: all warnings being treated as errors)
    
    2015-11-22  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from mainline
            2015-09-14  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>
    
            PR fortran/67460
            * diagnostic.c (diagnostic_initialize): Do not set
            some_warnings_are_errors.
            (diagnostic_finish): Use DK_WERROR count instead.
            (diagnostic_report_diagnostic): Do not set
            some_warnings_are_errors.
            * diagnostic.h (struct diagnostic_context): Remove
            some_warnings_are_errors.
    
            PR fortran/67460
            * gfortran.dg/pr67460.f90: New test.
    
    --This line, and those
    
    M    ChangeLog
    M    diagnostic.h
    M    diagnostic.c
    M    testsuite/ChangeLog
    A    testsuite/gfortran.dg/pr67460.f90
    
    From-SVN: r230724

commit 5d99d8329d4681d58272a728401f3da7011882cc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 22 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230717

commit 26b9a8d72cdeb3b1e54091317e3cee04a91add93
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Nov 21 09:26:00 2015 +0100

    re PR debug/66432 (libgomp.c/appendix-a/a.29.1.c -O2 -g: type mismatch between an SSA_NAME and its symbol)
    
            PR debug/66432
            * tree-inline.c (copy_debug_stmt): If
            gimple_debug_source_bind_get_value is DECL_ORIGIN of a PARM_DECL
            in decl_debug_args, don't call remap_gimple_op_r on it.
    
            * gcc.dg/debug/pr66432.c: New test.
    
    From-SVN: r230703

commit 93b3c01bacb3120607f4b68fbc7f82346dbd6eb9
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sat Nov 21 04:44:07 2015 +0000

    re PR go/66378 (libgo syscall.Sendfile() does not honor/use offset argument)
    
            PR go/66378
        syscall: Fix initial offset value in syscall.Sendfile.
    
        Bug reported in https://gcc.gnu.org/PR66378.
    
        Reviewed-on: https://go-review.googlesource.com/17159
    
    From-SVN: r230700

commit 4c85cbac1e41a7ddab73f09c5698be6bccc0b074
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sat Nov 21 01:41:55 2015 +0000

    re PR go/65785 (libgo TestIPv4MulticastListener test fails on machine with no network connection)
    
            PR go/65785
        net: don't run multicast listen test on nil interface in short mode
    
        This is a backport of https://golang.org/cl/17154.
    
        The gccgo bug report https://gcc.gnu.org/PR65785 points out that the
        multicast listen tests will use the network even with -test.short.
        Fix test by checking testing.Short with a nil interface.
    
        Reviewed-on: https://go-review.googlesource.com/17158
    
    From-SVN: r230696

commit 0de33e6abaf97b423c4eb48206fb756a1a0014db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 21 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230691

commit 58b4343309114a254bf4b3f99f1dcefef8eb8364
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Nov 20 23:37:48 2015 +0000

    re PR go/67976 (Cgo + Gccgo not working like Cgo + Golang?)
    
            PR go/67976
    Bring https://codereview.appspot.com/154360045 aka
    https://go-review.googlesource.com/11658 onto GCC 5 branch.
    
    cmd/cgo/out.go: fix go build -compiler gccgo with cgo exported function
    
    Fixes issue 8945 by preventing to generate _cgohack_ code when build
    with gccgo. The _cgohack_ was introduced in
    https://codereview.appspot.com/3746041 .
    
    From-SVN: r230688

commit 2af58ced7d136af53efb1a5acd16ff711ec91d3c
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Nov 20 22:49:06 2015 +0000

    re PR go/68072 (malformed DWARF TagVariable entry)
    
            PR go/68072
        cmd/cgo: ignore vars with no name or type if they have a AttrSpecification
    
        Backport of master CL https://golang.org/cl/17151.
    
        Fixes https://gcc.gnu.org/PR/68072.
    
        Reviewed-on: https://go-review.googlesource.com/17152
    
    From-SVN: r230686

commit 58786e1a3acf9f263633b8ca7bde2fafc1092659
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Nov 20 21:30:48 2015 +0000

    cmd: Use correct install tool dir with gccgo
    
        When using the go command built from gccgo to build and
        install a go tool, use the value from runtime GCCGOTOOLDIR as
        the install directory.
    
        This also fixes the output from 'go tool' when used with the
        gccgo-built go command, to only include the go tools and not
        other binaries found in the same directory.
    
        Reviewed-on: https://go-review.googlesource.com/16516
    
    From-SVN: r230678

commit b4eb4ee77c437308b601688bb5621a68a1e5bed1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Nov 20 20:57:50 2015 +0100

    re PR middle-end/68339 (g++.dg/vect/simd-clone-2.cc ICEs with aggressive GC settings and OpenMP)
    
            PR middle-end/68339
            * omp-low.c (expand_simd_clones): Call node->get_body () before
            allocating stuff in GC.
    
            * gcc.dg/vect/pr68339.c: New test.
    
    From-SVN: r230673

commit b146b57a9de529c5f7c55dff0842f01872b40fb0
Author: Jan Kratochvil <jan.kratochvil@redhat.com>
Date:   Fri Nov 20 19:10:12 2015 +0000

    re PR libstdc++/68448 (Python Pretty Printers get disabled on libstdc++ reload by GDB)
    
            PR libstdc++/68448
            * python/hook.in: Call register_libstdcxx_printers.
            * python/libstdcxx/v6/__init__.py: Wrap it to
            register_libstdcxx_printers.
    
    From-SVN: r230670

commit e37897e27f90a5e17de32905f3f8340757846460
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Nov 20 13:22:38 2015 +0000

    compiler: Use receiver name in hash/equal for type within method.
    
    
        Test case sent as https://golang.org/cl/17081.
    
        Reviewed-on: https://go-review.googlesource.com/17082
    
    From-SVN: r230656

commit f6793b089e07e5f6d6f869280c6110a7ec6ea601
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Nov 20 11:05:47 2015 +0000

    md.texi (Standard Names): Move entry for addptr3 around...
    
            * doc/md.texi (Standard Names): Move entry for addptr3 around,
            add entries for addv4, subv4, mulv4, umulv4 and negv3, fixes
            glitch in entries for cbranch4 and jump.
    
    From-SVN: r230652

commit e9080595a403c25da1f1b958827fd254f52a1095
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Nov 20 07:52:44 2015 +0000

    S/390: Add bswaphi2 pattern
    
    Backport from mainline
    
    gcc/testsuite/ChangeLog:
            * gcc.target/s390/bswap-1.c: New test.
    
    gcc/ChangeLog:
            * config/s390/s390.md ("bswaphi2"): New pattern.
    
    From-SVN: r230645

commit e627ce29d6f96e25547670625c64ae243141e1fb
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Fri Nov 20 07:47:04 2015 +0000

    S/390: Clobber r1 in patterns resulting in pfpo instruction.
    
    Backport from mainline.
    
    gcc/ChangeLog
    
            * config/s390/s390.md (GPR1_REGNUM): New constant.
            ("*trunc<BFP:mode><DFP_ALL:mode>2")
            ("*trunc<DFP_ALL:mode><BFP:mode>2")
            ("trunc<BFP:mode><DFP_ALL:mode>2")
            ("trunc<DFP_ALL:mode><BFP:mode>2")
            ("*extend<BFP:mode><DFP_ALL:mode>2")
            ("*extend<DFP_ALL:mode><BFP:mode>2")
            ("extend<BFP:mode><DFP_ALL:mode>2")
            ("extend<DFP_ALL:mode><BFP:mode>2"): Clobber r1.
    
    gcc/testsuite/ChangeLog
    
            * gcc.target/s390/pfpo.c: New test.
    
    From-SVN: r230644

commit 49f8acb4e5327462efcb4dc3b645c267b944f66e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 20 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230636

commit 12a458cfee558ed8c7e7a3a629910aef1cb9dea5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 19 17:34:32 2015 +0100

    re PR c++/67409 (tree-cfg.c dereferences a NULL pointer)
    
            PR c++/67409
            * decl.c (identify_goto): Add LOC and DIAG_KIND arguments, call
            emit_diagnostic instead of permerror.
            (check_previous_goto_1): Adjust identify_goto callers, treat all
            cases but crossing initialization and entering scope of decl with
            non-trivial dtor as unconditional hard errors.
            (check_goto): Use identify_goto.  Treat all cases but crossing
            initialization and entering scope of decl with non-trivial dtor
            as unconditional hard errors.
    
            * g++.dg/eh/goto3.C: New test.
    
    Co-Authored-By: Manuel López-Ibáñez <manu@gcc.gnu.org>
    
    From-SVN: r230616

commit cb1921f4e0dd8671e2cb435cd69659ed91f46f54
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 19 13:32:10 2015 +0000

    re PR lto/61313 (configure incorrectly strips $target_alias from PLUGIN_LD_SUFFIX)
    
            PR lto/61313
            * configure.ac (PLUGIN_LD_SUFFIX): Do not touch the value specified
            by the user.
            * configure: Regenerate.
    
    From-SVN: r230604

commit 2e84ae63105250c2e0fc94c904a7d8824d2acbfb
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 19 11:50:35 2015 +0000

    re PR target/68408 (broken support for attribute init_priority)
    
            PR target/68408
            * config/sparc/sp-elf.h (CTORS_SECTION_ASM_OP): Undefine.
            (DTORS_SECTION_ASM_OP): Likewise.
    
    From-SVN: r230599

commit 2415fab2a54ce7ed7694d67d655d82728caac361
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 19 09:53:52 2015 +0100

    re PR rtl-optimization/68376 (wrong code at -O1 and above on x86_64-linux-gnu)
    
            PR rtl-optimization/68376
            * ifcvt.c (noce_try_abs): Disable one_cmpl optimization if
            encountering x <= 0 ? ~x : x or x > 0 ? ~x : x.
    
            * gcc.c-torture/execute/pr68376-1.c: New test.
            * gcc.c-torture/execute/pr68376-2.c: New test.
    
    From-SVN: r230597

commit ed0afdadf6b56a6250b11728fe070addb1069ed5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 19 09:47:24 2015 +0100

    re PR target/67770 (i386: -fshrink-wrap can interact badly with trampolines)
    
            PR target/67770
            * config/i386/i386.md (simple_return): Disable if
            ix86_static_chain_on_stack is true.
    
            * gcc.target/i386/pr67770.c: New test.
    
    From-SVN: r230595

commit 711a68a839a8d6163e406bf1b3e4d0d09254436c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Nov 19 09:28:43 2015 +0100

    re PR preprocessor/60736 (Crash in preprocessor including stdc-predef.h when it does not exist on glibc-based systems)
    
            PR preprocessor/60736
            * include/cpplib.h (cpp_errno_filename): New prototype.
            * errors.c (cpp_errno): Don't handle msgid "" specially, use
            _(msgid) instead of msgid as argument to cpp_error.
            (cpp_errno_filename): New function.
            * files.c (read_file_guts): Use cpp_errno_filename instead of
            cpp_errno.
            (open_file_failed): Likewise.  Use file->name if file->path is NULL
            in diagnostics.
    
    From-SVN: r230592

commit a18e2a4c9ba3a0e9f13c352375169610d3d19740
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 19 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230584

commit 9de06cb01142ee62ad22e223756dce70c744c765
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Nov 18 23:30:26 2015 +0000

    * Revert previous commit due to preplexing regression.
    
    From-SVN: r230582

commit 9bc8caee7f42789ce55d55884c9916907bd8d9c5
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Nov 18 22:58:47 2015 +0000

    re PR fortran/43996 (ICE in gfc_conv_array_initializer due to incomplete simplification of init expressions)
    
    2015-11-18  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/43996
            * simplify.c (gfc_simplify_spread): Issue error for too large array
            constructor in a PARAMETER statement.
    
    2015-11-18  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/43996
            * gfortran.dg/pr43996.f90: New test.
    
    From-SVN: r230581

commit a06c2a33ae11e78ee76e76ccb93dd3f5c657d3f0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Nov 18 18:20:11 2015 +0000

    trans.c (fold_constant_decl_in_expr): If the index is not itself constant then bail out.
    
            * gcc-interface/trans.c (fold_constant_decl_in_expr) <ARRAY_REF>: If
            the index is not itself constant then bail out.
    
    From-SVN: r230559

commit 08eb8a62ed3580f7a7175387192634ac857666f1
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Wed Nov 18 17:29:58 2015 +0100

    re PR fortran/65751 (Bogus &L in error message)
    
    2015-11-18  Dominique d'Humieres <dominiq@lps.ens.fr>
    
            PR fortran/65751
            * expr.c (gfc_check_pointer_assign): Fix error message.
    
            * gfortran.dg/unlimited_polymorphic_2.f03: Update test.
    
    From-SVN: r230553

commit a5aabbaa2138589385c5f2bffc371d79bac4dbcb
Author: Richard Henderson <rth@redhat.com>
Date:   Wed Nov 18 07:45:26 2015 -0800

    re PR rtl-optimization/67609 (Generates wrong code for SSE2 _mm_load_pd)
    
    PR rtl-opt/67609
    
            Backport from mainline
            * config/i386/i386.c (ix86_cannot_change_mode_class): Tighten
            sse check to the exact conditions of PR 67609.
    
            * config/i386/i386.c (ix86_cannot_change_mode_class): Disallow
            narrowing subregs on SSE and MMX registers.
            * doc/tm.texi.in (CANNOT_CHANGE_MODE_CLASS): Clarify when subregs that
            appear to be sub-words of multi-register pseudos must be rejected.
            * doc/tm.texi: Regenerate.
    
    From-SVN: r230552

commit 417639ebc9ff3dc907eb40cb036ced9edf2a3626
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 18 15:23:48 2015 +0000

    Backport PRs 66098, 66711, 67056, 67783, 68057, 68220
    
    2015-11-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-11-07  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/68057
            PR ipa/68220
            * ipa-polymorphic-call.c
            (ipa_polymorphic_call_context::restrict_to_inner_type): Fix ordering
            issue when offset is out of range.
            (contains_type_p): Fix out of range check, clear dynamic flag.
    
            * g++.dg/torture/pr68220.C: New testcase.
            * g++.dg/lto/pr68057_0.C: Likewise.
            * g++.dg/lto/pr68057_1.C: Likewise.
    
            2015-10-23  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/pr67600
            * ipa-polymorphic-call.c
            (ipa_polymorphic_call_context::get_dynamic_type): Do not confuse
            instance offset with offset of outer type.
    
            * g++.dg/torture/pr67600.C: New testcase.
    
            2015-10-12  Richard Biener  <rguenther@suse.de>
    
            PR ipa/67783
            * ipa-inline-analysis.c (estimate_function_body_sizes): Re-add
            code that analyzes IVs on each stmt but in a cheaper way avoiding
            quadratic behavior.
    
            2015-10-11  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/67056
            * ipa-polymorphic-call.c (possible_placement_new): If cur_offset
            is negative we don't know the type.
            (check_stmt_for_type_change): Skip constructors of non-polymorphic
            types as those won't help devirutalization.
    
            * g++.dg/ipa/pr67056.C: New testcase.
    
            2015-08-11  Manuel López-Ibáñez  <manu@gcc.gnu.org>
    
            PR c/66098
            PR c/66711
            * diagnostic.c (diagnostic_classify_diagnostic): Take -Werror into
            account when deciding what was the command-line status.
    
            * gcc.dg/pragma-diag-3.c: New test.
            * gcc.dg/pragma-diag-4.c: New test.
    
    From-SVN: r230550

commit a274435f84942c6c2f6efe0c4391f5c9b7712bf1
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Nov 18 13:18:47 2015 +0000

    [ARM] PR 68143 Properly update memory offsets when expanding setmem
    
            Backport from mainline
            2015-11-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/68143
            * config/arm/arm.c (arm_block_set_unaligned_vect): Keep track of
            offset from dstbase and use it appropriately in
            adjust_automodify_address.
            (arm_block_set_aligned_vect): Likewise.
    
            * gcc.c-torture/execute/pr68143_1.c: New test.
    
    From-SVN: r230544

commit 0bd7d1768afaf479f4a02a666310c0514ddeea1d
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 18 12:23:14 2015 +0000

    Backport PRs 67443, 67662, 68017, 68067
    
    2015-11-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-10-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/68067
            * fold-const.c (negate_expr_p): We cannot negate plus or minus
            if overflow is not wrapping.  Likewise multiplication unless
            one operand is constant and not power of two.
            (fold_negate_expr): Adjust accordingly.
    
            * gcc.dg/torture/pr68067-1.c: New testcase.
            * gcc.dg/torture/pr68067-2.c: Likewise.
    
            2015-10-26  Richard Biener  <rguenther@suse.de>
                    Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR middle-end/67443
            * alias.c (ao_ref_from_mem): Remove promoted subreg handling.
            Properly prune ref->ref for accesses outside of ref.
    
            * gcc.target/s390/pr67443.c: New testcase.
    
            2015-10-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/68017
            * tree-tailcall.c (eliminate_tail_call): Remove stmts backwards.
    
            * gcc.dg/torture/pr68017.c: New testcase.
    
            2015-09-23   Richard Biener  <rguenther@suse.de>
    
            PR middle-end/67662
            * fold-const.c (fold_binary_loc): Do not reassociate two vars with
            undefined overflow unless they will cancel out.
    
            * gcc.dg/ubsan/pr67662.c: New testcase.
    
    From-SVN: r230542

commit 7866e71d002306a2832a7208ae9bcb33d2d2bcbd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Nov 18 11:31:51 2015 +0100

    re PR tree-optimization/68157 (internal compiler error: in reassoc_stmt_dominates_stmt_p, at tree-ssa-reassoc.c:1287)
    
            PR tree-optimization/68157
            * tree-ssa-reassoc.c (attempt_builtin_powi): Set uid of
            pow_stmt or mul_stmt from stmt's uid.
            (reassociate_bb): Set uid of mul_stmt from stmt's uid.
    
            * g++.dg/opt/pr68157.C: New test.
    
    From-SVN: r230532

commit 3572fa287e079aa77f427de7271ce06fadca4017
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 18 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230514

commit 6f51b7699102a8f492edcf4268b01642eac35fcf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 17 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230447

commit 2c699967d224f63f2a262f6c6c5970f8b3726290
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Nov 17 00:07:55 2015 +0000

    re PR fortran/58027 ("Arithmetic overflow converting ..." in PARAMETER triggers an ICE)
    
    2015-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/58027
            PR fortran/60993
            * expr.c (gfc_check_init_expr): Prevent a redundant check when a
            __convert_* function was inserted into an array constructor.
            (gfc_check_assign_symbol): Check for an initialization expression
            when a __convert_* was inserted.
    
    2015-11-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/58027
            PR fortran/60993
            * gfortran.dg/pr58027.f90: New test.
    
    From-SVN: r230445

commit 0ec2e86cbd3a6456c4428cda8a1b014ad88277de
Author: Doug Evans <dje@google.com>
Date:   Mon Nov 16 23:46:56 2015 +0000

    backport: re PR libstdc++/67440 (pretty-printing of a const set<foo> fails)
    
    Backport from mainline:
    
            PR libstdc++/67440
            * python/libstdcxx/v6/printers.py (find_type): Handle "const" in
            type name.
            * testsuite/libstdc++-prettyprinters/debug.cc: Add test for
            const set<int>.
            * testsuite/libstdc++-prettyprinters/simple.cc: Ditto.
            * testsuite/libstdc++-prettyprinters/simple11.cc: Ditto.
    
    From-SVN: r230444

commit a7f691108450cdee49d08a81899502df64c899bc
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Nov 16 23:16:22 2015 +0000

    * sv.po: Update.
    
    From-SVN: r230443

commit 0b92f3397b80c03941ff78c64db99309958ec662
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Mon Nov 16 19:18:16 2015 +0000

    backport: on_exit.c: New file.
    
            Backport from mainline
            2015-11-15  David Edelsohn  <dje.gcc@gmail.com>
    
            * config/rs6000/on_exit.c: New file.
            * config/rs6000/t-aix-cxa (LIB2ADDEH): Build on_exit.c.
            * config/rs6000/libgcc-aix-cxa.ver (on_exit): Add symbol to exports.
    
    From-SVN: r230434

commit ae61c683749b2cc59b4523656399deee76d2954d
Author: Charles Baylis <charles.baylis@linaro.org>
Date:   Mon Nov 16 15:01:01 2015 +0000

    backport of fix for PR67280 (r227407)
    
    2015-11-16  Charles Baylis  <charles.baylis@linaro.org>
    
            Backport from mainline r227407
            PR ipa/67280
            * cgraphunit.c (cgraph_node::create_wrapper): Set can_throw_external
            in new callgraph edge.
    
    From-SVN: r230427

commit b83bc7558195033936a8a4e5386b7a66ad1f7219
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Mon Nov 16 14:22:10 2015 +0000

    backport: re PR target/68277 ([SH]: error: insn does not satisfy its constraints when compiling erlang)
    
    gcc/
            Backport from mainline
            2015-11-16  Oleg Endo  <olegendo@gcc.gnu.org>
                        Kaz Kojima  <kkojima@gcc.gnu.org>
    
            PR target/68277
            * config/sh/sh.md (addsi3_scr): Handle reg overlap of operands[0] and
            operands[2].
            (*addsi3): Add another insn_and_split variant for reload.
    
    From-SVN: r230426

commit 3af7004363fae03331adc4a2a565515912b54064
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 16 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230400

commit cc0ae2452bfc703f8179dec0b215b5899b0348ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 15 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r230387

commit 37e9f6e9d6477509cdadb6b5c3d216efd507af75
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Nov 14 17:43:15 2015 +0000

    re PR fortran/67803 (ICE on concatenating wrong character array constructor)
    
    2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>
    
        PR fortran/67803
        * array.c (gfc_match_array_constructor): If array constructor included
        a CHARACTER typespec, check array elements for compatible type.
    
    2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>
    
        PR fortran/67803
        * gfortran.dg/pr67803.f90: New test.
    
    From-SVN: r230380

commit 6fb0bb63307fba3d3a219cdde0a4af8d26668bd3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 14 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r230369

commit e744cfdb9276993be22ff455417280fa892cb7c7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Nov 13 21:28:10 2015 +0000

    re PR fortran/68319 (ICE on using interface with included entry)
    
    2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>
    
            PR fortran/68319
            * decl.c (gfc_match_data, gfc_match_entry): Enforce F2008:C1206.
            * io.c (gfc_match_format): Ditto.
            * match.c (gfc_match_st_function): Ditto.
    
    2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>
    
            PR fortran/68319
            * gfortran.dg/pr68319.f90: New test.
    
    From-SVN: r230352

commit 01f27acae5ba2b9efe7819798fadeb8e24db498c
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Fri Nov 13 12:03:40 2015 +0100

    re PR fortran/47266 (Optimization: Declare PRIVATE module procedures as "TREE_PUBLIC = 0" ("static function"))
    
    2015-11-13  Dominique d'Humieres <dominiq@lps.ens.fr>
    
            PR fortran/47266
            * gfortran.dg/module_private_2.f90: New test.
    
    From-SVN: r230299

commit e7c37f8f5382e329b778940e4d5c599faf7793a8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Nov 13 01:11:10 2015 +0000

    re PR fortran/68318 (ICE on duplicate entry declarations)
    
    2015-11-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68318
            * decl.c (get_proc_name): Increment reference count for ENTRY.
            While here, fix comment and use postfix ++ for consistency.
    
    2015-11-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68318
            * gfortran.dg/pr68318_1.f90: New test.
            * gfortran.dg/pr68318_2.f90: Ditto.
    
    From-SVN: r230282

commit 4cd24b570f46c0910f3cdfb6b600f131e7903365
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 13 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r230280

commit 16936d4bb0fa773e873bc2e6b336cb1d4cdf8763
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 12 11:59:23 2015 +0000

    re PR target/67265 ([x86] 'asm' operand has impossible constraints with -fstack-check)
    
            PR target/67265
            * config/i386/i386.c (ix86_adjust_stack_and_probe): Remove obsolete
            assertion on the CFA register.
    
    From-SVN: r230247

commit 97768443fdc46a802e89ae1c87d8b86832402115
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 12 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230198

commit f031d25aca672690ee9bec0f707f84d2617162f2
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Nov 11 14:56:17 2015 +0000

    re PR target/67265 ([x86] 'asm' operand has impossible constraints with -fstack-check)
    
            PR target/67265
            * ira.c (ira_setup_eliminable_regset): Do not necessarily create the
            frame pointer for stack checking if non-call exceptions aren't used.
            * config/i386/i386.c (ix86_finalize_stack_realign_flags): Likewise.
    
    From-SVN: r230176

commit da0c7f6b54055f1ec29f8055feca9f5040c71000
Author: Rainer Orth <ro@gcc.gnu.org>
Date:   Wed Nov 11 14:16:46 2015 +0000

    libgo: fix Solaris _in6_addr_t fields
    
        Backport from mainline
    
        Solaris 12 adds some more types that use _in6_addr_t, that need to be
        edited in mksysinfo.
    
        Patch by Rainer Orth.
    
        Reviewed-on: https://go-review.googlesource.com/16779
    
    From-SVN: r230165

commit bd83ff1b92926310672dd488d21498f65702242d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 11 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r230140

commit 4b63f4a3dd0a01fa7d25b64f4f25ab3cfa657678
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Nov 10 18:08:50 2015 +0000

    Fix return type of heterogeneous find for sets
    
            PR libstdc++/68190
            * include/bits/stl_multiset.h (multiset::find): Fix return types.
            * include/bits/stl_set.h (set::find): Likewise.
            * testsuite/23_containers/map/operations/2.cc: Test find return types.
            * testsuite/23_containers/multimap/operations/2.cc: Likewise.
            * testsuite/23_containers/multiset/operations/2.cc: Likewise.
            * testsuite/23_containers/set/operations/2.cc: Likewise.
    
    From-SVN: r230118

commit f2093f64dcc2f94fd6d381de6202efb0b78c7064
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Nov 10 10:12:11 2015 +0000

    [AArch64] PR target/68129: Define TARGET_SUPPORTS_WIDE_INT
    
            PR target/68129
            * config/aarch64/aarch64.h (TARGET_SUPPORTS_WIDE_INT): Define to 1.
            * config/aarch64/aarch64.c (aarch64_print_operand, CONST_DOUBLE):
            Delete VOIDmode case.  Assert that mode is not VOIDmode.
            * config/aarch64/predicates.md (const0_operand): Remove const_double
            match.
    
            * gcc.target/aarch64/pr68129_1.c: New test.
    
    From-SVN: r230093

commit 49657fd4e925bbc8c78f24a6e138488509591be5
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Tue Nov 10 10:08:03 2015 +0000

    [Patch GCC 5/Vect] Partial backport of r228751 (pr68238)
    
    gcc/
    
            Partial backport from trunk r228751.
            PR tree-optimization/68238
            2015-10-13  Richard Biener  <rguenther@suse.de>
    
            * tree-vect-loop.c (vect_estimate_min_profitable_iters): Use
            LOOP_VINFO_COMP_ALIAS_DDRS to estimate alias versioning cost.
    
    From-SVN: r230092

commit 43998dd339faaf04090f1ef286bdb000666fbf32
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Nov 10 00:47:28 2015 +0000

    re PR target/57845 (ICE with -freg-struct-return on SPARC)
    
            PR target/57845
            * config/sparc/sparc.c (sparc_function_value_1): In 32-bit mode, do
            not promote the mode for aggregate types.
    
    From-SVN: r230076

commit 826339b038b59849d9804ca43dbddc1b1f9df53d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 10 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r230068

commit 3e658ed21487f8ed2ed2d60ea75717c4ddd74f0c
Author: Mike Stump <mikestump@comcast.net>
Date:   Mon Nov 9 18:27:43 2015 +0000

    re PR debug/66728 (CONST_WIDE_INT causes corrupted DWARF debug info)
    
            PR debug/66728
            * dwarf2out.c (get_full_len): Return a value based upon the actual
            precision needed for the value.
            (add_const_value_attribute): Use a maximal wide-int for
            CONST_WIDE_INTs, not VOIDmode.
            (output_die): Don't ever output NULL with printf.
    
            * rtl.h (get_precision of rtx_mode_t): Ensure we never process
            BLKmode nor VOIDmode values.
    
    From-SVN: r230039

commit b2e8f8db15f20ac4a4eb31019829487d64e062b9
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Nov 9 06:06:52 2015 +0000

    re PR fortran/68053 (lower bound of implied shape array restricted too much)
    
    2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68053
            * decl.c (add_init_expr_to_sym):  Try to reduce initialization expression
            before testing for a constant value.
    
    2015-11-08  Steven g. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68053
            * gfortran.dg/pr68053.f90: New test.
    
    From-SVN: r229993

commit 71a99fbd58a41be9c3b7969648cca29cf330e13c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 9 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229979

commit fc811c57a84ab7ead86d5d4aa2a065aecad3f685
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Nov 8 18:05:30 2015 +0000

    re PR fortran/68224 (ICE on referencing parameter array with dimension null)
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68224
            * array.c (match_array_element_spec): Check of invalid NULL().
            While here, fix nearby comments.
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68224
            * gfortran.dg/pr68224.f90: New test.
    
    From-SVN: r229960

commit 73d8fd0770c8dd52fb0b29f325cf888f486fc954
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Nov 8 17:53:36 2015 +0000

    re PR fortran/68153 (ICE for intrinsic reshape with negative dim in effective shape)
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68153
            * check.c (gfc_check_reshape): Improve check for valid SHAPE argument.
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68153
            * gfortran.dg/pr68153.f90: New test.
    
    From-SVN: r229958

commit 6d890557e9b43182dfa6282106a335f807bb206d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Nov 8 17:43:29 2015 +0000

    re PR fortran/68151 (ICE on using select case with function of wrong type)
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68151
            * match.c (match_case_selector):  Check for invalid type.
    
    2015-11-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68151
            * gfortran.dg/pr68151.f90: New test.
    
    From-SVN: r229957

commit bb8c0727368ecb34817869f5731639d673c17827
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Sun Nov 8 15:06:04 2015 +0000

    backport: atexit.c: New file.
    
    Backport from mainline.
            * config/rs6000/atexit.c: New file.
            * config/rs6000/t-aix-cxa (LIB2ADDEH): Build atexit.c.
            * config/rs6000/libgcc-aix-cxa.ver (atexit): Add symbol to exports.
            * config/rs6000/cxa_finalize.c
            (catomic_compare_and_exchange_bool_acq): Negate return value.
    
    From-SVN: r229949

commit 745166b68251c4b5b5f6780bb5db0fe149e6106d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 8 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229943

commit c6e74afc2a7aad8b34ed28bf4f295ee53cc7b7df
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Nov 7 18:13:17 2015 +0000

    backport: re PR fortran/65089 (FAIL: gfortran.dg/io_real_boz(2|_[45]).f90 when tested with -fsanitize=address)
    
    2015-11-07 Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/65089
            * io/format.h (free_format): New function to free memory
            allocated for building format error messages.
            * io/format.c (format_error): Add checks before freeing memory
            to avoid potential segfaults and free formatting data when
            needed on error conditions. Always allocate and NULL terminate
            the string.
            * io/transfer.c (st_read_done, st_write_done): Use new
            free_format function to clean up memory allocations when done.
    
    From-SVN: r229935

commit 13eca6e571007daceabbee5dad5f8b39287c2402
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sat Nov 7 01:25:43 2015 +0000

    re PR go/66138 (json decoder Decode function fails for some structure return values)
    
            PR go/66138
        reflect, encoding/json, encoding/xml: fix unexported embedded structs
    
        Bring in three changes from the master Go repository.  These changes
        will be in Go 1.6, but they are appropriate for gccgo now because they
        resolve a long-standing discrepancy between how gc and gccgo handle the
        PkgPath field for embedded unexported struct fields.  The core issue is
        described at https://golang.org/cl/7247.  This has been reported against
        gccgo as https://gcc.gnu.org/PR66138.
    
        The three changes being brought over are:
    
        https://golang.org/cl/14010
    
        reflect: adjust access to unexported embedded structs
    
        This CL changes reflect to allow access to exported fields and
        methods in unexported embedded structs for gccgo and after gc
        has been adjusted to disallow access to embedded unexported structs.
    
        Adresses #12367, #7363, #11007, and #7247.
    
        https://golang.org/cl/14011
    
        encoding/json: check for exported fields in embedded structs
    
        Addresses issue #12367.
    
        https://golang.org/cl/14012
    
        encoding/xml: check for exported fields in embedded structs
    
        Addresses issue #12367.
    
        Reviewed-on: https://go-review.googlesource.com/16723
    
    From-SVN: r229908

commit 96a9535b4beda3079009a2eb370c546cc816d6b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 7 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r229905

commit 6102ce5704b47221c20bda7714d6fe4d91369d4d
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Fri Nov 6 17:33:01 2015 +0000

    re PR rtl-optimization/68106 (c-c++-common/torture/builtin-arith-overflow-11.c FAILs with -flra-remat @ aarch64)
    
    2015-11-06  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR rtl-optimization/68106
            * lra-remat.c (input_regno_present_p): Process hard regs
            explicitly present in machine description insns.
            (call_used_input_regno_present_p): Ditto.
            (calculate_gen_cands): Ditto.
            (do_remat): Ditto.
    
    2015-11-06  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR rtl-optimization/68106
            * testsuite/gcc.target/aarch64/pr68106.c: New.
    
    From-SVN: r229868

commit 22cc1cd1655e29a953b21872503a56e3d964cf41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 6 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r229829

commit 090bc0ca27f6c17ddcd338ac81ce275c0c35beb4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 5 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r229789

commit 9dbd01dc548a8c0be0a6a06abcc3022d5d623251
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Nov 4 20:00:19 2015 +0000

    Backport PRs 61819, 61830, 67171, 67933
    
    2015-01-25  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk.
            PR fortran/67171
            * trans-array.c (structure_alloc_comps): On deallocation of
            class components, reset the vptr to the declared type vtable
            and reset the _len field of unlimited polymorphic components.
            *trans-expr.c (gfc_find_and_cut_at_last_class_ref): Bail out on
            allocatable component references to the right of part reference
            with non-zero rank and return NULL.
            (gfc_reset_vptr): Simplify this function by using the function
            gfc_get_vptr_from_expr. Return if the vptr is NULL_TREE.
            (gfc_reset_len): If gfc_find_and_cut_at_last_class_ref returns
            NULL return.
    
    2015-01-25  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk.
            PR fortran/67171
            * gfortran.dg/allocate_with_source_12.f03: New test
    
            Backported from trunk.
            PR fortran/61819
            * gfortran.dg/allocate_with_source_13.f03: New test
    
            Backported from trunk.
            PR fortran/61830
            * gfortran.dg/allocate_with_source_14.f03: New test
    
            Backported from trunk.
            PR fortran/67933
            * gfortran.dg/allocate_with_source_15.f03: New test
    
    From-SVN: r229777

commit 52582b42872ad3ccbef522ea7ef0a5ec8cafe1bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 4 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229730

commit dc85b226946767090568a182a28f61deb4caf45f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 3 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r229688

commit 6ff5b337088b4ed76f1f62d16a636b20fc04290f
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Mon Nov 2 22:49:34 2015 +0100

    freebsd64.h (ASM_SPEC32): Adapt spec to handle PIE executables.
    
    2015-11-02  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/rs6000/freebsd64.h (ASM_SPEC32): Adapt spec to handle PIE
        executables.
    
    From-SVN: r229679

commit a4dadd03cf7e990b91bff7ba0d47483726530fac
Author: Steve Ellcey <sellcey@imgtec.com>
Date:   Mon Nov 2 21:08:02 2015 +0000

    [multiple changes]
    
    2015-11-02  Steve Ellcey  <sellcey@imgtec.com>
    
            2015-10-23  Steve Ellcey  <sellcey@imgtec.com>
                        Andrew Pinski  <apinski@cavium.com>
    
            PR rtl-optimization/67736
            * gcc.dg/torture/pr67736.c: New test.
            * gcc.dg/combine-subregs.c: New test.
    
    From-SVN: r229678

commit c81d42363eb460745f61001d66d96ab1a72e2655
Author: Steve Ellcey <sellcey@imgtec.com>
Date:   Mon Nov 2 21:04:33 2015 +0000

    backport: re PR rtl-optimization/67736 (Wrong optimization with -fexpensive-optimizations on mips64el)
    
    2015-11-02  Steve Ellcey  <sellcey@imgtec.com>
    
            Backport from mainline
            2015-10-23  Steve Ellcey  <sellcey@imgtec.com>
                        Andrew Pinski  <apinski@cavium.com>
    
            PR rtl-optimization/67736
            * combine.c (simplify_comparison): Use gen_lowpart_or_truncate instead
            of gen_lowpart.
    
    From-SVN: r229677

commit de514eda29d43515c2fa862a52b9d6b824491631
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Nov 2 12:26:39 2015 +0000

    Move gcc.target/arm/pr67929_1.c test to execute.exp
    
            PR target/67929
            * gcc.target/arm/pr67929_1.c: Move to...
            * gcc.c-torture/execute/pr67929_1.c: ... Here.
            Remove arm-specific directives.  Add noclone, noinline
            attributes.
    
    From-SVN: r229658

commit f3ccbef73fcf8967aaf0c01db2ad87ec1b0ecfd1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 2 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r229647

commit 562cafdb6b2978798c532e0289ad1313534683fe
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sun Nov 1 20:46:21 2015 +0000

    re PR go/67968 (go1: internal compiler error: in write_specific_type_functions, at go/gofrontend/types.cc:1812)
    
            PR go/67968
        compiler: Traverse types of call expressions.
    
        https://gcc.gnu.org/PR67968 provides a test case that causes a gccgo
        crash on valid code.  The compiler failed to build the hash and equality
        functions required for a type descriptor.  The descriptor is for an
        unnamed type that is being returned by a function imported from a
        different package.  The unnamed type is being implicitly converted to an
        interface type by a return statement.  The fix is to ensure that the
        type of a call expression is always traversed.
    
        Test case sent out for the master testsuite as
        https://golang.org/cl/16532 .
    
    From-SVN: r229643

commit 163233dc74b202fc6a3b90f8891fbc1e732448c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 1 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r229638

commit b05a2df97c86ce007a30eb99cd0a924a974b33ce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 31 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r229614

commit a8a5712476a3a43a55c90e30090d0d0fab0c493e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 30 18:27:14 2015 +0000

    re PR fortran/51993 (Erroneous type component initialization leads to internal compiler error)
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/51993
            * decl.c (gfc_set_constant_character_len): Convert gcc_assert into an
            if-statement causing an early return leads to valid error message.
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/51993
            * gfortran.dg/pr51993.f90: New test.
    
    From-SVN: r229596

commit e9d3cf75013354b588e63edf947857bc8b9be64d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 30 17:00:23 2015 +0000

    re PR fortran/68154 (ICE on initializing character parameter array (explicit, implied))
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68154
            * decl.c (add_init_expr_to_sym): if the char length in the typespec
            is NULL, check for and use a constructor.
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68154
            * gfortran.dg/pr68154.f90
    
    From-SVN: r229592

commit 3c88c843447a91c0ce518e2b768806640f6f1b2c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 30 16:58:20 2015 +0000

    re PR fortran/36192 (ICE with wrong index types and bad parens)
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/36192
            * interface.c (get_expr_storage_size):  Check for INTEGER type before
            calling gmp routines.
    
    2015-10-30  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/36192
            * gfortran.dg/pr36192_1.f90: New test.
    
    From-SVN: r229591

commit e30b27a54c816c00f7f121291c27bbb27d9a535c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 30 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229564

commit 7829b39574f46ebc07edf93ee593808b707f3ee7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 29 20:44:09 2015 +0000

    re PR fortran/68055 (ICE on using unsupported kinds in program without program statement)
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68055
            * decl.c (gfc_match_decl_type_spec): Check for valid kind in old-style
            declarations.
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68055
            * gfortran.dg/pr68055.f90: New case.
    
    From-SVN: r229560

commit 0d9af115d5f9047b30e1e499c7520473891cc84e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 29 20:32:41 2015 +0000

    re PR fortran/68054 (ICE on using protected attribute in program without program statement)
    
    2015-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68054
            * decl.c (match_attr_spec): PROTECTED can only be a module.
    
    2015-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68054
            * gfortran.dg/pr68054.f90: New test.
    
    From-SVN: r229558

commit d43e2f21fe539d06c79f6dffab744cce46271470
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 29 20:07:13 2015 +0000

    re PR fortran/67939 (ICE on using data with negative substring range)
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67939
            * data.c (create_character_initializer): Deal with zero length string.
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67939
            * gfortran.dg/pr67939.f90: New test.
    
    From-SVN: r229555

commit 0c45ff20c7ed17369c5add4f13e48f9d9fa50cc6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 29 19:52:56 2015 +0000

    re PR fortran/67885 (ICE on using parameter array in block)
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67885
            * trans-decl.c (generate_local_decl): Mark PARAMETER entities in
            BLOCK construct.
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67885
            * gfortran.dg/pr67885.f90: New test.
    
    From-SVN: r229554

commit d0cac68e00ec64925bcae98ef4acbb22ff680ac6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 29 19:37:59 2015 +0000

    re PR fortran/67805 (ICE on array constructor with wrong character specification)
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67805
            PR fortran/68108
            * array.c (gfc_match_array_constructor): Check for error from type
            spec matching.
            * decl.c (char_len_param_value): Check for valid of charlen parameter.
            Check for REF_ARRAY.  Reap dead code dating to 2008.
            match.c (gfc_match_type_spec): Special case the keyword use in REAL.
    
    2015-10-29  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67805
            PR fortran/68108
            * gfortran.dg/pr67805.f90: New testcase.
            * gfortran.dg/pr67805_2.f90: New test.
            * gfortran.dg/array_constructor_26.f03: Update testcase.
            * gfortran.dg/array_constructor_27.f03: Ditto.
            * gfortran.dg/char_type_len_2.f90: Ditto.
            * gfortran.dg/pr67802.f90: Ditto.
            * gfortran.dg/used_before_typed_3.f90: Ditto.
    
    From-SVN: r229553

commit ce4bff33bff12c9fd025bfb27a4b12da368996b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 29 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229510

commit c6ae1f3e3592567ff348937c11082da1c5cb7ea2
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Oct 28 13:32:17 2015 +0000

    [AArch64] PR 68102: Check that operand is REG before checking the REGNO in mov-immediate splitters
    
            Backport from mainline
            2015-10-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/68102
            * config/aarch64/aarch64.md (*movsi_aarch64): Check that
            operands[0] is a reg before taking its REGNO in split condition.
            (*movdi_aarch64): Likewise.
    
            * gcc.target/aarch64/pr68102_1.c: New test.
    
    From-SVN: r229483

commit 0b465413003b5e43a1f11241caa7cc1f07138ff5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 28 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r229468

commit 3107dfe54f505462f9fdf37c167965a6a6902e9e
Author: Caroline Tice <cmtice@google.com>
Date:   Tue Oct 27 09:55:03 2015 -0700

    Backport fix for compile time regression.
    
    2015-10-27  Caroline Tice  <cmtice@google.com.
    
            (from Richard Biener)
            * tree.c (int_cst_hasher::hash):  Replace XOR with more efficient
            call to interative_hash_host_wide_int.
    
    From-SVN: r229449

commit a0bcb32b8afed297ce564abee0c5588faae57e2e
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Oct 27 14:03:27 2015 +0000

    [optabs.c] Fix PR 67989: Handle const0_rtx target in expand_atomic_compare_and_swap
    
            Backport from mainline
            2015-10-26  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR middle-end/67989
            * optabs.c (expand_atomic_compare_and_swap): Handle case when
            ptarget_oval or ptarget_bool are const0_rtx.
    
            * g++.dg/pr67989.C: New test.
    
    From-SVN: r229442

commit 56ebdf5d2505d78a06d67e2d96323780bceec582
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Oct 27 13:46:15 2015 +0000

    [ARM] PR target/67929 Tighten vfp3_const_double_for_bits checks
    
            PR target/67929
            * config/arm/arm.c (vfp3_const_double_for_bits): Rewrite.
            * config/arm/constraints.md (Dp): Update callsite.
            * config/arm/predicates.md (const_double_vcvt_power_of_two): Likewise.
    
            * gcc.target/arm/pr67929_1.c: New test.
    
    From-SVN: r229439

commit 917e57e922f7d125b98774eda06887067cd837f4
Author: Martin Jambor <mjambor@suse.cz>
Date:   Tue Oct 27 13:23:24 2015 +0100

    tree-sra.c (replace_removed_params_ssa_names): Change type of parameter stmt to gimple.
    
    2015-10-27  Martin Jambor  <mjambor@suse.cz>
    
            * tree-sra.c (replace_removed_params_ssa_names): Change type of
            parameter stmt to gimple.
    
    From-SVN: r229435

commit af95fd87aed9581423654db598cd72317af84ee9
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Tue Oct 27 00:41:31 2015 +0000

    re PR libffi/65441 (FAIL: libffi.call/float2.c -W -Wall -Wno-psabi (test for excess errors))
    
            PR libffi/65441
            * testsuite/lib/libffi.exp: Load target-supports-dg.exp.
            * testsuite/libffi.call/float2.c: Don't run on hppa*-*-hpux*.
    
    From-SVN: r229401

commit 7d745cc532108ec9a6dc070e7699850f2685f30b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 27 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229398

commit c9ff37a1a22bdae6b6968066585aa17d5c8562e8
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Oct 26 17:25:03 2015 +0000

    re PR fortran/67177 (MOVE_ALLOC not automatically allocating deferred character arrays in derived types)
    
    2015-10-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/67177
            PR fortran/67977
            * primary.c (match_substring): Add an argument 'deferred' to
            flag that a substring reference with null start and end should
            not be optimized away for deferred length strings.
            (match_string_constant, gfc_match_rvalue): Set the argument.
            * trans-expr.c (alloc_scalar_allocatable_for_assignment): If
            there is a substring reference return.
            * trans-intrinsic.c (conv_intrinsic_move_alloc): For deferred
            characters, assign the 'from' string length to the 'to' string
            length. If the 'from' expression is deferred, set its string
            length to zero. If the 'to' expression has allocatable
            components, deallocate them.
    
    2015-10-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/67177
            * gfortran.dg/move_alloc_15.f90: New test
            * gfortran.dg/move_alloc_16.f90: New test
    
            PR fortran/67977
            * gfortran.dg/deferred_character_assignment_1.f90: New test
    
    From-SVN: r229386

commit 54b29abae495cff52c58a09128a5409850730247
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon Oct 26 15:36:43 2015 +0100

    Also remap SSA_NAMEs of PARM_DECLs in IPA-SRA
    
    2015-10-26  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/67794
            * tree-sra.c (replace_removed_params_ssa_names): Do not distinguish
            between types of statements but accept original definitions as a
            parameter.
            (ipa_sra_modify_function_body): Use FOR_EACH_SSA_DEF_OPERAND to
            iterate over definitions.
    
    testsuite/
            * gcc.dg/ipa/ipa-sra-10.c: New test.
            * gcc.dg/torture/pr67794.c: Likewise.
    
    From-SVN: r229367

commit b86dd8b81a583abcdeda1850fdc26600a83a53f9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 26 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r229305

commit 3176c0b00ed2cc0402feba08c09a86fa57bb3041
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Oct 25 15:42:19 2015 +0000

    re PR middle-end/68079 (hppa: pointers to method types need canonicalization before comparison)
    
            PR middle-end/68079
            * dojump.c (do_compare_and_jump): Canonicalize both function and
            method types.
    
    From-SVN: r229300

commit 22194613267080738c954e673dec9b82ad1891aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 25 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r229292

commit b235215c70bff2ec292cd86ec6a41fb93f9a97f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 24 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229281

commit 89e7d0afd357583abb72a4e8a6bd5ad0ac9fe22d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 23 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r229207

commit b0fa11653ab439857c9f82a52c74b9edc035f6d1
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Oct 22 18:05:21 2015 +0000

    re PR fortran/58754 (ICE on allocating character array with source)
    
    2015-10-22  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/58754
            * trans-stmt.c (gfc_trans_allocate): Do not use the scalar
            character assignment if the allocate expression is an array
            descriptor.
    
    2015-10-22  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/58754
            * gfortran.dg/pr58754.f90: New test
    
    From-SVN: r229179

commit eef62142e114b39800256b5c9e6ba0b63b9a402b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Oct 22 08:28:57 2015 +0000

    S/390: PR68015 Fix ICE in s390_emit_compare
    
    gcc/ChangeLog:
    
    2015-10-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-10-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/68015
            * config/s390/s390.md (mov<mode>cc): Emit compare only if we don't
            already have a comparison result.
    
    gcc/testsuite/ChangeLog:
    
    2015-10-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-10-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/68015
            * gcc.target/s390/pr68015.c: New test.
    
    From-SVN: r229165

commit fb254810a90d7c24d36a77d1058d538c7e363a66
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Oct 22 08:52:00 2015 +0200

    backport: re PR target/68018 (ICE: in ix86_compute_frame_layout, at config/i386/i386.c:11308 with -mstackrealign)
    
            Backport from mainline
            2015-10-21  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68018
            * config/i386/i386.c (ix86_compute_frame_layout): Realign the stack
            for 64-bit MS_ABI targets also when default incoming stack boundary
            is overriden.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2015-10-21  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68018
            * gcc.target/i386/pr68018.c: New test.
            Backport from mainline
            2015-10-21  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68018
            * config/i386/i386.c (ix86_compute_frame_layout): Realign the stack
            for 64-bit MS_ABI targets also when default incoming stack boundary
            is overriden.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2015-10-21  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68018
            * gcc.target/i386/pr68018.c: New test.
    
    From-SVN: r229162

commit ca4ff76571f0f551e978084009564f2065f945be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 22 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r229158

commit a64b6ff9203fe03e8146b03ad714f2f90f06c83a
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Oct 21 05:27:18 2015 -0400

    re PR c++/66583 (incorrect implicitly-defined move constructor for class with anonymous union and NSDMI)
    
            PR c++/66583
    
            * init.c (innermost_aggr_scope): New.
            (sort_mem_initializers): Use it.
    
    From-SVN: r229122

commit ea31fce5eed27ed895d42d46cd9be350fd96471c
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Oct 21 05:27:12 2015 -0400

    re PR c++/67557 (Calling copy constructor of base class in constructor of derived class produces crashing code)
    
            PR c++/67557
    
            * call.c (is_base_field_ref): New.
            (unsafe_copy_elision_p): New.
            (build_over_call): Use it.
    
    From-SVN: r229121

commit 9512f466e8c03914617e203882b395bf20e356c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 21 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r229105

commit 052621c2e3c7c128825b7d738f6b13bd2b44515f
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Oct 20 09:50:58 2015 +0000

    Fix default_binds_local_p_2 for extern protected data
    
            Backport from mainline r229024
            2015-10-20  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
    gcc:
            PR target/66912
            * varasm.c (default_binds_local_p_2): Turn on extern_protected_data.
    
    gcc/testsuite:
    
            PR target/66912
            * gcc.target/aarch64/pr66912.c: New.
            * gcc.target/arm/pr66912.c: New.
    
    From-SVN: r229030

commit 6821b00be9a310057fa25549e1973389e8006c8b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Oct 20 00:45:48 2015 +0000

    re PR fortran/67900 (Interface bug: Binding parameters to C causes a compiler segmentation fault.)
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67900
            * resolve.c (gfc_verify_binding_labels): Check for NULL pointer.
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67900
            * gfortran.dg/pr67900.f90: New tests.
    
    From-SVN: r229014

commit 92a30d519faa160bf3545e285605ca7bc734bef1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 20 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r229011

commit dd3c107a35c611880b5d2a6c9306e9decf6e2019
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 19 21:29:15 2015 +0000

    re PR fortran/68019 (ICE on rank mismatch of implied-shape array of user-defined type)
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68019
            * decl.c (add_init_expr_to_sym): Remove an assert() to allow an error
            message to be issued.
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/68019
            * gfortran.dg/pr68019.f90: new test.
    
    From-SVN: r229005

commit d68244487a4a370c727befee4dc8488e4794a2db
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Oct 19 19:44:58 2015 +0000

    Fix partial specialization syntax of wide int traits
    
            Backport from mainline
            2015-07-20  Mikhail Maltsev  <maltsevm@gmail.com>
    
            * wide-int.h (struct binary_traits): Fix partial specialization syntax.
            (struct int_traits): Likewise.
    
    From-SVN: r229001

commit bb90d90fa83b99634d7790beddf5043b5d7a776b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 19 18:15:36 2015 +0000

    re PR fortran/67987 (ICE on declaring and initializing character with negative len)
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67987
            * decl.c (char_len_param_value): Unwrap unlong line.  If LEN < 0,
            force it to zero per the Fortran 90, 95, 2003, and 2008 Standards.
            * resolve.c (gfc_resolve_substring_charlen): Unwrap unlong line.
            If 'start' is larger than 'end', length of substring is negative,
            so explicitly set it to zero.
            (resolve_charlen): Remove -Wsurprising warning.  Update comment to
            reflect that the text is from the F2008 standard.
    
    2015-10-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67987
            * gfortran.df/pr67987.f90: New test.
            * gfortran.dg/char_length_2.f90: Update testcase.
    
    From-SVN: r228999

commit e088d146d84a857b415c3564aae2ee1b48607e47
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 19 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228958

commit 926614c44b568f41e05d661848a661a62dd8a2f7
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Oct 18 18:36:52 2015 +0000

    re PR fortran/66079 (memory leak with source allocation in internal subprogram)
    
    2015-10-18  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/66079
            * trans-expr.c (gfc_conv_procedure_call): Allocatable scalar
            function results must be freed and nullified after use. Create
            a temporary to hold the result to prevent duplicate calls.
            * trans-stmt.c (gfc_trans_allocate): Rename temporary variable
            as 'source'. Deallocate allocatable components of non-variable
            'source's.
    
    2015-10-18  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/66079
            * gfortran.dg/allocatable_scalar_13.f90: New test
    
    From-SVN: r228952

commit 0243dce0a8af8054d5cd68fe6236c21070b17cc2
Author: Venkataramanan Kumar <venkataramanan.kumar@amd.com>
Date:   Sun Oct 18 18:35:25 2015 +0000

    Add bdver4 for multiversioning and fix AMD model detection.
    
    2015-10-19  Venkataramanan Kumar  <Venkataramanan.kumar@amd.com>
    
            Backport from mainline
            2015-10-09  Venkataramanan kumar  <venkataramanan.kumar@amd.com>
    
            * config/i386/cpuinfo.c (get_amd_cpu): Detect bdver4.
            (__cpu_indicator_init): Fix model selection for AMD CPUs
    
    From-SVN: r228951

commit 467ba4c6314044ed63830bc460b809405011f142
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Sun Oct 18 15:01:03 2015 +0000

    Backport PRs 59678, 65841, 67721, 67818
    
            PR fortran/67721
            PR fortran/67818
            Backport from mainline r222477:
    
            2015-04-27  Andre Vehreschild  <vehre@gmx.de>
    
            PR fortran/59678
            PR fortran/65841
    gcc/fortran/
            * trans-array.c (duplicate_allocatable): Fixed deep copy of
            allocatable components, which are liable for copy only, when
            they are allocated.
            (gfc_duplicate_allocatable): Add deep-copy code into if
            component allocated block. Needed interface change for that.
            (gfc_copy_allocatable_data): Supplying NULL_TREE for code to
            add into if-block for checking whether a component was
            allocated.
            (gfc_duplicate_allocatable_nocopy): Likewise.
            (structure_alloc_comps): Likewise.
            * trans-array.h: Likewise.
            * trans-expr.c (gfc_trans_alloc_subarray_assign): Likewise.
            * trans-openmp.c (gfc_walk_alloc_comps): Likewise.
    gcc/testsuite/
            * gfortran.dg/alloc_comp_deep_copy_1.f03: New test.
            * gfortran.dg/alloc_comp_deep_copy_2.f03: New test.
    
    From-SVN: r228945

commit 6dbf8d86028b4d9bd43d36e23301a0fb9f14c840
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 18 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228935

commit 804fb3b9ede7836011a7ad7e438d1c87d13a42dd
Author: Mike Stump <mrs@gcc.gnu.org>
Date:   Sat Oct 17 03:55:03 2015 +0000

    [multiple changes]
    
    2015-10-16  Richard Sandiford  <richard.sandiford@arm.com>
    
            PR middle-end/66311
            * wide-int.cc (wi::from_mpz): Make sure that absolute mpz value
            is zero- rather than sign-extended.
    
    testsuite:
    2015-10-16  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
    
            PR middle-end/66311
            * gfortran.dg/pr66311.f90: New file.
    
    From-SVN: r228932

commit 75ee4c60094a64c7e25828ae90d659fa65364946
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 17 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228928

commit 0c7715102c136e7155f182406de317fb3ee06c4d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 16 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228857

commit 2f8a9b9f321d7ce393d57f84e4af765096a149cd
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Oct 15 11:38:47 2015 -0500

    backport: re PR target/67281 (HTM builtins aren't treated as compiler barriers on powerpc)
    
            Backport from mainline
            2015-10-14  Peter Bergner  <bergner@vnet.ibm.com>
                        Torvald Riegel  <triegel@redhat.com>
    
            PR target/67281
            * config/rs6000/htm.md (UNSPEC_HTM_FENCE): New.
            (tabort, tabort<wd>c, tabort<wd>ci, tbegin, tcheck, tend,
            trechkpt, treclaim, tsr, ttest): Rename define_insns from this...
            (*tabort, *tabort<wd>c, *tabort<wd>ci, *tbegin, *tcheck, *tend,
            *trechkpt, *treclaim, *tsr, *ttest): ...to this.  Add memory barrier.
            (tabort, tabort<wd>c, tabort<wd>ci, tbegin, tcheck, tend,
            trechkpt, treclaim, tsr, ttest): New define_expands.
            * config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Define
            __TM_FENCE__ for htm.
            * doc/extend.texi: Update documentation for htm builtins.
    
    From-SVN: r228846

commit aa5eed9b99d6d3d1e587bd73581926e982e8c131
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 15 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228833

commit 71f50251bc41290236a88cb40860b0352a5bc4f3
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Oct 15 00:30:04 2015 +0200

    re PR target/67967 (ICE in i386_pe_seh_unwind_emit)
    
            PR target/67967
            * config/i386/i386.c (ix86_emit_save_reg_using_mov): Do not add
            REG_CFA_EXPRESSION to aligned SSE stores.
    
    From-SVN: r228830

commit 6421fec4d83d2298cc54fc1903c17f2ebd7f2fea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 14 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228792

commit 6cc8d19409da0ffacf1d5468358da97543a3318b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 13 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r228742

commit d349f04c8c0765a2d2036af18f8a89fd5ad82c63
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Oct 12 17:36:21 2015 +0000

    Correct x86 backend stack alignment adjustment
    
    Add missing -1 in x86 backend stack alignment adjustment.  Trunk is OK
    with ROUND_UP macro.
    
            PR target/67940
            * config/i386/i386.c (ix86_compute_frame_layout): Correct
            stack alignment adjustment.
            (ix86_expand_prologue): Likewise.
    
    From-SVN: r228732

commit d9c14a07734e56a3995b94cbd66d41bd7dd94692
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Oct 12 18:29:37 2015 +0200

    backport: re PR target/66697 (Feature request: -mstackrealign and force_align_arg_pointer for x86_64)
    
            Backport from mainline
            2015-10-08  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_compute_frame_layout): Round up the
            SSE register save area to 16 bytes only if the incoming stack
            boundary is no less than 16 bytes.
    
            Backport from mainline
            2015-10-07  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66697
            * config/i386/i386.c (ix86_option_override_internal): Always use
            8-byte minimum stack boundary in 64-bit mode.
            (ix86_compute_frame_layout): Remove assert on INCOMING_STACK_BOUNDARY.
            (ix86_emit_save_reg_using_mov): Support unaligned SSE store.
            Add a REG_CFA_EXPRESSION note if needed.
            (ix86_emit_restore_sse_regs_using_mov): Support unaligned SSE load.
            (ix86_handle_force_align_arg_pointer_attribute): New.
            (ix86_minimum_incoming_stack_boundary): Remove TARGET_64BIT check.
            (ix86_attribute_table): Set ix86_force_align_arg_pointer_string
            with ix86_handle_force_align_arg_pointer_attribute.
            * config/i386/i386.h (MIN_STACK_BOUNDARY): Set to BITS_PER_WORD.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2015-10-07  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66697
            * gcc.target/i386/20060512-1.c: Remove ia32 requirement.
            (PUSH, POP): New defines.
            (sse2_test): Use PUSH and POP to misalign runtime stack.
            * gcc.target/i386/20060512-2.c: Remove ia32 requirement.
    
    From-SVN: r228728

commit 31dd539167966dd0886b51d9a5cc162808dae345
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon Oct 12 13:15:30 2015 +0000

    backport: re PR c++/51048 (Class template inheritance doesn't work well with function-local types)
    
    /cp
    2015-10-12  Paolo Carlini  <paolo.carlini@oracle.com>
    
            Backport from mainline
            2015-06-15  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/51048
            * decl2.c (no_linkage_error): Do not issue a permerror if the DECL
            using a local type is pure virtual.
    
    /testsuite
    2015-10-12  Paolo Carlini  <paolo.carlini@oracle.com>
    
            Backport from mainline
            2015-06-15  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/51048
            * g++.dg/cpp0x/local-type1.C: New.
    
    From-SVN: r228714

commit 95a50ddbb074efb0a5bc5ad9cd2af3f549dcc15a
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Oct 12 12:26:09 2015 +0000

    Merge ix86_maybe_switch_abi with ix86_set_current_function
    
    ix86_maybe_switch_abi is called to late during RTL expansion and we
    use the stale information from compilation of the previous function.
    aggregate_value_p uses call_used_regs.  aggregate_value_p is used by
    IPA and return value optimization, which are called before
    ix86_maybe_switch_abi is called.  This patch merges ix86_maybe_switch_abi
    with ix86_set_current_function.
    
    Backport from mainline:
    
            PR target/67850
            * config/i386/i386.c (ix86_maybe_switch_abi): Merged with ...
            (ix86_set_current_function): This.
            (TARGET_EXPAND_TO_RTL_HOOK): Removed.
    
    From-SVN: r228711

commit 9308fbb603f03302dcf1b7f979cb0c2f9e329cbf
Author: Alexander Fomin <alexander.fomin@intel.com>
Date:   Mon Oct 12 11:03:56 2015 +0000

    re PR target/67849 (AVX512 Hitting upper-bank register on extract insn split)
    
            PR target/67849
    gcc/
            * config/i386/sse.md (define_split vec_select/V8FI): Restrict
            split for upper-bank registers when target does not support
            AVX512VL.
            (define_insn "vec_extract_lo_<mode><mask_name>"): Restrict
            split when target does not support AVX512VL.
    gcc/testsuite/
            * gcc.target/i386/pr67480.c: New test.
    
    
    Co-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>
    
    From-SVN: r228709

commit e63ee330f024e1e8c97cb8239e1d55cf132a3903
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Oct 12 10:59:21 2015 +0000

    backport: configure.ac: Add check for new options in isl-0.15.
    
    2015-10-12  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-07-21  Mike Frysinger  <vapier@gentoo.org>
                        Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>
    
            * configure.ac: Add check for new options in isl-0.15.
            * config.in, configure: Rebuilt.
            * graphite-blocking.c: Include <isl/constraint.h>
            * graphite-interchange.c,  graphite-poly.c: Likewise.
            * graphhite-scop-detection.c, graphite-sese-to-poly.c: Likewise.
            * graphite.c: Likewise.
            * graphite-isl-ast-to-gimple.c: Include <isl/constraint.h> and
            <isl/union_set.h>.
            * graphite-dependences.c: Include <isl/constraint.h>.
            (max_number_of_out_dimensions): Returns isl_stat.
            (extend_schedule_1): Likewise
            (extend_schedule): Corresponding changes.
            * graphite-optimize-isl.c: Include <isl/constraint.h> and
            <isl/union_set.h>.
            (getSingleMap): Change return type of isl_stat.
            (optimize_isl): Conditionally use
            isl_options_set_schedule_serialize_sccs.
            * graphite-poly.h (isl_stat, isl_stat_ok): Define fallbacks
            if not HAVE_ISL_OPTIONS_SET_SCHEDULE_SERIALIZE_SCCS.
    
    From-SVN: r228708

commit a748c7b43507b37b81921ab447f5ced7a7b18336
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 12 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r228698

commit 59399fe9d0c8fc03b5de4aa6fd75f95cd1bd723d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 11 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228683

commit b905cd7b88f61864bf71d2d0f88404f8d07890cc
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   Sat Oct 10 12:05:56 2015 +0000

    Reset inlined debug variables at the end of the inlined function
    
    for  gcc/ChangeLog
    
            PR debug/58315
            * tree-inline.c (reset_debug_binding): New.
            (reset_debug_bindings): Likewise.
            (expand_call_inline): Call it.
    
    From-SVN: r228674

commit c25623031b3c203c4d34cf47dbb44011b8166c64
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 10 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228671

commit f7af77b6322c68b88d2ea5474a4e02555f652675
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Oct 9 08:14:21 2015 +0000

    Make-lang.in: Make sure that GNAT1_OBJS and not just GNAT1_ADA_OBJS are compiled only after...
    
            * gcc-interface/Make-lang.in: Make sure that GNAT1_OBJS and not just
            GNAT1_ADA_OBJS are compiled only after generated files are created.
    
    From-SVN: r228637

commit f1872b96e9fafdbdb0b5add486c1e28b36d3158f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 9 00:16:15 2015 +0000

    Daily bump.
    
    From-SVN: r228630

commit 02adf63fd98eba796072b62d00ddee5663099024
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 8 17:54:23 2015 +0100

    Backport PR libstdc++/65913 fix from mainline.
    
    Handle alignment in __atomic_is_lock_free
    
    gcc:
    
    2015-09-17  Richard Henderson  <rth@redhat.com>
    
            PR libstdc++/65913
            * builtins.c (fold_builtin_atomic_always_lock_free): Handle fake
            pointers that encode the alignment of the object.
    
    libstdc++-v3:
    
    2015-09-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/65913
            * include/bits/atomic_base.h (__atomic_base<_TTp>::is_lock_free(),
            __atomic_base<_PTp*>::is_lock_free()): Call the built-in with the
            immediate pointer value, not a variable.
            * include/std/atomic (atomic<T>::is_lock_free()): Likewise.
            * testsuite/29_atomics/atomic/65913.cc: New.
    
    From-SVN: r228615

commit 5d4770d0f30a573eca44a3b3b6ff1b3915f2e965
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Oct 8 16:55:43 2015 +0100

    * zh_TW.po: Update.
    
    From-SVN: r228604

commit 3c8909fab87d8275ff05ddf8c2e84f84c899f85d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 8 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r228589

commit 789a05c3bea67c97fe02ae1ac635ef3438c8965a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 7 22:00:50 2015 +0100

    Backport Filesystem TS fixes from mainline.
    
            PR libstdc++/67173
            PR libstdc++/67747
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Check _XOPEN_VERSION
            and PATH_MAX for _GLIBCXX_USE_REALPATH.  Remove _GLIBCXX_ prefix
            from HAVE_STRUCT_DIRENT_D_TYPE.
            * config.h.in: Regenerate.
            * configure: Regenerate.
            * include/bits/locale_conv.h [!_GLIBCXX_USE_WCHAR_T]
            (__do_str_codecvt, __str_codecvt_in, __str_codecvt_out): Enable.
            * include/experimental/fs_dir.h (operator==, operator==):
            Use owner_before instead of pointer equality.
            (directory_iterator(std::shared_ptr<_Dir>, error_code*)): Remove.
            * include/experimental/fs_path.h (operator==, operator==):
            * include/experimental/fs_path.h [!_GLIBCXX_USE_WCHAR_T]
            (path::wstring, path::generic_wstring): Disable.
            * src/filesystem/path.cc (path::_S_convert_loc)
            [!_GLIBCXX_USE_WCHAR_T]: Skip conversion.
            * src/filesystem/Makefile.am: Add cxx11_abi_sources.
            * src/filesystem/Makefile.in: Regenerate.
            * src/filesystem/cow-dir.cc: New.
            * src/filesystem/cow-ops.cc: New.
            * src/filesystem/cow-path.cc: New.
            * src/filesystem/dir.cc: Define macro for new ABI.
            (native_readdir): Remove.
            (_Dir::advance): Use readdir instead of native_readdir.
            (recursive_directory_iterator(const path&, directory_options,
            error_code*)): Use swap instead of reset.
            (ErrorCode): Remove.
            (_Dir::advance): Change ErrorCode parameter to error_code*, add
            directory_options parameter and check it on error.
            (opendir): Rename to open_dir to avoid clashing with macro. Change
            ErrorCode parameter to error_code*.
            (make_shared_dir): Remove.
            (native_readdir) [_GLIBCXX_FILESYSTEM_IS_WINDOWS]: Don't set errno.
            (directory_iterator(std::shared_ptr<_Dir>, error_code*)): Remove.
            (directory_iterator(const path&, directory_options, error_code*)):
            Pass options to _Dir::advance and create non-end iterator on error.
            (recursive_directory_iterator(const path&, directory_options,
            error_code*)): Clear error_code on ignored error, create non-end
            iterator otherwise.
            (recursive_directory_iterator::increment): Pass _M_options to
            _Dir::advance.
            (recursive_directory_iterator::pop): Likewise.
            * src/filesystem/ops.cc: Define macro for new ABI.
            (canonical) [!_GLIBCXX_USE_REALPATH]: Add alternative implementation.
            (is_dot, is_dotdot): Define new helpers.
            (create_directories): Fix error handling.
            * src/filesystem/path.cc: Define macro for new ABI.
            (path::_S_convert_loc) [!_GLIBCXX_USE_WCHAR_T]: Skip conversion.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            New.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: New.
            * testsuite/experimental/filesystem/operations/canonical.cc: New.
            * testsuite/experimental/filesystem/operations/create_directories.cc:
            New.
            * testsuite/experimental/filesystem/operations/exists.cc: Add more
            tests.
            * testsuite/experimental/filesystem/operations/absolute.cc: Add test
            variables.
            * testsuite/experimental/filesystem/operations/copy.cc: Likewise.
            * testsuite/experimental/filesystem/operations/current_path.cc:
            Likewise.
            * testsuite/experimental/filesystem/operations/file_size.cc: Likewise.
            * testsuite/experimental/filesystem/operations/status.cc: Likewise.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            Likewise.
            * testsuite/experimental/filesystem/path/assign/assign.cc: Check for
            wchar_t support.
            * testsuite/experimental/filesystem/path/concat/strings.cc: Likewise.
            * testsuite/experimental/filesystem/path/construct/range.cc: Likewise.
    
    From-SVN: r228584

commit fedf91b7611dc12f8740baece7c482b4b44060d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 7 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228554

commit 601690f12a0f783bae0922dbc22bd8983c0d7de2
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Oct 6 10:19:54 2015 +0000

    backport: [multiple changes]
    
    2015-10-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-09-15  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/67563
            * gimple-fold.c (gimplify_and_update_call_from_tree): Do not
            transfer EH info from old to new stmt.
            (replace_call_with_value): Likewise.
            (replace_call_with_call_and_fold): Likewise.
            (gimple_fold_builtin_memory_op): Likewise.
            (gimple_fold_builtin_memset): Likewise.
            (gimple_fold_builtin_stpcpy): Likewise.
            (gimple_fold_call): Likewise.
    
            * gcc.dg/pr67563.c: New testcase.
    
            2015-09-24  Richard Biener  <rguenther@suse.de>
    
            PR lto/67699
            * lto-cgraph.c (compute_ltrans_boundary): Do not stream
            abstract origins.
    
            * g++.dg/pr67699.C: New testcase.
    
    From-SVN: r228517

commit 5786f26b1d7b34a9e1028e6501706bef9725152a
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Tue Oct 6 05:36:11 2015 +0000

    AVX-512. Update extract_even_odd w/ AVX-512BW insns.
    
    gcc/
            * config/i386/i386.c (expand_vec_perm_even_odd_trunc): New.
            (expand_vec_perm_even_odd_1): Handle V64QImode.
            (ix86_expand_vec_perm_const_1): Try expansion with
            expand_vec_perm_even_odd_trunc as well.
            * config/i386/sse.md (VI124_AVX512F): Rename to ...
            (define_mode_iterator VI124_AVX2_24_AVX512F_1_AVX512BW): This. Extend
            to V54QI.
            (define_mode_iterator VI248_AVX2_8_AVX512F): Rename to ...
            (define_mode_iterator VI248_AVX2_8_AVX512F_24_AVX512BW): This. Extend
            to V32HI and V16SI.
            (define_insn "avx512bw_<code>v32hiv32qi2"): Unhide pattern name.
            (define_expand "vec_pack_trunc_<mode>"): Update iterator name.
            (define_expand "vec_unpacks_lo_<mode>"): Ditto.
            (define_expand "vec_unpacks_hi_<mode>"): Ditto.
            (define_expand "vec_unpacku_lo_<mode>"): Ditto.
            (define_expand "vec_unpacku_hi_<mode>"): Ditto.
    
    gcc/testsuite/
            * gcc.target/i386/vect-pack-trunc-1.c: New test.
            * gcc.target/i386/vect-pack-trunc-2.c: Ditto.
            * gcc.target/i386/vect-perm-even-1.c: Ditto.
            * gcc.target/i386/vect-perm-odd-1.c: Ditto.
            * gcc.target/i386/vect-unpack-1.c: Ditto.
            * gcc.target/i386/vect-unpack-2.c: Ditto.
    
    From-SVN: r228512

commit f1ff459e0a1dc35ad9ee504b80344c0b249aa7cc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 6 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228509

commit 50105b8bb81211097f2455a700e066678c512187
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Oct 5 18:39:16 2015 +0000

    re PR middle-end/67821 (ICE in duplicate_ssa_name_range_info)
    
            PR tree-optimization/67821
            * tree-ssanames.c (duplicate_ssa_name_range_info): Remove an assert.
    
            * gcc.dg/torture/pr67821-2.c: New test.
            * gcc.dg/torture/pr67821.c: New test.
    
    From-SVN: r228499

commit d483e05c7a0d1b8e53d9f75aaeec286e615926eb
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Oct 5 12:35:20 2015 +0000

    re PR c/67730 (No warning when returning NULL in void function)
    
            PR c/67730
            * c-typeck.c (convert_for_assignment): Use the expansion point
            location throughout.
    
            * gcc.dg/pr67730-1.c: New test.
            * gcc.dg/pr67730-2.c: New test.
            * gcc.dg/pr67730.h: New test.
    
    From-SVN: r228480

commit 735f90cee7adccc7701206e4e4cc573b346755dd
Author: Marek Polacek <mpolacek@gcc.gnu.org>
Date:   Mon Oct 5 10:21:45 2015 +0000

    backport: libgo/runtime: return 0, not NULL, from main
    
    Backport from mainline:
    
            libgo/runtime: return 0, not NULL, from main
    
            Reviewed-on: https://go-review.googlesource.com/13421
    
    From-SVN: r228469

commit c4c06ac84fdc1006632973da03817b0483468096
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 5 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r228464

commit 89836a8e1e5966902ebfc2e5a7b138b897ec0190
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 4 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228453

commit f41b6cfce864ec1488acee5a2914baf83677f5e3
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Oct 3 15:20:58 2015 +0000

    backport: re PR target/67716 ([5] [SH]: Miscompiles libraw: Assembler: unaligned opcodes detected in executable segment)
    
    gcc/
            Backport from mainline
            2015-09-29  Kaz Kojima  <kkojima@gcc.gnu.org>
    
            PR target/67716
            * config/sh/sh.c (sh_override_options_after_change): New.
            (TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): Define.
            (sh_option_override): Move align_loops, align_jumps and
            align_functions handling into sh_override_options_after_change.
    
    From-SVN: r228449

commit 5b89e1f181c947359aba8fea493cc28cc5cc27b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 3 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r228441

commit 35fe4add8b7e956d9da6e63dd40b9ab366c6d7db
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 2 21:28:26 2015 +0000

    Correct the dates on the last 3 changes.
    
    From-SVN: r228431

commit 73d917f39eea20cd067d47d76c33d333266af6ad
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 2 21:27:02 2015 +0000

    re PR fortran/67802 (ICE on initializing character with wrong len type)
    
    2015-10-02  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67802
            * decl.c (add_init_expr_to_sym): Numeric constant for character
            length must be an INTEGER.
    
    2015-10-02  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67802
            * gfortran.dg/pr67802.f90: New test.
    
    From-SVN: r228430

commit 5c4eef51eb8b8edd38c99e76af15c04988905a83
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 2 21:11:47 2015 +0000

    re PR fortran/67616 (ICE on data initialization of type variable in block)
    
    2015-10-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67616
            * primary.c (gfc_match_structure_constructor): Use a possibly
            host-associated symtree to prevent ICE.
    
    2015-10-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67616
            * gfortran.dg/pr67616.f90: New test.
    
    From-SVN: r228427

commit c7221ead741c1fc36b849a31485e0ebceecefe1e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 2 20:19:32 2015 +0000

    re PR fortran/66979 (gfortran internal compiler error with malformed FLUSH statement)
    
    2015-10-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66979
            * io.c (gfc_resolve_filepos): Check for a UNIT number.  Add a nearby
            missing 'return false'.
    
    2015-10-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66979
            gfortran.dg/pr66979.f90: new test.
    
    From-SVN: r228423

commit 924feef17a21cee692f7483135cd5bf594f61024
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 2 21:08:17 2015 +0100

    Backport PR libstdc++/65049 fix from mainline
    
            PR libstdc++/65049
            * include/bits/char_traits.h (char_traits<char>::compare,
            char_traits<char>::find, char_traits<char>::move,
            char_traits<char>::copy, char_traits<char>::assign): Check for zero
            length.
            (char_traits<wchar_t>::compare, char_traits<wchar_t>::find,
            char_traits<wchar_t>::move, char_traits<wchar_t>::copy,
            char_traits<wchar_t>::assign): Likewise.
            (char_traits<char16_t>::move, char_traits<char16_t>::copy): Likewise.
            (char_traits<char32_t>::move, char_traits<char32_t>::copy): Likewise.
            * include/ext/pod_char_traits.h (char_traits<character<>>::move,
            char_traits<character<>>::copy): Likewise.
            * testsuite/21_strings/char_traits/requirements/char/65049.cc: New.
            * testsuite/21_strings/char_traits/requirements/char16_t/65049.cc:
            New.
            * testsuite/21_strings/char_traits/requirements/char32_t/65049.cc:
            New.
            * testsuite/21_strings/char_traits/requirements/wchar_t/65049.cc:
            New.
    
    From-SVN: r228421

commit 7131ee95d9b6a024328d9f51e995c761ae9254f3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 2 21:08:11 2015 +0100

    Backport PR libstdc++/67707 fix from mainline
    
            PR libstdc++/67707
            * include/bits/stl_deque.h (_Deque_base::_M_move_impl): Initialize
            empty object.
            * testsuite/23_containers/deque/allocator/move.cc: Check moved-from
            deque.
            * testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
            Adjust dg-error line number.
            * testsuite/23_containers/deque/requirements/dr438/
            constructor_1_neg.cc: Likewise.
            * testsuite/23_containers/deque/requirements/dr438/
            constructor_2_neg.cc: Likewise.
            * testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
            Likewise.
    
    From-SVN: r228420

commit eae58c27855dab7d5646c2a4e80290dfaaa409c2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 2 21:08:04 2015 +0100

    Backport PR libstdc++/65142 fix from mainline
    
            PR libstdc++/65142
            * src/c++11/random.cc (random_device::_M_getval()): Check read result
            and retry after short reads.
    
    From-SVN: r228419

commit 27b2b7f7828f73ff024f0f758cb4e0370e58854c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Oct 2 16:19:52 2015 +0100

    Do not describe -std=c11 etc. as experimental in c.opt help text.
    
    I noticed that c.opt still described -std=c11 and related options as
    experimental in the --help text.  This patch fixes this.
    
    Bootstrapped with no regressions on x86_64-pc-linux-gnu.
    
            * c.opt (std=c11): Do not describe as experimental.
            (std=gnu11): Likewise.
            (std=iso9899:2011): Likewise.
    
    From-SVN: r228398

commit e02e473b4fb9b871b09e7183fd53384ee0f25780
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Oct 2 08:09:09 2015 +0000

    S/390: Add missing brackets.
    
    gcc/
            Backport from mainline
            2015-09-15  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_const_operand_ok): Add missing
            brackets.
    
    From-SVN: r228372

commit db6f83a008206c16b0ba2e96dde71fb862b9de24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 2 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r228361

commit 681e4fd972c8b37ca554f0da909202ce612e349e
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Oct 1 19:09:01 2015 +0000

    re PR tree-optimization/67769 (VRP pass does wrong optimization)
    
            PR tree-optimization/67769
            * tree-ssa-phiopt.c (conditional_replacement): Call
            reset_flow_sensitive_info_in_bb.
            (minmax_replacement): Likewise.
            (abs_replacement): Likewise.
    
            * gcc.dg/torture/pr67769.c: New test.
    
    From-SVN: r228353

commit 94a91ef890918a6b1d7364fc5e4a2de15c7432a0
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Thu Oct 1 14:01:37 2015 +0000

    Fix missing deep copy when assigning a DT constructor to an array
    
    This adds the missing deep copy when assiging a constructor of a derived
    type with allocatable components to an array.
    
    The check for constantness is removed so that the deep_copy argument passed
    to gfc_trans_scalar_assign is set to true.
    
            PR fortran/67721
    gcc/fortran/
            * trans-expr.c (gfc_trans_assignment_1): Remove the non-constantness
            condition guarding deep copy.
    gcc/testsuite/
            * gfortran.dg/alloc_comp_deep_copy_3.f03: New.
    
    From-SVN: r228339

commit 22eb3566e0dad8b60529d0156b876ccecfc0683d
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Oct 1 15:02:58 2015 +0200

    pr55113_0.c: Skip on all x86 targets.
    
            * gcc.dg/lto/pr55113_0.c: Skip on all x86 targets.
    
    From-SVN: r228335

commit b29a436240ab6bb932084833089b7a3927c850ce
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Oct 1 12:01:18 2015 +0000

    Support PIE on Solaris
    
            gcc:
            Backport from mainline
            2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * configure.ac (gcc_cv_ld_pie): Check for gld >= 2.26 on Solaris.
            Check for ld -type pie on Solaris 11.x and 12.
            * configure: Regenerate.
            * config.in: Regenerate.
    
            * config/sol2.h (STARTFILE_CRTBEGIN_SPEC): Define.
            (STARTFILE_SPEC): Use it.
            (ENDFILE_CRTEND_SPEC): Define.
            (ENDFILE_SPEC): Use it and ENDFILE_ARCH_SPEC.
            (SUBTARGET_EXTRA_SPECS): Add STARTFILE_CRTBEGIN_SPEC,
            ENDFILE_ARCH_SPEC, ENDFILE_CRTEND_SPEC.
            (LINK_PIE_SPEC): Define.
            * config/i386/sol2.h (ENDFILE_SPEC): Remove.
            (ENDFILE_ARCH_SPEC): Define.
            * config/sparc/sol2.h (ENDFILE_ARCH_SPEC): Define.
    
            gcc/testsuite:
            Backport from mainline
            2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * lib/target-supports.exp (check_effective_target_pie): Check for
            PIE support on Solaris 11.x and 12.
    
            libgcc:
            Backport from mainline
            2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.host (*-*-solaris2*): Add t-crtstuff-pic to tmake_file.
            Add crtbeginS.o, crtendS.o to extra_parts if libgcc_cv_solaris_crts.
            * config/sol2/gmon.c: (monstartup): Don't write trailing NUL of
            messages.
            (internal_mcount): Likewise.
            * config/sol2/t-sol2 (crtp.o, crtpg.o, gmon.o): Compile with
            crt_compile, add CRTSTUFF_T_CFLAGS_S.
    
    From-SVN: r228331

commit 59cf78d8af9114db53a4a9a9bcfc8b0bb34599d4
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Oct 1 11:51:45 2015 +0000

    Use CRTs provided by Solaris
    
            gcc:
            Backport from mainline
            2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * configure.ac (gcc_cv_solaris_crts): New test.
            * configure. Regenerate.
            * config.in: Regenerate.
            * config/sol2.h (STARTFILE_SPEC): Simplify, provide
            HAVE_SOLARIS_CRTS variant.
    
            libgcc:
            Backport from mainline
            2015-09-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * configure.ac (libgcc_cv_solaris_crts): New test.
            * configure: Regenerate.
            * config.in: Regenerate.
            * config/sol2/crtp.c, config/sol2/crtpg.c: New files.
            * config/gmon-sol2.c: Rename to ...
            * config/sol2/gmon.c: ... this.
            Include auto-target.h.
            (internal_mcount): Wrap setup handling in !HAVE_SOLARIS_CRTS.
            * config/t-sol2: Rename to ...
            * config/sol2/t-sol2: ... this.
            (gmon.o): Reflect renaming.
            (crtp.o, crtpg.o): New rules.
            * config.host (*-*-solaris2*): Reflect renaming.
            Use system CRTs if present.
            Remove default CRT case.
    
    From-SVN: r228330

commit 06f22706378b2984d603aff2c1908f6341a5038d
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Oct 1 09:05:45 2015 +0000

    Backport: [GCC, ARM] armv8 linux toolchain asan testcase fail due to stl missing conditional code
    
            Backport from mainline
            2015-06-09  Shiva Chen  <shiva0217@gmail.com>
    
            * sync.md (atomic_load<mode>): Add conditional code for lda/ldr
            (atomic_store<mode>): Likewise.
    
            * gcc.target/arm/stl-cond.c: New test.
    
    From-SVN: r228322

commit 718ea49c77b59ef3019f84d1bc5b235b8e7e7f50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 1 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228313

commit 9c361c363a51eaf08dd683f57ce3105a19181c2d
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Wed Sep 30 16:39:44 2015 +0000

    Add alternative_mask to ira_implicitly_set_insn_hard_regs
    
    Since ira_implicitly_set_insn_hard_regs may be called outside of
    ira-lives.c, it can't use the local variable, preferred_alternatives.
    This patch adds an alternative_mask argument to
    ira_implicitly_set_insn_hard_regs.
    
    Backport from mainline
    
    gcc/
    
            PR rtl-optimization/67029
            * ira-color.c: Include "recog.h" before including "ira-int.h".
            * target-globals.c: Likewise.
            * ira-lives.c (ira_implicitly_set_insn_hard_regs): Add an
            adds an alternative_mask argument and use it instead of
            preferred_alternatives.
            * ira.h (ira_implicitly_set_insn_hard_regs): Moved to ...
            * ira-int.h (ira_implicitly_set_insn_hard_regs): Here.
            * sched-deps.c: Include "ira-int.h" after including "ira.h".
            (sched_analyze_insn): Update call to
            ira_implicitly_set_insn_hard_regs.
            * sel-sched.c: Include "ira-int.h" after including "ira.h".
            (implicit_clobber_conflict_p): Update call to
            ira_implicitly_set_insn_hard_regs.
    
    gcc/testsuite/
    
            PR rtl-optimization/67029
            * gcc.dg/pr67029.c: New test.
    
    From-SVN: r228299

commit 711e51cfce91d5e17eb8982a6c2be7ab89ffa85f
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Sep 30 12:21:03 2015 +0000

    re PR c/67730 (No warning when returning NULL in void function)
    
            PR c/67730
            * c-typeck.c (c_finish_return): Use the expansion point location for
            certain "return with value" warnings.
    
            * gcc.dg/pr67730.c: New test.
    
    From-SVN: r228288

commit 3a1ffa281f749a73948600de5050e68d899ac7ec
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Sep 30 11:45:40 2015 +0000

    re PR tree-optimization/67690 (wrong code with -O2 on x86_64/Linux)
    
            PR tree-optimization/67690
            * tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): Call
            reset_flow_sensitive_info_in_bb.
            * tree-ssa-tail-merge.c: Include "stringpool.h" and "tree-ssanames.h".
            (replace_block_by): Call reset_flow_sensitive_info_in_bb.
            * tree-ssanames.c: Include "gimple-iterator.h".
            (reset_flow_sensitive_info_in_bb): New function.
            * tree-ssanames.h (reset_flow_sensitive_info_in_bb): Declare.
    
            * gcc.dg/torture/pr67690.c: New test.
    
    From-SVN: r228287

commit c25ea4d32695395b58b318b5df2d775a0d1fda44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 30 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228275

commit 709dfed2f55e3bd2241cf7d7a82b3de0ee0e1332
Author: Vladimir Makarov <vmakarov@gcc.gnu.org>
Date:   Tue Sep 29 16:37:26 2015 +0000

    backport: re PR ipa/66424 (wrong code at -O2 and -O3 on x86_64-linux-gnu in 32-bit mode)
    
    2015-09-29  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backport from mainline
            2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR ipa/66424.
            * lra-remat.c (operand_to_remat): Prevent using insns with input
            subregs processed separately by IRA.
    
    2015-09-29  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backport from mainline
            2015-07-21  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR ipa/66424.
            * gcc.target/i386/pr66424.c: New.
    
    From-SVN: r228256

commit d9196dcb1e313e9e280316b527492e501a9caf7b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Sep 29 10:35:24 2015 +0000

    S/390: Don't use vgm for v1ti and v1tf.
    
    gcc/
    2015-09-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_contiguous_bitmask_vector_p): Reject if
            the vector element is bigger than 64 bit.
    
    gcc/testsuite
    2015-09-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-genbytemask-1.c: Add check for V1TI
            initialization with a byte mask.  No change expected here.
            * gcc.target/s390/vector/vec-genmask-1.c: Fix whitespace.
            * gcc.target/s390/vector/vec-genmask-2.c: Add check for V1TI
            initialization with contigious bitmask.  Literal pool is expectd
            to be used here.
    
    From-SVN: r228239

commit fc870b8e65a4d9c176a271088b848a9a6c0b9d18
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Sep 29 10:28:00 2015 +0000

    S/390: Fix mode iterators vmal, vmah, and vmalh.
    
    2015-09-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vx-builtins.md ("vec_vmal<mode>", "vec_vmah<mode>")
            ("vec_vmalh<mode>"): Change mode iterator from VI_HW to VI_HW_QHS.
    
    From-SVN: r228238

commit 79175e0c86a5a6893276bf819649ef38f70507cd
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Sep 29 10:26:04 2015 +0000

    S/390: Add V1TImode to constant pool modes.
    
    2015-09-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                Backport from mainline
                2015-09-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
                * config/s390/s390.c: Add V1TImode to constant pool modes.
    
    From-SVN: r228237

commit b54c168520865fb827097faa94a96d01a287a872
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Sep 29 10:04:50 2015 +0000

    S/390: Switch mode attribute to bhfgq for vec scatter - fix broken backport commit
    
    2015-09-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vx-builtins.md
            ("vec_scatter_element<mode>_<non_vec_int>")
            ("vec_scatter_element<V_HW_64:mode>_SI"): Replace gf mode
            attribute with bhfgq.
    
    From-SVN: r228234

commit 41af4331f52474b3145ef8f04f71ca9d64f1d9ec
Author: Andrew Pinski <apinski@cavium.com>
Date:   Tue Sep 29 08:36:52 2015 +0000

    aarch64.md (prefetch): Change the predicate of operand 0 to register_operand.
    
    2015-09-29  Andrew Pinski  <apinski@cavium.com>
    
            * config/aarch64/aarch64.md (prefetch):
            Change the predicate of operand 0 to register_operand.
    
    From-SVN: r228230

commit 956871371ac6c8bc50d24ce55951514c9c224a90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 29 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228225

commit 1e810f5d5a76501c59fb5f280fbb72878fda7670
Author: Daniel Hellstrom <daniel@gaisler.com>
Date:   Mon Sep 28 17:05:38 2015 +0200

    Now that muser-mode is default the multilib definitions does not require to specify that switch any more.
    
    Now that muser-mode is default the multilib definitions does not require to
    specify that switch any more. Add UT699 to multilib after recent patches. Add
    AT697F multilib since there are many LEON2 users running RTEMS. Add leon to
    multilib too.
    
    gcc/
            * config/sparc/t-rtems: Remove -muser-mode. Add ut699, at697f and leon.
    
    From-SVN: r228206

commit b9fb76bcc0a5777ad9be102f3c24b6a23220c1d5
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Mon Sep 28 13:44:32 2015 +0000

    backport: re PR target/67391 ([SH] Convert clrt addc to normal add insn)
    
    gcc/
            Backport from mainline
            2015-09-27  Oleg Endo  <olegendo@gcc.gnu.org>
                        Kaz Kojima  <kkojima@gcc.gnu.org>
    
            PR target/67391
            * config/sh/sh-protos.h (sh_lra_p): Declare.
            * config/sh/sh.c (sh_lra_p): Make non-static.
            * config/sh/sh.md (addsi3): Use arith_reg_dest for operands[0] and
            arith_reg_operand for operands[1].  Remove TARGET_SHMEDIA case.
            Expand into addsi3_scr if operands[2] if needed.
            (*addsi3_compact): Rename to *addsi3_compact_lra.  Use
            arith_reg_operand for operands[1].  Allow it only when LRA is enabled.
            (addsi3_scr, *addsi3): New insn_and_split patterns.
    
    From-SVN: r228201

commit 4c977381dac3c88348efbe1562969a68921a8db8
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 28 10:45:55 2015 +0000

    backport: [multiple changes]
    
    2015-09-28  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-08-03  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66917
            * tree-vectorizer.h (struct dataref_aux): Add base_element_aligned
            field.
            (DR_VECT_AUX): New macro.
            (set_dr_misalignment): Adjust.
            (dr_misalignment): Likewise.
            * tree-vect-data-refs.c (vect_compute_data_ref_alignment):
            Compute whether the base is at least element aligned.
            * tree-vect-stmts.c (ensure_base_align): Adjust.
            (vectorizable_store): If the base is not element aligned
            preserve alignment of the original access if misalignment is unknown.
            (vectorizable_load): Likewise.
    
            2015-09-16  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/67442
            * fold-const.c (extract_muldiv_1): Properly extend multiplication
            result before builting a tree via wide_int_to_tree.
    
            * gcc.dg/torture/pr67442.c: New testcase.
    
    From-SVN: r228199

commit 83749b3e60c30e46fdd574f768f36a8c65acd844
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Mon Sep 28 10:24:23 2015 +0000

    avx512vbmi-check.h (main): Fix register name while checking for AVX-512VBMI presence.
    
    gcc/testsuite/
            * gcc.target/i386/avx512vbmi-check.h (main): Fix register
            name while checking for AVX-512VBMI presence.
    
    From-SVN: r228198

commit b1813aa5bef4df9a1efb321522e968b69b35046a
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Mon Sep 28 06:24:21 2015 +0000

    Use leon3 target for native LEON on Linux.
    
    2015-09-28  Daniel Cederman  <cederman@gaisler.com>
    
    Use leon3 target for native LEON on Linux. Linux requires LEON version 3 or
    above with CASA support.
    
    gcc/
            * config/sparc/driver-sparc.c: map LEON to leon3
    
    From-SVN: r228191

commit 726700fbc80452dc3c3e82bf5833ec1639f05855
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Mon Sep 28 06:22:41 2015 +0000

    Make muser-mode the default for LEON3
    
    2015-09-28  Daniel Cederman  <cederman@gaisler.com>
    
    Make muser-mode the default for LEON3
    
    The muser-mode flag causes the CASA instruction for LEON3 to use the
    user mode ASI. This is the correct behavior for almost all LEON3 targets.
    For this reason it makes sense to make user mode the default.
    
    gcc/
            * config/sparc/sparc.opt: Rename mask from USER_MODE to SV_MODE
              and make it inverse to change default
            * config/sparc/sync.md: Only use supervisor ASI for CASA when in
              supervisor mode
            * doc/invoke.texi: Document change of default
    
    From-SVN: r228190

commit 6be4dca840ff3642b810fb37121bc7d9e5710754
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Mon Sep 28 06:21:05 2015 +0000

    Do not use floating point registers when compiling with -msoft-float for SPARC
    
    2015-09-28  Daniel Cederman  <cederman@gaisler.com>
    
    Do not use floating point registers when compiling with -msoft-float for SPARC
    
    __builtin_apply* and __builtin_return accesses the floating point registers on
    SPARC even when compiling with -msoft-float.
    
    gcc/
            * config/sparc/sparc.c (sparc_function_value_regno_p): Do not return
            true on %f0 for a target without FPU.
            * config/sparc/sparc.md (untyped_call): Do not save %f0 for a target
            without FPU.
            (untyped_return): Do not load %f0 for a target without FPU.
    
    From-SVN: r228189

commit 175ba232c4300905dba30103001994d472391dff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 28 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r228180

commit e6183d8ad7fd19f1f9a01c5355ef3669306a634d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 27 00:16:17 2015 +0000

    Daily bump.
    
    From-SVN: r228172

commit e44eea621b8cac5ec7ca5af436d2b41219d18028
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 26 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228160

commit 081672c14d0262589e348853ddd9e21132ff9fe1
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 25 22:59:15 2015 +0000

    re PR fortran/67614 (ICE on using arithmetic if with null)
    
    2015-09-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67614
            * resolve.c (gfc_resolve_code): Prevent ICE for invalid EXPR_NULL.
    
    2015-09-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67614
            * gfortran.dg/pr67614.f90: New test.
    
    From-SVN: r228158

commit c09416b882fb2b91f4c1f8690406083b17383d5c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Sep 25 22:45:27 2015 +0000

    re PR fortran/67525 (ICE on select type with improper selector)
    
    2015-09-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67525
            * parse.c (match_deferred_characteristics): Remove an assert, which
            allows an invalid SELECT TYPE selector to be detected.
    
    2015-09-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67525
            * gfortran.dg/pr67525.f90: New test.
    
    From-SVN: r228157

commit 67ba7ea8338f5fa6e60d995d46abc01519ecef0c
Author: Tobias Burnus <burnus@net-b.de>
Date:   Fri Sep 25 20:58:42 2015 +0200

    invoke.texi (-fsanitize): Minor wording tweak.
    
    2015-09-25  Tobias Burnus  <burnus@net-b.de>
    
            * doc/invoke.texi (-fsanitize): Minor wording tweak.
    
    From-SVN: r228147

commit 20f41c6c6e52635c498e7fee56e08d950c4080ad
Author: Tobias Burnus <burnus@net-b.de>
Date:   Fri Sep 25 20:42:47 2015 +0200

    invoke.texi (-fsanitize): Update URLs.
    
    2015-09-25  Tobias Burnus  <burnus@net-b.de>
    
            * doc/invoke.texi (-fsanitize): Update URLs.
    
    From-SVN: r228145

commit 3f621e28ba8adc465297c69f05c26ddfb0314954
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Sep 25 18:06:04 2015 +0100

    * tr.po: Update.
    
    From-SVN: r228139

commit 350de109a1b168e366c5340e520271960b8253b4
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Sep 25 10:46:03 2015 +0000

    re PR sanitizer/64906 (-fsanitize=integer-divide-by-zero creates false -Wmaybe-uninitialized warning)
    
            PR sanitizer/64906
            * c-ubsan.c (ubsan_instrument_division): Also pre-evaluate OP1.
    
            * c-c++-common/ubsan/pr64906.c: New test.
    
    From-SVN: r228113

commit 659de3fa40428fa6f4221680888de307baeec103
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 25 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228107

commit 1b58bfe5cfc5963fef0eb10b632be2cb0ff0e182
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Sep 25 00:04:26 2015 +0000

    pa-linux.h (HAVE_sync_compare_and_swapdi): Define.
    
            * config/pa/pa-linux.h (HAVE_sync_compare_and_swapdi): Define.
            * config/pa/pa-protos.h (pa_maybe_emit_compare_and_swap_exchange_loop):
            Declare.
            * config/pa/pa.c (pa_init_libfuncs): Init sync libfuncs up to 8 bytes.
            (pa_expand_compare_and_swap_loop): New.
            (pa_maybe_emit_compare_and_swap_exchange_loop): New.
            * config/pa/pa.md (atomic_storeqi, atomic_storehi, atomic_storesi,
            atomic_storesf, atomic_loaddf, atomic_storedf): New expanders.
            (atomic_loaddf_1, atomic_storedf_1): New insn patterns.
            (atomic_loaddi, atomic_loaddi_1, atomic_storedi, atomic_storedi_1):
            Revise.
    
    From-SVN: r228105

commit 313f0b5dfcf8821bd31b4afbc83ebcffd6f7d123
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Sep 24 23:16:45 2015 +0930

    [RS6000] Don't pass --oformat to ld
    
    ld -m options select a particular ld emulation (e*.c files in ld build
    dir) which provides a compiled-in scripts or select a script from
    ldscripts/.  Each of these has an OUTPUT_FORMAT statement, which does
    the same thing as --oformat.  --oformat is therefore redundant when
    using GNU ld built this century, except possibly when overriding the
    default ld scripts with -T.
    
            * config/rs6000/sysv4le.h (LINK_TARGET_SPEC): Don't define.
            * config/rs6000/sysv4.h (LINK_TARGET_SPEC): Likewise.
            (LINK_SPEC, SUBTARGET_EXTRA_SPECS): Delete link_target.
    
    From-SVN: r228089

commit 0201220c685b0e96b11efcefbf15cdf99bba9f1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 24 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r228069

commit cf8022dd0353261de3a891c0ea83f71ca06e4cc9
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Sep 23 23:29:08 2015 +0000

    linux-atomic.c (__kernel_cmpxchg2): Reorder error checks.
    
    2015-09-23  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/linux-atomic.c (__kernel_cmpxchg2): Reorder error checks.
            (__sync_fetch_and_##OP##_##WIDTH): Change result to match type of
            __kernel_cmpxchg2.
            (__sync_##OP##_and_fetch_##WIDTH): Likewise.
            (__sync_val_compare_and_swap_##WIDTH): Likewise.
            (__sync_bool_compare_and_swap_##WIDTH): Likewise.
            (__sync_lock_test_and_set_##WIDTH): Likewise.
            (__sync_lock_release_##WIDTH): Likewise.
            (__sync_fetch_and_##OP##_4): Change result to match type of
            __kernel_cmpxchg.
            (__sync_##OP##_and_fetch_4): Likewise.
            (__sync_val_compare_and_swap_4): Likewise.
            (__sync_bool_compare_and_swap_4): likewise.
            (__sync_lock_test_and_set_4): Likewise.
            (__sync_lock_release_4): Likewise.
            (FETCH_AND_OP_2): Add long long variants.
            (OP_AND_FETCH_2): Likewise.
            (COMPARE_AND_SWAP_2 ): Likewise.
            (SYNC_LOCK_TEST_AND_SET_2): Likewise.
            (SYNC_LOCK_RELEASE_2): Likewise.
            (__sync_bool_compare_and_swap_##WIDTH): Correct return.
    
    From-SVN: r228066

commit 00e658fd2a913a0da9957792b4b06586dc878aef
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Wed Sep 23 11:57:27 2015 +0000

    backport: re PR target/67391 ([SH] Convert clrt addc to normal add insn)
    
    gcc/
            Backport from mainline
            2015-09-23  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67391
            * config/sh/sh.md (addsi3, *addsi3_compact): Don't check for overlapping
            regs when matching the pattern.
    
    From-SVN: r228047

commit 9e560b660080ec808a8188cba100b667ae2b5466
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Sep 23 10:36:48 2015 +0000

    [ARM] PR 67439: Allow matching of *arm32_movhf when -mrestrict-it is on
    
            Backport from mainline
            2015-09-10  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/67439
            * config/arm/arm.md (*arm32_movhf): Remove !arm_restrict_it from
            predicate.  Set predicable_short_it attr to "no".
    
            PR target/67439
            * gcc.target/arm/pr67439_1.c: New test.
    
    From-SVN: r228039

commit d430077f5017744c44b9ef7ed0728920e952d7a4
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Sep 23 09:48:16 2015 +0000

    [Aarch64][target/PR 67143][5.2] Backport correct constraints for atomic
    operations.
    
    gcc/
    2015-09-23  Matthew Wahab  <matthew.wahab@arm.com>
    
            Backport from mainline
            2015-08-14  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/67143
            * config/aarch64/atomics.md (atomic_<optab><mode>): Replace
            'lconst_atomic' with 'const_atomic'.
            (atomic_fetch_<optab><mode>): Likewise.
            (atomic_<optab>_fetch<mode>): Likewise.
            * config/aarch64/iterators.md (lconst-atomic): Move below
            'const_atomic'.
            (const_atomic): New.
    
    gcc/testsuite/
    2015-09-23  Matthew Wahab  <matthew.wahab@arm.com>
    
            Backport from mainline
            2015-08-14  Matthew Wahab  <matthew.wahab@arm.com>
                        Matthias Klose  <doko@debian.org>
    
            PR target/67143
            * gcc.c-torture/compile/pr67143.c: New
            * gcc.target/aarch64/atomic-op-imm.c
            (atomic_fetch_add_negative_RELAXED): New.
            (atomic_fetch_sub_negative_ACQUIRE): New.
    
    From-SVN: r228037

commit 6eee3142d789029a1c7b7a0e9efad47f216b0b54
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 23 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r228030

commit 00ffe3e8f1ba3ed9c899693338228c2ddd1f8401
Author: Chung-Lin Tang <cltang@codesourcery.com>
Date:   Tue Sep 22 12:23:20 2015 +0000

    backport: nios2.c (nios2_legitimize_address): When handling 'reg + reloc' cases...
    
    2015-09-22  Chung-Lin Tang  <cltang@codesourcery.com>
    
            Backport from mainline
            2015-09-22  Chung-Lin Tang  <cltang@codesourcery.com>
    
            * config/nios2/nios2.c (nios2_legitimize_address): When handling
            'reg + reloc' cases, allow first operand to be non-REG, and use
            force_reg() to enforce address pattern.
    
    From-SVN: r228013

commit 0ee5fd6fe3b5a17497caeecb812ef93e64dd3bb5
Author: Chung-Lin Tang <cltang@codesourcery.com>
Date:   Tue Sep 22 11:18:23 2015 +0000

    backport: re PR libgomp/67141 (wrong libgomp mutex initialisation order)
    
    2015-09-22  Chung-Lin Tang  <cltang@codesourcery.com>
    
            Backport from mainline:
    
            2015-09-22  Chung-Lin Tang  <cltang@codesourcery.com>
    
            PR libgomp/67141
            * oacc-int.h (goacc_host_init): Add declaration.
            * oacc-host.c (goacc_host_init): Remove static and constructor attribute.
            * oacc-init.c (goacc_runtime_initialize): Call goacc_host_init() at end.
    
    From-SVN: r228011

commit 61cef8a14c9ff181c1e63bcebdc345a49a5a7d82
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Tue Sep 22 09:49:20 2015 +0000

    AVX-512. Fix patterns for kunpck insns.
    
    gcc/
            * gcc/config/i386/i386.md (define_insn "kunpckhi"): Fix
            operand in pattern.
            (define_insn "kunpcksi"): Ditto.
            (define_insn "kunpckdi"): Ditto.
    
    From-SVN: r228007

commit ad83164e9dece92c70b477bbb8ca8dbe2d753bde
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Tue Sep 22 09:44:28 2015 +0000

    AVX-512. Fix kxnor insn split.
    
    gcc/
            * gcc/config/i386/i386.md (define_split not/xor SWI1248x): Use
            iterator instead of fixed modes..
    
    From-SVN: r228004

commit 49902465ec7d3064eab992ba70530f8567a8d353
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Sep 22 07:47:21 2015 +0000

    backport: re PR tree-optimization/66952 (wrong code at -O2 and -O3 on x86_64-linux-gnu)
    
    2015-09-22  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-07-23  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66952
            * gcc.dg/torture/pr66952.c: Use signed char.
    
    From-SVN: r227995

commit 720f295315daec6e060c9e9fa16d7b970e299849
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 22 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r227991

commit 6bc852d005d3b063da20475361102788d82122b4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Sep 21 18:24:52 2015 +0000

    re PR fortran/67615 (ICE on using arithmetic if with array instead of scalar)
    
    2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67615
            * resolve.c (gfc_resolve_code): Check for scalar expression in
            arithmetic-if.
    
    2015-09-21  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67615
            * gfortran.dg/pr67615.f90: new test.
    
    From-SVN: r227982

commit 4cbd1360c016a9d271773cf2323c23e571ae97ac
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Sep 21 17:23:52 2015 +0200

    re PR middle-end/67619 (ICE at -O1 and above on x86_64-linux-gnu in int_mode_for_mode, at stor-layout.c:425)
    
            PR middle-end/67619
            * except.c (expand_builtin_eh_return): Use copy_addr_to_reg to copy
            the address to a register.
    
    testsuite/ChangeLog:
    
            PR middle-end/67619
            * gcc.dg/torture/pr67619.c: New test.
            * lib/target-supports.exp (check_effective_target_builtin_eh_return):
            New procedure.
    
    From-SVN: r227976

commit 211ebd368b94d9d3ad5e010a0df97de50f724162
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Mon Sep 21 13:14:45 2015 +0000

    backport: re PR target/67657 ([SH][5/6 Regression]: internal compiler error: in cselib_record_set, at cselib.c:2396 when compiling libjpeg-turbo)
    
    gcc/
            Backport from mainline
            2015-09-21  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67657
            * config/sh/sh.c (sh_remove_overlapping_post_inc,
            sh_peephole_emit_move_insn): Add new functions.
            * config/sh/sh-protos.h (sh_remove_overlapping_post_inc,
            sh_peephole_emit_move_insn): Declere them.
            * config/sh/sh.md: Use them in various peephole2 patterns.
    
    From-SVN: r227970

commit 7bd7e2412e4f776983649ef2212cabf1dffcae7b
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 21 09:55:57 2015 +0000

    Backport PRs 66793, 66952, 67055, 67121, 67271, 67470
    
    2015-09-21  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-07-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66793
            * gimple-ssa-isolate-paths.c (insert_trap_and_remove_trailing_statemen):
            Properly split the block after stmts ending it.
    
            * gcc.dg/torture/pr66793.c: New testcase.
    
            2015-08-05  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/67055
            * tree-ssa-ccp.c (fold_builtin_alloca_with_align): Handle
            NULL gimple_block.
    
            * g++.dg/torture/pr67055.C: New testcase.
    
            2015-08-05  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/67121
            * tree-if-conv.c (combine_blocks): Clear range-info produced
            by stmts no longer executed conditionally.
    
            * gcc.dg/torture/pr67121.c: New testcase.
    
            2015-09-16  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/67271
            * fold-const.c (native_encode_expr): Bail out on bogus offsets.
    
            * gcc.dg/pr67271.c: New testcase.
    
            2015-07-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66952
            * tree-ssa-ifcombine.c (pass_tree_ifcombine::execute): For
            blocks we end up executing unconditionally reset all SSA
            info such as range and alignment.
            * tree-ssanames.h (reset_flow_sensitive_info): Declare.
            * tree-ssanames.c (reset_flow_sensitive_info): New function.
    
            * gcc.dg/torture/pr66952.c: New testcase.
    
            2015-09-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/67470
            * tree-ssa-loop-im.c (execute_sm_if_changed): Preserve PHI
            structure for PHI hoisting by inserting a forwarder block
            if appropriate.
    
            * gcc.dg/torture/pr67470.c: New testcase.
    
    From-SVN: r227961

commit ada4dd86b11a188b81f4fdf4f88d5048668ecb06
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 21 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r227955

commit bf95d2a5cfebbbc1dcdf56cabd7e750115425aa7
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Sun Sep 20 23:54:03 2015 +0000

    re PR target/67573 ([SH] wrong code generated for libstdc++-v3/src/c++11/cxx11-shim_facets.cc at -mlra)
    
    PR target/67573
    * config/sh/sh.md: Add early clobber to scratch operand of *call_*pcrel
    insn_and_split so to avoid CSEd scratch reg.
    
    From-SVN: r227953

commit 7a1ec0061b11a35db3921c5a74d3482383be1000
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sun Sep 20 10:18:45 2015 +0000

    backport: re PR target/67061 (sh64-elf: internal compiler error: in sh_find_set_of_reg, at config/sh/sh-protos.h:235)
    
    gcc/
            Backport from mainline
            2015-09-14  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67061
            * config/sh/sh-protos.h (sh_find_set_of_reg): Simplfiy for-loop.
            Handle call insns.
    
    From-SVN: r227943

commit ded482832a67845fb3f7596a81c1678cdaab8f1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 20 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227939

commit f177013c63786d344651a91d8643e2ec9b2b43a1
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Sep 19 18:34:26 2015 +0000

    pa.c (pa_function_ok_for_sibcall): Remove special treatment of TARGET_ELF32.
    
            * config/pa/pa.c (pa_function_ok_for_sibcall): Remove special treatment
            of TARGET_ELF32.
    
    From-SVN: r227934

commit f0b3f4362f53dc75525054f07f73310d08be3cdb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 19 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227928

commit e1d490187f22bb875b2ca3b10d0e81491d85daa9
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Sep 18 18:24:09 2015 +0000

    re PR middle-end/67401 (Incorrect expand of __atomic_compare_exchange_8 using __sync_val_compare_and_swap_8)
    
            PR middle-end/67401
            * optabs.c (expand_atomic_compare_and_swap): Move result of emitting
            sync_compare_and_swap_optab libcall to target_oval.
    
    From-SVN: r227913

commit de574482785ae7668b07e06dd2cf722e4f2c0bdb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 18 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r227891

commit 17921da73589e7c9ee259be2184bfbd3a76cac58
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Sep 17 15:35:43 2015 +0000

    re PR rtl-optimization/66790 (Invalid uninitialized register handling in REE)
    
            PR rtl-optimization/66790
            * df-problems.c (LIVE): Amend documentation.
    
    From-SVN: r227875

commit 49d14333bf7ed20773b9ea0984942ce074f9b073
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Sep 17 12:50:54 2015 +0000

    re PR middle-end/67222 (ICE in gimple_call_arg with bogus posix_memalign)
    
            PR middle-end/67222
            * gimple-low.c (lower_stmt): Don't lower BUILT_IN_POSIX_MEMALIGN
            if the call isn't valid.
            * tree-ssa-alias.c (ref_maybe_used_by_call_p_1): Check builtins using
            gimple_call_builtin_p.
            (call_may_clobber_ref_p_1): Likewise.
            (stmt_kills_ref_p): Likewise.
    
            * gcc.dg/torture/pr67222.c: New test.
    
    From-SVN: r227862

commit ae0a397ab2df275601f3609d4259dbcc12a7353f
Author: Rainer Orth <ro@gcc.gnu.org>
Date:   Thu Sep 17 12:46:06 2015 +0000

    libgo: Use stat_atim.go on Solaris 12+
    
        Backport from mainline
    
        From Rainer Orth.
    
        Solaris 12 changes the stat_[amc]tim members of struct stat from
        timestruc_t to timespec_t for XPG7 compatiblity, thus breaking the libgo
        build.  The following patch checks for this change and uses the common
        stat_atim.go if appropriate.
    
        Reviewed-on: https://go-review.googlesource.com/14495
    
    From-SVN: r227861

commit a0ec714387dbb61296f6067d4846addcdf1b7ed6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 17 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227839

commit 5648d04b8f4955a7bc7fd30ddae08d3dfa67a74f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 16 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227815

commit 097e0085066146bbdfe7a81fe1d10552424794de
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Sep 15 12:32:59 2015 +0000

    runtime: Ignore stack sizes when deciding when to GC.
    
    
        This restores https://golang.org/cl/6081043 which was lost accidentally
        when updating a new version of libgo in https://golang.org/cl/22440043 .
    
        Reviewed-on: https://go-review.googlesource.com/14569
    
    From-SVN: r227785

commit 9e7a06d738381deb2503097d8baa36c2a8258cc8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 15 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227772

commit 1fe677fc87aac27c5170d452c96acb636339c1a0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 14 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r227732

commit 92e58302ba2d11d7286e9a3a45fe8499f8eb8e05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 13 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r227714

commit 437cfbf45ee86ae14dad79b27b7b793e3e37ef9a
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Sep 12 13:54:57 2015 +0000

    pa.c (pa_output_move_double): Enhance to handle HIGH CONSTANT_P operands.
    
            * config/pa/pa.c (pa_output_move_double): Enhance to handle HIGH
            CONSTANT_P operands.
    
    From-SVN: r227707

commit a68a73595635da9b8c0a4010cfbc2e2b089bd36f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 12 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r227703

commit ef55e22c72f2fb9c3fa67181cc899a9f2f31ac63
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Fri Sep 11 11:17:33 2015 +0000

    Link gcc.dg/pie-link.c with -pie
    
            * gcc.dg/pie-link.c: Add -pie to dg-options.
    
    From-SVN: r227683

commit 4f51271c7418590d72060fe86eab21a0341327f9
Author: Alex Velenko <Alex.Velenko@arm.com>
Date:   Fri Sep 11 09:37:12 2015 +0000

    backport: pr63210.c (dg-skip-if): Skip armv4t.
    
    gcc/testsuite
    
            Backport from mainline
            * gcc.target/arm/pr63210.c (dg-skip-if): Skip armv4t.
            (dg-additional-options): Add -march=armv5t if arm_arch_v5t_ok.
    
    From-SVN: r227678

commit ee0c5c5f9fb58d08e4c8e9e0d6eb19d3649db80d
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Fri Sep 11 06:12:40 2015 +0000

    Make sure that contrib/download_prerequisites is run from correct place
    
            * download_prerequisites: Make sure that script is run from
            top level source directory.
    
    From-SVN: r227675

commit b93d61b495c5c9b7725696ca4cdf3c93e5c9b2e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 11 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r227670

commit 6b6c56f1e8015634cfa83b95d5e06a45d389e716
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Sep 10 18:07:07 2015 +0000

    re PR fortran/67526 (ICE on missing end parenthesis in substring construct)
    
    2015-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67526
            * gfortran.dg/pr67526.f90: New test.
    
    2015-09-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/67526
            * expr.c (gfc_check_init_expr): Do not dereference a NULL pointer.
    
    From-SVN: r227655

commit bef83bb27ad47112037e836369e92e7847903472
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Sep 10 15:07:02 2015 +0000

    backport: re PR target/67506 ([SH]: error: unrecognizable insn when compiling texlive-binaries)
    
    gcc/
            Backport from mainline
            2015-09-10  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/67506
            * config/sh/sh.c (sh_extending_set_of_reg::use_as_extended_reg): Add
            missing simplify_gen_subreg.
    
    gcc/testsuite/
            Backport from mainline
            PR target/67506
            * gcc.c-torture/compile/pr67506.c: New test.
    
    From-SVN: r227647

commit 278a171548b68c95bc05eb4aa90d4169d4c55239
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Sep 10 14:17:53 2015 +0000

    Use __cxa_atexit on Solaris 10+
    
            Backport from mainline
            2015-08-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit on
            Solaris 12+.
    
    From-SVN: r227640

commit 2e2eb387910ffa04af0ff91b6bfa23586fc6d65a
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Sep 10 14:11:16 2015 +0000

    Avoid unstructured procfs on Solaris
    
            Backport from mainline
            2015-08-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * os_dep.c [GC_SOLARIS_THREADS] (GC_dirty_init): Use
            /proc/<pid>/pagedata instead of PIOCOPENPD.
    
    From-SVN: r227638

commit afaad14561c1c0b9a1ddceb1f1c49401bf540c22
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:41:34 2015 +0200

    re PR c++/67523 (ICE with invalid combined simd inside of a template)
    
            PR c++/67523
            * gimplify.c (gimplify_omp_for): If inner stmt is not found
            for combined loop, assert seen_error () and return GS_ERROR.
    
            * g++.dg/gomp/pr67523.C: New test.
    
    From-SVN: r227618

commit 9b1e8679e25efe81fa8730a8876d3bef46dc940e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:40:59 2015 +0200

    re PR c++/67522 (OpenMP ICE in type_dependent_expression_p)
    
            PR c++/67522
            * semantics.c (handle_omp_array_sections_1): Only run
            type_dependent_expression_p on VAR_DECL/PARM_DECLs.
            (finish_omp_clauses) <case OMP_CLAUSE_LINEAR>: Likewise.
            Don't adjust OMP_CLAUSE_LINEAR_STEP if OMP_CLAUSE_DECL
            is not a VAR_DECL/PARM_DECL.
    
            * g++.dg/gomp/pr67522.C: New test.
    
    From-SVN: r227617

commit 21bbdccadaed0e30889d02770b3679c68bd81753
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:39:53 2015 +0200

    re PR middle-end/67521 (ICE when OpenMP loop expressions mention the IV)
    
            PR middle-end/67521
            * gimplify.c (gimplify_omp_for): Don't call omp_add_variable
            if decl is already in outer->variables.
    
            * c-c++-common/gomp/pr67521.c: New test.
    
    From-SVN: r227616

commit 1a0f3888830d1bd503df690228ea57d21b006ab0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:39:20 2015 +0200

    re PR middle-end/67517 (ICE in gimplify_scan_omp_clauses)
    
            PR middle-end/67517
            * gimplify.c (gimplify_scan_omp_clauses): Instead of
            asserting that decl is not specified in octx->variables,
            break out of the loop if it is.
    
            * c-c++-common/gomp/pr67517.c: New test.
    
    From-SVN: r227615

commit e5097e86d524379ffad9934a1c3c23ef72c440f5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:38:30 2015 +0200

    re PR c++/67514 (ICE in omp_add_variable)
    
            PR c++/67514
            * gimplify.c (gimplify_omp_for): For loop SIMD construct, if
            iterator is not explicitly determined, but is defined inside
            of the combined workshare region, handle it like if it has
            DECL_EXPR in OMP_FOR_PRE_BODY.
    
            * g++.dg/gomp/pr67514.C: New test.
    
    From-SVN: r227614

commit d4ea82adc9eb1aa8ba1b5abd24a792678b8ce664
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:37:48 2015 +0200

    re PR c++/67511 (ICE with invalid OpenMP random access iterator)
    
            PR c++/67511
            * semantics.c (handle_omp_for_class_iterator): Don't wrap
            error_mark_node into a NOP_EXPR to void_type_node.
    
            * g++.dg/gomp/pr67511.C: New test.
    
    From-SVN: r227613

commit b510621322cd35814c0cee4eb8a2f9d00c4e8b1a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 10 09:37:00 2015 +0200

    re PR c/67502 (ICE with collapsed for simd loop inside of parallel)
    
            PR c/67502
            * c-parser.c (c_parser_omp_for_loop): Emit DECL_EXPR stmts
            into OMP_FOR_PRE_BODY rather than before the loop.
    
            * c-c++-common/gomp/pr67502.c: New test.
    
    From-SVN: r227612

commit b9df529249833529f6ae434a36a3b1be631e025e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 10 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r227602

commit 50a2a5cbf1bfa698f43b93fae7d24d03a1d0305f
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Sep 9 17:14:29 2015 +0000

    re PR middle-end/67512 (internal compiler error: in invert_tree_comparison, at fold-const.c:2456)
    
            PR middle-end/67512
            * tree-ssa-uninit.c (pred_equal_p): Only call invert_tree_comparison
            for comparisons.
    
            * gcc.dg/pr67512.c: New test.
    
    From-SVN: r227596

commit f11da15aeefb63eddd34a96d3b4d0f057a72b1f0
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Sep 9 16:39:32 2015 +0000

    Fix sanitizer/67258 by cherry picking upstream patch
    
            PR sanitizer/67258
            * ubsan/ubsan_type_hash.cc: Cherry pick upstream r244101.
    
    Upstream patch:
    commit 1d2477faafda9ad2cc19927b3c31efd22747f013
    Author: Alexey Samsonov <vonosmas@gmail.com>
    Date:   Wed Aug 5 19:35:46 2015 +0000
    
        [UBSan] Fix UBSan-vptr false positive.
    
        Offset from vptr to the start of most-derived object can actually
        be positive in some virtual base class vtables.
    
        Patch by Stephan Bergmann!
    
        git-svn-id: https://llvm.org/svn/llvm-project/compiler-rt/trunk@244101 91177308-0d34-0410-b5e6-96231b3b80d8
    
    From-SVN: r227592

commit b04884e81f0b433aedbf26bf01d4b3704cabc1ff
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Sep 9 09:32:28 2015 +0200

    re PR c++/67504 (ICE with type dependent collapse argument)
    
            PR c++/67504
            * parser.c (cp_parser_omp_clause_collapse): Test tree_fits_shwi_p
            before INTEGRAL_TYPE_P test.
    
            * g++.dg/gomp/pr67504.C: New test.
    
    From-SVN: r227583

commit c05303cfd43ec9eb47c2aed00d7cf9a3ca475bb5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Sep 9 09:31:43 2015 +0200

    re PR c/67501 (Bad error recovery for invalid OpenMP clauses in C FE)
    
            PR c/67501
            * c-parser.c (c_parser_oacc_all_clauses,
            c_parser_omp_all_clauses): Remove invalid clause from
            list of clauses even if parser->error is set.
    
            * c-c++-common/gomp/pr67501.c: New test.
    
    From-SVN: r227582

commit e48601f84d75565dfcf4dbf0c9fa0a002b52bc37
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Sep 9 09:30:42 2015 +0200

    re PR c/67500 (OpenMP ICE with invalid safelen/simdlen/alignment expressions)
    
            PR c/67500
            * c-parser.c (c_parser_omp_clause_aligned,
            c_parser_omp_clause_safelen, c_parser_omp_clause_simdlen): Fix up
            test for errors.
            * c-decl.c (temp_pop_parm_decls): Allow b->decl equal to
            error_mark_node.
    
            * gcc.dg/gomp/pr67500.c: New test.
    
    From-SVN: r227581

commit 86cf0c89ffc0902c12be6b113ad9e51d5f3207b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Sep 9 09:27:15 2015 +0200

    re PR c/67495 (#pragma omp atomic ICEs)
    
            PR c/67495
            * c-parser.c (c_parser_omp_atomic): Use c_parser_cast_expression
            instead of c_parser_unary_expression.  If the result is !lvalue_p,
            wrap the result of c_fully_fold into NON_LVALUE_EXPR.
    
            * gcc.dg/gomp/pr67495.c: New test.
    
    From-SVN: r227580

commit 84bce7635b99b8f896c50472467e3c6fc31ca40a
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Sep 9 15:29:16 2015 +0930

    Fix PowerPC ICE due to secondary_reload ignoring reload replacements
    
    The reason for this PR is that insns emitted by secondary reload
    patterns are being generated without taking into account other reloads
    that may have occurred.  We run into this problem when an insn has a
    pseudo that doesn't get a hard reg, and the pseudo is used in a way
    that requires a secondary reload.  In this case the secondary reload
    is needed due to gcc generating a 64-bit gpr load from memory insn
    with an address offset not a multiple of 4.
    
            PR target/67378
            * config/rs6000/rs6000.c (rs6000_secondary_reload_gpr): Find
            reload replacement for PRE_MODIFY address reg.
    
    From-SVN: r227574

commit 16cd26e19806f4b9569eecc0f6ea048fa4019cd5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 9 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227570

commit 6e3b55925c78ff17d8e7e4601af525c3d8756dc5
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Tue Sep 8 15:02:27 2015 +0000

    re PR c++/67369 (ICE (in tsubst_decl, at cp/pt.c:11302) with -std=c++14)
    
    /cp
    2015-09-08  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/67369
            * pt.c (tsubst_copy, [case FUNCTION_DECL]): Do not call tsubst
            if the first argument isn't a template.
    
    /testsuite
    2015-09-08  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/67369
            * g++.dg/cpp1y/lambda-generic-ice4.C: New.
    
    From-SVN: r227531

commit 9095abcdbf193dab381e32d3190db01a555633fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 8 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227526

commit 8ec27b529971201667c003462c9227856268dea9
Author: Ilya Verbin <ilya.verbin@intel.com>
Date:   Mon Sep 7 15:32:23 2015 +0000

    intelmic-mkoffload.c (prepare_target_image): Handle all non-alphanumeric characters in the symbol name.
    
            * config/i386/intelmic-mkoffload.c (prepare_target_image): Handle all
            non-alphanumeric characters in the symbol name.
    
    From-SVN: r227523

commit b63b580e0b95567c6927bf7250a538e69495fff3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 7 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r227514

commit 08214ece4d5c9f24f99f197281e68b6e19972536
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 6 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r227510

commit 0f9ecc5974db11fbad1019f6bb3367ee9efe4d73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 5 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r227505

commit 97f987fe8d265c758069072f386dd6ebbdc8fe96
Author: Manuel López-Ibáñez <manu@gcc.gnu.org>
Date:   Fri Sep 4 18:41:08 2015 +0000

    re PR fortran/67429 (Missing part of error messages.)
    
    2015-09-04  Manuel López-Ibáñez  <manu@gcc.gnu.org>
    
            PR fortran/67429
            * error.c (gfc_clear_pp_buffer): Reset last_location, otherwise
            caret lines might be skipped when actually giving a diagnostic.
    
    From-SVN: r227501

commit 6492499c11e581c4f8f63721e7289aad1c6bb776
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 4 20:36:59 2015 +0200

    re PR middle-end/67452 (LTO ICE with -fopenmp-simd)
    
            PR middle-end/67452
            * tree-ssa-live.c: Include cfgloop.h.
            (remove_unused_locals): Clear loop->simduid if simduid is about
            to be removed from cfun->local_decls.
    
            * gcc.dg/lto/pr67452_0.c: New test.
    
    From-SVN: r227499

commit d453a030a01b1da5c23615ae659949c12aad7acb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 4 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r227479

commit 29bc903be667fdc346720ad830f951d7e9310bc1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 23:12:00 2015 +0100

    shared_mutex (shared_timed_mutex::shared_timed_mutex): Replace throw with __throw_bad_alloc.
    
            * include/std/shared_mutex (shared_timed_mutex::shared_timed_mutex):
            Replace throw with __throw_bad_alloc.
    
    From-SVN: r227477

commit 962cbb8e8ac66c10e2eecfcacf52cb6a9d5bd442
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 16:10:52 2015 +0100

    Make std::experimental::not_fn SFINAE-friendly.
    
            PR libstdc++/66998
            * include/experimental/functional (_Not_fn): Add exception
            specifications and non-deduced return types.
            (not_fn): Add exception specification and wrap pointer-to-member.
            * testsuite/experimental/functional/not_fn.cc: Test in SFINAE context
            and test pointer-to-member.
    
    From-SVN: r227455

commit 1cb56a44c2d1c4cb0d3b4d6a93f31596ede27cf2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 16:10:42 2015 +0100

    Backport libstdc++/67374 fix from mainline
    
    2015-08-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/67374
            * include/bits/range_access.h (valarray, begin, end): Declare.
            * testsuite/26_numerics/valarray/range_access.cc: Test const
            overloads.
            * testsuite/26_numerics/valarray/range_access2.cc: New.
    
    From-SVN: r227454

commit 52b96de884a556b3ea38c488d1463af957ee6001
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 16:10:37 2015 +0100

    Backport atomic_futex.h warning fix from mainline
    
    2015-07-24  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/atomic_futex.h [_GLIBCXX_HAVE_LINUX_FUTEX]
            (_M_load_and_test_until): Whitespace.
            (_M_load_and_test): Value-initialize the unused durations.
            (_M_load_when_equal): Add missing return value.
    
    From-SVN: r227453

commit ca00e4fa5fa967ef340625a6f33db4b0c49533c0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 16:10:32 2015 +0100

    Backport PR libstdc++/66855 fix from mainline
    
    2015-07-13  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/66855
            * src/c++11/codecvt.cc (__codecvt_utf8_utf16_base::do_in): Override
            endianness bit in mode.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/66855.cc: New.
    
    From-SVN: r227452

commit 76bbbb4dc7b4a9b86100cf1c69bb76482ff0ed01
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 3 16:10:25 2015 +0100

    Backport fix for PR libstdc++/62258 from mainline
    
    2015-04-27  Dmitry Prokoptsev  <dprokoptsev@gmail.com>
                Michael Hanselmann  <public@hansmi.ch>
    
            PR libstdc++/62258
            * libsupc++/eh_ptr.cc (rethrow_exception): Increment count of
            uncaught exceptions.
            * testsuite/18_support/exception_ptr/62258.cc: New.
    
    From-SVN: r227451

commit cf1f2a9a271ae3dfc6d648ffc0084d85bdc7a4c7
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Sep 3 09:25:35 2015 +0000

    re PR ipa/66705 (section is missing linker error with -flto -fipa-pta)
    
    2015-09-03  Richard Biener  <rguenther@suse.de>
    
            PR ipa/66705
            * tree-ssa-structalias.c (ctor_for_analysis): New function.
            (create_variable_info_for_1): Use ctor_for_analysis instead
            of get_constructor.
            (create_variable_info_for): Likewise.
    
            * g++.dg/lto/pr66705_0.C: New testcase.
    
    From-SVN: r227431

commit 210ecb48d057239ff7bb53bae1e7ddf17b81289a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 3 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r227425

commit 51926fab48d0fe68ce11dbca0fb58722e8a216c1
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Wed Sep 2 18:13:35 2015 +0300

    PR 67414 Handle newlocale failure
    
    2015-09-02  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR libfortran/67414
            * runtime/error.c (gf_strerror): Handle newlocale() failure.
    
    From-SVN: r227406

commit e4770825f98317f9272a041ece7a03512ff79ced
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Sep 2 17:06:56 2015 +0200

    backport: re PR target/67317 ([x86] Silly code generation for _addcarry_u32/_addcarry_u64)
    
            Backport from mainline:
            2015-08-27  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/67317
            * config/i386/i386.md (*add<mode>3_cc): Remove insn pattern.
            (addqi3_cc): Ditto.
            (UNSPEC_ADD_CARRY): Remove.
            (addqi3_cconly_overflow): New expander.
            (*add<dwi>3_doubleword): Split to add<mode>3_cconly_overflow.
            Adjust for changed add<mode>3_carry.
            (*neg<dwi>2_doubleword): Adjust for changed add<mode>3_carry.
            (*sub<dwi>3_doubleword): Adjust for changed sub<mode>3_carry.
            (<plusminus_insn><mode>3_carry): Remove expander.
            (*<plusminus_insn><mode>3_carry): Split insn pattern to
            add<mode>3_carry and sub<mode>3_carry.
            (plusminus_carry_mnemonic): Remove code attribute.
            (add<mode>3_carry): Canonicalize insn pattern.
            (*addsi3_carry_zext): Ditto.
            (sub<mode>3_carry): Ditto.
            (*subsi3_carry_zext): Ditto.
            (adcx<mode>3): Remove insn pattern.
            (addcarry<mode>): New insn pattern.
            (subborrow<mode>): Ditto.
            * config/i386/i386.c (ix86_expand_strlensi_unroll_1): Use
            gen_addqi3_cconly_overflow instead of gen_addqi3_cc.
            (ix86_expand_builtin) <case IX86_BUILTIN_SBB32,
            case IX86_BUILTIN_SBB64, case IX86_BUILTIN_ADDCARRY32,
            case IX86_BUILTIN_ADDCARRY64>: Use CODE_FOR_subborrowsi,
            CODE_FOR_subborrowdi, CODE_FOR_addcarrysi and CODE_FOR_addcarrydi.
            Rewrite expander to not clobber carry flag chains.
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-08-27  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/67317
            * gcc.target/i386/pr67317-1.c: New test.
            * gcc.target/i386/pr67317-2.c: Ditto.
            * gcc.target/i386/pr67317-3.c: Ditto.
            * gcc.target/i386/pr67317-4.c: Ditto.
            * gcc.target/i386/adx-addcarryx32-1.c: Also scan for adcl.
            * gcc.target/i386/adx-addcarryx32-2.c: Also scan for adcq.
    
    From-SVN: r227405

commit 9383be4bb723b92bb9754382f456b16364ef2e6b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 2 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227393

commit bfeeaaf7852d8922e88dc3fdbee0e25e635c0b58
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Sep 2 08:34:58 2015 +0930

    [RS6000] Weak functions may not be file local
    
    A weak symbol defined in the current object file may not turn out to
    be the definition used at link time, if other copies of the symbol
    exist.  This means they can't be considered file local.
    
            PR target/67417
            * config/rs6000/predicates.md (current_file_function_operand): Don't
            return true for weak symbols.
            * config/rs6000/rs6000.c (rs6000_function_ok_for_sibcall): Likewise.
    
    From-SVN: r227387

commit bd58e8600a0f9ddea9070031e9a484c1d62e9d5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 1 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227358

commit 6e97171de4887892537ad941ed5eb9aaadda0148
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Aug 31 12:46:14 2015 +0000

    re PR middle-end/67005 (ICE: in verify_loop_structure, at cfgloop.c:1647 (loop with header n not in loop tree))
    
            PR middle-end/67005
            * tree-ssa-dce.c (remove_dead_stmt): Also schedule fixup if removing
            an entry into an irreducible region.
    
            * gcc.dg/torture/pr67005.c: New test.
    
    From-SVN: r227340

commit fcd8c481b6841ae0988e9ede27093044db8d1256
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 31 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r227328

commit a0a5231a42cd17e22ee24a8524f79a26975e9fe8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 30 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r227325

commit 424177ac14460ecfb777761f60009dcb292a3c8e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 29 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r227313

commit 65543da486e3502f6a88bb6d9e47521d16dcaead
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Fri Aug 28 15:03:26 2015 +0000

    [Patch] Add to the libgfortran/newlib bodge to "detect" ftruncate  support in ARM/AArch64/SH
    
            * configure.ac: Define HAVE_FTRUNCATE for ARM/AArch64/SH newlib
            builds.
            * configure: Regenerate.
    
    From-SVN: r227302

commit b9003316076bcf05739001c10cde7440f9246b62
Author: Tim Shen <timshen@google.com>
Date:   Fri Aug 28 03:03:55 2015 +0000

    backport: re PR libstdc++/67362 (std::regex("((.)", std::regex_constants::basic) throws)
    
            Backport from mainline
            2015-08-28  Tim Shen  <timshen@google.com>
    
            PR libstdc++/67362
            * include/bits/regex_scanner.tcc (_Scanner<>::_M_scan_normal):
            Always returns ordinary char token if the char isn't
            considered a special char.
            * testsuite/28_regex/regression.cc: New test file for collecting
            regression testcases from, typically, bugzilla.
    
    From-SVN: r227290

commit 3dcd43d5ca41686011493e2f255a6b2b645c83a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 28 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227287

commit c7de41376fbf33c2c6cd9f2b7945e110ced7d038
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Thu Aug 27 18:34:54 2015 +0000

    vector.md (vec_shr_<mode>): Fix to do a shift instead of a rotate.
    
            * config/rs6000/vector.md (vec_shr_<mode>): Fix to do a shift
            instead of a rotate.
    
            * gcc.target/powerpc/vec-shr.c: New.
    
    From-SVN: r227272

commit 9f62ecc77c08303681fe36e69c70c3ac4bae452c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 27 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227243

commit c50d3fa4cf3f056e99cc5d2a646be9024c960380
Author: Renlin Li <renlin.li@arm.com>
Date:   Wed Aug 26 13:49:00 2015 +0000

    [PATCH][ARM]Tighten the conditions for arm_movw, arm_movt.
    
    2015-08-26  Renlin Li  <renlin.li@arm.com>
    
            Backport from mainline
            2015-08-24  Renlin Li  <renlin.li@arm.com>
    
            * config/arm/arm-protos.h (arm_valid_symbolic_address_p): Declare.
            * config/arm/arm.c (arm_valid_symbolic_address_p): Define.
            * config/arm/arm.md (arm_movt): Use arm_valid_symbolic_address_p.
            * config/arm/constraints.md ("j"): Add check for high code.
    
    From-SVN: r227221

commit 742a9620d628e98ab9518542586ce857083a6e32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 26 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227205

commit 68d4549495e7a1dd78993031711354975e09c200
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Tue Aug 25 11:37:49 2015 +0000

    S390: Fix vec_load_bndry operand type
    
        Backport from mainline
    
        gcc/ChangeLog
        2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            * config/s390/s390-builtins.def: Fix value range of vec_load_bndry.
    
        gcc/testsuite/ChangeLog
        2015-08-21  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            * gcc.target/s390/zvector/vec-load_bndry-1.c: New test.
    
    From-SVN: r227166

commit 65dec4106435e959dd66cd65769c465dc8d55569
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 25 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227158

commit bc0d3872b228417a0ae37916859bc6fda8db7cf4
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Aug 24 19:11:02 2015 +0000

    re PR target/67211 (ICE (insn does not satisfy its constraints) on powerpc64le-linux-gnu)
    
    [gcc]
    2015-08-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/67211
            * config/rs6000/rs6000-cpus.def (ISA_2_7_MASKS_SERVER): Set
            -mefficient-unaligned-vsx on ISA 2.7.
    
            * config/rs6000/rs6000.opt (-mefficient-unaligned-vsx): Convert
            option to a masked option.
    
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Rework
            logic for -mefficient-unaligned-vsx so that it is set via an arch
            ISA option, instead of being set if -mtune=power8 is set. Move
            -mefficient-unaligned-vsx and -mallow-movmisalign handling to be
            near other default option handling.
    
    [gcc/testsuite]
    2015-08-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/67211
            * g++.dg/pr67211.C: New test.
    
    From-SVN: r227146

commit 78be3690e79eaa3f4f85c3d02f9ef95b472e5357
Author: Joost VandeVondele <vondele@gcc.gnu.org>
Date:   Mon Aug 24 12:17:07 2015 +0000

    re PR libgomp/66761 (libgomp: ThreadSanitizer: data race in libgomp)
    
            PR libgomp/66761
            PR libgomp/67303
            * iter.c (gomp_iter_dynamic_next): Employ an atomic load.
            (gomp_iter_guided_next): Idem.
            * iter_ull.c (gomp_iter_ull_dynamic_next): Idem.
            (gomp_iter_ull_guided_next): Idem.
            * config/linux/wait.h (do_spin): Idem.
    
    From-SVN: r227122

commit cf2dae784db4a587a1efcf36bd4eeda09bbc91f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 24 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r227109

commit 404287956424abd1fc44c123c703990992f755e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 23 00:16:17 2015 +0000

    Daily bump.
    
    From-SVN: r227100

commit 0c05da8d078f2c9e3cb77d29f056881bb1426a85
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 22 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227091

commit d7f1b909a2bab70e2613fcaf142a9a4eb67c6344
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 21 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r227047

commit 3146e2216a229558d464b77818146e5b8cbf28ec
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Thu Aug 20 14:15:30 2015 +0000

    avr.c (avr_insert_attributes): In diagnostic essage: Multiply argument avr_n_flash by 64 to match unit of "KiB".
    
            * config/avr/avr.c (avr_insert_attributes): In diagnostic essage:
            Multiply argument avr_n_flash by 64 to match unit of "KiB".
            (avr_pgm_check_var_decl): Same.
    
    From-SVN: r227034

commit 8ceafd4e576a07f57219a121fc3b62b289200329
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Aug 20 11:26:55 2015 +0100

    Makefile.am: Ensure gdb.py is installed for libstdc++ not libstdc++fs.
    
            * python/Makefile.am: Ensure gdb.py is installed for libstdc++ not
            libstdc++fs.
            * python/Makefile.in: Regenerate.
    
    From-SVN: r227029

commit e66b5f2bad1dd1138ec9ac22ce6d7f4747d95e6f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 20 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r227020

commit 011e84ccbb38f40ba9a62a877114d5fe166ad71e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 19 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226997

commit a66f79e1e1bea71a38fd733fbe57b3af96f75f8d
Author: Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>
Date:   Tue Aug 18 19:56:20 2015 +0000

    re PR libfortran/66936 (io/unix.c gratuitously uses S_IRWXG and S_IRWXO on the basis that umask() is available)
    
            PR libfortran/66936
            * io/unix.c (__MINGW32__): Undefine HAVE_UMASK.
    
    From-SVN: r226988

commit 526d05cc561e2dfac14df9b290f08eee1639f91f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 18 18:58:22 2015 +0100

    backport: acinclude.m4 (GLIBCXX_ENABLE_FILESYSTEM_TS, [...]): Define.
    
            Backport Filesystem TS from mainline
            * acinclude.m4 (GLIBCXX_ENABLE_FILESYSTEM_TS,
            GLIBCXX_CHECK_FILESYSTEM_DEPS): Define.
            * configure.ac: Use them.
            * configure: Regenerate.
            * config.h.in: Regenerate.
            * include/Makefile.am: Add filesystem headers. Fix order of headers.
            * include/Makefile.in: Regenerate.
            * include/bits/locale_conv.h (__do_str_codecvt, __str_codecvt_in,
            __str_codecvt_out, wstring_convert): Refactor to move all conversion
            logic to non-member functions.
            * include/bits/quoted_string.h (_Quoted_string, operator<<,
            operator>>): Move from <iomanip> to new header.
            * include/experimental/filesystem: New.
            * include/experimental/fs_dir.h: New.
            * include/experimental/fs_fwd.h: New.
            * include/experimental/fs_ops.h: New.
            * include/experimental/fs_path.h: New.
            * include/std/iomanip (_Quoted_string, operator<<, operator>>): Move
            to <bits/quoted_string.h>.
            * libstdcxx/v6/printers.py (StdExpPathPrinter): Define.
            * scripts/testsuite_flags.in: Add filesystem dir to ldflags.
            * src/Makefile.am: Add filesystem sub-dir.
            * src/Makefile.in: Regenerate.
            * src/filesystem/Makefile.am: New.
            * src/filesystem/Makefile.in: New.
            * src/filesystem/dir.cc: New.
            * src/filesystem/ops.cc: New.
            * src/filesystem/path.cc: New.
            * testsuite/experimental/filesystem/operations/absolute.cc: New.
            * testsuite/experimental/filesystem/operations/copy.cc: New.
            * testsuite/experimental/filesystem/operations/current_path.cc: New.
            * testsuite/experimental/filesystem/operations/exists.cc: New.
            * testsuite/experimental/filesystem/operations/file_size.cc: New.
            * testsuite/experimental/filesystem/operations/status.cc: New.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            New.
            * testsuite/experimental/filesystem/path/append/path.cc: New.
            * testsuite/experimental/filesystem/path/assign/assign.cc: New.
            * testsuite/experimental/filesystem/path/assign/copy.cc: New.
            * testsuite/experimental/filesystem/path/compare/compare.cc: New.
            * testsuite/experimental/filesystem/path/compare/path.cc: New.
            * testsuite/experimental/filesystem/path/compare/strings.cc: New.
            * testsuite/experimental/filesystem/path/concat/path.cc: New.
            * testsuite/experimental/filesystem/path/concat/strings.cc: New.
            * testsuite/experimental/filesystem/path/construct/copy.cc: New.
            * testsuite/experimental/filesystem/path/construct/default.cc: New.
            * testsuite/experimental/filesystem/path/construct/locale.cc: New.
            * testsuite/experimental/filesystem/path/construct/range.cc: New.
            * testsuite/experimental/filesystem/path/decompose/extension.cc: New.
            * testsuite/experimental/filesystem/path/decompose/filename.cc: New.
            * testsuite/experimental/filesystem/path/decompose/parent_path.cc:
            New.
            * testsuite/experimental/filesystem/path/decompose/relative_path.cc:
            New.
            * testsuite/experimental/filesystem/path/decompose/root_directory.cc:
            New.
            * testsuite/experimental/filesystem/path/decompose/root_name.cc: New.
            * testsuite/experimental/filesystem/path/decompose/root_path.cc: New.
            * testsuite/experimental/filesystem/path/decompose/stem.cc: New.
            * testsuite/experimental/filesystem/path/generic/generic_string.cc:
            New.
            * testsuite/experimental/filesystem/path/itr/traversal.cc: New.
            * testsuite/experimental/filesystem/path/modifiers/clear.cc: New.
            * testsuite/experimental/filesystem/path/modifiers/make_preferred.cc:
            New.
            * testsuite/experimental/filesystem/path/modifiers/remove_filename.cc:
            New.
            * testsuite/experimental/filesystem/path/modifiers/
            replace_extension.cc: New.
            * testsuite/experimental/filesystem/path/modifiers/replace_filename.cc:
            New.
            * testsuite/experimental/filesystem/path/modifiers/swap.cc: New.
            * testsuite/experimental/filesystem/path/nonmember/hash_value.cc:
            New.
            * testsuite/experimental/filesystem/path/query/empty.cc: New.
            * testsuite/experimental/filesystem/path/query/has_extension.cc: New.
            * testsuite/experimental/filesystem/path/query/has_filename.cc: New.
            * testsuite/experimental/filesystem/path/query/has_parent_path.cc:
            New.
            * testsuite/experimental/filesystem/path/query/has_relative_path.cc:
            New.
            * testsuite/experimental/filesystem/path/query/has_root_directory.cc:
            New.
            * testsuite/experimental/filesystem/path/query/has_root_name.cc: New.
            * testsuite/experimental/filesystem/path/query/has_root_path.cc: New.
            * testsuite/experimental/filesystem/path/query/has_stem.cc: New.
            * testsuite/experimental/filesystem/path/query/is_relative.cc: New.
            * testsuite/lib/dg-options.exp (dg-require-filesystem-ts): Define.
            * testsuite/lib/libstdc++.exp (check_v3_target_filesystem_ts): Define.
            * testsuite/util/testsuite_fs.h: New.
    
    From-SVN: r226983

commit 7872314f6a842fa0bc218663c4a2926566183fe2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 18 18:58:06 2015 +0100

    Makefile.in: Regenerate with automake-1.11.6.
    
            * Makefile.in: Regenerate with automake-1.11.6.
            * aclocal.m4: Likewise.
            * configure: Likewise.
            * doc/Makefile.in: Likewise.
            * include/Makefile.in: Likewise.
            * libsupc++/Makefile.in: Likewise.
            * po/Makefile.in: Likewise.
            * python/Makefile.in: Likewise.
            * src/Makefile.in: Likewise.
            * src/c++11/Makefile.in: Likewise.
            * src/c++98/Makefile.in: Likewise.
            * testsuite/Makefile.in: Likewise.
    
    From-SVN: r226982

commit d1a284842a31d6540f2214c9f8edee1d7eda1d1a
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Aug 18 10:44:06 2015 -0400

    re PR c++/66957 (incorrect "is protected within this context" error)
    
            PR c++/66957
            * search.c (protected_accessible_p): Revert fix for 38579.
    
    From-SVN: r226975

commit c6e3045ef5e3ef5dda3d1996c49b9a923f270290
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Aug 18 14:21:41 2015 +0200

    re PR rtl-optimization/67028 (combine bug. Different assumptions about subreg in different places.)
    
            PR rtl-optimization/67028
            * combine.c (simplify_comparison): Fix comment.  Rearrange code.
            Add test to see if a const_int fits in the new mode.
    
    gcc/testsuite/
            PR rtl-optimization/67028
            * gcc.dg/pr67028.c: New testcase.
    
    From-SVN: r226967

commit cc7749b6a3cd422a758dd116f8a57b35665f9c82
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 18 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r226960

commit 11fe3d96f65a44492902418efa20872a34c3816d
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon Aug 17 21:34:50 2015 +0000

    re PR c++/66919 (C++14 ICE during error reporting)
    
            PR c++/66919
            * pt.c (tsubst_copy): Pass complain to mark_used, check return value.
    
    From-SVN: r226955

commit f300cd40f5be754750ab0c0a777cb1b5a7a9a5a0
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Aug 17 14:42:26 2015 -0400

    re PR c++/67244 (internal compiler error: in gimplify_var_or_parm_decl, at gimplify.c:1801)
    
            PR c++/67244
            * pt.c (tsubst_copy_and_build): Call insert_pending_capture_proxies.
    
    From-SVN: r226951

commit a7b1d0b018d12761ced4f0b1fca43bc9f2a4d07f
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Aug 17 18:13:36 2015 +0100

    * da.po: Update.
    
    From-SVN: r226945

commit 0fe9267197b2553a94adad34f5ad1fdf0605b773
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Aug 17 11:44:35 2015 -0400

    re PR c++/65734 (Yet another case of lost alignment by stor_layout)
    
            PR c++/65734
    gcc/
            * stor-layout.c (layout_type): Layout the TYPE_MAIN_VARIANT.
            (finalize_type_size): Respect TYPE_USER_ALIGN.
            (layout_type) [ARRAY_TYPE]: Likewise.
    gcc/cp/
            * class.c (fixup_attribute_variants): Respect TYPE_USER_ALIGN.
    
    From-SVN: r226941

commit cc834e47b15f9d14af97190fc524d4473f7061fb
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Aug 17 11:44:29 2015 -0400

    re PR c++/67104 (Constant expression factory function initializes std::array with static storage duration strangely)
    
            PR c++/67104
            * constexpr.c (cxx_eval_array_reference): Handle sparse
            CONSTRUCTORs.
    
    From-SVN: r226940

commit 849380f91ddab3560342b4ddf3efe28d48e7151b
Author: Yvan Roux <yvan.roux@linaro.org>
Date:   Mon Aug 17 11:22:49 2015 +0000

    backport: re PR target/67127 ([ARM] Avoiding odd-number ldrd/strd in movdi introduced a regression on armeb-linux-gnueabihf)
    
    2015-08-17  Yvan Roux  <yvan.roux@linaro.org>
    
            Backport from mainline:
            2015-08-12  Yvan Roux  <yvan.roux@linaro.org>
    
            PR target/67127
            * config/arm/arm.md (movdi): Restrict illegitimate ldrd/strd checking
            to ARM core registers.
    
    From-SVN: r226937

commit ab96fbe535e47e2fe006a4274bf80c3051c7a216
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 17 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r226931

commit 68d0f891f652a51d6ba526a784183683f9274c7d
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Aug 16 19:50:20 2015 +0200

    backport: re PR target/66648 (incorrect memcpy expansion with unrolled_loop strategy at -O2)
    
            Backport from mainline:
            2015-07-25  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66648
            * config/i386/i386.c (ix86_expand_set_or_movmem): Emit main loop
            execution guard when min_size is less than size_needed.
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-07-25  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66648
            * gcc.target/i386/pr66648.c: New test.
    
    From-SVN: r226925

commit 0bd3fc5709e17f93b57f25af053b702c4d67a36b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 16 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r226914

commit c83eef0f316da8f2bb64bac40097768f5446bdbd
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Aug 15 03:59:39 2015 -0400

    re PR c++/65974 (Bogus deprecated-declarations warnings for inline definitions of deprecated virtual methods)
    
            PR c++/65974
            * decl2.c (mark_vtable_entries): Suppress -Wdeprecated.
    
    From-SVN: r226909

commit 350928bb23b95004da46332ad8574b40be3fd4fa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 15 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226906

commit fc4d877891ffa27d999fd566eb4c482924d7bad6
Author: Patrick Palka <ppalka@gcc.gnu.org>
Date:   Fri Aug 14 16:33:10 2015 +0000

    re PR c++/66857 (Reference not bound to lvalue)
    
    Fix PR c++/66857
    
    gcc/cp/ChangeLog:
    
            PR c++/66857
            * cvt.c (ocp_convert): Don't call scalar_constant_value when
            converting to a class type.
    
    gcc/testsuite/ChangeLog:
    
            PR c++/66857
            * g++.dg/init/pr66857.C: New test.
    
    From-SVN: r226897

commit 9f417ccd9b64de56f4acd4c96b92546669219243
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Fri Aug 14 11:34:26 2015 +0000

    inclhack.def (aix_stdio_inline): New fix.
    
    2015-08-14  David Edelsohn  <dje.gcc@gmail.com>
    
            * inclhack.def (aix_stdio_inline): New fix.
            (aix_strtof_const): Limit to *-*-aix*.
            (aix_sysmachine): Same.
            (aix_syswait_2): Same.
            (aix_volatile): Same.
            * fixincl.x: Regenerated.
            * test/base/stdio.h [AIX_STDIO_INLINE]: New test.
    
    From-SVN: r226892

commit 4425361077e05e6dbae93b39dd719e8838d19700
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Fri Aug 14 01:22:45 2015 +0000

    jit: on OS X, add -Wl,-undefined,dynamic_lookup to driver invocation
    
    2015-08-13  David Malcolm  <dmalcolm@redhat.com>
    
            Backport from mainline r226882
            2015-08-13  David Malcolm  <dmalcolm@redhat.com>
    
            * jit-playback.c (invoke_driver): On OS X, add
            "-Wl,-undefined,dynamic_lookup" to the driver arguments.
    
    From-SVN: r226883

commit 019fecaf226ff14b72338ea3cf071592445cd592
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 14 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226880

commit 8700102f9afc0db4e6dd605217f9a8ed23d1788b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 13 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226843

commit 6bf3d99c8a9bbd8334a7e993633abb6faf6f8be0
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Aug 12 14:05:49 2015 -0400

    re PR c++/67161 (ICE with a static_assert using our internal __not/__or/__and traits)
    
            PR c++/67161
            * error.c (dump_decl) [TEMPLATE_ID_EXPR]: Pass
            TFF_NO_OMIT_DEFAULT_TEMPLATE_ARGUMENTS.
    
    From-SVN: r226831

commit 4fd7aacb1bf00f64a31b72398db9b2b61e42a15c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 12 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r226797

commit b6452c6a87321dbd99d521a52d65e8477a8a441e
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Aug 11 15:46:56 2015 +0000

    re PR sanitizer/66908 (Uninitialized variable when compiled with UBsan)
    
            PR sanitizer/66908
            * c-ubsan.c: Include gimplify.h.
            (ubsan_instrument_division): Unshare OP0 and OP1.
            (ubsan_instrument_shift): Likewise.
    
            * c-c++-common/ubsan/pr66908.c: New test.
    
    From-SVN: r226782

commit cb1f396d013ed4f3950d228095146b64b2d9cd7b
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Aug 11 07:58:07 2015 +0000

    backport: re PR tree-optimization/66828 (gcc/tree-ssa-math-opts.c:2182:38: runtime error: left shift of 72057594037927936 by 8 places cannot be represented in type 'long int')
    
    2015-08-11  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2015-07-28  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR tree-optimization/66828
        * tree-ssa-math-opts.c (perform_symbolic_merge): Change type of inc
        from int64_t to uint64_t.
    
    From-SVN: r226775

commit 81d1c317d0b63350c4658165bc663f2a70b9fc9a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 11 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r226772

commit 57aa85babb6582f6d16851c7acfdea0d4917b5de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 10 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226753

commit 0981aad24d0e185772f8d0c862f7779e7c053e34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 9 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226745

commit 9a2dc7734db9eb7f99129a02b5aee0b9baf28a9d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 8 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226728

commit c288c31ef390878a25e66a9d1b5e9050e34804fe
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Fri Aug 7 20:41:25 2015 +0000

    re PR target/67002 ([5] [SH]: Bootstrap stage 2/3 comparison failure - gcc/real.o differs)
    
    PR target/67002
    * config/sh/sh.c (sh_recog_treg_set_expr): Return false during
    expand phase to avoid codegen differences with -g.
    
    From-SVN: r226726

commit 7072552f6c0c8f37f07ecdd974a3b189ef6c773a
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Fri Aug 7 14:45:03 2015 +0000

    Disable AVX-512VL insns for scalar mode operands on -march=knl.
    
    gcc/
            * config/i386/i386.md (define_attr "isa"): Addd avx512vl and
            noavx512vl.
            (define_attr "enabled"): Handle avx521vl and noavx512vl.
            * config/i386/sse.md (define_insn "vec_dupv2df<mask_name>"): Split
            AVX-512 alternative out of SSE.
            (define_insn "*vec_concatv2df"): Ditto.
    
    From-SVN: r226722

commit 39c3145c6dcfa84a7f898490707e96a0d6eb22f4
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Fri Aug 7 09:41:31 2015 +0000

    Fix latent elemental wrong code
    
            PR fortran/66929
    gcc/fortran/
            * trans-array.c (gfc_get_proc_ifc_for_expr): Use esym as procedure
            symbol if available.
    gcc/testsuite/
            PR fortran/66929
            * gfortran.dg/generic_30.f90: New.
            * gfortran.dg/generic_31.f90: New.
    
    From-SVN: r226717

commit cbb5c99257b42ea1083a79c054b989e7607477e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 7 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226704

commit bd7641a121877e5c1488a0ac9a0e51cf38ebc927
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Thu Aug 6 19:18:16 2015 +0000

    jit.dg/test-benchmark.c: add a summary of timings
    
    gcc/testsuite/ChangeLog
    2015-08-06  David Malcolm  <dmalcolm@redhat.com>
    
            Backport from trunk r226697:
            2015-08-06  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/test-benchmark.c (main): Record all elapsed times at each
            optimization level, and print a summary at the end.
    
    From-SVN: r226698

commit fb37b07b1e45f239077ff2250b37359d95cd03f1
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 6 12:36:58 2015 -0400

    re PR c++/66533 ([C++14] ICE: in dependent_type_p, at cp/pt.c:21073)
    
            PR c++/66533
            * parser.c (cp_parser_primary_expression): Don't skip to the end
            of the statement if we're parsing tentatively.
    
    From-SVN: r226685

commit 28298a3a5da4b59952b6539285cf1e2dbf19cd01
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 6 10:28:26 2015 -0400

    re PR c++/67130 (ICE: tree check: expected identifier_node, have template_decl in write_unqualified_id, at cp/mangle.c:1218)
    
            PR c++/67130
            PR c++/67131
            PR c++/66260
            * mangle.c (write_expression) [TEMPLATE_ID_EXPR]: Handle variable
            templates.
            * pt.c (tsubst_copy_and_build): Check for argument substitution
            failure.
    
    From-SVN: r226677

commit 479ee10c368d14dc9b7921addcdd6f70d2b38f90
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Thu Aug 6 00:10:45 2015 -0400

    fix ChangeLog
    
    From-SVN: r226658

commit 9abd7cc0c6363bbffb2260b502585376f1c7884d
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 6 00:10:01 2015 -0400

    re PR c++/66260 ([C++14] Failure to compile variable template with recursively defined partial specialization)
    
            PR c++/66260
            PR c++/66596
            PR c++/66649
            PR c++/66923
            * pt.c (lookup_template_variable): Use NULL_TREE for type.
            (instantiate_template_1): Also set DECL_TI_ARGS based on
            the immediate parent.
            (tsubst_copy_and_build) [TEMPLATE_ID_EXPR]: Handle variable templates.
            (finish_template_variable): Add complain parm.
            * cp-tree.h: Adjust.
    
    From-SVN: r226657

commit 48af185268fc17453a3795b74beaa3f452910d4b
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 6 00:09:55 2015 -0400

    re PR c++/65195 (Variable template cannot be used as a function)
    
            PR c++/65195
            PR c++/66619
            * semantics.c (finish_id_expression): Call convert_from_reference
            for variable template.
    
    From-SVN: r226656

commit 48cec51e145844e7066ef579d3416e839cad9331
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 6 00:09:49 2015 -0400

    re PR c++/66336 ([C++14][Variable templates] Spurious "error: expansion pattern contains no argument packs")
    
            PR c++/66336
            * pt.c (find_parameter_packs_r): Handle variable templates.
            (variable_template_specialization_p): New.
            * cp-tree.h: Declare it.
    
    From-SVN: r226655

commit 9ed3d024ca24efa408badcd7b87afec480d31dca
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Thu Aug 6 00:09:44 2015 -0400

    decl.c (start_decl): Don't push the plain VAR_DECL for a variable template.
    
            * decl.c (start_decl): Don't push the plain VAR_DECL for a
            variable template.
    
    From-SVN: r226654

commit c291f3bd53b1c1a3049dd6d4c4580f5ed3d6a6cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 6 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r226650

commit d935e511f2e4fdb0b0c6a5f68574f72811c93a08
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Wed Aug 5 16:15:40 2015 +0000

    Fix random class_allocate_18.f90 failure
    
            PR fortran/64921
    gcc/fortran/
            * class.c (generate_finalization_wrapper): Set finalization
            procedure symbol's always_explicit attribute.
    gcc/testsuite/
            * gfortran.dg/class_allocate_20.f90: New.
    
    From-SVN: r226636

commit 0d13484b5f7bef98776f96f4490b3d8bdb91adad
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 13:44:52 2015 +0000

    backport: armv8-sync-comp-swap.c: Replace 'do-require-effective-target' with 'dg-require-effective-target'.
    
            Backport from trunk:
            2015-07-01  Matthew Wahab  <matthew.wahab@arm.com>
    
            * gcc.target/arm/armv8-sync-comp-swap.c: Replace
            'do-require-effective-target' with 'dg-require-effective-target'.
            * gcc.target/arm/armv8-sync-op-full.c: Likewise.
            * gcc.target/arm/armv8-sync-op-release.c: Likewise.
            * gcc.target/arm/armv8-sync-op-acquire.c: Likewise.  Also, replace
            'stlex' with 'strex' as the expected output.
    
    From-SVN: r226629

commit 672908841626462da0b74b1099ced18c187a746f
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 13:43:04 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk:
            2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * gcc.target/arm/armv-sync-comp-swap.c: New.
            * gcc.target/arm/armv-sync-op-acquire.c: New.
            * gcc.target/arm/armv-sync-op-full.c: New.
            * gcc.target/arm/armv-sync-op-release.c: New.
    
    From-SVN: r226628

commit 9c2822fd8d7eb2c2d170b7ae06b91ef8459a96a1
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 13:40:14 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk:
            2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * config/arm/arm.c (arm_split_compare_and_swap): For ARMv8,
            replace an initial acquire barrier with final barrier.
    
    From-SVN: r226627

commit 4264cefdbd81108d2b70e583b3c9439364c5ebd5
Author: Matthew Wahab <mwahab@gcc.gnu.org>
Date:   Wed Aug 5 13:35:05 2015 +0000

    ChangeLog: Fix typo in last entry.
    
            * ChangeLog: Fix typo in last entry.
    
    From-SVN: r226626

commit 1ab6cd0dc68d0495a295fafa73f6f3b24db45128
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 13:27:41 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk:
            2015-06-29  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * config/armc/arm.c (arm_split_atomic_op): For ARMv8, replace an
            initial acquire barrier with final barrier.
    
    From-SVN: r226625

commit f95a1eaddeb4daf7438f4d97f38d596d2f92f22f
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 11:48:43 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk
            2015-06-01  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * gcc.target/aarch64/sync-comp-swap.c: New.
            * gcc.target/aarch64/sync-comp-swap.x: New.
            * gcc.target/aarch64/sync-op-acquire.c: New.
            * gcc.target/aarch64/sync-op-acquire.x: New.
            * gcc.target/aarch64/sync-op-full.c: New.
            * gcc.target/aarch64/sync-op-full.x: New.
            * gcc.target/aarch64/sync-op-release.c: New.
            * gcc.target/aarch64/sync-op-release.x: New.
    
    From-SVN: r226621

commit e26540668533f1f204462690c7a7a330e62b1df1
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 11:40:25 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk.
            2015-06-01  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * config/aarch64/aarch64.c (aarch64_split_compare_and_swap): Check
            for __sync memory models, emit initial loads and final barriers as
            appropriate.
    
    From-SVN: r226620

commit ad7fa5e7f5d9fb1b6f3d380b78e539928050443d
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 11:29:28 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk.
            2015-06-01  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/65697
            * config/aarch64/aarch64.c (aarch64_emit_post_barrier): New.
            (aarch64_split_atomic_op): Check for __sync memory models, emit
            appropriate initial loads and final barriers.
    
    From-SVN: r226619

commit ed201891b82077787b1443e082b873d1c1333a26
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Wed Aug 5 11:20:59 2015 +0000

    backport: re PR target/65697 (__atomic memory barriers not strong enough for __sync builtins)
    
            Backport from trunk
            2015-05-12  Andrew MacLeod  <amacleod@redhat.com>
    
            PR target/65697
            * coretypes.h (MEMMODEL_SYNC, MEMMODEL_BASE_MASK): New macros.
            (enum memmodel): Add SYNC_{ACQUIRE,RELEASE,SEQ_CST}.
            * tree.h (memmodel_from_int, memmodel_base, is_mm_relaxed)
            (is_mm_consume,is_mm_acquire, is_mm_release, is_mm_acq_rel)
            (is_mm_seq_cst, is_mm_sync): New accessor functions.
            * builtins.c (expand_builtin_sync_operation)
            (expand_builtin_compare_and_swap): Use MEMMODEL_SYNC_SEQ_CST.
            (expand_builtin_sync_lock_release): Use MEMMODEL_SYNC_RELEASE.
            (get_memmodel,  expand_builtin_atomic_compare_exchange)
            (expand_builtin_atomic_load, expand_builtin_atomic_store)
            (expand_builtin_atomic_clear): Use new accessor routines.
            (expand_builtin_sync_synchronize): Use MEMMODEL_SYNC_SEQ_CST.
            * optabs.c (expand_compare_and_swap_loop): Use MEMMODEL_SYNC_SEQ_CST.
            (maybe_emit_sync_lock_test_and_set): Use new accessors and
            MEMMODEL_SYNC_ACQUIRE.
            (expand_sync_lock_test_and_set): Use MEMMODEL_SYNC_ACQUIRE.
            (expand_mem_thread_fence, expand_mem_signal_fence, expand_atomic_load)
            (expand_atomic_store): Use new accessors.
            * emit-rtl.c (need_atomic_barrier_p): Add additional enum cases.
            * tsan.c (instrument_builtin_call): Update check for memory model beyond
            final enum to use MEMMODEL_LAST.
            * c-family/c-common.c: Use new accessor for memmodel_base.
            * config/aarch64/aarch64.c (aarch64_expand_compare_and_swap): Use new
            accessors.
            * config/aarch64/atomics.md (atomic_load<mode>,atomic_store<mode>)
            (arch64_load_exclusive<mode>, aarch64_store_exclusive<mode>)
            (mem_thread_fence, *dmb): Likewise.
            * config/alpha/alpha.c (alpha_split_compare_and_swap)
            (alpha_split_compare_and_swap_12): Likewise.
            * config/arm/arm.c (arm_expand_compare_and_swap)
            (arm_split_compare_and_swap, arm_split_atomic_op): Likewise.
            * config/arm/sync.md (atomic_load<mode>, atomic_store<mode>)
            (atomic_loaddi): Likewise.
            * config/i386/i386.c (ix86_destroy_cost_data, ix86_memmodel_check):
            Likewise.
            * config/i386/sync.md (mem_thread_fence, atomic_store<mode>): Likewise.
            * config/ia64/ia64.c (ia64_expand_atomic_op): Add new memmodel cases and
            use new accessors.
            * config/ia64/sync.md (mem_thread_fence, atomic_load<mode>)
            (atomic_store<mode>, atomic_compare_and_swap<mode>)
            (atomic_exchange<mode>): Use new accessors.
            * config/mips/mips.c (mips_process_sync_loop): Likewise.
            * config/pa/pa.md (atomic_loaddi, atomic_storedi): Likewise.
            * config/rs6000/rs6000.c (rs6000_pre_atomic_barrier)
            (rs6000_post_atomic_barrier): Add new cases.
            (rs6000_expand_atomic_compare_and_swap): Use new accessors.
            * config/rs6000/sync.md (mem_thread_fence): Add new cases.
            (atomic_load<mode>): Add new cases and use new accessors.
            (store_quadpti): Add new cases.
            * config/s390/s390.md (mem_thread_fence, atomic_store<mode>): Use new
            accessors.
            * config/sparc/sparc.c (sparc_emit_membar_for_model): Use new accessors.
            * doc/extend.texi: Update docs to indicate 16 bits are used for memory
            model, not 8.
    
    From-SVN: r226618

commit 8bfe54772f6d80f4845813ab292aa4aea8e23c1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 5 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226600

commit a3135633169546c3f24a984580bd4f694153178a
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Aug 4 22:04:04 2015 +0000

    backport: syscall: Add ioctl consts from if_tun.h
    
    Backport from mainline:
    
        syscall:  Add ioctl consts from if_tun.h
    
        During the gccgo build define constants from
        some header files are processed by mksysinfo.sh and
        added to syscall.go.  In some cases the constants
        are based on macros which are not processed
        correctly by mksysinfo.sh.  This adds the support
        to generate the correct values for the TUN* constants
        from linux/if_tun.h.
    
        Fixes golang/go#11707
    
        Reviewed-on: https://go-review.googlesource.com/12491
    
        syscall:  Fix to libgo/mksysinfo.sh
    
        In a recent change to mksysinfo.sh, a space was missing on
        some lines which caused the libgo build to hang on some
        systems.  This corrects that problem.
    
        Fixes golang/go#11924
    
        Reviewed-on: https://go-review.googlesource.com/12835
    
        syscall:  RawSockaddr fix for ppc64, ppc64le
    
        The struct RawSockaddr contains a field Data which
        should be uint8 on ppc64 and ppc64le, but is declared
        as int8 in gccgo.  This change adds a two new files
        which contain the structure declaration for
        RawSockaddr, one with the correct types for for ppc64
        and ppc64le, and the other for non-ppc64 platforms.
    
        Fixes golang/go#11469
    
        Reviewed-on: https://go-review.googlesource.com/11946
    
    From-SVN: r226595

commit f4fe3625a1a01c95905746754879a62412b3a381
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Aug 4 17:00:35 2015 +0000

    fnmul-1.c: Fix whitespace.
    
    2015-08-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * gcc.target/aarch64/fnmul-1.c: Fix whitespace.
            * gcc.target/aarch64/fnmul-2.c: Likewise.
            * gcc.target/aarch64/fnmul-3.c: Likewise.
            * gcc.target/aarch64/fnmul-4.c: Likewise.
    
    From-SVN: r226590

commit f1b2806114d9ff55b9b64832a9c1bd15b39dbcce
Author: Szabolcs Nagy <nsz@gcc.gnu.org>
Date:   Tue Aug 4 16:49:54 2015 +0000

    Fix broken backport patch.
    
    gcc:
    
            Backport from mainline:
            2015-08-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * config/aarch64/aarch64.c (aarch64_rtx_costs): Fix NEG cost for FNMUL.
            (aarch64_rtx_mult_cost): Fix MULT cost with -frounding-math.
    
    From-SVN: r226588

commit a255348141dc534a673f0a82ef626680f92c059a
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Aug 4 16:43:46 2015 +0000

    backport: re PR target/66731 (vnmul, fnmul patterns incorrect for -frounding-math)
    
    gcc:
    
            Backport from mainline:
            2015-08-04  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * config/aarch64/aarch64.c (aarch64_rtx_costs): Fix NEG cost for FNMUL.
            (aarch64_rtx_mult_cost): Fix MULT cost with -frounding-math.
    
            2015-07-06  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * config/aarch64/aarch64.md (fnmul<mode>3): Handle -frounding-math.
    
    gcc/testsuite:
    
            Backport from mainline r225450:
            2015-07-06  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * gcc.target/aarch64/fnmul-1.c: New.
            * gcc.target/aarch64/fnmul-2.c: New.
            * gcc.target/aarch64/fnmul-3.c: New.
            * gcc.target/aarch64/fnmul-4.c: New.
    
    From-SVN: r226587

commit d3f686e2dbf89d02908f26329b6bdaf10adfd753
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Aug 3 21:17:31 2015 -0500

    backport: htm-tabort-no-r0.c: New test.
    
    gcc/
            Backport from mainline:
            2015-08-03  Peter Bergner  <bergner@vnet.ibm.com>
    
            * gcc.target/powerpc/htm-tabort-no-r0.c: New test.
    
    gcc/testsuite/
    
            Backport from mainline:
            2015-08-03  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/htm.md (tabort.): Restrict the source operand to
            using a base register.
    
    From-SVN: r226541

commit 9035eee473fdcb573b43b6482dbebdc50141d245
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 4 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226537

commit c4d5d88cb2990acd48e0da6635394e713d09d905
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Aug 3 17:29:22 2015 +0000

    re PR target/67060 (FAIL: gcc.dg/pr56228.c (test for excess errors))
    
            PR target/67060
            * config/pa/pa.md (call_reg_64bit): Remove reg:DI 1 clobber.
            Adjust splits to match new pattern.
    
    From-SVN: r226523

commit eae9245c9dd5a6a476d4887aee66e762223fb691
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Aug 3 17:17:51 2015 +0000

    re PR fortran/66942 (trans-expr.c:5701 runtime error: member call on null pointer of type 'struct vec')
    
    2015-08-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66942
            * trans-expr.c (gfc_conv_procedure_call): Avoid NULL pointer reference
    
    From-SVN: r226521

commit 561e3f1ea52c1f9803429fb3dc286c3fd9411168
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Mon Aug 3 14:27:43 2015 +0000

    Backport form mainline r226496.
    
    gcc:
    
            Backport form mainline r226496.
            2015-08-03  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * config/arm/vfp.md (negmuldf3_vfp): Add new pattern.
            (negmulsf3_vfp): Likewise.
            (muldf3negdf_vfp): Disable for -frounding-math.
            (mulsf3negsf_vfp): Likewise.
            * config/arm/arm.c (arm_new_rtx_costs): Fix NEG cost for VNMUL,
            fix MULT cost with -frounding-math.
    
    gcc/testsuite:
    
            Backport form mainline r226496.
            2015-08-03  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66731
            * gcc.target/arm/vnmul-1.c: New.
            * gcc.target/arm/vnmul-2.c: New.
            * gcc.target/arm/vnmul-3.c: New.
            * gcc.target/arm/vnmul-4.c: New.
    
    From-SVN: r226507

commit 17ae0816f97f9ea7b43f47257c8cf5e0be7b356a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 3 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226482

commit f3abce3a8f2bd8faa93c27c4874a7811e37da16a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 2 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226467

commit 6b711d86bedb1c1fd614f89bc0e30da1562b5f51
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 1 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r226461

commit ac1e9d74214447772c84fbcbab473fb30c0d0358
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Fri Jul 31 22:25:57 2015 +0000

    re PR target/67049 (sh64-elf: internal compiler error: in df_uses_record, at df-scan.c:3001)
    
    PR target/67049
    * config/sh/sh.md (GOTaddr2picreg): Fix typo added with the last change.
    
    From-SVN: r226458

commit 4eb07f8dc4371fb54d3ccb8551be55f830b338d8
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Fri Jul 31 13:52:09 2015 +0000

    re PR debug/66691 (ICE on valid code at -O3 with -g enabled in simplify_subreg, at simplify-rtx.c:5744)
    
    2015-07-31  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR debug/66691
            * lra-int.h (lra_substitute_pseudo): Add a parameter.
            (lra_substitute_pseudo_within_insn): Ditto.
            * lra.c (lra_substitute_pseudo): Add a parameter.  Simplify subreg
            of constant.
            (lra_substitute_pseudo_within_insn): Add a parameter.  Transfer it
            to lra_substitute_pseudo.
            * lra-lives.c (process_bb_lives): Add an argument to
            lra_substitute_pseudo_within_insn call.
            * lra-constraints.c (inherit_reload_reg, split_reg): Add an
            argument to lra_substitute_pseudo and
            lra_substitute_pseudo_within_insn calls.
            (remove_inheritance_pseudos, undo_optional_reloads): Ditto.
    
    2015-07-31  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR debug/66691
            * gcc.target/i386/pr66691.c: New.
    
    From-SVN: r226442

commit ccb8799ff19c2afbdc6a6e7f547a010719bdeda6
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Jul 31 01:49:36 2015 +0100

    * sv.po: Update.
    
    From-SVN: r226426

commit 1f46037c26a13a81f457caa2d3d0e885c132483d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Jul 31 01:48:21 2015 +0100

    * sv.po: Update.
    
    From-SVN: r226424

commit 3f870124d36b0f363f6a012e16aba1249039c8b5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 31 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226421

commit e2912040d05cee88df19dd0545f8c41859e00037
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Jul 30 09:16:31 2015 +0200

    * ChangeLog: Fix ChangeLog entry.
    
    From-SVN: r226385

commit 5d84b3d071993dbc7702329d4a09b6cd24924ae0
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 30 01:48:40 2015 -0400

    DR 1558 PR c++/67021
    
            DR 1558
            PR c++/67021
            * pt.c (tsubst_decl) [TYPE_DECL]: Clear TYPE_DEPENDENT_P_VALID.
    
    From-SVN: r226383

commit b9ebbb971e3842e95c59b5572b004157e94df578
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 30 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226376

commit 996e635f5b6ef5ad4ff7fd92fc91e0381bec5f03
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jul 29 19:12:28 2015 +0200

    re PR libfortran/66650 (libgfortran: warning: left shift of negative value [-Wshift-negative-value])
    
            PR libgfortran/66650
            * libgfortran.h (GFC_DTYPE_SIZE_MASK): Rewrite to avoid
            "left shift of negative value" warning.
    
    From-SVN: r226357

commit 451a8615e677ab84d8a9c2c1275fdef06f04084b
Author: Tim Shen <timshen@google.com>
Date:   Wed Jul 29 04:30:25 2015 +0000

    backport: re PR libstdc++/67015 ("^[a-z0-9][a-z0-9-]*$", std::regex::extended is miscompiled)
    
            Backport from mainline
            2015-07-29  Tim Shen  <timshen@google.com>
    
            PR libstdc++/67015
            * include/bits/regex_compiler.h (_Compiler<>::_M_expression_term,
            _BracketMatcher<>::_M_add_collating_element): Change signature
            to make checking the and of bracket expression easier.
            * include/bits/regex_compiler.tcc (_Compiler<>::_M_expression_term):
            Treat '-' as a valid literal if it's at the end of bracket expression.
            * testsuite/28_regex/algorithms/regex_match/cstring_bracket_01.cc:
            New testcases.
    
    From-SVN: r226337

commit e0695c5378f7fc85d99440455f75f46fd2c0a74c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 29 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226333

commit 0c6194e657378c15d5ffa569ac4622919cd4c50a
Author: Alex Velenko <Alex.Velenko@arm.com>
Date:   Tue Jul 28 17:20:56 2015 +0000

    backport: split-live-ranges-for-shrink-wrap.c (dg-skip-if): Skip -march=armv4t.
    
    gcc/testsuite/
    
            backport from trunk:
            2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>
    
            * gcc.target/arm/split-live-ranges-for-shrink-wrap.c (dg-skip-if):
            Skip -march=armv4t.
            (dg-additional-options): Set armv5t flag.
    
    From-SVN: r226315

commit d47d3afb0c130838bce63b29b5f52067118f56e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 28 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226293

commit ac0ea30d875ef9509e60a43837f40d4bc1535af7
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Jul 27 19:53:53 2015 +0000

    * ipa-devirt.c (types_same_for_odr): Fix typo.
    
    From-SVN: r226268

commit adc589eb0e1a05a4b79f93485143612b6f14799c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 27 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r226239

commit 36dfa27861c9dfbafaed77af13fb12a643039088
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 26 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r226230

commit f311ff8a5242743986b8a6d297137d667c9a1c8d
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Sat Jul 25 18:51:23 2015 +0000

    Fix gfortran.dg/class_to_type_4.f90 deallocation code misordering failure
    
            PR fortran/64986
    gcc/fortran/
            * trans-expr.c (gfc_trans_assignment_1): Put component deallocation
            code at the beginning of the block.
    
    From-SVN: r226224

commit eafbc02c6e3f8e9eddc56674de1f3e94d90f6d97
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Jul 25 14:13:48 2015 +0000

    backport: re PR target/66930 (gengtype.c is miscompiled during stage2)
    
    gcc/
            Backport from mainline
            2015-07-25  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/66930
            * config/sh/sh.c (sh_split_movrt_negc_to_movt_xor): Add missing
            T bit register modified_between_p check.
    
    From-SVN: r226219

commit b5efcb7f3346f181657462641d605b31bfb0a172
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sat Jul 25 08:33:05 2015 +0000

    Don't allow unsafe reductions in graphite
    
    2015-07-24  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2015-07-25  Tom de Vries  <tom@codesourcery.com>
    
            * gcc.dg/graphite/graphite.exp: Include uns-*.c files in
            interchange_files and block_files variables.
            * gcc.dg/graphite/uns-block-1.c (main): Change signed into unsigned
            arithmetic.
            * gcc.dg/graphite/uns-interchange-12.c: Same.
            * gcc.dg/graphite/uns-interchange-14.c: Same.
            * gcc.dg/graphite/uns-interchange-15.c: Same.
            * gcc.dg/graphite/uns-interchange-9.c (foo): Same.
            * gcc.dg/graphite/uns-interchange-mvt.c: Same.
    
            2015-07-24  Tom de Vries  <tom@codesourcery.com>
    
            * graphite-sese-to-poly.c (is_reduction_operation_p): Limit
            flag_associative_math to FLOAT_TYPE_P.  Honour
            TYPE_OVERFLOW_WRAPS for INTEGRAL_TYPE_P. Don't allow any other types.
    
            * gcc.dg/graphite/block-1.c: Xfail scan.
            * gcc.dg/graphite/interchange-12.c: Same.
            * gcc.dg/graphite/interchange-14.c: Same.
            * gcc.dg/graphite/interchange-15.c: Same.
            * gcc.dg/graphite/interchange-9.c: Same.
            * gcc.dg/graphite/interchange-mvt.c: Same.
            * gcc.dg/graphite/uns-block-1.c: New test.
            * gcc.dg/graphite/uns-interchange-12.c: New test.
            * gcc.dg/graphite/uns-interchange-14.c: New test.
            * gcc.dg/graphite/uns-interchange-15.c: New test.
            * gcc.dg/graphite/uns-interchange-9.c: New test.
            * gcc.dg/graphite/uns-interchange-mvt.c: New test.
    
    From-SVN: r226210

commit 134b7ebd415c8a6861abf57a9e0a10c6b85f32e4
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Sat Jul 25 01:24:27 2015 +0000

    re PR target/65249 (unable to find a register to spill in class 'R0_REGS' when compiling protobuf on sh4)
    
    PR target/65249
    * config/sh/sh.md (movdi): Split simple reg move to two movsi when
      the destination is R0 so as to lower R0-register pressure.
    
    From-SVN: r226200

commit 11e4a111b7d6741aab66dd850b65bc84afd5ebdf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 25 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226198

commit f72e7c39c6f2410de86f197ec10c029f1816ad53
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Jul 24 17:44:53 2015 +0100

    * nl.po: Update.
    
    From-SVN: r226178

commit a7cb36984fc374859548e2f13fd3ffcc875546e2
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Jul 24 17:42:15 2015 +0100

    be.po, [...]: Update.
    
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
            * uk.po: New file.
    
    From-SVN: r226176

commit 01f20456151393c9ec708348e951721502ef0f59
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Fri Jul 24 16:02:46 2015 +0000

    backport: aarch64-elf-raw.h (LINK_SPEC): Handle -h, -static, -shared, -symbolic, -rdynamic.
    
            Backport from mainline r226159.
            2015-07-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * config/aarch64/aarch64-elf-raw.h (LINK_SPEC): Handle -h, -static,
            -shared, -symbolic, -rdynamic.
    
    From-SVN: r226166

commit a214707f5ccfed0bc83c17cabf806949fe6e0392
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Fri Jul 24 16:00:26 2015 +0000

    backport: re PR target/65711 (arm*-linux* "link" spec passes '-dynamic-linker' even for '-shared')
    
            Backport from mainline r226158.
            2015-07-24  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/65711
            * config/aarch64/aarch64-linux.h (LINUX_TARGET_LINK_SPEC): Move
            -dynamic-linker within %{!static %{!shared, and -rdynamic within
            %{!static.
    
    From-SVN: r226165

commit 64ebd323a3d03319368def7ed8f3e9fc3401361d
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Fri Jul 24 13:25:06 2015 +0000

    backport: re PR ipa/66566 ([CHKP] ICE in early_inliner: internal compiler error: in operator[], at vec.h:714)
    
    gcc/
    
            Backport from mainline r226155.
            2015-07-24  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR ipa/66566
            * ipa-inline-analysis.c (estimate_calls_size_and_time): Check
            edge summary is available.
    
    gcc/testsuite/
    
            Backport from mainline r226155.
            2015-07-24  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR ipa/66566
            * gcc.target/i386/mpx/pr66566.c: New test.
    
    From-SVN: r226156

commit 557c3cad101af91ec68886855f452f333784f844
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Fri Jul 24 00:47:10 2015 +0000

    jit: supply MULTILIB_DEFAULTS as arguments when invoking driver
    
    gcc/jit/ChangeLog:
    2015-07-23  David Malcolm  <dmalcolm@redhat.com>
    
            Backport from mainline r226126
            2015-07-23  David Malcolm  <dmalcolm@redhat.com>
    
            * jit-playback.c (invoke_driver): Convert local "argvec"
            to an auto_argvec, so that it owns copies of the strings,
            rather than borrows them, updating ADD_ARG to use xstrdup
            and special-casing the NULL terminator to avoid
            xstrdup (NULL).  Call add_multilib_driver_arguments at the front
            of the arguments.
            (MULTILIB_DEFAULTS): Provide a default definition.
            (multilib_defaults_raw): New constant array.
            (gcc::jit::playback::context::add_multilib_driver_arguments): New
            method.
            * jit-playback.h
            (gcc::jit::playback::context::add_multilib_driver_arguments): New
            method.
            * docs/internals/test-hello-world.exe.log.txt: Update.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
    
    From-SVN: r226133

commit c6e74092eb184137f6f92aae3ef8ca5ea41d390c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 24 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226131

commit 41a29f7120d43df77315e94c7dafc5c40da8e3e8
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Jul 23 20:51:56 2015 +0200

    backport: re PR rtl-optimization/66891 (ICE in expand_call, at calls.c:3407)
    
            Backport from mainline:
            2015-07-17  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/66891
            * calls.c (expand_call): Wrap precompute_register_parameters with
            NO_DEFER_POP/OK_DEFER_POP to prevent deferred pops.
    
            2015-07-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/58066
            * config/i386/i386.md (*tls_global_dynamic_64_<mode>): Depend on SP_REG.
            (*tls_local_dynamic_base_64_<mode>): Ditto.
            (*tls_local_dynamic_base_64_largepic): Ditto.
            (tls_global_dynamic_64_<mode>): Update expander pattern.
            (tls_local_dynamic_base_64_<mode>): Ditto.
    
            2015-07-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/58066
            * calls.c (expand_call): Precompute register parameters before stack
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-07-17  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66891
            * gcc.target/i386/pr66891.c: New test.
    
    From-SVN: r226119

commit 8ce2b6b9c4efdcd14c1d6ede5ddbc3033fdb821e
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu Jul 23 18:14:00 2015 +0200

    backport: ipa-prop.h (param_aa_status): Rename to ipa_param_aa_status.
    
    2015-07-23  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline r225867.
            2015-07-16  Martin Jambor  <mjambor@suse.cz>
    
            * ipa-prop.h (param_aa_status): Rename to ipa_param_aa_status.  Adjust
            all uses.  Fix two typos in its general comment.
            (func_body_info): Rename to ipa_func_body_info.  Adjust all uses.
    
    From-SVN: r226115

commit 77fde3d8643b137cf29797fdfa248544e7b09c5f
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu Jul 23 18:09:56 2015 +0200

    backport: re PR ipa/66760 (compile time regression in IPA inline analysis on PR26854 testcase)
    
    2015-07-23  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline r225838.
            2015-07-15  Paolo Bonzini  <bonzini@gnu.org>
                        Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/66760
            * ipa-inline-analysis.c (unmodified_parm_or_parm_agg_item): Accept
            struct func_body_info* instead of struct ipa_node_params*, expecting
            fbi->info to be filled in.  Replace throughout.  Adjust call to
            ipa_load_from_parm_agg.
            (set_cond_stmt_execution_predicate): Accept struct func_body_info*
            instead of struct ipa_node_params*.  Adjust calls to other functions
            so that they pass either fbi or fbi->info.
            (set_switch_stmt_execution_predicate): Likewise.
            (will_be_nonconstant_predicate): Likewise.
            (compute_bb_predicates): Likewise.
            (estimate_function_body_sizes): Move asserts earlier.  Fill in
            struct func_body_info, replace parms_info with fbi.info.  Adjust
            calls to functions that now accept struct func_body_info.
            * ipa-prop.c (param_aa_status, struct ipa_bb_info): Move to ipa-prop.h.
            (struct func_body_info): Likewise.
            (ipa_load_from_parm_agg_1): Rename to ipa_load_from_parm_agg,
            remove static.  Adjust callers.
            (ipa_load_from_parm_agg): Remove.
            * ipa-prop.h (param_aa_status, ipa_bb_info): Move from ipa-prop.c.
            (func_body_info): Likewise.
            (ipa_load_from_parm_agg): Adjust prototype.
    
    From-SVN: r226114

commit 824259633542572d842da6551d540e1fb5c5ede1
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Jul 23 13:21:39 2015 +0000

    backport: PR middle-end/pr66581
    
    gcc/
    
            Backport from mainline r224643.
            2015-06-19  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/pr66581
            * tree-chkp.c (chkp_compute_bounds_for_assignment): Don't
            reuse bounds created for abnormal ssa names.
    
    gcc/testsuite/
    
            Backport from mainline r224643.
            2015-06-19  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/pr66581
            * gcc.target/i386/mpx/pr66581.c: New test.
    
    From-SVN: r226108

commit a329ae719a6cd5b6b3c4348423667c8ebc767167
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Jul 23 10:44:19 2015 +0000

    backport: re PR target/66569 ([CHKP] internal compiler error: in assign_by_spills)
    
    gcc/
    
            Backport from mainline r224602.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR target/66569
            * function.c (assign_bounds): Add arguments assign_regs,
            assign_special, assign_bt.
            (assign_parms): For vararg functions handle bounds in BT
            and special slots after incoming vararg bounds.
    
    gcc/testsuite/
    
            Backport from mainline r224602.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR target/66569
            * gcc.target/i386/mpx/chkp-vararg.c: New test.
    
    From-SVN: r226102

commit 0669aef647a8bf210e5fdc236fdbaca5d7f776e9
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Jul 23 10:39:26 2015 +0000

    backport: re PR middle-end/66568 ([CHKP] internal compiler error: in expand_expr_addr_expr_1)
    
    gcc/
    
            Backport from mainline r224601.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66568
            * cfgexpand.c (expand_return): Handle missing bounds.
            (expand_gimple_stmt_1): Likewise.
            * tree-chkp.c (chkp_expand_zero_bounds): New.
            * tree-chkp.h (chkp_expand_zero_bounds): New.
    
    gcc/testsuite/
    
            Backport from mainline r224601.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66568
            * gcc.target/i386/mpx/pr66568.c: New test.
    
            Backport from mainline r225296.
            2015-07-01  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/mpx/pr66568.c (exit): New prototype.
    
    From-SVN: r226101

commit 8c0c2f6f9c44f4d336d9b509189c550f6b4e0488
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Jul 23 10:34:48 2015 +0000

    backport: re PR middle-end/66567 ([CHKP] internal compiler error: in assign_parms)
    
    gcc/
    
            Backport from mainline r224600.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66567
            * ipa-chkp.c (chkp_maybe_create_clone): Require
            functions to be instrumentable.
            * tree-chkp.c (chkp_replace_function_pointer): Use
            chkp_instrumentable_p instead of attribute check.
    
    gcc/testsuite/
    
            Backport from mainline r224600.
            2015-06-18  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66567
            * gcc.target/i386/mpx/pr66567.c: New test.
    
    From-SVN: r226100

commit 88d42896012ced199cb656fb089b56cddae2e8e6
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu Jul 23 10:22:21 2015 +0000

    backport: re PR middle-end/66134 ([CHKP] ICE: Unable to coalesce ssa_names 18 and 17 which are marked as MUST COALESCE)
    
    gcc/
    
            Backport from mainline r223215.
            2015-05-15  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66134
            * tree-chkp.c (chkp_get_orginal_bounds_for_abnormal_copy): New.
            (chkp_maybe_copy_and_register_bounds): Don't copy abnormal copy.
    
    gcc/testsuite/
    
            Backport from mainline r223215.
            2015-05-15  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66134
            * gcc.target/i386/mpx/pr66134.c: New test.
    
    From-SVN: r226099

commit 2426efdbeb4733d043e142f7b1a8a9e3f6ceafb0
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Thu Jul 23 10:19:03 2015 +0000

    backport: re PR rtl-optimization/66048 ([i386] ICE in create_pre_exit when both AVX and MPX are used)
    
    gcc/
    
            Backport from mainline r223114.
            2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR target/66048
            * function.c (diddle_return_value_1): Process bounds first.
            * config/i38/i386.c (ix86_function_value_regno_p): Add bnd1
            register.
    
    gcc/testsuite/
    
            Backport from mainline r223114.
            2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR target/66048
            * gcc.target/i386/mpx/pr66048.cc: New.
    
    From-SVN: r226098

commit 6c1352a48c1fd2885f08c8c5c2cd4ba482680cf5
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Thu Jul 23 10:09:10 2015 +0000

    backport: ipa-chkp.h (chkp_wrap_function): New.
    
    gcc/
    
            Backport from mainline r223216.
            2015-05-15  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * ipa-chkp.h (chkp_wrap_function): New.
            * ipa-chkp.c (chkp_wrap_function): Remove 'static'.
            (chkp_wrap_function_name): New.
            (chkp_build_instrumented_fndecl): Use chkp_wrap_function_name
            to get wrapper name.
            * lto-cgraph.c: Include ipa-chkp.h.
            (input_cgraph_1): Avoid alias chain for wrappers.
    
    gcc/testsuite/
    
            Backport from mainline r223216.
            2015-05-15  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * gcc.dg/lto/chkp-wrap-asm-name_0.c: New.
    
    From-SVN: r226096

commit dc25b06c1e3fe6a9e4b3abed0f8d1d1f776d72f8
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Thu Jul 23 10:00:04 2015 +0000

    backport: ipa-chkp.c (chkp_maybe_create_clone): Create alias reference when cloning alias node.
    
    gcc/
    
            Backport from mainline r224074.
            2015-06-03  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * ipa-chkp.c (chkp_maybe_create_clone): Create alias
            reference when cloning alias node.
    
    gcc/testsuite/
    
            Backport from mainline r224074.
            2015-06-03  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * gcc.dg/lto/chkp-removed-alias_0.c: New.
    
    From-SVN: r226095

commit faf9b1f8aad25be641d4ffb36ed4e900098c1b41
Author: Chung-Lin Tang <cltang@codesourcery.com>
Date:   Thu Jul 23 09:03:33 2015 +0000

    backport: linux-atomic.c (<asm/unistd.h>): Remove #include.
    
    2015-07-23  Chung-Lin Tang  <cltang@codesourcery.com>
    
            Backport from mainline:
            2015-07-22  Chung-Lin Tang  <cltang@codesourcery.com>
    
            libgcc/
            * config/nios2/linux-atomic.c (<asm/unistd.h>): Remove #include.
            (EFAULT,EBUSY,ENOSYS): Delete unused #defines.
    
    From-SVN: r226093

commit e00b8d49a1b1e7c3db015042cabec2ec950c7230
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 23 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226083

commit ababd3ba06a7e8461ae8cc2b66a785c9acd9c569
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 22 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r226056

commit b90eb3b74ea3220fdfeba98baceae02c7fa77ced
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jul 21 17:29:47 2015 +0000

    backport: re PR target/66956 ([avr] Using 32*32=64 multiplicatiion (umulsidi3) for 32=32*32 without MUL.)
    
            Backport from 2015-07-21 trunk r226046.
            PR target/66956
            * config/avr/avr-dimode.md (<extend_u>mulsidi3_insn)
            (<extend_u>mulsidi3): Don't use if !AVR_HAVE_MUL.
    
    From-SVN: r226047

commit af20aa4193e9fcfd177331ad75c84f35960721f4
Author: Alex Velenko <Alex.Velenko@arm.com>
Date:   Tue Jul 21 14:45:17 2015 +0000

    backport: thumb-bitfld1.c (foo): Add explicit return type.
    
    2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>
    
            Backport from mainline:
            2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>
    
            * gcc.target/arm/thumb-bitfld1.c (foo): Add explicit return type.
    
    From-SVN: r226044

commit 4bb2288c98836b391aa6dd95d3b1e0499db172cf
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jul 21 14:04:12 2015 +0000

    re PR tree-optimization/66948 (Performance regression in bit manipulation code)
    
    2015-07-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66948
            * genmatch.c (capture_info::walk_match): Also recurse to
            captures.  Properly compute expr state from captures of
            captures.
    
    From-SVN: r226042

commit 88a8c3064efb813df0242e81222e3a89e08373a5
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Tue Jul 21 12:36:06 2015 +0200

    re PR fortran/66035 (gfortran ICE segfault)
    
    gcc/fortran/ChangeLog:
    
    2015-07-21  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/66035
            * trans-expr.c (alloc_scalar_allocatable_for_subcomponent_assignment):
            Compute the size to allocate for class and derived type objects
            correclty.
            (gfc_trans_subcomponent_assign): Only allocate memory for a
            component when the object to assign is not an allocatable class
            object (the memory is already present for allocatable class objects).
            Furthermore use copy_class_to_class for assigning the rhs to the
            component (may happen for dummy class objects on the rhs).
    
    
    gcc/testsuite/ChangeLog:
    
    2015-07-21  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/66035
            * gfortran.dg/structure_constructor_13.f03: New test.
    
    From-SVN: r226037

commit 39243d3a88df72e44c5497d026a4f70a4400fe3c
Author: Alex Velenko <Alex.Velenko@arm.com>
Date:   Tue Jul 21 10:09:37 2015 +0000

    backport: thumb1-far-jump-2.c (r4): Added int in definition.
    
    2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>
    
            Backport from mainline:
            2015-05-20  Alex Velenko  <Alex.Velenko@arm.com>
    
            * gcc.target/arm/thumb1-far-jump-2.c (r4): Added int in definition.
    
    From-SVN: r226034

commit 3283062f73eddfcabf26af196c3c22261f53bfd4
Author: Alex Velenko <Alex.Velenko@arm.com>
Date:   Tue Jul 21 09:52:42 2015 +0000

    backport: thumb-ltu.c (foo): Predefined.
    
    2015-07-21  Alex Velenko  <Alex.Velenko@arm.com>
    
            Backport from mainline:
            2015-06-01  Alex Velenko  <Alex.Velenko@arm.com>
    
            * gcc.target/arm/thumb-ltu.c (foo): Predefined.
            (bar): Predefined.
    
    From-SVN: r226031

commit 5809b9e699fd363c59ab3e56588358a2ea39e06f
Author: Mantas Mikaitis <mantas.mikaitis@arm.com>
Date:   Tue Jul 21 09:48:59 2015 +0000

    [ARM][testsuite] Fix FAIL: gcc.target/arm/macro_defs0.c and macro_defs1.c when -marm forced
    
    On behalf of Mantas Mikaitis
    2015-07-21  Mantas Mikaitis  <mantas.mikaitis@arm.com>
    
            * gcc.target/arm/macro_defs0.c: Add directive to skip
            test if -marm is present.
            * gcc.target/arm/macro_defs1.c: Likewise.
    
    From-SVN: r226030

commit f04079055d251f62fce1b746d92b7168f9d60d00
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 21 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r226025

commit 1dd5386c7314af43bd3dbb267e931028c1d0ec75
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 20 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r225991

commit 97ccea3b79b3a250455d629d94f8d40cac356ecf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 19 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r225986

commit 03911a01d06b6ad061097e95db93546408d0e5f7
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Jul 18 13:17:49 2015 +0200

    re PR target/66922 (wrong code for bit-field struct at -O1 and above on x86_64-linux-gnu)
    
            PR target/66922
            * config/i386/i386.c (ix86_expand_pinsr): Reject insertions
            to misaligned positions.
    
    testsuite/ChangeLog:
    
            PR target/66922
            * gcc.target/i386/pr66922.c: New test.
    
    From-SVN: r225981

commit 43d06be66253fa7042df2dd582c0ab48468db871
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 18 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225977

commit 2c878a9d7c0e7c642e63d1d819b19ef91f083a83
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Fri Jul 17 20:30:03 2015 +0000

    coarray_collectives_16.f90: Fix patterns as follow-up to r225932.
    
    
    gcc/testsuite/
            * gfortran.dg/coarray_collectives_16.f90: Fix patterns
            as follow-up to r225932.
    
    From-SVN: r225969

commit 6bb2fafca5790071d4fae59ae4199f8950eb3bc8
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Jul 17 22:25:09 2015 +0200

    re PR target/66866 (incorrect load address on manual vector shuffle)
    
            PR target/66866
            * config/i386/i386.c (ix86_expand_pinsr): Reject non-lowpart
            source subregs.
    
    testsuite/ChangeLog:
    
            PR target/66866
            * g++.dg/pr66866.C: New test.
    
    From-SVN: r225968

commit 99fb41b53e4812f3e2b03264610769dbef25dc4f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Jul 17 18:30:53 2015 +0200

    backport: re PR target/66703 ([4.9/5/6] gcc.target/i386/readeflags-1.c aborts on -march=i586 or on -miamcu)
    
            Backport from mainline:
            2015-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66703
            * gcc.target/i386/readeflags-1.c (readeflags_test): Declare with
            __attribute__((noinline, noclone)).  Change "x" to "volatile char"
            type to prevent possible flag-clobbering zero-extensions.
            * gcc.target/i386/pr66703.c: New test.
    
    From-SVN: r225941

commit ecec5c5d143f23b5d667adc11ca8212fa262f79a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Jul 17 18:27:58 2015 +0200

    backport: re PR target/66814 (ICE: gcc.target/i386/avx512f-klogic-2.c)
    
            Backport from mainline:
            2015-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/sse.md (movdi_to_sse): Use gen_lowpart
            and gen_higpart instead of gen_rtx_SUBREG.
            * config/i386/i386.md
            (floatdi<X87MODEF:mode>2_i387_with_xmm splitter): Ditto.
            (read-modify peephole2): Use gen_lowpart instead of
            gen_rtx_SUBREG for operand 5.
    
            Backport from mainline:
            2015-07-08  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66814
            * config/i386/predicates.md (nonimmediate_gr_operand): New predicate.
            * config/i386/i386.md (not peephole2): Use nonimmediate_gr_operand.
            (varous peephole2s): Use {GENERAL,SSE,MMX}_REGNO_P instead of
            {GENERAL,SSE,MMX}_REG_P where appropriate.
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-07-09  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66814
            * gcc.target/i386/pr66814.c: New test.
    
    From-SVN: r225940

commit 7d41952b1c1a3bdcae0f84790e63d63e2d9d9cc3
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Jul 17 15:50:38 2015 +0200

    backport: re PR rtl-optimization/66838 (Calling multiple SYSV AMD64 ABI functions from MS x64 ABI one results in clobbered parameters)
    
            Backport from mainline:
            2015-07-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/66838
            * postreload.c (reload_cse_move2add): Also process
            CALL_INSN_FUNCTION_USAGE when resetting information of
            call-clobbered registers.
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-07-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/66838
            * gcc.target/i386/pr66838.c: New test.
    
    From-SVN: r225935

commit 0a35647cf1589ebe3fbc8e062e194da5ba43e44a
Author: Alessandro Fanfarillo <fanfarillo.gcc@gmail.com>
Date:   Fri Jul 17 07:33:09 2015 -0600

    Fix fortran double address operator with co_reduce
    
    gcc/fortran/
    2015-07-17  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>
    
            * trans-intrinsic.c (conv_co_collective): Remove redundant address
            operator in the generated code.
    
    gcc/testsuite/
    2015-07-17  Alessandro Fanfarillo  <fanfarillo.gcc@gmail.com>
    
            * gfortran.dg/co_reduce_1.f90: New file.
    
    From-SVN: r225932

commit 9224540f8d495ccfa0b236564ceb0a0670c023df
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Jul 17 00:31:45 2015 +0000

    re PR fortran/66724 (ICE on input/output statements with wrong specifier data)
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66724
            PR fortran/66725
            * io.c (is_char_type): Call gfc_resolve_expr().
            (match_open_element, match_dt_element, match_inquire_element): Fix
            ASYNCHRONOUS case.
    
    From-SVN: r225917

commit acfd6640e9d6de6804948b7716c53d240282dec9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 17 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225915

commit 7f9844d49211d28486fb3f17930c4be5014b4251
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jul 16 19:22:38 2015 +0000

    re PR fortran/66864 (floor function error)
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66864
            * simplify.c (gfc_simplify_floor): Set precision of temporary to
            that of arg.
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66864
            * gfortran.dg/pr66864.f90: New test.
    
    From-SVN: r225903

commit b550b73a6f03424b8a2085f14b067b297191eb2c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jul 16 19:03:05 2015 +0000

    re PR fortran/66545 (ICE on using undefined parameter/variable values)
    
    2015-07-16  Steven G. Kargl   <kargl@gcc.gnu.org>
    
            PR fortran/66545
            * primary.c (match_sym_complex_part): Do not dereference NULL pointer.
    
    2015-07-16  Steven G. Kargl   <kargl@gcc.gnu.org>
    
            PR fortran/66545
            * gfortran.dg/pr66545_1.f90: New test.
            * gfortran.dg/pr66545_2.f90: New test.
    
    From-SVN: r225901

commit 5f4521202ac04908c19d1892fa5fd2a541f950a1
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jul 16 18:44:56 2015 +0000

    re PR fortran/56520 (Syntax error causes misleading message: "Invalid character in name")
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56520
            * match.c (gfc_match_name): Special case unary minus and plus.
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56520
            * gfortran.dg/pr56520.f90: New test.
    
    From-SVN: r225900

commit 9851f954f6d53539924857df98f9321586c6669f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jul 16 18:34:06 2015 +0000

    io.c (check_char_variable): New function.
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            * io.c (check_char_variable): New function.
            (match_open_element, match_close_element, match_file_element,
            match_dt_element, match_inquire_element, match_wait_element): Use it.
    
    2015-07-16  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            * gfortran.dg/iomsg_2.f90: New test.
    
    From-SVN: r225899

commit 39ff5c277ffcdf57c330b95cd763b333a39d8e7d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jul 16 18:21:22 2015 +0000

    re PR fortran/66725 (Issue with silent conversion int to char, ICE if int too large)
    
    2015-07-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66725
            * io.c (is_char_type): New function to test for BT_CHARACTER
            (gfc_match_open, gfc_match_close, match_dt_element): Use it.
    
    
    2015-07-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66725
            * gfortran.dg/pr66725.f90: New test.
    
    From-SVN: r225898

commit e8eb110d0ddf36f523830fe917971dcefeb95f54
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jul 16 16:53:08 2015 +0200

    re PR ipa/66896 (ipa-prop.c:2479 runtime error: member call on null pointer of type 'struct ipa_polymorphic_call_context')
    
    Fix PR ipa/66896.
    
            * g++.dg/ipa/pr66896.c: New test.
            PR ipa/66896.
            * ipa-prop.c (update_jump_functions_after_inlining): Create properly
            dst_ctx if it does not exist.
    
    From-SVN: r225888

commit 2c313d596bac397b2c3b5a2d3d6109ad1104df3a
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Jul 16 13:25:25 2015 +0000

    re PR c++/66748 (Crash with abi_tag attribute)
    
            PR c++/66748
            * tree.c (handle_abi_tag_attribute): Check for CLASS_TYPE_P before
            accessing TYPE_LANG_SPECIFIC node.
    
            * g++.dg/abi/abi-tag15.C: New test.
    
    From-SVN: r225877

commit b3ff7d2a65b46f8da120cb16f00d1d2834908b32
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 16 09:26:50 2015 +0000

    BASE-VER: Set to 5.2.1.
    
    2015-07-16  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 5.2.1.
    
    From-SVN: r225866

commit 0c1af5b6fde830146e5003b018ebabd2095533f4
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Thu Jul 16 09:13:40 2015 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r225864

commit 9f4c7a0b77edd290fab3ec6981ddc2200f620cb6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 16 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225854

commit 9a3e57325a094edf4ce9acf9ecb05d0bb09186ff
Author: Renlin Li <renlin.li@arm.com>
Date:   Wed Jul 15 15:13:36 2015 +0000

    [PATCH]Fix PR66556.
    
    [PATCH]Fix PR66556. Don't drop side-effect in
    simplify_const_relational_operation function.
    
    gcc/
    
            Backport from mainline.
            2015-07-13  Renlin Li  <renlin.li@arm.com>
    
            PR rtl/66556
            * simplify-rtx.c (simplify_const_relational_operation): Add
            side_effects_p checks.
    
    gcc/testsuite/
    
            Backport from mainline.
            2015-07-13  Renlin Li  <renlin.li@arm.com>
    
            PR rtl/66556
            * gcc.c-torture/execute/pr66556.c: New.
    
    From-SVN: r225835

commit 6789218b36157b4fc56977195ca56b08643185d8
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Wed Jul 15 13:55:13 2015 +0200

    [PR libgomp/65099] nvptx offloading: only 64-bit configurations are currently supported
    
    Backport trunk r225560:
    
            PR libgomp/65099
            gcc/
            * config/nvptx/mkoffload.c (main): Create an offload image only in
            64-bit configurations.
            libgomp/
            * plugin/plugin-nvptx.c (nvptx_get_num_devices): Return 0 if not
            in a 64-bit configuration.
            * testsuite/libgomp.oacc-c++/c++.exp: Don't attempt nvidia
            offloading testing if no such device is available.
            * testsuite/libgomp.oacc-c/c.exp: Likewise.
            * testsuite/libgomp.oacc-fortran/fortran.exp: Likewise.
    
    From-SVN: r225824

commit 8033f58aff8892dd060bfba3ec4c6f2264ee2478
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Wed Jul 15 13:55:07 2015 +0200

    [PR libgomp/65099] nvptx mkoffload: pass "-m32" or "-m64" to the compiler
    
    ... depending on "-foffload-abi=[...]".
    
    Coding style/code copied from gcc/config/i386/intelmic-mkoffload.c for
    consistency.
    
    Backport trunk r222583:
    
            gcc/
            * config/nvptx/mkoffload.c (target_ilp32): New variable.
            (main): Set it depending on "-foffload-abi=[...]".
            (compile_native, main): Use it to pass "-m32" or "-m64" to the
            compiler.
    
    From-SVN: r225823

commit 02b9e8f24e56b8e670ed17992713d6d9565ca9fe
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Wed Jul 15 13:55:00 2015 +0200

    [PR libgomp/65742, PR middle-end/66332] OpenACC acc_on_device fixes
    
    Backport trunk r223801:
    
        PR libgomp/65742
    
        gcc/
        * builtins.c (expand_builtin_acc_on_device): Don't use open-coded
        sequence for !ACCEL_COMPILER.
    
        libgomp/
        * oacc-init.c (plugin/plugin-host.h): Include.
        (acc_on_device): Check whether we're in an offloaded region for
        host_nonshm
        plugin. Don't use __builtin_acc_on_device.
        * plugin/plugin-host.c (GOMP_OFFLOAD_openacc_parallel): Set
        nonshm_exec flag in thread-local data.
        (GOMP_OFFLOAD_openacc_create_thread_data): Allocate thread-local
        data for host_nonshm plugin.
        (GOMP_OFFLOAD_openacc_destroy_thread_data): Free thread-local data
        for host_nonshm plugin.
        * plugin/plugin-host.h: New.
    
    Mark parameters with ATTRIBUTE_UNUSED
    
    Backport trunk r223805:
    
            * builtins.c (expand_builtin_acc_on_device): Mark parameters
            with ATTRIBUTE_UNUSED.
    
    [PR libgomp/65742, PR middle-end/66332] XFAIL acc_on_device compile-time evaluation
    
    The OpenACC 2.0a specification mandates differently, but we currently do get a
    library call in the host code.
    
    Backport trunk r224028:
    
            PR libgomp/65742
            PR middle-end/66332
    
            gcc/testsuite/
            * c-c++-common/goacc/acc_on_device-2.c: XFAIL for C, too.
    
    From-SVN: r225822

commit 231ff5dde169bd57b1dcc9bd75282eb5dc3dd180
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Wed Jul 15 10:00:23 2015 +0300

    PR 66861 Fix null pointer crash on mingw.
    
    2015-07-15  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR libfortran/66861
            * io/unix.c (compare_file_filename): Verify that u->filename is
            non-NULL before strcmp.
            (find_file0): Likewise.
    
    From-SVN: r225805

commit 91282bad369c97042bf653935a71ae3a5444b744
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 15 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225803

commit e80789a8bceb288f21da230e895ee967f33ba494
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Jul 14 14:04:07 2015 +0000

    syscall: remove calls to Entersyscall & Exitsyscall in Getdents
    
        The syscall for Getdents in syscall/libcall_linux.go
        called Entersyscall and Exitsyscall, causing the
        runtime_sched counts for goroutines to be incorrect.
        Inconsistent counts caused checkdead in runtime/proc.c
        to panic.
    
        Fixes golang/go#11406
    
        Reviewed-on: https://go-review.googlesource.com/11761
    
    From-SVN: r225773

commit 6e028d318a8d9e0ec701eb72c96dbb5082473d8e
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue Jul 14 13:47:21 2015 +0000

    re PR target/66840 (plugins fail to build on powerpc64le-linux-gnu)
    
    2015-07-14  Matthias Klose  <doko@ubuntu.com>
    
            PR target/66840
            * config/rs6000/t-rs6000 (TM_H): Add rs6000-cpus.def.
    
    From-SVN: r225771

commit 425e55ca2304f7707304fe26049af13314136919
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 14 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225754

commit 1a3b2a54eaa0e8323ae1f5f5ba55edc2d4516a3a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 13 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r225724

commit 5adbd08a0118fbbb2cd5362ea6ec61c56362ce22
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 12 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225717

commit 0df9d149df9e61290aca05f287a330529a1b6eff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 11 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225708

commit 9bb2fbd9b3b9203a8f8a8eca3763aef3d75ebee8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jul 10 16:14:18 2015 +0200

    re PR middle-end/66820 (internal compiler error: in get_expr_operands, at tree-ssa-operands.c:910)
    
            PR middle-end/66820
            * gimplify.c (maybe_fold_stmt): Don't fold in ORT_PARALLEL
            or ORT_TASK contexts.
            * omp-low.c (lower_omp): Call fold_stmt even if taskreg_nesting_level
            is non-zero.
    
            * gcc.dg/gomp/pr66820.c: New test.
    
    From-SVN: r225678

commit cc3df8e0f7486aca7205c2a110e953c0662bf5d8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jul 10 16:13:19 2015 +0200

    backport: re PR middle-end/66633 (ICE on valid "verify_gimple failed" with OpenMP)
    
            Backported from mainline
            2015-07-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/66633
            * tree-nested.c (get_static_chain): Or in a flag into
            info->static_chain_added.
            (get_frame_field, get_nonlocal_debug_decl): Likewise.
            (convert_nonlocal_omp_clauses, convert_local_omp_clauses): Revert
            2015-07-01 changes.
            (convert_tramp_reference_stmt): If a frame_decl or chain_decl
            is needed newly inside of GIMPLE_OMP_{PARALLEL,TASK,TARGET} body,
            add it to clauses.
    
            * gcc.dg/gomp/pr66633-1.c: New test.
            * gcc.dg/gomp/pr66633-2.c: New test.
            * gcc.dg/gomp/pr66633-3.c: New test.
            * gcc.dg/gomp/pr66633-4.c: New test.
    
    From-SVN: r225677

commit 5b0d01a9610e772cccbd23c8d64442daccdd697c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jul 10 16:12:20 2015 +0200

    backport: c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses are to be removed, return NULL rather than original clauses list.
    
            Backported from mainline
            2015-07-08  Jakub Jelinek  <jakub@redhat.com>
    
            * c-omp.c (c_omp_declare_simd_clauses_to_numbers): If all clauses
            are to be removed, return NULL rather than original clauses list.
    
            * decl.c (grokfndecl): Handle flag_openmp_simd like flag_openmp.
            * pt.c (apply_late_template_attributes): Likewise.
    
            * g++.dg/vect/vect.exp: Run also simd* tests.
            * gcc.dg/vect/tree-vect.h (abort, exit): For C++ use extern "C".
            (check_vect): Fix up get_cpuid call for C++.
            * g++.dg/vect/simd-clone-1.cc: New test.
    
    From-SVN: r225676

commit a0243c42bd810bafcca433fa953199745e612ed3
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Fri Jul 10 13:17:02 2015 +0000

    backport: re PR rtl-optimization/66782 (Unable to run 64-bit wine after MS->SYSV register changes)
    
    2015-07-10  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backport from mainline
            2015-07-09  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR rtl-optimization/66782
            * lra-int.h (struct lra_insn_recog_data): Add comment about
            clobbered hard regs for arg_hard_regs.
            * lra.c (lra_set_insn_recog_data): Add clobbered hard regs.
            * lra-lives.c (process_bb_lives): Process clobbered hard regs.
            Add condition for processing used hard regs.
            * lra-constraints.c (update_ebb_live_info, inherit_in_ebb):
            Process clobbered hard regs.
    
    From-SVN: r225674

commit 58218cb3791f7cfce2800c2e072ea5cb429681ba
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Jul 10 12:52:26 2015 +0000

    sv.po: Update.
    
    2015-07-10  Richard Biener  <rguenther@suse.de>
    
            * sv.po: Update.
            * de.po: Likewise.
    
    From-SVN: r225672

commit d6f9f3c43c5f6e9b57825b9f8df643214f34ed27
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Jul 10 12:33:28 2015 +0000

    backport: [multiple changes]
    
    2015-07-10  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-07-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66823
            * tree-if-conv.c (memrefs_read_or_written_unconditionally): Fix
            inverted predicate.
    
            * gcc.dg/vect/pr61194.c: Remove -ftree-loop-if-convert-stores
            which should not be necessary.  XFAIL.
    
            2015-07-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/43341
            * toplev.c (compile_file): Reset maximum_field_alignment after parsing.
    
            2015-07-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66794
            * gimple-ssa-isolate-paths.c (gimple_ssa_isolate_erroneous_paths):
            Free post-dominators.
    
            * gcc.dg/torture/pr66794.c: New testcase.
    
    From-SVN: r225671

commit 64451c1bfdf2bbd643b17b08a3386592b72ef94f
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Fri Jul 10 09:50:18 2015 +0000

    re PR target/66780 (Compiling with -fstack-protector-strong causes binary to segfault)
    
    PR target/66780
    * config/sh/sh.md (symGOT_load): Revert a part of 2015-03-03
    change for target/65249.
    
    From-SVN: r225660

commit f60dd97eb3d1bf21bf62c9d4131288c157803825
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 10 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225645

commit eeaf1f1132594032276fdaf048181fc9c489482e
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Thu Jul 9 17:50:58 2015 +0000

    re PR target/66523 (the new clang-based assembler in Xcode 7 on 10.11 fails on libobjc/NXConstStr.m)
    
    2015-07-09  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/66523
            * config/darwin.c (darwin_mark_decl_preserved): Exclude 'L' label names from
            preservation.
    
    From-SVN: r225623

commit d817f818092b02b313e3a7a2c1f454788f7677cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 9 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225589

commit 9a3454c9bf615bd8169091ebf03b89e0a96f18eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 8 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r225529

commit c6d62fd4847bc4711bf2e111f3fec9d675ed5c28
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 7 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225500

commit c960d5cea8e597e9aabe292cbbdf43a209a30a60
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 6 19:37:50 2015 +0200

    Backport r225466: tests from 'Fix eipa_src AAPCS issue (PR target/65956)'
    
    2015-05-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/65956
            * gcc.c-torture/execute/pr65956.c: New test.
    
    From-SVN: r225470

commit bd486542e9ffaa741f8be93174cd8cf4058d3210
Author: Alan Lawrence <alan.lawrence@arm.com>
Date:   Mon Jul 6 17:32:07 2015 +0000

    backport: re PR target/65956 (Another ARM overaligned arg passing issue)
    
    2015-07-06  Alan Lawrence  <alan.lawrence@arm.com>
    
            Backport from mainline r225465
            2015-07-06  Alan Lawrence  <alan.lawrence@arm.com>
    
    gcc/:
    
            PR target/65956
            * config/arm/arm.c (arm_needs_doubleword_align): Drop any outer
            alignment attribute, exploring one level down for records and arrays.
    
    gcc/testsuite/:
    
            * gcc.target/arm/aapcs/align1.c: New.
            * gcc.target/arm/aapcs/align_rec1.c: New.
            * gcc.target/arm/aapcs/align2.c: New.
            * gcc.target/arm/aapcs/align_rec2.c: New.
            * gcc.target/arm/aapcs/align3.c: New.
            * gcc.target/arm/aapcs/align_rec3.c: New.
            * gcc.target/arm/aapcs/align4.c: New.
            * gcc.target/arm/aapcs/align_rec4.c: New.
            * gcc.target/arm/aapcs/align_vararg1.c: New.
            * gcc.target/arm/aapcs/align_vararg2.c: New.
    
    From-SVN: r225469

commit 1faf0ef6b5a5a0c86c91ce6b43daa7c15d2e84be
Author: Alan Lawrence <alan.lawrence@arm.com>
Date:   Mon Jul 6 17:18:40 2015 +0000

    backport: arm.md (movdi): Avoid odd-number ldrd/strd in ARM state.
    
    2015-07-06  Alan Lawrence  <alan.lawrence@arm.com>
    
            Backport from mainline r225461
            2015-07-06  Alan Lawrence  <alan.lawrence@arm.com>
    
            * config/arm/arm.md (movdi): Avoid odd-number ldrd/strd in ARM state.
    
    From-SVN: r225467

commit c9a1aa7d00534c8728db8095e4e91751bab6619e
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Jul 6 02:07:49 2015 +0000

    backport: re PR target/65914 (error: unrecognizable insn)
    
    [gcc]
    
    2015-07-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r224725
            2015-06-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65914
            * config/rs6000/predicates.md (altivec_register_operand): Permit
            virtual stack registers.
            (vsx_register_operand): Likewise.
            (vfloat_operand): Likewise.
            (vint_operand): Likewise.
            (vlogical_operand): Likewise.
    
    [gcc/testsuite]
    
    2015-07-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r224725
            2015-06-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65914
            * g++.dg/torture/pr65914.C:  New.
    
    From-SVN: r225441

commit 6d6f353b528c120aedf0e42369abebf4a51055cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 6 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225439

commit 1eeb560e62ca0aa4ac0333424f4ce0f9f9a4565e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 5 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r225418

commit 64ddf6ec92145d48e75480353166b00d8abee170
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Jul 4 13:44:39 2015 +0000

    re PR target/66114 (some indirect_jump patterns use operands[] in their condition when they shouldn't)
    
            PR target/66114
            * config/pa/pa.md (indirect_jump): Use pmode_register_operand instead
            of register_operand.  Remove constraint.
    
    From-SVN: r225413

commit 2e0ebb1874f5bdfa31afc43f734d3966a25a29cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 4 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225408

commit 46ee453a448f9124c55f23e900a9d70ff6b318c5
Author: Carlos Sánchez de La Lama <csanchezdll@gmail.com>
Date:   Fri Jul 3 17:31:21 2015 +0000

    re PR libitm/52482 (libitm INVALID MNEMONIC in .S (powerpc asm))
    
    2015-07-03  Carlos Sánchez de La Lama  <csanchezdll@gmail.com>
    
            PR target/52482
            * config/powerpc/sjlj.S: Port to Xcode 2.5.
    
    From-SVN: r225389

commit 9cd711a26c4c3af43c20258172e25c06548bcb17
Author: Jack Howarth <howarth.at.gcc@gmail.com>
Date:   Fri Jul 3 17:00:49 2015 +0000

    re PR target/66509 (the new clang-based assembler in Xcode 7 on 10.11 fails on the libjava/java/lang/reflect/natArray.cc file from FSF gcc 5.1 at -m32)
    
    2015-07-03  Jack Howarth  <howarth.at.gcc@gmail.com>
    
            PR target/66509
            * configure.ac: Fix filds and fildq test for 64-bit.
            * configure: Regenerated.
    
    From-SVN: r225386

commit d86849b77598c9ea49bf049729f122c072fe7f55
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Fri Jul 3 09:52:20 2015 +0000

    [Backport Patch SRA] Fix PR66119 by calling get_move_ratio in SRA
    
    gcc/
    
            PR tree-optimization/66119
            * toplev.c (process_options): Don't set up default values for
            the sra_max_scalarization_size_{speed,size} parameters.
            * tree-sra (analyze_all_variable_accesses): If no values
            have been set for the sra_max_scalarization_size_{speed,size}
            parameters, call get_move_ratio to get target defaults.
    
    gcc/testsuite/
    
            PR tree-optimization/66119
            * g++.dg/opt/pr66119.C: New.
    
    From-SVN: r225372

commit 4c356759cc5d0234855303d26981932f3d1c9807
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Fri Jul 3 09:33:17 2015 +0000

    re PR target/37072 (-mfancy-math-387 should be the default in FreeBSD)
    
            PR target/37072
            * doc/invoke.texi (i386 and x86-64 Options): -mno-fancy-math-387
            is not actually the default on FreeBSD.
    
    From-SVN: r225370

commit ef4816ae08f2245b4efb56daf607c76040deb30b
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 2 20:45:43 2015 -0400

    re PR c++/66743 (ICE: tree check: expected record_type or union_type or qual_union_type, have underlying_type in for_each_template_parm_r, at cp/pt.c:8234)
    
            PR c++/66743
            * pt.c (for_each_template_parm_r) [UNDERLYING_TYPE]: Use
            TYPE_VALUES_RAW rather than TYPE_FIELDS.
    
    From-SVN: r225366

commit b8bd40ee1a37ebae848766633a2f4a9841aef74b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 3 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r225363

commit 64d0abddb366203f0c7cf4540c030358ddd8f1e8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jul 2 23:54:50 2015 +0100

    acinclude.m4 (GLIBCXX_DEFAULT_ABI): Change valid arguments for --with-default-libstdcxx-abi
    
            * acinclude.m4 (GLIBCXX_DEFAULT_ABI): Change valid arguments for
            --with-default-libstdcxx-abi
            * configure: Regenerate.
            * doc/xml/manual/configure.xml: Document valid arguments.
    
    From-SVN: r225360

commit f63fea42aac181428f392400fcb32628cedd0d1d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jul 2 23:54:45 2015 +0100

    locale_conv.h (wstring_convert): Use __cxx11 inline namespace in new ABI.
    
            * include/bits/locale_conv.h (wstring_convert): Use __cxx11 inline
            namespace in new ABI.
            (wstring_convert::_M_conv): Handle empty range.
    
    From-SVN: r225359

commit d288c1bbc892574eb9f289c4052a81641c7c61c3
Author: Andreas Krebbel <krebbel@gcc.gnu.org>
Date:   Thu Jul 2 16:29:08 2015 +0000

    S/390 Switch mode attribute to bhfgq for vec scatter
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vx-builtins.md
            ("vec_scatter_element<mode>_<non_vec_int>")
            ("vec_scatter_element<V_HW_64:mode>_SI"): Replace gf mode
            attribute with bhfgq.
    
    From-SVN: r225346

commit 58de50b0ddeca74c29d52b731021aa03f38d68a1
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:28:08 2015 +0000

    S/390 Add proper comments to vpopct builtins for automated testsuite generation.
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtins.def: Fix vpopct instruction comments.
    
    From-SVN: r225345

commit e3a1504e7f7fcb42687160918be2d0e1f15ee392
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:26:51 2015 +0000

    S/390 Make builtin creation conditional.
    
             Backport from mainline
             2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
             * config/s390/s390-builtin-types.def: Add flag to indicate the
             options under which the function type is needed.
             * config/s390/s390-builtins.def: Add flag to indicate the options
             under which the builtin is enabled.
             * config/s390/s390-builtins.h: Add flags parameter to macro
             definitions.
             (bflags_for_builtin): New function.
             (flags_for_builtin): Renamed to ...
             (opflags_for_builtin): ... this.
             * config/s390/s390-c.c (s390_resolve_overloaded_builtin): Rename
             flags_for_builtin to bflags_for_builtin and
             flags_overloaded_builtin_var to opflags_overloaded_builtin_var.
             * config/s390/s390.c: Add initialization of bflags_builtin and
             opflags_builtin arrays.
             Remove code for flags_builtin.
             (s390_init_builtins): Only create builtin function types if one of
             their flags is active.
             Only create builtins if all of their flags are active.
             (s390_expand_builtin): Rename flags_for_builtin to
             opflags_for_builtin.
    
    From-SVN: r225343

commit 9b14cd9beb00afc2c35a1f8ebaccb287c5eeb4be
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:25:09 2015 +0000

    S/390 Remove internal builtins from vecintrin.h.
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vecintrin.h: Remove internal builtins.
    
    From-SVN: r225342

commit a7f873e8eeb1f5a6bfc15d35bde66b8306585bec
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:24:11 2015 +0000

    S/390 Fix s390_secondary_reload register class check.
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_secondary_reload): Fix check for
            GENERAL_REGS register class.
    
    From-SVN: r225341

commit d4f65e75c41d895fd355e05af3ba39de51b7ab2e
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:22:55 2015 +0000

    S/390 Disable effect of support_vector_misalignment
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_support_vector_misalignment): Call
            default implementation for !TARGET_VX.
    
    From-SVN: r225339

commit 99b15b673ed12144d6a1eb50df8a8898fbe05048
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:21:44 2015 +0000

    S/390 Limit legitimate_constant_p changes to TARGET_VX.
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_legitimate_constant_p): Add
            TARGET_VX check.
    
    From-SVN: r225338

commit baa84d4fc9ae385b9f12c1c60fcf5f3f4ec30f8e
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:07:17 2015 +0000

    S/390 Vector ABI GNU Attribute.
    
    gcc/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_vector_abi): New variable definition.
            (s390_check_type_for_vector_abi): New function.
            (TARGET_ASM_FILE_END): New macro definition.
            (s390_asm_file_end): New function.
            (s390_function_arg): Call s390_check_type_for_vector_abi.
            (s390_gimplify_va_arg): Likewise.
            * configure: Regenerate.
            * configure.ac: Check for .gnu_attribute Binutils feature.
    
    gcc/testsuite/
            Backport from mainline
            2015-06-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-abi-1.c: Add gnu attribute check.
            * gcc.target/s390/vector/vec-abi-attr-1.c: New test.
            * gcc.target/s390/vector/vec-abi-attr-2.c: New test.
            * gcc.target/s390/vector/vec-abi-attr-3.c: New test.
            * gcc.target/s390/vector/vec-abi-attr-4.c: New test.
            * gcc.target/s390/vector/vec-abi-attr-5.c: New test.
            * gcc.target/s390/vector/vec-abi-attr-6.c: New test.
    
    From-SVN: r225337

commit 682ab984c94f93aee38f6e82fc0e81a9cf09d0d8
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:05:23 2015 +0000

    S/390 Invalid vector binary ops
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_vector_bool_type_p): New function.
            (s390_invalid_binary_op): New function.
            (TARGET_INVALID_BINARY_OP): Define macro.
    
    From-SVN: r225336

commit a79e50451359c718bc51440623e309ac3c4f3a9f
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 16:03:59 2015 +0000

    Testsuite S/390 vector types are only 8 byte aligned.
    
    gcc/testsuite/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * lib/target-supports.exp: Vector do not always have natural
            alignment on s390*.
    
    From-SVN: r225335

commit d0a1217fe70351ee68fa566a1b4de20b6d3d86eb
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:57:59 2015 +0000

    Testsuite These testcases require disabling hardware
    
              Backport from mainline
              2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
              * gcc.dg/tree-ssa/gen-vect-11b.c: Disable vector
              instructions on s390*.
              * gcc.dg/tree-ssa/gen-vect-11c.c: Likewise.
    
    From-SVN: r225334

commit ddc7a36a2d69c7e08661e51154f711de13a12b0c
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:56:31 2015 +0000

    S/390 Add zvector testcases.
    
             Backport from mainline
             2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
             * gcc.target/s390/zvector/vec-dbl-math-compile-1.c: New test.
             * gcc.target/s390/zvector/vec-genbytemask-1.c: New test.
             * gcc.target/s390/zvector/vec-genmask-1.c: New test.
             * gcc.target/s390/zvector/vec-lcbb-1.c: New test.
             * gcc.target/s390/zvector/vec-overloading-1.c: New test.
             * gcc.target/s390/zvector/vec-overloading-2.c: New test.
             * gcc.target/s390/zvector/vec-overloading-3.c: New test.
             * gcc.target/s390/zvector/vec-overloading-4.c: New test.
             * gcc.target/s390/zvector/vec-test-mask-1.c: New test.
             * gcc.target/s390/zvector/vec-elem-1.c: New test.
    
    From-SVN: r225333

commit 49fd62572b81b4eea4f729f14ee376997cae8c76
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:53:33 2015 +0000

    S/390 zvector builtin support.
    
             Backport from mainline
             2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
             * config.gcc: Add vecintrin.h to extra_headers.  Add s390-c.o to
             c_target_objs and cxx_target_objs.  Add t-s390 to tmake_file.
             * config/s390/s390-builtin-types.def: New file.
             * config/s390/s390-builtins.def: New file.
             * config/s390/s390-builtins.h: New file.
             * config/s390/s390-c.c: New file.
             * config/s390/s390-modes.def: Add modes CCVEQANY, CCVH,
             CCVHANY, CCVHU, CCVHUANY, CCVFHANY, CCVFHEANY.
             * config/s390/s390-protos.h (s390_expand_vec_compare_cc)
             (s390_cpu_cpp_builtins, s390_register_target_pragmas): Add
             prototypes.
             * config/s390/s390.c (s390-builtins.h, s390-builtins.def):
             Include.
             (flags_builtin, flags_overloaded_builtin_var, s390_builtin_types)
             (s390_builtin_fn_types, s390_builtin_decls, code_for_builtin): New
             variable definitions.
             (s390_const_operand_ok): New function.
             (s390_expand_builtin): Rewrite.
             (s390_init_builtins): New function.
             (s390_handle_vectorbool_attribute): New function.
             (s390_attribute_table): Add s390_vector_bool attribute.
             (s390_match_ccmode_set): Handle new cc modes CCVH, CCVHU.
             (s390_branch_condition_mask): Generate masks for new modes.
             (s390_expand_vec_compare_cc): New function.
             (s390_mangle_type): Add mangling for vector bool types.
             (enum s390_builtin): Remove.
             (s390_atomic_assign_expand_fenv): Rename constants for sfpc and
             efpc builtins.
             * config/s390/s390.h (TARGET_CPU_CPP_BUILTINS): Call
             s390_cpu_cpp_builtins.
             (REGISTER_TARGET_PRAGMAS): New macro.
             * config/s390/s390.md: Define more UNSPEC_VEC_* constants.
             (insn_cmp mode attribute): Add new CC modes.
             (s390_sfpc, s390_efpc): Rename patterns to sfpc and efpc.
             (lcbb): New pattern definition.
             * config/s390/s390intrin.h: Include vecintrin.h.
             * config/s390/t-s390: New file.
             * config/s390/vecintrin.h: New file.
             * config/s390/vector.md: Include vx-builtins.md.
             * config/s390/vx-builtins.md: New file.S/390 zvector builtin support.
    
    From-SVN: r225332

commit b0432c34f04924adb3bd133a7871b672d3f408f1
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:51:41 2015 +0000

    S/390 Add vector scalar instruction support.
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-modes.def: Add new modes CCVEQ, CCVFH, and
            CCVFHE.
            * config/s390/s390.c (s390_match_ccmode_set): Handle new modes.
            (s390_select_ccmode): Likewise.
            (s390_canonicalize_comparison): Swap operands if necessary.
            (s390_expand_vec_compare_scalar): Expand DFmode compare using
            single element vector instructions.
            (s390_emit_compare): Call s390_expand_vec_compare_scalar.
            (s390_branch_condition_mask): Generate CC masks for the new modes.
            * config/s390/s390.md (v0, vf, vd): New mode attributes.
            (VFCMP, asm_fcmp, insn_cmp): New mode iterator and attributes.
            (*vec_cmp<insn_cmp>df_cconly, *fixuns_truncdfdi2_z13)
            (*fix_trunc<BFP:mode><GPR:mode>2_bfp, *floatunsdidf2_z13)
            (*floatuns<GPR:mode><FP:mode>2, *extendsfdf2_z13)
            (*extend<DSF:mode><BFP:mode>2): New insn definition.
            (fix_trunc<BFP:mode><GPR:mode>2_bfp, loatuns<GPR:mode><FP:mode>2)
            (extend<DSF:mode><BFP:mode>2): Turn into expander.
            (floatdi<mode>2, truncdfsf2, add<mode>3, sub<mode>3, mul<mode>3)
            (div<mode>3, *neg<mode>2, *abs<mode>2, *negabs<mode>2)
            (sqrt<mode>2): Add vector instruction.
    
    gcc/testsuite/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-scalar-cmp-1.c: New test.
    
    From-SVN: r225331

commit fa2d60a7d78fe52d101b3ddbed26647a98b3c61c
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:46:22 2015 +0000

    S/390 Vector base support.
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/constraints.md (j00, jm1, jxx, jyy, v): New
            constraints.
            * config/s390/predicates.md (const0_operand, constm1_operand)
            (constable_operand): Accept vector operands.
            * config/s390/s390-modes.def: Add supported vector modes.
            * config/s390/s390-protos.h (s390_cannot_change_mode_class)
            (s390_function_arg_vector, s390_contiguous_bitmask_vector_p)
            (s390_bytemask_vector_p, s390_expand_vec_strlen)
            (s390_expand_vec_compare, s390_expand_vcond)
            (s390_expand_vec_init): Add prototypes.
            * config/s390/s390.c (VEC_ARG_NUM_REG): New macro.
            (s390_vector_mode_supported_p): New function.
            (s390_contiguous_bitmask_p): Mask out the irrelevant bits.
            (s390_contiguous_bitmask_vector_p): New function.
            (s390_bytemask_vector_p): New function.
            (s390_split_ok_p): Vector regs don't work either.
            (regclass_map): Add VEC_REGS.
            (s390_legitimate_constant_p): Handle vector constants.
            (s390_cannot_force_const_mem): Handle CONST_VECTOR.
            (legitimate_reload_vector_constant_p): New function.
            (s390_preferred_reload_class): Handle CONST_VECTOR.
            (s390_reload_symref_address):  Likewise.
            (s390_secondary_reload): Vector memory instructions only support
            short displacements.  Rename reload*_nonoffmem* to reload*_la*.
            (s390_emit_ccraw_jump): New function.
            (s390_expand_vec_strlen): New function.
            (s390_expand_vec_compare): New function.
            (s390_expand_vcond): New function.
            (s390_expand_vec_init): New function.
            (s390_dwarf_frame_reg_mode): New function.
            (print_operand): Handle addresses with 'O' and 'R' constraints.
            (NR_C_MODES, constant_modes): Add vector modes.
            (s390_output_pool_entry): Handle vector constants.
            (s390_hard_regno_mode_ok): Handle vector registers.
            (s390_class_max_nregs): Likewise.
            (s390_cannot_change_mode_class): New function.
            (s390_invalid_arg_for_unprototyped_fn): New function.
            (s390_function_arg_vector): New function.
            (s390_function_arg_float): Remove size variable.
            (s390_pass_by_reference): Handle vector arguments.
            (s390_function_arg_advance): Likewise.
            (s390_function_arg): Likewise.
            (s390_return_in_memory): Vector values are returned in a VR if
            possible.
            (s390_function_and_libcall_value): Handle vector arguments.
            (s390_gimplify_va_arg): Likewise.
            (s390_call_saved_register_used): Consider the arguments named.
            (s390_conditional_register_usage): Disable v16-v31 for non-vec
            targets.
            (s390_preferred_simd_mode): New function.
            (s390_support_vector_misalignment): New function.
            (s390_vector_alignment): New function.
            (TARGET_STRICT_ARGUMENT_NAMING, TARGET_DWARF_FRAME_REG_MODE)
            (TARGET_VECTOR_MODE_SUPPORTED_P)
            (TARGET_INVALID_ARG_FOR_UNPROTOTYPED_FN)
            (TARGET_VECTORIZE_PREFERRED_SIMD_MODE)
            (TARGET_VECTORIZE_SUPPORT_VECTOR_MISALIGNMENT)
            (TARGET_VECTOR_ALIGNMENT): Define target macro.
            * config/s390/s390.h (FUNCTION_ARG_PADDING): Define macro.
            (FIRST_PSEUDO_REGISTER): Increase value.
            (VECTOR_NOFP_REGNO_P, VECTOR_REGNO_P, VECTOR_NOFP_REG_P)
            (VECTOR_REG_P): Define macros.
            (FIXED_REGISTERS, CALL_USED_REGISTERS)
            (CALL_REALLY_USED_REGISTERS, REG_ALLOC_ORDER)
            (HARD_REGNO_CALL_PART_CLOBBERED, REG_CLASS_NAMES)
            (FUNCTION_ARG_REGNO_P, FUNCTION_VALUE_REGNO_P, REGISTER_NAMES):
            Add vector registers.
            (CANNOT_CHANGE_MODE_CLASS): Call C function.
            (enum reg_class): Add VEC_REGS, ADDR_VEC_REGS, GENERAL_VEC_REGS.
            (SECONDARY_MEMORY_NEEDED): Allow SF<->SI mode moves without
            memory.
            (DBX_REGISTER_NUMBER, FIRST_VEC_ARG_REGNO, LAST_VEC_ARG_REGNO)
            (SHORT_DISP_IN_RANGE, VECTOR_STORE_FLAG_VALUE): Define macro.
            * config/s390/s390.md (UNSPEC_VEC_*): New constants.
            (VR*_REGNUM): New constants.
            (ALL): New mode iterator.
            (INTALL): Remove mode iterator.
            Include vector.md.
            (movti): Implement TImode moves for VRs.
            Disable TImode splitter for VR targets.
            Implement splitting TImode GPR<->VR moves.
            (reload*_tomem_z10, reload*_toreg_z10): Replace INTALL with ALL.
            (reload<mode>_nonoffmem_in, reload<mode>_nonoffmem_out): Rename to
            reload<mode>_la_in, reload<mode>_la_out.
            (*movdi_64, *movsi_zarch, *movhi, *movqi, *mov<mode>_64dfp)
            (*mov<mode>_64, *mov<mode>_31): Add vector instructions.
            (TD/TF mode splitter): Enable for GPRs only (formerly !FP).
            (mov<mode> SF SD): Prefer lder, lde for loading.
            Add lrl and strl instructions.
            Add vector instructions.
            (strlen<mode>): Rename old strlen<mode> to strlen_srst<mode>.
            Call s390_expand_vec_strlen on z13.
            (*cc_to_int): Change predicate to nonimmediate_operand.
            (addti3): Rename to *addti3.  New expander.
            (subti3): Rename to *subti3.  New expander.
            * config/s390/vector.md: New file.
    
    From-SVN: r225330

commit deec8b0d72cef524edc351205da63ce60f03e025
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:44:47 2015 +0000

    S/390 Add -march/-mtune=z13 option.
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * common/config/s390/s390-common.c (processor_flags_table): Add
            z13.
            * config.gcc: Add z13.
            * config/s390/s390-opts.h (enum processor_type): Add
            PROCESSOR_2964_Z13.
            * config/s390/s390.c (s390_adjust_priority): Check for
            PROCESSOR_2964_Z13.
            (s390_reorg): Likewise.
            (s390_sched_reorder): Likewise.
            (s390_sched_variable_issue): Likewise.
            (s390_loop_unroll_adjust): Likewise.
            (s390_option_override): Likewise. Default to -mvx when available.
            * config/s390/s390.h (enum processor_flags): Add PF_Z13 and PF_VX.
            (TARGET_CPU_Z13, TARGET_CPU_VX, TARGET_Z13, TARGET_VX)
            (TARGET_VX_ABI): Define macros.
            macros.
            (TARGET_DEFAULT): Add MASK_OPT_VX.
            * config/s390/s390.md ("cpu" attribute): Add z13.
            ("cpu_facility" attribute): Add vec.
            * config/s390/s390.opt (processor_type): Add z13.
            (mvx): New options.
            * doc/invoke.texi: Add z13 option for -march.
    
    From-SVN: r225329

commit 6120e4720e379a981556c02f5e389ee0c39f659b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:42:37 2015 +0000

    optabs: Fix vec_perm -> V16QI middle end lowering.
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * optabs.c (expand_vec_perm): Don't re-use SEL as target operand.
    
    From-SVN: r225328

commit bff938b61ab5b86cb4d7d56d3f9c6ad2dd6f04a1
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 2 15:37:53 2015 +0000

    recog: Increased max number of alternatives.
    
    gcc/
            Backport from mainline
            2015-05-19  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * recog.h: Increase MAX_RECOG_ALTERNATIVES.  Change type of
            alternative_mask to uint64_t.
    
    From-SVN: r225327

commit cebf1dcfbb7c68d50cdf45774a83af18707bc802
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Jul 2 13:32:32 2015 +0100

    * gcc.pot: Regenerate.
    
    From-SVN: r225316

commit d05538ba6d7039b6e4dffb42744811779a43497e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 2 14:05:04 2015 +0200

    backport: genattrtab.c (insn_alternatives): Change type from int * to uint64_t *.
    
            Backported from mainline
            2015-06-08  Jakub Jelinek  <jakub@redhat.com>
    
            * genattrtab.c (insn_alternatives): Change type from int *
            to uint64_t *.
            (check_attr_test): Shift ((uint64_t) 1) instead of 1 up.
            (get_attr_value): Change type of num_alt to uint64_t.
            (compute_alternative_mask): Change return type from
            int to uint64_t, shift ((uint64_t) 1) instead of 1 up.
            (make_alternative_compare, mk_attr_alt): Change argument type
            from int to uint64_t.
            (simplify_test_exp): Change type of i from int to uint64_t.
            Shift ((uint64_t) 1) instead of 1 up.
            (main): Adjust oballocvec first argument from int to uint64_t.
            Shift ((uint64_t) 1) instead of 1 up.
    
    From-SVN: r225314

commit 8e91ad496c1af5c431db3c55dd589f08de1cf89b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 2 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225285

commit 6db0b6581be86d7a8700959f85bcb242ea6976ac
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Wed Jul 1 22:01:09 2015 +0000

    re PR target/64833 ([SH]: Error: pcrel too far when compiling imagemagick and graphicsmagick on Debian sh4)
    
    PR target/64833
    * [SH] Set length of casesi_worker_1 insn to 8 when flag_pic is set.
    
    From-SVN: r225282

commit 2883a378d8c6d2d994ef1fd740b6a1925e0d78c0
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Jul 1 17:43:35 2015 +0000

    linux-atomic.c (__kernel_cmpxchg): Reorder arguments to better match light-weight syscall argument order.
    
            * config/pa/linux-atomic.c (__kernel_cmpxchg): Reorder arguments to
            better match light-weight syscall argument order.
            (__kernel_cmpxchg2): Likewise.
            Adjust callers.
    
    From-SVN: r225268

commit 0985211585c0fc946617d1f6d89f1dde53e2789f
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jul 1 13:06:52 2015 -0400

    re PR c++/65945 (C++ alignment of nullptr_t is 1 and might cause unaligned stores to the frame)
    
            PR c++/65945
    gcc/c-family/
            * c-opts.c (c_common_post_options): Highest ABI version is 9.
    gcc/cp/
            * decl.c (cxx_init_decl_processing): Set TYPE_ALIGN of nullptr_t.
            * class.c (layout_nonempty_base_or_field): Warn if that affects
            the offset of a field.
    
    From-SVN: r225265

commit 13b6884d343048c07358c14d24efd0a008f5ac9f
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:48:55 2015 +0000

    PR jit/66700: set TREE_ADDRESSABLE when building an ADDR_EXPR
    
    Backport of r225248 (f410e1f5b44007c6cf6609df0afc16e7dcfeabd2)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225248
            2015-07-01  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66700
            * jit-playback.c (jit_mark_addressable): New function.
            (gcc::jit::playback::lvalue::get_address): Call
            jit_mark_addressable on the underlying tree.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r225248
            2015-07-01  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66700
            * jit.dg/all-non-failing-tests.h: Add
            test-pr66700-observing-write-through-ptr.c.
            * jit.dg/test-pr66700-observing-write-through-ptr.c: New testcase.
    
    From-SVN: r225258

commit 5fbe3ab51b18a47d26ed7c7be5f11724ec0974fe
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:44:18 2015 +0000

    jit: document union types
    
    Backport of r225246 (eb2d3e4a67c699257e42280e6bf800b8a92ffad7)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225246
            2015-07-01  David Malcolm  <dmalcolm@redhat.com>
    
            * docs/topics/types.rst (gcc_jit_context_new_union_type): Add
            documentation.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r225246
            2015-07-01  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/test-accessing-union.c: Add comments for use by
            gcc/jit/docs/topics/types.rst.
    
    From-SVN: r225257

commit f5822081c6577f225b08b023f05c77443b02d41b
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:42:08 2015 +0000

    jit: clarify (lack of) lifetime requirements on input const char *
    
    Backport of r225245 (1fa42b0566972abc668f3aa88e5534092af99c2c)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225245
            2015-07-01  David Malcolm  <dmalcolm@redhat.com>
    
            * docs/topics/contexts.rst (gcc_jit_context_set_bool_option):
            Clarify lack of lifetime requirements on (const char *) parameter.
            * docs/topics/expressions.rst
            (gcc_jit_context_new_string_literal): Likewise.
            (gcc_jit_context_new_global): Likewise.
            * docs/topics/functions.rst (gcc_jit_context_new_param): Likewise.
            (gcc_jit_context_new_function): Likewise.
            (gcc_jit_function_new_block): Likewise.
            (gcc_jit_block_add_comment): Likewise.
            * docs/topics/locations.rst (gcc_jit_context_new_location):
            Likewise.
            * docs/topics/types.rst (gcc_jit_context_new_field): Likewise.
            (gcc_jit_context_new_struct_type): Likewise.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
    
    From-SVN: r225256

commit e5436647717a3426605499e93d9b52828d0d6a66
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:40:02 2015 +0000

    jit: add switch statements
    
    Backport of r225207 (a24ef8d231d1015c5a4ee68050ed78f5582342fe)
    from trunk
    
    gcc/ChangeLog:
            Backport from mainline r225207
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            * typed-splay-tree.h: New file.
    
    gcc/jit/ChangeLog:
            Backport from mainline r225207
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            * docs/cp/topics/functions.rst (Blocks): Add switch statements to
            list of ways to terminate a block.
            (gccjit::block::end_with_switch): Add function description.
            (gccjit::case_): Add class.
            (gccjit::context::new_case): Add function description.
            * docs/cp/topics/objects.rst: Add "case_" to class hierarchy.
            * docs/topics/compatibility.rst (LIBGCCJIT_ABI_3): New.
            * docs/topics/functions.rst (Blocks): Add switch statements to
            list of ways to terminate a block.
            (gcc_jit_block_end_with_switch): Add function description.
            (gcc_jit_case): Add type.
            (gcc_jit_context_new_case): Add function description.
            (gcc_jit_case_as_object): Add function description.
            * docs/topics/objects.rst: Add gcc_jit_case to class hierarchy.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
            * jit-common.h (gcc::jit::recording::case_): Add forward decl.
            (gcc::jit::playback::case_): Add forward decl.
            * jit-playback.c (add_case): New function.
            (gcc::jit::playback::block::add_switch): New function.
            * jit-playback.h (gcc::jit::playback::case_): New struct.
            (gcc::jit::playback::block::get_function): New method.
            (gcc::jit::playback::block::add_switch): New method.
            * jit-recording.c: Within namespace gcc::jit...
            (recording::context::new_case): New method.
            (recording::function::validate): Update for change to
            get_successor_blocks.
            (recording::block::end_with_switch): New method.
            (recording::block::get_successor_blocks): Update to support an
            arbitrary number of successor blocks.
            (recording::block::dump_edges_to_dot): Likewise.
            (memento_of_new_rvalue_from_const <int>::get_wide_int): New.
            (memento_of_new_rvalue_from_const <long>::get_wide_int): New.
            (memento_of_new_rvalue_from_const <double>::get_wide_int): New.
            (memento_of_new_rvalue_from_const <void *>::get_wide_int): New.
            (recording::statement::get_successor_blocks): Update to support an
            arbitrary number of successor blocks.
            (recording::conditional::get_successor_blocks): Likewise.
            (recording::jump::get_successor_blocks): Likewise.
            (recording::return_::get_successor_blocks): Likewise.
            (recording::case_::write_reproducer): New.
            (recording::case_::make_debug_string): New.
            (recording::switch_::switch_): New.
            (recording::switch_::replay_into): New.
            (recording::switch_::get_successor_blocks): New.
            (recording::switch_::make_debug_string): New.
            (recording::switch_::write_reproducer): New.
            * jit-recording.h: Within namespace gcc::jit::recording...
            (context::new_case): New.
            (rvalue::is_constant): New.
            (rvalue::get_wide_int): New.
            (block::end_with_switch): New.
            (block::get_successor_blocks): Update to support an arbitrary
            number of successor blocks.
            (memento_of_new_rvalue_from_const::is_constant): New.
            (memento_of_new_rvalue_from_const::get_wide_int): New.
            (statement::get_successor_blocks): Update to support an arbitrary
            number of successor blocks.
            (conditional::get_successor_blocks): Likewise.
            (jump::get_successor_blocks): Likewise.
            (return_::get_successor_blocks): Likewise.
            (case_): New subclass of memento.
            (switch_): New subclass of statement.
            * libgccjit++.h (gccjit::case_): New subclass of gccjit::object.
            (gccjit::context::new_case): New method.
            (gccjit::block::end_with_switch): New method.
            (gccjit::case_::case): New ctors.
            (gccjit::case_::get_inner_case): New method.
            * libgccjit.c: Include "typed-splay-tree.h"
            (struct gcc_jit_case): New.
            (gcc_jit_context_new_case): New function.
            (gcc_jit_case_as_object): New function.
            (valid_dest_for_switch): New function.
            (valid_case_for_switch): New function.
            (class api_call_validator): New class.
            (class case_range_validator): New class.
            (case_range_validator::case_range_validator): New.
            (case_range_validator::validate): New.
            (case_range_validator::case_compare): New.
            (case_range_validator::get_wide_int): new.
            (gcc_jit_block_end_with_switch): New.
            * libgccjit.h: Add gcc_jit_case to class hierarchy comment.
            (gcc_jit_case): New typedef.
            (gcc_jit_context_new_case): New function.
            (gcc_jit_case_as_object): New function.
            (gcc_jit_block_end_with_switch): New function.
            (LIBGCCJIT_HAVE_SWITCH_STATEMENTS): New.
            * libgccjit.map: Add gcc_jit_block_end_with_switch,
            gcc_jit_case_as_object and gcc_jit_context_new_case.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r225207
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/all-non-failing-tests.h: Add test-switch.c.
            * jit.dg/test-error-gcc_jit_block_end_with_switch-NULL-case.c: New
            testcase.
            * jit.dg/test-error-gcc_jit_block_end_with_switch-mismatching-case-type.c:
            New testcase.
            * jit.dg/test-error-gcc_jit_block_end_with_switch-overlapping-ranges.c:
            New testcase.
            * jit.dg/test-error-gcc_jit_context_new_case-non-const-label.c:
            New testcase.
            * jit.dg/test-error-gcc_jit_context_new_case-non-integer-type.c:
            New testcase.
            * jit.dg/test-error-gcc_jit_context_new_case-reversed-endpoints.c:
            New testcase.
            * jit.dg/test-switch.c: New testcase.
            * jit.dg/test-switch.cc: New testcase.
    
    From-SVN: r225255

commit b313af85cc19cf0d6650f5d6e452158267a83352
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:35:53 2015 +0000

    PR jit/66546: Add gcc_jit_context_set_bool_allow_unreachable_blocks
    
    Backport of r225206 (04feb56e6acd497d0add042232afd7940ef61adb)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225206
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66546
            * docs/cp/topics/contexts.rst
            (gccjit::context::set_bool_allow_unreachable_blocks): New.
            * docs/topics/compatibility.rst (LIBGCCJIT_ABI_2): New.
            * docs/topics/contexts.rst (Options): Add notes discussing the
            transition from enums to entrypoints for new options.
            (gcc_jit_context_set_bool_allow_unreachable_blocks): New.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
            * jit-common.h (gcc::jit::inner_bool_option): New enum.
            * jit-recording.c: Within namespace gcc::jit...
            (recording::context::context): Handle m_inner_bool_options.
            (recording::context::set_inner_bool_option): New.
            (inner_bool_option_reproducer_strings): New.
            (recording::context::log_all_options): Log the "inner" bool
            options.
            (recording::context::log_inner_bool_option): New.
            (recording::context::dump_reproducer_to_file): Write initializers
            for "inner" bool options.
            (recording::function::validate): Don't check for block
            reachability if INNER_BOOL_OPTION_ALLOW_UNREACHABLE_BLOCKS is set.
            * jit-recording.h: Within namespace gcc::jit...
            (recording::context::set_inner_bool_option): New.
            (recording::context::get_inner_bool_option): New.
            (recording::context::log_inner_bool_option): New.
            (recording::context::m_inner_bool_options): New.
            * libgccjit++.h
            (gccjit::context::set_bool_allow_unreachable_blocks): New.
            * libgccjit.c
            (gcc_jit_context_set_bool_allow_unreachable_blocks): New.
            * libgccjit.h: Add note about options present in the
            initial release of libgccjit.
            (gcc_jit_context_set_bool_allow_unreachable_blocks): New API
            entrypoint.
            (LIBGCCJIT_HAVE_gcc_jit_context_set_bool_allow_unreachable_blocks):
            New macro.
            * libgccjit.map (LIBGCCJIT_ABI_2): New, containing...
            (gcc_jit_context_set_bool_allow_unreachable_blocks): ...this new
            entrypoint.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r225206
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66546
            * jit.dg/all-non-failing-tests.h: Add note about
            test-validly-unreachable-block.c.
            * jit.dg/test-validly-unreachable-block.c: New file.
    
    From-SVN: r225254

commit 98cde616178cadd201f2ee1cc8fd1a46643d92f0
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:31:48 2015 +0000

    PR jit/66628: add gcc_jit_context_add_command_line_option
    
    Backport of r225205 (adb2df5592cdf8e70aa44c0f3c447da1d0134f4c)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225205
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66628
            * docs/cp/topics/contexts.rst (Additional command-line options):
            New section.
            * docs/topics/compatibility.rst: New file.
            * docs/topics/contexts.rst (Additional command-line options): New
            section.
            * docs/topics/index.rst: Add compatibility.rst.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
            * jit-playback.c (make_fake_args): Add call to
            append_command_line_options.
            * jit-recording.c: Within namespace gcc::jit...
            (recording::context::~context): Free the optnames within
            m_command_line_options.
            (recording::context::set_bool_option): Likewise.
            (recording::context::add_command_line_option): New method.
            (recording::context::append_command_line_options): New method.
            (recording::context::dump_reproducer_to_file): Add command-line
            options.
            * jit-recording.h: Within namespace gcc::jit...
            (recording::context::add_command_line_option): New method.
            (recording::context::append_command_line_options): New method.
            (recording::context::m_command_line_options): New field.
            * libgccjit++.h (gccjit::context::add_command_line_option): New
            method.
            * libgccjit.c (gcc_jit_context_add_command_line_option): New API
            entrypoint.
            * libgccjit.h (gcc_jit_context_add_command_line_option): New API
            entrypoint.
            (LIBGCCJIT_HAVE_gcc_jit_context_add_command_line_option): New
            macro.
            * libgccjit.map: Put existing symbols within LIBGCCJIT_ABI_0; add
            LIBGCCJIT_ABI_1 and gcc_jit_context_add_command_line_option.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r225205
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66628
            * jit.dg/all-non-failing-tests.h: Add note about
            test-extra-options.c.
            * jit.dg/test-extra-options.c: New testcase.
    
    From-SVN: r225253

commit 40773b0b6774839513b2582032f3c2254f05c633
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:28:18 2015 +0000

    fixes to gcc_jit_context_dump_reproducer_to_file
    
    Backport of r225204 (cc36aead6a4e5017477c9c0836672317128ed6b3)
    from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225204
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            * jit-recording.c
            (gcc::jit::recording::context::dump_reproducer_to_file):
            Add pragma to generated reproducers to disable -Wunused-variable.
            Fix handling of NULL string options.
    
    From-SVN: r225252

commit 6b2f030071a0e337309d3adef41c43885464beaf
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Wed Jul 1 14:20:52 2015 +0000

    jit: fix some .rst issues in docs
    
    Backport of r225203
    (aka 9bd7a189c372465fb757ecd67336379779f4ea60) from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r225203
            2015-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            * docs/cp/topics/expressions.rst: Remove stray semicolon.
            * docs/cp/topics/functions.rst: Remove stray backslash.
            * docs/_build/texinfo/libgccjit.texi: Regenerate.
    
    From-SVN: r225251

commit 3eab392b19f6b7e146109c8971b4fe5ad3565e96
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jul 1 08:24:29 2015 +0000

    re PR middle-end/66633 (ICE on valid "verify_gimple failed" with OpenMP)
    
            PR middle-end/66633
            * tree-nested.c (convert_nonlocal_omp_clauses): Initialize need_chain
            to true if the function is nested and if not optimizing.
            (convert_local_omp_clauses): Initialize need_frame to true if the
            function contains nested functions and if not optimizing.
    
    From-SVN: r225228

commit ef9b38ccece64e2fbc613878cf76ce7d040fc49b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 1 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225217

commit 7066f1714f286094b0ddc8f1baf26c4b89519725
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 30 14:16:01 2015 +0200

    re PR middle-end/66702 (#pragma omp declare simd uniform and linear issues)
    
            PR middle-end/66702
            * omp-low.c (simd_clone_adjust): Handle addressable linear
            or uniform parameters or non-gimple type uniform parameters.
    
            * testsuite/libgomp.c++/pr66702-1.C: New test.
            * testsuite/libgomp.c++/pr66702-2.C: New test.
    
    From-SVN: r225180

commit 19c2c22168e131f10acf04806a3562a53e939688
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 30 11:05:23 2015 +0000

    leon.md (leon_load): Enable for all LEON variants if -mfix-ut699 is not specified.
    
            * config/sparc/leon.md (leon_load): Enable for all LEON variants if
            -mfix-ut699 is not specified.
            (leon3_load): Rename into...
            (ut699_load): ...this.  Enable for all LEON variants if -mfix-ut699
            is specified.
    
    From-SVN: r225175

commit 70256baa7b4ab04584f1aa985098944142b7e2f9
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Jun 30 10:07:03 2015 +0000

    Backport of r224031 from mainline
    
    2015-06-29  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            Backport from mainline:
            2015-06-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/66136
            * config/aarch64/geniterators.sh: Rewrite in awk.
    
    From-SVN: r225170

commit 1e7d428d72c140e4e922df2601d99c41f7ea3e16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 30 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r225156

commit c75429401071d5baa93de4bf01b416ed89123041
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jun 29 16:58:35 2015 +0100

    * sv.po: Update.
    
    From-SVN: r225131

commit 39d63bfff1c23d8aea997c619801cd6aefc7a3eb
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Mon Jun 29 15:41:02 2015 +0000

    jit: Add missing type-checking to gcc_jit_{l|r}value_access_field
    
    Backport of r224565
    (aka 6689f47f53079d76bbb051d3b5da9018c2e0161a) from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r224565
            2015-06-17  David Malcolm  <dmalcolm@redhat.com>
    
            * libgccjit.c (gcc_jit_lvalue_access_field): Verify that the field
            is for the correct struct.
            (gcc_jit_rvalue_access_field): Likewise.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r224565
            2015-06-17  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/test-error-accessing-field-in-other-struct.c: Rename to...
            * jit.dg/test-error-gcc_jit_rvalue_dereference_field-wrong-struct.c:
            ...this.
            * jit.dg/test-error-gcc_jit_lvalue_access_field-wrong-struct.c:
            New testcase.
            * jit.dg/test-error-gcc_jit_rvalue_access_field-wrong-struct.c:
            New testcase.
    
    From-SVN: r225129

commit a2ca4aa096e3285744cd55799ba602b2f505804d
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Mon Jun 29 15:36:20 2015 +0000

    Backport: [Patch Vax] zero/sign extend patterns need to be SUBREG aware
    
    gcc/
    
            Backport from mainline r224672.
            2015-06-19  James Greenhalgh  <james.greenhalgh@arm.com>
    
            * config/vax/vax.md: Adjust sign/zero extend patterns to
            handle SUBREGs in operands[1].
    
    gcc/testsuite/
    
            Backport from mainline r224832.
            2015-06-19  James Greenhalgh  <james.greenhalgh@arm.com>
    
            * gcc.target/vax/bswapdi-1.c: New.
    
    From-SVN: r225128

commit ddffdb2bc81e862d388b07ec0d8d2437c38e939d
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Mon Jun 29 15:34:14 2015 +0000

    jit: Add a test for compound assignment
    
    Backport of r224536 (aka 3052eeefc4607a7147fdc55af6d86845890eb281)
    from trunk.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r224536
            2015-06-16  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/all-non-failing-tests.h: Add test-compound-assignment.c.
            * jit.dg/test-compound-assignment.c: New testcase.
    
    From-SVN: r225127

commit 68055feb57bbf67a0d73b94168aa5abf400ed62f
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Mon Jun 29 15:27:39 2015 +0000

    PR jit/66539: Add parentheses as needed to gcc_jit_object_get_debug_string
    
    Backport of r224531 (8154a3514d5fc8067a6928531d5f61cd768bd62c) and
    r224535 (1828cd755cf5e4a34d5638f543a059f3562ad957) from trunk
    
    gcc/jit/ChangeLog:
            Backport from mainline r224531
            2015-06-16  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66539
            * jit-recording.c: Within namespace gcc::jit::recording::
            (rvalue::get_debug_string_parens): New function.
            (binary_op::make_debug_string): Update to mimic C precedence
            rules.
            (binary_op_precedence): New array.
            (binary_op::get_precedence): New function.
            (comparison::make_debug_string): Update to mimic C precedence
            rules.
            (comparison_precedence): New array.
            (comparison::get_precedence): New function.
            (cast::make_debug_string): Update to mimic C precedence rules.
            (call::make_debug_string): Likewise.
            (call_through_ptr::make_debug_string): Likewise.
            (array_access::make_debug_string): Likewise.
            (access_field_of_lvalue::make_debug_string): Likewise.
            (access_field_rvalue::make_debug_string): Likewise.
            (dereference_field_rvalue::make_debug_string): Likewise.
            (dereference_rvalue::make_debug_string): Likewise.
            (get_address_of_lvalue::make_debug_string): Likewise.
            * jit-recording.h: Within namespace gcc::jit::recording::
            (precedence): New enum.
            (rvalue::rvalue): Initialize field "m_parenthesized_string".
            (rvalue::get_debug_string_parens): New method.
            (rvalue::get_precedence): New pure virtual function.
            (rvalue::m_parenthesized_string): New field.
            (param::get_precedence): New function.
            (global::get_precedence): New function.
            (memento_of_new_rvalue_from_const::get_precedence): New function.
            (memento_of_new_string_literal::get_precedence): New function.
            (unary_op::get_precedence): New function.
            (binary_op::get_precedence): New function.
            (comparison::get_precedence): New function.
            (cast::get_precedence): New function.
            (call::get_precedence): New function.
            (call_through_ptr::get_precedence): New function.
            (array_access::get_precedence): New function.
            (access_field_of_lvalue::get_precedence): New function.
            (access_field_rvalue::get_precedence): New function.
            (dereference_field_rvalue::get_precedence): New function.
            (dereference_rvalue::get_precedence): New function.
            (get_address_of_lvalue::get_precedence): New function.
            (local::get_precedence): New function.
    
    gcc/testsuite/ChangeLog:
            Backport from mainline r224531
            2015-06-16  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/66539
            * jit.dg/all-non-failing-tests.h: Add test-debug-strings.c.
            * jit.dg/test-debug-strings.c: New test case.
            * jit.dg/test-quadratic.c (make_calc_discriminant): Verify that
            the discriminant has a sane debug string.
    
    From-SVN: r225125

commit ece624592d994078fa87cec8740c91de644232ca
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Mon Jun 29 14:56:36 2015 +0000

    jit: add test-benchmark.c
    
    Backport from trunk r222863
    (aka master 8120405bda9bf222228b004e09b23e74eda57ae1)
    
    gcc/testsuite/ChangeLog:
            Backport from mainline
            2015-05-06  David Malcolm  <dmalcolm@redhat.com>
    
            * jit.dg/harness.h (set_options): Wrap with
            #ifndef TEST_ESCHEWS_SET_OPTIONS.
            * jit.dg/jit.exp (is_testcase_meant_to_generate_a_reproducer):
            Special-case test-benchmark.c as a negative.
            * jit.dg/test-benchmark.c: New file.
    
    From-SVN: r225123

commit c7bf3cc5981f244220580fb6c212c7477147718f
Author: Adam Butcher <adam@jessamine.co.uk>
Date:   Mon Jun 29 10:34:58 2015 +0100

    re PR c++/65750 (misinterpret in a virtual member function with a C++11 style function signature)
    
    /cp
    2015-06-29  Adam Butcher  <adam@jessamine.co.uk>
    
            PR c++/65750
            * parser.c (cp_parser_simple_type_specifier): Don't synthesize
            implicit template parm if 'auto' is a placeholder for trailing
            return type.
    
    /testsuite
    2015-06-29  Adam Butcher  <adam@jessamine.co.uk>
    
            PR c++/65750
            * g++.dg/cpp0x/trailing11.C: New.
    
    From-SVN: r225114

commit b056286075eef517b695300cc586b17cbb25a557
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 29 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225110

commit f42dfe9fbd21d39fc0d6313e257f160486698f5a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 28 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r225102

commit 80a266642a1dda76f3ae858fc1a4942b1c41c7f8
Author: Mikhail Maltsev <maltsevm@gmail.com>
Date:   Sat Jun 27 09:27:23 2015 +0000

    re PR testsuite/66667 (FAIL: g++.dg/diagnostic/inhibit-warn-2.C)
    
    PR testsuite/66667
    
    gcc/testsuite/
            * g++.dg/diagnostic/inhibit-warn-2.C: Fix test directives to match
            diagnostic messages of GCC 5.x.
    
    From-SVN: r225097

commit 159b9b5ecfc0133599d46e292225cedc5a776597
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Jun 27 00:46:58 2015 +0000

    backport: re PR target/65979 ([SH] Wrong code is generated with stage1 compiler)
    
    gcc/
            Backport from mainline
            2015-06-25  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/65979
            PR target/66611
            * config/sh/sh.md (tstsi_t peephole2): Use insn_invalid_p to check if
            the replacement insn will work.
    
    From-SVN: r225094

commit 1a538176d5493ee05066ee40a8a9ae19a57ecb62
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 27 00:16:07 2015 +0000

    Daily bump.
    
    From-SVN: r225092

commit 2cb106013d9e86e39ef1885bd00eb850bb8da09e
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 26 17:41:34 2015 -0400

    re PR c++/66216 (Defaulted Operators and constructors not working with aligned attribute)
    
            PR c++/66216
            * class.c (finish_struct): Call fixup_attribute_variants.
    
    From-SVN: r225088

commit 6fcfc0bbcc40f2739a111105701948308e1918ae
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 26 16:35:06 2015 -0400

    re PR c++/66067 (tree check ICE: accessed elt 1 of tree_vec with 0 elts in write_template_args, at cp/mangle.c:2574)
    
            PR c++/66067
            * mangle.c (write_template_args): Handle 0 length TREE_VEC.
    
    From-SVN: r225085

commit 8725f33487b00a501188147adeb5517bc771642b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 26 18:36:54 2015 +0100

    stl_bvector.h (vector<bool>::vector()): Add noexcept.
    
            * include/bits/stl_bvector.h (vector<bool>::vector()): Add noexcept.
            * include/bits/stl_map.h (map::map()): Likewise.
            * include/bits/stl_multimap.h (multimap::multimap()): Likewise.
            * include/bits/stl_multiset.h (multiset::multiset()): Likewise.
            * include/bits/stl_set.h (set::set()): Likewise.
    
    From-SVN: r225026

commit b7fdf3f63ec2f90df5f8a47cd2762fedcd5c20ea
Author: Martin Jambor <mjambor@suse.cz>
Date:   Fri Jun 26 19:13:51 2015 +0200

    re PR debug/66301 (internal compiler error when using -fopt-info)
    
    Fix PR 66301.
    
    2015-06-26  Martin Jambor  <mjambor@suse.cz>
    
            PR debug/66301
            * tree-ssa-pre.c (before_dom_children): Check that dump_file is not
            NULL instead of calling dump_enabled_p.
    
    From-SVN: r225023

commit 539d003e5c6b652117a255501cd7a73456cf32c0
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Jun 26 12:30:37 2015 +0200

    re PR target/66412 (ICE on valid code at -O2 and -O3 with -g enabled in simplify_subreg, at simplify-rtx.c:5748)
    
            PR target/66412
            * config/i386/i386.md (various splitters): Use shallow_copy_rtx
            before doing PUT_MODE or PUT_CODE on operands to avoid
            in-place RTX modification.
    
    testsuite/ChangeLog:
    
            PR target/66412
            * gcc.target/i386/pr66412.c: New test.
    
    
    Co-Authored-By: Segher Boessenkool <segher@kernel.crashing.org>
    
    From-SVN: r225006

commit 6c3cfc659ed2d8ccc126c5673e87c7c594ceac06
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 26 00:16:09 2015 +0000

    Daily bump.
    
    From-SVN: r224991

commit 4e9c49798800da00a3976a559e844dc7dab9dc09
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Thu Jun 25 19:56:36 2015 +0200

    backport: [multiple changes]
    
    2015-06-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-05-28  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * configure.host: Add bits for FreeBSD amd64 and i386.
        * configure.ac: Add signal handler for FreeBSD (amd64/i386)
        * configure: Regenerate.
        * include/freebsd-signal.h: New file.
    
        2015-05-26  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * testsuite/libjava.jni/jni.exp (gcj_jni_get_cxxflags_invocation): Add
        libiconv for FreeBSD to cxxflags.
    
    From-SVN: r224984

commit 81079cc60576c17926377e57cd6c09c4af47836f
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Thu Jun 25 19:55:02 2015 +0200

    backport: config.host (i[34567]86-*-freebsd*, [...]): Set md_unwind_header
    
    2015-06-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-05-27  John Marino <gnugcc@marino.st>
    
        * config.host (i[34567]86-*-freebsd*, x86_64-*-freebsd*): Set
        md_unwind_header
        * config/i386/freebsd-unwind.h: New.
    
    From-SVN: r224983

commit 8aeebac5050656313327b17720f664225a0401dc
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Thu Jun 25 19:54:03 2015 +0200

    backport: target-supports.exp (check_effective_target_pie): Add *-*-freebsd* to the family of pie capable targets.
    
    2015-06-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-05-12  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * lib/target-supports.exp (check_effective_target_pie): Add *-*-freebsd*
        to the family of pie capable targets.
    
    From-SVN: r224982

commit 27c4cfacae249053e3301fdf7138806e8eb0641b
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Thu Jun 25 19:53:14 2015 +0200

    backport: freebsd-spec.h (FBSD_STARTFILE_SPEC): Add the bits to build pie executables.
    
    2015-06-25  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2015-05-18  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/freebsd-spec.h (FBSD_STARTFILE_SPEC): Add the bits to build
        pie executables.
        (FBSD_ENDFILE_SPEC): Likewise.
        * config/i386/freebsd.h (STARTFILE_SPEC): Remove and use the one from
        config/freebsd-spec.h.
        (ENDFILE_SPEC): Likewise.
    
    From-SVN: r224981

commit daf67e0fe5d5e5016801ef8c17fbc3795b571867
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Thu Jun 25 10:15:18 2015 +0000

    re PR target/66563 (ICE (segmentation fault) on sh4-linux-gnu)
    
    PR target/66563
    * [SH] Add a new operand to GOTaddr2picreg so to avoid CSE.  Modify caller
      of gen_GOTaddr2picreg.
    
    From-SVN: r224935

commit bcceeb9511ede1d2e7ecc52a026753802db36763
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Thu Jun 25 08:36:03 2015 +0000

    re PR target/63408 (GCC emits incorrect fixed->fp conversion instruction on Cortex-M4 target)
    
    Fix PR target/63408
    
    Backport fix for PR target/63408 from mainline
    
    The attached patch fixes PR target/63408 and adds a regression test
    for the same. The problem is essentially that
    vfp3_const_double_for_fract_bits() needs to be aware that negative
    values cannot be used in this context.
    
    Tested with a bootstrap and regression test run on armhf. Applied.
    
    2015-06-25  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
    
            Backport from mainline.
            2015-06-24  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
            PR target/63408
            * config/arm/arm.c (vfp3_const_double_for_fract_bits): Disable
            for negative numbers.
    
    2015-06-25  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
    
            Backport from mainline.
            2015-06-24  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
            PR target/63408
            * gcc.target/arm/pr63408.c: New test.
    
    From-SVN: r224933

commit ff976fea44cf0b8d0184f313faec5cfd30f70dab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 25 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r224929

commit 1684c15d91523e9deda4f3f57990244009c856d0
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Wed Jun 24 16:24:42 2015 -0400

    fix ChangeLog date
    
    From-SVN: r224923

commit cd63ac4e70963f815087eb2b2febf7bae6bd69fd
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 24 16:24:01 2015 -0400

    re PR c++/65919 (GCC 5.1 with options "-g -std=c++14" fails to compile multiple lambdas used as default function parameters)
    
            PR c++/65919
            * mangle.c (mangle_decl): Always SET_IDENTIFIER_GLOBAL_VALUE.
            (decl_implicit_alias_p): Split out from maybe_remove_implicit_alias.
            * cp-tree.h (DECL_REALLY_EXTERN): Handle null DECL_LANG_SPECIFIC.
    
    From-SVN: r224922

commit 95c32dbb60d911fcecf9fb0ee2cb00cb394d1076
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 24 16:23:53 2015 -0400

    re PR c++/66647 (ICE: in instantiate_class_template_1, at cp/pt.c:9254)
    
            PR c++/66647
            * pt.c (dependent_type_p_r): Check for dependent alias template
            specialization sooner.
    
    From-SVN: r224921

commit b262cab3cb5af2d8593e8242447ccf684257f0d1
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 24 11:41:10 2015 -0400

    re PR c++/66501 (Default move assignment does not move array members)
    
            PR c++/66501
            * init.c (vec_copy_assign_is_trivial): New.
            (build_vec_init): Use it.
    
    From-SVN: r224905

commit b43c7bc15f6639ec77650b3d5a8a36666c5646b1
Author: Ramana Radhakrishnan <ramana@gcc.gnu.org>
Date:   Wed Jun 24 10:00:45 2015 +0000

    Fix Changelog for previous commit.
    
    From-SVN: r224891

commit 23fa65d6f34a3f93cff5bd3d250e3f366196ec3f
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Wed Jun 24 09:59:28 2015 +0000

    re PR target/66200 (GCC for ARM / AArch64 doesn't define TARGET_RELAXED_ORDERING)
    
    Fix PR target/66200
    
    This applies the same fix for PR target/66200 for AArch64 on the GCC 5 branch
    as on the 4.9 branch. On trunk we've fixed this differently by optimizing
    the access to the guard variable using a load acquire style instruction.
    
    2015-06-24  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
    
            PR target/66200
            * g++.dg/abi/aarch64_guard1.C: Adjust.
    
    2015-06-24  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>
    
            PR target/66200
            * configure.host (host_cpu): Add aarch64 case.
            * config/cpu/aarch64/atomic_word.h: New file.
    
    From-SVN: r224890

commit 6379a523c416f0f9109aae787906ca25daf7b145
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Wed Jun 24 09:16:13 2015 +0000

    Fix openmp global state fortran regression
    
            PR fortran/66549
    gcc/fortran/
            * resolve.c (resolve_global_procedure): Don't save and restore
            OpenMP state around the call to gfc_resolve.
            (gfc_resolve): Save OpenMP state on entry and restore it on return.
    gcc/testsuite/
            * gfortran.dg/gomp/omp_parallel_1.f90: New file.
    
    From-SVN: r224887

commit d2fe56623e7c9d530c850ff83f2103130bfbd4b7
Author: Renlin Li <renlin.li@arm.com>
Date:   Wed Jun 24 08:41:33 2015 +0000

    [PATCH]Use "unsigned int" to hold alignment in emit_local function.
    
    gcc/
    
    2015-06-24  Renlin Li  <renlin.li@arm.com>
    
            Backport from mainline.
            2015-06-24  Renlin Li  <renlin.li@arm.com>
    
            * varasm.c (emit_local): Use unsigned int for align variable.
    
    From-SVN: r224885

commit b41710f0c8ce0f73dedafce17568454b1d72c563
Author: Mikhail Maltsev <maltsevm@gmail.com>
Date:   Wed Jun 24 00:53:02 2015 +0000

    backport: re PR c++/65882 (Internal compiler error: Error reporting routines re-entered)
    
    Backport from mainline:
    
    2015-06-20  Mikhail Maltsev  <maltsevm@gmail.com>
    PR c++/65882
    
    gcc/cp/
            * call.c (build_new_op_1): Check tf_warning flag in all cases.
    
    gcc/testsuite/
            * g++.dg/diagnostic/inhibit-warn-1.C: New test.
            * g++.dg/diagnostic/inhibit-warn-2.C: New test.
    
    From-SVN: r224864

commit de306c1d7bc8a95c25725fb1d34a4803f8e9ccbb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 24 00:16:08 2015 +0000

    Daily bump.
    
    From-SVN: r224861

commit 361f3f22560c95a8f534d0659574ba6c83add843
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 23 10:28:55 2015 -0400

    re PR c++/65879 (Bogus linkage errors for member class of anonymous class)
    
            PR c++/65879
            * tree.c (no_linkage_check): Skip the 'this' pointer.
    
    From-SVN: r224846

commit 36c14588b65f6415043c5c9d5b29be87a1b0f752
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jun 23 10:02:38 2015 +0000

    backport: re PR tree-optimization/66413 (ICE at -Os and above with -g enabled on x86_64-linux-gnu)
    
    2015-06-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-06-09  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/66413
            * tree-inline.c (insert_init_debug_bind): Unshare value.
    
            * gcc.dg/torture/pr66413.c: New testcase.
    
    From-SVN: r224831

commit 74530528e9142c388c150a7d58fb198e1d63d4d0
Author: Ludovic Courtès <ludo@gnu.org>
Date:   Tue Jun 23 09:26:54 2015 +0000

    re PR target/65711 (arm*-linux* "link" spec passes '-dynamic-linker' even for '-shared')
    
            PR 65711
            * config/arm/linux-elf.h (LINUX_TARGET_LINK_SPEC): Move
            '-dynamic-linker' within %{!shared: ...}.
    
    From-SVN: r224830

commit 5ce51dab4371f01aedbf8919a9087e19953bb399
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 23 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224766

commit d1b728f7d0763cf81e944ac4f89730ca3285487d
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Mon Jun 22 20:48:05 2015 +0000

    re PR bootstrap/63740 (GCC 4.9.2 bootstrap fails on ARM, haifa-sched.c:6507:1: internal compiler error: in lra_create)
    
    2015-06-22  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR bootstrap/63740
            * lra-lives.c (process_bb_lives): Check insn copying the same
            reload pseudo and don't create a copy for it.
    
    From-SVN: r224761

commit fe9b0182f08ee8e7a52fc6ebec71c759468ec5a1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 22 16:53:27 2015 +0100

    backport: re PR libstdc++/65393 (std::thread shared_ptr inefficiency)
    
    Backport from mainline
    2015-06-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/65393
            * src/c++11/thread.cc (thread::_M_make_thread): Replace shared_ptr
            copies with moves.
    
    From-SVN: r224742

commit b6febe809285256cc47e044fea6d845cfad4d7e5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 22 16:53:23 2015 +0100

    backport: unordered_map.h (unordered_map, [...]): Add missing constructors.
    
    Backport from mainline
    2015-05-17  François Dumont  <fdumont@gcc.gnu.org>
    
            * include/bits/unordered_map.h (unordered_map, unordered_multimap): Add
            missing constructors.
            * include/bits/unordered_set.h (unordered_set, unordered_multiset):
            Likewise.
            * include/debug/unordered_map (unordered_map, unordered_multimap): Add
            missing constructors.
            * include/debug/unordered_set (unordered_set, unordered_multiset):
            Likewise.
            * include/profile/unordered_map (unordered_map, unordered_multimap): Add
            missing constructors.
            * include/profile/unordered_set (unordered_set, unordered_multiset):
            Likewise.
            * testsuite/23_containers/unordered_map/cons/66055.cc: Add constructor
            invocations.
            * testsuite/23_containers/unordered_multimap/cons/66055.cc: Likewise.
            * testsuite/23_containers/unordered_multiset/cons/66055.cc: Likewise.
            * testsuite/23_containers/unordered_set/cons/66055.cc: Likewise.
    
    From-SVN: r224741

commit 54b4994ba280fd0ddaa105aae993a70fb19bfe36
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 22 16:53:14 2015 +0100

    backport: re PR libstdc++/66055 (hash containers missing required reserving constructors)
    
    Backport from mainline
    2015-05-14  Nathan Myers  <ncm@cantrip.org>
                Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/66055
            * include/std/unordered_map (unordered_map, unordered_multimap): Add
            missing constructors.
            * include/std/unordered_set (unordered_set, unordered_multiset):
            Likewise.
            * testsuite/23_containers/unordered_map/cons/66055.cc: New.
            * testsuite/23_containers/unordered_multimap/cons/66055.cc: New.
            * testsuite/23_containers/unordered_multiset/cons/66055.cc: New.
            * testsuite/23_containers/unordered_set/cons/66055.cc: New.
    
    From-SVN: r224740

commit 3c12976df1f4a1f1f24601e69fef6f8d37102fbe
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Jun 22 14:12:24 2015 +0000

    backport: re PR tree-optimization/66422 (-Warray-bounds false positive with -O3)
    
    2015-06-22  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-06-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66422
            * tree-ssa-loop-ivcanon.c (remove_exits_and_undefined_stmts): Split
            block after inserted gcc_unreachable.
    
            * gcc.dg/Warray-bounds-16.c: New testcase.
    
    From-SVN: r224732

commit 492f3efbe5ee80768d0b0d4bd012b6bbd979cd20
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jun 22 15:07:09 2015 +0100

    * sv.po: Update.
    
    From-SVN: r224731

commit 3c713dcc9f6897568ebec6ae6c01515f29307773
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 22 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r224716

commit 4b27cb7ee44c756f6e9f502ecbfe7e56b8e42bcd
Author: Marek Polacek <polacek@redhat.com>
Date:   Sun Jun 21 09:45:39 2015 +0000

    * common.opt (fsanitize-undefined-trap-on-error): Add Driver.
    
    From-SVN: r224713

commit 4892df29cf09e7fe03e33a3d8c1de65019918958
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 21 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224711

commit 6766b3aa5ad3dfb8bac643a98652586bedb923f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 20 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224705

commit ac03e5b852124a370a483618881671426436b3c1
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 19 15:30:37 2015 -0400

    re PR c++/66515 (g++ segfaults when creating an std::initializer_list)
    
            PR c++/66515
            * call.c (implicit_conversion): Call reshape_init here, early.
            (build_aggr_conv): Not here.
    
    From-SVN: r224695

commit 72a8591b2baf843c671c204d283230238ad67f27
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 19 15:17:16 2015 -0400

    re PR c++/66585 (Internal compiler error when initialize field with lambda)
    
            PR c++/66585
            * pt.c (instantiate_class_template_1): Clear
            cp_unevaluated_operand and c_inhibit_evaluation_warnings.
    
    From-SVN: r224694

commit 100b8ae186dcf4af64d8ab340b70e7288824157b
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 19 14:24:29 2015 -0400

    re PR c++/65880 (Member function issue with argument "pointer to const array of member function pointers")
    
            PR c++/65880
            * decl.c (build_ptrmemfunc_type): Check TYPE_GET_PTRMEMFUNC_TYPE after
            cv-qualifiers.
    
    From-SVN: r224683

commit 307f9d7b4d56e2a6cdfb336ad7b77554b50c7018
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 19 14:24:24 2015 -0400

    re PR c++/65973 (segmentation fault when compiling C++14 code)
    
            PR c++/65973
            * constexpr.c (build_constexpr_constructor_member_initializers):
            Handle an empty STATEMENT_LIST.
    
    From-SVN: r224682

commit 5fedcb09db4f71ebcbddc13220cf7c110fa056a6
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 19 14:24:18 2015 -0400

    re PR c++/65843 (multiple use of const variable in lamba in template function causes compile error)
    
            PR c++/65843
            * pt.c (tsubst_copy_and_build): Register a capture proxy in
            local_specializations.
    
    From-SVN: r224681

commit 675a00ac1e12afa0dc3a346bd7d2a8494c1963f8
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Fri Jun 19 14:24:13 2015 -0400

    re PR c++/66061 (Internal Compiler Error when specializing a variable template when the specialization is variadic)
    
            PR c++/66061
            * g++.dg/cpp1y/var-templ31.C: New.
    
    From-SVN: r224680

commit 61243df634c4f8d48aefc5dd8ce86bbff68a5d9b
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Jun 19 14:23:43 2015 +0000

    backport: pr62308.c: New test.
    
    2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline r224649.
            2015-06-19  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.target/aarch64/pr62308.c: New test.
    
    From-SVN: r224670

commit 83b0257136fe89afa80fb751ef4a7c18d0465529
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 19 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224636

commit 8fc5911320f61969920b872d25dfa599935d6621
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jun 18 10:55:45 2015 -0400

    re PR c++/66001 (ICE when NSDMI in a literal class uses a destructor)
    
            PR c++/66001
            * constexpr.c (cxx_eval_constant_expression): Handle TRY_BLOCK and
            TRY_FINALLY_EXPR.
            (potential_constant_expression_1): Likewise.
    
    From-SVN: r224621

commit dc5e648e5c6037fb3720ae0d3cbff46b106ececf
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 18 14:54:12 2015 +0000

    const4.C: New testcase.
    
    2015-06-18  Richard Biener  <rguenther@suse.de>
    
            * g++.dg/other/const4.C: New testcase.
    
    From-SVN: r224619

commit d2383ef6528780704a0821d0075ffaf9492a0d4f
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 18 14:04:05 2015 +0000

    backport: re PR middle-end/66375 (wrong code at -O2 and -O3 on x86_64-linux-gnu)
    
    2015-06-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-06-03  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66375
            * tree-scalar-evolution.c (follow_ssa_edge_binary): First
            add to the evolution before following SSA edges.
    
            * gcc.dg/torture/pr66375.c: New testcase.
    
    From-SVN: r224610

commit b3944f8854d8da5fc071f0e161d628bf694b82b1
Author: Venkataramanan Kumar <venkataramanan.kumar@amd.com>
Date:   Thu Jun 18 10:56:43 2015 +0000

    gcc/
    2015-06-18  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            Backport from mainline r224414.
            2015-06-12  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            * common/config/i386/i386-common.c
            (OPTION_MASK_ISA_MWAITX_SET): New.
            (ix86_handle_option): Handle mwaitx.
            * config.gcc (i[34567]86-*-*): Add mwaitxintrin.h,
            (x86_64-*-*): Likewise.
            * config/i386/mwaitxintrin.h: New header.
            * config/i386/cpuid.h (bit_MWAITX):  Define.
            * config/i386/driver-i386.c (host_detect_local_cpu): Detect
            MWAITX support.
            * config/i386/i386.opt (mwaitx): New.
            * config/i386/i386-builtin-types.def
            (VOID_FTYPE_UNSIGNED_ UNSIGNED_UNSIGNED): New function type.
            * config/i386/i386-c.c: Define __MWAITX__ if needed.
            * config/i386/i386.c (ix86_target_string): Define -mmwaitx option.
            (PTA_MWAITX): New.
            (ix86_option_override_internal): Handle new option.
            (processor_alias_table): Added PTA_MWAITX.
            (ix86_valid_target_attribute_inner_p): Add OPT_mmwaitx.
            (ix86_builtins): Add IX86_BUILTIN_MWAITX, IX86_BUILTIN_MONITORX.
            (ix86_expand_builtin): Handle IX86_BUILTIN_MWAITX and
            IX86_BUILTIN_MONITORX  built-ins.
            * config/i386/i386.h (TARGET_MWAITX): New.
            * config/i386/i386.md (unspecv): Add UNSPEC_MWAITX and
            UNSPEC_MONITORX.
            (mwaitx):  New pattern.
            (monitorx_<mode>): New pattern.
            * config/i386/x86intrin.h: Include mwaitxintrin.h.
            * doc/extend.texi: Document monitorx and mwaitx builtins.
            * doc/invoke.texi: Document -mmwaitx option.
    
    gcc/testsuite
    
    2015-06-18  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            Backport from mainline r224414.
            2015-06-12  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            * gcc.target/i386/monitorx.c: New.
            * gcc.target/i386/sse-12.c: Add -mmwaitx.
            * gcc.target/i386/sse-13.c: Ditto.
            * gcc.target/i386/sse-14.c: Ditto.
            * gcc.target/i386/sse-22.c: Ditto.
            * gcc.target/i386/sse-23.c: Ditto.
            * g++.dg/other/i386-2.C: Ditto.
            * g++.dg/other/i386-3.C: Ditto.
    
    From-SVN: r224603

commit 047bf8a00568222505f10667373b0ed5e373d66e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 18 00:16:15 2015 +0000

    Daily bump.
    
    From-SVN: r224590

commit 986b888fff762627f9a822561e66d925441f3288
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 17 20:14:49 2015 +0200

    re PR c++/66571 (Template substitution causes some OpenMP rejects-valid)
    
            PR c++/66571
            * pt.c (tsubst_omp_clause_decl): New function.
            (tsubst_omp_clauses): Use it or tsubst_copy instead of
            tsubst_expr on OMP_CLAUSE_DECL.
    
            * g++.dg/gomp/pr66571-1.C: New test.
    
    From-SVN: r224572

commit 37019cfd537aca0724df40724f92faf5e522905a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 17 20:10:23 2015 +0200

    re PR middle-end/66429 (ICE in expand_GOMP_SIMD_LAST_LANE)
    
    2015-06-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/66429
            * omp-low.c (expand_omp_taskreg, expand_omp_target): Use child_cfun
            instead of DECL_STRUCT_FUNCTION (child_fn).  Or in has_simduid_loops
            and has_force_vectorize_loops flags from cfun into
            child_cfun.
            (expand_omp_simd): For broken loop, set cfun->has_simduid_loops
            if simduid is non-NULL.
            * tree-pass.h (make_pass_simduid_cleanup): New prototype.
            * passes.def (pass_simduid_cleanup): Add new pass after loop
            passes.
            * tree-vectorizer.c (adjust_simduid_builtins): Remove one unnecessary
            indirection from htab argument's type.
            (shrink_simd_arrays): New function.
            (vectorize_loops): Use it.  Adjust adjust_simduid_builtins caller.
            Don't call adjust_simduid_builtins if there are no loops.
            (pass_data_simduid_cleanup, pass_simduid_cleanup): New variables.
            (pass_simduid_cleanup::execute): New method.
            (make_pass_simduid_cleanup): New function.
    
    From-SVN: r224570

commit c4b956c0f8356c5e65dfa8b0a1871762a05a64fe
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 17 10:33:23 2015 -0400

    re PR c++/66536 (ICE in build_ctor_subob_ref, at cp/tree.c:2534)
    
            PR c++/66536
            * tree.c (replace_placeholders_r) [CONSTRUCTOR]: Handle type
            mismatch.
    
    From-SVN: r224560

commit e5d514abe8742f3111d48a58c1f993fb85a46515
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 17 10:33:17 2015 -0400

    re PR c++/58063 (default arguments evaluated twice per call)
    
            PR c++/58063
            * tree.c (bot_manip): Remap SAVE_EXPR.
    
    From-SVN: r224559

commit c30b6f214de5c2c455782294eaf0f787e9f0186b
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 17 10:33:08 2015 -0400

    re PR c++/66387 (ICE in make_decl_rtl with lambda)
    
            PR c++/66387
            * pt.c (tsubst_copy) [VAR_DECL]: Use process_outer_var_ref.
    
    From-SVN: r224558

commit d7c66ab4863b1b948fb324d36ea9e55757ada574
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 17 10:33:02 2015 -0400

    re PR c++/66450 ([C++11][constexpr] Issues when delegating implicit copy constructor in constexpr function)
    
            PR c++/66450
            * constexpr.c (cxx_eval_store_expression): Avoid messing up outer
            ctx->ctor.
    
    From-SVN: r224557

commit 7e8795879d2fac07a5c531c53f8c8cfe2b2e904d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 17 10:32:55 2015 -0400

    re PR c++/66289 ("error: ambiguous template instantiation" with partial specialization defined in terms of alias template)
    
            PR c++/66289
            * cp-tree.h (TEMPLATE_DECL_COMPLEX_ALIAS_P): New.
            * pt.c (push_template_decl_real): Set it.
            (dependent_alias_template_spec_p): Use it.
            (dependent_type_p_r): Use dependent_alias_template_spec_p.
            (uses_all_template_parms_data, uses_all_template_parms_r)
            (complex_alias_template_p): New.
            (get_template_parm_index): Handle BOUND_TEMPLATE_TEMPLATE_PARM.
    
    From-SVN: r224556

commit 2b3ab5acf01bf561dcdd54c738cd3d47fa2b39cb
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jun 17 12:12:17 2015 +0200

    re PR testsuite/65944 (FAIL: g++.dg/lto/pr65276: undefined reference to std2::exception::~exception())
    
            PR testsuite/65944
            * g++.dg/lto/pr65276_0.C: Add std2::exception::~exception() function.
    
    From-SVN: r224551

commit 26a9a5b25e6fa57c2fceb469bb12d7f1f854927c
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Wed Jun 17 07:42:39 2015 +0000

    backport: re PR target/65527 (ICE: in expand_builtin_with_bounds, at builtins.c:7120 with -fcheck-pointer-bounds -mmpx)
    
    gcc/
    
            Backport from mainline r223929.
            2015-06-01  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR target/65527
            * cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Add
            redirection for instrumented calls.
            * lto-wrapper.c (merge_and_complain): Merge -fcheck-pointer-bounds.
            (append_compiler_options): Append -fcheck-pointer-bounds.
            * tree-chkp.h (chkp_copy_call_skip_bounds): New.
            (chkp_redirect_edge): New.
            * tree-chkp.c (chkp_copy_call_skip_bounds): New.
            (chkp_redirect_edge): New.
    
    gcc/testsuite/
    
            Backport from mainline r223929.
            2015-06-01  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR target/65527
            * gcc.target/i386/mpx/chkp-fix-calls-1.c: New.
            * gcc.target/i386/mpx/chkp-fix-calls-2.c: New.
            * gcc.target/i386/mpx/chkp-fix-calls-3.c: New.
            * gcc.target/i386/mpx/chkp-fix-calls-4.c: New.
    
    From-SVN: r224547

commit bcc25516af39db8f5a8d8304b8d4b1f6d36bf717
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Wed Jun 17 07:40:15 2015 +0000

    backport: ipa.c (symbol_table::remove_unreachable_nodes): Don't remove instumentation thunks calling reachable functions.
    
    gcc/
    
            Backport from mainline r224063.
            2015-06-03  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * ipa.c (symbol_table::remove_unreachable_nodes): Don't
            remove instumentation thunks calling reachable functions.
            * lto-cgraph.c (output_refs): Always output IPA_REF_CHKP.
            * lto/lto-partition.c (privatize_symbol_name_1): New.
            (privatize_symbol_name): Privatize both decl and orig_decl
            names for instrumented functions.
            * cgraph.c (cgraph_node::verify_node): Add transparent
            transparent alias chain check for instrumented node.
    
    gcc/testsuite/
    
            Backport from mainline r224063.
            2015-06-03  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * gcc.dg/lto/chkp-privatize-1_0.c: New.
            * gcc.dg/lto/chkp-privatize-1_1.c: New.
            * gcc.dg/lto/chkp-privatize-2_0.c: New.
            * gcc.dg/lto/chkp-privatize-2_1.c: New.
    
    From-SVN: r224546

commit 6b9773862c30d45b54cf409487b7706a1f1c357a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 17 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224543

commit 6097d55589dfa9d1885d8098ae2dc8c67fe33264
Author: Jim Wilson <jim.wilson@linaro.org>
Date:   Tue Jun 16 20:11:41 2015 +0000

    backport: re PR target/66258 (compiling a stdarg function with arch +nofp generates an ICE)
    
    gcc/
            Backport from mainline
            2015-06-02  Jim Wilson  <jim.wilson@linaro.org>
    
            PR target/66258
            * config/aarch64/aarch64.c (aarch64_function_value_regno_p): Change
            !TARGET_GENERAL_REGS_ONLY to TARGET_FLOAT.
            (aarch64_secondary_reload): Likewise
            (aarch64_expand_builtin_va_start): Change TARGET_GENERAL_REGS_ONLY
            to !TARGET_FLOAT.
            (aarch64_gimplify_va_arg_expr, aarch64_setup_incoming_varargs):
            Likewise.
    
    From-SVN: r224538

commit 83313da8eca07aeebfd292c50e49300e5d031ec6
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jun 16 14:25:55 2015 +0000

    revert: [multiple changes]
    
    2015-06-16  Richard Biener  <rguenther@suse.de>
    
            Revert
            2015-06-01  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-05-26  Michael Matz  <matz@suse.de>
    
            PR middle-end/66251
            * tree-vect-stmts.c (vect_create_vectorized_demotion_stmts): Always set
            STMT_VINFO_VEC_STMT, also with SLP.
    
            2015-05-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66251
            * tree-vect-stmts.c (vectorizable_conversion): Properly
            set STMT_VINFO_VEC_STMT even for the SLP case.
    
    From-SVN: r224520

commit 3233c56236d7ddf5776b1676fc3426b87e5c43ba
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 16 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r224499

commit 501e757fbe2ea441eeeda89e526ad97af92d3a36
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 15 13:31:15 2015 +0100

    backport: re PR libstdc++/66030 ([5.1.0] std::codecvt_byname missing from libstdc++ DLL)
    
    Backport from mainline
    2015-06-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/66030
            * config/abi/pre/gnu.ver: Export codecvt_byname and codecvt symbols
            for mingw32.
    
    From-SVN: r224478

commit 075e0b3e88d7da0202fb8bb2ae588e77719184f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 15 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224474

commit 82b8f195462468bca8bd05b3dd8389a1ed28e729
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sun Jun 14 18:01:26 2015 +0100

    * sv.po: Update.
    
    From-SVN: r224469

commit 79cf8ab672d1fa06bbffc836f4950cfc165727da
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Jun 14 10:08:00 2015 +0000

    re PR fortran/66385 (ICE: FORALL writing multiple elements of one array)
    
    2015-06-14  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66385
            Backport from trunk
            * frontend-passes.c (combine_array_constructor): Return early if
            inside a FORALL loop.
    
    2015-06-14  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66385
            * gfortran.dg/forall_17.f90:  New test.
    
    From-SVN: r224465

commit 18ba28b81510e1306d55e00ed382fd2636a756ee
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Jun 14 08:55:40 2015 +0000

    intrinsic.texi: Change \leq to < in descrition of imaginary part in argument to log.
    
    2015-06-14  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            * intrinsic.texi:  Change \leq to < in descrition of imaginary
            part in argument to log.
    
    From-SVN: r224464

commit dad36e6e537281ef01a2a312c4e36c5373911b3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 14 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224460

commit 8908b222012d9f353169f302099c68d81dc7effd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 13 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224449

commit 5a4c9d2a575d2471a175437e78751fcad2061918
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 12 15:11:35 2015 -0400

    re PR c++/65719 (Link error with constexpr variable template)
    
            PR c++/65719
            * pt.c (tsubst_decl) [VAR_DECL]: Mark namespace-scope
            variables as DECL_NOT_REALLY_EXTERN.
    
    From-SVN: r224443

commit 6089343c91cd7854fb3e6e20e95cae0bb5f1fb10
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Fri Jun 12 13:46:22 2015 +0000

    backport: dbxout.c (xcoff_debug_hooks): Provide a function for register_main_translation_unit hook.
    
    2015-06-11  Pierre-Marie de Rodat  <derodat@adacore.com>
    
            Backport from mainline:
            2015-06-11  David Edelsohn  <dje.gcc@gmail.com>
    
                    * dbxout.c (xcoff_debug_hooks): Provide a function for
                    register_main_translation_unit hook.
    
    From-SVN: r224432

commit 718e94f1921126277429560dff8f203803202d11
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 12 12:22:01 2015 +0100

    re PR libstdc++/66464 (codecvt_utf16 max_length returning incorrect value)
    
            PR libstdc++/66464
            * src/c++11/codecvt.cc (codecvt_utf16_base<char32_t>::do_max_length):
            Return 4 not 3.
    
    From-SVN: r224417

commit 63ca0e783bdaf64c41f64744e0394610e0417d5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 12 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224405

commit d539e1448b137f3a17d598cd58f6575e4d18334f
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Jun 11 23:22:32 2015 +0000

    pa.c (pa_output_global_address): Handle LABEL_REF plus CONST_INT for goto.
    
            * config/pa/pa.c (pa_output_global_address): Handle LABEL_REF plus
            CONST_INT for goto.
    
    From-SVN: r224398

commit c27c7a49d3f97329f4f55f2afa693dfba7066e80
Author: Pierre-Marie de Rodat <pmderodat@gcc.gnu.org>
Date:   Thu Jun 11 16:04:05 2015 +0000

    Fix misplaced ChangeLog entries
    
    From-SVN: r224388

commit 0b788a371bf95ed7ddaf228078bc1956a62425e8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 11 15:58:32 2015 +0000

    re PR bootstrap/66252 (bootstrap comparison failures on sparc-linux)
    
            PR bootstrap/66252
            * config/sparc/sparc.c (hard_regno_mode_classes): Add ??? comment.
            * config/sparc/sparc.md (zero_extendsidi2_insn_sp32): Use single order.
            (*addx_extend_sp32): Fix pasto.
            (*subx_extend): Rename into...
            (*subx_extend_sp32): ...this.
            (*adddi3_extend_sp32): Add earlyclobber.
            (*subdi3_insn_sp32): Likewise.
            (*subdi3_extend_sp32): Likewise.
            (*and_not_di_sp32): Likewise.
            (*or_not_di_sp32): Likewise.
            (*xor_not_di_sp32): Likewise.
            (*negdi2_sp32): Likewise.
            (*one_cmpldi2_sp32): Likewise.
    
    From-SVN: r224385

commit 52abc4c5fc6e5814b451ec8fe874bbc050417311
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jun 11 11:04:54 2015 -0400

    re PR c++/66445 (ICE with lambda in stmt expression in a template)
    
            PR c++/66445
            * constexpr.c (potential_constant_expression_1): Handle a
            DECL_EXPR of TYPE_DECL.
    
    From-SVN: r224379

commit 1bcdd49b64d2e555fd7a0200b84ba7d3ea1dd5f4
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Thu Jun 11 12:51:04 2015 +0000

    Restore DW_AT_abstract_origin for cross-unit call sites
    
    PR debug/66503
    Backport from mainline
    
    gcc/ChangeLog:
            * debug.h (struct gcc_debug_hooks): Add a
            register_main_translation_unit hook.
            * debug.c (do_nothing_debug_hooks): Provide a function for this
            new hook.
            * dbxout.c (dbx_debug_hooks): Likewise.
            * sdbout.c (sdb_debug_hooks): Likewise.
            * vmsdbgout.c (vmsdbg_debug_hooks): Likewise.
            * dwarf2out.c (main_translation_unit): New global variable.
            (dwarf2out_register_main_translation_unit): New function
            implementing the new hook.
            (dwarf2_debug_hooks): Assign
            dwarf2out_register_main_translation_unit to this new hook.
            (dwarf2out_init): Associate any main translation unit to
            comp_unit_die ().
            * c/c-decl.c (pop_scope): Register the main translation unit
            through the new debug hook.
            * cp/decl.c (cxx_init_decl_processing): Likewise.
    
    gcc/ada/ChangeLog:
            * gcc-interface/utils.c (get_global_context): Register the main
            translation unit through the new debug hook.
    
    gcc/fortran/ChangeLog:
            * f95-lang.c (gfc_create_decls): Register the main translation
            unit through the new debug hook.
    
    From-SVN: r224373

commit 139d4cc11b573e83af26150d72da823342c3e13e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 11 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224362

commit 496d8e87fbdc11be99077ae1df93fac58266a5fb
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jun 10 20:37:34 2015 +0200

    re PR target/66473 (ICE: in extract_insn, at recog.c:2343 (unrecognizable insn) with -mavx512f)
    
            PR target/66473
            * config/i386/i386.c (ix86_expand_vector_set): Use gen_int_mode
            to prepare mask operand for AVX512 modes.
    
    testsuite/ChangeLog:
    
            PR target/66473
            * gcc.target/i386/pr66473.c: New test.
    
    From-SVN: r224342

commit 9d2068ba0dde973da59169a09f8c77c282ed354f
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jun 10 17:15:58 2015 +0000

    backport: re PR target/66474 (Document the use of %x in powerpc asm statements)
    
    2015-06-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline:
            2015-06-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/66474
            * doc/md.texi (Machine Constraints): Document that on the PowerPC
            if you use a constraint that targets a VSX register, you must use
            %x<n> in the template.
    
    From-SVN: r224334

commit fa4aa1c9b6fb0535d3b6b0792e05e73a83a4da60
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 10 11:16:16 2015 +0200

    re PR target/66470 (TLS ICE due to ix86_split_long_move)
    
            PR target/66470
            * config/i386/i386.c (ix86_split_long_move): For collisions
            involving direct tls segment refs, move the UNSPEC_TP possibly
            wrapped in ZERO_EXTEND out of the address for lea, to each of
            the memory loads.
    
            * gcc.dg/tls/pr66470.c: New test.
            * gcc.target/i386/pr66470.c: New test.
    
    From-SVN: r224320

commit 15a1209b4a4075dcbfc34412867216ba1c6144ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 10 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224308

commit d2fc448b4d3fbd1b23da767a680d055f2aa35970
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue Jun 9 21:31:38 2015 +0000

    Make-lang.in (jit.install-common): Install headers using INSTALL_DATA.
    
    2015-06-09  Matthias Klose  <doko@ubuntu.com>
    
            * Make-lang.in (jit.install-common): Install headers using INSTALL_DATA.
    
    From-SVN: r224304

commit 96a6c2e0fe142ecfbc2f97e60aa975df782fb85b
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 9 13:19:18 2015 -0400

    re PR c++/66387 (ICE in make_decl_rtl with lambda)
    
            PR c++/66387
            * semantics.c (process_outer_var_ref): Make sure the value is
            actually constant before returning it.
            * typeck.c (cp_build_array_ref): Allow subscripting non-lvalue
            array.
    
    From-SVN: r224292

commit 83e2f9467cd98a47b9a200687690a1a18dac6e34
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 9 13:19:12 2015 -0400

    re PR c++/66383 (ICE in gimplify_expr on this passed in inline initialization)
    
            PR c++/66383
            * tree.c (replace_placeholders_r): Handle placeholders for an
            outer object.
            * typeck2.c (store_init_value): Only replace_placeholders for
            objects of class type.
    
    From-SVN: r224291

commit e9d9c4203e36402c69d5a898d00147e329aac6a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 9 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224257

commit d15132f6a971e7cf2ea08c079e44835e7d727ffa
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Jun 8 20:41:24 2015 +0200

    backport: re PR target/66275 (__attribute__((sysv_abi)) with x86_64-w64-mingw32-gcc generates incorrect code)
    
            Backport from mainline:
            2015-06-03  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66275
            * config/i386/i386.c (ix86_function_arg_regno): Use ix86_cfun_abi
            to determine current function ABI.
            (ix86_function_value_regno_p): Ditto.
    
    testsuite/ChangeLog:
    
            Backport from mainline:
            2015-06-03  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/66275
            * gcc.target/i386/pr66275.c: New test.
    
    From-SVN: r224244

commit a36ef9156b30bd3a58ea96d0ae9f0d0395137250
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Jun 8 17:09:08 2015 +0000

    Handle -fipa-ra in reload_combine
    
    2015-06-08  Tom de Vries  <tom@codesourcery.com>
    
            backport from mainline:
            2015-06-08  Tom de Vries  <tom@codesourcery.com>
    
            PR rtl-optimization/66444
            * postreload.c (reload_combine): Use get_call_reg_set_usage instead of
            call_used_regs.
    
            * gcc.dg/pr66444.c: New test.
    
    From-SVN: r224241

commit 07bd032be47a27103e9122a578e993ac9129fe0f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Jun 8 16:45:56 2015 +0000

    re PR fortran/66245 (ICE on select type with empty type spec)
    
    2015-06-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66245
            * match.c (gfc_match_type_is, gfc_match_class_is):  Check if the
            return type spec or derived type spec is validate.
    
    2015-06-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66245
            * gfortran.dg/class_is_1.f90: New test.
            * gfortran.dg/type_is_1.f90: Ditto.
    
    From-SVN: r224238

commit 11dc409bf36bd753431e427755071df8ca76f20b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 8 15:19:15 2015 +0100

    backport: libstdc++.exp (libstdc++_init): Unset LANGUAGE environment variable.
    
    Backported from mainline
    2015-06-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/lib/libstdc++.exp (libstdc++_init): Unset LANGUAGE
            environment variable.
    
    From-SVN: r224231

commit 22d67dee6f945f0b8ff6704da26f90651974cbdd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 8 15:19:10 2015 +0100

    re PR libstdc++/66354 ([UBSAN] stl_algobase.h:708:7: runtime error: null pointer passed as argument)
    
            PR libstdc++/66354
            * include/bits/stl_algobase.h (__fill_a): Check length before calling
            memset.
    
            PR libstdc++/66327
            * include/bits/stl_algobase.h (__equal<true>::equal): Do not call
            memcmp for empty ranges.
            (__lexicographical_compare<true>::__lc): Likewise.
    
    From-SVN: r224230

commit dceb39ad4f701141097f3dd653d492c515afa10b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 8 14:42:58 2015 +0100

    backport: abi.xml: Document versioning for 5.1.0 release.
    
    Backport from mainline:
    
    2015-06-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/abi.xml: Document versioning for 5.1.0 release.
            * doc/xml/manual/evolution.xml: Fix typos.
            * doc/html/manual/*: Regenerate.
    
    2015-04-21  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/configure.xml: Update descriptions of options
            affecting dual ABI and add cross-references.
            * doc/xml/manual/strings.xml: Clarify that string isn't COW now.
            * doc/xml/manual/using.xml: Document ABI transition.
            * doc/html/*: Regenerate.
    
    2015-04-20  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/concurrency_extensions.xml: Update documentation
            on atomics.
            * doc/xml/manual/using.xml: Likewise. Improve markup.
            * doc/html/*: Regenerate.
    
    From-SVN: r224226

commit cc197376bcc84e0f27926f1a228186be45644ffe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 8 14:42:51 2015 +0100

    re PR libstdc++/66441 (wstring_convert not working correctly)
    
            PR libstdc++/66441
            * testsuite/22_locale/conversions/string/66441.cc: New.
            * include/bits/locale_conv.h (__do_str_codecvt): Reserve enough space
            in the output string for BOM and complete result.
    
    From-SVN: r224225

commit 61da36930cac1f100667c5b04e61ea5ab627b482
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 8 14:42:46 2015 +0100

    re PR libstdc++/66417 (std::codecvt_utf16<char32_t, 0x10FFFF, std::codecvt_mode::generate_header> generates incorrect output)
    
            PR libstdc++/66417
            * src/c++11/codecvt.cc (write_utf16_code_point): Use adjust_byte_order
            for single UTF-16 units.
            * testsuite/22_locale/codecvt/codecvt_utf16/66417.cc: New.
    
    From-SVN: r224224

commit ddc9e50cffaf68b28722031714c33f4aca92e8f3
Author: Venkataramanan Kumar <venkataramanan.kumar@amd.com>
Date:   Mon Jun 8 10:28:40 2015 +0000

    sse.md (sse3_mwait): Swap the operand constriants.
    
    2015-06-08  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            * config/i386/sse.md (sse3_mwait): Swap the operand constriants.
    
    From-SVN: r224215

commit f6812f67eaf61e7ffa2af41fb41043a0a6bfc5ee
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jun 8 10:43:15 2015 +0100

    * sv.po: Update.
    
    From-SVN: r224212

commit 6eaf4c4ff251110eade0b149a730ce79e7b53fd5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 8 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224205

commit 0f731ce2b751304f3ae836c1e2f4ff8d8c150704
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 7 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224197

commit 6d4fc13022f22fb1de8c36c0000b7ca8d8a5b7ab
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Jun 6 18:35:16 2015 +0000

    re PR bootstrap/66319 (gcov-tool.c:84:65: error: invalid conversion from 'int (*)(const c har*, const stat*, int, FTW*)' to 'int (*)(const char*, const stat*, int, FTW)')
    
            PR bootstrap/66319
            * config/pa/pa-hpux10.h (TARGET_OS_CPP_BUILTINS): Rearrange builtin
            defines.  Define _LARGEFILE_SOURCE and _LARGEFILE64_SOURCE for c++.
            Define _XOPEN_UNIX and _XOPEN_SOURCE_EXTENDED for c++ if unix95 or
            later.
            * config/pa/pa-hpux11.h (TARGET_OS_CPP_BUILTINS): Likewise.
            Define _INCLUDE_STDC_SOURCE_PRE_199901, _INCLUDE_STDC_SOURCE_199901,
            _INCLUDE_XOPEN_SOURCE_PRE_500, _INCLUDE_XOPEN_SOURCE_520,
            _INCLUDE_XOPEN_SOURCE_PRE_600 and _INCLUDE_XOPEN_SOURCE_600 for c++
            and non iso if unix2003.
    
    From-SVN: r224193

commit aef40518fce289f3897bcd4e857fb35fe1985616
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 6 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224180

commit 2d84efddab5b23b80e82136b3d45c7bfb2adb3cf
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Jun 5 23:16:57 2015 +0000

    re PR fortran/66347 (Seg fault (ICE) on compile)
    
    2015-06-05  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66347
            * resolve.c (apply_default_init_local): Do not dereference a NULL
            pointer.
    
    2015-06-05  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66347
            * gfortran.dg/blockdata_9.f: New test.
    
    From-SVN: r224176

commit 0bee8af5f90a1e895288fe6e81e6ada60f85bb55
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Jun 5 20:40:35 2015 +0000

    [multiple changes]
    
    2015-06-03  Russell Whitesides  <russelldub@gmail.com>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/40958
            PR fortran/60780
            PR fortran/66377
            * module.c (load_equiv): Add check for loading duplicate EQUIVALENCEs
            from different modules.  Eliminate the pruning of unused
            equivalence-objects
    
    
    2015-06-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66377
            gfortran.dg/equiv_9.f90: New test.
    
    From-SVN: r224171

commit dd0be19a076adff62bcb389b7f05b3039df43851
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 5 15:17:30 2015 -0400

    re PR c++/66405 (ICE: in tsubst, at cp/pt.c:11984)
    
            PR c++/66405
            * pt.c (argument_pack_element_is_expansion_p): Return 2 if
            the expansion has extra args.
            (use_pack_expansion_extra_args_p): Return true in that case.
    
    From-SVN: r224165

commit b74515073cc2277b24e43f2cee2f95536691aaac
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 5 15:17:24 2015 -0400

    re PR c++/66405 (ICE: in tsubst, at cp/pt.c:11984)
    
            PR c++/66405
            * pt.c (type_dependent_expression_p): EXPR_PACK_EXPANSION is
            dependent even if it has a type.
    
    From-SVN: r224164

commit 6b990e4258947d5355b9282ac37e74b229751214
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 5 12:25:26 2015 -0400

    re PR c++/65942 ([C++14] cannot use std::function as comparator in algorithms)
    
            PR c++/65942
            * decl2.c (mark_used): Don't always instantiate constexpr fns.
            * constexpr.c (cxx_eval_call_expression): Instantiate them here.
    
    From-SVN: r224157

commit a62082d9c8a725c3f03fccc82e8e9c7ad8b486aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 5 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r224142

commit 2b82d78c37da30e6e8f670a3b308ac2824dc3598
Author: Renlin Li <renlin.li@arm.com>
Date:   Thu Jun 4 16:05:29 2015 +0000

    [libstdc++-v3]Add _GLIBCXX_HAVE_LIMIT_FSIZE to guard 27_io/fpos/14775.cc.
    
    libstdc++-v3/
    
    2015-06-04  Renlin Li  <renlin.li@arm.com>
    
            Backported from mainline
            2015-06-02  Renlin Li  <renlin.li@arm.com>
    
            * testsuite/27_io/fpos/14775.cc: Add _GLIBCXX_HAVE_LIMIT_FSIZE check.
    
    From-SVN: r224132

commit 6b49ad1807d4adf307609161ea6fbc2332340cce
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Thu Jun 4 10:39:00 2015 +0000

    decl.c (gnat_to_gnu_entity): If processing a definition...
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Function>: If
            processing a definition, create definitions for padding types
            around return types.
    
    From-SVN: r224122

commit 1afecbe0d93ade2bc679a5aa0dc0f33338220362
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Jun 4 08:39:01 2015 +0000

    re PR sanitizer/66190 (ICE: tree code ‘call_expr’ is not supported in LTO streams with -fsanitize=null)
    
            PR sanitizer/66190
            * cp-gimplify.c (struct cp_genericize_data): Add no_sanitize_p.
            (cp_genericize_r): Don't instrument static initializers.
            (cp_genericize_tree): Initialize wtd.no_sanitize_p.
    
            * g++.dg/ubsan/static-init-1.C: New test.
            * g++.dg/ubsan/static-init-2.C: New test.
            * g++.dg/ubsan/static-init-3.C: New test.
    
    From-SVN: r224117

commit d8fec378c43fe43e77ab9b5367cc2f3827bd5a34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 4 00:16:18 2015 +0000

    Daily bump.
    
    From-SVN: r224111

commit 9f44e3eb9f6a0afafb5c5b2f99b15dde5363db4e
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 3 07:39:06 2015 +0000

    Backport PRs 62031, 65549, 66123, 66211, 66272, 66280
    
    2015-06-03  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-06-02  Richard Biener  <rguenther@suse.de>
    
            PR debug/65549
            * dwarf2out.c (lookup_context_die): New function.
            (resolve_addr): Avoid forcing a full DIE for the
            target of a DW_TAG_GNU_call_site during late compilation.
            Instead create a stub DIE without a type if we have a
            context DIE present.
    
            * g++.dg/lto/pr65549_0.C: New testcase.
    
            2015-06-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66280
            * tree-vect-slp.c (vect_detect_hybrid_slp_stmts): Fix pattern
            def-use walking.
    
            * g++.dg/torture/pr66280.C: New testcase.
            * g++.dg/torture/pr66280-2.C: Likewise.
    
            2015-05-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66272
            Revert parts of
            2014-08-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/62031
            * tree-data-ref.c (dr_analyze_indices): Do not set
            DR_UNCONSTRAINED_BASE.
            (dr_may_alias_p): All indirect accesses have to go the
            formerly DR_UNCONSTRAINED_BASE path.
            * tree-data-ref.h (struct indices): Remove
            unconstrained_base member.
            (DR_UNCONSTRAINED_BASE): Remove.
    
            * gcc.dg/torture/pr66272.c: New testcase.
    
            2015-05-21  Richard Biener  <rguenther@suse.de>
    
            PR c++/66211
            * match.pd: Guard pattern optimzing (int)(float)int
            conversions to apply only on GIMPLE.
    
            * g++.dg/conversion/pr66211.C: New testcase.
            * gcc.dg/tree-ssa/forwprop-18.c: Adjust.
    
            2015-05-13  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66123
            * tree-ssa-dom.c (propagate_rhs_into_lhs): Check if we found
            a taken edge.
    
            * gcc.dg/torture/pr66123.c: New testcase.
    
    From-SVN: r224059

commit 96042f26c1e427960acb80ecbce5056941237529
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 3 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r224052

commit 3e22f80d3aa805221fa5b8abccecc1607eb8f52b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Jun 2 23:02:05 2015 +0000

    re PR fortran/66380 (ICE for intrinsic reshape with insufficient number of array elements)
    
    2015-06-02  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66380
            * simplify.c (gfc_simplify_reshape): Convert assert into returning
            NULL, which triggers an error condition.
    
    2015-06-02  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66380
            * gfortran.dg/reshape_7.f90: New test.
    
    From-SVN: r224049

commit b15dfdc80ad4a160231e5323979ccc59484ff5f0
Author: Renlin Li <renlin.li@arm.com>
Date:   Tue Jun 2 11:14:16 2015 +0000

    [PATCH][AARCH64]Use shl for vec_shr_<mode> rtx pattern.
    
    gcc/
    
    2015-06-02 Renlin Li <renlin.li@arm.com>
    
            Backport from mainline
            2015-04-30  Renlin Li  <renlin.li@arm.com>
    
            * config/aarch64/aarch64-simd.md (vec_shr): Defined as an unspec.
            * config/aarch64/iterators.md (unspec): Add UNSPEC_VEC_SHR.
    
    gcc/testsuite
    
    2015-06-02 Renlin Li <renlin.li@arm.com>
    
            Backport from mainline
            2015-04-30  Renlin Li  <renlin.li@arm.com>
    
            * gcc.target/aarch64/vect-reduc-or_1.c: New.
    
    From-SVN: r224024

commit a4d3e6f572d4627a0ce4db3f5e44b0bde6156001
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Jun 2 09:17:49 2015 +0000

    re PR middle-end/66345 (internal compiler error: Segmentation fault)
    
            PR middle-end/66345
            * gimple-fold.c (gimple_fold_builtin_snprintf): Return false if
            get_maxval_strlen does not produce an INTEGER_CST.
    
            * gcc.dg/torture/pr66345.c: New test.
    
    From-SVN: r224017

commit 09fb017e83020beed527ca1eff3116b5e0359398
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Jun 2 13:10:08 2015 +0930

    vsx.md (vsx_extract_v4sf): Revert accidental 2014-08-11 change.
    
            * config/rs6000/vsx.md (vsx_extract_v4sf): Revert accidental
            2014-08-11 change.
    
    From-SVN: r224011

commit 99519d138ea541fd58eb1cfa9832934ab95ffb10
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 2 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r224005

commit 22c2717f8f32af0897f9bbc17e43c0d54bad6d79
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jun 1 14:43:34 2015 +0100

    * sv.po: Update.
    
    From-SVN: r223976

commit 1394614751b467384f8dc745a7dbd05515a3a118
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 1 13:42:33 2015 +0200

    hotpatch-compile-15.c: Remove dg-prune-output directives.
    
            * gcc.target/s390/hotpatch-compile-15.c: Remove dg-prune-output
            directives.
            (hp3, hp4): Add inline keyword.
            * gcc.target/s390/hotpatch-19.c: Remove dg-prune-output directive.
            (hp2): Add inline keyword.
            * gcc.target/s390/hotpatch-19.c: Remove dg-prune-output directives.
            (hp2): Add inline keyword.
    
    From-SVN: r223935

commit 88bbe535e9185a19c05e2edeb74aced89ebcbeaa
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Mon Jun 1 11:29:46 2015 +0000

    PR 66215: S390: Fix placement of post-label NOPs with -mhotpatch
    
    gcc/ChangeLog:
    --------------
    2015-06-01  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
                Backport from mainline
                2015-05-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
                PR target/66215
                * config/s390/s390.c (s390_reorg): Fix placement of post-label NOPs
                with -mhotpatch=.
    
    gcc/testsuite/ChangeLog:
    ------------------------
    2015-06-01  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
                Backport from mainline
                2015-05-29  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
                PR target/66215
                * gcc.target/s390/hotpatch-1.c: Remove optimization options from
                dg-options.
                * gcc.target/s390/hotpatch-10.c: Likewise.
                * gcc.target/s390/hotpatch-11.c: Likewise.
                * gcc.target/s390/hotpatch-12.c: Likewise.
                * gcc.target/s390/hotpatch-17.c: Likewise.
                * gcc.target/s390/hotpatch-18.c: Likewise.
                * gcc.target/s390/hotpatch-20.c: Likewise.
                * gcc.target/s390/hotpatch-21.c: Likewise.
                * gcc.target/s390/hotpatch-22.c: Likewise.
                * gcc.target/s390/hotpatch-23.c: Likewise.
                * gcc.target/s390/hotpatch-24.c: Likewise.
                * gcc.target/s390/hotpatch-2.c: Likewise.  Adjust scan-assembler
                to check for the exact nops too.
                * gcc.target/s390/hotpatch-3.c: Likewise.
                * gcc.target/s390/hotpatch-4.c: Likewise.
                * gcc.target/s390/hotpatch-5.c: Likewise.
                * gcc.target/s390/hotpatch-6.c: Likewise.
                * gcc.target/s390/hotpatch-7.c: Likewise.
                * gcc.target/s390/hotpatch-8.c: Likewise.
                * gcc.target/s390/hotpatch-9.c: Likewise.
                * gcc.target/s390/hotpatch-14.c: Likewise.
                * gcc.target/s390/hotpatch-15.c: Likewise.
                * gcc.target/s390/hotpatch-16.c: Likewise.
                * gcc.target/s390/hotpatch-19.c: Likewise.
                * gcc.target/s390/hotpatch-25.c: Likewise.  Remove
                scan-assembler-times counting number of .align directives.
                * gcc.target/s390/hotpatch-13.c: Remove optimization options from
                dg-options.  Remove scan-assembler-times counting number of .align
                directives.
                * gcc.target/s390/hotpatch-26.c: New file.
                * gcc.target/s390/hotpatch-27.c: New file.
                * gcc.target/s390/hotpatch-28.c: New file.
                * gcc.target/s390/s390.exp: Run hotpatch-*.c tests as torture tests
                using -Os -O0 -O1 -O2 -O3 options.
    
    From-SVN: r223932

commit 3a98a1074a72c693b4a8f07223c17bb7b72c1aea
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 1 09:20:10 2015 +0000

    * gcc-interface/Makefile.in: Fix ARM/Darwin configuration.
    
    From-SVN: r223925

commit 51cec03078c88c28180152d030207035df881634
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Jun 1 07:37:52 2015 +0000

    backport: [multiple changes]
    
    2015-06-01  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-05-26  Michael Matz  <matz@suse.de>
    
            PR middle-end/66251
            * tree-vect-stmts.c (vect_create_vectorized_demotion_stmts): Always set
            STMT_VINFO_VEC_STMT, also with SLP.
    
            * gcc.dg/vect/pr66251.c: New test.
    
            2015-05-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66251
            * tree-vect-stmts.c (vectorizable_conversion): Properly
            set STMT_VINFO_VEC_STMT even for the SLP case.
    
            * gfortran.fortran-torture/compile/pr66251.f90: New testcase.
    
    From-SVN: r223911

commit 771fccc1ff7ad45f4f87eab18622d6328655d5bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 1 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223909

commit 6635304e2c39d6714129fafe5e395d4b711800af
Author: Jason Merrill <jason@redhat.com>
Date:   Sun May 31 16:57:19 2015 -0400

    re PR c++/66320 (ICE: in cxx_eval_constant_expression, at cp/constexpr.c:3524)
    
            PR c++/66320
            * constexpr.c (cxx_eval_constant_expression): Treat a placeholder
            with the wrong type as non-constant.
    
    From-SVN: r223904

commit 6b6730e1c002b4070fe873090316f4d7d6b62e31
Author: Jason Merrill <jason@redhat.com>
Date:   Sun May 31 16:57:14 2015 -0400

    pt.c (tsubst_decl): SET_DECL_IMPLICIT_INSTANTIATION before register_specialization.
    
            * pt.c (tsubst_decl) [VAR_DECL]: SET_DECL_IMPLICIT_INSTANTIATION
            before register_specialization.
    
    From-SVN: r223903

commit f7b4662efc529a7f872f656e338b7073ae1f08d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 31 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r223895

commit 80bdcf8a12662407b7a7601e181a489e5890585e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 30 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r223881

commit 3f34ed2008ea7eb506403094552f115b1b7671ba
Author: Mikael Morin <mikael@gcc.gnu.org>
Date:   Fri May 29 19:04:30 2015 +0000

    re PR fortran/66257 (ELEMENTAL procedure pointer component XX is not allowed as an actual argument)
    
            PR fortran/66257
    gcc/fortran/
            * resolve.c (resolve_actual_arglist): Don't throw an error
            if the argument with procedure pointer component is not a variable.
    gcc/testsuite/
            * typebound_call_27.f90: New file.
    
    From-SVN: r223875

commit b40332e63092d84e8d3b4ac8a020a08fd3f57ad8
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri May 29 19:03:41 2015 +0100

    * sv.po: Update.
    
    From-SVN: r223874

commit 47bad3f7810b8fb34bf921aa145acc41bdb07d97
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 29 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r223855

commit 19932a8fe93748a8cd01be8d9ad4f3e343096f9c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 28 17:14:26 2015 +0100

    re PR libstdc++/65352 (array<T,0>::begin()/end() etc. forms a null reference and breaks on clang+ubsan)
    
            PR libstdc++/65352
            * include/profile/array (array::data): Use _S_ptr.
            * include/debug/array (array::data): Likewise.
    
    From-SVN: r223839

commit f1f1e412d87fd8b2cab05b57ef3c7e35c76f97b7
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Thu May 28 14:08:37 2015 +0000

    nios2-linux: add missing cpp specs
    
    Define CPP_SPEC for nios2 linux targets so that -posix & -pthread work
    like on all other linux targets.
    
    Discovered via Gentoo bug https://bugs.gentoo.org/543114
    
    From-SVN: r223831

commit b82f5ecf9753ceaeb277e068e59b17a98ac2301f
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Thu May 28 14:08:19 2015 +0000

    microblaze-linux: add missing cpp specs
    
    Define CPP_SPEC for microblaze linux targets so that -posix & -pthread
    work like on all other linux targets.
    
    Discovered via Gentoo bug https://bugs.gentoo.org/543114
    
    From-SVN: r223830

commit 7e27d8caf41be38f368f1439d04c38f7fc5f8abf
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Thu May 28 14:07:55 2015 +0000

    hppa-linux: add missing cpp specs
    
    Define CPP_SPEC for parisc linux targets so that -posix & -pthread work
    like on all other linux targets.
    
    Discovered via Gentoo bug https://bugs.gentoo.org/543114
    
    From-SVN: r223829

commit 62a1e40981bda73a41ce205366efd3db87809d1b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 28 13:33:41 2015 +0100

    re PR libstdc++/65352 (array<T,0>::begin()/end() etc. forms a null reference and breaks on clang+ubsan)
    
            PR libstdc++/65352
            * include/std/array (__array_traits::_S_ptr): New function.
            (array::data): Use _S_ptr to avoid creating invalid reference.
            * testsuite/23_containers/array/tuple_interface/get_neg.cc: Adjust
            dg-error line numbers.
            * testsuite/23_containers/array/tuple_interface/tuple_element_neg.cc:
            likewise.
    
    From-SVN: r223812

commit d6819d26ad36246917aac0f0bcfe75ca4f436b81
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 28 13:33:36 2015 +0100

    re PR libstdc++/66017 (Undefined behaviour in std::set<long long>)
    
            PR libstdc++/66017
            * include/bits/stl_tree.h (_Rb_tree_node): Use __aligned_membuf.
            (_Rb_tree_iterator, _Rb_tree_const_iterator): Support construction
            from _Base_ptr.
            (_Rb_tree_const_iterator::_M_const_cast): Remove static_cast.
            (_Rb_tree::begin, _Rb_tree::end): Remove static_cast.
            * include/ext/aligned_buffer.h (__aligned_membuf): New type using
            alignment of _Tp as a member subobject, not as a complete object.
            * python/libstdcxx/v6/printers.py (StdRbtreeIteratorPrinter): Lookup
            _Link_type manually as it might not be in the debug info.
    
    From-SVN: r223811

commit 3f6131a4169ebd4972b61d30d99e6b252690a985
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 28 13:33:31 2015 +0100

    backport: basic_string.h (basic_string::basic_string()): Make noexcept conditional on allocator (LWG 2455).
    
    Backported from mainline
    2015-05-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/basic_string.h (basic_string::basic_string()): Make
            noexcept conditional on allocator (LWG 2455).
    
    From-SVN: r223810

commit 27bd24cdc739c24adecb6438b04368bcd8ea0ede
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 28 13:33:26 2015 +0100

    backport: alloc_traits.h (__alloc_rebind): Change parameter name.
    
    Backported from mainline
    2015-05-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/alloc_traits.h (__alloc_rebind): Change parameter name.
    
    From-SVN: r223809

commit 250b43cb9965754b340aed2b599f253cad6ef851
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu May 28 01:12:59 2015 +0000

    re PR target/66148 (build/genpreds: Internal error: abort in choose_enum_order, at genpreds.c:1006)
    
            PR target/66148
            * config/pa/pa.c (pa_emit_move_sequence): Correct placement of
            REG_EQUAL note when doing insert.
    
    From-SVN: r223792

commit a6c958f139ab6502361f315d1e41aa1639d2ba7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 28 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223787

commit d44b696f9bd7a16304c8c77014b60ac4fdba344c
Author: Richard Biener <rguenther@suse.de>
Date:   Wed May 27 14:05:37 2015 +0000

    backport: re PR tree-optimization/66101 (internal compiler error: in verify_loop_structure, at cfgloop.c:1662)
    
    2015-05-27  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2015-05-12  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/66101
            * tree-ssa-dce.c (remove_dead_stmt): Properly mark loops for
            fixup if we turn a loop exit edge to a fallthru edge.
    
            * gcc.dg/torture/pr66101.c: New testcase.
    
    From-SVN: r223757

commit efe41ca23b3e90dc52d3f2b3fb409204e0d596d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 27 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r223728

commit 82f7e79b5d0fa7a5354f1b09a94b7ee46f640234
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Tue May 26 22:37:06 2015 +0000

    re PR target/65979 ([SH] Wrong code is generated with stage1 compiler)
    
    PR target/65979
    * config/sh/sh.md (tstsi_t peephole2): Use gen_rtx_SET and take into
      account the case that operands[1] and operands[2] are the same register.
    
    From-SVN: r223722

commit ab7bfa7b20d633c4bc1c2e4ace537e4389a86746
Author: Doug Evans <dje@google.com>
Date:   Tue May 26 21:28:42 2015 +0000

    re PR libstdc++/65839 (xmethods need updating once gdb decides how to fix 18285)
    
            PR libstdc++/65839
            * python/libstdcxx/v6/xmethods.py (get_bool_type): New function.
            Replace all lookups of "bool" with this.
            (get_std_size_type): New function.  Replace all lookups of std::size_t
            with this.
            (*Worker): New method get_result_type.
            (DequeWorkerBase.__init__): New arg val_type.  All callers updated.
            (ListWorkerBase.__init__): New arg val_type.  All callers updated.
            (UniquePtrGetWorker.__init__): New arg elem_type.  All callers updated.
            Delete setting of name, enabled.
            (UniquePtrDerefWorker.__init__): New arg elem_type.  All callers
            updated.  Delete setting of name.
            (UniquePtrMethodsMatcher): Rewrite for consistency with all other
            libstdc++ xmethod matchers.
            * testsuite/libstdc++-xmethods/array.cc: Add whatis tests.
            * testsuite/libstdc++-xmethods/associative-containers.cc: Ditto.
            * testsuite/libstdc++-xmethods/deque.cc: Ditto.
            * testsuite/libstdc++-xmethods/forwardlist.cc: Ditto.
            * testsuite/libstdc++-xmethods/list.cc: Ditto.
            * testsuite/libstdc++-xmethods/unique_ptr.cc: Ditto.
            * testsuite/libstdc++-xmethods/vector.cc: Ditto.
    
    From-SVN: r223719

commit 70e0711d14870dabd3e61965e0a330b9ea07bf5e
Author: Doug Evans <dje@google.com>
Date:   Tue May 26 21:12:16 2015 +0000

    backport: Use consistent naming for value type attributes.
    
            Backported from mainline
            2015-04-29  Doug Evans  <dje@google.com>
    
            Use consistent naming for value type attributes.
            * python/libstdcxx/v6/xmethods.py (ArrayWorkerBase): Rename _valtype
            to _val_type.
            (ArraySizeWorker, ArrayEmptyWorker): Ditto.
            (ArrayFrontWorker, ArrayBackWorker): Ditto.
            (ArrayAtWorker, ArraySubscriptWorker): Ditto.
            (DequeWorkerBase): Rename elemtype to val_type.
            (ForwardListWorkerBase): Rename _elem_type to _val_type.
            (ForwardListFrontWorker): Ditto.  And rename elem_address to
            val_address.
            (ForwardListMethodsMatcher): Rename elem_type to val_type.
            (VectorWorkerBase): Rename _elemtype to _val_type.
    
    From-SVN: r223718

commit 1950a589ce902bb49c611ed43e0b03c0f6cf815b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 26 00:16:15 2015 +0000

    Daily bump.
    
    From-SVN: r223660

commit 58b6c7009cc9db287d5014133893fbdcfe470ca2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 25 00:16:10 2015 +0000

    Daily bump.
    
    From-SVN: r223639

commit 9d46d8967b5c0be3ad1cae1a8686dd803d9cb321
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 24 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r223617

commit 672c27a3fdafb9ac9192656ab7db04b3dc9a3f87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 23 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r223602

commit 0da40e724bce0ae104042c9101ecd7617dfba8bf
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Fri May 22 13:13:11 2015 +0000

    inclhack.def (aix_externc): New fix.
    
            * inclhack.def (aix_externc): New fix.
            (aix_externcpp[12]): New fix.
            * fixincl.x: Regenerate.
            * test/base/ctype.h [AIX_EXTERNC_CHECK]: New test.
            * test/base/sys/socket.h [AIX_EXTERNCPP[12]_CHECK]: New test.
            * test/base/fcntl.h: New file.
    
    From-SVN: r223568

commit fd28834bc4b1c163e39ddc3521958d4dca44bc41
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Fri May 22 12:43:02 2015 +0000

    re PR target/66224 (PowerPC _GLIBCXX_READ_MEM_BARRIER too weak)
    
            PR target/66224
            * config/cpu/powerpc/atomic_word.h (_GLIBCXX_READ_MEM_BARRIER):
            Don't use isync. Use lwsync if available.
            * configure.host (atomic_word_dir) [aix[56789]*]: Delete to use
            powerpc cpu definition.
    
    From-SVN: r223554

commit cea48708c336cbc5ca6e7ba863080ad73e6b7b91
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 22 10:12:08 2015 +0200

    backport: re PR tree-optimization/66233 (internal compiler error: in expand_fix, at optabs.c:5358)
    
            Backported from mainline
            2015-05-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/66233
            * match.pd (ocvt (icvt@1 @0)): Don't handle vector types.
            Simplify.
    
            * gcc.c-torture/execute/pr66233.c: New test.
    
    From-SVN: r223522

commit 8beba786c6a7f4927ec4dd0c6f1e0917661abc24
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 22 10:10:32 2015 +0200

    backport: re PR middle-end/66199 (lastprivate/linear clause issues on combined constructs)
    
            Backported from mainline
            2015-05-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/66199
            * tree.h (OMP_TEAMS_COMBINED): Define.
            * gimplify.c (enum gimplify_omp_var_data): Add
            GOVD_LINEAR_LASTPRIVATE_NO_OUTER.
            (enum omp_region_type): Add ORT_COMBINED_TEAMS.
            (omp_notice_variable): Accept both ORT_TEAMS
            and ORT_COMBINED_TEAMS.  Don't recurse if
            GOVD_LINEAR_LASTPRIVATE_NO_OUTER is set and either
            GOVD_LINEAR is set, or GOVD_LASTPRIVATE without
            GOVD_FIRSTPRIVATE.
            (omp_no_lastprivate): New function.
            (gimplify_scan_omp_clauses): For OMP_CLAUSE_LASTPRIVATE
            and OMP_CLAUSE_LINEAR, if omp_no_lastprivate, don't
            notice_outer and set appropriate bits, otherwise make
            sure default(none) combined constructs won't complain.
            (gimplify_adjust_omp_clauses): Remove OMP_CLAUSE_LINEAR
            outer special casing, for OMP_CLAUSE_LASTPRIVATE if
            omp_no_lastprivate either remove the clause or turn it
            into OMP_CLAUSE_PRIVATE.
            (gimplify_omp_for): Fix up handling of implicit
            lastprivate or linear iterators.
            (gimplify_omp_workshare): For OMP_TEAMS_COMBINED use
            ORT_COMBINED_TEAMS.
            * omp-low.c (lower_omp_for_lastprivate): For combined
            for simd use fd.loop.n2 from the for rather than simd.
    gcc/c/
            * c-parser.c (c_parser_omp_for_loop): Don't add
            OMP_CLAUSE_SHARED to OMP_PARALLEL_CLAUSES when moving
            OMP_CLAUSE_LASTPRIVATE clause to OMP_FOR_CLAUSES.
            (c_parser_omp_teams): Set OMP_TEAMS_COMBINED for combined
            constructs.
    gcc/cp/
            * parser.c (cp_parser_omp_for_loop): Don't add
            OMP_CLAUSE_SHARED to OMP_PARALLEL_CLAUSES when moving
            OMP_CLAUSE_LASTPRIVATE clause to OMP_FOR_CLAUSES.
            (cp_parser_omp_teams): Set OMP_TEAMS_COMBINED for combined
            constructs.
    gcc/fortran/
            * trans-openmp.c (gfc_trans_omp_teams): Set OMP_TEAMS_COMBINED for
            combined constructs.
            (gfc_trans_omp_target): Make sure BIND_EXPR has non-NULL
            BIND_EXPR_BLOCK.
    libgomp/
            * testsuite/libgomp.c/pr66199-1.c: New test.
            * testsuite/libgomp.c/pr66199-2.c: New test.
            * testsuite/libgomp.c++/pr66199-1.C: New test.
            * testsuite/libgomp.c++/pr66199-2.C: New test.
            * testsuite/libgomp.fortran/pr66199-1.f90: New test.
            * testsuite/libgomp.fortran/pr66199-2.f90: New test.
    
    From-SVN: r223521

commit a5739a2943268b0c487be33d49021250e6fec0a6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 22 10:04:41 2015 +0200

    backport: re PR middle-end/66133 (Wrong-code with noreturn #pragma omp task body)
    
            Backported from mainline
            2015-05-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/66133
            * omp-low.c (expand_omp_taskreg): For GIMPLE_OMP_TASK expansion,
            make sure it is never noreturn, even when the task body does not
            return.
            (lower_omp_taskreg): For GIMPLE_OMP_TASK, emit GIMPLE_OMP_CONTINUE
            right before GIMPLE_OMP_RETURN.
            (make_gimple_omp_edges): Accept GIMPLE_OMP_CONTINUE as ->cont
            for GIMPLE_OMP_TASK.  For GIMPLE_OMP_RETURN corresponding to
            GIMPLE_OMP_TASK add an EDGE_ABNORMAL edge from entry to exit.
    
            * testsuite/libgomp.c/pr66133.c: New test.
    
    From-SVN: r223520

commit 3d22ff973706f2d542a49e63e43991dae7dd12c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 22 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r223511

commit 024e1962fd291c1af0037b1f6e8d2600eb74b2c6
Author: Sandra Loosemore <sandra@codesourcery.com>
Date:   Thu May 21 16:43:25 2015 -0400

    backport: config.gcc [...]: Allow --enable-targets=all to build a biarch toolchain again.
    
    2015-05-21  Sandra Loosemore  <sandra@codesourcery.com>
    
            Backport from mainline r223418:
    
            gcc/
            * config.gcc [powerpc*-*-linux*]: Allow --enable-targets=all
            to build a biarch toolchain again.
    
    From-SVN: r223501

commit 35775f9e7b7c01394688becd838da63d9ad39c20
Author: Ilya Enkovich <enkovich.gnu@gmail.com>
Date:   Thu May 21 09:47:32 2015 +0000

    backport: re PR middle-end/66221 (lto1: error: type variant has different TYPE_ARG_TYPES)
    
    gcc/
    
            Backport from mainline r223471
            2015-05-21  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66221
            * ipa-chkp.c (chkp_copy_function_type_adding_bounds): Use
            build_distinct_type_copy to copy bounds.
    
    gcc/testsuite/
    
            Backport from mainline r223471
            2015-05-21  Ilya Enkovich  <enkovich.gnu@gmail.com>
    
            PR middle-end/66221
            * gcc.dg/lto/pr66221_0.c: New test.
            * gcc.dg/lto/pr66221_1.c: New test.
    
    From-SVN: r223474

commit 9be6b286e156683a58765598e1488be571a81bbd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 21 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223467

commit 829e25c9a4a43031301eb3e5cb4591b16fdaa296
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed May 20 01:51:50 2015 +0000

    re PR fortran/65903 (Line continuation followed by comment character in string fails to compile)
    
    2015-05-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR fortran/65903
            * gfortran.dg/continuation_13.f90: Update test.
            * gfortran.dg/pr65903.f90: New test.
    
    From-SVN: r223429

commit c25bc4085a9607a4fb9f693e3e2164dcbdb2bb9d
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed May 20 01:50:34 2015 +0000

    re PR fortran/65903 (Line continuation followed by comment character in string fails to compile)
    
    2015-05-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR fortran/65903
            * io.c (format_lex): Change to NONSTRING when checking for
            possible doubled quote.
            * scanner.c (gfc_next_char_literal): Revert change from 64506
            and add a check for quotes and return.
    
    From-SVN: r223428

commit 2b7d75edceb8c9f5dd4cce4e8bcdf7be1d496db1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 20 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r223421

commit 3c69eb89b17232e4c17e70d6f92d3993979466e5
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 18:34:55 2015 +0000

    re PR fortran/66106 (ICE on incomplete interface operator block (gfc_op2string))
    
    Fix the ChangeLog entries to have the correct PR fortran/66106
    designation.
    
    From-SVN: r223411

commit f7844c221b583ee98ea9a5fba22d9c07b0da0424
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 18:31:39 2015 +0000

    re PR fortran/66057 (ICE for incomplete generic statement (gfc_match_generic))
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66057
            * interface.c(gfc_match_end_interface): Enforce F2008 C1202 (R1201).
            * match.c(gfc_op2string): Return 'none' for INTRINSIC_NONE.
    
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66057
            * gfortran.dg/interface_operator_1.f90: New tests.
    
    From-SVN: r223410

commit 4912285b066302a32a5b8d6615bb89abf1b615b7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 18:20:12 2015 +0000

    re PR fortran/66057 (ICE for incomplete generic statement (gfc_match_generic))
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66057
            * decl.c(gfc_match_generic):  Detected a malformed GENERIC statement.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66057
            * gfortran.dg/generic_29.f90: New tests.
    
    From-SVN: r223409

commit 3454afe20e09cf7499c32b3b54c46ceeb928a3c7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 18:10:44 2015 +0000

    re PR fortran/66052 (Segmentation fault for misplaced protected statement)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66052
            * decl.c(gfc_match_protected): Prevent dereference of NULL pointer.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66052
            * gfortran.dg/protected_9.f90: New test.
    
    From-SVN: r223408

commit f51d05ac6476717051361acad200c45d92b80c08
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:59:58 2015 +0000

    re PR fortran/66045 (ICE on incorrect code with null)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66045
            * expr.c (gfc_check_assign):  Check for assignment of NULL() instead
            of the (intended) pointer assignment.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66045
            * gfortran.dg/null1.f90: New test.
    
    From-SVN: r223406

commit e7735b479554b21ee0333de3d1796b462a59c0d8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:47:12 2015 +0000

    re PR fortran/66044 (ICE on misplaced entry statement)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66044
            * decl.c(gfc_match_entry):  Change a gfc_internal_error() into
            a gfc_error()
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66044
            * gfortran.dg/entry_21.f90: New test.
    
    From-SVN: r223405

commit 3ac5f72fb058a6e9980fcb1d26a00a36901072dc
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:37:42 2015 +0000

    re PR fortran/66043 (ICE on storage_size of null or output of null array)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66043
            * check.c (gfc_check_storage_size): Prevent the direct use of NULL()
            in STORAGE_SIZE() reference.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66043
            * gfortran.dg/storage_size_6.f90: New tests.
    
    From-SVN: r223401

commit bf4d22277bf0d3a5b874717edc2e0cb2c93c6472
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:25:09 2015 +0000

    re PR fortran/66040 (ICE on misplaced sequence in function)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66040
            * parse.c(verify_st_order): Replace a gfc_internal_error with your
            generic gfc_error.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66040
            * gfortran.dg/misplaced_statement.f90: New test.
    
    From-SVN: r223394

commit 1a361e5e05930898481aaa3975e5739be3ee7112
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:13:02 2015 +0000

    re PR fortran/66039 (ICE on incomplete parentheses at rewind, flush, endfile, backspace)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66039
            * io.c (match_filepos): Check for incomplete/mangled REWIND, FLUSH,
            BACKSPACE, and ENDFILE statements
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/66039
            * gfortran.dg/filepos1.f90: New test
    
    From-SVN: r223390

commit 56b48c50c0501290f05c9b900ee82ca28d550f10
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue May 19 17:01:25 2015 +0000

    re PR fortran/64925 (ICE with same names for dummy arg and internal procedure)
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64925
            * symbol.c(check_conflict):  Check for a conflict between a dummy
            argument and an internal procedure name.
    
    2015-05-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64925
            * gfortran.dg/pr64925.f90: New test.
    
    From-SVN: r223388

commit 0907c533d7cb5a5864d32066c2266692212944d1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue May 19 13:44:39 2015 +0200

    re PR target/66174 (ICE: in extract_insn, at recog.c:2341 (unrecognizable insns) with -ftree-vectorize -mavx512ifma)
    
            PR target/66174
            * config/i386/i386.c (expand_vec_perm_blend): Enable HImode and
            QImode inner modes for TARGET_AVX512BW.  Force mask operand
            to a register for AVX512F modes.
    
    testsuite/ChangeLog:
    
            PR target/66174
            * gcc.target/i386/pr66174.c: New test.
    
    From-SVN: r223355

commit 35d51cf88746a3665b01b4c4a3cf844bcf42ebf7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 19 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223329

commit cfabc0e15e059f057364eb7b19bfd6434e925028
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 18 22:06:22 2015 +0100

    * sv.po: Update.
    
    From-SVN: r223317

commit ff0e896e71daf155dba1510f8b909ee37fd003dc
Author: Jason Merrill <jason@redhat.com>
Date:   Mon May 18 15:05:23 2015 -0400

    pt.c (tsubst_decl): Call coerce_innermost_template_parms.
    
            * pt.c (tsubst_decl) [VAR_DECL]: Call coerce_innermost_template_parms.
            (determine_specialization): Call coerce_template_parms.
    
    From-SVN: r223311

commit f0da9e7029232ec53b0d7a16846dd7a3c0e7abdc
Author: Jason Merrill <jason@redhat.com>
Date:   Mon May 18 15:05:17 2015 -0400

    tree.c (strip_typedefs_expr): Fix typo.
    
            * tree.c (strip_typedefs_expr) [TRAIT_EXPR]: Fix typo.
            (strip_typedefs) [DECLTYPE_TYPE]: Fix typedef of decltype.
            [TREE_LIST]: Fix no-change case.
    
    From-SVN: r223310

commit b815b3e2d7d3dae877a5f8d1039397b0f1736cc1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 18 00:16:16 2015 +0000

    Daily bump.
    
    From-SVN: r223279

commit 28a8c003fabeeb4a1e746b1827e8c693fc3447c4
Author: Jan Hubicka <hubicka@ucw.cz>
Date:   Sun May 17 21:41:23 2015 +0200

    re PR target/66047 (vlc compilation failure with target attribute)
    
            PR target/66047
            * i386.c (ix86_function_sseregparm): Only return -1 if local function
            with implied regparm is called from -mno-sse function.
            (init_cumulative_args): Output error if ix86_function_sseregparm
            return -1 and SSE register would be needed.
            (function_arg_advance_32): Likewise.
            (function_arg_32): Likewise.
            * i386.h (ix86_args): Add decl field.
            * gcc.target/i386/pr66047.c: New testcase.
    
    From-SVN: r223272

commit 2208ddc5965d14930192d39b6fbeb7dbf7276152
Author: Jan Hubicka <hubicka@ucw.cz>
Date:   Sun May 17 19:43:04 2015 +0200

    re PR ipa/65873 (Failure to inline always_inline memcpy)
    
    
            PR ipa/65873
            * ipa-inline.c (can_inline_edge_p): Allow early inlining of always
            inlines across optimization boundary; be tolerant about COMDAT;
            allow inlining across -fstrict-aliasing boundary.
    
    From-SVN: r223270

commit 6f191db7c76d16af35d7d3970815c34933d4126a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 17 00:16:17 2015 +0000

    Daily bump.
    
    From-SVN: r223264

commit 226a03e6c31220c59d5e74dd94e623b0502d7fd1
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Sat May 16 19:56:55 2015 +0200

    backport: re PR rtl-optimization/30967 (Extra sign/zero extend with word comparison result)
    
            Backport from mainline
            2015-05-13  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/30967
            * config/rs6000/rs6000.c (rs6000_rtx_costs): Don't consider
            destination mode for the cost of scc patterns.
    
    From-SVN: r223250

commit 387fd99a38dda34561c9980d6dea80f0663c7e08
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat May 16 09:42:20 2015 +0200

    re PR target/66140 (ICE at extract_insn, at recog.c:2343 when compiling for alpha with gcc-5.1.1)
    
            PR target/66140
            * config/alpha/alpha.c (get_aligned_mem): Also look for reload
            replacements in memory addresses.
            (get_unaligned_address): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/66140
            * gcc.target/alpha/pr66140.c: New test.
    
    From-SVN: r223233

commit 86bc8ce8bda96bd1ed9077b55f443b73be49d438
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 16 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r223229

commit 27c2cd3e503040bccb59b5e0c4d977b3a51c55e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 15 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r223207

commit e976c76a36573e7e8db576de4e38bb453d25c5e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 14 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223188

commit 45f1f4de30ace3bab2682a7829f4f71635541d8a
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed May 13 15:00:50 2015 +0000

    [ARM] Fix PR 65955: Do not take REGNO on non-REG operand in movcond_addsi
    
            Backport from mainline
            2015-05-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/65955
            * config/arm/arm.md (movcond_addsi): Check that operands[2] is a
            REG before taking its REGNO.
    
    From-SVN: r223165

commit 3151b2a33139bc3a77653d84821c20b8b62f598a
Author: Martin Liska <mliska@suse.cz>
Date:   Wed May 13 10:18:21 2015 +0200

    Fix test case.
    
            * g++.dg/ipa/pr65557.C: Remove unnecessary dump flag.
    
    From-SVN: r223117

commit 66f732b8b83784085068f08b00d19a1f909414b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 13 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r223104

commit 80cf1f49c6983c8be271dbccc2f3b7b6a8af9999
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue May 12 11:57:13 2015 +0000

    S/390: Adjust zEC12 scheduling
    
           * config/s390/2827.md: Split zEC12_simple into zEC12_simple_int
           and zEC12_simple_fp.
           * config/s390/s390.c (s390_issue_rate): Set issue rate for zEC12
           to 1.
    
    From-SVN: r223060

commit 41cf32a8825b8fb7226fb01edab73a86f519fd44
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue May 12 09:25:19 2015 +0000

    [AArch64] Increase static buffer size in aarch64_rewrite_selected_cpu
    
            Backport from mainline
            2015-04-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * common/config/aarch64/aarch64-common.c (AARCH64_CPU_NAME_LENGTH):
            Increase to 128.
            (aarch64_rewrite_selected_cpu): Do not chop off extensions starting
            at '.'.  Assert that there's enough space for everything.
    
    From-SVN: r223052

commit 5783b1888c293ec50f94c7631c50b46f5c2df540
Author: Yvan Roux <yvan.roux@linaro.org>
Date:   Tue May 12 08:49:59 2015 +0000

    backport: aarch64-elf-raw.h (CA53_ERR_843419_SPEC): Define.
    
    2015-05-12  Yvan Roux  <yvan.roux@linaro.org>
    
            Backport from mainline.
            2015-05-05  Yvan Roux  <yvan.roux@linaro.org>
    
            * config/aarch64/aarch64-elf-raw.h (CA53_ERR_843419_SPEC): Define.
            (LINK_SPEC): Include CA53_ERR_843419_SPEC.
            * config/aarch64/aarch64-linux.h (CA53_ERR_843419_SPEC): Define.
            (LINK_SPEC): Include CA53_ERR_843419_SPEC.
            * config/aarch64/aarch64.opt (mfix-cortex-a53-843419): New option.
            * configure: Regenerate.
            * configure.ac: Add --enable-fix-cortex-a53-843419 option.
            * doc/install.texi (aarch64*-*-*): Document new
            --enable-fix-cortex-a53-843419 option.
            * doc/invoke.texi (AArch64 Options): Document -mfix-cortex-a53-843419
            and -mno-fix-cortex-a53-843419 options.
    
    From-SVN: r223044

commit 2e4a7afbe6c375905e2708c44c6e105a3f81265d
Author: Yury Gribov <y.gribov@samsung.com>
Date:   Tue May 12 07:02:09 2015 +0000

    backport: re PR sanitizer/64839 (libsanitizer shouldn't require <rpc/xdr.h>)
    
    2015-05-12  Yury Gribov  <y.gribov@samsung.com>
    
            Backport from mainline
            2015-04-13  Yury Gribov  <y.gribov@samsung.com>
    
            PR sanitizer/64839
            * sanitizer_common/sanitizer_platform.h: Cherry pick
            upstream r234470.
            * sanitizer_common/sanitizer_platform_limits_posix.cc: Ditto.
            * configure.ac (RPC_DEFS): Check for precense of RPC headers.
            * sanitizer_common/Makefile.am (DEFS): Pass info to compiler.
            * Makefile.in: Regenerate.
            * asan/Makefile.in: Regenerate.
            * config.h.in: Regenerate.
            * configure: Regenerate.
            * interception/Makefile.in: Regenerate.
            * libbacktrace/Makefile.in: Regenerate.
            * lsan/Makefile.in: Regenerate.
            * sanitizer_common/Makefile.in: Regenerate.
            * tsan/Makefile.in: Regenerate.
            * ubsan/Makefile.in: Regenerate.
    
    From-SVN: r223032

commit 9128f238bf985cf6b89f9ef59d68e9ef3db44c5c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 12 00:16:20 2015 +0000

    Daily bump.
    
    From-SVN: r223029

commit fa1800a994c2ce2722cc2dca9d5e0593db0bc742
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon May 11 22:32:10 2015 +0200

    i386.c (ix86_loop_unroll_adjust): Use PATTERN (insn) when looking for memory references.
    
            * config/i386/i386.c (ix86_loop_unroll_adjust): Use PATTERN (insn)
            when looking for memory references.
    
    From-SVN: r223018

commit 1a1b6d839b8d5845cb7dd75e3dee91933a72a81e
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 11 21:08:48 2015 +0100

    * sv.po: Update.
    
    From-SVN: r223017

commit 5b07da7e56ed031b89e113ecb1a05164ba99b176
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon May 11 09:14:10 2015 +0200

    re PR target/65780 (Uninitialized common handling in executables)
    
            PR target/65780
            * config/s390/linux.h (TARGET_BINDS_LOCAL_P): Define to
            default_binds_local_p_2.
            * config/arm/linux-elf.h (TARGET_BINDS_LOCAL_P): Likewise.
            * config/aarch64/aarch64-linux.h (TARGET_BINDS_LOCAL_P): Likewise.
    
    From-SVN: r222993

commit aceaf0789af32f4beeb516adb010196debbd22e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 11 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222988

commit de82bd44b83e312047d189be196c1aa888189d3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 10 00:16:15 2015 +0000

    Daily bump.
    
    From-SVN: r222973

commit dc0aee8d7659859f1b72f0ed138165dc2c0aa28a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 9 00:16:16 2015 +0000

    Daily bump.
    
    From-SVN: r222930

commit dd7328f897b6d69408a78b87bfce5d06c1b55ef5
Author: Jason Merrill <jason@redhat.com>
Date:   Fri May 8 17:15:21 2015 -0400

    re PR c++/59012 (alignas does not support parameter pack expansions)
    
            PR c++/59012
            * parser.c (cp_parser_std_attribute_list): Handle attribute expansion.
            (cp_parser_std_attribute_spec): Handle alignas pack expansion.
            * decl2.c (is_late_template_attribute): An attribute exp is dependent.
            * pt.c (make_pack_expansion): Allow TREE_LIST for attribute expansion.
            (apply_late_template_attributes): Handle attribute pack expansion.
    
    From-SVN: r222927

commit 4fc859426dc4000b16c6ac6537290d78aac249f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 8 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222900

commit 30e624753948fd9d74064ec5531f585f359548a2
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu May 7 21:35:45 2015 +0200

    re PR target/66015 (align directives not propagated after __attribute__ ((__optimize__ ("O2"))))
    
            PR target/66015
            * config/alpha/alpha.c (alpha_override_options_after_change): New.
            (TARGET_OVERRIDE_OPTIONS_AFTER_CHANGE): New.
            (alpha_override_options): Move align_loops, align_jumps and
            align_functions handling into alpha_override_options_after_change.
    
    From-SVN: r222888

commit fc87b7d8b897ec501f7a3d06b1de14039970c13c
Author: Jason Merrill <jason@redhat.com>
Date:   Thu May 7 12:46:58 2015 -0400

    DR 1467 PR c++/51747
    
            DR 1467
            PR c++/51747
            * typeck2.c (digest_init_r): Fix single element list.
    
    From-SVN: r222882

commit 667cbcc15e002d5c003c2c4f572c73ba5c456718
Author: Renlin Li <renlin.li@arm.com>
Date:   Thu May 7 11:58:16 2015 +0000

    [PATCH][libstc++v3]Add new dg-require-thread-fence directive.
    
    libstdc++-v3/
    
    2015-05-07  Renlin Li  <renlin.li@arm.com>
    
            Backported from mainline
            2015-04-22  Renlin Li  <renlin.li@arm.com>
    
            * testsuite/lib/dg-options.exp (dg-require-thread-fence): New.
            * testsuite/lib/libstdc++.exp (check_v3_target_thread_fence): New.
            * testsuite/29_atomics/atomic_flag/clear/1.cc: Use it.
            * testsuite/29_atomics/atomic_flag/test_and_set/explicit.cc: Likewise.
            * testsuite/29_atomics/atomic_flag/test_and_set/implicit.cc: Likewise.
    
    From-SVN: r222875

commit 0db1164892311d101c215eb2a12920feb1185be5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 7 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r222868

commit 2d9d8d94b6ea51107b9688c3a010fb8e65412815
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 6 18:17:59 2015 +0200

    re PR target/65990 (ICE: in extract_insn, at recog.c:2341 (unrecognizable insn) with -mmemcpy-strategy=rep_8byte:-1:noalign -m32 -mtune=btver2)
    
            PR target/65990
            * config/i386/i386.c (ix86_parse_stringop_strategy_string): Error out
            if rep_8byte stringop strategy was specified for 32-bit target.
    
    testsuite/ChangeLog:
    
            PR target/65990
            * gcc.target/i386/pr65990.c: New test.
    
    From-SVN: r222858

commit 4e3bf2ef494264f881619fede409d4b030494778
Author: Christian Bruel <christian.bruel@st.com>
Date:   Wed May 6 13:19:56 2015 +0200

    re PR target/66015 (align directives not propagated after __attribute__ ((__optimize__ ("O2"))))
    
    2015-05-06  Christian Bruel  <christian.bruel@st.com>
    
            PR target/66015
            * config/aarch64/aarch64.c (aarch64_override_options): Move align_loops,
            align_jumps, align_functions into aarch64_override_options_after_change.
    
    From-SVN: r222848

commit 7b04f77a2e884f1ed08256c87ed98bc06499e914
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 5 22:08:21 2015 -0400

    decl.c (start_decl): Don't push the plain VAR_DECL for a variable template.
    
            * decl.c (start_decl): Don't push the plain VAR_DECL for a
            variable template.
    
    From-SVN: r222838

commit 179588beffec726aba8a7aeed2e119ccb5b3a8e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 6 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222833

commit c35064aa5b1393905bd3b5766b40f5559a63f906
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue May 5 22:30:42 2015 +0100

    * sv.po: Update.
    
    From-SVN: r222830

commit 39e740e8a789438e177f171c9a00b7fba5cb7afc
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue May 5 20:56:41 2015 +0000

    compiler: Don't make temporaries for constant string concatentation.
    
    Fixes golang/go#10642.
    
    From-SVN: r222827

commit 72130e916c09a54f2baa89655f23a8c9c6420b19
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue May 5 17:46:31 2015 +0000

    re PR go/66016 (Accessing nil Func's name results in crash)
    
            PR go/66016
    runtime: Don't crash in Func.Name if the Func is nil.
    
    Related to Go issue 10696
    
    From-SVN: r222820

commit 990b632721efa4b153722e649486b74ff430d76f
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue May 5 09:22:33 2015 -0500

    backport: re PR target/64579 (__TM_end __builtin_tend failed to return transactional state)
    
    gcc/
    
            Backport from mainline.
            2015-04-27  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/64579
            * config/rs6000/htm.md: Remove all define_expands.
            (UNSPECV_HTM_TABORTDC, UNSPECV_HTM_TABORTDCI, UNSPECV_HTM_TABORTWC,
            UNSPECV_HTM_TABORTWCI): Remove.
            (UNSPECV_HTM_TABORTXC, UNSPECV_HTM_TABORTXCI, UNSPECV_HTM_TTEST): New.
            (tabort_internal, tbegin_internal, tcheck_internal, tend_internal,
            trechkpt_internal, treclaim_internal, tsr_internal): Rename from this...
            (tabort, tbegin, tcheck, tend, trechkpt, treclaim, tsr): ...to this.
            (tabortdc_internal, tabortdci_internal, tabortwc_internal,
            tabortwci_internal): Remove define_insns.
            (tabort<wd>c, tabort<wd>ci): New define_insns.
            (tabort): Use gpc_reg_operand.
            (tcheck): Remove operand.
            (htm_mfspr_<mode>, htm_mtspr_<mode>): Use GPR mode macro.
            * config/rs6000/htmxlintrin.h (__TM_end): Use _HTM_TRANSACTIONAL as
            expected value.
            * config/rs6000/rs6000-builtin.def (BU_HTM_SPR0): Remove.
            (BU_HTM_SPR1): Rename to BU_HTM_V1.  Remove use of RS6000_BTC_SPR.
            (tabort, tabortdc, tabortdci, tabortwc, tabortwci, tbegin,
            tcheck, tend, tendall, trechkpt, treclaim, tresume, tsuspend,
            tsr, ttest): Pass in the RS6000_BTC_CR attribute.
            (get_tfhar, set_tfhar, get_tfiar, set_tfiar, get_texasr, set_texasr,
            get_texasru, set_texasru): Pass in the RS6000_BTC_SPR attribute.
            (tcheck): Remove builtin argument.
            * config/rs6000/rs6000.c (rs6000_htm_spr_icode): Use TARGET_POWERPC64
            not TARGET_64BIT.
            (htm_expand_builtin): Fix usage of expandedp.  Disallow usage of the
            tabortdc and tabortdci builtins when not in 64-bit mode.
            Modify code to handle the loss of the HTM define_expands.
            Emit code to copy the CR register to TARGET.
            (htm_init_builtins): Modify code to handle the loss of the HTM
            define_expands.
            * config/rs6000/rs6000.h (RS6000_BTC_32BIT): Delete.
            (RS6000_BTC_64BIT): Likewise.
            (RS6000_BTC_CR): New macro.
            * doc/extend.texi: Update documentation for htm builtins.
    
    gcc/testsuite/
    
            Backport from mainline.
            2015-04-27  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/64579
            * gcc.target/powerpc/htm-1.c: New test.
            * gcc.target/powerpc/htm-builtin-1.c (__builtin_tabortdc): Only test
            on 64-bit compiles.
            (__builtin_tabortdci): Likewise.
            (__builtin_tcheck): Remove operand.
            * lib/target-supports.exp (check_htm_hw_available): New function.
    
    From-SVN: r222807

commit 73574b4e0e659f0eb5e16de22b34bdd61ca28d54
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 5 00:16:13 2015 +0000

    Daily bump.
    
    From-SVN: r222787

commit 50035d80992d6541c1a0217c081aa3a5b1a0db8a
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon May 4 20:59:03 2015 +0000

    re PR c++/66007 (Narrowing conversion inside { } results in all zero elements in C++11 mode with -Wno-error=narrowing)
    
    /cp
    2015-05-04  Paolo Carlini  <paolo.carlini@oracle.com>
                Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/66007
            * typeck2.c (check_narrowing): Check by-hand that the pedwarn didn't
            result in an actual error.
    
    /testsuite
    2015-05-04  Paolo Carlini  <paolo.carlini@oracle.com>
                Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/66007
            * g++.dg/cpp0x/Wnarrowing4.C: New.
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    
    From-SVN: r222779

commit b64999d4f0631835b5fcfe88d0edfae2fc3ad12c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon May 4 21:53:35 2015 +0200

    re PR middle-end/65984 (ICE: definition in block 4 does not dominate use in block 2 with -fnon-call-exceptions -fsanitize=enum)
    
            PR tree-optimization/65984
            * ubsan.c: Include tree-cfg.h.
            (instrument_bool_enum_load): Use stmt_ends_bb_p instead of
            stmt_could_throw_p test, rename can_throw variable to ends_bb.
    
            * c-c++-common/ubsan/pr65984.c: New test.
    
    From-SVN: r222776

commit 81915c9a0a9e2ba9a89d67ccf0a546a4094fb593
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon May 4 20:20:10 2015 +0200

    backport: re PR libstdc++/65883 (numeric_limits<unsigned __int128>::max() returns incorrect value)
    
            Backported from mainline
            2015-04-28  Marc Glisse  <marc.glisse@inria.fr>
    
            PR libstdc++/65883
            * include/std/limits (numeric_limits): Add missing unsigned.
    
    From-SVN: r222772

commit 08fee561dce459791f97efb4b1add50cb5da3493
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon May 4 12:46:32 2015 +0200

    Makefile.in (PATCHLEVEL_c): New variable.
    
            * Makefile.in (PATCHLEVEL_c): New variable.
            (DATESTAMP_s, REVISION_s): If PATCHLEVEL_c is not 0,
            expand the same way as if DEVPHASE_c was non-empty.
    
    From-SVN: r222763

commit 0441624071153c4d761329dd938422bcd165f955
Author: Kai Tietz <ktietz@redhat.com>
Date:   Mon May 4 12:23:55 2015 +0200

    Backmerge from trunk.
    
            PR lto/65559
            * lto-wrapper.c (run_gcc): Open filename
            in binary-mode.
    
    From-SVN: r222761

commit a36f0ee42c3f07b6fbd502a9810243dd4d4ed784
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 4 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222756

commit bce5f7b888837e58abcfb13ebe0c0909a0f8f778
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sun May 3 17:29:57 2015 +0000

    configure.ac: Match $host configured with triplets.
    
    2015-05-03  Matthias Klose  <doko@ubuntu.com>
    
            * configure.ac: Match $host configured with triplets.
            * configure: Regenerate.
    
    From-SVN: r222749

commit 8970d90c1229413df5f6873fb94ea7a5ce09bcda
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 3 00:16:17 2015 +0000

    Daily bump.
    
    From-SVN: r222745

commit a17420ed57e6de4112f9485deb80a0211ee8260b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat May 2 16:40:18 2015 +0000

    re PR fortran/65976 (gfortran man-page lists the -fno-fixed-form flag but does not define it, and it doesn't work)
    
    2015-05-02  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65976
            * invoke.texi:  Remove 'no-' in '-fno-fixed-form'
    
    From-SVN: r222726

commit d05c2d7b75e6d9fa87303b95f5f208f3f10d7b4f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat May 2 14:02:18 2015 +0100

    any (_Internal): Check for trivially-copyable instead of nothrow move constructible.
    
            * include/experimental/any (_Internal): Check for trivially-copyable
            instead of nothrow move constructible.
            * testsuite/experimental/any/cons/nontrivial.cc: New.
    
    From-SVN: r222723

commit f037b296c4df4bba2be95d3cc72ec737d17467d0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 2 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222711

commit 6028c8614b7697b52fa597181f2738f1a9caa6a3
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Fri May 1 18:47:55 2015 +0000

    re PR c++/65858 (ICE in varpool_node::get_constructor during chromium build on arm-linux-gnueabihf with LTO during LINK chrome)
    
    /cp
    2015-05-01  Paolo Carlini  <paolo.carlini@oracle.com>
                Prathamesh Kulharni  <prathamesh.kulkarni@linaro.org>
    
            PR c++/65858
            * typeck2.c (check_narrowing): Set ok = true when pedwarn returns
            false.
    
    /testsuite
    2015-05-01  Paolo Carlini  <paolo.carlini@oracle.com>
                Prathamesh Kulharni  <prathamesh.kulkarni@linaro.org>
    
            PR c++/65858
            * g++.dg/cpp0x/Wnarrowing3.C: New.
    
    Co-Authored-By: Prathamesh Kulharni <prathamesh.kulkarni@linaro.org>
    
    From-SVN: r222700

commit 9f649bab2bbadbc534aa9ce9d685c17b1bc17f2c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri May 1 17:24:11 2015 +0100

    * sv.po: Update.
    
    From-SVN: r222693

commit f6bf6acf257ccd3e1e8395d624860fa12f9db63b
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri May 1 17:19:32 2015 +0100

    * de.po: Update.
    
    From-SVN: r222691

commit 40570c7f38b7bf2b844487c881644964a035576e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 1 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222668

commit ed739514d7d5d76ddc49e5e51f977080a4927f31
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri May 1 00:03:05 2015 +0000

    crypto-builtin-2.c: Replace powerpc_vsx_ok with powerpc_p8vector_ok.
    
    2015-04-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-2.c: Replace powerpc_vsx_ok
            with powerpc_p8vector_ok.
    
    From-SVN: r222665

commit 813add0f10522a1bc7914a92c30a41f6505b742c
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Apr 30 18:03:53 2015 +0000

    re PR tree-optimization/63551 (wrong code (segfaults) at -Os on x86_64-linux-gnu)
    
            PR tree-optimization/63551
            * g++.dg/ipa/pr63551.C: New test.
    
    From-SVN: r222651

commit eaf8ab1f20c015cba4c96d9023637a1b7fe73e33
Author: Joseph Myers <jsm28@gcc.gnu.org>
Date:   Thu Apr 30 18:55:47 2015 +0100

    Correct ChangeLog entry date.
    
    From-SVN: r222649

commit 1130edbc7d29731a5b3e7725066219d20a28c0d0
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Apr 30 18:55:03 2015 +0100

    be.po, [...]: Update.
    
            * be.po, ca.po, da.po, de.po, el.po, eo.po, es.po, fi.po, fr.po,
            id.po, ja.po, nl.po, pr_BR.po, ru.po, sr.po, sv.po, tr.po, uk.po,
            vi.po, zh_CN.po, zh_TW.po: Update.
    
    From-SVN: r222647

commit 9bf5fc628fa9f6541a4c528c20032e978c8b068d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Apr 30 18:52:57 2015 +0100

    be.po, [...]: Update.
    
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
    
    From-SVN: r222645

commit 9422b1c6d3b4095b3aba1af766e02d45d1ed72e8
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Apr 30 16:31:36 2015 +0000

    re PR c++/65801 (Allow -Wno-narrowing to silence stricter C++11 narrowing rules)
    
    /cp
    2015-04-30  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/65801
            * typeck2.c (check_narrowing): In C++11 mode too, -Wno-narrowing
            suppresses the diagnostic.
    
    2015-04-30  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/65801
            * doc/invoke.texi ([-Wnarrowing]): Update.
    
    /testsuite
    2015-04-30  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/65801
            * g++.dg/cpp0x/Wnarrowing2.C: New.
    
    From-SVN: r222636

commit ab7c5b191f14cfb1fd143ae564fd489b13a9f5e0
Author: Rainer Orth <ro@gcc.gnu.org>
Date:   Thu Apr 30 14:59:21 2015 +0000

    Add missing PR middle-end/64729 reference.
    
    From-SVN: r222632

commit 9f903a9a1753528417d66c3c91ebc8df3fa6ed76
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Apr 30 10:19:24 2015 -0400

    re PR c++/65876 ([C++11] ICE in cxx_eval_call_expression, at cp/constexpr.c:1358)
    
            PR c++/65876
            * constexpr.c (cxx_eval_call_expression): Fail gracefully if cgraph
            threw away DECL_SAVED_TREE.
    
    From-SVN: r222628

commit 35dac46e9153681a35efaeee0ca935dfae7954e2
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Apr 30 20:41:34 2015 +0930

    re PR target/65408 (powerpc64 function argument passing may access invalid memory)
    
    gcc/
            PR target/65408
            PR target/58744
            PR middle-end/36043
            * calls.c (load_register_parameters): Don't load past end of
            mem unless suitably aligned.
    gcc/testsuite/
            * gcc.dg/pr65408.c: New.
    
    From-SVN: r222616

commit c77525d3944b2bfb7fc285434f613a8186dfab99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 30 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222602

commit 752737ec5bdd82c179e0dc7d6f992bde6bb062ab
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Wed Apr 29 21:32:07 2015 +0000

    runtime: Support -buildmode=c-shared.
    
    These changes permit using the go tool from the upcoming Go
    1.5 release with -buildmode=c-archive to build gccgo code into
    an archive file that can be linked with a C program.
    
    From-SVN: r222595

commit 3593efb61b3ab265d9543ba8a91fd719fb19151c
Author: Doug Evans <dje@google.com>
Date:   Wed Apr 29 17:27:32 2015 +0000

    list.cc (_GLIBCXX_USE_CXX11_ABI): Define to zero.
    
            * testsuite/libstdc++-xmethods/list.cc (_GLIBCXX_USE_CXX11_ABI):
            Define to zero.
    
    From-SVN: r222586

commit 749f1ce98efe9ec815e06d515c0b72f6058ec6fd
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Wed Apr 29 11:07:55 2015 +0200

    Fix OpenMP's target update directive in templated code.
    
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++98 (internal compiler error)
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++98 (test for excess errors)
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++11 (internal compiler error)
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++11 (test for excess errors)
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++14 (internal compiler error)
        FAIL: g++.dg/gomp/tpl-target-update.C  -std=c++14 (test for excess errors)
    
        [...]/source-gcc/gcc/testsuite/g++.dg/gomp/tpl-target-update.C: In instantiation of 'void f(T, T) [with T = int]':
        [...]/source-gcc/gcc/testsuite/g++.dg/gomp/tpl-target-update.C:19:9:   required from here
        [...]/source-gcc/gcc/testsuite/g++.dg/gomp/tpl-target-update.C:10:9: internal compiler error: tree check: expected oacc_parallel or oacc_kernels or oacc_data or oacc_host_data or omp_parallel or omp_task or omp_for or omp_simd or cilk_simd or cilk_for or omp_distribute or oacc_loop or omp_teams or omp_target_data or omp_target or omp_sections or omp_single, have omp_target_update in tsubst_expr, at cp/pt.c:14209
        0xf5aae1 tree_range_check_failed(tree_node const*, char const*, int, char const*, tree_code, tree_code)
                [...]/source-gcc/gcc/tree.c:9384
        0x66e201 tree_range_check
                [...]/source-gcc/gcc/tree.h:2979
        0x66e201 tsubst_expr
                [...]/source-gcc/gcc/cp/pt.c:14209
        0x6695e3 tsubst_expr
                [...]/source-gcc/gcc/cp/pt.c:13752
        0x66ac07 tsubst_expr
                [...]/source-gcc/gcc/cp/pt.c:13938
        0x667c41 instantiate_decl(tree_node*, int, bool)
                [...]/source-gcc/gcc/cp/pt.c:20367
        0x6ae386 instantiate_pending_templates(int)
                [...]/source-gcc/gcc/cp/pt.c:20484
        0x6edc3d cp_write_global_declarations()
                [...]/source-gcc/gcc/cp/decl2.c:4456
    
    Backport from trunk r222564:
    
            gcc/cp/
            * pt.c (tsubst_expr) <OMP_TARGET_UPDATE>: Use
            OMP_TARGET_UPDATE_CLAUSES instead of OMP_CLAUSES.
            gcc/testsuite/
            * g++.dg/gomp/tpl-target-update.C: New file.
    
    From-SVN: r222565

commit 6ef90461d31e6a45f4bcffa44f1c874c1679dad2
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 28 20:57:50 2015 -0400

    re PR c++/65896 (Erroneous uninitialized variable access error in constexpr function with temporary variables)
    
            PR c++/65896
            * constexpr.c (cxx_eval_store_expression): Don't try to actually
            store an empty class.
    
    From-SVN: r222557

commit 178646ec1548b1f184b12852c69ccf6e628413e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 29 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222554

commit 9745a2229f55f6852c82d10b4992c47dfe449c61
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Apr 28 22:21:42 2015 +0100

    * fr.po: Update.
    
    From-SVN: r222548

commit 3306fb4db8301b5b5a0ed62a0b9de955521baa1f
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Apr 28 20:44:03 2015 +0000

    vect-33.c: Remove spurious line.
    
    2015-04-28  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.dg/vect/vect-33.c: Remove spurious line.
    
    From-SVN: r222544

commit d6dfeb2a0f1f490174670fd2d69dc574370d763e
Author: Stephan Bergmann <sbergman@redhat.com>
Date:   Tue Apr 28 17:54:13 2015 +0000

    vector (_Safe_vector::operator=): Add missing returns.
    
    2015-04-28  Stephan Bergmann  <sbergman@redhat.com>
    
            * include/debug/vector (_Safe_vector::operator=): Add missing returns.
    
    From-SVN: r222538

commit b1f67a1be6999cc765d386ae67edb986e9848f45
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Tue Apr 28 09:40:18 2015 +0000

    backport: configure.ac: Drop AC_PROG_CXX and friends, since libmpx has no C++ sources.
    
    libmpx/
    
            Backport from mainline r222469
            2015-04-27  Steven Noonan <steven@uplinklabs.net>
    
            * configure.ac: Drop AC_PROG_CXX and friends, since libmpx has no C++
            sources.
            * configure: Regenerate.
    
    From-SVN: r222520

commit d07e4cb99595d41adfa864f439eb17f350f82b67
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Apr 28 08:54:28 2015 +0000

    c-ada-spec.c (in_function): Delete.
    
            * c-ada-spec.c (in_function): Delete.
            (dump_generic_ada_node): Do not change in_function and remove the
            redundant code dealing with it.
            (print_ada_declaration): Do not change in_function.  Use INDENT_INCR.
            (print_ada_methods): Output the static member functions in a nested
            package after the regular methods as well as associated renamings.
    
    Co-Authored-By: Pierre-Marie de Rodat <derodat@adacore.com>
    
    From-SVN: r222518

commit 9982c7abf3f71123d57fe0aa0d076d4977ef0780
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 28 00:16:18 2015 +0000

    Daily bump.
    
    From-SVN: r222495

commit 46421d59c42dcccf670378f4c949f369e3adb9b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Apr 27 14:21:17 2015 +0200

    re PR tree-optimization/65875 (ICE: Segmentation fault)
    
            PR tree-optimization/65875
            * tree-vrp.c (update_value_range): If in is_new case setting
            old_vr to VR_VARYING, also set new_vr to it.  Remove
            old_vr->type == VR_VARYING test.
            (vrp_visit_phi_node): Return SSA_PROP_VARYING instead of
            SSA_PROP_INTERESTING if update_value_range returned true,
            but new range is VR_VARYING.
    
            * gcc.c-torture/compile/pr65875.c: New test.
    
    From-SVN: r222461

commit 5f7474e3e764b6db8172de976a4b8c004d1e537b
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Apr 27 11:49:42 2015 +0000

    backport: re PR target/65296 ([avr] fix various issues with specs file generation)
    
            Backport from 2015-04-27 trunk r222459.
            PR target/65296
            PR target/65895
            * config/avr/gen-avr-mmcu-specs.c (print_mcu): Close file.
            Add hint how to use own spec file.
    
    From-SVN: r222460

commit 59005b430e82bf250d8353594a0345ed8a54d512
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 27 00:16:16 2015 +0000

    Daily bump.
    
    From-SVN: r222451

commit 4a81b3ddf37ae736ba19b141e0d289123665cc63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 26 00:16:19 2015 +0000

    Daily bump.
    
    From-SVN: r222443

commit 0f762ed90e0c9d2190d9714ca938c585d3d23f24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 25 00:16:14 2015 +0000

    Daily bump.
    
    From-SVN: r222437

commit 7407cdc7bab71d8428ed95e0b4035d9ce0a17216
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Apr 24 22:08:18 2015 +0000

    re PR go/65616 (libgobegin.a not compiled with -fPIC)
    
            PR go/65616
    libgo: Compile go-main, in libgobegin, with -fPIC.
    
    From-SVN: r222430

commit 1455078bbd6fb3809d7693f915cda596952b3d9d
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Apr 24 20:03:13 2015 +0000

    backport: re PR target/65849 (Add missing tuning knobs to #pragma target/attribute target support)
    
    [gcc]
    2015-04-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-04-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/65849
            * config/rs6000/rs6000.opt (-mvsx-align-128): Make options that
            save to independent variables use the Save attribute.  This will
            allow these options to be modified with the #pragma/attribute
            target support.
            (-mallow-movmisalign): Likewise.
            (-mallow-df-permute): Likewise.
            (-msched-groups): Likewise.
            (-malways-hint): Likewise.
            (-malign-branch-targets): Likewise.
            (-mvectorize-builtins): Likewise.
            (-msave-toc-indirect): Likewise.
    
            * config/rs6000/rs6000.c (rs6000_opt_masks): Add more options that
            can be set via the #pragma/attribute target support.
            (rs6000_opt_vars): Likewise.
            (rs6000_inner_target_options): If VSX was set, also set
            -mno-avoid-indexed-addresses.
    
    [gcc/testsuite]
    2015-04-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2015-04-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/65849
            * gcc.target/powerpc/pr65849-1.c: New test to verify being able to
            set new options.
            * gcc.target/powerpc/pr65849-2.c: Likewise.
    
    From-SVN: r222421

commit a4387f0594b3c93143090c243e8a9359130dee91
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 24 13:41:47 2015 +0000

    backport: altivec.md (*altivec_lvx_<mode>_internal): Remove asterisk from name so this can be generated directly.
    
    2015-04-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222385
            2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.md (*altivec_lvx_<mode>_internal): Remove
            asterisk from name so this can be generated directly.
            (*altivec_stvx_<mode>_internal): Likewise.
            * config/rs6000/rs6000.c (rs6000_emit_le_vsx_store): Add assert
            that this is never called during or after reload/lra.
            (rs6000_frame_related): Remove split_reg
            argument and logic that references it.
            (emit_frame_save): Remove last parameter from call to
            rs6000_frame_related.
            (rs6000_emit_prologue): Remove last parameter from eight calls to
            rs6000_frame_related.  Force generation of stvx instruction for
            Altivec register saves.  Remove split_reg handling, which is no
            longer needed.
            (rs6000_emit_epilogue):  Force generation of lvx instruction for
            Altivec register restores.
    
    From-SVN: r222411

commit 236d0807f79726c906f388083edd5cc98dca0b3f
Author: H.J. Lu <hjl@gcc.gnu.org>
Date:   Fri Apr 24 04:26:32 2015 -0700

    Revert r222387
    
    From-SVN: r222405

commit b40abf9155985c4a56bb6c6d11030fb7fec54dcd
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Apr 24 09:40:07 2015 +0200

    sse.md (*vec_widen_smult_even_v8si<mask_name>): Mark operand1 commutative.
    
            * config/i386/sse.md (*vec_widen_smult_even_v8si<mask_name>):
            Mark operand1 commutative.
    
    From-SVN: r222402

commit 00b445e77edc6990cf320f84e866291f7bf16866
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Apr 24 07:57:10 2015 +0200

    Add missing ChangeLog entry for r222341.
    
    2015-04-24  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Add missing ChangeLog entry for r222341.
    
        Backport from trunk r222273
        2015-04-21  Andreas Tobler  <andreast@gcc.gnu.org>
        * gcc.target/i386/avx512bw-vpermi2w-2.c: Fix includes to use actual
        headers.
        * gcc.target/i386/avx512bw-vpermt2w-2.c: Likewise.
        * gcc.target/i386/avx512bw-vpmaddubsw-2.c: Likewise.
        * gcc.target/i386/avx512bw-vpmaddwd-2.c: Likewise.
        * gcc.target/i386/avx512dq-vfpclasspd-2.c: Likewise.
        * gcc.target/i386/avx512dq-vfpclassps-2.c: Likewise.
        * gcc.target/i386/avx512vbmi-vpermi2b-2.c: Likewise.
        * gcc.target/i386/avx512vbmi-vpermt2b-2.c: Likewise.
    
    From-SVN: r222399

commit 8e91180a55c1a50097099a7e0b23dfd8502c6ecc
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 24 04:21:57 2015 +0000

    backport: crypto.md (crypto_vpmsum<CR_char>): Change TARGET_CRYPTO to TARGET_P8_VECTOR>
    
    [gcc]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222362
            2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/crypto.md (crypto_vpmsum<CR_char>): Change
            TARGET_CRYPTO to TARGET_P8_VECTOR>
            (crypto_vpermxor_<mode>): Likewise.
            * config/rs6000/rs6000-builtin.def (BU_CRYPTO_2A): New #define.
            (BU_CRYPTO_3A): Likewise.
            (BU_CRYPTO_OVERLOAD_2A): Rename from BU_CRYPTO_OVERLOAD_2.
            (BU_CRYPTO_OVERLOAD_3A): New #define.
            (VPMSUMB): Change from BU_CRYPTO_2 to BU_CRYPTO_2A.
            (VPMSUMH): Likewise.
            (VPMSUMW): Likewise.
            (VPMSUMD): Likewise.
            (VPERMXOR_V2DI): Change from BU_CRYPTO_3 to BU_CRYPTO_3A.
            (VPERMXOR_V4SI): Likewise.
            (VPERMXOR_V8HI): Likewise.
            (VPERMXOR_V16QI): Likewise.
            (VPMSUM): Change from BU_CRYPTO_OVERLOAD_2 to
            BU_CRYPTO_OVERLOAD_2A.
            (VPERMXOR): Change from BU_CRYPTO_OVERLOAD3 to
            BU_CRYPTO_OVERLOAD_3A.
            * config/rs6000/rs6000.opt (mcrypto): Change description of
            option.
    
            Backport from mainline r222362
            2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.opt (mcrypto): Change option description to
            match category changes in ISA 2.07B.
    
    [gcc/testsuite]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222362
            2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-2.c: New.
    
    From-SVN: r222397

commit 4ef4bce0680dc0f3300fe0bea583b41652b5aa40
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 24 03:23:26 2015 +0000

    pr65456.c: Add test missed during backport of r222349.
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/pr65456.c: Add test missed during backport of
            r222349.
    
    From-SVN: r222395

commit b53b314843c59966309b60c068ff196b93868149
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 24 03:17:40 2015 +0000

    backport: rs6000.c (rtx_is_swappable_p): Commentary adjustments.
    
    [gcc]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222351
            2015-04-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Commentary
            adjustments.
            (insn_is_swappable_p): Return 1 for a convert from double to
            single precision when all of its uses are splats of BE element
            zero.
    
    [gcc/testsuite]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222351
            2015-04-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/swaps-p8-18.c: New test.
    
    From-SVN: r222394

commit a0dc95aa69d2286267a7d6a53d4e1d5c54e89903
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 24 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222390

commit 2d439b6ad77d3cc75f509df787432e0c6c6d6f1b
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Thu Apr 23 23:30:52 2015 +0000

    Set DEV-PHASE to prerelease
    
            * DEV-PHASE: Set to prerelease.
    
    From-SVN: r222387

commit d1128c83fbdea9dbc958baff0ba702e6aeb8b5ed
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Apr 23 21:03:40 2015 +0000

    backport: re PR target/65456 (powerpc64le autovectorized copy loop missed optimization)
    
    [gcc]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222349
            2015-04-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65456
            * config/rs6000/rs6000.c (rs6000_option_override_internal):  For
            VSX + POWER8, enable TARGET_ALLOW_MOVMISALIGN and
            TARGET_EFFICIENT_UNALIGNED_VSX if not selected by command line
            option.
            (rs6000_builtin_mask_for_load): Return 0 for targets with
            efficient unaligned VSX accesses so that the vectorizer will use
            direct unaligned loads.
            (rs6000_builtin_support_vector_misalignment): Always return true
            for targets with efficient unaligned VSX accesses.
            (rs6000_builtin_vectorization_cost): Cost of unaligned loads and
            stores on targets with efficient unaligned VSX accesses is almost
            always the same as the cost of an aligned load or store, so model
            it that way.
            * config/rs6000/rs6000.h (SLOW_UNALIGNED_ACCESS): Return 0 for
            unaligned vectors if we have efficient unaligned VSX accesses.
            * config/rs6000/rs6000.opt (mefficient-unaligned-vector): New
            undocumented option.
    
    [gcc/testsuite]
    
    2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r222349
            2015-04-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65456
            * gcc.dg/vect/bb-slp-24.c: Exclude test for POWER8.
            * gcc.dg/vect/bb-slp-25.c: Likewise.
            * gcc.dg/vect/bb-slp-29.c: Likewise.
            * gcc.dg/vect/bb-slp-32.c: Replace vect_no_align with
            vect_no_align && { ! vect_hw_misalign }.
            * gcc.dg/vect/bb-slp-9.c: Likewise.
            * gcc.dg/vect/costmodel/ppc/costmodel-slp-33.c: Exclude test for
            vect_hw_misalign.
            * gcc.dg/vect/costmodel/ppc/costmodel-vect-31a.c: Likewise.
            * gcc.dg/vect/costmodel/ppc/costmodel-vect-76b.c: Adjust tests to
            account for POWER8, where peeling for alignment is not needed.
            * gcc.dg/vect/costmodel/ppc/costmodel-vect-outer-fir.c: Replace
            vect_no_align with vect_no_align && { ! vect_hw_misalign }.
            * gcc.dg.vect.if-cvt-stores-vect-ifcvt-18.c: Likewise.
            * gcc.dg/vect/no-scevccp-outer-6-global.c: Likewise.
            * gcc.dg/vect/no-scevccp-outer-6.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-43.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-57.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-61.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-depend-1.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-depend-2.c: Likewise.
            * gcc.dg/vect/no-vfa-vect-depend-3.c: Likewise.
            * gcc.dg/vect/pr16105.c: Likewise.
            * gcc.dg/vect/pr20122.c: Likewise.
            * gcc.dg/vect/pr33804.c: Likewise.
            * gcc.dg/vect/pr33953.c: Likewise.
            * gcc.dg/vect/pr56787.c: Likewise.
            * gcc.dg/vect/pr58508.c: Likewise.
            * gcc.dg/vect/slp-25.c: Likewise.
            * gcc.dg/vect/vect-105-bit-array.c: Likewise.
            * gcc.dg/vect/vect-105.c: Likewise.
            * gcc.dg/vect/vect-27.c: Likewise.
            * gcc.dg/vect/vect-29.c: Likewise.
            * gcc.dg/vect/vect-33.c: Exclude unaligned access test for
            POWER8.
            * gcc.dg/vect/vect-42.c: Replace vect_no_align with vect_no_align
            && { ! vect_hw_misalign }.
            * gcc.dg/vect/vect-44.c: Likewise.
            * gcc.dg/vect/vect-48.c: Likewise.
            * gcc.dg/vect/vect-50.c: Likewise.
            * gcc.dg/vect/vect-52.c: Likewise.
            * gcc.dg/vect/vect-56.c: Likewise.
            * gcc.dg/vect/vect-60.c: Likewise.
            * gcc.dg/vect/vect-72.c: Likewise.
            * gcc.dg/vect/vect-75-big-array.c: Likewise.
            * gcc.dg/vect/vect-75.c: Likewise.
            * gcc.dg/vect/vect-77-alignchecks.c: Likewise.
            * gcc.dg/vect/vect-77-global.c: Likewise.
            * gcc.dg/vect/vect-78-alignchecks.c: Likewise.
            * gcc.dg/vect/vect-78-global.c: Likewise.
            * gcc.dg/vect/vect-93.c: Likewise.
            * gcc.dg/vect/vect-95.c: Likewise.
            * gcc.dg/vect/vect-96.c: Likewise.
            * gcc.dg/vect/vect-cond-1.c: Likewise.
            * gcc.dg/vect/vect-cond-3.c: Likewise.
            * gcc.dg/vect/vect-cond-4.c: Likewise.
            * gcc.dg/vect/vect-cselim-1.c: Likewise.
            * gcc.dg/vect/vect-multitypes-1.c: Likewise.
            * gcc.dg/vect/vect-multitypes-3.c: Likewise.
            * gcc.dg/vect/vect-multitypes-4.c: Likewise.
            * gcc.dg/vect/vect-multitypes-6.c: Likewise.
            * gcc.dg/vect/vect-nest-cycle-1.c: Likewise.
            * gcc.dg/vect/vect-nest-cycle-2.c: Likewise.
            * gcc.dg/vect/vect-outer-3a-big-array.c: Likewise.
            * gcc.dg/vect/vect-outer-3a.c: Likewise.
            * gcc.dg/vect/vect-outer-5.c: Likewise.
            * gcc.dg/vect/vect-outer-fir-big-array.c: Likewise.
            * gcc.dg/vect/vect-outer-fir-lb-big-array.c: Likewise.
            * gcc.dg/vect/vect-outer-fir-lb.c: Likewise.
            * gcc.dg/vect/vect-outer-fir.c: Likewise.
            * gcc.dg/vect/vect-peel-3.c: Likewise.
            * gcc.dg/vect/vect-peel-4.c: Likewise.
            * gcc.dg/vect/vect-pre-interact.c: Likewise.
            * gcc.target/powerpc/pr65456.c: New test.
            * gcc.target/powerpc/vsx-vectorize-2.c: Exclude test for POWER8.
            * gcc.target/powerpc/vsx-vectorize-4.c: Likewise.
            * gcc.target/powerpc/vsx-vectorize-6.c: Likewise.
            * gcc.target/powerpc/vsx-vectorize-7.c: Likewise.
            * gfortran.dg/vect/vect-2.f90: Replace vect_no_align with
            vect_no_align && { ! vect_hw_misalign }.
            * gfortran.dg/vect/vect-3.f90: Likewise.
            * gfortran.dg/vect/vect-4.f90: Likewise.
            * gfortran.dg/vect/vect-5.f90: Likewise.
            * lib/target-supports.exp (check_effective_target_vect_no_align):
            Return 1 for POWER8.
            (check_effective_target_vect_hw_misalign): Return 1 for POWER8.
    
            Backport from mainline r222372
            2015-04-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a.c: Replace
            vect_no_align with vect_no_align && { ! vect_hw_misalign }.
    
    From-SVN: r222386

commit db768d9623913b9f05eb54e36131147128724913
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Thu Apr 23 19:07:52 2015 +0000

    backport: re PR rtl-optimization/65805 (Chromium gets miscompiled)
    
    2015-04-23  Vladimir Makarov  <vmakarov@redhat.com>
    
            Backport from trunk r222223.
    
            2015-04-19  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR rtl-optimization/65805
            * lra-eliminations.c (lra_eliminate_regs_1): Add new assert.
            Don't use difference of offset and previous offset if
            update_sp_offset is non-zero.
            (eliminate_regs_in_insn): Ditto.
            * lra-spills.c (remove_pseudos): Exchange 4th and 6th args in
            lra_eliminate_regs_1 call.
            * lra-constraints.c (get_equiv_with_elimination): Ditto.
    
    From-SVN: r222383

commit 419948e7844ee03b7daf3b70afa7583a775241e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 23 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222347

commit 34b7bf24baf34f4b7307eea0412fb45ee8ffbc79
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Apr 22 23:12:30 2015 +0000

    re PR fortran/65429 (ICE on implied-length character empty array constructor)
    
    2015-04-22  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65429
            * decl.c (add_init_expr_to_sym): Set the length type parameter.
    
            PR fortran/65429
            * gfortran.dg/pr65429.f90: New test.
    
    From-SVN: r222343

commit 723fd9cfbe3bbd86de315dd396616f5f376fe3ae
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed Apr 22 22:54:09 2015 +0200

    backport: avx512bw-vpermi2w-2.c: Fix includes to use actual headers.
    
    2015-04-22  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from trunk r222273
        2015-04-21  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * gcc.target/i386/avx512bw-vpermi2w-2.c: Fix includes to use actual
        headers.
        * gcc.target/i386/avx512bw-vpermt2w-2.c: Likewise.
        * gcc.target/i386/avx512bw-vpmaddubsw-2.c: Likewise.
        * gcc.target/i386/avx512bw-vpmaddwd-2.c: Likewise.
        * gcc.target/i386/avx512dq-vfpclasspd-2.c: Likewise.
        * gcc.target/i386/avx512dq-vfpclassps-2.c: Likewise.
        * gcc.target/i386/avx512vbmi-vpermi2b-2.c: Likewise.
        * gcc.target/i386/avx512vbmi-vpermt2b-2.c: Likewise.
    
    From-SVN: r222341

commit a88d85d4bce4f890a585ad4f1e1590cf917159ee
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Apr 22 20:53:07 2015 +0000

    re PR c++/65727 (Segfault With Decltype In Lambda Expression Used To Initialize Static Class Member)
    
            PR c++/65727
            * lambda.c (maybe_resolve_dummy): Handle null return.
    
    From-SVN: r222340

commit 8d9b78b5aeb859a6d007677e57081def81e5fcf2
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 22 16:53:02 2015 -0400

    re PR c++/65695 (NSDMI calling constexpr constructor with pointer-to-member is not a constant expression)
    
            PR c++/65695
            * cvt.c (cp_fold_convert): Avoid wrapping PTRMEM_CST in NOP_EXPR.
    
    From-SVN: r222339

commit 03b5116a3a9e515520a8defcc812be90dbf1ca2e
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 22 16:52:57 2015 -0400

    re PR c++/65721 (Internal compiler error segmentation fault)
    
            PR c++/65721
            * name-lookup.c (do_class_using_decl): Complain about specifying
            the current class even if there are dependent bases.
    
    From-SVN: r222338

commit e15ebe1aa0dd2d2b01633217c639ef8a92b19563
Author: David Krauss <david_work@me.com>
Date:   Wed Apr 22 20:52:52 2015 +0000

    re PR c++/59766 (c++1y: declaring friend function with 'auto' return type deduction is rejected with bogus reason)
    
            PR c++/59766
            * decl.c (grokdeclarator): Do not flag friends with deduced return.
    
    From-SVN: r222337

commit 9c2490eb3fb9916925542c63bd22c55951801e65
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Apr 22 16:14:50 2015 +0000

    backport: re PR target/65296 ([avr] fix various issues with specs file generation)
    
            Backport from trunk r222179.
            2015-04-17  Sivanupandi Pitchumani <Pitchumani.Sivanupandi@atmel.com>
            PR target/65296
            * config/avr/gen-avr-mmcu-specs.c (*avrlibc_startfile): Adjust
            to new AVR-LibC file layout (bug #44574).
            (*avrlibc_devicelib): Same.
            * config/avr/avr-mcus.def: Adjust comments.
            * config/avr/avr.opt (nodevicelib): Adjust help.
    
    From-SVN: r222333

commit ad9016331d0e629d58a9362e27f514cf5be70ad5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 22 12:45:39 2015 +0200

    * BASE-VER: Set to 5.1.1.
    
    From-SVN: r222321

commit 21ac283a4f9ec556010586bef7c512fd8161c295
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Wed Apr 22 09:37:52 2015 +0000

    backport: re PR testsuite/65767 (Test pr65276 failed on arm-none-eabi)
    
    
            Backport from trunk r222255
            2015-04-21  Bin Cheng  <bin.cheng@arm.com>
    
            PR testsuite/65767
            * g++.dg/lto/pr65276_0.C: Change namespace std to std2.
            * g++.dg/lto/pr65276_1.C: Change namespace std to std2.
    
    From-SVN: r222319

commit ea29f0882c0cb710b0444744eaf368cf0143d7a0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 22 08:43:12 2015 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r222316

commit fc3f7b0f5bec630937e8fe149194a81f1652ad04
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 22 10:15:17 2015 +0200

    * gennews (files): Add files for GCC 5.
    
    From-SVN: r222310

commit 6ea76380e394f2652ba046cdfcb3396d084ea0bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 22 00:16:15 2015 +0000

    Daily bump.
    
    From-SVN: r222291

commit 2c86612079b31f87fb07c6099f8ba9fc15835da6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 21 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222253

commit 54b322e5c40aab489f6976b1370519647e8bc445
Author: Ilya Verbin <ilya.verbin@intel.com>
Date:   Mon Apr 20 16:55:33 2015 +0000

    c-parser.c (c_parser_oacc_enter_exit_data): Remove excess semicolon.
    
    gcc/c/
            * c-parser.c (c_parser_oacc_enter_exit_data): Remove excess semicolon.
            (c_parser_omp_target_update): Add missed %> to error_at ().
    gcc/cp/
            * parser.c (cp_parser_omp_target_update): Add missed %> to error_at ().
    
    From-SVN: r222240

commit 7e4a3f9664476dc5b046e09579ebbf64a4894a6b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Apr 20 15:31:02 2015 +0200

    re PR debug/65807 (ICE () on powerpc64le-linux-gnu)
    
            PR debug/65807
            * dwarf2out.c (add_AT_wide): Clear attr.dw_attr_val.val_entry.
    
    From-SVN: r222233

commit 095c33cc663b15e6de1af468dcd8ae9d16a86ced
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 20 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222226

commit 6fc12a448bd9eeadf078ac7506ef283490f67e12
Author: William Schmidt <wschmidt@gcc.gnu.org>
Date:   Sun Apr 19 15:16:14 2015 +0000

    Credit Jakub for PR65787 fix
    
    From-SVN: r222219

commit 96e6c3416b0332a4cd9890f2f6f5bef955b06141
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 19 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222217

commit 0633a99c1b796c22d253f079aa9e49bc7fd7bb50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 18 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222211

commit 96b7136a0300e3317cddf3fca0e203371e3d45cc
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Fri Apr 17 22:38:14 2015 +0000

    * doc/plugins.texi: Rewrite first introductory paragraph.
    
    From-SVN: r222207

commit d24eeaaf29054dd2f09b335d1383782f232256a2
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Apr 17 21:58:58 2015 +0000

    re PR go/65798 (runtime.Caller returns ok=true when return data is invalid)
    
            PR go/65798
    runtime: In Caller don't return ok == true if PC == 0.
    
    GCC PR 65798 reports that this can happen in some cases.
    
    From-SVN: r222203

commit a34769af16fb1204eaa34098bd05ec4cdd04a933
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Apr 17 21:55:05 2015 +0000

    Don't define ix86_binds_local_p for MacOS nor Windows
    
            PR target/65780
            * config/i386/i386.c (ix86_binds_local_p): Define only if
            TARGET_MACHO and TARGET_DLLIMPORT_DECL_ATTRIBUTES are false.
    
    From-SVN: r222202

commit 4f335e68a8cdc119c11824c61dac2d038e993738
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Apr 17 21:29:08 2015 +0000

    re PR go/64683 (FAIL: runtime/pprof -- testing.go:278: The entry did not match)
    
            PR go/64683
    runtime/pprof: Assume function with no name is in runtime.
    
    GCC PR 65797 causes some of the runtime functions to be
    compiled with no name in the debug info.  This in turn causes
    the runtime/pprof test to fail as reported in GCC PR 64683.
    
    There are no good choices when a function has no name in the
    debug info, but here we assume that if we see such a function
    while reading the runtime functions, we assume that it is also
    a runtime function.
    
    From-SVN: r222199

commit 824c7162a5a724bb0eb978acabb21923a5570449
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 17 20:35:59 2015 +0000

    re PR target/65787 (Miscompile due to bad vector swap optimization for little endian)
    
    2015-04-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65787
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Remove previous
            fix; ensure that a subsequent SH_NONE operand does not overwrite
            an existing *special value.
    
    From-SVN: r222198

commit 25e04c44c1e212426f9d6aa474a636ee41e3d58d
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Apr 17 19:29:43 2015 +0000

    re PR go/64999 (s390x libgo test failure in TestMemoryProfiler)
    
            PR go/64999
            PR go/65180
    runtime: Adjust libbacktrace PC value to what runtime.Callers expects.
    
    From Lynn Boger.
    
    From-SVN: r222197

commit 50772a6e82075dd3f46f8c0915b4721a947dbd1a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Apr 17 19:10:27 2015 +0200

    re PR bootstrap/62077 (--with-build-config=bootstrap-lto fails)
    
            PR bootstrap/62077
            * configure.ac (--enable-stage1-checking): Default to
            release,misc,gimple,rtlflag,tree,types if --disable-checking
            or --enable-checking is not specified and DEV-PHASE is not
            experimental.
            * configure: Regenerated.
    
    From-SVN: r222189

commit dea33d7977d7df6309d5634e0e8297cb67883f56
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Apr 17 16:36:22 2015 +0000

    Properly handle uninitialized common symbol
    
    Uninitialized common symbol behavior in executables is target and linker
    dependent.  default_binds_local_p_3 is made public and updated to take an
    argument to indicate if the linker can guarantee that an uninitialized
    common symbol in the executable will still be defined (through COPY
    relocation) in the executable.  If common symbol is local to executable,
    default_binds_local_p_3 will treat non-external variable as defined
    locally.  default_binds_local_p_2 is changed to treat common symbol as
    local for non-PIE binaries.
    
    For i386, common symbol is local only for non-PIE binaries.  For x86-64,
    common symbol is local only for non-PIE binaries or linker supports copy
    reloc in PIE binaries.  If a target treats common symbol as local only
    for non-PIE binaries, it can define TARGET_BINDS_LOCAL_P as
    default_binds_local_p_2.
    
    gcc/
    
            PR target/65780
            * output.h (default_binds_local_p_3): New.
            * varasm.c (default_binds_local_p_3): Make it public.  Take an
            argument to indicate if common symbol may be local.  If common
            symbol may be local, treat non-external variable as defined
            locally.
            (default_binds_local_p_2): Pass !flag_pic to default_binds_local_p_3.
            (default_binds_local_p_1): Pass false to default_binds_local_p_3.
            * config/i386/i386.c (ix86_binds_local_p): New.
            (TARGET_BINDS_LOCAL_P): Replace default_binds_local_p_2 with
            ix86_binds_local_p.
    
    gcc/testsuite/
    
            PR target/65780
            * gcc.dg/pr65780-1.c: New test.
            * gcc.dg/pr65780-2.c: Likewise.
            * gcc.target/i386/pr32219-9.c: Likewise.
            * gcc.target/i386/pr32219-1.c (xxx): Make it initialized common
            symbol.
            * gcc.target/i386/pr64317.c (c): Initialize.
    
    From-SVN: r222185

commit 6cb1b83e0fb35d45f33d155fa24a0dc2b4868a4b
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Apr 17 14:50:50 2015 +0000

    re PR target/65787 (Miscompile due to bad vector swap optimization for little endian)
    
    [gcc]
    
    2015-04-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65787
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Handle case where
            vec_extract operation is wrapped in a PARALLEL with a CLOBBER.
            (adjust_extract): Likewise.
    
    [gcc/testsuite]
    
    2015-04-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65787
            * gcc.target/powerpc/pr65787.c: New.
    
    From-SVN: r222182

commit 3e1a923756e94b349f61378eabffea1e469209dd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Apr 17 09:45:46 2015 +0200

    re PR debug/65771 (ICE (in loc_list_from_tree, at dwarf2out.c:14964) on arm-linux-gnueabihf)
    
            PR debug/65771
            * dwarf2out.c (loc_list_from_tree): Return NULL
            for DEBUG_EXPR_DECL.
    
            * gcc.dg/debug/pr65771.c: New test.
    
    From-SVN: r222167

commit 6ae2c805b1b9314dd5afb5c62ad62228a3bab25c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 17 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222163

commit 45a5767e705e4610fa5d6503092a24cef65354d7
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Thu Apr 16 15:38:24 2015 +0000

    Replace __buitlin_alloca with __builtin_alloca
    
            * gcc.target/i386/mpx/alloca-1-lbv.c (mpx_test): Replace
            __buitlin_alloca with __builtin_alloca.
    
    From-SVN: r222152

commit f924b76acb9d5d8d2efb06e0dd643ef12bc6d1f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 16 00:16:18 2015 +0000

    Daily bump.
    
    From-SVN: r222139

commit e55ab43f5f0f65dcd6d767f3df16dece38416a8d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 15 14:09:56 2015 +0200

    re PR ipa/65765 (Compiling Firefox with GCC 5 leads to broken javascript engine on x86-64)
    
            PR ipa/65765
            * ipa-icf-gimple.c (func_checker::compare_bb): For GIMPLE_NOP
            and GIMPLE_PREDICT use break instead of return true. For
            GIMPLE_EH_DISPATCH, compare dispatch region.
    
            * g++.dg/ipa/pr65765.C: New test.
    
    From-SVN: r222124

commit 49c50b72218d0b43288a4368a5a60cdac7d3eee2
Author: Andreas Schwab <schwab@suse.de>
Date:   Wed Apr 15 09:33:32 2015 +0000

    re PR bootstrap/65763 (tm.h: No such file or directory)
    
            PR bootstrap/65763
            * Makefile.am (gcc_build_dir): Remove $(host_subdir)/ part.
            * Makefile.in: Regenerated.
    
    From-SVN: r222122

commit 54c2586f9270600c6964cfa0a06d24dac502d35a
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Apr 15 07:54:50 2015 +0000

    Ignore elfdump warnings in scripts/extract_symvers.pl
    
            * scripts/extract_symvers.pl: Ignore elfdump error output.
    
    From-SVN: r222118

commit b20c6f3a3e47400cf38db1a153b190b0a0d68f05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 15 00:16:12 2015 +0000

    Daily bump.
    
    From-SVN: r222108

commit 1b66059225bb91bf254ce1e6e614aa78015974bd
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Apr 14 18:48:49 2015 +0000

    re PR go/65755 (incorrect reflection of struct fields with gccgo)
    
            PR go/65755
    compiler: Use receiver type in method pkgpath and reflection strings.
    
    Also always emit pkgpath in reflection string for named types, not
    just when using -fgo-pkgpath.
    
    From-SVN: r222102

commit 89c5c1d8bea8b33b23be236ab9faf56c2ec1d248
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Apr 14 15:25:34 2015 +0200

    re PR rtl-optimization/65761 (internal compiler error: in patch_jump_insn, at cfgrtl.c:1296)
    
            PR rtl-optimization/65761
            * cfgrtl.c (rtl_split_edge): For EDGE_CROSSING split, use
            get_last_bb_insn (after) instead of NEXT_INSN (BB_END (after)).
    
    From-SVN: r222091

commit 40a65b7b88d1e6f3fd0e7518843590f6a1db5dff
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Apr 14 09:31:26 2015 +0000

    Avoid finite in gcc.target/i386/avx512dq-vfpclasspd-2.c etc.
    
            * gcc.target/i386/avx512dq-vfpclasspd-2.c (check_fp_class_dp): Use
            __builtin_finite instead of finite.
            * gcc.target/i386/avx512dq-vfpclassps-2.c (check_fp_class_sp):
            Likewise.
    
    From-SVN: r222080

commit 2a2f1cbfe798d378cee78e989aca96f4a1168857
Author: Hans-Peter Nilsson <hp@axis.com>
Date:   Tue Apr 14 00:35:03 2015 +0000

    Fix regression for libstdc++-v3/testsuite/29_atomics/atomic/62259.cc as...
    
    Fix regression for libstdc++-v3/testsuite/29_atomics/atomic/62259.cc
    as reported at <http://gcc.gnu.org/ml/gcc-patches/2015-04/msg00543.html>.
    
            * testsuite/29_atomics/atomic/62259.cc: Assert atomic
            alignment is larger-equal, not equal, to default alignment.
    
    From-SVN: r222071

commit b17fb8813c4ba6a4ac6f5c564b10eee7aa02b8c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 14 00:16:11 2015 +0000

    Daily bump.
    
    From-SVN: r222069

commit 6de2b370af015b780b6817d2f077238231fc10f2
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Apr 13 21:14:34 2015 +0100

    gcc.pot: Regenerate.
    
    gcc/po:
            * gcc.pot: Regenerate.
    
    libcpp/po:
            * cpplib.pot: Regenerate.
    
    From-SVN: r222062

commit 5ec4b22910573384e106cd69d1e1657b177d21e6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Apr 13 20:25:53 2015 +0100

    re PR libstdc++/65754 (missing exports for fstream constructors)
    
            PR libstdc++/65754
            * config/abi/pre/gnu.ver: Export base object constructors for
            fstreams.
            * config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/ia64-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/i386-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/i486-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/m68k-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/powerpc-linux-gnu/baseline_symbols.txt: Update
            * config/abi/post/powerpc64-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/powerpc64-linux-gnu/32/baseline_symbols.txt: Update.
            * config/abi/post/s390x-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/s390-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/solaris2.10/baseline_symbols.txt: Regenerate.
            * config/abi/post/solaris2.10/amd64/baseline_symbols.txt: Likewise.
            * config/abi/post/solaris2.10/sparcv9/baseline_symbols.txt: Likewise.
            * config/abi/post/x86_64-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.
            * config/abi/post/x86_64-linux-gnu/x32/baseline_symbols.txt: Update.
            * testsuite/27_io/basic_fstream/cons/base.cc: New.
    
    From-SVN: r222060

commit 500637876574f53004f8afff9c5d6ca556c75b71
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Apr 13 18:21:48 2015 +0100

    evolution.xml: Document changes since 4.5 release.
    
            * doc/xml/manual/evolution.xml: Document changes since 4.5 release.
            * doc/html/*: Regenerate.
    
    From-SVN: r222057

commit a2cda87a190b30b742f909a3c2c042ce1d80eabf
Author: Jan Hubicka <hubicka@ucw.cz>
Date:   Mon Apr 13 14:58:36 2015 +0200

    contrib.texi (Contributors): Add Martin Jambor and Michael Matz.
    
            * doc/contrib.texi (Contributors): Add Martin Jambor and
            Michael Matz.
    
    Co-Authored-By: Gerald Pfeifer <gerald@pfeifer.com>
    
    From-SVN: r222050

commit 4d04f2568c070933a486a71e34f535647ffb603b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 13 09:11:30 2015 +0000

    Daily bump.
    
    From-SVN: r222045

commit 096f5cf600753172ca6617de427e0f1751273841
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sun Apr 12 21:49:48 2015 +0100

    * fi.po, sv.po: Update.
    
    From-SVN: r222032

commit 46ba7e1793d884a85f449ad14c3ce7036a82f2fe
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sun Apr 12 21:53:10 2015 +0200

    BASE-VER: Set to 5.0.1.
    
            * BASE-VER: Set to 5.0.1.
            * DEV-PHASE: Set to prerelease.
    
    From-SVN: r222027
