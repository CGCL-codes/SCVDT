commit b2d961e7342b5ba4e57adfa81cb189b738d10901
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Thu Nov 14 07:40:39 2019 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r278197

commit 320cafa844c4eb9c23396727682c306cdaeb628c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 14 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r278186

commit 7fd21be7ff64fd656b0b9012e009c10a178d811b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 13 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r278108

commit c3a75c146f230f34573dbf5c9e4f636fc7d5f6d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 12 00:16:24 2019 +0000

    Daily bump.
    
    From-SVN: r278071

commit 026f0799123d46d4b93edf8dc95a0fbf6470fd16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 11 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r278029

commit b49af8cd7021fe3f5a62a19e8dd01b2e2b3f7734
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 10 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r278010

commit 1242ed1f83e13bd504129cd5c4080b696f737d19
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 9 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r277996

commit 9fed5e3d2093e61a6f9ffdb3964cbaab4277b686
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 8 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277937

commit 3b4cd0a722e5cf5b246bbaea57cc597a96587f27
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 7 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r277896

commit 15667d051c2d3fc5cfb842de2f7bf0803ee06549
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277867

commit 0890b8389d7cfa34a6ed4797e199d53eee66100c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 5 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r277807

commit fae9fcba7544ba2c1b35c84a2c63d20d45da200d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 4 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277761

commit 649db6227bfefd97dc85b3bfa1817ebe0a34cb90
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Nov 3 08:23:33 2019 +0000

    [Darwin, testsuite] Fix PR 79274
    
    The solution for initialising global TLS variables does not apply
    to platforms using emulated TLS.  XFAIL the test for this on Darwin.
    
    2019-11-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR c++/79274
            * g++.dg/tls/pr77285-2.C: XFAIL test for Darwin.
    
    From-SVN: r277751

commit 558877bef9e342d5919feaef1719a396e133e96d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 3 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277746

commit 334a72eb12188be7c485fde0e3b314fb00e7ae36
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sat Nov 2 12:27:29 2019 +0000

    [testsuite] Require alias support for pr90760.
    
    This test fails on Darwin because it requires alias support, so
    add the relevant dg-requires.
    
    gcc/testsuite/
    
    2019-11-02  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/pr90760.c: Require alias support.
    
    From-SVN: r277745

commit ee7037c0a499e04d726f05c27cc4b7a790407ee6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 2 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277737

commit ff76f68fa593426777dcff6e6b7943a09eebb2c2
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:52:21 2019 +0000

    [Darwin, machopic] Back out part of PR71767 fix.
    
    We applied a conservative, but fairly large, hammer to fix PR71767.
    However, ideally, we want minimise the number of symbols visible to
    ld64 and to match the cases emitted by clang (since that's what ld64
    is expecting). Now we've improved the handling of indirections, we
    can make the indirection symbols local when they are in the regular
    non-lazy symbol pointers section. We will continue to make any
    indirections in the data section visible (since right now we have no
    way to track if a given symbol follows a weak global).
    This change makes no difference to handling of labels for constants
    (to be revised in a future patch).
    
    There's a mechanical change to a number of tests (allowing 'l' or 'L'
    as the indirection symbol prefix).
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_indirection_name): Rework the
            function to emit linker-visible symbols only for indirections
            in the data section.  Clean up the code and update comments.
    
    gcc/testsuite/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-10-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/indirect-thunk-1.c: Allow 'l' or 'L' in
            indirection label prefix, for Darwin.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/pr32219-2.c: Likewise.
            * gcc.target/i386/pr32219-3.c: Likewise.
            * gcc.target/i386/pr32219-4.c: Likewise.
            * gcc.target/i386/pr32219-7.c: Likewise.
            * gcc.target/i386/pr32219-8.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
    
    From-SVN: r277727

commit 87b14bf0d2f961862858a2e3966c45a503957434
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:47:48 2019 +0000

    [Darwin] Fix Objective-C NeXT ABI version check diagnostics.
    
    This fixes build errors when used with newer GCC and corrects a mistake
    in the checking of ABI versions.
    
    276768 We were missing a check for the case that user's ABI was > 2 and the
    codegen was for 64 bit.
    
    276635 Fix some format-related build warnings.
    
    This fixes two error messages to avoid punctuation and contracted
    negations.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_override_options): Make the check for
            Objective-C ABI version more specific for 64bit code.
    
            Backport from mainline
            2019-10-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_override_options): Adjust objective-c
            ABI version error messages to avoid punctuation and contracted
            negations.
    
    From-SVN: r277726

commit 1830e27db910cb79110b6fc09521586af3482594
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:44:32 2019 +0000

    [Darwin] Some TLC for older Darwin versions.
    
    The library handling and some of the options for creating the crts for
    the older PPC Darwin versions had bit-rotted somewhat. This adjusts the
    build criteria for the crts to avoid newer ld64 versions warnings about
    mismatches in build and object versions.
    
    Added to some of the comments that it's documented why the specs are as
    they are.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-07-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.h (REAL_LIBGCC_SPEC): Adjust for earlier Darwin.
            (STARTFILE_SPEC): Split crt3 into a separate spec.
            (DARWIN_EXTRA_SPECS): Add crt2 and crt3 spec.
            (DARWIN_CRT2_SPEC): New.
            (DARWIN_CRT3_SPEC): New.
            (MIN_LD64_OMIT_STUBS): Revise to 62.1.
            * config/rs6000/darwin.h (DARWIN_CRT2_SPEC): Revise conditions.
            (DARWIN_CRT3_SPEC): New.
    
    libgcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-07-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config.host (powerpc-*-darwin*,powerpc64-*-darwin*): Revise crt
            list.
            * config/rs6000/t-darwin: Build crt3_2 for older systems.  Revise
            mmacosx-version-min for crts to run across all system versions.
            * config/rs6000/t-darwin64 (LIB2ADD): Remove.
            * config/t-darwin: Revise mmacosx-version-min for crts to run across
            system versions >= 10.4.
    
    From-SVN: r277725

commit f8d58fbe5700a95d8a0738b620f6f3f1ba9dab51
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:38:37 2019 +0000

    [Darwin, PPC] Move the out of line register save/restore to an endfile.
    
    272660
    We have been including this in libgcc, which means that we have to append
    -lgcc even when using shared libgcc. In preparation for revision of libgcc
    split this into an endfile.
    
    272759 Correct whitespace in specs.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-27  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h (ENDFILE_SPEC): Correct whitespace in the
            spec.
    
            Backport from mainline
            2019-06-25  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h (ENDFILE_SPEC): New.
    
    libgcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-25  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config.host: Add libef_ppc.a to the extra files for powerpc-darwin.
            * config/rs6000/t-darwin: (PPC_ENDFILE_SRC, PPC_ENDFILE_OBJS): New.
            Build objects for the out of line save/restore register functions
            so that they can be used for any supported Darwin version.
            * config/t-darwin: Default the build Darwin version to Darwin8
            (MacOS 10.4).
    
    From-SVN: r277724

commit 092a2f2a6434aaaefe884e1196ebc289da2b5503
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:33:39 2019 +0000

    [Darwin] The need for FDE symbols is dependent on linker used, not OS rev.
    
    For very old toolchains, the compiler generated extra symbols that mark the
    start of each FDE. We no longer need this (since xcode 3 era) - so, for
    compatibility with newer linkers, omit this when it is not required.
    
    Since we have detection of the linker version, we can use that directly to
    determine if support is needed.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_emit_unwind_label): New default to false.
            (darwin_override_options): Set darwin_emit_unwind_label as needed.
    
    From-SVN: r277722

commit 371307760a21d47d561caeeb86161e5307ca2ebe
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:30:26 2019 +0000

    [Darwin] The need for picsym stubs is dependent on linker used, not OS rev.
    
    272356 For very old toolchains, the compiler generated pic symbol stubs that
    provide the necessary indirections. We no longer need this (since xcode
    3 era) and it's more efficient for the linker to make one stub when it
    knows a symbol is needed that for us to emit them speculatively in every
    object.
    
    Our current codegen is making the assumption that a specific OS version
    uses a specific linker version - and therefore the presence of support
    could be based on the target OS rev. Of course, that's way too simplistic
    (most likely bogus for cross-toolchains) and we want to make things explict.
    
    Since we have detection of the linker version, we can use that directly
    (A config test for support for stub-less linking might also be feasible
    but much more involved).
    
    Finally, should the user wish to generate code that caters for export to
    use in an environment with an older toolchain, the generation of stubs
    can be forced from the command line.
    
    In addition to the points above, branch islanding and a long branch opt
    for PowerPC Darwin has become conflated with the emission of these stubs.
    
    274379 There is no need to distinguish PIC/non-PIC symbol stubs.
    
    So we can use a single flag for both.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-08-13 Iain Sandoe <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_indirect_call_target): Rename symbol stub
            flag.
            (darwin_override_options): Likewise.
            * config/darwin.h: Likewise.
            * config/darwin.opt: Likewise.
            * config/i386/i386.c (output_pic_addr_const): Likewise.
            * config/rs6000/darwin.h: Likewise.
            * config/rs6000/rs6000.c (rs6000_call_darwin_1): Likewise.
            * config/i386/darwin.h (TARGET_MACHO_PICSYM_STUBS): Rename to ...
            ... this TARGET_MACHO_SYMBOL_STUBS.
            (FUNCTION_PROFILER):Likewise.
            * config/i386/i386.h: Likewise.
    
            Backport from mainline
            2019-06-16  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_indirect_call_target): Use renamed
            darwin_picsymbol_stubs to decide on output.
            (darwin_override_options): Handle darwin_picsymbol_stubs.
            * config/darwin.h (MIN_LD64_OMIT_STUBS): New.
            (LD64_VERSION): Revise default.
            * config/darwin.opt: (mpic-symbol-stubs): New option.
            (darwin_picsymbol_stubs): New variable.
            * config/i386/darwin.h (TARGET_MACHO_BRANCH_ISLANDS):
            rename to TARGET_MACHO_PICSYM_STUBS.
            * config/i386/i386.c (output_pic_addr_const): Likewise.
            * config/i386/i386.h Likewise.
            * config/rs6000/darwin.h: Likewise.
            * config/rs6000/rs6000.c (rs6000_call_darwin_1): Use renamed
            darwin_picsymbol_stubs.
    
    gcc/testsuite/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-08-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * obj-c++.dg/stubify-1.mm: Rename symbol stub option.
            * obj-c++.dg/stubify-2.mm: Likewise.
            * objc.dg/stubify-1.m: Likewise.
            * objc.dg/stubify-2.m: Likewise.
    
    From-SVN: r277721

commit f8689f6bdaaede220fd2a6be9226d3e7a2b20622
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:20:47 2019 +0000

    [Darwin, PPC] Install the same headers as other sub-targets.
    
    This is primarily in order to improve testsuite coverage, we might elect
    to prune the list at some point.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config.gcc (powerpc-*-darwin*, powerpc64-*-darwin*): Remove
            override on extra_headers.
    
    From-SVN: r277720

commit 8cb850187df47bc81c0d2a9057eb7da91d0a638a
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:11:12 2019 +0000

    [Darwin, PPC] Allow the user to override the use of hard float in kexts.
    
    The default for the kernel is soft-float, however a user writing a kernel
    extension might want to make use of hard float. This aligns GCC with the
    system tools and makes ' -mkernel -mhard-float ' work as expected.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-27  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/rs6000.c (darwin_rs6000_override_options): Honour
            user-specified float mode choice for kernel mode code.
    
    From-SVN: r277718

commit bf5d24ca9f9183338e75a8e55ab7d8e10b69346f
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:05:17 2019 +0000

    [Darwin, PPC] Handle GCC target pragma.
    
    For compatibility with other members of the port.
    Note, that we do not handle the longcall attribute, since longcall
    is not required/used on current Darwin.
    
    gcc/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h: Handle GCC target pragma.
    
    From-SVN: r277717

commit 10f6583a9d3e785f795170d69e1a1d8451b24d26
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Nov 1 20:01:52 2019 +0000

    [Darwin, PPC, testsuite] Exclude darwin from VSX, power8 and power9.
    
    If we build Darwin with a modern assembler, then it might well
    recognise insns that cannot be used on current Darwin systems.
    
    The patch augments the tests for feature support for VSX,
    power8 and power9 to exclude Darwin even if the assembler can
    handle the instructions.
    
    gcc/testsuite/
    
    2019-11-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            * lib/target-supports.exp
            (check_effective_target_powerpc_p8vector_ok): No support for Darwin.
            (check_effective_target_powerpc_p9vector_ok): Likewise.
            (check_effective_target_powerpc_float128_sw_ok): Likewise.
            (check_effective_target_powerpc_float128_hw_ok): Likewise.
            (check_effective_target_powerpc_vsx_ok): Likewise.
            * gcc.target/powerpc/bfp/bfp.exp: Don't try to run this for Darwin.
            * gcc.target/powerpc/dfp/dfp.exp: Likewise.
    
    From-SVN: r277716

commit 8ae6abb8685c0bb6a21c773b9e0a37e1c2421855
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 1 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277700

commit 88a7275c30059c275180671af14b40cd45842434
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 31 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277650

commit 4a1c247ef4ab9a08258c6a428df38d144dc08baa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 30 00:16:36 2019 +0000

    Daily bump.
    
    From-SVN: r277596

commit 9b6d95b967ca9dd7d9093c16c34881214af4db26
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 20:20:23 2019 +0000

    [Darwin, PPC] Fix PR 65342.
    
    The current Darwin load/store lo_sum patterns have neither predicate nor
    constraint. This means that most parts of the backend, which rely on
    recog() to validate the rtx, can produce invalid combinations/selections.
    
    For 32bit cases this isn't a problem since we can load/store to unaligned
    addresses using D-mode insns.
    
    Conversely, for 64bit instructions that use DS mode, this can manifest as
    assemble errors (for an assembler that checks the LO14 relocations), or as
    crashes caused by wrong offsets (or worse, wrong content for the two LSBs).
    
    What we want to check for Y on Darwin is:
      - that the alignment of the Symbols' target is sufficient for DS mode
      - that the offset is suitable for DS mode.
        (while looking through the Mach-O PIC unspecs).
    
    So, the patch removes the Darwin-specific lo_sum patterns (we begin using
    the movdi_internal64 patterns). We also we need to extend the handling of the
    mem_operand_gpr constraint to allow looking through Mach-O PIC UNSPECs in
    the lo_sum cases.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-17  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/65342
            * config/rs6000/darwin.md (movdi_low, movsi_low_st): Delete.
            (movdi_low_st): Delete.
            * config/rs6000/rs6000.c
            (darwin_rs6000_legitimate_lo_sum_const_p): New.
            (mem_operand_gpr): Validate Mach-O LO_SUM cases separately.
            * config/rs6000/rs6000.md (movsi_low): Delete.
    
    From-SVN: r277590

commit 2e58cf13995d40ab6160f669cbbf28e7297f4464
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 20:16:28 2019 +0000

    [Darwin, machopic] Fix for 67183
    
    When we're using the LLVM-based assembler (the default on modern Darwin)
    the ordering of stubs and non-lazy symbol pointers is important.
    
    Interleaving the output (current GCC behaviour) leads to crashes which
    prevents us from building code with symbol stubs.
    
    To resolve this, we order the output of stubs and symbol indirections:
    
    1. Any indirections in the data section
    2. Symbol stubs.
    3. Non-lazy symbol pointers.
    
    At present, we still emit LTO sections after these.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/67183
            * config/darwin.c (machopic_indirection): New field to flag
            non-lazy-symbol-pointers in the data section.
            (machopic_indirection_name): Compute if an indirection should
            appear in the data section.
            (machopic_output_data_section_indirection): New callback split
            from machopic_output_indirection.
            (machopic_output_stub_indirection): Likewise.
            (machopic_output_indirection): Retain the code for non-lazy
            symbol pointers in their regular section.
            (machopic_finish): Use the new callbacks to order the indirection
            output.
    
    From-SVN: r277587

commit 67fcb83c9d7c779d3ccec0e4708834cf97a6794e
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 20:13:06 2019 +0000

    [Darwin, machopic] Preparatory patches.
    
    This is a combined set of 5 patches that allows us to fix PRs 65342
    and 67183.
    
    276924 Make machopic_finish() static.
    
    276767 Set a SYMBOL flag for indirections.
    
    We are able to treat these specially where needed in legitimate address
    tests (specifically, they are guaranteed to be pointer-aligned).
    
    276708 Compute and cache indirection rules.
    
    This caches a check for the requirement to indirect a symbol in the Darwin
    ABI, and uses it where needed. We also ensure that we place the indirection
    pointers into the non-lazy symbol pointers section. Other placements have
    occurred with various platform toolchains - but these seem to have been
    unintentional so we match current platform toolchains.
    
    276675 Consider visibility in indirections.
    
    For weak, hidden vars the indirection should just be as normal, that
    is that the indirections for such symbols should appear in the non-lazy
    symbol pointers table, not in the .data section.
    
    276674 Initial tidy of Mach-O symbol handling.
    
    We want to improve the detection and caching of symbol-properties
    so that (a) we can make the compiler's output match the platform
    norms (b) we can improve efficiency by checking flags instead of
    inspecting strings. (c) The fix for PR71767 was a largish hammer
    and we want to reduce the number of symbols that are made linker-
    visible.
    
    This first patch is largely typographical changes with no functional
    difference intended:
    
    - Tries to ensure that there's no overlap between the symbols used in
    the Mach-O case and those declared in the i386 or rs6000 port trees.
    
    - Some improvement to comments.
    
    - Makes the naming of the symbol flags consistent with other uses.
    
    - Provides a predicate macro for each use.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin-protos.h (machopic_finish): Delete.
            * config/darwin.c (machopic_finish): Make static.
    
            Backport from mainline
            2019-10-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_indirect_data_reference): Set flag to
            indicate that the new symbol is an indirection.
            (machopic_indirect_call_target): Likewise.
            * config/darwin.h (MACHO_SYMBOL_FLAG_INDIRECTION): New.
            (MACHO_SYMBOL_INDIRECTION_P): New.
            (MACHO_SYMBOL_FLAG_STATIC): Adjust bit number.
    
            Backport from mainline
            2019-10-08  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_indirect_data_reference): Check for
            required indirections before making direct access to defined
            values.
            (machopic_output_indirection): Place the indirected pointes for
            required indirections into the non-lazy symbol pointers section.
            (darwin_encode_section_info):
            * config/darwin.h (MACHO_SYMBOL_FLAG_MUST_INDIRECT): New.
            (MACHO_SYMBOL_MUST_INDIRECT_P): New.
    
            Backport from mainline
            2019-10-07  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_output_indirection): Don't put
            hidden symbol indirections into the .data section, use the
            non-lazy symbol pointers section as normal.
            (darwin_encode_section_info): Record if a symbol is hidden.
            * config/darwin.h (MACHO_SYMBOL_FLAG_HIDDEN_VIS): New.
            (MACHO_SYMBOL_HIDDEN_VIS_P): New.
    
            Backport from mainline
            2019-10-07  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_symbol_defined_p): Use symbol flag
            predicates instead of accessing bits directly.
            (machopic_indirect_call_target): Likewise.
            (machopic_output_indirection): Likewise.
            (darwin_encode_section_info): Improve description.  Use renamed
            symbol flags.  Use predicate macros for variables and functions.
            * config/darwin.h:
            Rename MACHO_SYMBOL_VARIABLE to MACHO_SYMBOL_FLAG_VARIABLE.
            Rename MACHO_SYMBOL_DEFINED to MACHO_SYMBOL_FLAG_DEFINED.
            Rename MACHO_SYMBOL_STATIC to MACHO_SYMBOL_FLAG_STATIC.
            (MACHO_SYMBOL_VARIABLE_P): New.
            (MACHO_SYMBOL_DEFINED_P):New.
            (MACHO_SYMBOL_STATIC_P): New.
            * config/i386/darwin.h (MACHO_SYMBOL_FLAG_VARIABLE): Delete.
            (SYMBOL_FLAG_SUBT_DEP): New.
            * config/rs6000/darwin.h (SYMBOL_FLAG_SUBT_DEP): New.
    
    From-SVN: r277586

commit 5e0adba026cf8a28f2368a994cec60a824de89ff
Author: Iain Sandoe <iains@gcc.gnu.org>
Date:   Tue Oct 29 20:09:40 2019 +0000

    [Darwin, testsuite] Skip pr72802.c.
    
    As fallout from 19315, which is not fixed on this branch, the presence
    of an unused static variable causes a 'promotion' of that to extern.
    This produces wrong code on Darwin when Mach-O PIC is in use (m32 X86
    and all PPC). So skip this unconditionally, as noted in the PR trail,
    the usefulness of the test is questionable anyway.
    
    gcc/testsuite/
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.c-torture/compile/pr72802.c: Skip for Darwin.
    
    From-SVN: r277585

commit 0f700e89f7b95faba1dffc5b836f58c0a97e3149
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 20:05:05 2019 +0000

    [Darwin] Amend section for constants with relocations.
    
    Darwin's linker doesn't like text section relocations (they require special
    enabling). The Fortran FE, at least, seems to generate cases where the
    initialiser for a pointer constant can need a relocation. We can handle
    this by special-casing SECCAT_RODATA when the relocation is present by
    placing the constant in the .const_data section.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/59888
            * config/darwin.c (darwin_rodata_section): Add relocation flag,
            choose const_data section for constants with relocations.
            (machopic_select_section): Pass relocation flag to
            darwin_rodata_section ().
    
    From-SVN: r277584

commit 35cd1262dcfb99006bb01b0f481487ccd6dfe437
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 20:01:59 2019 +0000

    [Darwin] Update machopic_legitimize_pic_address.
    
    Some changes were missed here in the transition to LRA. The Darwin
    archs are all using LRA now, testing for reload is not correct.
    
    2019-10-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-09-21  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (machopic_legitimize_pic_address): Check
            for lra, rather than reload.
    
    From-SVN: r277583

commit 2928367a0a90c075f3b24d3fd31fd54139f334f1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 19:52:20 2019 +0000

    [Darwin] Pick up SDKROOT as the sysroot fallback.
    
    For compatibility with xcrun and the behaviour of the clang driver, make use
    of the setting of the SDKROOT environment variable when it is available.
    This applies to both finding headers and libraries (i.e. it is also passed to
    ld64).
    
    Priority:
    1. User's command-line specified --sysroot= or -isysroot.
    2. The SDKROOT variable when set, and validated.
    3. Any sysroot provided by --with-sysroot= configuration parameter.
    
    SDKROOT is checked thus:
    1. Presence.
    2. That it starts with / (i.e. 'absolute').
    3. That it is not / only (since that's the default).
    4. That it is readable by the process executing the driver.
    
    This is pretty much the same rule set as used by the clang driver.
    
    NOTE: (3) might turn out to be overly restrictive in the case that we
    have configured with --with-sysroot= and then we want to run on a system
    with an installation of the headers/libraries in /. We can revisit this
    if that turns out to be an important use-case.
    
    So one can do:
    
    xcrun --sdk macosx /path/to/gcc ....
    
    and that provides the SDK path as the sysroot to GCC as expected.
    
    CAVEAT: An unfortunate effect of the fact that gcc (and g++) are
    executables in the Xcode installation, which are found ahead of any such
    named in the $PATH
    
    PATH=/path/to/gcc/install:$PATH
    xcrun --sdk macosx gcc ....
    
    does *not* work, instead that executes the clang from the xcode/commmand
    line tools installation.
    
    PATH=/path/to/gcc/install:$PATH
    xcrun --sdk macosx x64_64-apple-darwinXX-gcc ...
    
    does work as expected, however.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-10-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/87243
            * config/darwin-driver.c (maybe_get_sysroot_from_sdkroot): New.
            (darwin_driver_init): Use the sysroot provided by SDKROOT when that
            is available and the user has not set one on the command line.
    
    From-SVN: r277582

commit 3260d09d1e4022fd9c63e02ca974563db8d8ec4b
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Oct 29 19:46:05 2019 +0000

    [Darwin, specs] Fix driver handling of PIE options.
    
    pie, no-pie and rdynamic are driver options, we can process them in the
    relevant place and drop them once dealt with. There's no need to generate
    a new header to process the no_compact_unwind which is applied on the
    basis of the target system.
    
    Support for the -pie, -no_pie and -no_compact_unwind options should ideally
    be checked at configure time, however the status quo is to assert that linkers
    capable of targeting the relevant systems support these options (i.e. we trust
    that the user doesn't attempt to configure inappropriately).
    
    TODO: check the availability of the linker opts in configure rather than
    trusting to the user.
    
    This will fix the fail of pie-7.c, which is a result of failing to handle the
    no-pie driver option.
    
    2019-10-29  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-07-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.h (DRIVER_SELF_SPECS): Remove the linker cases.
            (RDYNAMIC): Rename to, DARWIN_RDYNAMIC.
            (DARWIN_PIE_SPEC, DARWIN_NOPIE_SPEC): Adjust to remove the Xlinker
            clauses.
            (LINK_COMMAND_SPEC_A): Add DARWIN_RDYNAMIC, DARWIN_PIE_SPEC and
            DARWIN_NOPIE_SPEC.
    
            Backport from mainline
            2019-06-19  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.h (DRIVER_SELF_SPECS): Add RDYNAMIC, DARWIN_PIE_SPEC
            and DARWIN_NOPIE_SPEC.
            (RDYNAMIC): New, modified from DARWIN_EXPORT_DYNAMIC.
            (DARWIN_PIE_SPEC): Collate from darwin.h and darwin9.h.
            (DARWIN_NOPIE_SPEC): Collate from darwin10.h.
            (DARWIN_NOCOMPACT_UNWIND): New from darwin10.h
            (DARWIN_EXPORT_DYNAMIC): Delete.
            * config/darwin10.h (LINK_GCC_C_SEQUENCE_SPEC): Move no_compact_unwind
            and pie options processing to  darwin.h.
            * config/darwin9.h (DARWIN_PIE_SPEC): Move pie processing to darwin.h
    
    From-SVN: r277581

commit c3864e6639019a8648da7c17a1f89c7ece152389
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 29 00:16:14 2019 +0000

    Daily bump.
    
    From-SVN: r277547

commit cb57e36d13fe2c4f5ea7360dedd552c68f42c469
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 28 00:16:15 2019 +0000

    Daily bump.
    
    From-SVN: r277496

commit 07ae342ac7317a671f919d934c3273b318a2bdb4
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Oct 27 16:21:36 2019 +0000

    backport: re PR fortran/86248 (LEN_TRIM in specification expression causes link failure)
    
    2019-10-27  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/86248
            * resolve.c (flag_fn_result_spec): Correct a typo before the
            function declaration.
            * trans-decl.c (gfc_sym_identifier): Boost the length of 'name'
            to allow for all variants. Simplify the code by using a pointer
            to the symbol's proc_name and taking the return out of each of
            the conditional branches. Allow symbols with fn_result_spec set
            that do not come from a procedure namespace and have a module
            name to go through the non-fn_result_spec branch.
    
    2019-10-27  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/86248
            * gfortran.dg/char_result_19.f90 : New test.
            * gfortran.dg/char_result_mod_19.f90 : Module for the new test.
    
    From-SVN: r277488

commit 9908023fd2e80216a085701d787d35d5c3d304ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 27 00:16:15 2019 +0000

    Daily bump.
    
    From-SVN: r277477

commit 8c3da58491261f0f1f98970335262f8c8fe20a24
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sat Oct 26 10:43:40 2019 +0000

    [Darwin, PPC] Check for out of range asm values.
    
    There are some cases in which the value for the max skip to a p2align
    directive can be negative. The older assembler (and GAS) just ignores
    these cases but newer tools produce an error. To preserve behaviour,
    we avoid emitting out of range values.
    
    2019-10-26  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h (ASM_OUTPUT_MAX_SKIP_ALIGN):Guard
            against out of range max skip or log values.
    
    From-SVN: r277471

commit e393660afe197450d8d545db653b78e70857c76c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 26 00:16:31 2019 +0000

    Daily bump.
    
    From-SVN: r277465

commit 578f81c42a7f721c382a11b07a3cc70eb980c996
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Fri Oct 25 14:39:06 2019 +0000

    [arm][PR88167] Fix __builtin_return_address returns invalid address
    
    This patch fixes a problem with the thumb1 prologue code where the link
    register could be unconditionally used as a scratch register even if the
    return value was still live at the end of the prologue.
    
    Additionally, the patch improves the code generated when we are not
    using many low call-saved registers to make use of any unused call
    clobbered registers to help with the saving of high registers that
    cannot be pushed directly (quite rare in normal code as the register
    allocator correctly prefers low registers).
    
    2019-05-08  Mihail Ionescu  <mihail.ionescu@arm.com>
                Richard Earnshaw  <rearnsha@arm.com>
    
    gcc:
    
            PR target/88167
            * config/arm/arm.c (thumb1_prologue_unused_call_clobbered_lo_regs): New
            function.
            (thumb1_epilogue_unused_call_clobbered_lo_regs): New function.
            (thumb1_compute_save_core_reg_mask): Don't force a spare work
            register if both the epilogue and prologue can use call-clobbered
            regs.
            (thumb1_unexpanded_epilogue): Use
            thumb1_epilogue_unused_call_clobbered_lo_regs.  Reverse the logic for
            picking temporaries for restoring high regs to match that of the
            prologue where possible.
            (thumb1_expand_prologue): Add any usable call-clobbered low registers to
            the list of work registers.  Detect if the return address is still live
            at the end of the prologue and avoid using it for a work register if so.
            If the return address is not live, add LR to the list of pushable regs
            after the first pass.
    
    gcc/testsuite:
    
            PR target/88167
            * gcc.target/arm/pr88167-1.c: New test.
            * gcc.target/arm/pr88167-2.c: New test.
    
    From-SVN: r277454

commit a8bf7455504148b76a030be9e19400263afb5471
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 25 00:16:49 2019 +0000

    Daily bump.
    
    From-SVN: r277430

commit 474aa6a4fda4d9f3bae339e379987a5a2f565007
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 24 16:31:00 2019 +0100

    PR libstdc++/92143 adjust for OS X aligned_alloc behaviour
    
    OS X 10.15 adds aligned_alloc but it has the same restriction as the AIX
    version, namely that alignments smaller than sizeof(void*) are not
    supported.
    
    Backport from mainline
    2019-10-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/92143
            * libsupc++/new_opa.cc (operator new) [__APPLE__]: Increase alignment
            to at least sizeof(void*).
    
    From-SVN: r277414

commit bd6377aef168a539f6e7ad32e826dedf1ceb1ffd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 24 16:30:57 2019 +0100

    Add makefile target to update HTML files in source tree
    
    Also remove the creation of the html/ext sub-directory, which has been
    unused since revision r245258.
    
    Backport from mainline
    2019-10-08  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/Makefile.am (doc-html-docbook-regenerate): New target.
            (${docbook_outdir}/html): Do not create unused 'html/ext' directory.
            * doc/Makefile.in: Regenerate.
            * doc/xml/manual/documentation_hacking.xml: Document new target.
            * doc/html/*: Regenerate.
    
    From-SVN: r277413

commit 160e1822e4f87f822394be0dd05cb8e7f73293bf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 24 16:30:53 2019 +0100

    Update URL for CUJ article in libstdc++ docs
    
            * doc/xml/manual/allocator.xml: Use archived copy of CUJ article.
    
    From-SVN: r277412

commit dbc92d91baafa38cb2bcd8acc1e00edb96205e02
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 24 16:30:49 2019 +0100

    Update URL for Hoard in libstdc++ docs
    
    Backport from mainline
    2019-05-31  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * doc/xml/manual/allocator.xml: Move hoard.org back to http.
    
    From-SVN: r277411

commit d23b9ce71519880d0dc73dfea464ac288498e3c0
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Oct 24 09:38:56 2019 +0000

    backport: [multiple changes]
    
    2019-10-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-10-17  Richard Biener  <rguenther@suse.de>
    
            PR debug/91887
            * dwarf2out.c (gen_formal_parameter_die): Also try to match
            context_die against a DW_TAG_GNU_formal_parameter_pack parent.
    
            * g++.dg/debug/dwarf2/pr91887.C: New testcase.
    
            2019-09-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/91812
            * tree-ssa-phiprop.c (propagate_with_phi): Do not replace
            volatile loads.
    
            * gcc.dg/torture/pr91812.c: New testcase.
    
    From-SVN: r277370

commit 49734ba5d1e7fca030db5f7516a5bdac0eb3a9fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 24 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r277359

commit 1e2d5f2b2cca43fed86d55c947df90915e541c5c
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed Oct 23 13:17:34 2019 +0000

    re PR tree-optimization/92131 (incorrect assumption that (ao >= 0) is always false)
    
            PR tree-optimization/92131
            * tree-vrp.c (extract_range_from_plus_minus_expr): If the resulting
            range would be symbolic, drop to varying for any explicit overflow
            in the constant part or if neither range is a singleton.
    
    From-SVN: r277331

commit 4fb19443f5b64a41e974518a81a7d4f2949a0b20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 23 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277303

commit 5fe92a1026e8d0ba09b87d1606f5275d8c9ecabf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 22 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277273

commit 6d6d020699d2670827c6b9200e248d0fb5b04678
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277218

commit 52d90355bb3e2f9af3db2fe8af94a958e9c60c68
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 20 00:16:14 2019 +0000

    Daily bump.
    
    From-SVN: r277206

commit 497e004fde46904ae967c3b50d76d3b791233e82
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 19 00:17:15 2019 +0000

    Daily bump.
    
    From-SVN: r277196

commit b83b9ffd0bda2097fca4344185ce12961d3aefd9
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 18 19:26:22 2019 +0000

    re PR fortran/69455 ([F08] Assembler error(s) when using intrinsic modules in two BLOCK)
    
    2019-10-18  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/69455
            * trans-decl.c (generate_local_decl): Avoid misconstructed
            intrinsic modules in a BLOCK construct.
    
    2019-10-18  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/69455
            * gfortran.dg/pr69455_1.f90: New test.
            * gfortran.dg/pr69455_2.f90: Ditto.
    
    From-SVN: r277193

commit ee31b9755ee6e291de9f99797798be5e69ee2647
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Fri Oct 18 09:16:16 2019 +0000

    backport: re PR target/86040 ([avr]: RAMPZ is not always cleared after loading __flashN data)
    
            Backport from 2019-10-18 trunk r277143.
            PR target/86040
            * config/avr/avr.c (avr_out_lpm): Do not shortcut-return.
    
    From-SVN: r277149

commit d0b5c7fcc315eb5e1e63a6c72db14d3b01b7eaf6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 18 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277137

commit 0129c64c26303c87add1fdf2c7fe9440282f258d
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Oct 17 21:52:55 2019 +0200

    backport: re PR rtl-optimization/89721 (__builtin_mffs sometimes optimized away)
    
            Backport from trunk
            2019-03-15  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/89721
            * lra-constraints (invariant_p): Return false if side_effects_p holds.
    
    From-SVN: r277132

commit f66da75fa4dfcf312a2608d9ad121d17ca36ab8b
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Thu Oct 17 16:48:39 2019 +0000

    [arm]  PR target/89400 fix thumb1 unaligned access expansion
    
    Armv6 has support for unaligned accesses to memory.  However, the
    thumb1 code patterns were trying to use the 32-bit code constraints.
    One failure mode from this was that the patterns are designed to be
    compatible with conditional execution and this was then causing an
    assert in the compiler.
    
    The unaligned_loadhis pattern is only used for expanding extv, which
    in turn is only enabled for systems supporting thumb2.  Given that
    there is no simple expansion for a thumb1 sign-extending load (the
    instruction has no immediate offset form and requires two registers in
    the address) it seems simpler to just disable this for thumb1.
    
    Fixed thusly:
    
            Backport from trunk:
            2019-05-03  Richard Earnshaw  <rearnsha@arm.com>
    
            PR target/89400
            * config/arm/arm.md (unaligned_loadsi): Add variant for thumb1.
            Restrict 'all' variant to 32-bit configurations.
            (unaligned_loadhiu): Likewise.
            (unaligned_storehi): Likewise.
            (unaligned_storesi): Likewise.
            (unaligned_loadhis): Disable when compiling for thumb1.
    
    From-SVN: r277125

commit 41f9f8f42085a334db5bc45e1970dd679353ad5e
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Thu Oct 17 15:35:28 2019 +0000

    backport: re PR testsuite/92093 (New test case gcc.target/powerpc/pr91275.c from r276410 fails on BE)
    
    2019-10-17  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2019-10-15  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR target/92093
            * gcc.target/powerpc/pr91275.c: Fix type and endian issues.
    
    From-SVN: r277119

commit bbc94370be58448de3c0691d48d7453a12484ff4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 17 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r277085

commit 97f82a5f9a04e7c2c6194f1bf6ff1fb27dd8d84c
Author: Peter Bergner <bergner@linux.ibm.com>
Date:   Wed Oct 16 15:19:46 2019 +0000

    backport: config.gcc: Move -L usage from LINK_OS_EXTRA_SPEC32 and LINK_OS_EXTRA_SPEC64 to...
    
            Backport from mainline
            2019-10-08  Tulio Magno Quites Machado Filho  <tuliom@linux.ibm.com>
    
            * config.gcc: Move -L usage from LINK_OS_EXTRA_SPEC32 and
            LINK_OS_EXTRA_SPEC64 to MD_STARTFILE_PREFIX and
            MD_STARTFILE_PREFIX_1 when using --with-advance-toolchain.
    
    From-SVN: r277072

commit ceff5fe69d5cbae75bd32ca5dfc44a00a04c00ad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 16 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r277030

commit 0b3cd58a997a393443d3a08c40fa31b5f21eb5cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 15 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276979

commit b9f158e4628c9322401f1349efcc0b7aa86196ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 14 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276944

commit a7f4a4d8f49c45eadb3fcc329c8dd3a789e4447d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 13 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r276930

commit e926bf7c59f115640abe27d137cb590042aadfe5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Oct 12 14:51:26 2019 +0000

    re PR ada/91995 (gnat miscompilation and bootstrap failure on m68k-linux)
    
            PR ada/91995
            * sem_util.ads (Defining_Entity): Remove 2nd and 3th parameters.
            * sem_util.adb (Defining_Entity): Remove 2nd and 3th parameters,
            and adjust accordingly.
    
    From-SVN: r276919

commit 2c828253a916f9c2e4079344ac126f450c46afb7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276909

commit 438d3b12fe595699b54dfb165a8d458ed1fe0f95
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Fri Oct 11 11:12:28 2019 +0000

    backport: re PR target/88630 (Incorrect float negating together with convertion to int on ST-40)
    
    gcc/
            Backport from mainline
            2019-10-10  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/88630
            * config/sh/sh.h (TARGET_FPU_SH4_300): New macro.
            * config/sh/sh.c (sh_option_override): Enable fsca and fsrra insns
            also for TARGET_FPU_SH4_300.
            (sh_emit_mode_set): Check for TARGET_FPU_SH4_300 instead of
            TARGET_SH4_300.
            * config/sh/sh.md (toggle_pr): Add TARGET_FPU_SH4_300 condition.
            (negsf2): Expand to either negsf2_fpscr or negsf2_no_fpscr.
            (*negsf2_i): Split into ...
            (negsf2_fpscr, negsf2_no_fpscr): ... these new patterns.
            (abssf2): Expand to either abssf2_fpsc or abssf2_no_fpsc.
            (**abssf2_i): Split into ...
            (abssf2_fpscr, abssf2_no_fpscr): ... these new patterns.
            (negdf2): Expand to either negdf2_fpscr or negdf2_no_fpscr.
            (*negdf2_i): Split into ...
            (negdf2_fpscr, negdf2_no_fpscr): ... these new patterns.
            (absdf2): Expand to either absdf2_fpscr or absdf2_no_fpsc.
            (**abssf2_i): Split into ...
            (absdf2_fpscr, absdf2_no_fpscr): ... these new patterns.
    
    From-SVN: r276877

commit a49f79b7a949aa50cd97eb96b5eb4339c27288a8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Oct 11 08:57:58 2019 +0000

    decl.c (annotate_value): Really test the sign of the value when deciding to build a NEGATE_EXPR.
    
            * gcc-interface/decl.c (annotate_value) <INTEGER_CST>: Really test the
            sign of the value when deciding to build a NEGATE_EXPR.
            <PLUS_EXPR>: Remove redundant line.
            <BIT_AND_EXPR>: Do the negation here.
    
    From-SVN: r276869

commit f439d7065fc072d5c0823c3ea4641159e01fed98
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 11 00:16:27 2019 +0000

    Daily bump.
    
    From-SVN: r276855

commit 6c7cec74cefde869ce9368f1041227bb768f3a98
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 10 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r276783

commit 6a438c3ef84ff61e0458c2cd801de2ef4ef6a188
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 9 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r276747

commit 4b22f6ac995a7d70af215113f4ef445c1ca85b12
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 8 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r276682

commit 2cd5a89bc4820a66d6acb164a572587a7a47deca
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Mon Oct 7 20:50:05 2019 +0000

    backport: re PR target/91275 (__builtin_crypto_vpmsumd gives different results -O[123] vs -O0)
    
    [gcc]
    
    2019-10-07  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2019-10-01  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR target/91275
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Don't swap
            vpmsumd.
    
    [gcc/testsuite]
    
    2019-10-07  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2019-10-01  Bill Schmidt  <wschmdit@linux.ibm.com>
    
            PR target/91275
            * gcc.target/powerpc/pr91275.c: New.
    
    From-SVN: r276678

commit 9e8661ee99e9f35164d23c918fbbb02ef3743fd1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 7 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276641

commit eea83c109d6dcae9810d28c1c1ee8424d422f47e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 6 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r276631

commit 73fe84e2c6668d40ebc00ccc81e19864a060c27e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 5 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r276615

commit 9787d36dc6f5310f582cdc603cae8c1d1e8eb1fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 4 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276557

commit e7697394ae734f6e52c5e88b03d223b2690c5299
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 3 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r276499

commit a6146ccaedd6c693611dba1e4da31e7979bdd95f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 2 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r276435

commit a15784eedec22ad986bb5d9726c16aa28a4444b0
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Tue Oct 1 15:02:25 2019 +0000

    backport: re PR c++/88562 (Incorrect pointer incrementing on SH4)
    
    gcc/
    2019-10-01  Oleg Endo  <olegendo@gcc.gnu.org>
    
            Backport from mainline
    
            2019-10-01  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/88562
            * config/sh/sh.c (sh_extending_set_of_reg::use_as_extended_reg): Use
            sh_check_add_incdec_notes to preserve REG_INC notes when replacing
            a memory access insn.
    
    From-SVN: r276414

commit 1d2481a55acc0f811d5d408dc63237a50ed820ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276383

commit 5a59ee64e8c65aa6aeedbf1376466c8d060460db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 30 00:16:26 2019 +0000

    Daily bump.
    
    From-SVN: r276273

commit 100aca542667fb45c5486e898eda1e0dfd3361b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 29 00:16:17 2019 +0000

    Daily bump.
    
    From-SVN: r276261

commit f5c1bea71dce1fa87870b010f0821dee68b13102
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sat Sep 28 20:05:38 2019 +0000

    [X86, Darwin] Backport fix for pr82920 (part 4).
    
    As part of the backport for pr82920, the following three testcases
    that are only present on the 7 and 8 branch, also needed amendment.
    
    2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/82920
            * gcc.target/i386/indirect-thunk-bnd-1.c: Adjust scan-asms for Darwin,
            do not use -fno-pic on Darwin.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/ret-thunk-25.c: Skip for Darwin, which has a
            different ABI for returning this category of complex value.
    
    From-SVN: r276259

commit 7a7681f570ba816bbd5237c79ea5608905041d5c
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sat Sep 28 20:00:22 2019 +0000

    [X86, Darwin] Backport fix for pr82920 (part 2).
    
    Darwin doesn't support mx32, and some tests were
    failing because it was trying to do them.  When we
    disable this it turns out that quite a few tests
    requiring mx32 support were not guarded.
    
    gcc/
    
    2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/82920
            * config/i386/darwin.h (CC1_SPEC): Report -mx32 as an error for
            Darwin.
    
    gcc/testsuite/
    
    2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-14  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/82920
            * gcc.target/i386/pr52146.c: Require effective target x32.
            * gcc.target/i386/pr52698.c: Likewise.
            * gcc.target/i386/pr52857-1.c: Likewise.
            * gcc.target/i386/pr52857-2.c: Likewise.
            * gcc.target/i386/pr52876.c: Likewise.
            * gcc.target/i386/pr53698.c: Likewise.
            * gcc.target/i386/pr54157.c: Likewise.
            * gcc.target/i386/pr55049-1.c: Likewise.
            * gcc.target/i386/pr55093.c: Likewise.
            * gcc.target/i386/pr55116-1.c: Likewise.
            * gcc.target/i386/pr55116-2.c: Likewise.
            * gcc.target/i386/pr55597.c: Likewise.
            * gcc.target/i386/pr59929.c: Likewise.
            * gcc.target/i386/pr66470.c: Likewise.
    
    From-SVN: r276258

commit 72f8fb6210436328043c13baf2951e25c5018276
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sat Sep 28 19:54:00 2019 +0000

    [X86, Darwin] Backport fix for pr82920 (part 1).
    
    The various thunks output codes have inconsistent output
    mechanisms. The patch factors out some common code that
    writes out the jumps and uses the regular output scheme
    that accounts for __USER_LABEL_PREFIX__.
    
    The testsuite changes are largely mechanical compensation
    for the revised output (and the fact that Darwin doesn't
    use non-PIC by default).
    
    gcc/
    
    2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/82920
            * config/i386/i386.c (ix86_output_jmp_thunk_or_indirect): New.
            (ix86_output_indirect_branch_via_reg): Use output mechanism
            accounting for __USER_LABEL_PREFIX__.
            (ix86_output_indirect_branch_via_push): Likewise.
            (ix86_output_function_return): Likewise.
            (ix86_output_indirect_function_return): Likewise.
    
    gcc/testsuite/
    
    2019-09-28  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>
                Dominique d'Humieres  <dominiq@gcc.gnu.org>
    
            PR target/82920
            * gcc.target/i386/indirect-thunk-1.c: Adjust scan-asms for Darwin,
            do not use -fno-pic on Darwin.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-4.c: Likewise.
            * gcc.target/i386/ret-thunk-1.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-16.c: Likewise.
            * gcc.target/i386/ret-thunk-2.c: Likewise.
            * gcc.target/i386/ret-thunk-22.c: Likewise.
            * gcc.target/i386/ret-thunk-23.c: Likewise.
            * gcc.target/i386/ret-thunk-24.c: Likewise.
            * gcc.target/i386/ret-thunk-3.c: Likewise.
            * gcc.target/i386/ret-thunk-4.c: Likewise.
            * gcc.target/i386/ret-thunk-5.c: Likewise.
            * gcc.target/i386/ret-thunk-6.c: Likewise.
            * gcc.target/i386/ret-thunk-7.c: Likewise.
            * gcc.target/i386/ret-thunk-8.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
    
    From-SVN: r276257

commit c6214e02be5d4716f033245941f82271b989e347
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Sep 28 09:12:34 2019 +0000

    backport: re PR libitm/86712 (libitm produces libitm.so with TEXTREL on SuperH (sh4) in _ITM_beginTransaction)
    
    libitm/
    2019-09-28  Oleg Endo  <olegendo@gcc.gnu.org>
    
            Backport from mainline
            2018-08-03  Sergei Trofimovich  <slyfox@gentoo.org>
    
            PR target/86712
            * config/sh/sjlj.S: Adjust to use PIC vs normal code to avoid
            absolute relocation in a shared library.
    
    From-SVN: r276247

commit 6a1f70d39581038bceb6820ba24a66a9d0bb9d67
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Sep 28 08:41:09 2019 +0000

    backport: re PR target/80672 (gcc/config/sh/sh.c:716: prefer compare to find.)
    
    gcc/
    2019-09-28  Oleg Endo  <olegendo@gcc.gnu.org>
    
            Backport from mainline
            2019-09-28  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/80672
            * config/sh/sh.c (parse_validate_atomic_model_option): Use
            std::string::compare instead of std::string::find.
    
    From-SVN: r276243

commit 5c9f68d5869aa6f5f7cd52f8367332e2ed46face
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sat Sep 28 07:29:06 2019 +0000

    backport: re PR target/85993 (config/sh/sh.c:10878: suspicious if .. else chain)
    
    gcc/
    2019-09-28  Oleg Endo  <olegendo@gcc.gnu.org>
    
            Backport from mainline
            2018-07-15  Jeff Law  <law@redhat.com>
    
            PR target/85993
            * config/sh/sh.c (output_mi_thunk): Remove dead conditional
            block.
    
    From-SVN: r276239

commit 5d60ba12b87240f426764aec65c16031e3e08dd1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 28 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276224

commit 267db4604177739d693904630803498d94263e1d
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 27 18:44:16 2019 +0000

    [Darwin, opts processing] Fix missing RejectNegative etc.
    
    This adds RejectNegative in a number of places it was needed,
    reorders the opts into two groups (one general and one driver-only).
    We also add a minimal description to each opt, and note some that
    are now obsolete. The only functional change is to permit
    -mtarget-linker= as an alias of -mtarget-linker.
    
    This fixes the Darwin part of PR89327
    
    2019-09-27  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-16  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.opt (prebind, noprebind, seglinkedit,
            noseglinkedit): Add RejectNegative.
    
            Backport from mainline
            2019-06-14  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.opt: Add RejectNegative where needed, reorder
            and add minimal functional descriptions.
    
    From-SVN: r276195

commit 93e247b27a25f46c89b189c62c8feb5566424699
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 27 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r276169

commit 64e8163e75ee8d05480064f1fd80381c83fe2b69
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 26 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276136

commit 3b29ca8b8db44153d65a4c0251cdbc94d71f01fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 25 00:16:24 2019 +0000

    Daily bump.
    
    From-SVN: r276108

commit fb7910ad8b002515a2d4e7e53fc73cea82552618
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 24 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r276086

commit 6f6cb4761a27124f2bb16e933854c0b7e50b64ac
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Sep 23 08:10:03 2019 +0000

    trans.c (Attribute_to_gnu): Test Can_Use_Internal_Rep on the underlying type of the node.
    
            * gcc-interface/trans.c (Attribute_to_gnu): Test Can_Use_Internal_Rep
            on the underlying type of the node.
            (Call_to_gnu): Likewise with the type of the prefix.
    
    From-SVN: r276044

commit 576c1fe4b8d19d79fd200a0f1674e632e49600f9
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 23 07:50:40 2019 +0000

    xtensa: backport fix for PR target/90922
    
    Stack pointer adjustment code in prologue missed a case of no
    callee-saved registers and a stack frame size bigger than 128 bytes.
    Handle that case.
    
    This fixes the following gcc tests with call0 ABI:
      gcc.c-torture/execute/stdarg-2.c
      gcc.dg/torture/pr55882.c
      gcc.dg/torture/pr57569.c
    
    gcc/
    2019-09-23  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2019-06-18  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_expand_prologue): Add stack
            pointer adjustment for the case of no callee-saved registers and
            stack frame bigger than 128 bytes.
    
    From-SVN: r276039

commit 19bc0e219bfe58b21ea8311fd54af179ea99f4a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 23 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276032

commit 31ddd22d75c8cd23811be0a57c96d3eeb0970628
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 22 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r276023

commit af28036a8a3ebeeb1892cec9d6732cc6b8ca2e91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r276012

commit 2ea4773f07c873a1c3003a382922e7fe9c9c8fe5
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Sep 20 22:03:40 2019 +0000

    pa.c (pa_trampoline_init): Remove spurious extended characters.
    
            * config/pa/pa.c (pa_trampoline_init): Remove spurious extended
            characters.
    
    From-SVN: r276010

commit 3686c5158dd58602f87af7c33d2d409e3ee7b53e
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Fri Sep 20 09:23:50 2019 +0000

    re PR rtl-optimization/88751 (Performance regression reload vs lra)
    
    Fix PR88751
    
    This patch implements a small improvement for the heuristic in lra
    which decides when it has to activate the simpler register allocation
    algorithm.
    
    gcc/ChangeLog:
    
    2019-09-20  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2019-06-06  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            PR rtl-optimization/88751
            * ira.c (ira): Use the number of the actually referenced registers
            when calculating the threshold.
    
    From-SVN: r275993

commit ebc8f1772ee16a6457542c06b84a6c9a6bf58d77
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 20 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r275983

commit d69a5a74b6d189ca307062a5d8fd899396d403fa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 19 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275921

commit d9b461ec5c6f366de073e352dc446e83d5274578
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 18 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r275830

commit e669d29d634574aa83f2072b6db97af003d96e26
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 17 11:48:24 2019 +0000

    [Darwin, testsuite] Fix pr71694 fail for m32.
    
    This test fails for Darwin m32 because it's scanning for absence
    of an instruction that's validly used in PIC code. Fixed, in this
    case, by using non-PIC codegen.
    
    2019-09-17  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * g++.dg/pr71694.C: Use non-PIC codegen for Darwin m32.
    
    From-SVN: r275801

commit 6a5baacd9e641a2fdcd4782868f9b504be2f634e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 17 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275760

commit 055ed07427425be7e414a83307b2f3b0af50a4cc
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 16 00:30:59 2019 +0000

    [Darwin, testsuite] Fix isysroot-1.c.
    
    For the test to succeed there needs to be some header that is to be found in
    the 'expected' place i.e. <sysroot>/usr/include/. It's important that it is
    not the name of a header for which fixincludes have been applied, since such
    headers will be found in the gcc include-fixed dir and, in general, reference
    additional headers. The dummy sysroot will prevent the additional headers
    from being found, resulting in a failed test. The fix is to use a header name
    that isn't expected to be present in a real sysroot.
    
    2019-09-16  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/cpp/isysroot-1.c: Use <example.h> as the test header.
            * gcc.dg/cpp/usr/include/stdio.h: Rename...
            * gcc.dg/cpp/usr/include/example.h: ... to this.
    
    From-SVN: r275742

commit 919244d32ba336a3df21f748af90720b24e923e9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 16 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275738

commit 945b9ca887d2d20dce7a5103838d2dcdaa834dec
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Sep 15 22:35:40 2019 +0000

    backport: re PR fortran/91557 (Bogus warning about unused dummy argument _formal_*)
    
    2019-09-15  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/91557
            * trans-decl.c (generate_local_decl): Do not warn if the symbol
            is artificial.
            * trans-types.c (get_formal_from_actual_arglist): Set artificial
            attribute on dummy arguments.
    
    2019-09-15  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/91557
            * gfortran.dg/warn_unused_dummy_argument_5.f90: New test.
    
    From-SVN: r275737

commit 9c9d3d50255cec70cdffff3c6c66b00f46da4127
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Sep 15 02:48:44 2019 +0000

    [objective-c++, testsuite] Fix test line number.
    
    The syntax-1.mm test line numbering is differnent on 7 (and earlier)
    branches, so the test needs a minor update for the PR90709 workaround.
    
    2019-09-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            * obj-c++.dg/syntax-error-1.mm: Adjust line number in dg-error.
    
    From-SVN: r275725

commit 6d23ec6a50517c171e7d996167e284fb8ad38227
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Sep 15 02:38:25 2019 +0000

    [objective-c/c++, testsuite] Workaround for PR90709.
    
    Since we cannot parse the current NeXT headers, because of PR90709 and its
    dependents, we have a large amount of testsuite noise for Darwin platforms.
    In order to restore the usefulness of the testsuite, we are going add headers
    without the modern syntax elements that trigger the bug, and use these for
    test runs on newer Darwin.
    
    The headers are imported from GNUStep, with some local modifications to make
    sure that __BLOCKS__ is honoured as a gate for Apple-style blocks closures.
    
    CF-CFString.h, F-NS*.h are proxy headers that use the installed CoreFoundation
    or Foundation headers on systems <= Darwin12 and the GNUStep headers for newer.
    
    Use the CF-CFString.h, F-NS*.h proxy headers where needed in the objective-c
    testsuite. Make minor adjustments to tests as required, providing that those
    do not alter the test intent.
    
    2019-09-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR objc/90709
            * obj-c++.dg/proto-lossage-7.mm: Use proxy headers.
            * obj-c++.dg/strings/const-cfstring-2.mm: Likewise.
            * obj-c++.dg/strings/const-cfstring-5.mm: Likewise
            * obj-c++.dg/strings/const-str-12.mm: Likewise.
            * obj-c++.dg/syntax-error-1.mm: Likewise.
            * obj-c++.dg/torture/strings/const-cfstring-1.mm: Likewise.
            * obj-c++.dg/torture/strings/const-str-10.mm: Likewise.
            * obj-c++.dg/torture/strings/const-str-11.mm: Likewise.
            * obj-c++.dg/torture/strings/const-str-9.mm: Likewise.
            * obj-c++.dg/cxx-ivars-3.mm: Skip on later Darwin, where the 10.4 API
            in no longer supported, also on m64 where there's no meaning to it.
            * obj-c++.dg/isa-field-1.mm: Suppress unwanted warning, add comment why.
            * obj-c++.dg/objc-gc-3.mm: Skip for Darwin > 16, the API use is an error
            there.
            * obj-c++.dg/qual-types-1.mm: Prune a spurious l64 warning.
            * obj-c++.dg/stubify-1.mm: Tidy up after better compiler warnings.
            * obj-c++.dg/stubify-2.mm: Likewise.
            * obj-c++.dg/try-catch-1.mm: Likewise.
            * obj-c++.dg/try-catch-3.mm: Likewise.
    
            Backport from mainline.
            2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR objc/90709
            * objc.dg/encode-7-next-64bit.m: Use proxy headers.
            * objc.dg/image-info.m: Likewise.
            * objc.dg/method-6.m: Likewise.
            * objc.dg/no-extra-load.m: Likewise.
            * objc.dg/objc-foreach-4.m: Likewise.
            * objc.dg/objc-foreach-5.m: Likewise.
            * objc.dg/proto-lossage-7.m: Likewise.
            * objc.dg/strings/const-cfstring-2.m: Likewise.
            * objc.dg/strings/const-cfstring-5.m: Likewise.
            * objc.dg/strings/const-str-12b.m: Likewise.
            * objc.dg/symtab-1.m: Likewise.
            * objc.dg/torture/strings/const-cfstring-1.m: Likewise.
            * objc.dg/torture/strings/const-str-10.m: Likewise.
            * objc.dg/torture/strings/const-str-11.m: Likewise.
            * objc.dg/torture/strings/const-str-9.m: Likewise.
            * objc.dg/zero-link-1.m: Likewise.
            * objc.dg/zero-link-2.m: Likewise.
            * objc.dg/zero-link-3.m: Likewise.
            * objc.dg/isa-field-1.m: Suppress unwanted warning, add comment why.
            * objc.dg/headers.m: XFAIL for Darwin14-19.
            * objc.dg/objc-gc-4.m: Skip for Darwin > 16, the API use is an error
            there.
    
            Backport from mainline.
            2019-06-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR objc/90709
            * objc-obj-c++-shared/CF-CFString.h: New.
            * objc-obj-c++-shared/F-NSArray.h: New.
            * objc-obj-c++-shared/F-NSAutoreleasePool.h: New.
            * objc-obj-c++-shared/F-NSObject.h: New.
            * objc-obj-c++-shared/F-NSString.h: New.
            * objc-obj-c++-shared/F-NSValue.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFArray.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFAvailability.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFBase.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFCharacterSet.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFData.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFDictionary.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFLocale.h: New.
            * objc-obj-c++-shared/GNUStep/CoreFoundation/CFString.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSArray.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSAutoreleasePool.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSDate.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSEnumerator.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSGeometry.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSObjCRuntime.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSObject.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSRange.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSString.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSValue.h: New.
            * objc-obj-c++-shared/GNUStep/Foundation/NSZone.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/GNUstep.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/GSBlocks.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/GSConfig.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/GSObjCRuntime.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/GSVersionMacros.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/NSArray+GNUstepBase.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/NSMutableString+GNUstepBase.h:
            New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/NSNumber+GNUstepBase.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/NSObject+GNUstepBase.h: New.
            * objc-obj-c++-shared/GNUStep/GNUstepBase/NSString+GNUstepBase.h: New.
    
    From-SVN: r275724

commit 99dc092f59830089dc8cbcb4b95c7ffabb83bc58
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 15 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r275720

commit b63400e8c26c2e4721297f3437ef97259d04dcc3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 14 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275706

commit 24682dea3be9e3695336b4322b8c4a2b2c37a03e
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 13 21:45:28 2019 +0000

    [Darwin, testsuite] Adjust two tests that fail on newer OS versions.
    
    Newer OS versions (10.14+) do not provide some of the CRTs that are used
    for older ones (e.g. 10.5), and thus link tests that specify targeting
    such a revision fail. We retain the testing of the correct defined OS
    version number but switch to compile-only testing for these two tests.
    
    2019-09-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/darwin-minversion-1.c: Use compile rather than link/run.
    
    From-SVN: r275705

commit 3dd2a01fb8499072178f7c80f7a26438edead6c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 13 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r275692

commit 0586da4f850407b19d51159db73610b721778d08
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 12 19:26:49 2019 +0000

    [Darwin, X86, testsuite] Adjust test for Darwin's align syntax.
    
    Darwin has a .align taking a power of 2 by default, so that some
    tests expecting a byte count are failing, fixed by adjusting the
    scan-asms.  We also avoid the ABI-mandated indirection for common
    and PIC extras for m32 (by adjusting compile options).
    
    2019-09-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-27  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr22076.c: Adjust options to
            match codegen expected by the scan-asms.
    
    From-SVN: r275690

commit 2a5360f04116a04cc6f6ff61a81b9a07a1263cc7
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Sep 12 09:05:14 2019 +0000

    re PR fortran/91686 (ICE in gimplify:2554)
    
    2019-09-12  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/91686
            Backport from mainline
            * trans-expr.c (gfc_trans_assignment_1): Copy and paste section
            handling the rse.pre block from mainline.
    
    2019-09-12  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/91686
            * gfortran.dg/pr91686.f90 : New test.
    
    From-SVN: r275681

commit e9fbb75d8c3ead3318d58e7bb74ab4cae640a1db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275677

commit 8038d0206c1b8b804a1c3846c6dd13a3acb3e3cf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 11 12:41:36 2019 +0100

    Fix Xmethod for shared_ptr::use_count()
    
    This was reported in https://bugzilla.redhat.com/show_bug.cgi?id=1749578
    
            * python/libstdcxx/v6/xmethods.py (SharedPtrUseCountWorker.__call__):
            Fix syntax error.
    
    From-SVN: r275647

commit 33b4a04318434299215b71edbb06fd88efedebf1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Sep 11 10:44:06 2019 +0000

    re PR rtl-optimization/89795 (wrong code with -O2 -fno-dce -fno-forward-propagate -fno-sched-pressure)
    
            PR rtl-optimization/89795
            * rtlanal.c (nonzero_bits1) <SUBREG>: Do not propagate results from
            inner REGs to paradoxical SUBREGs if WORD_REGISTER_OPERATIONS is set.
    
    From-SVN: r275638

commit 98c4786a9ae4ba1ea1436a3b15c21c6ec21f1f1b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 11 00:16:25 2019 +0000

    Daily bump.
    
    From-SVN: r275619

commit a045089a6c3142cf2f31356a691b780f54aec28a
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 10 20:43:34 2019 +0000

    [Darwin, X86, testsuite] Fixes for three PIE tests.
    
    Darwin requires PIC code in order to support PIE; amend the test scan-asms
    to match this.
    
    2019-09-10  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-26  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr39013-1.c: Adjust scan-asms for PIE to
            account for PIC code on Darwin.
            * gcc.target/i386/pr39013-2.c: Likewise.
            * gcc.target/i386/pr64317.c: Likewise.
    
    From-SVN: r275612

commit 21246e04828d4bc24ed459651cc1dfc76abf774f
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 10 20:39:23 2019 +0000

    [Darwin, X86, testsuite] Amend popcnt spelling for Darwin.
    
    Darwin uses a different spelling for popcnt (popcnt instead of popcntw).
    Check for this in the test.
    
    2019-09-10  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-25  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr59874-3.c: Use the spelling of popcnt
            expected for Darwin.
    
    From-SVN: r275610

commit bcb6582ce535bae78444f1dc6ce475074dea52c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 10 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275552

commit 145860115a8b22a53f2fb991adfdb977397916cb
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 9 20:27:05 2019 +0000

    [Darwin, testsuite] Address PR91087 - XFAIL parts of pr16855.C.
    
    The testcase is failing to instrument part of the source because of a bug
    in the ordering of static DTORs. It seems unlikely that this is generically
    fixable in the toolchain (and given that it's likely to be a dynamic loader
    change would not be expected to be applied retrospectively to OS versions
    that are out of support). To avoid the testsuite noise, xfail the count lines
    that don't match (we can adjust the xfails as/when the upstream bug is fixed).
    
    dejagnu xfails do not seem to work when embedded in a line like:
    ~Test (void) { .... /* count(1) { xfail ... } */ }
    the closing brace seems to confuse the parser. The solution is to exapnd the
    text onto three lines.
    
    2019-09-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-07-25  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR gcov-profile/91087
            * g++.dg/gcov/pr16855.C: Xfail the count lines for the DTORs and the
            "final" line for the failure summaries.  Adjust source layout so that
            dejagnu xfail expressions work.
    
    From-SVN: r275547

commit ff22d43b98e5d344956d290a41306cf7c3f46675
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 9 20:21:30 2019 +0000

    [Darwin, testsuite] Fix PR 65364 (uninit-19.c).
    
    This test currently fails on Darwin, because the port inlines fn2 for
    both PIC (and non-pic for m32). Fixed by adjusting the target condition.
    
    2019-09-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-11  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR testsuite/65364
            * gcc.dg/uninit-19.c (fn1): Adjust target condition for Darwin.
            (fn2): Likewise.
    
    From-SVN: r275546

commit f6f668797534e4166f62b602df41ead276ec62b6
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 9 20:13:24 2019 +0000

    [Darwin, X86, testsuite] Adjust match strings.
    
    Some of the i386.exp tests fail on Darwin  because their scan-asm
    match strings are too general.  In some cases the strings also match
    instances in the .file and size directives or in comment output. This
    makes the match strings more specific.
    
    2019-09-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr66819-3.c: Specifically, check that there is no
            call to "bar".
            * gcc.target/i386/pr66819-4.c: Likewise.
    
    From-SVN: r275545

commit 93cb94ccd655046ff4c10de33c55889ad8d9c8cf
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 9 20:07:18 2019 +0000

    [Darwin, X86, testsuite] Adjust labels for USER_LABEL_PREFIX.
    
    A couple of the i386.exp tests fail because the label spelling
    used is different between ELF and Mach-O targets. Adjusted here.
    
    2019-09-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr67985-2.c: Adjust label checks for
            Darwin.
            * gcc.target/i386/pr77881.c: Likewise.
    
    From-SVN: r275543

commit 28a1c6ba4617cd3554488f5001925b35dd65ba25
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Sep 9 19:58:23 2019 +0000

    [Darwin, X86, testsuite] Disable tests that cannot pass.
    
    Some of the i386.exp target tests cannot pass on Darwin because
    either the port doesn't support a feature, or the ABI demands
    sufficiently different codegen that matching the output with
    scan-asms would require a different test.  Skip these.
    
    2019-09-09  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/i386/pr70738-7.c: Skip for Darwin.
            * gcc.target/i386/pr24414.c: Likewise.
    
    From-SVN: r275542

commit 7fd1e6110d0eb0755e15a55f3895f48dff4a3777
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Sep 9 13:44:17 2019 +0200

    re PR target/87853 (_mm_cmpgt_epi8 broken with -funsigned-char)
    
            PR target/87853
            * config/i386/emmintrin.h (_mm_cmpeq_epi8): Use casts to __v16qi
            instead of __v16qs.
    
            * gcc.target/i386/pr87853.c: New test.
    
    From-SVN: r275516

commit cb3e2b248b5d03d06515160c3f81bc666f8d83d5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Sep 9 13:43:08 2019 +0200

    re PR target/91704 ([X86] Codegen for _mm256_cmpgt_epi8 is affected by -funsigned-char)
    
            PR target/91704
            * config/i386/avxintrin.h (__v32qs): New typedef.
            * config/i386/avx2intrin.h (_mm256_cmpgt_epi8): Use casts to __v32qs
            instead of __v32qi.
    
            * gcc.target/i386/pr91704.c: New test.
    
    From-SVN: r275515

commit a1df926eb26c35740e23617e7e740a344f690822
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 9 00:16:21 2019 +0000

    Daily bump.
    
    From-SVN: r275498

commit dd4845f15a438e55ef218cd423f10b2be540b323
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Sep 8 19:49:27 2019 +0000

    [Darwin, X86, testsuite] Add xfails for PR90396.
    
    We don't have support for -mcmodel={medium, large, kernel} so don't
    expect tests for those things to work.
    
    For now mark them as xfail where possible and skip where that isn't.
    These changes will be logged onto the PR and therefore can be backed
    out when the facility is implemented.
    
    2019-09-08  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-01  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/90698
            * gcc.target/i386/pr49866.c: XFAIL for Darwin.
            * gcc.target/i386/pr63538.c: Likewise.
            * gcc.target/i386/pr61599-1.c: Skip for Darwin.
    
    From-SVN: r275496

commit e98846d7869170b8b4d9e2a6956ceda7470601b9
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Sep 8 19:41:20 2019 +0000

    [X86, testsuite] Fix PR rtl-optimisation/64895 XPASSes.
    
    These tests had started to XPASS on pic targets where the codegen
    is now as expected.
    
    2019-09-08  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR rtl-optimisation/64895
            * gcc.target/i386/fuse-caller-save-rec.c: Remove XFAILs.
            * gcc.target/i386/fuse-caller-save.c: Likewise.
            * gcc.target/i386/fuse-caller-save-xmm.c: Adjust tests for
            PIC cases, remove XFAILs.
    
    From-SVN: r275495

commit f57249e39c085d3978e1de089de049028b1a56a4
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Sep 8 19:32:43 2019 +0000

    [Darwin, X86] Backport fix for .ident tests.
    
    The c-c++-common tests fail (or XPASS depending on which) on Darwin
    because if doesn't emit a.ident marker. For X86 Darwin, this is a
    trivial oversight; the assembler supports the directive. We can
    therefore use the default target hook there.
    
    2019-09-08  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/i386/darwin.h (TARGET_ASM_OUTPUT_IDENT): New.
    
    From-SVN: r275494

commit 0f0a929b08c9b0779ef6bfd1b6d00e956f7ffa1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 8 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r275490

commit 2b43a1a0b4b69c52329e92d353701697cfd6664c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 7 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r275479

commit 5502ed98e9277d4a74f7a277cf16a1c8bf6689db
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 16:11:09 2019 +0000

    [Ada, Darwin, PPC] PPC Darwin has stack check probes.
    
    On PPC, Darwin uses the same code as other parts of the port
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-07-02  Iain Sandoe  <iain@sandoe.co.uk>
    
            * system-darwin-ppc.ads: Set Stack_Check_Probes True for
            PPC Darwin.
    
    From-SVN: r275471

commit 0e21ccadb9bfd744367733ba04f2e4c955cdf7d3
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 16:08:08 2019 +0000

    [Ada] Push -shared-libgcc where needed.
    
    Gnatlink has code that checks for duplicate '-shared-libgcc’ switches (but not
    duplicate ‘static-libgcc’) and also pushes ’static-libgcc' onto the link line for
    targets that default to static linking, provided '-shared-libgcc' is not present.
    
    For targets that should use a shared libgcc we need the same process to be
    applied (in inverse), in the event that they do not default to providing the
    shared flag implicitly.
    
    So this adds the complementary set of tests for the shared case and pushes
    the shared flag as needed. As a minor tidy-up there’s no need push duplicates
    of the libgcc switch onto the link line when one has already been seen (given by
    the user).
    
    The patch does not alter any of the platform defaults for static/shared libgcc,
    but it ensures that the intent of the link is explicit.
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-30  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gnatlink.adb (Link_Step): Push -shared-libgcc explicitly, when it
            is the target default (unless overidden by the static flag).
            When the user has put an instance of shared/static-libgcc do not push
            a duplicate of this.
    
    From-SVN: r275470

commit 2735b4e660d17a35be624453343c42aa495624ce
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 16:03:42 2019 +0000

    [Darwin, testsuite] Fix PR27221.
    
    The test can't succeed on 32b powerpc Darwin since the
    ABI demands a different result to the tested one. (So XFAIL it).
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-22  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR testsuite/27221
            * g++.dg/ext/alignof2.C: XFAIL for 32bit Darwin.
    
    From-SVN: r275469

commit e32aa33638df60d9695806278d5013d24740d73e
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 15:59:54 2019 +0000

    [Darwin, testsuite] Fix PR67958.
    
    These tests require specific scan-asms in some cases because
    of the different codegen for Dawin.  Added some explanations
    too.
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-21  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR testsuite/67958
            * gcc.target/i386/pr32219-1.c: Adjust scan-asms for Darwin, comment
            the differences.
            * gcc.target/i386/pr32219-2.c: Likewise.
            * gcc.target/i386/pr32219-3.c: Likewise.
            * gcc.target/i386/pr32219-4.c: Likewise.
            * gcc.target/i386/pr32219-5.c: Likewise.
            * gcc.target/i386/pr32219-6.c: Likewise.
            * gcc.target/i386/pr32219-7.c: Likewise.
            * gcc.target/i386/pr32219-8.c: Likewise.
    
    From-SVN: r275468

commit d7f3a0b0c2016c427331e6ca93735eb3e36c3c02
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 15:56:18 2019 +0000

    [Darwin, testsuite] Fix PR63891 (darwin-weakimport-3).
    
    This is a testcase failing because one part of the codegen is
    (correctly) generating the scan-asm-not signature.
    
    Fixed by altering the build options.
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-21  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/63891
            * gcc.dg/darwin-weakimport-3.c: Adjust options and explain
            the reasons.
    
    From-SVN: r275467

commit 468519584359ec4f802093966b3b493c0fc66043
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 15:51:01 2019 +0000

    [Darwin, testsuite ] Fix for PR58321.
    
    Darwin doesn't emit a .file directive by default
    and one of the scan-asm hits for ELF targets comes from
    this directive. Adjust for Darwin and explain.
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-20  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR testsuite/58321
            * gcc.target/i386/memcpy-strategy-3.c: Adjust count for Darwin and
            add a comment as to the reason for the difference.
            * gcc.target/i386/memset-strategy-1.c: Likewise.
    
    From-SVN: r275466

commit 788f740a47f2c01bd13c8a0a4b0b0b4050a3a6a8
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Fri Sep 6 15:45:53 2019 +0000

    [Darwin, X86] Backport fix for tests using .p2align.
    
    This fixes a number of testcases that expect use of .p2align, which
    was somehow omitted from the darwin X86 port (but is available in all
    assemblers used with it).
    
    2019-09-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-05-31  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/i386/darwin.h (ASM_OUTPUT_MAX_SKIP_ALIGN): New.
    
    From-SVN: r275465

commit 160c854cf2d8a7aca9ed167c0687167c05ddd345
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 6 00:16:23 2019 +0000

    Daily bump.
    
    From-SVN: r275446

commit d1915aa2289d2b4f28ea3b5a4f0d1c227945fe89
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:55:27 2019 +0000

    [Darwin, PPC, testsuite] Require stabs support for a test.
    
    The test fails if the assembler doesn't support stabs.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-07-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/stabs-attrib-vect-darwin.c: Require stabs
            support.
    
    From-SVN: r275440

commit fa8428f093b22118920b09ae8baa40cdcca96ecc
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:53:12 2019 +0000

    [Darwin, PPC, testsuite] Skip tests for unimplemented functionality.
    
    The -mno-speculate-indirect-jumps functionality is not implemented for
    Darwin.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/safe-indirect-jump-1.c: Skip for Darwin.
            * gcc.target/powerpc/safe-indirect-jump-7.c: Likewise.
    
    From-SVN: r275439

commit 2d11e0f929cf96a894096da472f9cadcb3a7daab
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:50:50 2019 +0000

    [Darwin, PPC, testsuite] Fix builtins-2 Darwin.
    
    This cannot pass for current Darwin, since it requires VSX and we
    don't have any hardware supporting that. Add a dg-requires clause
    for this.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/builtins-2.c: Require VSX hardware support.
    
    From-SVN: r275438

commit 3b96333b0e70ed78be7366f7bf25bb7dc0566d88
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:47:27 2019 +0000

    [Darwin, PPC, testsuite] Fix pr80125 testcase for Darwin.
    
    Darwin (unlike most of the members of the PowerPC port family)
    defaults to signed chars, so the test was failing to compile with
    a "mismatched parameters" error.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/pr80125.c (foo): Use an unsigned char
            vector explicitly for the vec_perm.
    
    From-SVN: r275437

commit 20e364d0539cf5f31380ca6ffe964e882b0df200
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:42:59 2019 +0000

    [Darwin, PPC, testsuite] Fix pr71785 testcase for Darwin.
    
    Firstly, we adjust the test conditions to use non-PIC code for Darwin.
    Secondly, we have to account for out-of-line GPR restores which gives
    a false positive on one of the scan-assembler-not. Lastly, we make the
    test a bit more specific for Darwin - that it looks for absence of
    branches to local labels.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/pr71785.c: For Darwin, make test non-PIC,
            expect the out-of-line GPR restore, and test specifically for
            absence of branches to local labels.
    
    From-SVN: r275436

commit a8c28a9b9a648090beb5c4da4ff53398e4b4f8c1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:40:20 2019 +0000

    [Darwin, PPC, testsuite] Add requires for DFP to two tests.
    
    The two tests use decimal floating point, add the relevant dg-requires
    so that they are unsupported on platforms without DFP.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-22  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/pr64205.c: Require effective target dfp.
            * gcc.target/powerpc/pr79909.c: Likewise.
    
    From-SVN: r275435

commit e832856977a55e885e8f1680465ea100ab324ac5
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:37:30 2019 +0000

    [Darwin, PPC, testsuite] Fix darwin-bool-1.c.
    
    This test is failing because of a pedantic warning that is unrelated to the
    purpose of the test. Fixed by suppressing that warning.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-22  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/powerpc/darwin-bool-1.c: Suppress the pedantic
            warning about _Bool.
    
    From-SVN: r275434

commit 5e19ff7bbdebd4de58e0e37b2d0ed004d1f82b81
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:33:01 2019 +0000

    [Darwin, PPC] Fix fail of cpp/assert4.c
    
    This test needs the cpu and machine asserts to be implemented
    which hadn't been done for PPC Darwin. We also need to emit
    __PPC__ for 32/64b and __PPC64__, __powerpc64__ (64bit) as per
    the other members of the PowerPC port.
    
    2019-08-27 Iain Sandoe <iain@sandoe.co.uk>
    
    Backport from mainline
    2019-08-18 Iain Sandoe <iain@sandoe.co.uk>
    
    * config/rs6000/darwin.h (TARGET_OS_CPP_BUILTINS): Add asserts
    for cpu and machine. Factor 64/32b builtins.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-08-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h (TARGET_OS_CPP_BUILTINS): Add asserts
            for cpu and machine.  Factor 64/32b builtins.
    
            Backport from mainline
            2019-06-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin.h: (__PPC__, __PPC64__): New.
    
    From-SVN: r275433

commit e451b91356d3e642f212d7183d8c23a47fb9903f
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:27:31 2019 +0000

    [c-family] Backport fix for PCH / PR61250.
    
    When we are parsing a source file, the very first token might
    be a PRAGMA_GCC_PCH_PREPROCESS. This indicates that we are going
    read in a PCH file (named as the value of the pragma). If we don't
    see this pragma, then we know that it's OK to release any resources
    that the host might have set aside for the PCH file.
    
    There is a thinko in the current implementation, in that the decision
    to release resources is happening unconditionally right after the first
    token is extracted but before it's been checked or acted upon.
    
    This leads to the pch bug on Darwin, because we actually do release
    resources - which are subsequently (reasonably) assumed to be available
    when reading a PCH file. We then get random crashes or hangs depending
    on the interaction between unmmap and malloc.
    
    The bug is present everywhere but doesn't show on (say) Linux, since
    the release of PCH resources is a NOP there.
    
    This effects all the c-family front ends, because they all use
    c_lex_with_flags () to implement this.
    
    The solution is to check for the PRAGMA_GCC_PCH_PREPROCESS and only call
    c_common_no_more_pch () when that is not the first token.
    
    A secondary effect of the collection is that the name of the PCH file
    can be collected during the ggc_pch_read() reset of state. Therefore
    we should issue any diagnostic that might name the file before the
    collections are triggered.
    
    gcc/
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-08-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR pch/61250
            * ggc-page.c (ggc_pch_read): Read the ggc_pch_ondisk structure
            and issue any diagnostics needed before collecting the pre-PCH
            state.
    
    gcc/c-family/
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-08-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR pch/61250
            * c-lex.c (c_lex_with_flags):  Don't call
            c_common_no_more_pch () from here.
    
    gcc/c
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-08-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR pch/61250
            * c-parser.c (c_parse_file): Call c_common_no_more_pch ()
            after determining that the first token is not
            PRAGMA_GCC_PCH_PREPROCESS.
    
    gcc/cp/
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backported from mainline
            2019-08-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR pch/61250
            * parser.c (cp_parser_initial_pragma): Call c_common_no_more_pch ()
            after determining that the first token is not
            PRAGMA_GCC_PCH_PREPROCESS.
    
    From-SVN: r275431

commit e3b3d2b9dc74f2e0579a8a3086b5a0a1b57a4fc1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:19:46 2019 +0000

    [Darwin, X86, testsuite] Provide an asm shim for AVX512F tests.
    
    Without this the tests fail to build.
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-10  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.target/x86_64/abi/avx512f/abi-avx512f.exp: Darwin is
            now tested.
            * gcc.target/x86_64/abi/avx512f/asm-support-darwin.s: New.
    
    From-SVN: r275430

commit f8b3e1ef29ed71f0836b8ac54d8651e73ceffd9e
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:14:35 2019 +0000

    [Darwin] Fix PR87030 and tidy config fragments.
    
    This is about 32/64b host and multilib support across the range of Darwin
    systems.
    
    Prior to Darwin8 (OS X 10.4), the toolchains support only PowerPC and only 32b.
    
    On Darwin8 it is possible to target a 64b multilib, but with support limited
    to a few of the main libraries on the system (not a recommended configuration).
    
    From Darwin9 to Darwin17 (OSX 10.5 to 10.13) it is possible to have either
    32 or 64b hosted toolchains, with support for a 64 or 32b multilib respectively.
    
    On Darwin9 the kernel is 32b, but with support for 64b executables, so it's
    conventional to build a 32b host toolchain supporting a 64b multilib. However
    this is not enforced (merely a convention).
    
    There is also some platform hardware supporting Darwin10/11 which is only 32b
    and for which the same situation applies. However, from Darwin10 to Darwin17,
    the majority of platform hardware supports a 64b kernel and it's conventional
    to build a 64b host toolchain with support for a 32b multilib.
    
    On/from Darwin18 (OS X 10.14), the development headers (in the SDK) no longer
    expose the interfaces for the 32b multilib support (although sufficient runtime
    support remains installed that the testsuite can be run for a 32b multilib).
    
    The PR is raised against this latter situation since the absence of exposed
    interfaces causes a 'default' bootstrap fail regardless of the availability of
    the runtimes. Given the number of permutations, I felt it warranted a general
    solution, especially since the current scheme of target headers and t-make
    fragments has become somewhat messy.
    
    The changes here enforce the single 32b PowerPC multilib for Darwin < 8 and the
    single X86 64b multilib for Darwin >= 18. This means that there is no longer
    any need to configure Darwin18+ '--disable-multilib', but also that if you want
    to use the ability to continue to test the compiler's 32b multilib there, you
    need to make a configuration targeting an earlier OS version (and using the
    SDK from that).
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-07-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR bootstrap/87030
            * config/i386/darwin.h (REAL_LIBGCC_SPEC): Revert change from r273749.
    
            PR bootstrap/87030
            * config/i386/darwin.h (REAL_LIBGCC_SPEC): Move from here...
            * config/i386/darwin32-biarch.h .. to here.
            * config/i386/darwin64-biarch.h: Adjust comments.
            * config/rs6000/darwin32-biarch.h: Likewise.
            * config/rs6000/darwin64-biarch.h: Likewise.
            * config.gcc: Missed commit from r273746
            (*-*-darwin*): Don't include CPU t-darwin here.
            (i[34567]86-*-darwin*): Adjust to use biarch files. Produce
            an error message if i686-darwin configuration is attempted for
            Darwin >= 18.
    
            Backport from mainline
            2019-07-23  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR bootstrap/87030
            * config.gcc (*-*-darwin*): Don't include CPU t-darwin here.
            (i[34567]86-*-darwin*): Adjust to use biarch files. Produce
            an error message if i686-darwin configuration is attempted for
            Darwin >= 18.
            (x86_64-*-darwin*): Switch to single multilib for Darwin >= 18.
            (powerpc-*-darwin*): Use biarch files where needed.
            (powerpc64-*-darwin*): Likewise.
            * config/i386/darwin.h (REAL_LIBGCC_SPEC): Move to new biarch file.
            (DARWIN_ARCH_SPEC, DARWIN_SUBARCH_SPEC): Revise for default single
            arch case.
            * config/i386/darwin32-biarch.h: New.
            * config/i386/darwin64.h: Rename.
            * gcc/config/i386/darwin64-biarch.h: To this.
            * config/i386/t-darwin: Rename.
            * gcc/config/i386/t-darwin32-biarch: To this.
            * config/i386/t-darwin64: Rename.
            * gcc/config/i386/t-darwin64-biarch: To this.
            * config/rs6000/darwin32-biarch.h: New.
            * config/rs6000/darwin64.h: Rename.
            * config/rs6000/darwin64-biarch.h: To this.
            (DARWIN_ARCH_SPEC, DARWIN_SUBARCH_SPEC): Revise for default single
            arch case.
            * config/rs6000/t-darwin8: Rename.
            * config/rs6000/t-darwin32-biarch: To this.
            * config/rs6000/t-darwin64 Rename.
            * config/rs6000/t-darwin64-biarch: To this.
    
    From-SVN: r275429

commit dd1936cc557e10a6131ea83714874be9426585ba
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Sep 5 19:06:44 2019 +0000

    [ObjC] Recognise 'instancetype' as equivalent to 'id'.
    
    This is primarily about fixing a number of testsuite fails, it
    implements the parsing of 'instancetype' but doesn't alter the
    code gen (relative to using id in the same position). It is
    part of the work-arounds for PR90709.
    
    gcc/objc/
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * objc/objc-act.h (OCTI_INSTANCE_TYPE, OCTI_INSTANCETYPE_NAME): New.
            (objc_global_trees): Add instance type and name.
            (INSTANCE_TYPEDEF_NAME): New.
            * objc/objc-act.c (synth_module_prologue): Build decls for
            objc_instancetype_type and objc_instancetype_name.
    
    gcc/testsuite/
    
    2019-09-05  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * objc.dg/instancetype-0.m: New.
    
    From-SVN: r275428

commit 4be09c5d8132859b92f668b14fbf26be54b909ad
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Sep 5 12:11:52 2019 +0000

    backport: [multiple changes]
    
    2019-09-05  Richard Biener  <rguenther@suse.de>
    
            * lto-streamer.h (LTO_minor_version): Bump.
    
            Backport from mainline
            2019-05-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90328
            * tree-data-ref.h (dr_may_alias_p): Pass in the actual loop nest.
            * tree-data-ref.c (dr_may_alias_p): Check whether the clique
            is valid in the loop nest before using it.
            (initialize_data_dependence_relation): Adjust.
            * graphite-scop-detection.c (build_alias_set): Pass the SCOP enclosing
            loop as loop-nest to dr_may_alias_p.
    
            * gcc.dg/torture/pr90328.c: New testcase.
    
            2019-03-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89578
            * cfgloop.h (struct loop): Add owned_clique field.
            * cfgloopmanip.c (copy_loop_info): Copy it.
            * tree-cfg.c (gimple_duplicate_bb): Do not remap owned_clique
            cliques.
            * tree-inline.c (copy_loops): Remap owned_clique.
            * lto-streamer-in.c (input_cfg): Stream owned_clique.
            * lto-streamer-out.c (output_cfg): Likewise.
    
            2019-02-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/87609
            * tree-cfg.c (gimple_duplicate_bb): Only remap inlined cliques.
    
            2019-02-22  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/87609
            * cfghooks.h (dependence_hash): New typedef.
            (struct copy_bb_data): New type.
            (cfg_hooks::duplicate_block): Adjust to take a copy_bb_data argument.
            (duplicate_block): Likewise.
            * cfghooks.c (duplicate_block): Pass down copy_bb_data.
            (copy_bbs): Create and pass down copy_bb_data.
            * cfgrtl.c (cfg_layout_duplicate_bb): Adjust.
            (rtl_duplicate_bb): Likewise.
            * tree-cfg.c (gimple_duplicate_bb): If the copy_bb_data arg is not NULL
            remap dependence info.
    
            * gcc.dg/torture/restrict-7.c: New testcase.
    
            2019-02-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/87609
            * tree-core.h (tree_base): Document special clique values.
            * tree-inline.c (remap_dependence_clique): Do not use the
            special clique value of one.
            (maybe_set_dependence_info): Use clique one.
            (clear_dependence_clique): New callback.
            (compute_dependence_clique): Clear clique one from all refs
            before assigning it (again).
    
    From-SVN: r275405

commit d9d74f5051132c4a9882b0b49ebf28df3e6bd49c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 5 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r275392

commit 9c62fcdbb856deed4a782fdcd9c6d1eed7534ccf
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:30:44 2019 +0000

    [Darwin] Make a final check on PIC options.
    
    Final check on PCI options; for Darwin these are not dependent on the PIE
    ones, although PIE does require PIC to support it. Specifically, for Darwin,
    '-fPIC -fno-PIE' should result in the same as '-fno-PIE -fPIC'.
    
    This is a workaround for the situation in which a 'stock-built' GCC is
    unable to bootstrap m32 Darwin unless it's done '-mdynamic-no-pic'. So
    this fixes a bootstrap fail in that case.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-07-07  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_override_options): Make a final check on PIC
            options.
    
    From-SVN: r275386

commit aa915404e798dc0e29603d26d44b40003d612bb1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:27:40 2019 +0000

    [Darwin] Don't jam symbol stubs on for kernel code.
    
    Fix wrong code.
    Symbol stubs are needed only for m32 PPC, code and that is handled in
    rs6000.c.
    Symbol stubs should never have been generated for any X86 kernel-mode
    case.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-07-07  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_override_options): Don't jam symbol stubs
            on for kernel code.
    
    From-SVN: r275385

commit 25df28cc40587caad97096d9c157988ba99ab9b4
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:24:42 2019 +0000

    [Darwin, PPC] Do not use longcall for 64b code.
    
    Fix wrong codegen; the 'native' tools do no emit the longcall in this
    position.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-27  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/rs6000.c (darwin_rs6000_override_options): Do not
            use longcall for 64b code.
    
    From-SVN: r275384

commit ff2eece5485a37b4654c259efc63f474b7193acc
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:21:07 2019 +0000

    [Darwin, PPC, libgcc] Ensure unwinder is built with altivec enabled.
    
    Fix bootstrap fail when building for 10.4.
    
    When libgcc is built on Darwin, it is usually built for the earliest potential
    target (Darwin8, 10.4). Build for that revision default to assuming that the
    processor might be G3 (without vector ops) and there is an outlined function
    used for save/restore that checks whether the processor is G3 or G4+ at run-
    time. However, the unwinder itself needs to be built with the assumption of
    vector usage so that the relevant outlined functions are called.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/t-darwin: Ensure that the unwinder is built with
            altivec enabled.
    
    From-SVN: r275383

commit c5a0440d8fb19f5c8857fd589675cd8eb9b012cc
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:17:41 2019 +0000

    [Darwin, Driver] Fix driver crashes with valid command line input.
    
    Backport Improve processing of macosx-version-min=
    
    For PR target/63810 some improvements were made in the parsing of
    the version string at the point it's used to define the built-in
    __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__. This is fine, but the
    specs processing also uses the version, and specs version-compare
    doesn't like leading zeros on components. This means that while we
    succeed in processing -mmacosx-version-min=010.00002.000099 on compile
    lines, it fails for any other line that uses the value as part of a spec
    (in particular, link lines fail).
    
    To fix this, we need to apply a bit of clean-up to the version that's
    presented to the driver, and push that back into the command line opts.
    
    The value can come from four places:
    1. User-entered on the command line
    2. User-entered as MACOSX_DEPLOYMENT_TARGET= environment var.
    3. Absent those two
    3a For self-hosting systems, look-up from the kernel
    3b For cross-compilers, as a default supplied at configure time.
    
    We apply the clean-up to all 4 (although it shouldn't really be needed
    for the cases under 3).
    
    We also supply a test-case that adapts to the target-version of the
    system, so that the link requirements are met by the SDK in use (if you
    try to link i686-darwin9 on an x86-64-darwin18 SDK, it will fail).
    
    gcc/
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-06-19  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin-driver.c (darwin_driver_init): Fix off-by-one errors
            in computing the number of options to be moved.
    
            Backport from mainline
            2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin-driver.c (validate_macosx_version_min): New.
            (darwin_default_min_version): Cleanup and validate supplied version.
            (darwin_driver_init): Likewise and push cleaned version into opts.
    
    gcc/testsuite/
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-13  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/darwin-minversion-link.c: New test.
    
    From-SVN: r275382

commit 32426744fe6fbdf53a9295f0ac48bb3bf341ffa3
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:11:08 2019 +0000

    [Darwin, fixincludes] Backport fix for PR83531
    
    There is no reasonable chance that the SDKs in question will be re-
    issued, so the only viable solution is a fixincludes.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-08-18  C.G. Dogan  <gcc+cgdogan.00@gmail.com>
                        Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/83531
            * inclhack.def (darwin_api_availability): New; strip leading
            underscores from API_XXXX defines.
            * fixincl.x: Regenerate.
            * tests/base/os/availability.h: New file.
    
    From-SVN: r275381

commit 318c48d7d7a3f10c1bf856282a8a54019c8ca890
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:06:36 2019 +0000

    [Darwin, fixincludes] Backport fix for Darwin9/10 TR1 test fails.
    
    Darwin has had long long functions for some considerable time and these are
    exposed in Darwin8 and Darwin11+ headers. However, for some reason it was
    elected to hide them behind __STRICT_ANSI__ and __STDC_VERSION__ on Darwin9
    and Darwin10. This is a problem for G++/libstdc++ that expects the functions
    to be available for strict ansi (-std=c++14, for example) and without
    defining __STDC_VERSION__. The fix here follows the pattern used in
    Darwin11+ headers where the functions may be explicitly hidden by defining
    __DARWIN_NO_LONG_LONG.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>
    
            * inclhack.def: Replace the complex test using __STRICT_ANSI__ and
            __STDC_VERSION__ with a test using __DARWIN_NO_LONG_LONG.
            Ensure that the top level math.h uses <> to wrap included headers
            rather than "".
            * fixincl.x: Regenerated.
            * tests/base/architecture/ppc/math.h: Update test to include the
            __DARWIN_NO_LONG_LONG case.
    
    From-SVN: r275379

commit 28629080f35dd136897291278141cd2b58ee9b70
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Wed Sep 4 19:01:49 2019 +0000

    [Darwin, fixincludes] Backport fixes Darwin14 header issues.
    
    There are two issues with the Darwin14 (SDK) headers in which unguarded
    advanced syntax elements causes any code including these headers to fail.
    This fixes build fails on Darwin14 systems.
    
    2019-09-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-06-21  Iain Sandoe  <iain@sandoe.co.uk>
    
            * inclhack.def: Guard __has_attribute and __has_extension in
            os/base.h.
            Guard Apple blocks syntax in dispatch/object.h.
            * fixincl.x: Regenerate.
            * tests/base/dispatch/object.h: New file.
            * tests/base/os/base.h: New file.
    
    From-SVN: r275378

commit d586ffcdee2085422d17f85222713671cf2b12d8
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Sep 4 11:56:15 2019 +0000

    backport: re PR tree-optimization/81740 (wrong code at -O3 in both 32-bit and 64-bit modes on x86_64-linux-gnu)
    
    2019-09-04  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-03-26  Bin Cheng  <bin.cheng@linux.alibaba.com>
    
            PR tree-optimization/81740
            * tree-vect-data-refs.c (vect_analyze_data_ref_dependence):
            In case of outer loop vectorization, check for backward dependence
            at the inner loop if outer loop dependence is reversed.
    
            * gcc.dg/vect/pr81740-1.c: New testcase.
            * gcc.dg/vect/pr81740-2.c: Likewise.
    
    From-SVN: r275372

commit f671f26a19dc2755864208ead756b14de2086c8e
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Sep 4 10:51:02 2019 +0000

    backport: re PR tree-optimization/88149 (ICE in vect_transform_stmt since r265959)
    
    2019-09-04  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-11-23  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/88149
            * tree-vect-slp.c (vect_slp_analyze_node_operations): Detect
            the case where there are two different def types for the
            same operand at different operand position in the same stmt.
    
            * g++.dg/torture/pr88149.C: New testcase.
    
    From-SVN: r275370

commit a55f48e0e46398b78ab7c9555a867353a3101068
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Sep 4 08:06:24 2019 +0000

    Backport PRs 87929, 88030, 88415, 88448, 88903, 89698, 90006
    
    2019-09-04  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-04-09  Richard Sandiford  <richard.sandiford@arm.com>
    
            * tree-vect-data-refs.c (vect_get_smallest_scalar_type): Always
            use gimple_expr_type for load and store calls.  Skip over the
            condition argument in a conditional internal function.
            Protect use of TREE_INT_CST_LOW.
    
            2019-04-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90006
            * tree-vect-data-refs.c (vect_get_smallest_scalar_type): Handle
            calls like lrint.
    
            * gcc.dg/vect/bb-slp-pr90006.c: New testcase.
    
            2019-03-14  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89698
            * fold-const.c (operand_equal_p): For INDIRECT_REF check
            that the access types are similar.
    
            * g++.dg/torture/pr89698.C: New testcase.
    
            2019-01-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/88903
            * tree-vect-stmts.c (vectorizable_shift): Verify we see all
            scalar stmts a SLP shift amount is composed of when detecting
            shifts by scalars.
    
            * gcc.dg/vect/pr88903-1.c: New testcase.
            * gcc.dg/vect/pr88903-2.c: Likewise.
    
            2018-12-11  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/88448
            PR middle-end/88415
            * tree-complex.c (update_complex_assignment): Properly transfer
            or clean EH info around gimple_assign_set_rhs_with_ops.
    
            * gcc.dg/gomp/pr88415.c: New testcase.
    
            2018-11-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/88030
            * tree-complex.c (need_eh_cleanup): New global.
            (update_complex_assignment): Mark blocks that need EH update.
            (expand_complex_comparison): Likewise.
            (tree_lower_complex): Allocate and deallocate need_eh_cleanup,
            perform EH cleanup and schedule CFG cleanup if that did anything.
    
            * gcc.dg/tsan/pr88030.c: New testcase.
    
            2018-11-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/87929
            * tree-complex.c (expand_complex_comparison): Clean EH.
    
            * gcc.dg/pr87929.c: New testcase.
    
            2017-07-25  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gimple.c (gimple_assign_set_rhs_with_ops): Do not ask gsi_replace
            to update EH info here.
    
    From-SVN: r275366

commit d2d8c3477c2ffeb14114872a7fc9434a94b85829
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 4 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r275359

commit 73f1f584a3d6e220b32b529c85d2d91a3e866c7f
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 3 19:18:30 2019 +0000

    [Darwin, Objective-C] Don't prepend a sysroot for the gnu-objc headers.
    
    Darwin is able to use two runtimes for objective-c; the
    default is its native NeXT runtime, but also it can build
    code using the gnu-runtime. In order to do this, we have to
    be able to find the gnu-runtime headers (which are installed
    into the compiler's tree).
    
    The process to do this was erroneously prepending the sysroot
    to this when a sysroot is in force. The gnu-runtime headers have
    never been installed in a Darwin (MacOS) SDK so we must make
    sure that they are found local to the compiler.
    
    2019-09-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin-c.c (darwin_register_objc_includes): Do not
            prepend the sysroot when building gnu-runtime header search
            paths.
    
    From-SVN: r275350

commit 825c1d10fa2314bc86a0ce01b0b1ad587ef451c2
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 3 19:13:23 2019 +0000

    [Darwin, Objective-C] Switch Objective-C meta-data sections properly.
    
    We were emitting the directives to switch, but not recording the change
    in varasm. This means that subsequent switches might be omitted (since
    varasm incorrectly concludes that the wrong section is current).
    
    2019-09-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-05-18  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c (darwin_file_end): Use switch_to_section ()
            instead of direct output of the asm.
    
    From-SVN: r275349

commit de935e9c93236d42be620fde0ba39b74097281a8
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 3 19:08:38 2019 +0000

    [Darwin, PPC] Fix .machine directive in vecsave asm.
    
    The asm file fails to build if we use a modern assembler
    which checks that the machine is consistent with the
    filetype. Fixed by adjusting in a similar manner to
    other assembler.
    
    2019-09-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-12  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/rs6000/darwin-vecsave.S: Set .machine appropriately.
    
    From-SVN: r275348

commit 02c8660f119354a1cd0d6b5c4c7406db6c2970f4
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Sep 3 19:02:01 2019 +0000

    [Darwin] Fix lto options.
    
    These had been changed in gcc/gcc.c without being synchronised
    to config/darwin.h leading to some fails.
    
    2019-09-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-22 Iain Sandoe <iain@sandoe.co.uk>
    
            * config/darwin.h (LINK_COMMAND_SPEC_A): Update lto options
            to match gcc/gcc.c.
    
    From-SVN: r275347

commit 23038ad8d9b3e8ea443d4125675c213eec772457
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 3 00:16:22 2019 +0000

    Daily bump.
    
    From-SVN: r275325

commit 77406e353b945084642f52fe756b5e4df1eb6746
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 2 14:14:14 2019 +0000

    Backport PRs 89135, 89296, 89392, 89572, 89710
    
    2019-09-02  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-03-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89710
            * tree-ssa-loop-ch.c (should_duplicate_loop_header_p): Use
            safe_dyn_cast.
    
            * gcc.dg/torture/pr89710.c: New testcase.
    
            2019-03-14  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89572
            * tree-scalar-evolution.c (get_loop_exit_condition): Use
            safe_dyn_cast.
            * tree-ssa-loop-ivcanon.c (canonicalize_loop_induction_variables):
            Use gimple_location_safe.
    
            * gcc.dg/torture/pr89572.c: New testcase.
    
            2019-02-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89296
            * tree-ssa-loop-ch.c (ch_base::copy_headers): Restrict setting
            of no-warning flag to cases that might emit the bogus warning.
    
            * gcc.dg/uninit-pr89296.c: New testcase.
    
            2019-02-21  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89392
            cp/
            * vtable-class-hierarchy.c (vtv_generate_init_routine): Do not
            make symtab process new functions here.
    
            2019-01-31  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89135
            * tree-ssa-phiprop.c (pass_phiprop::execute): Skip blocks
            with abnormal preds.
    
            * gcc.dg/torture/pr89135.c: New testcase.
    
    From-SVN: r275319

commit 19bb99ceaa7d0fba2c792f08b5cbe0dea3bd369b
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 2 12:56:24 2019 +0000

    Backport PRs 90020, 90278, 91126, 91131, 91162, 91200
    
    2019-09-02  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-07-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/91200
            * tree-ssa-phiopt.c (cond_store_replacement): Check we have
            no PHI nodes in middle-bb.
    
            * gcc.dg/torture/pr91200.c: New testcase.
    
            2019-07-15  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/91162
            * tree-cfg.c (move_block_to_fn): When releasing a virtual PHI
            node make sure to replace all uses with something valid.
    
            * gcc.dg/autopar/pr91162.c: New testcase.
    
            2019-07-11  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/91131
            * gimplify.c (gimplify_compound_literal_expr): Force a temporary
            when the object is volatile and we have not cleared it even though
            there are no nonzero elements.
    
            * gcc.target/i386/pr91131.c: New testcase.
    
            2019-07-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/91126
            * tree-ssa-sccvn.c (n_walk_cb_data::push_partial_def): Adjust
            native encoding offset for BYTES_BIG_ENDIAN.
            (vn_reference_lookup_3): Likewise.
    
            * gcc.dg/torture/pr91126.c: New testcase.
    
            2019-07-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/91126
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Adjust
            native encoding offset for BYTES_BIG_ENDIAN.
    
            * gcc.dg/torture/pr91126.c: New testcase.
    
            2019-04-29  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90278
            * tree-ssa-forwprop.c (pass_forwprop::execute): Transfer/clean
            EH on comparison simplification.
    
            * gcc.dg/torture/pr90278.c: New testcase.
    
            2019-04-11  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90020
            * tree-ssa-sccvn.c (vn_reference_may_trap): New function.
            * tree-ssa-sccvn.h (vn_reference_may_trap): Declare.
            * tree-ssa-pre.c (compute_avail): Use it to not put
            possibly trapping references after a call that might not
            return into EXP_GEN.
            * gcse.c (compute_hash_table_work): Do not elide
            marking a block containing a call if the call might not
            return.
    
            * gcc.dg/torture/pr90020.c: New testcase.
    
    From-SVN: r275317

commit d01db3fd34e7df545fada25e601e2c0a1675e04f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:10:08 2019 +0100

    PR middle-end/89303 add testcase for std::enable_shared_from_this
    
            PR middle-end/89303
            * testsuite/20_util/enable_shared_from_this/89303.cc: New test.
    
    From-SVN: r275312

commit 40358976bafcdcf85dd169f9da64412967f2760d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:10:04 2019 +0100

    PR libstdc++/91308 fix constraints on unique_ptr assignment
    
            * testsuite/20_util/unique_ptr/assign/48635_neg.cc: Replace dg-error
            with dg-prune-output for enable_if failure.
            * testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc: Add
            dg-prune-output for enable_if failure.
    
    Backport from mainline
    2019-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/91308
            * include/bits/unique_ptr.h (unique_ptr::__safe_conversion_up): Remove
            constraints on deleter that should only apply to the constructor.
            (unique_ptr<T[], D>::__safe_conversion_up): Likewise.
            (unique_ptr<T[], D>::unique_ptr(unique_ptr<U, D>&&)): Restore
            constraints on deleter here.
            * testsuite/20_util/unique_ptr/assign/91308.cc: New test.
    
    From-SVN: r275311

commit e78c5916125e96ec3ad27468b54fe7fa7cb65c50
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:10:00 2019 +0100

    PR libstdc++/51333 Define recursive_init_error constructor non-inline
    
    The recursive_init_error class is defined in a header, with an inline
    constructor, but the definition of the vtable and destructor are not
    exported from the shared library. With -fkeep-inline-functions the
    constructor gets emitted in user code, and requires the (non-exported)
    vtable. This fails to link.
    
    As far as I can tell, the recursive_init_error class definition was
    moved into <cxxabi.h> so it could be documented with Doxygen, not for
    any technical reason. But now it's there (and documented), somebody
    could be relying on it, by catching that type and possibly performing
    derived-to-base conversions to the std::exception base class. So the
    conservative fix is to leave the class definition in the header but make
    the constructor non-inline. This still allows the type to be caught and
    still defines its base class.
    
    Backport from mainline
    2019-07-29  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/51333
            * libsupc++/cxxabi.h (__gnu_cxx::recursive_init_error): Do not define
            constructor inline.
            * libsupc++/guard_error.cc (__gnu_cxx::recursive_init_error): Define
            constructor.
            * testsuite/18_support/51333.cc: New test.
    
    From-SVN: r275309

commit 9fb59c78376dd74a9aa41541b2599caef873b4e2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:09:55 2019 +0100

    PR libstdc++/90770 fix missing src/debug/Makefile
    
    Backport from mainline
    2019-06-07  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90770
            * src/Makefile.am (stamp-debug): Also test for missing makefile.
            * src/Makefile.in: Regenerate.
    
    From-SVN: r275308

commit 99d2cb921d6e94f06a44407834b7a51ef6f0bf19
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:09:51 2019 +0100

    Backport documentation fixes
    
    Backport from mainline
    2019-05-21  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/shared_ptr.xml: Fix names of lock policy constants.
    
    Backport from mainline
    2019-06-20  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2017.xml: Fix outdated reference to
            C++17 working draft.
    
    Backport from mainline
    2019-05-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2017.xml: Add feature test macro for
            P0040R3.
            * doc/html/*: Regenerate.
    
    From-SVN: r275307

commit 70d9e4e555205283bd50cf1db5fac5cf5afad143
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 2 12:09:45 2019 +0100

    Fix uses of non-reserved names for template parameters
    
    Backport from mainline
    2019-05-17  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/random.h (seed_seq::param): Fix non-reserved name.
            * include/experimental/type_traits (is_detected_exact)
            (is_detected_exact_v): Likewise.
            * testsuite/17_intro/names.cc: Check for more non-reserved names.
            * testsuite/experimental/names.cc: New test.
    
    From-SVN: r275306

commit 9acf8b1fe286acf9c4897611f760e4422d1f9e35
Author: Bin Cheng <bin.cheng@linux.alibaba.com>
Date:   Mon Sep 2 10:10:44 2019 +0000

    backport: re PR tree-optimization/91137 (Wrong code with -O3)
    
            Backport from mainline
            2019-07-18  Bin Cheng  <bin.linux@linux.alibaba.com>
    
            PR tree-optimization/91137
            * tree-ssa-loop-ivopts.c (struct ivopts_data): New field.
            (tree_ssa_iv_optimize_init, alloc_iv, tree_ssa_iv_optimize_finalize):
            Init, use and fini the above new field.
            (determine_base_object_1): New function.
            (determine_base_object): Reimplement using walk_tree.
    
            2019-07-18  Bin Cheng  <bin.linux@linux.alibaba.com>
    
            PR tree-optimization/91137
            * gcc.c-torture/execute/pr91137.c: New test.
    
    From-SVN: r275304

commit 7aeb97d4e00fe149638809f58fc24dfb4e640571
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 2 00:16:24 2019 +0000

    Daily bump.
    
    From-SVN: r275287

commit 3652c5e66c242ab67430e438cf0b4440b6826c0f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 1 00:16:28 2019 +0000

    Daily bump.
    
    From-SVN: r275261

commit a93bc7cc307b30b863ecf2b585b597814c8532f6
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Sat Aug 31 21:01:52 2019 +0200

    rs6000: Fix darn-3.c for GCC 8 and GCC 7
    
    Apparently I didn't properly test the testcase backport to GCC 8 and
    GCC 7.  This makes it not fail there.
    
    
            PR target/91481
            * gcc.target/powerpc/darn-3.c: Fix testcase.
    
    From-SVN: r275245

commit c970ce60483b92434d45bb0230965b5874f090ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 31 00:16:32 2019 +0000

    Daily bump.
    
    From-SVN: r275232

commit f2814a59d044bf71bf30c26e3ec9c378c385af8d
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Aug 30 16:44:17 2019 +0000

    Backport PRs 89677, 90071, 90194, 90213, 90474, 90637, 90930
    
    2019-08-30  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-05-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90637
            * tree-ssa-sink.c (statement_sink_location): Honor the
            computed sink location for single-uses.
    
            * gcc.dg/gomp/pr90637.c: New testcase.
    
            2019-06-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90930
            * tree-ssa-reassoc.c (rewrite_expr_tree_parallel): Set visited
            flag on new stmts to avoid re-processing them.
    
            2019-05-15  Richard Biener  <rguenther@suse.de>
    
            PR c/90474
            * c-common.c (c_common_mark_addressable_vec): Also mark
            a COMPOUND_LITERAL_EXPR_DECL addressable similar to
            c_mark_addressable.
    
            2019-04-25  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/90194
            * match.pd: Add pattern to simplify view-conversion of an
            empty constructor.
    
            * g++.dg/torture/pr90194.C: New testcase.
    
            2019-04-24  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/90213
            * gimple-fold.c (fold_const_aggregate_ref_1): Do multiplication
            by size and BITS_PER_UNIT on poly-wide-ints.
    
            2019-04-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/90071
            * tree-ssa-reassoc.c (init_range_entry): Do not pick up
            abnormal operands from def stmts.
    
            * gcc.dg/torture/pr90071.c: New testcase.
    
            2019-03-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89677
            * tree-scalar-evolution.c (simplify_peeled_chrec): Do not
            throw FP expressions at tree-affine.
    
            * gcc.dg/torture/pr89677.c: New testcase.
    
    From-SVN: r275208

commit 3ae1245ec8fd234fc3f2d0ce1723309728897ee3
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Aug 30 16:25:36 2019 +0200

    backport: re PR target/91481 (POWER9 "DARN" RNG intrinsic produces repeated output (CVE-2019-15847))
    
            Backport from trunk
            2019-08-23  Segher Boessenkool  <segher@kernel.crashing.org>
    
    gcc/testsuite/
            PR target/91481
            * gcc.target/powerpc/darn-3.c: New testcase.
    
    From-SVN: r275186

commit 7b382b64cb6f355f3fb501998d2e3f130f474613
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Aug 30 16:23:55 2019 +0200

    backport: re PR target/91481 (POWER9 "DARN" RNG intrinsic produces repeated output (CVE-2019-15847))
    
            Backport from trunk
            2019-08-22  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/91481
            * config/rs6000/rs6000.md (unspec): Delete UNSPEC_DARN, UNSPEC_DARN_32,
            and UNSPEC_DARN_RAW.
            (unspecv): New enumerator values UNSPECV_DARN, UNSPECV_DARN_32, and
            UNSPECV_DARN_RAW.
            (darn_32): Use an unspec_volatile, and UNSPECV_DARN_32.
            (darn_raw): Use an unspec_volatile, and UNSPECV_DARN_RAW.
            (darn): Use an unspec_volatile, and UNSPECV_DARN.
    
    From-SVN: r275185

commit d08d1afd311b0d17cb140e449026ba76a29c4417
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Aug 30 16:22:48 2019 +0200

    backport: altivec.md (unspec): Delete UNSPEC_DARN...
    
            Backport from trunk
            2019-08-22  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * config/rs6000/altivec.md (unspec): Delete UNSPEC_DARN, UNSPEC_DARN_32,
            UNSPEC_DARN_RAW, UNSPEC_CMPRB, UNSPEC_CMPRB2, UNSPEC_CMPEQB; move to...
            * config/rs6000/rs6000.md (unspec): ... here.
            * config/rs6000/altivec.md (darn_32, darn_raw, darn, cmprb,
            *cmprb_internal, setb_signed, setb_unsigned, cmprb2, *cmprb2_internal,
            cmpeqb, *cmpeqb_internal): Delete, move to...
            * config/rs6000/rs6000.md (darn_32, darn_raw, darn, cmprb,
            *cmprb_internal, setb_signed, setb_unsigned, cmprb2, *cmprb2_internal,
            cmpeqb, *cmpeqb_internal): ... here.
    
    From-SVN: r275184

commit 7f2a425e2cd1c3b5a5a332b7b711498de225991a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:49:27 2019 +0200

    backport: re PR target/91150 (wrong code with -O -mavx512vbmi due to wrong writemask)
    
            Backported from mainline
            2019-07-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/91150
            * config/i386/i386.c (expand_vec_perm_blend): Change mask type
            from unsigned to unsigned HOST_WIDE_INT.  For E_V64QImode cast
            comparison to unsigned HOST_WIDE_INT before shifting it left.
    
            * gcc.target/i386/avx512bw-pr91150.c: New test.
    
    From-SVN: r275164

commit 9c273107defa3c2952a26230620f5f114c368793
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:48:57 2019 +0200

    backport: re PR middle-end/78884 ([7/8] ICE when gimplifying VLA in OpenMP SIMD region)
    
            Backported from mainline
            2019-07-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78884
            * gimplify.c (struct gimplify_omp_ctx): Add add_safelen1 member.
            (gimplify_bind_expr): If seeing TREE_ADDRESSABLE VLA inside of simd
            loop body, set ctx->add_safelen1 instead of making it GOVD_PRIVATE.
            (gimplify_adjust_omp_clauses): Add safelen (1) clause if
            ctx->add_safelen1 is set.
    
            * gcc.dg/gomp/pr78884.c: New test.
    
    From-SVN: r275163

commit 881212bb8f89703c4a636c692a731e04eb4c83d3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:48:18 2019 +0200

    backport: re PR rtl-optimization/90756 (g++ ICE in convert_move, at expr.c:218 on i686 and s390x)
    
            Backported from mainline
            2019-07-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/90756
            * explow.c (promote_ssa_mode): Always use TYPE_MODE, don't bypass it
            for VECTOR_TYPE_P.
    
            * gcc.dg/pr90756.c: New test.
    
    From-SVN: r275162

commit 06ed0eeddb235a55614d46cc66a78a6f3dcf6b29
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:47:28 2019 +0200

    backport: re PR sanitizer/90954 (ICE: combining undefined behavior sanitizer with openmp)
    
            Backported from mainline
            2019-06-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/90954
            * c-omp.c (c_finish_omp_atomic): Allow tree_invariant_p in addition
            to SAVE_EXPR in first operand of a COMPOUND_EXPR.
    
            * c-c++-common/gomp/pr90954.c: New test.
    
    From-SVN: r275161

commit 630bb153d6a64d274087f4a60c848da3ce54df86
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:46:52 2019 +0200

    backport: re PR c++/90950 (OpenMP clause handling rejecting references to incomplete types in templates)
    
            Backported from mainline
            2019-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/90950
            * semantics.c (finish_omp_clauses): Don't reject references to
            incomplete types if processing_template_decl.
    
            * g++.dg/gomp/lastprivate-1.C: New test.
    
    From-SVN: r275160

commit 2dbbeed4a74095923e6824efd863c59a1a4694fb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:46:13 2019 +0200

    backport: re PR c/90760 (ICE on attributes section and alias in set_section, at symtab.c:1573)
    
            Backported from mainline
            2019-06-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/90760
            * symtab.c (symtab_node::set_section): Allow being called on aliases
            as long as they aren't analyzed yet.
    
            * gcc.dg/pr90760.c: New test.
    
    From-SVN: r275159

commit ac6b16bb3b0aec371d80cc98b4296ad918f65b82
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:45:31 2019 +0200

    backport: re PR libgomp/90585 (libgomp hsa plugin ftbfs in the x32 multilib variant)
    
            Backported from mainline
            2019-05-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/90585
            * plugin/plugin-hsa.c (print_kernel_dispatch, run_kernel): Use PRIu64
            macro instead of "lu".
            (release_kernel_dispatch): Likewise.  Cast shadow->debug to uintptr_t
            before casting to void *.
    
    From-SVN: r275158

commit 973b245aacd09befbebd4c915e2a59b4607724d5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:45:01 2019 +0200

    backport: re PR pch/90326 (Using any precompiled header breaks definition of FLT_MAX)
    
            Backported from mainline
            2019-05-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR pch/90326
    cp/
            * config-lang.in (gtfiles): Remove c-family/c-lex.c, add
            c-family/c-cppbuiltin.c.
    objcp/
            * config-lang.in (gtfiles): Remove c-family/c-lex.c, add
            c-family/c-cppbuiltin.c.
    testsuite/
            * g++.dg/pch/pr90326.C: New test.
            * g++.dg/pch/pr90326.Hs: New file.
    
    From-SVN: r275157

commit 5aaa64db0a597f3ac549e5b00bfb4324007e9e81
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:44:03 2019 +0200

    backport: re PR middle-end/90139 (ICE in emit_block_move_hints, at expr.c:1601)
    
            Backported from mainline
            2019-04-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/90139
            * tree-outof-ssa.c (get_temp_reg): If reg_mode is BLKmode, return
            assign_temp instead of gen_reg_rtx.
    
            * gcc.c-torture/compile/pr90139.c: New test.
    
    From-SVN: r275156

commit 57bc4de20a60befb462b0b91850eeba186515bfa
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:43:04 2019 +0200

    backport: re PR target/90811 ([nvptx] ptxas error on OpenMP offloaded code)
    
            Backported from mainline
            2019-06-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/90811
            * config/nvptx/nvptx.c (nvptx_output_softstack_switch): Use and.b%d
            instead of and.u%d.
    
            * testsuite/libgomp.c/pr90811.c: New test.
    
    From-SVN: r275155

commit 03d41f75f96fba64c81f9db2608668ef42a1b77b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:42:14 2019 +0200

    backport: lang.opt (ftail-call-workaround=): Fix a typo - lenghts to lengths.
    
            Backported from mainline
            2019-05-30  Jakub Jelinek  <jakub@redhat.com>
    
            * lang.opt (ftail-call-workaround=): Fix a typo - lenghts to lengths.
    
    From-SVN: r275154

commit 01790bdaee752f49759fdf4ace4f7ca93cf28290
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:41:43 2019 +0200

    backport: re PR fortran/90329 (Incompatibility between gfortran and C lapack calls)
    
            Backported from mainline
            2019-05-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/90329
            * lto-streamer.h (LTO_minor_version): Bump to 1.
    
            Backported from mainline
            2019-05-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/90329
            * tree-core.h (struct tree_decl_common): Document
            decl_nonshareable_flag for PARM_DECLs.
            * tree.h (DECL_HIDDEN_STRING_LENGTH): Define.
            * calls.c (expand_call): Don't try tail call if caller
            has any DECL_HIDDEN_STRING_LENGTH PARM_DECLs that are or might be
            passed on the stack and callee needs to pass any arguments on the
            stack.
            * tree-streamer-in.c (unpack_ts_decl_common_value_fields): Use
            else if instead of series of mutually exclusive ifs.  Handle
            DECL_HIDDEN_STRING_LENGTH for PARM_DECLs.
            * tree-streamer-out.c (pack_ts_decl_common_value_fields): Likewise.
    
            * lang.opt (fbroken-callers): Remove.
            (ftail-call-workaround, ftail-call-workaround=): New options.
            * gfortran.h (struct gfc_namespace): Add implicit_interface_calls.
            * interface.c (gfc_procedure_use): Set implicit_interface_calls
            for calls to implicit interface procedures.
            * trans-decl.c (create_function_arglist): Use flag_tail_call_workaround
            instead of flag_broken_callers.  If it is not 2, also require
            sym->ns->implicit_interface_calls.
            * invoke.texi (fbroken-callers): Remove documentation.
            (ftail-call-workaround, ftail-call-workaround=): Document.
    
            2019-05-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/90329
            * invoke.texi: Document -fbroken-callers.
            * lang.opt: Add -fbroken-callers.
            * trans-decl.c (create_function_arglist): Only set
            DECL_HIDDEN_STRING_LENGTH if flag_broken_callers is set.
    
            2019-05-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/90329
            * trans-decl.c (create_function_arglist): Set
            DECL_HIDDEN_STRING_LENGTH on hidden string length PARM_DECLs if
            len is constant.
    
    From-SVN: r275153

commit 2f3f6ecaff26e0610aa0c4d3506c74a782e57622
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:39:50 2019 +0200

    backport: re PR target/90187 (ICE in extract_insn, at recog.c:2304 x86_64)
    
            Backported from mainline
            2019-04-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/90187
            * config/i386/i386.c (ix86_expand_sse_fp_minmax): Force if_true into
            a register if both if_true and if_false are MEMs.
    
            * g++.dg/opt/pr90187.C: New test.
    
    From-SVN: r275152

commit 74870a4e38a1d829748a404c836ca3f31767a0e4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:39:09 2019 +0200

    backport: re PR tree-optimization/90208 (error: EH landing pad label)
    
            Backported from mainline
            2019-04-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/90208
            * tree-cfg.c (remove_bb): Move forced labels from removed bbs
            after labels of new_bb, not before them.
    
            * gcc.dg/tsan/pr90208-2.c: New test.
    
    From-SVN: r275151

commit 79797c978183ab550eb109ea4e70ad4d214aa482
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:38:31 2019 +0200

    backport: re PR c++/90108 (ICE: Segmentation fault (in c_tree_chain_next))
    
            Backported from mainline
            2019-04-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/90108
            * c-decl.c (merge_decls): If remove is main variant and
            DECL_ORIGINAL_TYPE is some other type, remove a DECL_ORIGINAL_TYPE
            variant that has newdecl as TYPE_NAME if any.
    
            * decl.c (duplicate_decls): If remove is main variant and
            DECL_ORIGINAL_TYPE is some other type, remove a DECL_ORIGINAL_TYPE
            variant that has newdecl as TYPE_NAME if any.
    
            * c-c++-common/pr90108.c: New test.
    
    From-SVN: r275150

commit 08924d873be7290182caf0ae445222e668b56344
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:37:28 2019 +0200

    backport: re PR rtl-optimization/90082 (ICE in delete_unmarked_insns, at dce.c:653)
    
            Backported from mainline
            2019-04-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/90082
            * dce.c (can_delete_call): New function.
            (deletable_insn_p, mark_insn): Use it.
    
            * gcc.dg/pr90082.c: New test.
    
    From-SVN: r275149

commit cffcee79a1ef5e16597eb156e41eabdff3770975
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:36:49 2019 +0200

    backport: re PR tree-optimization/90090 (ICE in mark_reachable_handlers, at tree-eh.c:3938 since r219202)
    
            Backported from mainline
            2019-04-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/90090
            * tree-ssa-math-opts.c (is_division_by): Ignore divisions that can
            throw internally.
    
            * g++.dg/opt/pr90090.C: New test.
    
    From-SVN: r275148

commit a779fe47e602f02495793bb7d9c7d84e925fedfa
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:36:05 2019 +0200

    backport: re PR c/89933 (ICE in merge_decls, at c/c-decl.c:2517)
    
            Backported from mainline
            2019-04-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/89933
            * c-decl.c (merge_decls): When newdecl's type is its main variant,
            don't try to remove it from the variant list, but instead assert
            it has no variants.
    
            * decl.c (duplicate_decls): When newdecl's type is its main variant,
            don't try to remove it from the variant list, but instead assert
            it has no variants.
    
            * c-c++-common/pr89933.c: New test.
    
    From-SVN: r275147

commit a460e19cedd852a33ef440be455274ed887b4f91
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:35:05 2019 +0200

    backport: re PR middle-end/89998 (ICE: verify_gimple failed in printf-return-value)
    
            Backported from mainline
            2019-04-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/89998
            * gimple-ssa-sprintf.c (try_substitute_return_value): Use lhs type
            instead of integer_type_node if possible, don't add ranges if return
            type is not compatible with int.
            * gimple-fold.c (gimple_fold_builtin_sprintf,
            gimple_fold_builtin_snprintf): Use lhs type instead of hardcoded
            integer_type_node.
    
            * gcc.c-torture/compile/pr89998-1.c: New test.
            * gcc.c-torture/compile/pr89998-2.c: New test.
    
    From-SVN: r275146

commit 8247363d9ad45f945d5145968d286bd23ba8080d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:34:19 2019 +0200

    backport: re PR sanitizer/89869 (-fsanitize=undefined miscompilation)
    
            Backported from mainline
            2019-03-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/89869
            * typeck.c: Include gimplify.h.
            (cp_build_modify_expr) <case COND_EXPR>: Unshare rhs before using it
            for second time.  Formatting fixes.
    
            * g++.dg/ubsan/vptr-14.C: New test.
    
    From-SVN: r275145

commit da2620146d5d918106371eb92544367c575d50e2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:33:40 2019 +0200

    backport: re PR c/89872 (GCC does not generate read access to volatile compound literal)
    
            Backported from mainline
            2019-03-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/89872
            * gimplify.c (gimplify_compound_literal_expr): Don't optimize a
            non-addressable complit into its initializer if it is volatile.
    
            * gcc.dg/tree-ssa/pr89872.c: New test.
    
    From-SVN: r275144

commit 47687c5d7192a303c7a76fb59da4d05d22b32396
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:33:00 2019 +0200

    backport: re PR middle-end/89621 (ICE with allocatable character and openmp)
    
            Backported from mainline
            2019-03-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89621
            * tree-inline.h (struct copy_body_data): Add
            dont_remap_vla_if_no_change flag.
            * tree-inline.c (remap_type_3, remap_type_2): New functions.
            (remap_type): Don't remap vla types if id->dont_remap_vla_if_no_change
            and remap_type_2 returns false.
            * omp-low.c (new_omp_context): Set ctx->cb.dont_remap_vla_if_no_change.
    
            * gfortran.dg/gomp/pr89621.f90: New test.
    
    From-SVN: r275143

commit 3e4b4ded2f5a0f3a1d90dbc4430f8731c0584774
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:32:15 2019 +0200

    backport: re PR c++/89796 (Incorrect warning generated with OpenMP atomic capture)
    
            Backported from mainline
            2019-03-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89796
            * semantics.c (finish_omp_atomic): Add warning_sentinel for
            -Wunused-value around finish_expr_stmt call.
    
            * g++.dg/gomp/pr89796.C: New test.
            * gcc.dg/gomp/pr89796.c: New test.
    
    From-SVN: r275142

commit 87f03d06917f3df72997aa957f32e817062f7bec
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:31:21 2019 +0200

    backport: re PR c++/60702 (thread_local initialization)
    
            Backported from mainline
            2019-03-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/60702
            * g++.dg/tls/thread_local11.C: Remove scan-tree-dump-times directives
            for _ZTH* calls.
            * g++.dg/tls/thread_local11a.C: New test.
    
    From-SVN: r275141

commit 249dc8418e2f2ef19e02d68e52f9b88619fd7998
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:30:48 2019 +0200

    backport: re PR c++/60702 (thread_local initialization)
    
            Backported from mainline
            2019-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/60702
            * cp-tree.h (get_tls_wrapper_fn): Remove declaration.
            (maybe_get_tls_wrapper_call): Declare.
            * decl2.c (get_tls_wrapper_fn): Make static.
            (maybe_get_tls_wrapper_call): New function.
            * typeck.c (build_class_member_access_expr): Handle accesses to TLS
            variables.
            * semantics.c (finish_qualified_id_expr): Likewise.
            (finish_id_expression_1): Use maybe_get_tls_wrapper_call.
            * pt.c (tsubst_copy_and_build): Likewise.
    
            * g++.dg/tls/thread_local11.C: New test.
            * g++.dg/tls/thread_local11.h: New test.
            * g++.dg/tls/thread_local12a.C: New test.
            * g++.dg/tls/thread_local12b.C: New test.
            * g++.dg/tls/thread_local12c.C: New test.
            * g++.dg/tls/thread_local12d.C: New test.
            * g++.dg/tls/thread_local12e.C: New test.
            * g++.dg/tls/thread_local12f.C: New test.
            * g++.dg/tls/thread_local12g.C: New test.
            * g++.dg/tls/thread_local12h.C: New test.
            * g++.dg/tls/thread_local12i.C: New test.
            * g++.dg/tls/thread_local12j.C: New test.
            * g++.dg/tls/thread_local12k.C: New test.
            * g++.dg/tls/thread_local12l.C: New test.
    
    From-SVN: r275140

commit ffaf40c06df8ab043024fcfd3de7f45985b2aed1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:29:13 2019 +0200

    backport: re PR c++/89767 (ICE with tuple and optimization)
    
            Backported from mainline
            2019-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89767
            * parser.c (cp_parser_lambda_introducer): Add ids and first_capture_id
            variables, check for duplicates in this function.
            * lambda.c (add_capture): Don't check for duplicates nor use
            IDENTIFIER_MARKED.
            (register_capture_members): Don't clear IDENTIFIER_MARKED here.
    
            * g++.dg/cpp1y/lambda-init18.C: New test.
            * g++.dg/cpp1y/lambda-init19.C: New test.
            * g++.dg/cpp1y/pr89767.C: New test.
    
    From-SVN: r275139

commit a3b2e69ae42c70e0c7f634406369095804e96016
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:28:22 2019 +0200

    backport: re PR target/89752 (ICE in emit_move_insn, at expr.c:3723)
    
            Backported from mainline
            2019-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89752
            * lra-constraints.c (process_alt_operands) <reg>: For BLKmode, don't
            update this_alternative nor this_alternative_set.
    
    From-SVN: r275138

commit 862a7d828de9fdc3ba2d48bcfbfc113d66d3d5c5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:27:50 2019 +0200

    backport: re PR rtl-optimization/89768 (ICE in compare_and_jump_seq at loop-unroll.c:838)
    
            Backported from mainline
            2019-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/89768
            * loop-unroll.c (unroll_loop_constant_iterations): Use gen_int_mode
            instead of GEN_INT.
            (unroll_loop_runtime_iterations): Likewise.
    
    From-SVN: r275137

commit 6b8d77b92690197285b7999ed4743d0d7ed6a31a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:27:21 2019 +0200

    backport: re PR target/89752 (ICE in emit_move_insn, at expr.c:3723)
    
            Backported from mainline
            2019-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89752
            * gimplify.c (gimplify_asm_expr): For output argument with
            TREE_ADDRESSABLE type, clear allows_reg if it allows memory, otherwise
            diagnose error.
    
            * g++.dg/ext/asm15.C: Check for particular diagnostic wording.
            * g++.dg/ext/asm16.C: Likewise.
            * g++.dg/ext/asm17.C: New test.
    
    From-SVN: r275136

commit 40fadf539936fd1be85e64096b696d25f2fb8005
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:26:30 2019 +0200

    backport: re PR target/89726 (Incorrect inlined version of 'ceil' for 32bit)
    
            Backported from mainline
            2019-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89726
            * config/i386/i386.c (ix86_expand_floorceildf_32): In ceil
            compensation use x2 += 1 instead of x2 -= -1 and when honoring
            signed zeros, do another copysign after the compensation.
    
            * gcc.target/i386/fpprec-1.c (x): Add 6 new constants.
            (expect_round, expect_rint, expect_floor, expect_ceil, expect_trunc):
            Add expected results for them.
    
    From-SVN: r275135

commit 2d51e5a7af9a1625a56c272ac1c1b602ae414978
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:25:43 2019 +0200

    backport: re PR c/89734 (const qualifier on return type not erased inside __typeof__)
    
            Backported from mainline
            2019-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/89734
            * c-decl.c (grokdeclarator): Call c_build_qualified_type on function
            return type even if quals_used is 0.  Formatting fixes.
    
            * gcc.dg/pr89734.c: New test.
    
    From-SVN: r275134

commit 59ab6dc89f8f0e76d3e9419aa11e1f26104e4ef0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:20:12 2019 +0200

    backport: re PR debug/89704 (ICE in add_const_value_attribute, at dwarf2out.c:19685)
    
            Backported from mainline
            2019-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/89704
            * dwarf2out.c (add_const_value_attribute): Return false for MINUS,
            SIGN_EXTEND and ZERO_EXTEND.
    
            * gcc.dg/debug/pr89704.c: New test.
    
    From-SVN: r275133

commit fa03ad48fe352340b987a80d72576c504c462af7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:19:33 2019 +0200

    backport: re PR rtl-optimization/89679 (wrong code with -Og -frerun-cse-after-loop -fno-tree-fre)
    
            Backported from mainline
            2019-03-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/89679
            * expmed.c (expand_mult_const): Don't add a REG_EQUAL note if it
            would contain a paradoxical SUBREG.
    
            * gcc.dg/pr89679.c: New test.
    
    From-SVN: r275132

commit 15a04f92b313735a4f105f4a3b3ddec2098aa057
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:18:54 2019 +0200

    backport: re PR tree-optimization/89703 (ICE in compare_values_warnv, at tree-vrp.c:997)
    
            Backported from mainline
            2019-03-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/89703
            * tree-ssa-strlen.c (valid_builtin_call): Punt if stmt call types
            aren't compatible also with builtin_decl_explicit.  Check pure
            or non-pure status of BUILT_IN_STR{{,N}CMP,N{LEN,{CAT,CPY}{,_CHK}}}
            and BUILT_IN_STPNCPY{,_CHK}.
    
            * gcc.c-torture/compile/pr89703-1.c: New test.
            * gcc.c-torture/compile/pr89703-2.c: New test.
    
    From-SVN: r275131

commit de06c171354154f4c83d7b35dfc8d4b6b284e982
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:18:01 2019 +0200

    backport: re PR c++/89512 (ICE in get_expr_operands, at tree-ssa-operands.c:882)
    
            Backported from mainline
            2019-03-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89512
            * semantics.c (finish_qualified_id_expr): Reject variable templates.
    
            * g++.dg/cpp1y/var-templ61.C: New test.
    
    From-SVN: r275130

commit b56c01ffe727ba0e55230e208f404e607a73a691
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:17:22 2019 +0200

    backport: re PR middle-end/88588 (ICE in make_decl_rtl, at varasm.c:1329)
    
            Backported from mainline
            2019-03-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/88588
            * omp-simd-clone.c (ipa_simd_modify_stmt_ops): Handle PHI args.
            (ipa_simd_modify_function_body): Handle PHIs.
    
            * c-c++-common/gomp/pr88588.c: New test.
    
    From-SVN: r275129

commit eff13a51b2ff1b75e8a8b60b3fccd4c76ee72522
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:16:43 2019 +0200

    backport: re PR middle-end/89663 (ICE in expand_builtin_int_roundingfn_2, at builtins.c:2831)
    
            Backported from mainline
            2019-03-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89663
            * builtins.c (expand_builtin_int_roundingfn,
            expand_builtin_int_roundingfn_2): Return NULL_RTX instead of
            gcc_unreachable if validate_arglist fails.
    
            * gcc.c-torture/compile/pr89663-1.c: New test.
            * gcc.c-torture/compile/pr89663-2.c: New test.
    
    From-SVN: r275128

commit 5a9111961c44840cd1d58eed15d4e2418abd34ce
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:15:50 2019 +0200

    backport: re PR fortran/89651 (OpenMP private array uninitialized warning with -O flag)
    
            Backported from mainline
            2019-03-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/89651
            * trans-openmp.c (gfc_omp_clause_default_ctor): Set TREE_NO_WARNING
            on decl if adding COND_EXPR for allocatable.
            (gfc_omp_clause_copy_ctor): Set TREE_NO_WARNING on dest.
    
            * gfortran.dg/gomp/pr89651.f90: New test.
    
    From-SVN: r275127

commit a881d03a67d03b08222d854a650538988a3b6f77
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:14:46 2019 +0200

    backport: re PR c/88568 ('dllimport' no longer implies 'extern' in C)
    
            Backported from mainline
            2019-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/88568
            * tree.c (handle_dll_attribute): Don't clear TREE_STATIC for
            dllimport on VAR_DECLs with RECORD_TYPE or UNION_TYPE DECL_CONTEXT.
    
            * g++.dg/other/pr88568.C: New test.
    
    From-SVN: r275126

commit c349eb3a4edb4161f4e623e2416c2f19fb4392c8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:14:10 2019 +0200

    backport: re PR c++/82075 (structured binding fails with empty base class)
    
            Backported from mainline
            2019-03-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82075
            * g++.dg/cpp1z/decomp49.C: New test.
    
    From-SVN: r275125

commit ffe2051bbad1b9d7afaf654776f2f45bdf8d566b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:13:40 2019 +0200

    backport: re PR c++/87148 (backward compatibility issue  to take char [] as incomplete type)
    
            Backported from mainline
            2019-03-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/87148
            * init.c (build_value_init_noctor): Ignore flexible array members.
    
            * g++.dg/ext/flexary34.C: New test.
    
    From-SVN: r275124

commit bc36366b4686eabe8333c4f45f38d0c2369a5d6b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:12:56 2019 +0200

    backport: re PR target/89587 (gcc's rs6000 configuration unconditionally sets MULTIARCH_DIRNAME, even when multiarch is disabled)
    
            Backported from mainline
            2019-03-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89587
            * config/rs6000/t-linux (MULTIARCH_DIRNAME): Set to non-empty only
            if_multiarch.
    
    From-SVN: r275123

commit 32ef02731361b79d9726f7372717e7a7cfba2943
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:12:24 2019 +0200

    backport: re PR middle-end/89590 (ICE in maybe_emit_free_warning)
    
            Backported from mainline
            2019-03-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89590
            * builtins.c (maybe_emit_free_warning): Punt if free doesn't have
            exactly one argument.
    
            * gcc.dg/pr89590.c: New test.
    
    From-SVN: r275122

commit 920647ea4171b490e35364c6725066c3d2e066fd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:11:38 2019 +0200

    backport: re PR c/89521 (ICE in expand_builtin_int_roundingfn, at builtins.c:2697)
    
            Backported from mainline
            2019-02-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/89521
            * gcc.dg/pr89521-1.c: New test.
            * gcc.dg/pr89521-2.c: New test.
    
    From-SVN: r275121

commit 6921a7ba09e2dfb55f7cd45f1a0bce266edd65d5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:11:06 2019 +0200

    backport: re PR c/89520 (ICE tree check: accessed operand 4 of call_expr with 3 operands in convert_to_integer_1, at convert.c:668)
    
            Backported from mainline
            2019-02-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/89520
            * convert.c (convert_to_real_1, convert_to_integer_1): Punt for
            builtins if they don't have a single scalar floating point argument.
            Formatting fixes.
    
            * gcc.dg/pr89520-1.c: New test.
            * gcc.dg/pr89520-2.c: New test.
    
    From-SVN: r275120

commit f40240efc5a4b4b3184f76ab117f9854386ba2a9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:10:10 2019 +0200

    backport: re PR c++/89403 (ICE in maybe_clone_body, at cp/optimize.c:693)
    
            Backported from mainline
            2019-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89403
            * decl2.c (c_parse_final_cleanups): Move TREE_ASM_WRITTEN setting
            for flag_syntax_only from here...
            * semantics.c (expand_or_defer_fn_1): ... here.
    
            * g++.dg/cpp0x/pr89403.C: New test.
    
    From-SVN: r275119

commit 9f2c4b6fe002ce28e3a584e4fa1afc858f5d6589
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:08:46 2019 +0200

    backport: re PR middle-end/89412 (gcc ICE in simplify_subreg, at simplify-rtx.c:6273 on i686-linux-gnu)
    
            Backported from mainline
            2019-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89412
            * expr.c (expand_assignment): If result is a MEM, use change_address
            instead of simplify_gen_subreg.
    
            * gcc.c-torture/compile/pr89412.c: New test.
    
    From-SVN: r275118

commit 752b667e800148e05fa4793cf7e525069172422c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:08:04 2019 +0200

    backport: re PR middle-end/89091 (ICE: Segmentation fault (in tree_class_check))
    
            Backported from mainline
            2019-02-20  Jakub Jelinek  <jakub@redhat.com>
                        David Malcolm  <dmalcolm@redhat.com>
    
            PR middle-end/89091
            * fold-const.c (decode_field_reference): Return NULL_TREE if
            lang_hooks.types.type_for_size returns NULL.  Check it before
            overwriting *exp_.  Use return NULL_TREE instead of return 0.
    
            * gcc.dg/torture/pr89091.c: New test.
    
    From-SVN: r275117

commit 20a5373742b6dd475ceda8a1df42575a634b0593
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Aug 30 14:07:12 2019 +0200

    backport: re PR tree-optimization/88074 (g++ hangs on math expression)
    
            Backported from mainline
            2019-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/88074
            PR middle-end/89415
            * toplev.c (do_compile): Double the emin/emax exponents to workaround
            buggy mpc_norm.
    
            2019-02-19  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/88074
            * toplev.c (do_compile): Initialize mpfr's exponent range
            based on available float modes.
    
            2019-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/88074
            PR middle-end/89415
            * gcc.dg/pr88074-2.c: New test.
    
            2019-02-19  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/88074
            * gcc.dg/pr88074.c: New testcase.
    
    From-SVN: r275116

commit 75d9a171c9f6963dfbdb4c4db064c3f345414a84
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:05:07 2019 +0200

    backport: re PR target/89361 (s390 broken without S390_USE_TARGET_ATTRIBUTE, likely since r257489)
    
            Backported from mainline
            2019-02-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89361
            * config/s390/s390.c (s390_indirect_branch_attrvalue,
            s390_indirect_branch_settings): Define unconditionally.
            (s390_set_current_function): Likewise, but guard the whole body except
            the s390_indirect_branch_settings call with
            #if S390_USE_TARGET_ATTRIBUTE.
            (TARGET_SET_CURRENT_FUNCTION): Redefine unconditionally.
    
    From-SVN: r275115

commit 10868b44bde0e445871dfd18120dd29fba0801e4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:02:30 2019 +0200

    backport: re PR middle-end/89303 (memory leak with shared_ptr and enable_shared_from_this)
    
            Backported from mainline
            2019-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89303
            * g++.dg/torture/pr89303.C: Move everything from std namespace to my
            namespace.
    
    From-SVN: r275114

commit b84dee85b958bb342a205a23a34c6447df707ad6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:02:02 2019 +0200

    backport: re PR tree-optimization/89278 (ICE in gimplify_modify_expr, at gimplify.c:5821)
    
            Backported from mainline
            2019-02-15  Richard Biener  <rguenther@suse.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/89278
            * tree-loop-distribution.c: Include tree-eh.h.
            (generate_memset_builtin, generate_memcpy_builtin): Call
            rewrite_to_non_trapping_overflow on builtin->size before passing it
            to force_gimple_operand_gsi.
    
            * gcc.dg/pr89278.c: New test.
    
    From-SVN: r275113

commit 901cdebac4889159a62c33dadf46d022cdaec4d8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 14:01:02 2019 +0200

    backport: re PR other/89342 (ICE in maybe_default_option, at opts.c:347)
    
            Backported from mainline
            2019-02-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR other/89342
            * optc-save-gen.awk: Handle optimize_fast like optimize_size or
            optimize_debug.
            * opth-gen.awk: Likewise.
    
            * gcc.dg/pr89342.c: New test.
    
    From-SVN: r275112

commit 983b12012424c93d06db05acdb283ac895a9dc58
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:59:10 2019 +0200

    backport: re PR rtl-optimization/89354 (Combine pass yields wrong code with -O2 and -msse2 for 32bit target)
    
            Backported from mainline
            2019-02-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/89354
            * combine.c (make_extraction): Punt if extraction_mode is narrower
            than len bits.
    
            * gcc.dg/pr89354.c: New test.
    
    From-SVN: r275111

commit ec97cf390ef39e4f55dcae06c5a5e9a4e81b6044
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:52:29 2019 +0200

    backport: re PR tree-optimization/89314 (ICE in wide_int_to_tree_1, at tree.c:1561)
    
            Backported from mainline
            2019-02-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/89314
            * fold-const.c (fold_binary_loc): Cast strlen argument to
            const char * before dereferencing it.  Formatting fixes.
    
            * gcc.dg/pr89314.c: New test.
    
    From-SVN: r275110

commit 2fe18111fa4f0064a2c807b2b6999badeb286dc0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:51:36 2019 +0200

    backport: re PR middle-end/89303 (memory leak with shared_ptr and enable_shared_from_this)
    
            Backported from mainline
            2019-02-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89303
            * tree-ssa-structalias.c (set_uids_in_ptset): Or in vi->is_heap_var
            into pt->vars_contains_escaped_heap instead of setting
            pt->vars_contains_escaped_heap to it.
    
            2019-02-13  Jonathan Wakely  <jwakely@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89303
            * g++.dg/torture/pr89303.C: New test.
    
    From-SVN: r275109

commit 759561630909c5145f283850eb9f9970be78bed2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:50:35 2019 +0200

    backport: re PR middle-end/89281 (gcc/optabs.c:3901:30: runtime error: shift exponent 32 is too large for 32-bit type 'int')
    
            Backported from mainline
            2019-02-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89281
            * optabs.c (prepare_cmp_insn): Use UINTVAL (size) instead of
            INTVAL (size), compare it to GET_MODE_MASK instead of
            1 << GET_MODE_BITSIZE.
    
    From-SVN: r275108

commit 6695f27e93d7d8b8590ba0caa290b2aa6b3a568a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:50:04 2019 +0200

    backport: re PR middle-end/89246 (LTO produces references to cloned symbols which the compiler failed to clone)
    
            Backported from mainline
            2019-02-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89246
            * config/i386/i386.c (ix86_simd_clone_compute_vecsize_and_simdlen):
            If !node->definition and TYPE_ARG_TYPES is non-NULL, use
            TYPE_ARG_TYPES instead of DECL_ARGUMENTS.
    
            * gcc.dg/gomp/pr89246-1.c: New test.
            * gcc.dg/gomp/pr89246-2.c: New test.
    
    From-SVN: r275107

commit 2317cf064a701e416c71ea02e68c35d19c0ca19a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:49:11 2019 +0200

    backport: re PR target/88861 (ICE in calc_dfs_tree, at dominance.c:458)
    
            Backported from mainline
            2019-01-16  David Malcolm  <dmalcolm@redhat.com>
    
            PR target/88861
            * combine.c (delete_noop_moves): Convert to "bool" return,
            returning true if any edges are eliminated.
            (combine_instructions): Also return true if delete_noop_moves
            returns true.
    
            * g++.dg/opt/pr89188.C: Include ../torture/pr88861.C.
    
            2019-01-16  David Malcolm  <dmalcolm@redhat.com>
    
            PR target/88861
            * g++.dg/torture/pr88861.C: New test.
    
    From-SVN: r275106

commit 046d004057e3090eb217624efc14a05f62853a72
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:46:29 2019 +0200

    backport: re PR rtl-optimization/89234 (ICE in get_eh_region_and_lp_from_rtx at gcc/except.c:1824)
    
            Backported from mainline
            2019-02-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/89234
            * except.c (copy_reg_eh_region_note_forward): Return if note_or_insn
            is a NOTE, CODE_LABEL etc. - rtx_insn * other than INSN_P.
            (copy_reg_eh_region_note_backward): Likewise.
    
            * g++.dg/ubsan/pr89234.C: New test.
    
    From-SVN: r275105

commit 12f1ae47de7bff360cb390eaacdd81341ab03cf3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:43:53 2019 +0200

    backport: re PR c++/89187 (ICE in initialize_argument_information, at calls.c:2023)
    
            Backported from mainline
            2019-02-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89187
            * optimize.c (maybe_thunk_body): Clear TREE_ADDRESSABLE on
            PARM_DECLs of the thunk.
            * lambda.c (maybe_add_lambda_conv_op): Likewise.
    
            * g++.dg/opt/pr89187.C: New test.
    
    From-SVN: r275104

commit ddb4546b6150827b3d4c25a56ca665dac39d404b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:43:04 2019 +0200

    backport: re PR rtl-optimization/11304 (Wrong code production with -fomit-frame-pointer)
    
            Backported from mainline
            2019-02-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/11304
            * gcc.target/i386/call-1.c (set_eax): Add "eax" clobber.
            * gcc.target/i386/call-2.c: New test.
    
    From-SVN: r275102

commit 034762a6652508da2c51a1232ad41f9ce158c9fd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:42:17 2019 +0200

    backport: re PR target/89188 (ICE in pre_and_rev_post_order_compute, at cfganal.c:1055)
    
            Backported from mainline
            2019-02-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89188
            * dce.c (delete_unmarked_insns): Don't remove no-op moves if they
            can throw, non-call exceptions are enabled and we can't delete
            dead exceptions or alter cfg.  Set must_clean if
            delete_insn_and_edges returns true, don't set it blindly for calls.
    
            * g++.dg/opt/pr89188.C: New test.
    
    From-SVN: r275101

commit e8a5c7b37007b76733fcafb8b03e4a5407ebb03b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:38:28 2019 +0200

    backport: re PR rtl-optimization/89195 (Corrupted stack offset after combine)
    
            Backported from mainline
            2019-02-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/89195
            * combine.c (make_extraction): For MEMs, don't extract bytes outside
            of the original MEM.
    
            * gcc.c-torture/execute/pr89195.c: New test.
    
    From-SVN: r275099

commit a4bdd1e70dc47d837e133c2326f66913dc54ec38
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:37:41 2019 +0200

    backport: re PR target/89186 (ICE in mark_addressable at gcc/gimple-expr.c:894 since r268138)
    
            Backported from mainline
            2019-02-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/89186
            * optabs.c (prepare_cmp_insn): Pass x and y to
            emit_block_comp_via_libcall rather than XEXP (x, 0) and XEXP (y, 0).
    
            * g++.dg/ext/vector36.C: New test.
    
    From-SVN: r275098

commit 3b24f248b60b1bd9ca137c67f16a7f97de6a7aac
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:36:58 2019 +0200

    backport: re PR middle-end/87887 (ICE in make_ssa_name_fn, at tree-ssanames.c:269)
    
            Backported from mainline
            2019-02-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/87887
            * config/i386/i386.c (ix86_simd_clone_compute_vecsize_and_simdlen):
            Punt with warning on aggregate return or argument types.  Ignore
            type/mode checking for uniform arguments.
    
            * gcc.dg/gomp/pr87887-1.c: New test.
            * gcc.dg/gomp/pr87887-2.c: New test.
    
    From-SVN: r275097

commit ff4e9fafa105bd0dcdf4ccfee775567ed310c19b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:36:10 2019 +0200

    backport: re PR fortran/83246 (internal compiler error or loader problem might be related to a PARAMETER statement being in a BLOCK)
    
            Backported from mainline
            2019-02-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/83246
            PR fortran/89084
            * trans-decl.c (generate_local_decl): Add referenced FL_PARAMETERs
            if sym->ns->construct_entities rather than if
            sym->ns->parent->code->op == EXEC_BLOCK.
    
            * gfortran.dg/pr89084.f90: New test.
            * gfortran.dg/lto/pr89084_0.f90: New test.
            * gfortran.dg/pr83246.f90: New test.
    
    From-SVN: r275096

commit 231ab4cd97da6d146bd0a6659472c80342bb0e1b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:35:08 2019 +0200

    backport: re PR tree-optimization/88107 (ICE in find_outermost_region_in_block, at tree-cfg.c:7157)
    
            Backported from mainline
            2019-02-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/88107
            * tree-cfg.c (find_outermost_region_in_block): Add ALL argument,
            instead of assertion that eh_region_outermost is non-NULL, if it
            is NULL, set *ALL to true and return NULL.
            (move_sese_region_to_fn): Adjust caller, if all is set, call
            duplicate_eh_regions with NULL region.
    
            * gcc.dg/gomp/pr88107.c: New test.
    
    From-SVN: r275095

commit 36536c8b85bd53137c3241110ccb75bcaad7129a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:34:08 2019 +0200

    backport: re PR c++/66676 (pragma omp simd aligned(x) results in "internal compiler error: Segmentation fault")
    
            Backported from mainline
            2019-01-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/66676
            PR ipa/89104
            * omp-simd-clone.c (simd_clone_clauses_extract)
            <case OMP_CLAUSE_ALIGNED>: Ignore clauses with NULL
            OMP_CLAUSE_ALIGNED_ALIGNMENT.
    
            * gcc.dg/gomp/pr89104.c: New test.
    
    From-SVN: r275094

commit 345ef95706dd846a65abb112026832420bfe846a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:33:12 2019 +0200

    backport: re PR middle-end/89002 (ICE in scan_omp_1_op, at omp-low.c:3166)
    
            Backported from mainline
            2019-01-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/89002
            * gimplify.c (gimplify_omp_for): When adding OMP_CLAUSE_*_GIMPLE_SEQ
            for lastprivate/linear IV, push gimplify context around gimplify_assign
            and, if it needed any temporaries, pop it into a gimple bind around the
            sequence.
    
            * testsuite/libgomp.c/pr89002.c: New test.
    
    From-SVN: r275093

commit 5fbf51839860ed7805e7f1e2d158be99cf44db9c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:32:15 2019 +0200

    backport: re PR target/87214 (r263772 miscompiled 520.omnetpp_r in SPEC CPU 2017)
    
            Backported from mainline
            2019-01-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/87214
            * config/i386/sse.md
            (<mask_codefor>avx512dq_shuf_<shuffletype>64x2_1<mask_name>,
            avx512f_shuf_<shuffletype>64x2_1<mask_name>): Ensure the
            first constants in pairs are multiples of 2.  Formatting fixes.
            (avx512vl_shuf_<shuffletype>32x4_1<mask_name>,
            avx512vl_shuf_<shuffletype>32x4_1<mask_name>): Ensure the
            first constants in each quadruple are multiples of 4.  Formatting fixes.
    
            * gcc.target/i386/avx512vl-pr87214-1.c: New test.
            * gcc.target/i386/avx512vl-pr87214-2.c: New test.
    
    From-SVN: r275092

commit 419b92b7204f9303b0788ce1bc0c9c4611dae9c8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:31:02 2019 +0200

    backport: re PR c++/88976 (ICE in fold_convert_loc, at fold-const.c:2552)
    
            Backported from mainline
            2019-01-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/88976
            * semantics.c (finish_omp_cancel): Use maybe_convert_cond when not in
            template or build_x_binary_op otherwise.
    
            * c-c++-common/gomp/cancel-2.c: New test.
            * gcc.dg/gomp/cancel-1.c: New test.
            * g++.dg/gomp/cancel-1.C: New test.
            * g++.dg/gomp/cancel-2.C: New test.
            * g++.dg/gomp/cancel-3.C: New test.
    
    From-SVN: r275091

commit fcf0c689a615a74aacae1ee8ae1f605fb2195e40
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:29:57 2019 +0200

    Backport PRs 49429, 49454, 86334, 88906
    
            Backported from mainline
            2019-01-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/49429
            PR target/49454
            PR rtl-optimization/86334
            PR target/88906
            * expr.c (emit_block_move_hints): Move marking of MEM_EXPRs
            addressable from here...
            (emit_block_op_via_libcall): ... to here.
    
            * gcc.target/i386/pr86334.c: New test.
            * gcc.target/i386/pr88906.c: New test.
    
    From-SVN: r275090

commit ee2d155f2452f81003a67e7293fbd1a7bb75e954
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:29:04 2019 +0200

    backport: re PR c++/88949 (ICE in expand_expr_real_1, at expr.c:10001 with -fopenmp)
    
            Backported from mainline
            2019-01-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/88949
            * optimize.c (cxx_copy_decl): New function.
            (clone_body): Use it instead of copy_decl_no_change.
    
            * g++.dg/gomp/pr88949.C: New test.
    
    From-SVN: r275089

commit 47eab6cb44305a6a59f13aecc7f41055dfe54a96
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:28:22 2019 +0200

    backport: re PR fortran/88902 (ICE: Segmentation fault (in DFS::DFS_write_tree_body))
    
            Backported from mainline
            2019-01-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/88902
            * trans-decl.c (gfc_get_symbol_decl): Don't add length to function
            or parent function if it has been added there already.
    
            * gfortran.dg/pr88902.f90: New test.
    
    From-SVN: r275088

commit fec06b67afb5f83e26b96b0348eab422b1d612dc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:27:33 2019 +0200

    backport: re PR rtl-optimization/88870 (ICE: Segmentation fault (in df_worklist_propagate_backward))
    
            Backported from mainline
            2019-01-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/88870
            * dce.c (deletable_insn_p): Never delete const/pure calls that can
            throw if we can't alter the cfg or delete dead exceptions.
            (mark_insn): Don't call find_call_stack_args for such calls.
    
            * gcc.dg/pr88870.c: New test.
    
    From-SVN: r275087

commit 190a7b0624139e1f89e4d9efe60288e37e1f2b61
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:26:42 2019 +0200

    backport: re PR c/88568 ('dllimport' no longer implies 'extern' in C)
    
            Backported from mainline
            2019-01-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/88568
            * tree.c (handle_dll_attribute): Clear TREE_STATIC after setting
            DECL_EXTERNAL.
    
            * gcc.dg/pr88568.c: New test.
    
    From-SVN: r275086

commit caef3d1cbd20b0d77426fef2526e3b3f835cfb51
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:26:01 2019 +0200

    backport: re PR middle-end/82564 (ICE at -O1 and above: in assign_stack_temp_for_type, at function.c:783)
    
            Backported from mainline
            2019-01-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/82564
            PR target/88620
            * expr.c (expand_assignment): For calls returning VLA structures
            if to_rtx is not a MEM, force it into a stack temporary.
    
            * gcc.dg/nested-func-12.c: New test.
            * gcc.c-torture/compile/pr82564.c: New test.
    
    From-SVN: r275085

commit f0ea2c335a3fc63cfce9754af00c1f0e5897a858
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:25:16 2019 +0200

    backport: re PR target/88594 (ICE in int_mode_for_mode, at stor-layout.c:403)
    
            Backported from mainline
            2019-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/88594
            * config/i386/i386.c (ix86_expand_divmod_libfunc): Use mode instead
            of GET_MODE (opN) as modes of the libcall arguments.
    
            * gcc.dg/pr88594.c: New test.
    
    From-SVN: r275084

commit c14f4d769a5482ad206e998c0e7c3d4aaca5781e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:24:34 2019 +0200

    backport: re PR debug/88644 (Unexpected pub type info eliminated after r246973 (causes pubtypes-*.c to regress).)
    
            Backported from mainline
            2019-01-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/88644
            * dwarf2out.c (modified_type_die): If type is equal to sizetype,
            change it to qualified_type.
    
            * gcc.dg/debug/dwarf2/pr88644.c: New test.
    
            2019-01-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/pubtypes-2.c: Adjust expected pubtypes length.
            * gcc.dg/pubtypes-3.c: Likewise.
            * gcc.dg/pubtypes-4.c: Likewise.
    
    From-SVN: r275083

commit 81b669729b5a7f3bff32393ffb16be4d617ebbf0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:23:16 2019 +0200

    backport: re PR middle-end/85594 (ICE during expand when compiling with -fwrapv -fopenmp)
    
            Backported from mainline
            2018-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/85594
            PR middle-end/88553
            * omp-expand.c (extract_omp_for_update_vars): Regimplify the condition
            if needed.
            (expand_omp_for_generic): Don't clobber t temporary for ordered loops.
    
            * gcc.dg/gomp/pr85594.c: New test.
            * gcc.dg/gomp/pr88553.c: New test.
    
    From-SVN: r275082

commit 8d1d8699642bb56951c9c8826206e2d172b485d1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:22:27 2019 +0200

    backport: re PR rtl-optimization/88563 (wrong code with -O2 -fno-code-hoisting -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-forwprop -fno-tree-fre -fno-tree-pre -fno-tree-vrp)
    
            Backported from mainline
            2018-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/88563
            * expr.c (expand_expr_real_2) <case WIDEN_MULT_EXPR>: Swap innermode
            and mode arguments to convert_modes.  Likewise swap mode and word_mode
            arguments.  Handle both arguments with VOIDmode before convert_modes
            of one of them.  Formatting fixes.
    
            * gcc.dg/pr88563.c: New test.
    
    From-SVN: r275081

commit 7ff105fdae2dabbdb17dbb4a19119fb89ced9a10
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:21:45 2019 +0200

    backport: re PR rtl-optimization/88470 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2354)
    
            Backported from mainline
            2018-12-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/88470
            * cfgcleanup.c (outgoing_edges_match): If the function is
            shrink-wrapped and bb1 ends with a JUMP_INSN with a single fake
            edge to EXIT, return false.
    
            * gcc.target/i386/pr88470.c: New test.
    
    From-SVN: r275080

commit 4cdad636ddc67de92f841f23cd991f4a72c7ebd1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:20:47 2019 +0200

    backport: re PR rtl-optimization/88416 (ICE in in df_uses_record, at df-scan.c:3013)
    
            Backported from mainline
            2018-12-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/88416
            * valtrack.c (cleanup_auto_inc_dec): Handle pre/post-inc/dec/modify
            even if !AUTO_INC_DEC.
    
            * gcc.target/i386/pr88416.c: New test.
    
    From-SVN: r275079

commit 67747d8355aa30d932bb5b432c0d48d8282bb69b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:20:08 2019 +0200

    backport: re PR c++/86669 (Complete object constructor clone omits length for a c++11 braced initialiser)
    
            Backported from mainline
            2018-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/86669
            * call.c (make_temporary_var_for_ref_to_temp): Call pushdecl even for
            automatic vars.
    
            * g++.dg/cpp0x/initlist105.C: New test.
            * g++.dg/cpp0x/initlist106.C: New test.
            * g++.dg/other/pr86669.C: New test.
    
    From-SVN: r275078

commit 19dfbd5380e08645f4cf3d26fa38c7a04e242035
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:19:17 2019 +0200

    backport: re PR target/85593 (GCC on ARM allocates R3 for local variable when calling naked function with O2 optimizations enabled)
    
            Backported from mainline
            2018-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/85593
            * final.c (rest_of_handle_final): Don't call collect_fn_hard_reg_usage
            for functions with naked attribute.
    
    From-SVN: r275077

commit 42aed577cf5dd5c753cee477bb542426d59eeff8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:18:41 2019 +0200

    backport: re PR fortran/88377 (ICE in gfc_omp_clause_copy_ctor, at fortran/trans-openmp.c:614)
    
            Backported from mainline
            2018-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/88377
            * trans-openmp.c (gfc_omp_clause_default_ctor,
            gfc_omp_clause_copy_ctor, gfc_omp_clause_assign_op,
            gfc_omp_clause_linear_ctor, gfc_omp_clause_dtor): Only consider
            GFC_DECL_GET_SCALAR_ALLOCATABLE vars as scalar allocatables if they
            have pointer type.
    
            * gfortran.dg/gomp/pr88377.f90: New test.
    
    From-SVN: r275076

commit cc1f52a2244f69819936b6b4dc77cd6cc67b5ea8
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Aug 30 13:17:41 2019 +0200

    backport: re PR c++/87506 (ICE with inherited constexpr constructor with const argument)
    
            Backported from mainline
            2018-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/87506
            * constexpr.c (adjust_temp_type): Handle EMPTY_CLASS_EXPR.
    
            * g++.dg/cpp0x/constexpr-87506.C: New test.
    
    From-SVN: r275075

commit 14ffeb1c3773c55cc96d2f7f0cf7a3db56f53571
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Aug 30 13:16:55 2019 +0200

    backport: re PR c++/88103 (Wrong value category when conditional expression result is used as object expression)
    
            Backported from mainline
            2018-12-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/88103
            * typeck.c (build_class_member_access_expr): If unary_complex_lvalue
            turned xvalue_p into non-xvalue_p, call move on it.
    
            * g++.dg/cpp0x/rv-cond3.C: New test.
    
    From-SVN: r275074

commit ee9212971fb4716a9f2aac1a5072da8a42668a07
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:16:10 2019 +0200

    backport: re PR tree-optimization/71109 (gcc ICE at -O3 on valid code on x86_64-linux-gnu in "maybe_record_trace_start")
    
            Backported from mainline
            2018-12-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/71109
            * gcc.c-torture/compile/pr71109.c: New test.
    
    From-SVN: r275073

commit 8f674ddf829bdc8dd33bc425dbe053fb7fddde1d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:15:39 2019 +0200

    backport: re PR debug/85550 (-fdebug-types-section broken with DW_OP_addr in DW_AT_location)
    
            Backported from mainline
            2018-11-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/85550
            * g++.dg/debug/dwarf2/pr85550.C: New test.
    
    From-SVN: r275072

commit 17981e7baab8a2c754599b1643dc0d6b8de9dbb9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:14:56 2019 +0200

    backport: re PR c++/88181 (ICE: verify_type failed (error: type variant differs by TYPE_PACKED))
    
            Backported from mainline
            2018-11-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/88181
            * class.c (fixup_attribute_variants): Also propagate TYPE_PACKED
            to variants.
    
            * g++.dg/debug/pr88181.C: New test.
    
    From-SVN: r275071

commit 5ba94a17e7b5934e179dca7b408a5cd92f0bc0cd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:12:23 2019 +0200

    backport: re PR tree-optimization/87895 (ICE in purge_dead_edges, at cfgrtl.c:3246)
    
            Backported from mainline
            2018-11-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/87895
            * omp-simd-clone.c (ipa_simd_modify_function_body): When removing
            or replacing GIMPLE_RETURN, set EDGE_FALLTHRU on the edge to EXIT.
            (simd_clone_adjust): Don't set EDGE_FALLTHRU here. In a loop that
            redirects edges to EXIT to edges to incr_bb, iterate while EXIT
            has any preds and always use EDGE_PRED (, 0).
    
            * gcc.dg/gomp/pr87895-1.c: New test.
            * gcc.dg/gomp/pr87895-2.c: New test.
            * gcc.dg/gomp/pr87895-3.c: New test.
    
    From-SVN: r275070

commit d690951022038a03d3e0da6d783efcd7e4c601b8
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Aug 30 13:09:57 2019 +0200

    backport: re PR c++/60994 (gcc does not recognize hidden/shadowed enumeration as valid nested-name-specifier)
    
            Backported from mainline
            2018-11-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/60994
            * g++.dg/lookup/pr60994.C: New test.
    
    From-SVN: r275068

commit 1d58d86b208eba62e3c96224e6d3f9652ce0640b
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Aug 30 13:09:22 2019 +0200

    backport: re PR fortran/87725 (OpenMP 4.5 clause schedule(simd,monotonic:static) not understood)
    
            Backported from mainline
            2018-10-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/87725
            * openmp.c (gfc_match_omp_clauses): Parse simd, monotonic and
            nonmonotonic modifiers regardless of if they have been parsed
            already or if the opposite one has.  Fix up check whether
            comma after modifier should be parsed.
            (resolve_omp_clauses): Diagnose schedule modifier restrictions.
    
            * c-c++-common/gomp/schedule-modifiers-1.c (bar): Separate modifier
            from kind with a colon rather than comma.
            * gfortran.dg/gomp/schedule-modifiers-1.f90: New test.
            * gfortran.dg/gomp/schedule-modifiers-2.f90: New test.
    
    From-SVN: r275067

commit 20940c0e029eddeec4e618bfb8f0f8e98851dfd1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:08:10 2019 +0200

    backport: re PR middle-end/87647 (ICE on valid code in decode_addr_const, at varasm.c:2958)
    
            Backported from mainline
            2018-10-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/87647
            * varasm.c (decode_addr_const): Handle COMPOUND_LITERAL_EXPR.
    
            * gcc.c-torture/compile/pr87647.c: New test.
    
    From-SVN: r275066

commit 6e56fdebe62f8bec65062b9c2feb5ef65ed97182
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 30 13:07:22 2019 +0200

    backport: re PR middle-end/85488 (segmentation fault when compiling code using the ordered(n) clause in OpenMP 4.5)
    
            Backported from mainline
            2018-10-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/85488
            PR middle-end/87649
            * omp-low.c (check_omp_nesting_restrictions): Diagnose ordered without
            depend closely nested inside of loop with ordered clause with
            a parameter.
    
            * c-c++-common/gomp/doacross-2.c: New test.
            * c-c++-common/gomp/sink-3.c: Expect another error during error
            recovery.
    
    From-SVN: r275065

commit b62c170e60bdf5b66fcedb47d13c35fc857a67c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 30 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275056

commit 1696db918cb9650c23ccc01b921a3eb7ca2d39ec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 29 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r275018

commit d170a707c808f765556f1288b2f7135beaea427c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 28 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274977

commit 2dbfc8c9db64909c0ecafd66d552a5cc7743fd2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 27 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r274941

commit 19e0fef1d5e3867b3c3898d7fbd436e0958eb93b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 26 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r274916

commit dcccb54b9134f2fdc69bd0a4abf98d9ef3138140
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Aug 25 21:51:45 2019 +0200

    re PR target/91533 (abs pattern generates MMX instructions but fails to call EMMS)
    
            PR target/91533
            Backport from mainline
            2019-06-30  Uroš Bizjak  <ubizjak@gmail.com>
    
            * config/i386/sse.md (ssse3_abs<mode>2): Rename from abs<mode>2.
            * config/i386/i386-builtin.def (__builtin_ia32_pabsb):
            Use CODE_FOR_ssse3_absv8qi2.
            (__builtin_ia32_pabsw): Use CODE_FOR_ssse3_absv4hi2.
            (__builtin_ia32_pabsd): Use CODE_FOR_ssse3_absv2si2.
    
    From-SVN: r274914

commit 84fc2e352d6ae790bfe72c5c505099bfb371f3c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 25 00:16:29 2019 +0000

    Daily bump.
    
    From-SVN: r274904

commit 98828017cc479782080e03f8a76d68f952d15188
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 24 00:16:23 2019 +0000

    Daily bump.
    
    From-SVN: r274895

commit 14d944c028542605f69fbf4584b5bce66079b3d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 23 00:16:34 2019 +0000

    Daily bump.
    
    From-SVN: r274840

commit 95f55ecec3297453c0f50a33c851d1e261f1a704
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 22 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274813

commit af7b538019edb9a38581b0a078a3c86572ec7dcf
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Aug 21 13:44:45 2019 +0000

    re PR tree-optimization/91510 (r253207 fixed a wrong-code bug)
    
    2019-08-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/91510
            Backport from mainline
            2017-09-26  Martin Jambor  <mjambor@suse.cz>
    
            * tree-sra.c (compare_access_positions): Put integral types first,
            stabilize sorting of integral types, remove conditions putting
            non-full-precision integers last.
            (sort_and_splice_var_accesses): Disable scalarization if a
            non-integert would be represented by a non-full-precision integer.
    
    From-SVN: r274798

commit 6e4d3a51c34cb53e7200f4fe9da155a80f740b2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274760

commit 21f952df3afc3b60b5a63b026082ea23cd24890b
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue Aug 20 09:22:32 2019 +0000

    * gcc.c-torture/execute/20190820-1.c: Fix typos.
    
    From-SVN: r274713

commit 181cb4095f35bc35048c7b11d2a3e0096976b50a
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue Aug 20 09:21:28 2019 +0000

    * gcc.c-torture/execute/20190820-1.c: Do not use attribute noipa.
    
    From-SVN: r274712

commit f146d69ec22708deab1cee4a729511c504fbd69b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Aug 20 09:17:04 2019 +0000

    re PR rtl-optimization/91347 (hppa: wrong code generated with tail call optimisation)
    
            PR rtl-optimization/91347
            * dse.c (scan_insn): Call add_wild_read for non-const/memset tail calls
            before reload if HARD_FRAME_POINTER_IS_ARG_POINTER.
    
    From-SVN: r274711

commit e8ee5a5166c19cdfce3c04c309c11084dd10ef90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 20 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274686

commit 3cd059781f949d84f50f3a4481156a06817ad38b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 19 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274626

commit 7626963e2402048dbbd0a1dea1b2c8f866999311
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 18 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r274615

commit 2b8c717a45db325cfe5276b7bfbe2db0502494da
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 17 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274592

commit fc64d8d60f997497d9964c8f52cc88f7091d78c8
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Aug 16 14:08:27 2019 +0200

    test_summary: Do not escape "=".
    
            * test_summary: Do not escape "=".
    
    From-SVN: r274568

commit 7a9eb588588568b27bca9486fa13492cda9356ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 16 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274552

commit 2532dbb46c35b6e311054cb5a09a84ed85ec3eec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 15 00:16:12 2019 +0000

    Daily bump.
    
    From-SVN: r274498

commit 05b9bad94834389d82c553b42a93508b1a94f0bf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 14 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r274407

commit 78ad0dba3f4cb1c64c274671a809573eb41b9846
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 13 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r274324

commit 4e5f12397e3833f0f1b8f64d013c3f13562147c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 12 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r274269

commit 9e3a3bdc8706f4546c51b6350e31a8a939fab8e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 11 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r274258

commit ab1f5bde48bda77b04115fba3cff5d40a0482acc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 10 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r274245

commit b5b029b833bc2d99e499b8fe94c6ed10863cb4f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 9 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r274221

commit 4198ea7113a9a77af7817d4a238d2bd130e883d8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 8 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274202

commit 5c05399efd992f3e9cda865e10b28c5bb15968e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 7 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r274152

commit b0f71fda75cfc7ea7aa4b5cf1e680f2b2f84921f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r274131

commit 2aad163f473aef489219899897ded52b04018c5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 5 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r274100

commit 14b9471d28526b10b798d8f97ae278ff1e531abb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 4 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r274051

commit 242f918fff86032e390462db2729903019a51e98
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Aug 3 11:50:39 2019 +0000

    backport: re PR fortran/90786 (ICE on procedure pointer assignment to function with class pointer result)
    
    2019-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
            Paul Thomas <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/90786
            PR fortran/90813
            * trans-expr.c (pointer_assignment_is_proc_pointer) Remove as
            it is very simple and only called from one place.
            (gfc_trans_pointer_assignment): Rename non_proc_pointer_assign
            as non_proc_ptr_assign. Assign to it directly, rather than call
            to above, deleted function and use gfc_expr_attr instead of
            only checking the reference chain.
            * trans-decl.c (sym_identifier): New function.
            (mangled_identifier): New function, doing most of the work
            of gfc_sym_mangled_identifier.
            (gfc_sym_mangled_identifier): Use mangled_identifier.  Add mangled
            identifier to global symbol table.
            (get_proc_pointer_decl): Use backend decl from global identifier
            if present.
    
    2019-08-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
            Paul Thomas <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/90786
            PR fortran/90813
            * gfortran.dg/proc_ptr_51.f90: New test.
    
    
    Co-Authored-By: Paul Thomas <pault@gcc.gnu.org>
    
    From-SVN: r274038

commit 65352cb43c2d7f528d25d9c83be9c285610232c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 3 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r274034

commit 319cda624f77eeaca19d09efb2bb7b00d2762358
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 2 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r273990

commit 8f9d8e99990059524de25c9a3c5457bfd6597457
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273957

commit f580d4c76af9233bc8afc5020a40dac76328a0c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 31 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r273917

commit 8d6ec79a14d1e79e30274a61234d631f8f2c6259
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 30 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273893

commit eba31a20ffd22c7cf16017c21a46a39f16031e6a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 29 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r273861

commit 8db20c1678af08c71462fee1c2432f392c35fe22
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 28 00:16:39 2019 +0000

    Daily bump.
    
    From-SVN: r273847

commit 889444834d7aaec27c60a890096cb650f9265e2b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 27 00:16:16 2019 +0000

    Daily bump.
    
    From-SVN: r273840

commit b0c43bd0663957db213b2648805de0ce2dfc26c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 26 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r273820

commit 7e56430617fe889e589ad78cd67918166f0f9af4
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 25 10:50:47 2019 +0000

    re PR plugins/90924 (lto-plugin/lto-plugin.c heap memory corruption due to insufficient sanitization.)
    
    2019-07-25  Richard Biener  <rguenther@suse.de>
    
            PR lto/90924
            Backport from mainline
            2019-07-12  Ren Kimura  <rkx1209dev@gmail.com>
    
            * simple-object-elf.c (simple_object_elf_match): Check zero value
            shstrndx.
    
    From-SVN: r273795

commit 7f4c2d71790cf8ce7f5ec27e97fc57d92738e8e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 25 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273779

commit 9a24b925aee9224eef3e7fdc30dc4285bd114a3c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 24 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r273750

commit 8fa3b6aceb668734c77ccd4d996bb8acb51e7b80
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 23 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r273709

commit b5a7b9f065ef49947ea63955eec767b82641a941
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jul 22 11:38:26 2019 +0200

    Backport r273660
    
    2019-07-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-07-22  Martin Liska  <mliska@suse.cz>
    
            PR driver/91172
            * opts-common.c (decode_cmdline_option): Decode
            argument of -Werror and check it for a wrong language.
            * opts-global.c (complain_wrong_lang): Remove such case.
    2019-07-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-07-22  Martin Liska  <mliska@suse.cz>
    
            PR driver/91172
            * gcc.dg/pr91172.c: New test.
    
    From-SVN: r273666

commit fa30b0b595084bcbdc572c06de12969b1dcfb264
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 22 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r273653

commit 2ba94df744ed679481911850303afd710a9c0f50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273637

commit 6f7fb68233a46270019688b46093ba3d26fba44e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 20 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r273612

commit e8b0e92e60ff9fa6d15b5ac9308492b5e65e7d58
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 19 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r273587

commit dfb982ac17517e0ad5cad9f4bd464a168b2dc4e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 18 00:16:24 2019 +0000

    Daily bump.
    
    From-SVN: r273559

commit 662cb3d6662ee008277c00a5bff93b63e2f3db3f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 17 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273538

commit 560c38ab997af0e4a0e0a00f34b1d0879d52e168
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Tue Jul 16 13:13:26 2019 +0000

    [ARM] Fix PR89222
    
    The GCC optimizer can generate symbols with non-zero offset from simple
    if-statements. Bit zero is used for the Arm/Thumb state bit, so relocations
    with offsets fail if it changes bit zero and the relocation forces bit zero
    to true.  The fix is to disable offsets on function pointer symbols.
    
        gcc/
            PR target/89222
            * config/arm/arm.md (movsi): Use targetm.cannot_force_const_mem
            to decide when to split off a non-zero offset from a symbol.
            * config/arm/arm.c (arm_cannot_force_const_mem): Disallow offsets
            in function symbols.
    
        testsuite/
            PR target/89222
            * gcc.target/arm/pr89222.c: Add new test.
    
    From-SVN: r273527

commit 4884a22c7d4ff095f69e32ed3ae20bc5ecb07149
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 16 00:16:29 2019 +0000

    Daily bump.
    
    From-SVN: r273502

commit 5f4019044f410a2604f7ec350661fd484c300f46
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Mon Jul 15 14:31:37 2019 +0000

    S/390: Fix vector shift count operand
    
    We currently use subst definitions to handle the different variants of shift
    count operands. Unfortunately, in the vector shift pattern the shift count
    operand is used directly. Without it being adjusted for the 'subst' variants the
    displacement value is omitted resulting in a wrong shift count being applied.
    
    This patch needs to be applied to older branches as well.
    
    gcc/ChangeLog:
    
    2019-07-15  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2019-07-01  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/vector.md: Fix shift count operand printing.
    
    gcc/testsuite/ChangeLog:
    
    2019-07-15  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2019-07-01  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/vector/vec-shift-2.c: New test.
    
    From-SVN: r273494

commit 4e0c1fdbe6b50751aa1969c59870b42cc575c193
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 15 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273485

commit 92f56fec1a875bca366dd5937147f5f2fadbe21e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 14 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r273471

commit 62100726feccb0cfd8af68f259174ecc08f50e0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 13 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r273460

commit bac70476544a62b5d4dc4884f6ea6d9fd524702e
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Fri Jul 12 17:15:13 2019 +0000

    Turn off ipa-ra in builtins test (PR91059)
    
    The gcc.c-torture/execute/builtins/lib directory contains a reimplementation
    of many C library string functions, which causes non-trivial register allocation
    bugs with LTO and static linked libraries.  To fix this long-standing test issue,
    turn off ipa-ra which avoids the register corruption across calls.  All builtin
    torture tests now pass on aarch64-none-elf.  Committed as obvious.
    See PR78529 for more details.
    
        testsuite/
            PR testsuite/78529
            * gcc.c-torture/execute/builtins/builtins.exp: Add -fno-ipa-ra.
    
    From-SVN: r273453

commit e26d4208a99112ea5011c01b58b7a886ce6ffa88
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Jul 12 10:17:42 2019 +0000

    re PR rtl-optimization/91136 (incorrect move of instruction to delay slot causes application crash in exception handling)
    
            PR rtl-optimization/91136
            * df-core.c (ACCESSING REFS): Fix typos in comment.
            * resource.c (mark_target_live_reg): Add artificial defs that occur at
            the beginning of the block to the initial set of live registers.
    
    From-SVN: r273439

commit c12809273f7ee8366bf3df0cbb6e75e312160a56
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273426

commit d7f9f42f8419860d0103283c053c46222a5e0b6a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 11 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273372

commit 6be224935c60af6f22bb77307fd5efa2710ae737
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 10 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273318

commit 29ac74f0377a48e450158c975fd0fb18bd807a46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 9 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273257

commit 4b22431c766e6ad47b06e0ee3d7dcb35de8560ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 8 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r273187

commit c49dfb05b9137a5236fbf1de743283123153c23d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 7 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r273170

commit 937a7eef0e5c524f88bbaf97edda1b03c2704f26
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 6 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r273151

commit fe5bcbc234ed49ee0b45c483742b54776b1a14f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 5 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r273097

commit d4cafe05ad06cc40d4de6e861b0b362831f6d244
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 4 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r273028

commit 7befb8b98a4625bc5c2171130b4049c6446cfe26
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 3 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272950

commit 6011c6b0ad4842da21f68c68f8cb5f57796c260b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 2 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272913

commit 1dcdb4400d83ce06ecb8a2796e98c27f10417883
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272836

commit 13e710e45ca43827a76ac0033ec7e28cda6b7a25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 30 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r272828

commit a5374f3737c7f02082ea3a7265accf3c3ff6a5d8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 29 07:39:11 2019 +0000

    trans.c (mark_visited_r): Set TYPE_SIZES_GIMPLIFIED on the main variant of a type, if any.
    
            * gcc-interface/trans.c (mark_visited_r): Set TYPE_SIZES_GIMPLIFIED on
            the main variant of a type, if any.
    
    From-SVN: r272818

commit 1fb5a6163d49f66604ad4b1e3f5f3d9c26723a90
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 29 07:32:09 2019 +0000

    decl.c (set_nonaliased_component_on_array_type): Add missing guard for the presence of TYPE_CANONICAL.
    
            * gcc-interface/decl.c (set_nonaliased_component_on_array_type): Add
            missing guard for the presence of TYPE_CANONICAL.
            (set_reverse_storage_order_on_array_type): Likewise.
    
    From-SVN: r272814

commit ead7354efaee7cf0575b4d2c7bbdc5abf01b49a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 29 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272805

commit cebf79e0ba1a3ea6c8fc711c26f219500da5bba2
Author: Jeff Law <law@redhat.com>
Date:   Fri Jun 28 15:01:56 2019 -0600

    re PR tree-optimization/90949 (null pointer check removed)
    
            PR tree-optimization/90949
            * tree-ssa-copy.c (fini_copy_prop): Use reset_flow_sensitive_info.
            * tree-ssanames.c (reset_flow_sensitive_info): Reset non-null state.
    
            * gcc.c-torture/execute/pr90949.c: New test.
    
    From-SVN: r272798

commit 1e646edab25f02a73b6d46ba566ae6570b172e07
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 28 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272771

commit 4c6899741d8814424072fd11282a5459771dc562
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu Jun 27 13:26:52 2019 +0200

    [PR 90939] Remove outdated assert in ipcp_bits_lattice::meet_with
    
    2019-06-27  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/90939
            * ipa-cp.c (ipcp_bits_lattice::meet_with): Remove assert.
    
    From-SVN: r272747

commit d992cef5e120575ab491fbfd92f8e52f508779ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 27 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272720

commit 3e63f32924dd6041b60f1f0977f2c3de71cae0d2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jun 26 16:12:15 2019 +0100

    PR libstdc++/90634 reduce allocations in filesystem::path construction
    
    Backport from mainline
    2019-05-28  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90634
            * include/experimental/bits/fs_path.h (path::path(path&&)): Only call
            _M_split_cmpts() for a path with multiple components.
            (path::_S_is_dir_sep()): Add missing 'static' keyword to function.
            * src/filesystem/path.cc (path::_M_split_cmpts()): Count number of
            components and reserve space in vector. Return early when there is
            only one component.
            * testsuite/experimental/filesystem/path/construct/90634.cc: New test.
    
    From-SVN: r272697

commit 263426472ed94289a8dde44296b7e8448ae302b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 26 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272662

commit ef07709144c0aa9fa532cf44f883e9e3e10b513d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 25 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272629

commit 3acb30e029827546b04ba0729a8050e52b970ef0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 24 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272610

commit 3b8210f0d459fb11afd21e9a8bbb8c0de6ba8942
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 23 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272596

commit a0592209d6862fb5cb805fbbd788c7ffcd271175
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 22 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r272580

commit 0cce86841f6845e7193bed27ccce309578e1caa3
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Jun 21 19:32:23 2019 +0000

    backport: re PR fortran/90937 (ICE: in gfc_get_symbol_decl, at fortran/trans-decl.c:1538)
    
    2019-06-21  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/90937
            * trans-types.c (get_formal_from_actual_arglist): Get symbol from
            current namespace so it will be freed later.  If symbol is of type
            character, get an empty character length.
    
    2019-06-21  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/90937
            * gfortran.dg/external_procedure_4.f90: New test.
    
    From-SVN: r272566

commit a3b18472c20668276d75d704af4bef70def2c5e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 21 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r272535

commit 06b785235b0f1ce49aa80c6ded60f6647ba00c98
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 20 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272492

commit 03f85f689f4de3644c5b4698532cd96ad88cba9e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 19 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r272461

commit cce1ac97c4b68dea89587daf5d03589a20a6d194
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 18 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272401

commit 849613c0148b82c5f9eba61ce6e8f187b4ed1289
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 17 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272367

commit af2bd0c7257af9904446be4248ce064de47c8ecd
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Jun 16 21:49:19 2019 +0000

    re PR middle-end/64242 (Longjmp expansion incorrect)
    
            PR middle-end/64242
            * config/pa/pa.md (nonlocal_goto): Restore frame pointer last.  Add
            frame clobbers and schedule block.
            (builtin_longjmp): Likewise.
    
    From-SVN: r272364

commit 3c6af0e3c9e9a43fd6d6d9c7c7b1cac6b749d421
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 16 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272334

commit 736ed20d520b2145534156ec75104085b381f271
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 15 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272315

commit 0faf4d142790d7301d4a36a8d56e3c063fe08c80
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 14 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272277

commit 14a98949af406df72240e963a899ede0b04cafa8
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Jun 13 17:00:22 2019 +0000

    re PR fortran/90870 (new test case gfortran.dg/deferred_character_33.f90 fails)
    
    2019-06-13  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
        PR fortran/90870
        * gfortran.dg/deferred_character_33.f90: Remove failing test.
        * gfortran.dg/deferred_character_33a.f90: Likewise.
    
    From-SVN: r272249

commit a13ee38e9e4c7b36bc8b9e8c4237eaf6aa56333a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 13 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272225

commit 07f8a70834f9e0cc0d11768b5f918e80a1d754f6
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Jun 12 20:08:38 2019 +0000

    backport: re PR fortran/90744 (Bogus length for character temporaries passed to external procedures since r268992)
    
    2019-06-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
        Tomáš Trnka  <trnka@scm.com>
    
        Backport from trunk
        PR fortran/90744
        * trans-types.c (get_formal_from_actual_arglist): Unset typespec
        flags which make no sense for procedures without explicit
        interface.
    
    2019-06-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
        Tomáš Trnka  <trnka@scm.com>
    
        Backport from trunk
        PR fortran/90744
        * gfortran.dg/deferred_character_33.f90: New test.
        * gfortran.dg/deferred_character_33a.f90: New test.
    
    
    Co-Authored-By: Tomáš Trnka <trnka@scm.com>
    
    From-SVN: r272214

commit f9425a119b8a04a5f1f606d0c127b6fa9a60baf2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272174

commit 0ae25b52be4094dfed94125b64fe1d48c612db2d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 11 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272138

commit 57e1d005c9c7a1c364d2f61f0674ba1ce5f8cb95
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 10 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r272099

commit 5f9ea41efc733078725048cd5227f79a48697b9d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 9 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r272086

commit 7926568bfb4299e5bb0a1c5feafec130f959af77
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 8 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r272064

commit 65c3f4a944a9462636ad4988d0611c3aefb72570
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 7 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r272024

commit bb8d6f0abbac3ba31758a78c08e8d600d5a3835d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271979

commit 44c2a9ec4e7906702fdd5489c6e1152147405e3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 5 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271941

commit a7d98a3091f8ccbe332b6e96006a0d97c7a8fd83
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Tue Jun 4 19:08:03 2019 +0000

    Darwin, backport fix for regressed testcase.
    
    2019-06-04  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2019-05-02  Iain Sandoe  <iain@sandoe.co.uk>
    
            * g++.dg/ext/instantiate2.C: Remove special-casing for Darwin.
    
    From-SVN: r271925

commit 60f98b5f23f877d0deb0a31bdc6bb57c206948cc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 4 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271896

commit b49756bf0440c1e436712b7e9c5754c8b4eac462
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Jun 3 19:13:46 2019 +0000

    Darwin, backport fixes for PR 89864 (with 90379 included)
    
    2019-06-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline.
            2019-05-11  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR bootstrap/89864
            * inclhack.def (darwin_ucred__Atomic): Do not supply test_text
            for wrap fixes.
            * fixincl.x: Regenerated.
    
            Backport from mainline.
            2019-04-18  Erik Schnetter  <schnetter@gmail.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Iain Sandoe  <iain@sandoe.co.uk>
    
            PR bootstrap/89864
            * inclhack.def (darwin_ucred__Atomic): New, work around _Atomic keyword
            use in headers included by C++.
            * fixincl.x: Regenerated.
    
    From-SVN: r271881

commit 3f70f815a3925d598d38dd5f1732d9f45b7eed44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 3 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271849

commit e154eb83456c6eadaba1d971e4ea1c0901f79726
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 2 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r271840

commit 272abffc7ef590dbb38d450a6a2ebcad8639e24a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271829

commit 8398c2371bb47770c076acb4204a6e4d717fea58
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 31 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271792

commit b8d1276df9c6f7dbd96e84b48fb32131390f63a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 30 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r271757

commit e9fbda76bd0674c731406e19d1887e0dbb43b7c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 29 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r271723

commit 17d2f0bd9736f20fa61971a3f63902b1c07bb324
Author: Martin Liska <mliska@suse.cz>
Date:   Tue May 28 13:55:05 2019 +0200

    Backport r270476
    
    2019-05-28  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-04-20  Sandra Loosemore  <sandra@codesourcery.com>
    
            * g++.dg/ipa/pr89009.C: Add dg-require-effective-target fpic.
    
    From-SVN: r271699

commit 63ec7ca7ef7928108c371af6db51eb4c651097da
Author: Martin Liska <mliska@suse.cz>
Date:   Tue May 28 13:54:45 2019 +0200

    Backport r269278
    
    2019-05-28  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-28  John David Anglin  <danglin@gcc.gnu.org>
    
            PR testsuite/89441
            * g++.dg/ipa/pr89009.C: Update symbol visibility.
    
    From-SVN: r271698

commit 71d615bc71cd6f85908c52f679fda181313098f3
Author: Martin Liska <mliska@suse.cz>
Date:   Tue May 28 13:54:33 2019 +0200

    Backport r268762 (test-suite)
    
    2019-05-28  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/89009
            * g++.dg/ipa/pr89009.C: New test.
    
    From-SVN: r271697

commit a76f56652f47c1dac652e21bf7717cce4a14b5a1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue May 28 08:09:39 2019 +0000

    trans.c (walk_nesting_tree): New static function.
    
            * gcc-interface/trans.c (walk_nesting_tree): New static function.
            (finalize_nrv): Use it to walk the entire nesting tree.
    
    From-SVN: r271688

commit c3577c2979cbd2f0ba222b1e3f438cfc7e35775e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 28 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271674

commit 08c9b986ad77cddc84e9ce225bc91dc15138af72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 27 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271641

commit 277265f3ca8a77f1133fa8dc4fb9e643fe2e5ad4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 26 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271624

commit a95126922c4d09ce1af22594b73eafbd264445e6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 25 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271615

commit 9ac8cee0790ba26f923204c2706703bd9d556a8a
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri May 24 23:20:25 2019 +0000

    re PR target/90530 (Invalid SUBREG insn generated by reload)
    
            PR target/90530
            * config/pa/pa.c (pa_cannot_change_mode_class): Accept mode changes
            from DImode to SImode in floating-point registers on 64-bit target.
            * config/pa/pa.md (umulsidi3): Change nonimmediate_operand to
            register_operand in xmpyu patterns.
    
    From-SVN: r271614

commit 64839957c7f256ba837b054f6aea198b96dd376a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 24 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271585

commit c858c79e3ac626016d68c6aa30c494f55156038f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 23 16:34:42 2019 +0100

    PR libstdc++/89466 avoid slow xsltproc command in configure
    
    Certain broken versions of xsltproc ignore the --nonet option and will
    attempt to fetch the docbook stylesheet from the WWW when it isn't in
    the local XML catalog.
    
    This patch checks for the local stylesheet directory first, and doesn't
    use xsltproc if no local stylesheets are found. Checking for the local
    directory is done using xmlcatalog if available, only checking the
    hardcoded list of directories if xmlcatalog fails. The right directory
    for Suse is added to the hardcoded list.
    
    This should avoid doing an xsltproc check that would need to download
    the stylesheet, so no network connection is made even if a broken
    xsltproc is present.
    
    Backport from mainline
    2019-02-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/89466
            * acinclude.m4 (GLIBCXX_CONFIGURE_DOCBOOK): Reorder check for local
            stylesheet directories before check for xsltproc. Try to use
            xmlcatalog to find local stylesheet directory before trying hardcoded
            paths. Add path used by suse to hardcoded paths. Adjust xsltproc
            check to look for the same stylesheet as doc/Makefile.am uses. Don't
            use xsltproc if xmlcatalog fails to find a local stylesheet.
            * configure.ac: Check for xmlcatalog.
            * Makefile.in: Regenerate.
            * configure: Likewise.
            * doc/Makefile.in: Likewise.
            * include/Makefile.in: Likewise.
            * libsupc++/Makefile.in: Likewise.
            * po/Makefile.in: Likewise.
            * python/Makefile.in: Likewise.
            * src/Makefile.in: Likewise.
            * src/c++11/Makefile.in: Likewise.
            * src/c++17/Makefile.in: Likewise.
            * src/c++98/Makefile.in: Likewise.
            * src/filesystem/Makefile.in: Likewise.
            * testsuite/Makefile.in: Likewise.
    
    From-SVN: r271570

commit a0f9800cd33e1f567ba3eaf486fd52fbcb814098
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 23 16:34:37 2019 +0100

    PR libstdc++/88740 Print assertion messages to stderr
    
    Backport from mainline
    2019-01-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/88740
            * testsuite/util/testsuite_hooks.h [stderr] (VERIFY): Use fprintf to
            write to stderr instead of using printf.
    
    From-SVN: r271569

commit 610306767b5b0ffb21480a2ddb5cab0c3dd12a3e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 23 16:09:02 2019 +0100

    Make any_cast compare typeinfo as well as function pointers
    
    It's possible for the function pointer comparison to fail even though
    the type is correct, because the function could be defined multiple
    times with different addresses when shared libraries are in use.
    
    Retain the function pointer check for the common case where the check
    succeeds, but compare typeinfo (if RTTI is enabled) if the first check
    fails.
    
    Backport from mainline
    2019-05-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/any (__any_caster): Use RTTI if comparing
            addresses fails, to support non-unique addresses in shared libraries.
            * include/std/any (__any_caster): Likewise.
            * testsuite/experimental/any/misc/any_cast_neg.cc: Use 0 for dg-error
            line number.
    
    From-SVN: r271566

commit f82a8e0a73b6be5680a8f3a64d7ae708f549f0a3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 23 16:08:58 2019 +0100

    PR libstdc++/90220 Fix any_cast for non-object types
    
    Backport from mainline
    2019-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90220 (partial)
            * include/std/any (any_cast<T>(any*), any_cast<T>(const any*)): Do
            not attempt ill-formed static_cast to pointers to non-object types.
            * testsuite/20_util/any/misc/any_cast.cc: Test std::any_cast with
            function types.
    
    Backport from mainline
    2019-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90220
            * include/std/any (__any_caster): Use remove_cv_t instead of decay_t.
            Avoid a runtime check for types that can never be stored in std::any.
            * testsuite/20_util/any/misc/any_cast.cc: Test std::any_cast with
            array types.
    
    Backport from mainline
    2019-05-23  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90220
            * include/experimental/any (__any_caster): Constrain to only be
            callable for object types. Use remove_cv_t instead of decay_t.
            If the type decays or isn't copy constructible, compare the manager
            function to a dummy specialization.
            (__any_caster): Add overload constrained for non-object types.
            (any::_Manager_internal<_Op>): Add dummy specialization.
            * testsuite/experimental/any/misc/any_cast.cc: Test function types
            and array types.
    
    From-SVN: r271565

commit 7b39855ba1e4f45741437e3175ec30b480ccc560
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 23 16:08:52 2019 +0100

    Fix missing or incorrect feature test macros
    
    Backported from mainline
    2019-01-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2017.xml: Document P0032R3 and P0307R2
            status.
            * include/bits/stl_uninitialized.h (__cpp_lib_raw_memory_algorithms):
            Define.
            * include/std/any (__cpp_lib_any): Define as 201606L, because P0032R3
            changes are supported.
            * include/std/optional (__cpp_lib_optional): Likewise.
            * include/std/variant (__cpp_lib_variant): Likewise.
    
    From-SVN: r271564

commit 3b96e89dd8e8c20bdc8cbd7dbccf15e84df36dca
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu May 23 06:55:40 2019 +0200

    backport: re PR target/90547 (ICE in gen_lowpart_general, at rtlhooks.c:63)
    
            Backported from mainline
            2019-05-21  Uroš Bizjak  <ubizjak@gmail.com>
    
            * config/i386/cpuid.h (__cpuid): For 32bit targets, zero
            %ebx and %ecx bafore calling cpuid with leaf 1 or
            non-constant leaf argument.
    
            2019-05-21  Uroš Bizjak  <ubizjak@gmail.com>
    
            PR target/90547
            * config/i386/i386.md (anddi_1 to andsi_1_zext splitter):
            Avoid calling gen_lowpart with CONST operand.
    
    testsuite/ChangeLog:
    
            Backported from mainline
            2019-05-21  Uroš Bizjak  <ubizjak@gmail.com>
    
            PR target/90547
            * gcc.target/i386/pr90547.c: New test.
    
    From-SVN: r271537

commit 9c3bd9013338cf0c559039b0eb47fafd98818f10
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 23 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271531

commit 68618e3ec0be96b5857613720b6eb7a14e59fea6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 22 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271493

commit 6befdbc28ee925b80327bc93b9b8857f60c9bc33
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271446

commit 6d54d9c2b6e08138bce595f36e61db5294f88623
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Mon May 20 20:07:12 2019 +0000

    backport: re PR middle-end/89765 (Multiple problems with vec-insert implementation on PowerPC)
    
    gcc/ChangeLog:
    
    2019-05-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline.
            2019-05-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/89765
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
            In handling of ALTIVEC_BUILTIN_VEC_INSERT, use modular arithmetic
            to compute vector element selector for both constant and variable
            operands.
    
    gcc/testsuite/ChangeLog:
    
    2019-05-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline.
            2019-05-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/89765
            * gcc.target/powerpc/pr89765-mc.c: New test.
            * gcc.target/powerpc/vsx-builtin-10c.c: New test.
            * gcc.target/powerpc/vsx-builtin-10d.c: New test.
            * gcc.target/powerpc/vsx-builtin-11c.c: New test.
            * gcc.target/powerpc/vsx-builtin-11d.c: New test.
            * gcc.target/powerpc/vsx-builtin-12c.c: New test.
            * gcc.target/powerpc/vsx-builtin-12d.c: New test.
            * gcc.target/powerpc/vsx-builtin-13c.c: New test.
            * gcc.target/powerpc/vsx-builtin-13d.c: New test.
            * gcc.target/powerpc/vsx-builtin-14c.c: New test.
            * gcc.target/powerpc/vsx-builtin-14d.c: New test.
            * gcc.target/powerpc/vsx-builtin-15c.c: New test.
            * gcc.target/powerpc/vsx-builtin-15d.c: New test.
            * gcc.target/powerpc/vsx-builtin-16c.c: New test.
            * gcc.target/powerpc/vsx-builtin-16d.c: New test.
            * gcc.target/powerpc/vsx-builtin-17c.c: New test.
            * gcc.target/powerpc/vsx-builtin-17d.c: New test.
            * gcc.target/powerpc/vsx-builtin-18c.c: New test.
            * gcc.target/powerpc/vsx-builtin-18d.c: New test.
            * gcc.target/powerpc/vsx-builtin-19c.c: New test.
            * gcc.target/powerpc/vsx-builtin-19d.c: New test.
            * gcc.target/powerpc/vsx-builtin-20c.c: New test.
            * gcc.target/powerpc/vsx-builtin-20d.c: New test.
            * gcc.target/powerpc/vsx-builtin-9c.c: New test.
            * gcc.target/powerpc/vsx-builtin-9d.c: New test.
    
    From-SVN: r271436

commit 9e1951d0ded0f32f4603d1f5b81f4bef7ae1368a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 20 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r271391

commit 22162dc1718be8f1656d29625b53091026b408b3
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun May 19 16:03:17 2019 +0000

    darwin - fix PR86215 by backporting 80556.
    
    The backport had been missed.
    
    2019-01-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/86215
            Backport from mainline
            2017-09-25  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/80556
            * config/i386/darwin.h (REAL_LIB_SPEC): New; put libSystem ahead
            of libgcc_eh for m64.
            * config/i386/darwin64.h: Likewise.
    
    From-SVN: r271381

commit bf500f45fa9d40eb256d58ec23febce335ae95a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 19 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271372

commit 86424efca25096711bac97b7f8ef4506caa03e73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 18 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271365

commit b22d9c9ee4cf6faa7072d1da301b3f8c79d520cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 17 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271304

commit 3e12d38c0427fa73749b00f5f6b5303386b0108b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 16 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r271272

commit 908c3c73b617481a4b2dec1a02d3b55ecc7a34fc
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Wed May 15 17:11:31 2019 +0000

    backport: re PR target/61976 (aix64: Data corruption in struct passed by value)
    
            Backport from mainline
            2019-04-11  David Edelsohn  <dje.gcc@gmail.com>
            * xcoffout.h (xcoff_private_rodata_section_name): Declare.
            * xcoffout.c (xcoff_private_rodata_section_name): Define.
            * config/rs6000/rs6000.c (rs6000_xcoff_asm_init_sections): Create
            read_only_private_data_section using coff_private_rodata_section_name.
            (rs6000_xcoff_file_start): Generate coff_private_rodata_section_name.
    
            2018-12-04  David Edelsohn  <dje.gcc@gmail.com>
            2018-12-13  David Edelsohn  <dje.gcc@gmail.com>
            PR target/61976
            * config/rs6000/rs6000.c (rs6000_function_arg): Don't pass aggregates
            in FPRs on AIX. Ensure type is non-NULL.
            (rs6000_arg_partial_bytes): Same.
    
    From-SVN: r271257

commit adff581212d2ee72da67257b3ec75406e09a7157
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 15 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271194

commit e2de085dca3b6f042c3bf3d5bd02b22d601645b5
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 14 05:15:38 2019 +0000

    [RTEMS] Change multilibs for ARM
    
    Account for Cortex-M3 Errata 602117.  The -mfix-cortex-m3-ldrd option is
    enabled by default, if -mcpu=cortex-m3 is used.
    
    gcc/
    
            * config/arm/t-rtems: Replace -march=armv7-m multilibs with
            -mcpu=cortex-m3 and -mcpu=cortex-m4 multilibs.
    
    From-SVN: r271148

commit 02b00b08080181c76304ddc1c7aac1cdb112272b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 14 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271141

commit fd00b98cf0824569f2eae20a095bbc6571b78972
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Mon May 13 21:27:29 2019 +0000

    backport: re PR target/89424 (__builtin_vec_ext_v1ti (v, i) results in ICE with variable i (RS6000))
    
    gcc/ChangeLog:
    
    2019-05-13  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline.
            2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/89424
            * config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
            handling of V1TImode.
    
    gcc/testsuite/ChangeLog:
    
    2019-05-13  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline.
            2019-05-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/89424
            * gcc.target/powerpc/pr89424-0.c: New test.
            * gcc.target/powerpc/vsx-builtin-13a.c: Define macro PR89424 to
            enable testing of newly patched capability.
            * gcc.target/powerpc/vsx-builtin-13b.c: Likewise.
            * gcc.target/powerpc/vsx-builtin-20a.c: Likewise.
            * gcc.target/powerpc/vsx-builtin-20b.c: Likewise.
    
    From-SVN: r271137

commit 9fd467d36481aa158808ca7be9ad6b34e34e66d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 13 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271112

commit 2478ee2f7c5279ff27630984206f84c9088e339f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 12 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r271102

commit 046b3c83987090f2a57128886b28e626da639b18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 11 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r271084

commit 9bb80d16ba4bb686236e4b39ce44b8e4803519f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 10 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r271048

commit 73c65510700d1f2f1176887232625b1b8bb0bd3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 9 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r271023

commit a2fb1fb666a10dae17c5bde5ec877cbfe02d08c8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 8 13:17:26 2019 +0100

    PR libstdc++/90105 make forward_list::sort stable
    
    While testing the fix I also discovered that operator== assumes the
    elements are comparable with operator!= which is not required.
    
    Backport from mainline
    2019-04-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/90105
            * include/bits/forward_list.tcc (operator==): Do not use operator!= to
            compare elements.
            (forward_list<T, A>::sort(Comp)): When elements are equal take the one
            earlier in the list, so that sort is stable.
            * testsuite/23_containers/forward_list/operations/90105.cc: New test.
            * testsuite/23_containers/forward_list/comparable.cc: Test with
            types that meet the minimum EqualityComparable and LessThanComparable
            requirements. Remove irrelevant comment.
    
    From-SVN: r271010

commit 67bfe1e90ebb1216941481f978540927f98e25f1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 8 13:17:20 2019 +0100

    PR libstdc++/89629 fix _Hash_bytes for lengths > INT_MAX
    
    Backport from mainline
    2019-03-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/89629
            * libsupc++/hash_bytes.cc [__SIZEOF_SIZE_T__ == 8] (_Hash_bytes):
            Use correct type for len_aligned.
            * testsuite/20_util/hash/89629.cc: New test.
    
    From-SVN: r271009

commit b891046d97cb73a7e81216cc4302a4a4ad19b328
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 8 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270994

commit 2167cab72d9861234740cc605aa5a56cc50089f1
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue May 7 15:24:43 2019 +0000

    Fix make install-gcc-specs with empty GCC_SPECS_FILES
    
            * gcc-interface/Makefile.in (install-gcc-specs): Use foreach.
            Honor DESTDIR.
    
    From-SVN: r270950

commit 2121a64bb71d267165735eeff62f49bc899e4659
Author: Richard Sandiford <richard.sandiford@arm.com>
Date:   Tue May 7 08:49:05 2019 +0000

    Fix output_constructor_bitfield handling of wide bitfields (PR89037)
    
    The testcase was failing because we were trying to access
    TREE_INT_CST_ELT (x, 1) of a 128-bit integer that was small enough
    to need only a single element.
    
    2019-05-07  Richard Sandiford  <richard.sandiford@arm.com>
    
    gcc/
            Backport from mainline:
            2019-01-25  Richard Sandiford  <richard.sandiford@arm.com>
    
            PR middle-end/89037
            * varasm.c (output_constructor_bitfield): Use wi::extract_uhwi
            instead of accessing TREE_INT_CST_ELT directly.
    
    gcc/testsuite/
            Backport from mainline:
            2019-01-25  Richard Sandiford  <richard.sandiford@arm.com>
    
            PR middle-end/89037
            * gcc.dg/pr89037.c: New test.
    
    From-SVN: r270936

commit 0816ebde614846c413fd35622a3d2b91914e8e01
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 7 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r270930

commit bce20df8e49ce81ba283c785ca19dd3a6bbb070e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270889

commit fb55065fd71fa0fe8e3ff78146605c4334160911
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun May 5 14:01:51 2019 +0000

    [multiple changes]
    
    2019-05-05  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/90344
            * frontend-passes.c (create_var): Bring into sync with gcc 8.
    
    2019-05-05  Thomas Koenig <tkoenig@gcc.gnu.org>
    
            PR fortran/90344
            * gfortran.dg/pr90344.f90: New test
    
    From-SVN: r270883

commit 931b724a8b557da0c9d303ce4315ed8d149cb54c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 5 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r270878

commit 8d12fb9896f4c515aeac08da5b815ada2877301d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 4 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270864

commit b15df560d9536ffe7f9f454f12df3600f3187572
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 3 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270828

commit 50d40bcb436bb11f0ddb73150bbf73f4cff9fd07
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 2 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270783

commit c9bd45d6aadc32697ff16cfe0439be9f395969c0
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Wed May 1 15:27:40 2019 +0000

    [Patch AArch64] Add __ARM_FEATURE_ATOMICS
    
    
    
    This keeps coming up repeatedly and the ACLE has finally added
    __ARM_FEATURE_ATOMICS for the LSE feature in GCC. This is now part of
    the latest ACLE release
    (https://developer.arm.com/docs/101028/latest/5-feature-test-macros)
    
    I know it's late for GCC-9 but this is a simple macro which need not
    wait  for another year.
    
    Ok for trunk and to backport to all release branches ?
    
    Tested with a simple build and a smoke test.
    
    Backport from mainline.
    PR target/86538
    * config/aarch64/aarch64-c.c (aarch64_update_cpp_builtins): Define
    __ARM_FEATURE_ATOMICS
    
    From-SVN: r270770

commit 41e0e38b228f40ac45060f6ece139718568a2de6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 1 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270760

commit aa96a565a7149e5b2bf4661f08f0a03c40a3e338
Author: Srinath Parvathaneni <srinath.parvathaneni@arm.com>
Date:   Tue Apr 30 09:31:04 2019 +0000

    PR target/90075 Prefer bsl/bit/bif for copysignf. (backport GCC-7)
    
    This patch is to fix the ICE caused by expand pattern of copysignf
    builtin. This is a back port to r267019 of trunk.
    
    gcc:
    
    2019-04-30  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
    
            PR target/90075
            * config/aarch64/iterators.md (V_INT_EQUIV): Add mode for
            integer equivalent of floating point values.
    
            Backport from mainline
            2018-12-11  Richard Earnshaw  <Richard.Earnshaw@arm.com>
    
            PR target/37369
            * config/aarch64/iterators.md (sizem1): Add sizes for
            SFmode and DFmode.
            (Vbtype): Add SFmode mapping.
            * config/aarch64/aarch64.md (copysigndf3, copysignsf3): Delete.
            (copysign<GPF:mode>3): New expand pattern.
            (copysign<GPF:mode>3_insn): New insn pattern.
    
    testsuite:
    
    2019-04-30  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>
    
            PR target/90075
            * gcc.target/aarch64/pr90075.c: New test.
    
    From-SVN: r270684

commit ec644dcdd51090af1521d7cb6972bc4c59583aae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 30 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270669

commit abfdee495343f49ee8f1f11e34f359b2c8cede42
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 29 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r270634

commit ad73117fc6769578e7cd376efc203f0c58df0ef2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 28 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270627

commit 08bbfb94acfd1341892040f28ba31fca53723cd2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 27 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r270617

commit 973d40284c46efe7fead47b1f3265c9c639f730c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 26 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270589

commit 18043d5ca9a880876f7f1096aef1f68f660728d5
Author: Xiong Hu Luo <luoxhu@linux.ibm.com>
Date:   Thu Apr 25 01:18:43 2019 +0000

    vsx-vector-6.p8.c: Fix failure caused by typo.
    
    gcc/testsuite/ChangeLog:
    
    2019-04-25  Xiong Hu Luo  <luoxhu@linux.ibm.com>
    
           * gcc.target/powerpc/vsx-vector-6.p8.c: Fix failure caused by typo.
    
    From-SVN: r270565

commit 8fbb2f40b9c2a2fe635579182fd29fb237d8c572
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 25 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270561

commit 017284176b6d3b1f87bca8b17d777843b990defd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 24 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270528

commit a85e3c9ff55cd9409463bbdc7b67ddffa0dc3e55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 23 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270496

commit 23011067badd32bb09d7c3f62d7d1f9ab5d764e3
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Mon Apr 22 16:09:13 2019 +0000

    backport: re PR target/87532 (bad results from vec_extract(unsigned char, foo) dependent upon function inline)
    
    gcc/ChangeLog:
    
    2019-04-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline
            2019-03-15  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/87532
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
            When handling vec_extract, use modular arithmetic to allow
            constant selectors greater than vector length.
            * config/rs6000/rs6000.c (rs6000_expand_vector_extract): Allow
            V1TImode vectors to have constant selector values greater than 0.
            Use modular arithmetic to compute vector index.
            (rs6000_split_vec_extract_var): Use modular arithmetic to compute
            index for in-memory vectors.  Correct code generation for
            in-register vectors.  Use inner mode of vector rather than mode of
            destination for move instruction.
            (altivec_expand_vec_ext_builtin): Use modular arithmetic to
            compute index.
    
            2019-04-12  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/87532
            * config/rs6000/vsx.md (*vsx_extract_<mode>_<VS_scalar>mode_var):
            Use QI inner mode with V16QI vector mode.
    
    gcc/testsuite/ChangeLog:
    
    2019-04-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline
            2019-03-15  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/87532
            * gcc.target/powerpc/pr87532-mc.c: New test.
            * gcc.target/powerpc/pr87532.c: New test.
            * gcc.target/powerpc/vec-extract-v16qiu-v2.h: New test.
            * gcc.target/powerpc/vec-extract-v16qiu-v2a.c: New test.
            * gcc.target/powerpc/vec-extract-v16qiu-v2b.c: New test.
            * gcc.target/powerpc/vsx-builtin-10a.c: New test.
            * gcc.target/powerpc/vsx-builtin-10b.c: New test.
            * gcc.target/powerpc/vsx-builtin-11a.c: New test.
            * gcc.target/powerpc/vsx-builtin-11b.c: New test.
            * gcc.target/powerpc/vsx-builtin-12a.c: New test.
            * gcc.target/powerpc/vsx-builtin-12b.c: New test.
            * gcc.target/powerpc/vsx-builtin-13a.c: New test.
            * gcc.target/powerpc/vsx-builtin-13b.c: New test.
            * gcc.target/powerpc/vsx-builtin-14a.c: New test.
            * gcc.target/powerpc/vsx-builtin-14b.c: New test.
            * gcc.target/powerpc/vsx-builtin-15a.c: New test.
            * gcc.target/powerpc/vsx-builtin-15b.c: New test.
            * gcc.target/powerpc/vsx-builtin-16a.c: New test.
            * gcc.target/powerpc/vsx-builtin-16b.c: New test.
            * gcc.target/powerpc/vsx-builtin-17a.c: New test.
            * gcc.target/powerpc/vsx-builtin-17b.c: New test.
            * gcc.target/powerpc/vsx-builtin-18a.c: New test.
            * gcc.target/powerpc/vsx-builtin-18b.c: New test.
            * gcc.target/powerpc/vsx-builtin-19a.c: New test.
            * gcc.target/powerpc/vsx-builtin-19b.c: New test.
            * gcc.target/powerpc/vsx-builtin-20a.c: New test.
            * gcc.target/powerpc/vsx-builtin-20b.c: New test.
            * gcc.target/powerpc/vsx-builtin-9a.c: New test.
            * gcc.target/powerpc/vsx-builtin-9b.c: New test.
    
            2019-03-19  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/89736
            * gcc.target/powerpc/pr87532-mc.c: Modify dejagnu directives to
            restrict this test to vsx targets.
    
    From-SVN: r270493

commit 0e38199ed2fd1854ed3822dbdb134c50a263f0da
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 22 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r270486

commit 1a9f2a6b144f72f4c5786eedd6cf10e900ce7a9b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 21 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270473

commit e3df80898237b9a93daf32a2d44efebdfc857c88
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 20 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r270464

commit 226a15e6cd18369e65eb34bce360f4dbe6341c70
Author: Xiong Hu Luo <luoxhu@linux.ibm.com>
Date:   Fri Apr 19 03:30:33 2019 +0000

    backport r257541, r259936, r260294, r260623, r261098, r261333, r268585 from trunk
    
    These patches are followed changes for r255555 on testcases
    vsx-vector-6*.c.  Backport them to update file names and fix regressions
    for GCC7 on power9.
    See e.g. https://gcc.gnu.org/ml/gcc-testresults/2019-04/msg00159.html
    for the failures this patch fixes; the patch is for GCC 7.
    
    gcc/ChangeLog:
    
    2019-04-19  Xiong Hu Luo  <luoxhu@linux.ibm.com>
    
            Backport from trunk
            2018-05-23  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * doc/sourcebuild.texi (Endianness): New subsubsection.
    
    gcc/testsuite/ChangeLog:
    
    2019-04-19  Xiong Hu Luo  <luoxhu@linux.ibm.com>
    
            Backport from trunk
            2018-02-07  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            * gcc.target/powerpc/vsx-vector-6-le.c: Update CPU target.
            * gcc.target/powerpc/vsx-vector-6-le.p9.c: New.
    
            Backport from trunk
            2018-05-04  Carl Love  <cel@us.ibm.com>
            * gcc.target/powerpc/vsx-vector-6.h (foo): Add test for vec_max,
            vec_trunc.
            * gcc.target/powerpc/vsx-vector-6-le.c (dg-final): Update xvcmpeqdp,
            xvcmpgtdp, xvcmpgedp counts. Add xxsel counts.
            * gcc.target/powerpc/vsx-vector-6-be.c (dg-final): Update xvcmpgtdp,
            xvcmpgedp counts. Add xxsel counts.
    
            Backport from trunk
            2018-05-16  Carl Love  <cel@us.ibm.com>
            * gcc.target/powerpc/vsx-vector-6-be.c: Remove file.
            * gcc.target/powerpc/vsx-vector-6-be.p7.c: New test file.
            * gcc.target/powerpc/vsx-vector-6-be.p8.c: New test file.
            * gcc.target/powerpc/vsx-vector-6-le.c (dg-final): Update counts for
            xvcmpeqdp., xvcmpgtdp., xvcmpgedp., xxlxor, xvrdpi.
    
            Backport from trunk
            2018-05-23  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * lib/target-supports.exp (check_effective_target_be): New.
            (check_effective_target_le): New.
    
            Backport from trunk
            2018-06-01  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/altivec-7-be.c: Delete file.
            * gcc.target/powerpc/altivec-7-le.c: Delete file.
            * gcc.target/powerpc/vsx-7-be.c: Remove file.
    
            Backport from trunk
            2018-06-01  Carl Love  <cel@us.ibm.com>
    
            Commit 260294 on 2018-05-16 by Carl Love was supposed to add the
            following files.
    
            * gcc.target/powerpc/vsx-vector-6-be.p7.c: New test file.
            * gcc.target/powerpc/vsx-vector-6-be.p8.c: New test file.
    
            Backport from trunk
            2018-06-08  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/vsx-vector-6-be.p7.c: Rename this file to
            vsx-vector-6.p7.c.
            * gcc.target/powerpc/vsx-vector-6-le.p9.c: Rename this file to
            vsx-vector-6.p9.c.
            * gcc.target/powerpc/vsx-vector-6-be.p8.c: Move instruction counts
            for BE system that are different then for an LE system from this file
            into vsx-vector-6-le.c using be target qualifier.  Remove this file.
            * gcc.target/powerpc/vsx-vector-6-le.c: Add le qualifiers as needed for
            the various instruction counts.  Rename file to vsx-vector-6.p8.c.
    
            Backport from trunk
            2019-02-06  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/vsx-vector-6.p7.c: Update instruction
            counts and target.
            * gcc.target/powerpc/vsx-vector-6.p8.c: Update instruction
            counts and target.
            * gcc.target/powerpc/vsx-vector-6.p9.c: Update instruction
            counts and target.
    
    From-SVN: r270452

commit 1e0457f55c687c0e708eadcbbe781d0f0524e191
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 19 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r270449

commit 9ed4310d31f7a208c0c5a3bde068c0ef6ffc2253
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 18 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270428

commit ba3209c010f3cda5e022387d7e788e1867f21e75
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Apr 17 00:22:23 2019 +0000

    re PR libfortran/79540 (FAIL: gfortran.dg/fmt_fw_d.f90   -O0  execution test)
    
            PR libgfortran/79540
            * io/write_float.def (build_float_string): Don't copy digits when
            ndigits is negative.
    
    From-SVN: r270402

commit 300e391440787af0b8d403624e02fd640aa373c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 17 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270399

commit 395c61c524b48f98755ee731779d14d5f4dc0f05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 16 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270374

commit 3965b2f7a8f8d5a226be82dac69c8d015a7b1db2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 15 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r270356

commit f537563bd4214fe2ea1a881480c93867be2445a3
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Apr 14 12:27:44 2019 +0000

    re PR fortran/87352 (Large stack usage with new gfortran)
    
    2019-04-14  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/87352
            Backport from trunk
            * gfortran.h (gfc_component): Add finalized field.
            * class.c (finalize_component): If the component is already
            finalized, return early.  Set component->finalized on exit.
    
    2019-04-14  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/87352
            * gfortran.dg/finalize_28.f90: Adjust count of __builtin_free.
            * gfortran.dg/finalize_34.f90: New test.
    
    From-SVN: r270352

commit a6ce895f7e1c49cdde0e5ea1740aa8b75dddf6a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 14 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r270342

commit e8b70e36f186fb5a46cdde3a397a2b9e1290e661
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 13 00:16:26 2019 +0000

    Daily bump.
    
    From-SVN: r270333

commit 77a3a76a731313c9e235c7667ebf1874521fdcf7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 12 00:16:21 2019 +0000

    Daily bump.
    
    From-SVN: r270297

commit 15dc6451c6446888dc45c0a4a622ea5bf9210d9c
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Apr 11 10:59:48 2019 +0200

    Backport r269492
    
    2019-04-11  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-03-08  Martin Liska  <mliska@suse.cz>
    
            PR target/86952
            * config/i386/i386.c (ix86_option_override_internal): Disable
            jump tables when retpolines are used.
    2019-04-11  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-03-08  Martin Liska  <mliska@suse.cz>
    
            PR target/86952
            * gcc.target/i386/pr86952.c: New test.
            * gcc.target/i386/indirect-thunk-7.c: Use jump tables to match
            scanned pattern.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
    
    From-SVN: r270277

commit af65093b664a68d1eab91ebeb12a9f9f25882005
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 11 00:16:15 2019 +0000

    Daily bump.
    
    From-SVN: r270269

commit b4969e7028f1890f6bf76f14743a9b3a15fd47c1
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Wed Apr 10 21:02:02 2019 +0000

    backport: re PR fortran/89904 (ICE in gfortran starting with r270045)
    
    2019-04-10  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from trunk
            PR fortran/89904
            * check.c (gfc_check_transfer): Reject procedures as actual
            arguments for SOURCE and MOLD of TRANSFER intrinsic.
    
            PR fortran/89904
            * gfortran.dg/pr85797.f90: Adjust testcase.
    
    From-SVN: r270268

commit fbb48581befab09c6e85e69cc6bab1a559756b28
Author: Matthew Malcomson <matthew.malcomson@arm.com>
Date:   Wed Apr 10 13:34:54 2019 +0000

    Backport of r270226 from mainline to gcc-7-branch
    
    The "*neon_mov<mode>" patterns for 128 bit sized quantities uses the "Dn"
    constraint to match vmov.f32 and vmov.i<vec-width> patterns.
    This constraint boils down to using the `neon_immediate_valid` function.
    Once the constraint has matched, the output C statement asserts that function
    passes.
    
    The output C statement calls `neon_immediate_valid` with the mode taken from the
    iterator, while the constraint takes the mode from the operand.
    This can cause a discrepency when the operand is a CONST_INT, as the constraint
    passes VOIDmode which `neon_immediate_valid` treats as DImode, while the C
    statement passes the mode of the iterator which can be TImode.
    When this happens, the `neon_immediate_valid` can fail in the second call (if
    e.g. the CONST_INT is a valid immediate in DImode but not TImode) which would
    trigger the assertion.
    
    The testcase added with this patch triggers this when compiled with an arm cross
    compiler using the command line below.
    gcc -march=armv8-a -c neon-immediate-timode.c -O1 -mfloat-abi=hard -mfpu=neon-fp-armv8
    
    This patch splits the original "Dn" constraint into three new constraints, "DN"
    for TImode CONST_INT, "Dn" for DImode CONST_INT, and "Dm" for CONST_VECTOR.
    Splitting things up this way requires using one extra alternative in the
    "*neon_mov<mode>" patterns, but makes it clear from the constraint what mode is
    being used.
    
    We also remove the behaviour of treating VOIDmode as DImode in
    `neon_valid_immediate` since the original "Dn" constraint was the only place
    that functionality was used.  VOIDmode is now never passed to that function.
    An assertion has been added to the function to ensure this problem is caught
    earlier on.
    
    bootstrapped and regtested on arm-none-linux-gnueabihf
    
    gcc/ChangeLog:
    
    2019-04-10  Matthew Malcomson  <matthew.malcomson@arm.com>
    
            PR target/90024
            * config/arm/arm.c (neon_valid_immediate): Disallow VOIDmode parameter.
            * config/arm/constraints.md (Dm, DN, Dn): Split previous Dn constraint
            into three.
            * config/arm/neon.md (*neon_mov<mode>): Account for TImode and DImode
            differences directly.
            (*smax<mode>3_neon, vashl<mode>3, vashr<mode>3_imm): Use Dm constraint.
    
    gcc/testsuite/ChangeLog:
    
    2019-04-10  Matthew Malcomson  <matthew.malcomson@arm.com>
    
            PR target/90024
            * gcc.dg/torture/neon-immediate-timode.c: New test.
    
    From-SVN: r270253

commit 840ba6903a19344401de614364cec92f772a74cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 10 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270243

commit 82a3e966f4d105a91419dd7eead5e0da4ee86b79
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Apr 9 19:30:57 2019 +0000

    c-ada-spec.c (print_destructor): Deal with deleting destructors.
    
            * c-ada-spec.c (print_destructor): Deal with deleting destructors.
            (dump_ada_declaration) <FUNCTION_DECL>: Likewise.
    
    From-SVN: r270241

commit 286129f758ba53ba9f238bd46fabf353573b412d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 9 00:16:11 2019 +0000

    Daily bump.
    
    From-SVN: r270217

commit 277ebd864bab1d6dc38eae9208f36a2ec33581f7
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Apr 8 07:33:01 2019 +0200

    re PR target/89945 (ICE in gen_lowpart_general, at rtlhooks.c:63)
    
            PR target/89945
            * config/i386/i386.md (anddi_1 to andsi_1_zext splitter):
            Avoid calling gen_lowpart with SYMBOL_REF and LABEL_REF operand.
    
    testsuite/ChangeLog:
    
            PR target/89945
            * gcc.target/i386/pr89945.c: New test.
    
    From-SVN: r270197

commit ab424230142cc5fcbaa6b273db45f74a0f129a5a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 8 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r270193

commit ffdb6c3f179d4fb8a91ad0580a4b77e30f612192
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 7 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r270185

commit e99fd71a93277020ee00bedf1677132f84536c31
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Apr 6 21:44:33 2019 +0000

    backport: rtlanal.c (get_initial_register_offset): Fall back to the estimate as long as the epilogue isn't completed.
    
            Backport from mainline
            2019-02-19  Eric Botcazou  <ebotcazou@adacore.com>
    
            * rtlanal.c (get_initial_register_offset): Fall back to the estimate
            as long as the epilogue isn't completed.
    
    From-SVN: r270183

commit 90d8e0fd7bf04ec0a2cb86a7a75da6e1c48d2598
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 6 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270179

commit fecfa999e524f1f4bcee7f2c764d8e9c3fe99f63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 5 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r270156

commit 87a94c285fedeb7725268055dbdfd08dd8f70e45
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 4 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270139

commit 960df6cc8e93177a56f8c4e9eb4bc0857bfbe975
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 3 08:47:19 2019 +0000

    re PR lto/89896 (-flto=4 is confused by presence of 'all.c' in a local directory. -flto=1 is not.)
    
    2019-04-03  Richard Biener  <rguenther@suse.de>
    
            PR lto/89896
            * lto-wrapper.c (run_gcc): Avoid implicit rules making
            the all target phony.
    
    From-SVN: r270114

commit 02fcaf68c1f833805bfd8bede5ae55544c96d646
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 3 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r270108

commit f0671e83b1e0089e184593d394350398eaa3a4d7
Author: Xiong Hu Luo <luoxhu@linux.ibm.com>
Date:   Tue Apr 2 01:08:31 2019 +0000

    This is a backport of r250477, r255555, r257253 and r258137 from trunk to
    gcc-7-branch to support built-in functions.
    
    gcc/ChangeLog:
    
    2019-04-02  Xiong Hu Luo <luoxhu@linux.ibm.com>
    
            Backport from trunk r250477.
    
            2017-07-24  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/rs6000-c.c: Add support for built-in functions
            vector float vec_extract_fp32_from_shorth (vector unsigned short);
            vector float vec_extract_fp32_from_shortl (vector unsigned short);
            * config/rs6000/altivec.h (vec_extract_fp_from_shorth,
            vec_extract_fp_from_shortl): Add defines for the two builtins.
            * config/rs6000/rs6000-builtin.def (VEXTRACT_FP_FROM_SHORTH,
            VEXTRACT_FP_FROM_SHORTL): Add BU_P9V_OVERLOAD_1 and BU_P9V_VSX_1
            new builtins.
            * config/rs6000/vsx.md vsx_xvcvhpsp): Add define_insn.
            (vextract_fp_from_shorth, vextract_fp_from_shortl): Add define_expands.
            * doc/extend.texi: Update the built-in documentation file for the
            new built-in function.
    
            Backport from trunk r255555.
    
            2017-12-11  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/altivec.h (vec_extract_fp32_from_shorth,
            vec_extract_fp32_from_shortl]): Add #defines.
            * config/rs6000/rs6000-builtin.def (VSLDOI_2DI): Add macro expansion.
            * config/rs6000/rs6000-c.c (ALTIVEC_BUILTIN_VEC_UNPACKH,
            ALTIVEC_BUILTIN_VEC_UNPACKL, ALTIVEC_BUILTIN_VEC_AND,
            ALTIVEC_BUILTIN_VEC_SLD, ALTIVEC_BUILTIN_VEC_SRL,
            ALTIVEC_BUILTIN_VEC_SRO, ALTIVEC_BUILTIN_VEC_SLD,
            ALTIVEC_BUILTIN_VEC_SLL): Add expansions.
            * doc/extend.texi: Add documentation for the added builtins.
    
    gcc/testsuite/ChangeLog:
    
    2019-04-02  Xiong Hu Luo <luoxhu@linux.ibm.com>
    
            Backport from trunk r250477.
    
            2017-07-24  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/builtins-3-p9-runnable.c: Add new test file for
            the new built-ins.
    
            Backport from trunk r255555.
    
            2017-12-11  Carl Love  <cel@us.ibm.com>
            * gcc.target/powerpc/altivec-7.c: Renamed altivec-7.h.
            * gcc.target/powerpc/altivec-7.h (main): Add testcases for vec_unpackl.
            Add dg-final tests for the instructions generated.
            * gcc.target/powerpc/altivec-7-be.c: New file to test on big endian.
            * gcc.target/powerpc/altivec-7-le.c: New file to test on little endian.
            * gcc.target/powerpc/altivec-13.c (foo): Add vec_sld, vec_srl,
             vec_sro testcases. Add dg-final tests for the instructions generated.
            * gcc.target/powerpc/builtins-3-p8.c (test_vsi_packs_vui,
            test_vsi_packs_vsi, test_vsi_packs_vssi, test_vsi_packs_vusi,
            test_vsi_packsu-vssi, test_vsi_packsu-vusi, test_vsi_packsu-vsll,
            test_vsi_packsu-vull, test_vsi_packsu-vsi, test_vsi_packsu-vui): Add
            testcases. Add dg-final tests for new instructions.
            * gcc.target/powerpc/p8vector-builtin-2.c (vbschar_eq, vbchar_eq,
            vuchar_eq, vbint_eq, vsint_eq, viint_eq, vuint_eq, vbool_eq, vbint_ne,
            vsint_ne, vuint_ne, vbool_ne, vsign_ne, vuns_ne, vbshort_ne): Add
            tests.
            Add dg-final instruction tests.
            * gcc.target/powerpc/vsx-vector-6.c: Renamed vsx-vector-6.h.
            * gcc.target/powerpc/vsx-vector-6.h (vec_andc,vec_nmsub, vec_nmadd,
            vec_or, vec_nor, vec_andc, vec_or, vec_andc, vec_msums): Add tests.
            Add dg-final tests for the generated instructions.
            * gcc.target/powerpc/builtins-3.c (test_sll_vsc_vsc_vsuc,
            test_sll_vuc_vuc, test_sll_vsi_vsi_vuc, test_sll_vui_vui_vuc,
            test_sll_vbll_vull, test_sll_vbll_vbll_vus, test_sll_vp_vp_vuc,
            test_sll_vssi_vssi_vuc, test_sll_vusi_vusi_vuc, test_slo_vsc_vsc_vsc,
            test_slo_vuc_vuc_vsc, test_slo_vsi_vsi_vsc, test_slo_vsi_vsi_vuc,
            test_slo_vui_vui_vsc, test_slo_vui_vui_vuc, test_slo_vsll_slo_vsll_vsc,
            test_slo_vsll_slo_vsll_vuc, test_slo_vull_slo_vull_vsc,
            test_slo_vull_slo_vull_vuc, test_slo_vp_vp_vsc, test_slo_vp_vp_vuc,
            test_slo_vssi_vssi_vsc, test_slo_vssi_vssi_vuc, test_slo_vusi_vusi_vsc,
            test_slo_vusi_vusi_vuc, test_slo_vusi_vusi_vuc, test_slo_vf_vf_vsc,
            test_slo_vf_vf_vuc, test_cmpb_float): Add tests.
    
            Backport from trunk r257253.
    
            2018-01-31  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            * gcc.target/powerpc/altivec-13.c: Remove VSX-requiring built-ins.
            * gcc.target/powerpc/vsx-13.c: New.
    
            Backport from trunk r258137.
    
            2018-03-02  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            * gcc.target/powerpc/altivec-7-be.c: Remove VSX content, allow
            32-bit target.
            * gcc.target/powerpc/altivec-7.h: Remove VSX content.
            * gcc.target/powerpc/vsx-7-be.c: New test (VSX content).
            * gcc.target/powerpc/vsx-7.h: New include (VSX content).
            * gcc.target/powerpc/altivec-7-le.c: Add vsx-7.h include.
    
    From-SVN: r270073

commit afa4cdc0b1821bc0ff00a07f8a2de8fc7906109a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 2 00:16:14 2019 +0000

    Daily bump.
    
    From-SVN: r270070

commit 9e510e60dd5eaaf08a5fc27d3e726976fde70598
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 1 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r270049

commit 79ee9522004951439518c4f99ac2988ec01c1a5c
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Mar 31 19:21:37 2019 +0000

    backport: re PR fortran/83515 (ICE: Invalid expression in gfc_element_size)
    
    2019-03-31  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from trunk
            PR fortran/83515
            PR fortran/85797
            * trans-types.c (gfc_typenode_for_spec): Handle conversion for
            procedure pointers.
            * target-memory.c (gfc_element_size): Handle size determination
            for procedure pointers.
    
            PR fortran/83515
            PR fortran/85797
            * gfortran.dg/pr85797.f90: New test.
    
    From-SVN: r270047

commit a63e72d6fe3b51f0a6d97e6e000b68083219a6b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 31 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r270039

commit 0dddef68d86c5d236dae4dd21246b72b7730a781
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 30 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r270027

commit ad54bd55f875a9f8e598b0194fa0ad3bc4c83f9f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 29 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r270010

commit e792a30bb34b47ff6eac1b16493a9e7066b307b9
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Mar 28 09:53:49 2019 +0100

    Backport r265786
    
    2019-03-28  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-11-05  Martin Liska  <mliska@suse.cz>
    
            PR web/87829
            * doc/invoke.texi: Remove options that are
            not disabled with -Os.
    
    From-SVN: r269987

commit c0f5208df67340d81006705c59511804295f8d4b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 28 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269981

commit 1fc135beb0f00fe2b71af95fd48165f6d160c35f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 27 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269956

commit c300b1333030597725efedcf3020c41e833635aa
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Mar 26 13:18:23 2019 +0000

    backport: [multiple changes]
    
    2019-02-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-02-12  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89253
            * tree-ssa-loop-split.c (tree_ssa_split_loops): Check we can
            duplicate the loop.
    
            * gfortran.dg/pr89253.f: New testcase.
    
            2019-02-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/89223
            * tree-data-ref.c (initialize_matrix_A): Fail if constant
            doesn't fit in HWI.
            (analyze_subscript_affine_affine): Handle failure from
            initialize_matrix_A.
    
            * gcc.dg/torture/pr89223.c: New testcase.
    
            2019-01-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/88739
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Avoid generating
            BIT_FIELD_REFs of non-mode-precision integral operands.
    
            * gcc.c-torture/execute/pr88739.c: New test.
    
    From-SVN: r269942

commit b53faa7a5123cea6a5d97395a109e6387fc9f1b8
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Mar 26 11:18:26 2019 +0000

    backport: [multiple changes]
    
    2019-03-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-01-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/86554
            * tree-ssa-sccvn.c (visit_nary_op): When value-numbering to
            expressions with different overflow behavior make sure there's an
            available expression on the path.
    
            * gcc.dg/torture/pr86554-1.c: New testcase.
            * gcc.dg/torture/pr86554-2.c: Likewise.
    
            2018-11-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/88105
            * tree-ssa-dom.c (pass_dominator::execute): Do not walk
            backedges.
    
            * gcc.dg/gomp/pr88105.c: New testcase.
    
            2018-03-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/84552
            * tree-scalar-evolution.c: Include tree-into-ssa.h.
            (follow_copies_to_constant): Do not follow SSA names registered
            for update.
    
            * gcc.dg/graphite/pr84552.c: New testcase.
    
    From-SVN: r269939

commit d624117d14153408d3905fe1d98900ddd48905bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 26 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269929

commit eafa1d853a90d7e247f65e0a7c25ce26e6820141
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Mon Mar 25 20:58:04 2019 +0100

    re PR fortran/71861 ([F03] ICE in write_symbol(): bad module symbol)
    
    fix PR 71861
    
    2019-03-25  Janus Weil  <janus@gcc.gnu.org>
    
            PR fortran/71861
            * symbol.c (check_conflict): ABSTRACT attribute conflicts with
            INTRINSIC attribute.
    
    2019-03-25  Janus Weil  <janus@gcc.gnu.org>
    
            PR fortran/71861
            * gfortran.dg/interface_abstract_5.f90: New test case.
    
    From-SVN: r269922

commit 6dc563e7fc03a1fbdcb7985777f478df21c9e555
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 25 00:16:24 2019 +0000

    Daily bump.
    
    From-SVN: r269903

commit b996ae52cedda345f6c31bbd7e89a79304831d5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 24 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r269892

commit a75aba69e68b3796d9b802d008e27e72f17f3f86
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Mar 23 16:01:57 2019 +0000

    re PR fortran/68009 (prototype for gfortran_runtime_error with inline matmul)
    
    2019-03-23  Thomas Koenig  <tkoeng@gcc.gnu.org>
    
        PR fortran/68009
        Backport from trunk
        * iresolve.c: Include trans.h.
        (gfc_resolve_fe_runtine_error): Set backend_decl on
        resolved_sym.
    
    From-SVN: r269890

commit 957189dea2017f6336a7948c12af47ec7bd4afca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 23 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269883

commit 0dd7d4d48dfa9965c87094b1f5325294ab73752a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 22 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269864

commit c57f5f2c12a1784f6297ad8afc8e4b2d55fd44a7
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Thu Mar 21 20:31:30 2019 +0100

    [testsuite] Fix 'dg-compile-aux-modules' diagnostic
    
            gcc/testsuite/
            PR fortran/56408
            * gcc.target/powerpc/ppc-fortran/ppc-fortran.exp
            (dg-compile-aux-modules): Fix diagnostic.
            * gfortran.dg/coarray/caf.exp (dg-compile-aux-modules): Likewise.
            * gfortran.dg/dg.exp (dg-compile-aux-modules): Likewise.
    
    trunk r269851
    
    From-SVN: r269853

commit 43d616dedc8527c1fed1f89d94ccddcc04b5e241
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Thu Mar 21 20:17:12 2019 +0100

    [testsuite, Fortran] Apply DejaGnu 1.4.4 work-around also to 'gfortran.dg/coarray/caf.exp:dg-compile-aux-modules'
    
    See trunk r215293.  This unifies all 'dg-compile-aux-modules' instances.
    
            gcc/testsuite/
            PR fortran/56408
            * gfortran.dg/coarray/caf.exp (dg-compile-aux-modules): Workaround
            missing nexted dg-test call support in dejaGNU 1.4.4.
    
    trunk r269848
    
    From-SVN: r269850

commit 4ad6536a9317022a1b7c9f3b0cc9a548ee302b59
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Thu Mar 21 19:57:56 2019 +0100

    [testsuite, Fortran] Consistently set 'DEFAULT_FFLAGS'
    
    In the same 'runtest' instance, 'global' variables persist from one '*.exp'
    file to another.
    
    All other '*.exp' files are using " -pedantic-errors" instead of the empty
    string as the default for 'DEFAULT_FFLAGS'.  Thus this setting of
    'DEFAULT_FFLAGS' is not idempotent, depends on whether
    'gfortran.dg/ieee/ieee.exp', or an other defining '*.exp' file is executed
    first.
    
            gcc/testsuite/
            PR fortran/29383
            * gfortran.dg/ieee/ieee.exp (DEFAULT_FFLAGS): Set the same as in
            other '*.exp' files.
    
    trunk r269845
    
    From-SVN: r269847

commit 726bf18a0f26af3e9aa80bec5464dcc5340457a2
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Thu Mar 21 17:13:55 2019 +0000

    rs6000.c (rs6000_analyze_swaps): Rebuild ud- and du-chains between phases.
    
    2019-03-21  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_analyze_swaps): Rebuild
            ud- and du-chains between phases.
    
    From-SVN: r269843

commit 64963d46e55394a3a896ccd3f5ecc88b322a9dcf
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Mar 21 12:28:26 2019 +0000

    backport: re PR tree-optimization/89505 (LibreOffice miscompilation starting with r260383)
    
    2019-03-21  Matthias Klose  <doko@ubuntu.com>
    
            Backport from mainline
            2019-02-26  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89505
            * tree-ssa-structalias.c (compute_dependence_clique): Make sure
            to handle restrict pointed-to vars with multiple subvars
            correctly.
    
    2019-03-21  Matthias Klose  <doko@ubuntu.com>
    
            Backport from mainline
            2019-02-26  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89505
            * gcc.dg/torture/pr89505.c: New testcase.
    
    From-SVN: r269836

commit 77d2ec444ddb752be660570f0037ec4ed5000298
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 21 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269829

commit 943c997c6a025a51e5a528530c2918d627acc9eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 20 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r269815

commit 15b03dc1289e5c69c1dbd667ad9428e7c46e1527
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 19 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r269786

commit 7340e87fc449a035901bdf21e191442a4d6e7fc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 18 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r269747

commit 41557ae3d543f6f613201bdac7bb3f6dc8476e07
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Mar 17 12:54:29 2019 +0000

    re PR fortran/84394 (compiler error when using modules with derived types in block data subprograms)
    
    2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84394
            Backport from trunk
            * symbol.c (gfc_add_subroutine): If we are encountering a
            subrtoutine within a BLOCK DATA and the name starts with an
            underscore, do not check.
    
    2019-03-17  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84394
            Backport from trunk
            * gfortran.dg/blockdata_11.f90: New test.
    
    From-SVN: r269741

commit face721e11f1a053c0db2478f8c0f47e19625190
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sun Mar 17 09:27:56 2019 +0000

    x32: Add addr32 prefix to VSIB address
    
    32-bit indices in VSIB address are sign-extended to 64 bits.  In x32,
    when 32-bit indices are used as addresses, like in
    
    vgatherdps %ymm7, 0(,%ymm9,1), %ymm6
    
    32-bit indices, 0xf7fa3010, is sign-extended to 0xfffffffff7fa3010 which
    is invalid address.  Add addr32 prefix to UNSPEC_VSIBADDR instructions
    for x32 if there is no base register nor symbol.
    
    This fixes 175.vpr and 254.gap in SPEC CPU 2000 on x32 with
    
    -Ofast -funroll-loops -march=haswell
    
    gcc/
    
            Backport from mainline
            2019-03-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/89523
            * config/i386/i386.c (ix86_print_operand): Handle 'M' to add
            addr32 prefix to VSIB address for X32.
            * config/i386/sse.md (*avx512pf_gatherpf<mode>sf_mask): Prepend
            "%M2" to opcode.
            (*avx512pf_gatherpf<mode>df_mask): Likewise.
            (*avx512pf_scatterpf<mode>sf_mask): Likewise.
            (*avx512pf_scatterpf<mode>df_mask): Likewise.
            (*avx2_gathersi<mode>): Prepend "%M3" to opcode.
            (*avx2_gathersi<mode>_2): Prepend "%M2" to opcode.
            (*avx2_gatherdi<mode>): Prepend "%M3" to opcode.
            (*avx2_gatherdi<mode>_2): Prepend "%M2" to opcode.
            (*avx2_gatherdi<mode>_3): Prepend "%M3" to opcode.
            (*avx2_gatherdi<mode>_4): Prepend "%M2" to opcode.`
            (*avx512f_gathersi<mode>): Prepend "%M4" to opcode.
            (*avx512f_gathersi<mode>_2): Prepend "%M3" to opcode.
            (*avx512f_gatherdi<mode>): Prepend "%M4" to opcode.
            (*avx512f_gatherdi<mode>_2): Prepend "%M3" to opcode.
            (*avx512f_scattersi<mode>): Prepend "%M0" to opcode.
            (*avx512f_scatterdi<mode>): Likewise.
    
    gcc/testsuite/
    
            Backport from mainline
            2019-03-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/89523
            * gcc.target/i386/pr89523-1a.c: New test.
            * gcc.target/i386/pr89523-1b.c: Likewise.
            * gcc.target/i386/pr89523-2.c: Likewise.
            * gcc.target/i386/pr89523-3.c: Likewise.
            * gcc.target/i386/pr89523-4.c: Likewise.
            * gcc.target/i386/pr89523-5.c: Likewise.
            * gcc.target/i386/pr89523-6.c: Likewise.
            * gcc.target/i386/pr89523-7.c: Likewise.
            * gcc.target/i386/pr89523-8.c: Likewise.
            * gcc.target/i386/pr89523-9.c: Likewise.
    
    From-SVN: r269739

commit a32ffe2b8f84c34bbae85b6e75dfcde4fb47c40b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 17 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269735

commit 7bbc571861f52b8ff15f61a6cb409ed80382972d
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Mar 16 14:03:00 2019 +0000

    re PR fortran/66089 (elemental dependency mishandling when class array are involved)
    
    2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66089
            Backport from trunk
            * trans-array.c (gfc_scalar_elemental_arg_saved_as_reference):
            Return false if a scalar tempoary is needed.
            (gfc_walk_variable_expr): Fix up class refs.
    
    2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66089
            Backport from trunk
            * gfortran.dg/dependency_53.f90: New test.
            * gfortran.dg/assumed_type_2.f90: Adapted tree dumps.
            * gfortran.dg/no_arg_check_2.f90: Likewise.
    
    From-SVN: r269725

commit d21a6375f663adfb20cf285f9ac19b9df37d9f63
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Mar 16 13:24:40 2019 +0000

    re PR fortran/66695 ([F03] ICE with binding-name equal to the name of a use-associated procedure)
    
    2019-03-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66695
            PR fortran/77746
            PR fortran/79485
            Backport from trunk
            * gfortran.h (gfc_symbol): Add bind_c component.
            (gfc_get_gsymbol): Add argument bind_c.
            * decl.c (add_global_entry): Add bind_c argument to
            gfc_get_symbol.
            * parse.c (parse_block_data): Likewise.
            (parse_module): Likewise.
            (add_global_procedure): Likewise.
            (add_global_program): Likewise.
            * resolve.c (resolve_common_blocks): Likewise.
            (resolve_global_procedure): Likewise.
            (gfc_verify_binding_labels): Likewise.
            * symbol.c (gfc_get_gsymbol): Add argument bind_c. Set bind_c
            in gsym.
            * trans-decl.c (gfc_get_module_backend_decl): Add bind_c argument
            to gfc_get_symbol.
            (gfc_get_extern_function_decl): If the sym has a binding label
            and it cannot be found in the global symbol tabel, it is the wrong
            one and vice versa.
    
    2019-03-16 Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/66695
            PR fortran/77746
            PR fortran/79485
            Backport from trunk
            * gfortran.dg/binding_label_tests_30.f90: New test.
            * gfortran.dg/binding_label_tests_31.f90: New test.
            * gfortran.dg/binding_label_tests_32.f90: New test.
            * gfortran.dg/binding_label_tests_33.f90: New test.
    
    From-SVN: r269723

commit d847242760d7dab690c705e66e6b194237d63384
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 16 00:16:14 2019 +0000

    Daily bump.
    
    From-SVN: r269718

commit 5b3e3ac85b819df67ba3ab3a0f79d984f21cd430
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 15 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r269696

commit 618e48ada6183eaf6846e8b0cbc866f9de094ac8
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu Mar 14 17:54:43 2019 +0100

    Zero local estimated benefit for cloning extern inline function
    
    2019-03-14  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2019-03-07  Martin Jambor  <mjambor@suse.cz>
    
            PR lto/87525
            * ipa-cp.c (perform_estimation_of_a_value): Account zero time benefit
            for extern inline functions.
    
            testsuite/
            * gcc.dg/ipa/ipcp-5.c: New test.
    
    From-SVN: r269688

commit c7b96091a3d18605d719b01eecb482aa38217f38
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Mar 14 09:18:07 2019 +0000

    backport: re PR target/84272 (AddressSanitizer: heap-use-after-free ../../gcc/config/aarch64/cortex-a57-fma-steering.c:519 in fma_node::get_parity())
    
    2019-03-14  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84272
            * config/aarch64/cortex-a57-fma-steering.c (fma_forest::merge_forest):
            Use ++iter rather than iter++ for std::list iterators.
            (func_fma_steering::dfs): Likewise.  Don't delete nodes right away,
            defer deleting them until all nodes in the forest are processed.  Do
            free even leaf nodes.  Change to_process into auto_vec.
    
            * g++.dg/opt/pr84272.C: New test.
    
    From-SVN: r269676

commit 50c932bb80091361d598cd86400d2a74b7a02421
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 14 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r269668

commit e001a79f80527cd087e8329c6f56dadb717e5ced
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Mar 13 22:15:33 2019 +0000

    re PR fortran/87673 (Errors caused by using function for character length in allocate with typespec)
    
    2019-03-13  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/87673
            Backport from trunk
            * match.c (gfc_match_type_spec): Remove call to
            gfc_resolve_expr for character length.
    
    2019-03-13  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/87673
            Backport from trunk
            * gfortran.dg/charlen_17.f90: New test.
    
    From-SVN: r269666

commit a0604a3d488ff30a606dc4ddd60bed6b2b0814c9
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Wed Mar 13 11:46:56 2019 +0000

    Backport of r269499 and related testism fix r269596.
    
    gcc/ChangeLog:
    2019-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2019-03-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * config/arm/arm.h (TARGET_FP16_TO_DOUBLE): Add TARGET_VFP_DOUBLE
            requirement.
    
    gcc/testsuite/ChangeLog:
    2019-03-13  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2019-03-08  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * gcc.target/arm/f16_f64_conv_no_dp.c: New test.
    
            Backport from mainline
            2019-03-11  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.target/arm/f16_f64_conv_no_dp.c: Add arm_fp16_ok effective
            target.
    
    From-SVN: r269647

commit 02b0f5b0ea1bb3e29e140e07302ee1fde33349b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 13 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269629

commit 76b3ff257e974e16ad320597eb60286e1ab25fb6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 12 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r269599

commit 0123e517815a1a25893774860b6df50160c39d58
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Mar 11 12:18:22 2019 +0100

    Backport r268981
    
    2019-03-11  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-18  Martin Liska  <mliska@suse.cz>
    
            PR c++/89383
            * line-map.c (linemap_line_start): Use 1UL in order
            to not overflow.
    
    From-SVN: r269577

commit df68f66c3244757bba4ab853e7fc89e39c3c552a
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Mar 11 12:18:08 2019 +0100

    Backport r268789
    
    2019-03-11  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-11  David Malcolm  <dmalcolm@redhat.com>
    
            PR lto/88147
            * input.c (selftest::test_line_offset_overflow): New selftest.
            (selftest::input_c_tests): Call it.
    2019-03-11  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-11  Martin Liska  <mliska@suse.cz>
    
            PR lto/88147
            * line-map.c (linemap_line_start): Don't reuse the existing line
            map if the line offset is sufficiently large to cause overflow
            when computing location_t values.
    
    From-SVN: r269576

commit 7e010b1d224ce4c2870be79416216d4d1d4e7735
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 11 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269563

commit 4ed0f84e48a1806da7e046dc226ae1997c6fcfb9
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Mar 10 11:26:25 2019 +0000

    re PR fortran/71544 (gfortran compiler optimization bug when dealing with c-style pointers)
    
    2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71544
            Backport from trunk
            * trans-types.c (gfc_typenode_for_spec) Set ts->is_c_interop of
            C_PTR and C_FUNPTR.
            (create_fn_spec): Mark argument as escaping if ts->is_c_interop is set.
    
    2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71544
            Backport from trunk
            * gfortran.dg/c_ptr_tests_19.f90: New test.
    
    From-SVN: r269552

commit 87f20bdbb09bc212b90d1f68039ef0f6adfab40a
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Mar 10 11:09:30 2019 +0000

    re PR fortran/87734 (ICE in is_illegal_recursion check for character len= parameter)
    
    2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
            Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/87734
            Backort from trunk
            * symbol.c (gfc_add_procedure): Only throw an error if the
            procedure has not been declared either PUBLIC or PRIVATE.
            * resolve.c (is_illegal_recursion): Remove an assert().
    
    2019-03-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/87734
            Backport from trunk
            * gfortran.dg/public_private_module_10.f90: New test.
    
    
    Co-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>
    
    From-SVN: r269550

commit 599aabbf0ab20efcdcc7c89a8708e3dd95daac49
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sun Mar 10 07:25:13 2019 +0000

    backport: re PR c++/89585 (GCC 8.3: asm volatile no longer accepted at file scope)
    
    gcc/cp/
    
    2019-04-10  Matthias Klose  <doko@ubuntu.com>
    
            Backport from the gcc-8 branch
            2019-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89585
            * parser.c (cp_parser_asm_definition): Parse asm qualifiers even
            at toplevel, but diagnose them.
    
    gcc/testsuite/
    
    2019-04-10  Matthias Klose  <doko@ubuntu.com>
    
            Backport from the gcc-8 branch
            2019-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/89585
            * g++.dg/asm-qual-3.C: Adjust expected diagnostics.
    
    From-SVN: r269546

commit 7e510c149292df870e372ebe5d745edf0bdd4bb8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 10 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r269543

commit ec402002073e6f878262b5259fbddd2076a85160
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 9 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269518

commit bf8ec4e76870f13cf7fa4fa4287ff95e519fc31c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 8 00:16:21 2019 +0000

    Daily bump.
    
    From-SVN: r269474

commit 3eccf8460c49273af2713c6c44051f7364653847
Author: Xiong Hu Luo <luoxhu@linux.ibm.com>
Date:   Thu Mar 7 01:54:46 2019 +0000

    backport r268834 from mainline to gcc-7-branch
    
    Backport r268834 of "Add support for the vec_sbox_be, vec_cipher_be etc."
    from mainline to gcc-7-branch.
    
    gcc/ChangeLog:
    2019-03-07  Xiong Hu Luo  <luoxhu@linux.ibm.com>
    
            Backport of r268834 from mainline to gcc-7-branch.
            2019-02-13  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.h (vec_sbox_be, vec_cipher_be,
            vec_cipherlast_be, vec_ncipher_be, vec_ncipherlast_be): New #defines.
            * config/rs6000/crypto.md (CR_vqdi): New define_mode_iterator.
            (crypto_vsbox_<mode>, crypto_<CR_insn>_<mode>): New define_insns.
            * config/rs6000/rs6000-builtin.def (VSBOX_BE): New BU_CRYPTO_1.
            (VCIPHER_BE, VCIPHERLAST_BE, VNCIPHER_BE, VNCIPHERLAST_BE):
            New BU_CRYPTO_2.
            * config/rs6000/rs6000.c (builtin_function_type)
            <CRYPTO_BUILTIN_VSBOX_BE, CRYPTO_BUILTIN_VCIPHER_BE,
            CRYPTO_BUILTIN_VCIPHERLAST_BE, CRYPTO_BUILTIN_VNCIPHER_BE,
            CRYPTO_BUILTIN_VNCIPHERLAST_BE>: New switch options.
            * doc/extend.texi (vec_sbox_be, vec_cipher_be, vec_cipherlast_be,
            vec_ncipher_be, vec_ncipherlast_be): New builtin functions.
    
    gcc/testsuite/ChangeLog:
    2019-03-07  Xiong Hu Luo  <luoxhu@linux.ibm.com>
    
            Backport of r268834 from mainline to gcc-7-branch.
            2019-01-23  Xiong Hu Luo  <luoxhu@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-1.c
            (crypto1_be, crypto2_be, crypto3_be, crypto4_be, crypto5_be):
            New testcases.
    
    From-SVN: r269450

commit 05e059f1db0338fa6f7e7f023b680878978f0ddf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 7 00:16:12 2019 +0000

    Daily bump.
    
    From-SVN: r269446

commit 84f1346bb98aa6b0a24e89a86cd4f0c6829c011a
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Mar 6 20:28:22 2019 +0000

    re PR fortran/72714 ([Coarray] ICE in gfc_array_init_size, at fortran/trans-array.c:5235)
    
    2019-03-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/72714
            Backport from trunk
            * resolve.c (resolve_allocate_expr): Add some tests for coarrays.
    
    2019-03-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/72714
            Backport from trunk
            * gfortran.dg/coarray_allocate_11.f90: New test.
    
    From-SVN: r269441

commit 723da2d09c75bf0f013eab8661ce77910315927e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269407

commit 709900eb06c9dc243b2aeedfd49718fcd136bf0f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 5 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r269379

commit 4b736fd66b1bd491c30f4d328b7ef97beca28aea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 4 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269358

commit 874bfe7b42ea1a9cb6f503259e005f7fe9453219
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Mar 3 20:36:12 2019 +0000

    backport: re PR fortran/77583 (ICE in pp_quoted_string, at pretty-print.c:966)
    
    2019-03-03  Harald Anlauf  <anlauf@gmx.de>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77583
            * symbol.c (check_conflict): Check for valid procedure name
            passed to error reporting routine.
    
            PR fortran/77583
            * gfortran.dg/pr77583.f90: New test.
    
    
    Co-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>
    
    From-SVN: r269355

commit e5ec6ea9273b6141bbac718aeb4f4549bb8074b6
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Mar 3 09:20:09 2019 +0000

    re PR fortran/87689 (PowerPC64 ELFv2 function parameter passing violation)
    
    2019-03-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
        PR fortran/87689
        Backport from trunk
        * trans-decl.c (gfc_get_extern_function_decl): Add argument
        actual_args and pass it through to gfc_get_function_type.
        * trans-expr.c (conv_function_val): Add argument actual_args
        and pass it on to gfc_get_extern_function_decl.
        (conv_procedure_call): Pass actual arguments to conv_function_val.
        * trans-types.c (get_formal_from_actual_arglist): New function.
        (gfc_get_function_type): Add argument actual_args.  Generate
        formal args from actual args if necessary.
        * trans-types.h (gfc_get_function_type): Add optional argument.
        * trans.h (gfc_get_extern_function_decl): Add optional argument.
    
    2019-03-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
        PR fortran/87689
        Backport from trunk
        * gfortran.dg/lto/20091028-1_0.f90: Add -Wno-lto-type-mismatch to
        options.
        * gfortran.dg/lto/20091028-2_0.f90: Likewise.
        * gfortran.dg/lto/pr87689_0.f: New file.
        * gfortran.dg/lto/pr87689_1.f: New file.
        * gfortran.dg/altreturn_9_0.f90: New file.
        * gfortran.dg/altreturn_9_1.f90: New file.
    
    From-SVN: r269350

commit f75fa4140b1c7558610e5bc5efcfab949462aa93
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 3 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r269345

commit 247454e48a1470962f92fff64a38b634b6971e87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 2 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r269334

commit b4dad9385dcb3087dae6b3e7476a5e6affbc8c55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 1 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269295

commit 4e099a1636ea3f3440507fe3d4ab8c834f0d3c67
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 28 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r269268

commit e053aaac5065fe39eaff06641fd9f7607be6945e
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Feb 27 20:33:15 2019 +0100

    re PR target/89397 (ICE in build_call_expr_loc_array at gcc/tree.c:11563 since r229082)
    
            PR target/89397
            * config/i386/i386.c (ix86_atomic_assign_expand_fenv): Check
            TARGET_SSE in addition to TARGET_SSE_MATH.
    
            (ix86_excess_precision): Ditto.
            (ix86_float_exceptions_rounding_supported_p): Ditto.
            (use_rsqrt_p): Ditto.
            * config/i386/sse.md (rsqrt<mode>2): Ditto.
    
    From-SVN: r269263

commit 1d5aacff612239061f12f308c93455e1c070b701
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 27 00:16:22 2019 +0000

    Daily bump.
    
    From-SVN: r269237

commit de4e663d340b3f67be660ff652770a632673f314
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Feb 26 08:12:21 2019 +0000

    re PR ada/81956 (call to null procedure not optimized away)
    
            PR ada/81956
            Backport from mainline
            2017-09-06  Ed Schonberg  <schonberg@adacore.com>
    
            * exp_ch6.adb (Expand_Call_Helper): Do not optimize calls to
            null procedures when GNAT coverage is used, so that their (empty)
            bodies are properly covered.
    
            2017-09-06  Ed Schonberg  <schonberg@adacore.com>
    
            * exp_ch6.adb (Expand_Call_Helper): Replace call to null
            procedure by a single null statement, after evaluating the
            actuals that require it.
    
    From-SVN: r269205

commit 512b3845d3e0d3c0fea78214338589f45b72a916
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 26 00:16:12 2019 +0000

    Daily bump.
    
    From-SVN: r269199

commit e08eb991a1bf9cd52cd217c789f480fc9a8f0c1e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 25 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269181

commit 766572a133c8f6807b4633e8d518d710730fadbd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 24 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269171

commit 83fc627e0503cf0ab1383782c4aed91b842efb6f
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Feb 23 18:44:54 2019 +0000

    backport: re PR fortran/88117 (ICE in gimplify_var_or_parm_decl, at gimplify.c:2697)
    
    2019-02-23  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88117
            * resolve.c (deferred_op_assign): Return if the lhs expression
            has the pointer attribute.
    
    2019-02-23  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88117
            * gfortran.dg/deferred_character_32.f90 : New test
    
    From-SVN: r269163

commit 4d384d2632811b415d4f793916dc8e0f19fd6959
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Feb 23 11:49:47 2019 +0000

    re PR fortran/71066 (ICE in set_loop_bounds, at fortran/trans-array.c:4680)
    
    2019-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71066
            Backport from trunk
            * trans-decl.c (generate_coarray_sym_init):  For an array
            constructor in a DATA statement of a coarray variable, set the
            rank to 1 to avoid confusion later on.  If the constructor
            contains only one value, use that for initiailizig.
    
    2019-02-23  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71066
            Backport from trunk
            * gfortran.dg/coarray_data_1.f90: New test.
    
    From-SVN: r269155

commit 0c47a0a6e1acecb765de369745a0cf8dd94f28d7
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Feb 23 10:04:41 2019 +0000

    re PR ada/89349 (segfault when building GCC 7 & 8 branch with GCC master)
    
            PR ada/89349
            Backport from mainline
            2018-05-25  Arnaud Charlet  <charlet@adacore.com>
    
            * osint.ads (Unknown_Attributes): No longer pretend this is a constant.
            (No_File_Info_Cache): Initialize separately.
            * osint.adb (No_File_Info_Cache): Update initializer.
    
    From-SVN: r269154

commit cfba47dda26867813e4349adbc46196d9d1aac1f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Feb 23 01:01:56 2019 +0000

    PR libstdc++/89446 fix null pointer dereference in char_traits
    
            PR libstdc++/89446
            * include/bits/char_traits.h (__constant_char_array): Check index is
            in range before dereferencing.
            * testsuite/21_strings/basic_string_view/operators/char/89446.cc:
            New test.
    
    From-SVN: r269143

commit bfa35db31cfbe082319b6bc753bda44d43d9ddea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 23 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r269140

commit 6c3ecfd782ba29694248facfb6d655db0e246e36
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 22 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r269083

commit a981ee340d5908e62aaa4500e01641fe01d94e5e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 21 00:16:14 2019 +0000

    Daily bump.
    
    From-SVN: r269060

commit 4d8befc17ab0baf84facf394249cec693e0d7c19
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 20 00:16:31 2019 +0000

    Daily bump.
    
    From-SVN: r269029

commit a86c39f40fb010645024e7b74838a6c3f89bfd5e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 19 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r269000

commit f0558cbb064fc6652a3dbf62b4a34c075947fc31
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 18 00:16:47 2019 +0000

    Daily bump.
    
    From-SVN: r268975

commit 4c32a1a7b0ea89700b87b2c3a7f0172590d1a871
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 17 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r268965

commit 5b5ca2fa90f69d330ff8ad2737beb9193e2f3ea3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 16 00:16:22 2019 +0000

    Daily bump.
    
    From-SVN: r268953

commit d90ca69856e9f3a0942c75d581cb140dc94ac4a4
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Feb 15 11:59:02 2019 +0100

    Backport r268873
    
    2019-02-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-14  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/89242
            * dce.c (delete_unmarked_insns): Call free_dominance_info we
            process a transformation.
    2019-02-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-14  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/89242
            * g++.dg/pr89242.C: New test.
    
    From-SVN: r268938

commit 75babf8b3bacea47fd7910530e65213c35dae40c
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Feb 15 11:58:49 2019 +0100

    Backport r268762
    
    2019-02-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/89009
            * ipa-cp.c (build_toporder_info): Remove usage of a param.
            * ipa-inline.c (inline_small_functions): Likewise.
            * ipa-pure-const.c (propagate_pure_const): Likewise.
            (propagate_nothrow): Likewise.
            * ipa-reference.c (propagate): Likewise.
            * ipa-utils.c (struct searchc_env): Remove unused field.
            (searchc): Always search across AVAIL_INTERPOSABLE.
            (ipa_reduced_postorder): Always allow AVAIL_INTERPOSABLE as
            the only called IPA pure const can properly not propagate
            across interposable boundary.
            * ipa-utils.h (ipa_reduced_postorder): Remove param.
    2019-02-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2019-02-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/89009
            * g++.dg/ipa/pr89009.C: New test.
    
    From-SVN: r268937

commit f09d4c9b7d411747af0f87410091a171379df87c
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 15 10:56:13 2019 +0000

    * gcc.target/sparc/struct-ret-check-1.c: Add -fno-pie option.
    
    From-SVN: r268936

commit 40bc05b966a4e107e6effa884e694e70da7ba8f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 15 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r268918

commit c5f00170b98699eac0201f9c80ae8eafafd271f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 14 00:16:23 2019 +0000

    Daily bump.
    
    From-SVN: r268857

commit 329f93b411b5760d628c4ecf088f8ae3e17d012d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 13 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r268831

commit 3ef5fd2607c7af2e74ff9df590b0d008607ffddf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r268786

commit f05287cc4615d99646e0d7cffa2f8ade6b230b5a
Author: Stefan Agner <stefan@agner.ch>
Date:   Mon Feb 11 10:31:13 2019 +0100

    ARM: fix -masm-syntax-unified (PR88648)
    
            Backport from mainline.
            2019-01-10  Stefan Agner  <stefan@agner.ch>
    
            PR target/88648
            * config/arm/arm.c (arm_option_override_internal): Force
            opts->x_inline_asm_unified to true only if TARGET_THUMB2_P.
    
            * gcc.target/arm/pr88648-asm-syntax-unified.c: Add test to
            check if -masm-syntax-unified gets applied properly.
    
    From-SVN: r268765

commit 35a1544d0a6a9e08d14465eecd42d1e32e3a21b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 11 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r268756

commit b0201e0a4b0877abe276d985bf630f1d93bd7ab2
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Feb 10 20:05:34 2019 +0000

    backport: re PR fortran/89077 (ICE using * as len specifier for character parameter)
    
    2019-02-10  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from trunk
            PR fortran/89077
            * decl.c (add_init_expr_to_sym): Copy length of string initializer
            to declared symbol.
    
            PR fortran/89077
            * gfortran.dg/pr89077.f90: New test.
    
    From-SVN: r268753

commit ddcb4f31c9fe554b540255b4562504ac176ef01e
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Feb 10 18:41:03 2019 +0000

    re PR fortran/71723 ([F08] ICE on invalid pointer initialization)
    
    2019-02-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71723
            Backport from trunk
            * expr.c (gfc_check_assign): Add argument is_init_expr.  If we are
            looking at an init expression, issue error if the target is not a
            TARGET and we are not looking at a procedure pointer.
            * gfortran.h (gfc_check_assign): Add optional argument
            is_init_expr.
    
    2019-02-10  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71723
            Backport from trunk
            * gfortran.dg/pointer_init_2.f90: Adjust error messages.
            * gfortran.dg/pointer_init_6.f90: Likewise.
            * gfortran.dg/pointer_init_9.f90: New test.
    
    From-SVN: r268751

commit 5c5f48a006d995e1d9c88b2c6de09c6dc45b69f1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 10 00:16:25 2019 +0000

    Daily bump.
    
    From-SVN: r268733

commit c17d740147947dd6f59495e107aa4e54f7824094
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Feb 9 20:09:56 2019 +0000

    re PR fortran/71860 ([OOP] ICE on pointing to null(mold), verify_gimple failed)
    
    2019-02-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
        PR fortran/71860
        Backport from trunk
        * gfortran.dg/null_10.f90: New test.
    
    From-SVN: r268731

commit e08292047c4a856470bce333929e93fee4ec19d4
Author: Alan Modra <amodra@gmail.com>
Date:   Sat Feb 9 23:14:02 2019 +1030

    [RS6000] Correct save_reg_p
    
            PR target/88343
            * config/rs6000/rs6000.c (rs6000_reg_live_or_pic_offset_p): Match
            logic in rs6000_emit_prologue emitting pic_offset_table setup.
    
    From-SVN: r268722

commit f79c0ee284c1b1031c065572f0bd12d912eb5785
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 9 00:16:21 2019 +0000

    Daily bump.
    
    From-SVN: r268710

commit 915a3e97e356b55520fda0c6883a291b088fa1ad
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Fri Feb 8 11:22:53 2019 +0000

    Fix function name
    
    From-SVN: r268677

commit 14e88f9f2bf055640f04dd14a8bff201d1346dec
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 8 11:08:07 2019 +0000

    trans.c (Regular_Loop_to_gnu): Replace tests on individual flag_unswitch_loops and flag_tree_loop_vectorize...
    
            * gcc-interface/trans.c (Regular_Loop_to_gnu): Replace tests on
            individual flag_unswitch_loops and flag_tree_loop_vectorize switches
            with test on global optimize switch.
            (Raise_Error_to_gnu): Likewise.
    
    From-SVN: r268673

commit 53e07674f9347ff2c4416de4035b5956e918a542
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 8 10:37:15 2019 +0000

    backport: re PR target/85755 (PowerPC Gcc's -mupdate produces inefficient code on power8/power9 machines)
    
            Backport from mainline
            2018-06-11  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/85755
            * config/rs6000/rs6000.md (*movdi_internal32): Put constraint modifiers
            on the correct operand.
            (*movdi_internal64): Ditto.
    
    From-SVN: r268670

commit f5d12960f675e05071cdb145a25fb87615b582e6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 8 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r268660

commit b0e7f9ed8e04b32b27005d1e7bc8651520779f27
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Feb 7 16:29:48 2019 +0000

    * s-linux-sparc.ads (ETIMEDOUT): Set to correct value.
    
    From-SVN: r268654

commit 268263d27b690c29f9a265a9a1b79f8232a0e5f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 7 00:16:15 2019 +0000

    Daily bump.
    
    From-SVN: r268599

commit 71174464215e2fa550a6699117c9aad437fd3eb3
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Feb 6 23:28:34 2019 +0000

    backport: decl.c (annotate_value): Tidy up.
    
            Backport from mainline
            2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc-interface/decl.c (annotate_value): Tidy up.
            <INTEGER_CST>: Set TCODE instead of recursing.
            <COMPONENT_REF>: Set TCODE instead of calling Create_Node manually.
            <MULT_EXPR, PLUS_EXPR>: Fold conversions into inner operations.
            <BIT_AND_EXPR>: Adjust.
            <CALL_EXPR>: Do not fall through.
    
    From-SVN: r268598

commit 19a953fb60da0b0035fc08d35b1bf7f38da22c66
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Wed Feb 6 21:35:44 2019 +0000

    backport: rs6000-c.c (altivec-resolve_overloaded_builtin): Change handling of ALTIVEC_BUILTIN_VEC_EXTRACT.
    
    gcc/ChangeLog:
    
    2019-02-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline.
            2019-01-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            * config/rs6000/rs6000-c.c (altivec-resolve_overloaded_builtin):
            Change handling of ALTIVEC_BUILTIN_VEC_EXTRACT.  Coerce result to
            type of vector element when vec_extract is implemented by direct
            move.
    
    gcc/testsuite/ChangeLog:
    
    2019-02-06  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            2019-02-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            * gcc.target/powerpc/vec-extract-slong-1.c: Require p8 execution
            hardware.
            * gcc.target/powerpc/vec-extract-schar-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-sint128-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-sshort-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-ulong-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-uchar-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-sint-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-uint128-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-ushort-1.c: Likewise.
            * gcc.target/powerpc/vec-extract-uint-1.c: Likewise.
    
            Backport from mainline.
            2019-01-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            * gcc.target/powerpc/vec-extract-schar-1.c: New test.
            * gcc.target/powerpc/vec-extract-sint-1.c: New test.
            * gcc.target/powerpc/vec-extract-sint128-1.c: New test.
            * gcc.target/powerpc/vec-extract-slong-1.c: New test.
            * gcc.target/powerpc/vec-extract-sshort-1.c: New test.
            * gcc.target/powerpc/vec-extract-uchar-1.c: New test.
            * gcc.target/powerpc/vec-extract-uint-1.c: New test.
            * gcc.target/powerpc/vec-extract-uint128-1.c: New test.
            * gcc.target/powerpc/vec-extract-ulong-1.c: New test.
            * gcc.target/powerpc/vec-extract-ushort-1.c: New test.
    
    From-SVN: r268596

commit 52dc62100ba2191c85aafcad493f414a6dcab1a0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Feb 6 21:10:19 2019 +0000

    i386.c (ix86_expand_prologue): Emit a memory blockage after restoring registers saved to allocate the frame on...
    
            * config/i386/i386.c (ix86_expand_prologue): Emit a memory blockage
            after restoring registers saved to allocate the frame on Windows.
    
    From-SVN: r268595

commit 8ce34f480b16de4c54632c92d437ee456f75d382
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 6 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r268568

commit a735a9349659c9304ca1ebb54e6b26446adf7659
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Feb 5 21:23:07 2019 +0000

    re PR fortran/67679 (-Wunitialized reports on compiler-generated variables)
    
    2019-02-05  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/67679
            Backport from trunk
            * trans-array.c (gfc_array_allocate):  For setting the bounds on
            the new array, add a condition for a not previously allocated
            variable.
    
    2019-02-05  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/67679
            Backport from trunk
            * gfortran.dg/warn_undefined_1.f90: New test.
            * gfortran.dg/coarray_lock_7.f90: Fix patterns in test.
    
    From-SVN: r268560

commit 617eb3a96c4140e24a87acb983c74ccbb0971147
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Tue Feb 5 17:19:26 2019 +0000

    S/390: Remove load and test fp splitter
    
    gcc/ChangeLog:
    
    2019-02-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2019-02-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            PR target/88856
            * config/s390/s390.md: Remove load and test FP splitter.
    
    From-SVN: r268552

commit 7ef57a5a919b435f43c0a0fa96ab4c2d9587d4fc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 5 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r268526

commit 34ac433ca0a5aeedf3a14aba58b8ab053ed7b9ba
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Mon Feb 4 16:48:30 2019 +0000

    backport: [multiple changes]
    
    2019-02-04  Bill Schmidt  <wshmidt@linux.ibm.com>
    
            PR target/87064
            Backport from mainline
    
            2019-01-30  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR target/87064
            * config/rs6000/vsx.md (*vsx_reduc_<VEC_reduc_name>_v4sf_scalar):
            Disable for little-endian.
    
            2019-01-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/87064
            * config/rs6000/vsx.md (*vsx_reduc_<VEC_reduc_name>_v2df_scalar):
            Disable for little endian.
    
    From-SVN: r268524

commit 225331c8dbbfbec4a2389f7cbfa2b0332a2354fc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 4 00:16:19 2019 +0000

    Daily bump.
    
    From-SVN: r268505

commit dc7d643c4d2966965f77cfbccbf22b5d1853c459
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Feb 3 18:23:25 2019 +0000

    backport: re PR fortran/88393 ([OOP] Segfault with type-bound assignment)
    
    2019-02-03  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88393
            * trans-expr.c (gfc_conv_procedure_call): For derived entities,
            passed in parentheses to class formals, invert the order of
            copying allocatable components to taking the _data of the
            class expression.
    
    2019-02-03  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88393
            * gfortran.dg/alloc_comp_assign_16.f03 : New test.
    
    From-SVN: r268501

commit cd8d35ec8a947885a7c8aeeedafa053278ac7656
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Sun Feb 3 17:21:06 2019 +0100

    re PR fortran/88678 (Many gfortran.dg/ieee/ieee_X.f90 test cases fail starting with r267465)
    
    2019-02-03  Uroš Bizjak  <ubizjak@gmail.com>
    
            PR libfortran/88678
            Revert:
            2016-11-16  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR libfortran/78314
            * config/fpu-glibc.h (support_fpu_trap): Use feenableexcept.
    
    2019-02-03  Uroš Bizjak  <ubizjak@gmail.com>
    
            PR libfortran/88678
            * config/fpu-glibc.h (set_fpu_trap_exceptions): Clear stalled
            exception flags before changing trap mode.  Optimize to call
            feenableexcept and fedisableexcept only once.
    
    From-SVN: r268493

commit 620e386ae522abee399154b48163dceae5314986
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 3 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r268481

commit 70081fe64a696a1f8e1d68c63d19c38529bbf8e1
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Feb 2 17:07:40 2019 +0000

    re PR fortran/88298 (Bogus conversion warning for CSHIFT with -fno-range-check -m64)
    
    2019-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/88298
            Backport from trunk
            * arith.c (gfc_int2int): Do not warn if src->do_not_warn is set.
            * gfortran.h (gfc_expr): Add flag do_not_warn.
            * intrinsic.c (gfc_convert_type_warn): Set expr->do_not_warn if
            no warning is desired.
    
    2019-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/88298
            Backport from trunk
            * gfortran.dg/warn_conversion_10.f90: New test.
    
    From-SVN: r268479

commit 5a89ffe70888d896a6ecea12b83e89de96f4fd50
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Feb 2 16:57:39 2019 +0000

    re PR fortran/57048 (Handling of C_PTR and C_FUNPTR leads to reject valid)
    
    2019-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/57048
            Backport from trunk
            * interface.c (gfc_compare_types): If a derived type and an
            integer both have a derived type, and they are identical,
            this is a C binding type and compares equal.
    
    2019-02-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/57048
            Backport from trunk
            * gfortran.dg/c_funptr_1.f90: New file.
            * gfortran.dg/c_funptr_1_mod.f90: New file.
    
    From-SVN: r268478

commit 043065487339a6aa1a22b1e0c00439c2ee07882d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 2 00:16:04 2019 +0000

    Daily bump.
    
    From-SVN: r268467

commit 35c866d2d07671ad7908672548f373252868e678
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r268435

commit 16d6c1df7281105f9fdff4bec7950807df93f97d
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Thu Jan 31 21:55:45 2019 +0000

    backport: re PR middle-end/89008 (O2 and O1 results differ for simple test)
    
    2018-01-31  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2018-01-31  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/89008
            * gimple-ssa-strength-reduction.c (slsr_process_mul): Don't
            process anything of the form X * 0.
    
    From-SVN: r268431

commit fb8700b9b46728a163cf688c8606a88db9b0b185
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 31 12:05:19 2019 +0000

    backport: [multiple changes]
    
    2019-01-31  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-01-31  Richard Biener  <rguenther@suse.de>
    
            PR rtl-optimization/89115
            * lra.c (lra_rtx_hash): Properly hash CONST_INT values.
    
            2019-01-30  Richard Biener  <rguenther@suse.de>
    
            PR rtl-optimization/89115
            * opts.c (default_options_optimization): Reduce
            PARAM_MAX_DSE_ACTIVE_LOCAL_STORES by a factor of 10 at -O1.
            Make PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP reduction relative
            to the default.
    
    From-SVN: r268418

commit ceeedfe8c337557b7d801938f49f5a6ccde2d025
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 31 00:16:17 2019 +0000

    Daily bump.
    
    From-SVN: r268408

commit 13d26826f616d2339e9d2bfb39a2918a4b5a6300
Author: Manfred Schwarb <manfred99@gmx.ch>
Date:   Wed Jan 30 16:07:38 2019 +0100

    pr68318_1.f90: Fix a dg directive.
    
    2019-01-30  Manfred Schwarb  <manfred99@gmx.ch>
    
            * gfortran.dg/pr68318_1.f90: Fix a dg directive.
    
    From-SVN: r268393

commit 045e28d43300c630e57f81a7ff21d2f5103fa3d7
Author: Kewen Lin <linkw@gcc.gnu.org>
Date:   Wed Jan 30 08:18:05 2019 +0000

    backport: [multiple changes]
    
    2019-01-30  Kewen Lin  <linkw@gcc.gnu.org>
        Backport from mainline.
        gcc/
    
            2019-01-17  Kewen Lin  <linkw@gcc.gnu.org>
            * doc/extend.texi: Add four new prototypes for vec_ld and seven new
            prototypes for vec_st.
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add entries
            for scalar address type variants of altivec_vec_ld/altivec_vec_st,
            mainly on signed/unsigned long long and double.
    
        gcc/testsuite/
    
            2019-01-20  Kewen Lin  <linkw@gcc.gnu.org>
            * gcc.target/powerpc/altivec_vld_vst_addr.c: Remove, split into
            altivec_vld_vst_addr-1.c and altivec_vld_vst_addr-2.c.
            * gcc.target/powerpc/altivec_vld_vst_addr-1.c: New test.
            * gcc.target/powerpc/altivec_vld_vst_addr-2.c: Ditto.
    
            2019-01-17  Kewen Lin  <linkw@gcc.gnu.org>
            * gcc.target/powerpc/altivec_vld_vst_addr.c: New test.
    
    From-SVN: r268383

commit 4939512cb59bcec829ad7c698acc86cf4cce960d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 30 00:16:20 2019 +0000

    Daily bump.
    
    From-SVN: r268373

commit ece19b481ad9ffb73353ea3b430fb960bb6440c2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 29 00:16:20 2019 +0000

    Daily bump.
    
    From-SVN: r268351

commit ea7f3fbf0e8372525cf3da8aaf809e78c7417ecb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 28 00:16:10 2019 +0000

    Daily bump.
    
    From-SVN: r268328

commit f09270f1b9be9430d957991720e66bcc93b6a7c9
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jan 27 21:53:30 2019 +0100

    re PR fortran/70696 ([Coarray] ICE on EVENT POST of host-associated EVENT_TYPE coarray)
    
            PR fortran/70696
            * gfortran.dg/coarray/event_3.f0: Add save attribue to x.
    
    From-SVN: r268327

commit 7eb40d62a1a4ba93d6c3aa3ce6be913539242589
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Jan 27 18:53:47 2019 +0000

    Backport PRs 56386, 58906, 77385, 80260, 82077
    
    2019-01-27  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/56386
            PR fortran/58906
            PR fortran/77385
            PR fortran/80260
            PR fortran/82077
            * resolve.c (resolve_variable): Fix up expressions with array
            associate names, where the parser did not detect that this is
            array and there was no array part_ref in the expression.
            * trans-expr.c (gfc_find_and_cut_at_last_class_ref): base_expr
            should be a copy of e and not the initialization expr.
    
    2019-01-27  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/56386
            PR fortran/58906
            PR fortran/77385
            * gfortran.dg/associate_44.f90 : New test.
    
            PR fortran/80260
            * gfortran.dg/select_type_45.f90 : New test.
    
            PR fortran/82077
            * gfortran.dg/select_type_46.f90 : New test.
    
    From-SVN: r268317

commit 917c0e9176af5e79ff8bfd79682acdc3df4333e5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Jan 27 18:16:23 2019 +0000

    decl.c (array_type_has_nonaliased_component): Return the same value for every dimension of a multidimensional array type.
    
            * gcc-interface/decl.c (array_type_has_nonaliased_component): Return
            the same value for every dimension of a multidimensional array type.
    
    From-SVN: r268316

commit f678b215e3648f6d87e762efb7b0098d13c51ade
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jan 27 18:42:58 2019 +0100

    re PR rtl-optimization/88948 (ICE in elimination_costs_in_insn, at reload1.c:3640 since r264148)
    
            PR target/88948
            * rtl.h (prepare_copy_insn): New prototype.
            * gcse.c (prepare_copy_insn): New function, split out from
            process_insert_insn.
            (process_insert_insn): Use prepare_copy_insn.
            * store-motion.c (replace_store_insn): Use prepare_copy_insn
            instead of gen_move_insn.
    
    testsuite/ChangeLog:
    
            PR target/88948
            * gcc.target/i386/pr88948.c: New test.
    
    From-SVN: r268312

commit d880316e49f367e569565b23b3ccf92cfa033a1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 27 00:16:13 2019 +0000

    Daily bump.
    
    From-SVN: r268306

commit 3ba9569b7b2c3973ebf827febaa5fd827ada6755
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jan 26 16:03:42 2019 +0000

    trans.c (gnat_to_gnu): Use DECL_SIZE_UNIT instead of TYPE_SIZE_UNIT for the size to be assigned by a...
    
            * gcc-interface/trans.c (gnat_to_gnu) <N_Assignment_Statement>: Use
            DECL_SIZE_UNIT instead of TYPE_SIZE_UNIT for the size to be assigned
            by a call to memset if the LHS is a DECL.
    
    From-SVN: r268298

commit 4692b23002fd0d7ecf443e54dabab206f6fff1a1
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Sat Jan 26 16:25:45 2019 +0100

    re PR fortran/85579 (accepts invalid fortran test case gfortran.dg/pr51434.f90)
    
    2019-01-26  Dominique d'Humieres  <dominiq@gcc.gnu.org>
    
            PR fortran/85579
            * gfortran.dg/pr51434.f90: Fix the TRANSFER argument.
    
    From-SVN: r268295

commit 3595da281064dfa6a85d3615541faa1acf5d061a
Author: Manfred Schwarb <manfred99@gmx.ch>
Date:   Sat Jan 26 16:09:52 2019 +0100

    2019-01-26  Manfred Schwarb  <manfred99@gmx.ch>
    
            * gfortran.dg/array_function_5.f90
            * gfortran.dg/class_66.f90
            * gfortran.dg/dec_structure_12.f90
            * gfortran.dg/dec_structure_14.f90
            * gfortran.dg/dec_structure_15.f90
            * gfortran.dg/extends_11.f03
            * gfortran.dg/pr58968.f
            * gfortran.dg/pr78259.f90
            * gfortran.dg/debug/pr35154-stabs.f
    
    From-SVN: r268294

commit 655e887b5306e97488c2fe794465cc8762550ec1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jan 26 12:03:12 2019 +0000

    trans.c (struct loop_info_d): Remove artificial field.
    
            * gcc-interface/trans.c (struct loop_info_d): Remove artificial field.
            (Loop_Statement_to_gnu): Do not set it.
    
    From-SVN: r268292

commit 720a687a9b68bfcb600cae58c20fb4d7794b6d15
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jan 26 11:36:05 2019 +0000

    decl.c (annotate_value): Use test on the sign bit instead of on the sign of the value.
    
            * gcc-interface/decl.c (annotate_value) <INTEGER_CST>: Use test on
            the sign bit instead of on the sign of the value.
            <PLUS_EXPR>: Turn addition of negative constant into subtraction.
            <BIT_AND_EXPR>: Simplify.
    
    From-SVN: r268288

commit 1e42cf1fb5d90720f22903e92b70ca197e78cc1a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 26 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r268282

commit 12ac96b796930f09128d24e3aa85a2d8f6067b67
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 25 00:16:21 2019 +0000

    Daily bump.
    
    From-SVN: r268254

commit f32761212476584646f5dc1e5afa346f15f0cfa7
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Jan 24 20:14:58 2019 +0100

    re PR target/88998 (bad codegen with mmx instructions for unordered_map)
    
            PR target/88998
            * config/i386/sse.md (sse2_cvtpi2pd): Add SSE alternatives.
            Disparage MMX alternative.
            (sse2_cvtpd2pi): Ditto.
            (sse2_cvttpd2pi): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/88998
            * g++.dg/pr88998.c: New test.
    
    From-SVN: r268244

commit 5402bc4ab8d82b8d4b7274c261a5f3e692ad27c0
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 24 11:07:19 2019 +0000

    backport: re PR middle-end/89008 (O2 and O1 results differ for simple test)
    
    2019-01-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2019-01-23  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/89008
            * tree-ssa-reassoc.c (eliminate_using_constants): For * 0 do
            not leave another stray operand.
    
            * gcc.dg/torture/pr89008.c: New testcase.
    
    From-SVN: r268235

commit 3068600f90329ff9dd54bc3f1c8b12a43de56980
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 24 00:16:07 2019 +0000

    Daily bump.
    
    From-SVN: r268223

commit 75c8fdd953203cac4dcb36419936763e0bd9690e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 23 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r268172

commit f693957cbe2ec33fb3a3ceb4dfc73e3589de7f61
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jan 22 17:35:53 2019 +0100

    re PR target/88938 (ICE in extract_insn, at recog.c:2304)
    
            PR target/88938
            * config/i386/i386.c (ix86_expand_builtin) [case IX86_BUILTIN_BEXTRI32,
            case IX86_BUILTIN_BEXTRI64]: Sanitize operands.
    
    testsuite/ChangeLog:
    
            PR target/88938
            * gcc.target/i386/pr88938.c: New test.
    
    From-SVN: r268157

commit 542035d0b098ca5666a62bfda907b9d325e2e93d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 22 00:16:27 2019 +0000

    Daily bump.
    
    From-SVN: r268132

commit 66459d06afde093919e6c7ed42593c31d7021976
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 21 00:16:22 2019 +0000

    Daily bump.
    
    From-SVN: r268108

commit 43beccd048df80e7de158587f735b863692565a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 20 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r268099

commit b30181d8964faf3914663b7cefcb2ce0858e009f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 19 00:16:25 2019 +0000

    Daily bump.
    
    From-SVN: r268087

commit 0b7420cc6ccfc5597d03709365ed1ae6037b1006
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Jan 18 17:46:47 2019 +0100

    alpha.c (alpha_gimplify_va_arg): Handle split indirect COMPLEX_TYPE arguments.
    
            * config/alpha/alpha.c (alpha_gimplify_va_arg):
            Handle split indirect COMPLEX_TYPE arguments.
    
    From-SVN: r268081

commit e3989953b483179aa71f3dab1ef6e1765b28bb2f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 18 00:16:28 2019 +0000

    Daily bump.
    
    From-SVN: r268051

commit a2893e2219a21671c596db7e08149e0379b47b52
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 17 00:16:17 2019 +0000

    Daily bump.
    
    From-SVN: r267997

commit 10396eea184b75aa05c6050479b748dfe8a6978d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Jan 16 21:40:33 2019 +0000

    Fix diagnostics for never-defined inline and nested functions (PR c/88720, PR c/88726).
    
    Bugs 88720 and 88726 report issues where a function is declared inline
    in an inner scope, resulting in spurious diagnostics about it being
    declared but never defined when that scope is left (possibly in some
    cases also wrongly referring to the function as a nested function).
    These are regressions that were introduced with the support for C99
    inline semantics in 4.3 (they don't appear with 4.2; it's possible
    some aspects of the bugs might have been introduced later than 4.3).
    
    For the case of functions being wrongly referred to as nested,
    DECL_EXTERNAL was not the right condition for a function being
    non-nested; TREE_PUBLIC is appropriate for the case of non-nested
    functions with external linkage, while !b->nested means this is the
    outermost scope in which the function was declared and so avoids
    catching the case of a file-scope static being redeclared inline
    inside a function.
    
    For the non-nested, external-linkage case, the code attempts to avoid
    duplicate diagnostics by diagnosing only when scope != external_scope,
    but actually scope == external_scope is more appropriate, as it's only
    when the file and external scopes are popped that the code can
    actually tell whether a function ended up being defined, and all such
    functions will appear in the (GCC-internal) external scope.
    
    Bootstrapped with no regressions on x86_64-pc-linux-gnu.
    
    gcc/c:
            Backport from mainline
            2019-01-07  Joseph Myers  <joseph@codesourcery.com>
    
            PR c/88720
            PR c/88726
            * c-decl.c (pop_scope): Use TREE_PUBLIC and b->nested to determine
            whether a function is nested, not DECL_EXTERNAL.  Diagnose inline
            functions declared but never defined only for external scope, not
            for other scopes.
    
    gcc/testsuite:
            Backport from mainline
            2019-01-07  Joseph Myers  <joseph@codesourcery.com>
    
            PR c/88720
            PR c/88726
            * gcc.dg/inline-40.c, gcc.dg/inline-41.c: New tests.
    
    From-SVN: r267987

commit a8a204051af71852f9c0ff1fc3405db868aeca82
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Jan 16 16:41:07 2019 +0100

    [PR 88214] Check that an argument is a pointer
    
    2019-01-16  Martin Jambor  <mjambor@suse.cz>
    
            Backported from mainline
            2018-12-10  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/88214
            * ipa-prop.c (determine_locally_known_aggregate_parts): Make sure
            we check pointers against pointers.
    
            testsuite/
            * gcc.dg/ipa/pr88214.c: New test.
    
    From-SVN: r267975

commit 63999586cf32e2a979edf205cf9432f7f07a0457
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 16 00:16:09 2019 +0000

    Daily bump.
    
    From-SVN: r267959

commit 70d6a121a26af35fc065ea45c5558c491cb041fd
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Jan 15 20:53:13 2019 +0000

    re PR fortran/81849 (Size of automatic array argument specified by host-associated  variable.)
    
    2019-01-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/81849
            * resolve.c (resolve_symbol): Host associated varaibles can appear
            in the specification statement of a RESULT array.
    
    2019-01-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/81849
            * gfortran.dg/pr81849.f90: New test.
    
    From-SVN: r267952

commit 5933e0099894f381d838d30678bc4363807b8b2d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 15 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r267927

commit 7c24d270be376cc8db3130743de29480b0503ee7
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Mon Jan 14 01:12:27 2019 +0000

    re PR libfortran/88776 (Namelist read from stdin: loss of data)
    
    2019-01-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR libfortran/88776
            * io/list_read.c (namelist_read): Use nml_err_ret path on read error
            not based on stdin_unit.
            * io/open.c (newunit): Free format buffer if the unit specified is for
            stdin, stdout, or stderr.
    
            * gfortran.dg/namelist_96.f90: New test.
    
    From-SVN: r267911

commit 8e58a564954a434cc547b29bd0a6e55f71debb4c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 14 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r267907

commit 71137e778fe6ac45ca70fde6d5ef4ba5b032918a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 13 00:16:08 2019 +0000

    Daily bump.
    
    From-SVN: r267899

commit 1195efaf15f6542232503003f5f3a8ae9620ad8c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 12 00:33:01 2019 +0000

    re PR fortran/35031 (ELEMENTAL procedure with BIND(C))
    
    2019-01-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/35031
            * decl.c (gfc_match_entry): Check for F2018:C1546.  Fix nearby
            mis-indentation.
    
    2019-01-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/35031
            * gfortran.dg/pr35031.f90: new test.
    
    From-SVN: r267874

commit c6decb1019285d34cf6aff6a094856f6f1776af1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 12 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r267870

commit c9f9a216a2edb0d3f941c1c03199a0186ce99087
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 11 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r267826

commit 154e30e083c8420ed689463c939db7ba9205e117
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 10 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r267790

commit be672402810fe9f1f6503c72266a1ad389431113
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jan 9 14:41:55 2019 +0000

    re PR target/84010 (problematic TLS code generation on 64-bit SPARC)
    
            PR target/84010
            * config/sparc/sparc.c (sparc_legitimize_tls_address): Only use Pmode
            consistently in TLS address generation and adjust code to the renaming
            of patterns.  Mark calls to __tls_get_addr as const.
            * config/sparc/sparc.md (tgd_hi22): Turn into...
            (tgd_hi22<P:mode>): ...this and use Pmode throughout.
            (tgd_lo10): Turn into...
            (tgd_lo10<P:mode>): ...this and use Pmode throughout.
            (tgd_add32): Merge into...
            (tgd_add64): Likewise.
            (tgd_add<P:mode>): ...this and use Pmode throughout.
            (tldm_hi22): Turn into...
            (tldm_hi22<P:mode>): ...this and use Pmode throughout.
            (tldm_lo10): Turn into...
            (tldm_lo10<P:mode>): ...this and use Pmode throughout.
            (tldm_add32): Merge into...
            (tldm_add64): Likewise.
            (tldm_add<P:mode>): ...this and use Pmode throughout.
            (tldm_call32): Merge into...
            (tldm_call64): Likewise.
            (tldm_call<P:mode>): ...this and use Pmode throughout.
            (tldo_hix22): Turn into...
            (tldo_hix22<P:mode>): ...this and use Pmode throughout.
            (tldo_lox10): Turn into...
            (tldo_lox10<P:mode>): ...this and use Pmode throughout.
            (tldo_add32): Merge into...
            (tldo_add64): Likewise.
            (tldo_add<P:mode>): ...this and use Pmode throughout.
            (tie_hi22): Turn into...
            (tie_hi22<P:mode>): ...this and use Pmode throughout.
            (tie_lo10): Turn into...
            (tie_lo10<P:mode>): ...this and use Pmode throughout.
            (tie_ld64): Use DImode throughout.
            (tie_add32): Merge into...
            (tie_add64): Likewise.
            (tie_add<P:mode>): ...this and use Pmode throughout.
            (tle_hix22_sp32): Merge into...
            (tle_hix22_sp64): Likewise.
            (tle_hix22<P:mode>): ...this and use Pmode throughout.
            (tle_lox22_sp32): Merge into...
            (tle_lox22_sp64): Likewise.
            (tle_lox22<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldub_sp32): Merge into...
            (*tldo_ldub_sp64): Likewise.
            (*tldo_ldub<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldub1_sp32): Merge into...
            (*tldo_ldub1_sp64): Likewise.
            (*tldo_ldub1<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldub2_sp32): Merge into...
            (*tldo_ldub2_sp64): Likewise.
            (*tldo_ldub2<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldsb1_sp32): Merge into...
            (*tldo_ldsb1_sp64): Likewise.
            (*tldo_ldsb1<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldsb2_sp32): Merge into...
            (*tldo_ldsb2_sp64): Likewise.
            (*tldo_ldsb2<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldub3_sp64): Use DImode throughout.
            (*tldo_ldsb3_sp64): Likewise.
            (*tldo_lduh_sp32): Merge into...
            (*tldo_lduh_sp64): Likewise.
            (*tldo_lduh<P:mode>): ...this and use Pmode throughout.
            (*tldo_lduh1_sp32): Merge into...
            (*tldo_lduh1_sp64): Likewise.
            (*tldo_lduh1<P:mode>): ...this and use Pmode throughout.
            (*tldo_ldsh1_sp32): Merge into...
            (*tldo_ldsh1_sp64): Likewise.
            (*tldo_ldsh1<P:mode>): ...this and use Pmode throughout.
            (*tldo_lduh2_sp64): Use DImode throughout.
            (*tldo_ldsh2_sp64): Likewise.
            (*tldo_lduw_sp32): Merge into...
            (*tldo_lduw_sp64): Likewise.
            (*tldo_lduw<P:mode>): ...this and use Pmode throughout.
            (*tldo_lduw1_sp64): Use DImode throughout.
            (*tldo_ldsw1_sp64): Likewise.
            (*tldo_ldx_sp64): Likewise.
            (*tldo_stb_sp32): Merge into...
            (*tldo_stb_sp64): Likewise.
            (*tldo_stb<P:mode>): ...this and use Pmode throughout.
            (*tldo_sth_sp32): Merge into...
            (*tldo_sth_sp64): Likewise.
            (*tldo_sth<P:mode>): ...this and use Pmode throughout.
            (*tldo_stw_sp32): Merge into...
            (*tldo_stw_sp64): Likewise.
            (*tldo_stw<P:mode>): ...this and use Pmode throughout.
            (*tldo_stx_sp64): Use DImode throughout.
    
    Co-Authored-By: James Clarke <jrtc27@jrtc27.com>
    
    From-SVN: r267773

commit 768dd81d69821a6afedf96686e786f6a7a75c0a0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jan 9 08:25:55 2019 +0000

    invoke.texi (-Os): Add reference to -finline-functions.
    
            * doc/invoke.texi (-Os): Add reference to -finline-functions.
            (-finline-small-functions): Add references to -O3 and -Os.
            (-findirect-inlining): Likewise.
            (-finline-functions): Add references to -Os, -fprofile-use and
            -fauto-profile.
    
    From-SVN: r267755

commit 8c440e439989336edbb4596947cb0e55301aba40
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 9 00:16:06 2019 +0000

    Daily bump.
    
    From-SVN: r267748

commit 0ab2c9fccde6249e07494f5fbc370e0c1b52e89b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 8 00:16:18 2019 +0000

    Daily bump.
    
    From-SVN: r267668

commit 4a2777d69a2f49fc744e419d07f14283bbd4eb1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 7 00:16:17 2019 +0000

    Daily bump.
    
    From-SVN: r267617

commit 907420ee01ac74cab14e56879c00634cc370a68c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 6 00:16:17 2019 +0000

    Daily bump.
    
    From-SVN: r267604

commit cdb8f61fa041b94898572430fa5c5c93ee9c909d
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Sat Jan 5 13:44:12 2019 +0100

    re PR target/60563 (FAIL: g++.dg/ext/sync-4.C on *-apple-darwin*)
    
    2019-01-05  Dominique d'Humieres  <dominiq@gcc.gnu.org>
    
            PR target/60563
            * g++.dg/ext/sync-4.C: Add dg-xfail-run-if for darwin.
    
    From-SVN: r267597

commit 887445cac60fdd7f523a875fa888203874ccef0b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 5 00:16:20 2019 +0000

    Daily bump.
    
    From-SVN: r267586

commit cb6ad2e8e9e2d5e55af13d0d17560a95ece7f4b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 4 00:16:23 2019 +0000

    Daily bump.
    
    From-SVN: r267566

commit b68f362a298af18fa09ad53d565be4378457eba4
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Thu Jan 3 08:34:41 2019 +0000

    revert fix for pr88343
    
    causes problems with soft-fp in GLIBC, see pr comment 11
    
    2019-01-03  Iain Sandoe  <iain@sandoe.co.uk>
    
            revert:
            2018-12-30  Iain Sandoe  <iain@sandoe.co.uk>
    
            backport from mainline.
            2018-12-12 Segher Boessenkool  <segher@kernel.crashing.org>
                       Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/88343
            * config/rs6000/rs6000.c (save_reg_p): Do not save the picbase reg
            unless it has been used.
            (first_reg_to_save): Remove dead code.
    
    From-SVN: r267542

commit a84152fc601d68060da98f88eb5167c5704f62dd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 3 00:16:23 2019 +0000

    Daily bump.
    
    From-SVN: r267538

commit ba1cce8ea23459eef293f94acb43e43236f88249
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Jan 2 23:49:04 2019 +0100

    Backport of the "asm inline" patches
    
    From-SVN: r267536

commit f262721148a0b5a74096ad6711cd5f1820a333be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 2 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r267500

commit 45b5b0bb4570f4a76e1c5ba90a0feef3e518e9e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 1 00:16:05 2019 +0000

    Daily bump.
    
    From-SVN: r267489

commit 05b1d7009ef18f7270885c54a1f02e124a1c7cd8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 31 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r267479

commit 8abc77022ee11296b5ce185aa687afee8a5dc2f9
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Sun Dec 30 13:20:19 2018 +0000

    fix PR target/88343 for 32b powerpc.
    
    2018-12-30  Iain Sandoe  <iain@sandoe.co.uk>
    
            backport from mainline.
            2018-12-12 Segher Boessenkool  <segher@kernel.crashing.org>
                       Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/88343
            * config/rs6000/rs6000.c (save_reg_p): Do not save the picbase reg
            unless it has been used.
            (first_reg_to_save): Remove dead code.
    
    From-SVN: r267477

commit 01d54747a6b2eb0cedb38ccb9e01ac8582be048d
Author: Dominique d'Humieres <dominiq@gcc.gnu.org>
Date:   Sun Dec 30 13:28:54 2018 +0100

    re PR tree-optimization/68356 (FAIL: gcc.dg/torture/pr68264.c   -O*  execution test on x86_64-apple-darwin1(0|4))
    
    2018-12-30  Dominique d'Humieres  <dominiq@gcc.gnu.org>
    
            PR tree-optimization/68356
            PR target/81210
            * gcc.dg/torture/pr68264.c: Skip on darwin.
            * gcc.dg/torture/pr68037-1.c: Likewise.
            * gcc.dg/torture/pr68037-2.c: Likewise.
            * gcc.dg/torture/pr68037-3.c: Likewise.
    
    From-SVN: r267476

commit 8bbbe76e9c4e03fc64a48856d45c3aef6a5fda49
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 30 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r267471

commit 8ededf6bd1e39fcad6e440986ed45eedcd7164a3
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Dec 29 18:21:39 2018 +0000

    re PR fortran/82550 (program using submodules fails to link)
    
    2018-12-29  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82550
            * trans_decl.c (gfc_get_symbol_decl): Procedure symbols that
            have the 'used_in_submodule' attribute should be processed by
            'gfc_get_extern_function_decl'.
    
    2018-12-29  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82550
            * gfortran.dg/submodule_30.f08 : New test.
    
    From-SVN: r267466

commit 51877201dff2ea52789d8ede2ff257b89ac38772
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 29 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r267458

commit 58c86cfb6996d66c6e787399dbcd09d822694135
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 28 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r267439

commit a402a6cae97b332d49820fa72f6072d9729d9e87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 27 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r267424

commit 9ec1abf6c8b876d6b991101d67bf053bdf3b0363
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 26 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r267419

commit a685b5c4f77358ba0892b2a5ef7d6d2540fcd702
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 25 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r267416

commit 48f3e7e93aa37e4c2fcb7e983988f1e09feba243
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 13:41:16 2018 +0000

    Fix target/67974 for Darwin by adding AVX asm shim.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR testsuite/67974
            * gcc.target/x86_64/abi/avx/asm-support-darwin.s: New.
    
    From-SVN: r267411

commit 2329198d400c579eb350dd6a4302356e92d748b5
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 13:35:32 2018 +0000

    Fix Ada boostrap for Darwin9 and earlier.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            * adaint.c [__APPLE__] (__gnat_lwp_self): Ensure that the system
            interface used is available on the target.
    
    From-SVN: r267410

commit b2e72faf99a63308b63e0605b719157673c5815d
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 13:17:28 2018 +0000

    Fix PR c++/87380 (ABI breakage) for Darwin.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR c++/87380
            * config/darwin.h (TARGET_WEAK_NOT_IN_ARCHIVE_TOC) Remove, use the
            default.
            * config/rs6000/darwin7.h (TARGET_WEAK_NOT_IN_ARCHIVE_TOC): New.
    
    From-SVN: r267409

commit a77add8771741e3ee8a5cb2aaa36baf0535ffbf1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 13:09:39 2018 +0000

    Fix build warnigns on Darwin, don't try to export construction vtable symbols.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            * scripts/make_exports.pl (check names): Don’t try to export
            construction vtable symbols.
    
    From-SVN: r267408

commit 116a4b616a9ff59030a654a010328a7e1584a2e6
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 13:01:04 2018 +0000

    Fix libstdc++/64883 for Darwin.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-06  Jonathan Wakely  <jwakely@redhat.com>
                        Iain Sandoe  <iain@sandoe.co.uk>
    
            PR libstdc++/64883
            * testsuite/17_intro/headers/c++1998/all_attributes.cc: Don't test
            always_inline on Darwin.
            * testsuite/17_intro/headers/c++2011/all_attributes.cc: Likewise.
            * testsuite/17_intro/headers/c++2014/all_attributes.cc: Likewise.
            * testsuite/17_intro/headers/c++2017/all_attributes.cc: Likewise.
            * testsuite/17_intro/headers/c++2020/all_attributes.cc: Likewise.
    
    From-SVN: r267407

commit 615bf7d905e0ae72ad095959ca7060661b6ceaac
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:47:58 2018 +0000

    Fix target/78444 on x86/Darwin.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-12-06  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/78444
            * config/i386/darwin.h (STACK_BOUNDARY): Remove macro.
            * config/i386/i386.c (ix86_compute_frame_layout): Ensure at least 128b
            stack alignment in non-leaf functions.
    
    From-SVN: r267406

commit ec4d7f527b1c3b01778ec7e5cf75fecc03dbc1d9
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:42:16 2018 +0000

    Don't try to use pthread_barrier in tests on Darwin.
    
    This was optional in SUSv6 and isn't implemented on Darwin.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            2018-08-16  Iain Sandoe <iain@sandoe.co.uk>
    
            * g++.dg/torture/pr44295.C : Skip for Darwin.
    
    From-SVN: r267405

commit d99c0500af6dcd71afc5c5696728f09a4c3c791a
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:38:51 2018 +0000

    Fix three tests for targets using _USER_LABEL_PREFIX_
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-22  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/lto/pr85248_0.c (test_alias):
            Stringify __USER_LABEL_PREFIX__.
            (test_noreturn): Likewise.
    
            2018-08-16  Iain Sandoe <iain@sandoe.co.uk>
    
            * gcc.dg/memcmp-1.c (lib_memcmp): Apply __USER_LABEL_PREFIX__.
            (lib_strncmp): Likewise.
    
            2018-08-16  Iain Sandoe  <iain@sandoe.co.uk>
    
            * gcc.dg/asan/pr81923.c: Stringify __USER_LABEL_PREFIX__.
    
    From-SVN: r267404

commit a69da9af9ecc5cf7837776379abf24c12198dd42
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:30:24 2018 +0000

    Fix tree-prof section tests on Darwin.
    
    Add Darwin section names.
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-16  Iain Sandoe <iain@sandoe.co.uk>
    
            PR testsuite/78544
            * gcc.dg/tree-prof/section-attr-1.c: Add Darwin-specific section
            attributes and matching.
            * gcc.dg/tree-prof/section-attr-2.c: Likewise.
            * gcc.dg/tree-prof/section-attr-3.c: Likewise.
    
    From-SVN: r267403

commit f02c19cf9b8f302f6e83de5f3f07372ab234e0f8
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:26:11 2018 +0000

    Fix Darwin PR libstdc++/70694
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-25  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR libstdc++/70694
            * configure.host (OPT_LDFLAGS): Don't append
            -fvisibility-inlines-hidden for newer Darwin.
    
    From-SVN: r267402

commit ae190995560eb097c5cbb09abe35fb865d878e6f
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Dec 24 12:20:18 2018 +0000

    fix Darwin target/81685
    
    2018-12-24  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR target/81685
            * config/darwin.h: (DEBUG_STR_OFFSETS_SECTION, DEBUG_LOCLISTS_SECTION,
            DEBUG_RNGLISTS_SECTION) new macros.  (DEBUG_PUBNAMES_SECTION,
            DEBUG_PUBTYPES_SECTION) update to include GNU variant.
    
    From-SVN: r267401

commit f272b433e513b5c6a45fbbf7d1edca1567b68f88
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 24 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r267389

commit 59925de353ee3ff6a982afed0d575bb57c140ffc
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Dec 23 20:01:44 2018 +0000

    re PR fortran/77703 (ICE on assignment to pointer function)
    
    2018-12-23  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/77703
            * resolve.c (get_temp_from_expr): Use the string length of
            constant character expressions.
    
    2018-12-23  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/77703
            * gfortran.dg/ptr_func_assign_5.f08 : New test.
    
    From-SVN: r267383

commit 27634a64b0c57da361c2dbd1ac67670226954574
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 23 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r267364

commit 3ae9367ba2d87a28cf2b783b705661a5a5b4d108
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Dec 22 23:23:02 2018 +0000

    re PR fortran/85798 (ICE in get_array_index, at fortran/data.c:69)
    
    2018-12-22  Steven G . Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85798
            * decl.c (gfc_match_data): If a component of a derived type entity
            appears in data statement, check that does not have the allocatable
            attribute.
    
    2018-12-22  Steven G . Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85798
            * gfortran.dg/pr85798.f90: New test.
    
    From-SVN: r267362

commit 6e5003db5f1ecf35719831fb5fe2869790c01d08
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Dec 22 20:16:22 2018 +0000

    backport: re PR fortran/85544 (ICE in gfc_conv_scalarized_array_ref, at fortran/trans-array.c:3385)
    
    2018-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/85544
            * frontend-passes.c (optimize_power): Remove.
            (optimize_op): Remove call to optimize_power.
            * trans-expr.c (gfc_conv_power_op): Handle cases of 1**integer,
            (2|4|8|16) ** integer and (-1) ** integer.
    
    2018-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/85544
            * gfortran.dg/power_7.f90: New test.
    
    From-SVN: r267360

commit 63a0aca90e957b615252554c39c12a093daf32f8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Dec 22 18:09:19 2018 +0000

    re PR fortran/88169 (Rejects USE rename of namelist group)
    
    2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88169
            * module.c (mio_namelist): Remove an error condition/message that
            is contrary to the Fortran standard.
    
    2018-12-21  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88169
            * gfortran.dg/pr88169_1.f90: new test.
            * gfortran.dg/pr88169_2.f90: Ditto.
            * gfortran.dg/pr88169_3.f90: Ditto.
    
    From-SVN: r267354

commit 414ef24c673ce034b5bccdfb2ba6e9096e84bdc1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 22 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r267344

commit 9a3f34143514562626d9b0c25f0499e10c658abd
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Dec 21 19:15:49 2018 +0100

    * ChangeLog: Add my last entry.
    
    From-SVN: r267335

commit 06a9272de1033eda7530ec0bfe6cc259015b968d
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Dec 21 19:11:04 2018 +0100

    backport: re PR target/88418 (ICE in extract_insn, at recog.c:2305 (error: unrecognizable insn))
    
            Backport from mainline
            2018-12-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/88418
            * config/i386/i386.c (ix86_expand_sse_cmp): For vector modes,
            check operand 1 with vector_operand predicate.
            (ix86_expand_sse_movcc): For vector modes, check op_true with
            vector_operand, not nonimmediate_operand.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2018-12-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/88418
            * gcc.target/i386/pr88418.c: New test.
    
    From-SVN: r267332

commit 19a83dd2ad2ca93b37b2f4f29e8c71e1fe9e56a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 21 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r267315

commit ea943bb9cbd136916c8a68388cd6cb83d92d7616
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 20 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r267289

commit 01ba73bce3975c24d8e9bc1e5378d110aacccda3
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Wed Dec 19 18:34:25 2018 +0000

    backport: extend.texi (PowerPC Altivec/VSX Built-in Functions): Describe when a typedef name can be used as the type specifier for a vector type...
    
    2018-12-19  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2018-12-18  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            * doc/extend.texi (PowerPC Altivec/VSX Built-in Functions):
            Describe when a typedef name can be used as the type specifier for
            a vector type, and when it cannot.
    
    From-SVN: r267284

commit bc70153fd4a12213aadc845ff4e7a378983e01d4
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Dec 19 15:04:22 2018 +0100

    backport: re PR target/88213 (ICE in change_address_1, at emit-rtl.c:2286)
    
            Backport from trunk
            2018-12-19  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/88213
            * config/rs6000/vsx.md (*vsx_extract_<P:mode>_<VSX_D:mode>_load):
            Require TARGET_POWERPC64.
    
    From-SVN: r267265

commit 04a3f22985b141ebd455c0d75c4b96e1fe876ac6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 19 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r267246

commit 24efbaf8cf1fe191cd9af05b027de888073be31f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 18 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r267223

commit 80ad71d18983467ff41b7f99aef25e1b2b647c7c
Author: Senthil Kumar Selvaraj <senthilkumar.selvaraj@microchip.com>
Date:   Mon Dec 17 13:26:50 2018 +0000

    backport: re PR rtl-optimization/88253 (Inlining of function incorrectly deletes volatile register access when using XOR in avr-gcc)
    
    2018-12-17  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
    
            Backport from trunk
            2018-12-17  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
    
            PR rtl-optimization/88253
            * combine.c (combine_simplify_rtx): Test for side-effects before
            substituting by zero.
    
    2018-12-17  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
    
            Backport from trunk
            2018-12-17  Senthil Kumar Selvaraj  <senthilkumar.selvaraj@microchip.com>
    
            PR rtl-optimization/88253
            * gcc.target/avr/pr88253.c: New test.
    
    From-SVN: r267201

commit 791ee32f70096e0ce2c4f374562db3ba277890c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 17 00:16:41 2018 +0000

    Daily bump.
    
    From-SVN: r267193

commit e3c096b85cdbfbdd1238228b793e440064d54884
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 16 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r267181

commit b5c448f284b2fd001e08c8277c4da6d1543ded38
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Dec 15 23:57:03 2018 +0000

    re PR fortran/88138 (ICE in gfc_arith_concat, at fortran/arith.c:1007)
    
    2018-12-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88138
            * decl.c (variable_decl): Check that a derived isn't being assigned
            an incompatible entity in an initialization.
    
    2018-12-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88138
            * gfortran.dg/pr88138.f90: new test.
    
    From-SVN: r267180

commit f3654355b5e502132b647da93c6d7f6c9b3545e3
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Sat Dec 15 13:07:42 2018 +0100

    backport: re PR rtl-optimization/88001 (ASMCONS cannot handle properly UNSPEC(CONST))
    
            Backport from trunk
            2018-12-14  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/88001
            * function.c (match_asm_constraints_1): Don't invalidly share RTL.
    
    From-SVN: r267172

commit b8a72f92eea4726ab51bf042516bed9035a0592d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 15 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r267161

commit 3be468ab8a7323e1678b44059eff53a8f2be8022
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 14 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r267115

commit 5241690ceb9c1299b34b9c38c41e9844d0840ced
Author: Peter Bergner <bergner@linux.ibm.com>
Date:   Thu Dec 13 18:08:47 2018 +0000

    backport: target.h (htm_available): Add support for PPC_FEATURE2_HTM_NO_SUSPEND.
    
    libitm/
            Backport from mainline
            2018-12-13  Peter Bergner  <bergner@linux.ibm.com>
    
            * config/powerpc/target.h (htm_available):  Add support for
            PPC_FEATURE2_HTM_NO_SUSPEND.  Use __builtin_cpu_supports if available.
    
    From-SVN: r267103

commit 6304f169661f6698d6076bc9891959f59927619b
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Thu Dec 13 12:07:58 2018 +0000

    S/390: Fix zvector vec_double builtin
    
    The (unsigned) long int to double vector conversion instructions
    expect 2 immediate parameters. One for the inexact suppression
    control and another one for the rounding mode.  However, the
    vec_double builtin has just the vector source operand.  The 2
    addtional operands need to be added with an intermediate expander.
    The expanders were already there but unfortunately not wired up
    correctly to the builtin.
    
    gcc/ChangeLog:
    
    2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390-builtins.def (s390_vec_double_s64): Map to
            s390_vec_double_s64 instead of s390_vcdgb.
            (s390_vec_double_u64): Map to s390_vec_double_u64 instead of
            s390_vcdlgb.
    
    gcc/testsuite/ChangeLog:
    
    2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/zvector/vec-double-1.c: New test.
            * gcc.target/s390/zvector/vec-double-2.c: New test.
    
    From-SVN: r267088

commit b248b013d25c609bbbda30335463e93a7c7bb7fd
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Thu Dec 13 12:06:40 2018 +0000

    S/390: Use VEC_INEXACT/VEC_NOINEXACT instead of magic numbers.
    
    2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-12-13  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/vx-builtins.md ("vec_ctd_s64", "vec_ctd_u64")
            ("vec_ctsl", "vec_ctul"): Replace 0 with VEC_NOINEXACT.
            ("vec_double_s64", "vec_double_u64"): Replace 4 with VEC_INEXACT.
    
    From-SVN: r267087

commit e5f668fb3327bbe960b48d913aedf5983f2888dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 13 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r267072

commit 3054517e78f28e0eb09d52a1ffd47330fbfb2712
Author: Peter Bergner <bergner@linux.ibm.com>
Date:   Wed Dec 12 17:20:41 2018 +0000

    backport: re PR target/87496 (ICE in aggregate_value_p at gcc/function.c:2046)
    
    gcc/
            Backport from mainline
            2018-12-07  Peter Bergner  <bergner@linux.ibm.com>
    
            PR target/87496
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Disallow
            -mabi=ieeelongdouble and -mabi=ibmlongdouble without -mlong-double-128.
            Do not error for -mabi=ibmlongdouble and no ISA 2.06 support.
            * doc/invoke.texi: Document -mabi=ibmlongdouble and -mabi=ieeelongdouble
            require -mlong-double-128.
    
    gcc/testsuite/
            Backport from mainline
            2018-12-07  Peter Bergner  <bergner@linux.ibm.com>
    
            PR target/87496
            * gcc.target/powerpc/pr87496-1.c: New test.
            * gcc.target/powerpc/pr87496-2.c: New test.
            * gcc.target/powerpc/pr87496-3.c: New test.
    
    From-SVN: r267062

commit b66944b9344dcbeececedbccc72d87ce6b9dede7
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Dec 12 01:26:12 2018 +0000

    re PR fortran/88155 (ICE in gfc_format_decoder, at fortran/error.c:947)
    
    2018-12-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88155
            * primary.c (gfc_match_structure_constructor):  Set the locus of
            an expression to avoid a NULL pointer dereference.
    
    2018-12-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88155
            * gfortran.dg/pr70870_1.f90: Update testcase to use -std=gnu.
            * gfortran.dg/pr88155.f90: New test.
    
    From-SVN: r267043

commit f94e50b3a7f0a9a869ee0970b0f9fdee6c6fc213
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 12 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r267038

commit 9974020e489c0817494b788b0666fe17c39e7b66
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Dec 12 00:08:12 2018 +0000

    re PR fortran/88249 (ICE in gfc_resolve_filepos, at fortran/io.c:2853)
    
    2018-12-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88249
            * gfortran.h: Update prototype for gfc_resolve_filepos().
            * io.c (gfc_resolve_filepos): Check for UNIT number if ERR= is present.
            Use passed in locus for error message.
            * resolve.c (gfc_resolve_code): Pass locus in gfc_resolve_filepos()
            call.
    
    2018-12-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88249
            * gfortran.dg/pr88249.f90: New test.
    
    From-SVN: r267037

commit cba889a6ea531d837b11efffc1a88ce304cfedb3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 11 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r266964

commit f7b3c0032ffff94cd64b59bb8a66b6278cb07fa4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Dec 10 20:03:32 2018 +0000

    re PR fortran/88269 (ICE in gfc_format_decoder, at fortran/error.c:947)
    
    2018-12-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88269
            * io.c (io_constraint): Update macro. If locus line buffer is NULL,
            use gfc_current_locus in error messages.
            (check_io_constraints): Catch missing IO UNIT in write and read
            statements.  io_constraint macro is incompatible here.
    
    2018-12-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88269
            * gfortran.dg/pr88269.f90: New test.
    
    From-SVN: r266962

commit 40540bf8fca961dc882597f15ddb89e43a731e2f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Dec 10 01:25:47 2018 +0000

    re PR fortran/88205 (ICE in gfc_wide_strncasecmp, at fortran/scanner.c:249)
    
    2018-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88205
            * io.c (gfc_match_open): Move NEWUNIT checks to after STATUS checks.
    
    2018-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88205
            * gfortran.dg/pr88205.f90: New unit.
    
    From-SVN: r266941

commit 8175acafb40dbbebde196127553f5daf45a97447
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 10 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r266937

commit 22bdb5bdc4c9a5dde42876ec2fda52dd67152d33
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Dec 9 20:23:06 2018 +0000

    re PR fortran/88206 (ICE in gfc_match_type_spec, at fortran/match.c:2229)
    
    2018-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88206
            * match.c (gfc_match_type_spec): REAL can be an intrinsic function.
    
    2018-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88206
            * gfortran.dg/pr88206.f90: New test.
    
    From-SVN: r266934

commit 1703682cc56663888a2affc7643d8c68b8a1c55e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Dec 9 18:32:01 2018 +0000

    [multiple changes]
    
    2018-12-09  Fritz Reese  <fritzoreese@gmail.com>
    
            PR fortran/88228
            * resolve.c (resolve_operator):  Do not call resolve_function.
            Break like other cases.
    
    2018-12-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/88228
            * gfortran.dg/pr88228.f90: New test.
    
    From-SVN: r266928

commit 4bb97e219bf70123bbd1120ece4ef36ce012baf2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 9 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r266910

commit 3789c937ef031cd191b2b33293a43123b22eecdf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 8 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r266901

commit e35f06cde2e630b71d14c38cb789b03f83946edd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 7 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r266882

commit 4c11935a35ed225f448b405c93fbe4854cdf72de
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Thu Dec 6 17:38:25 2018 +0200

    Initialize backtrace state once
    
    From backtrace.h for backtrace_create_state:
    
       Calling this function allocates resources that can not be freed.
       There is no backtrace_free_state function.  The state is used to
       cache information that is expensive to recompute.  Programs are
       expected to call this function at most once and to save the return
       value for all later calls to backtrace functions.
    
    So instead of calling backtrace_create_state every time we wish to
    show a backtrace, do it once and store the result in a static
    variable.  libbacktrace allows multiple threads to access the state,
    so no need to use TLS, but use atomic load/store to access the static
    variable.
    
    Regtested on x86_64-pc-linux-gnu.
    
    libgfortran/ChangeLog:
    
    2018-12-06  Janne Blomqvist  <jb@gcc.gnu.org>
    
            Backport from trunk
            PR libfortran/88137
            * runtime/backtrace.c (show_backtrace): Store backtrace state in a
            static variable, initialize once.
    
    From-SVN: r266858

commit cefd53ccca3164ed5909ff025bba08095da9c149
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Dec 6 11:02:34 2018 +0000

    BASE-VER: Increment to 7.4.1.
    
    2018-12-06  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Increment to 7.4.1.
    
    From-SVN: r266849

commit adafdb1e7212d53a0ff4c58f0f42dc96200affbb
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Thu Dec 6 10:00:03 2018 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r266844

commit 1f42849d7900609da7bf6e9daf1c7088095f9b6f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 6 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r266835

commit cc92654f0af2b91e372e713c837153888fce28e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 5 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r266808

commit 91ad9d4dcff5d79aed9ab0e23aea92e68f8d5418
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 4 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r266767

commit 166f8a0928df543277ccd6c86dc5560d36d6b5cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 3 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r266730

commit b307104c047d1d03222715c426151000dff39714
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 2 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r266715

commit 3ce09b6227857d47e1ed0bdca5d0e58dd65bfdab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 1 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r266703

commit a668abc3d3507aeb5a76583008fb4f5722ff25e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 30 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r266655

commit 950512a211f6b78587c7473068d62107d212c514
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 29 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r266595

commit 87ac68c8e56ad3b16a83c56d2f429e459987c884
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 28 12:57:58 2018 +0000

    re PR tree-optimization/79351 (Invalid tree PRE optimization around compound literal)
    
    2018-11-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79351
            * tree-ssa-sccvn.c (vn_reference_lookup_3): For assignments from
            empty CONSTRUCTORs ensure the store is at a constant position.
    
            * gcc.dg/torture/pr79351.c: New testcase.
    
    From-SVN: r266556

commit 4e070cb28f5a84946371449289b8d22db1fea7ac
Author: François Dumont <fdumont@gcc.gnu.org>
Date:   Wed Nov 28 06:19:38 2018 +0000

    re PR libstdc++/88199 (memory leak on unordered container move assignment)
    
    2018-11-28  François Dumont  <fdumont@gcc.gnu.org>
    
            PR libstdc++/88199
            * include/bits/hashtable.h
            (_Hashtable<>::_M_move_assign(_Hashtable&&, false_type)): Deallocate
            former buckets after assignment.
            * testsuite/23_containers/unordered_set/allocator/move_assign.cc
            (test03): New.
    
    From-SVN: r266542

commit 33ffc7f3acc86ce86a942dd9529c622be60c7e18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 28 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r266538

commit a7daa2258a6037ace400ab80f92f43e74502fe96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 27 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r266497

commit f236bc59e43e211323006b4d1f18af0a4add0bd2
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Nov 26 19:49:19 2018 +0000

    darwin - backport r263763 to fix PR81033
    
    2018-11-26  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-22  Iain Sandoe  <iain@sandoe.co.uk>
    
            PR bootstrap/81033
            PR target/81733
            PR target/52795
            * gcc/dwarf2out.c (FUNC_SECOND_SECT_LABEL): New.
            (dwarf2out_switch_text_section): Generate a local label for the second
            function sub-section and apply it as the second FDE start label.
            * gcc/final.c (final_scan_insn_1): Emit second FDE label after the second
            sub-section start.
    
    From-SVN: r266478

commit 7f961737767bb0d8ed7bad1f6a94de02d525fea1
Author: Iain Sandoe <iain@sandoe.co.uk>
Date:   Mon Nov 26 19:46:24 2018 +0000

    darwin - backport r26355, remove unused target hook.
    
    2018-11-26  Iain Sandoe  <iain@sandoe.co.uk>
    
            Backport from mainline
            2018-08-15  Iain Sandoe  <iain@sandoe.co.uk>
    
            * config/darwin.c
            (darwin_function_switched_text_sections): Delete.
            * gcc/config/darwin.h
            (TARGET_ASM_FUNCTION_SWITCHED_TEXT_SECTIONS): Likewise.
    
    From-SVN: r266477

commit 1a2397397d7893a6f6206da9b78a77ed21e828b2
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 26 15:53:48 2018 +0000

    re PR c++/84281 (Heap grows indefinitely)
    
            PR c++/84281
    
    2018-02-12  Richard Biener  <rguenther@suse.de>
    
            * constexpr.c (cxx_eval_vec_init_1): Use a RANGE_EXPR to compact
            uniform constructors and delay allocating them fully.
    
    From-SVN: r266469

commit b37b6c65f81fa93bfa6eb6037cfbb999059b4753
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Nov 26 10:53:43 2018 -0500

    PR c++/87075 - ICE with constexpr array initialization.
    
    My patch of 2016-08-26 to avoid calling a trivial default constructor
    introduced TARGET_EXPRs initialized with void_node to express trivial
    initialization.  But when this shows up in a VEC_INIT_EXPR, we weren't
    prepared to handle it.  Fixed by handling it explicitly in
    cxx_eval_vec_init_1.
    
            * constexpr.c (cxx_eval_vec_init_1): Handle trivial initialization.
    
    From-SVN: r266468

commit 78015f6b32e32929b761a9a6121b32bd8062ba4b
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Mon Nov 26 15:29:27 2018 +0000

    S/390: Fix flogr RTX.
    
    The flogr instruction uses a 64 bit register pair target operand.  In
    the RTX we model this as a write to a TImode register.  Unfortunately
    the RTX's being assigned to the two parts of the target operand were
    swapped.  This is no problem if in the end the flogr instruction will
    be emitted since the instruction still does what the clzdi expander
    expects.  However, a problem arises when the RTX is used to optimize
    CLZ for a constant input operand.  Even then it matters only if the
    expression couldn't be folded on tree level already.
    
    In the testcase this happened thanks to loop unrolling on RTL level.
    The iteration variable is used as an argument to the clz
    builtin. Due to the loop unrolling it becomes a constant and after
    folding the broken RTX leads to a wrong assumption.
    
    gcc/ChangeLog:
    
    2018-11-26  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-11-20  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390.md ("clztidi2"): Swap the RTX's written to the
            DImode parts of the target operand.
    
    gcc/testsuite/ChangeLog:
    
    2018-11-26  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-11-20  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/flogr-1.c: New test.
    
    From-SVN: r266466

commit d2fd70ca307bb597658a0b51a5137072e3f9c92f
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Mon Nov 26 15:08:49 2018 +0000

    S/390: Document z14/arch12 -march option.
    
    gcc/ChangeLog:
    
    2018-11-26  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-11-26  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * doc/invoke.texi: Document z14/arch12 -march option.
    
    From-SVN: r266464

commit ed567c8b5d0696d434d01716af23673310d73db1
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 26 14:16:01 2018 +0000

    re PR tree-optimization/87645 (gcc hangs up on vr_values::vrp_visit_assignment_or_call)
    
    2018-10-19  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/87645
            Backport from mainline
            2018-07-12  Richard Biener  <rguenther@suse.de>
    
            * gimple-match-head.c (gimple_resimplify1): Apply recursion
            limit.
            (gimple_resimplify2): Likewise.
            (gimple_resimplify3): Likewise.
            (gimple_resimplify4): Likewise.
    
            * gcc.dg/torture/pr87645.c: New testcase.
    
    From-SVN: r266461

commit a3ca04d3054b6fb6d3d98fac650d7df7ff490098
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 26 13:31:21 2018 +0000

    backport: [multiple changes]
    
    2018-11-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-10-15  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/87610
            * tree-ssa-structalias.c (struct vls_data): Add escaped_p member.
            (visit_loadstore): When a used restrict tag escaped verify that
            the points-to solution of "other" pointers do not include
            escaped.
            (compute_dependence_clique): If a used restrict tag escaped
            communicated that down to visit_loadstore.
    
            * gcc.dg/torture/restrict-6.c: New testcase.
    
            2018-10-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/87665
            PR tree-optimization/87745
            * tree-vectorizer.h (get_earlier_stmt): Remove.
            (get_later_stmt): Pick up UID from the original non-pattern stmt.
    
            * gfortran.dg/20181025-1.f: New testcase.
    
            2018-10-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/87665
            * tree-vect-data-refs.c (vect_preserves_scalar_order_p): Adjust
            to reflect reality.
    
            * gcc.dg/torture/pr87665.c: New testcase.
    
    From-SVN: r266460

commit 6f912a34e7b4e25a8007ff68a22764adf0b00165
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 26 11:59:05 2018 +0000

    backport: [multiple changes]
    
    2018-11-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-06-14  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/86139
            * tree-vect-generic.c (build_word_mode_vector_type): Remove
            duplicate and harmful type_hash_canon.
    
            2018-06-15  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/86076
            * tree-cfg.c (move_stmt_op): unshare invariant addresses
            before adjusting their block.
    
            * gcc.dg/pr86076.c: New testcase.
    
    From-SVN: r266458

commit 5fb6435b8b9e80a099255009a873fdc26abfbaf7
Author: Matthias Klose <doko@ubuntu.com>
Date:   Mon Nov 26 11:57:16 2018 +0000

    test-long-names.c: Fix build with -Wformat-security.
    
    2018-11-26  Matthias Klose  <doko@ubuntu.com>
    
            * jit.dg/test-long-names.c: Fix build with -Wformat-security.
    
    From-SVN: r266457

commit 87fa8ed3e24c5ad6604ba2f18e9601b61591c143
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 26 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r266442

commit 3262f0e070b8c489187496999e1bc89eee88816d
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Nov 25 15:23:18 2018 +0000

    backport: re PR fortran/88073 (Internal compiler error  compiling WHERE construct with -O or -O2)
    
    2018-11-25  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88073
            * frontend-passes.c (combine_array_constructor): Do not do
            anything if in a WHERE statement.
    
    2018-11-25  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/88073
            * gfortran.dg/where_7.f90: New test.
    
    From-SVN: r266437

commit 6c36d65d2d72b7cfbce6ed4525cf2348aac841a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 25 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r266432

commit 57c426a788ee5c13a06082987f79ed141a7913b5
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Nov 24 18:54:52 2018 +0000

    re PR fortran/88143 (ICE in resolve_variable at gcc/fortran/resolve.c:5413 since r253077)
    
    2018-11-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/88143
            * resolve.c (resolve_variable): Check for associate names with
            NULL target.
    
    2018-11-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/88143
            * gfortran.dg/associate_46.f90: New test.
    
    From-SVN: r266431

commit 383675636b21df62e6b6c7f8bc0c60d33be26bce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 24 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r266423

commit 78c042d23aa01e1b96a943792b22462e7517140f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 23 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r266398

commit 6f71f1f5d24e40299d53d94f2f12d3f8ac4a22c1
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Nov 22 23:47:46 2018 +0100

    * testsuite/ChangeLog: Fix whitespace.
    
    From-SVN: r266394

commit abc6cec87309aacf7a2f5c7ae5da830ec8c852b4
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Nov 22 23:46:54 2018 +0100

    backport: re PR target/88051 (internal compiler error: in add_clobbers, at config/i386/sync.md:1762)
    
            Backport from mainline
            2018-11-16  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/88051
            * config/i386/sse.md (UNSPEC_MOVDI_TO_SSE): New UNSPEC.
            (movdi_to_sse): Rewrite using UNSPEC_MOVDI_TO_SSE unspec.
    
    From-SVN: r266393

commit ce728b0c047a5237878fc30e107c592b95618945
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 22 16:29:50 2018 +0000

    backport: re PR rtl-optimization/85925 (compilation of masking with 257 goes wrong in combine at -02)
    
            Backport from mainline
            2018-11-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85925
            * gcc.c-torture/execute/20181120-1.c: Require effective target
            int32plus.
            (u): New variable.
            (main): Compare d against u.f1 rather than 0x101.  Use 0x4030201
            instead of 0x10101.
    
    From-SVN: r266384

commit df1ccb446d4eea1a64814905b5f2d0ac736e0307
Author: Tom de Vries <tom@codesourcery.com>
Date:   Thu Nov 22 13:12:41 2018 +0000

    Backport "[vms] Add missing vmsdbgout_early_finish"
    
    2018-11-22  Tom de Vries  <tdevries@suse.de>
    
            backport from trunk:
            2017-11-19  Tom de Vries  <tom@codesourcery.com>
    
            PR target/82961
            * vmsdbgout.c (vmsdbgout_early_finish): New function.
            (vmsdbg_debug_hooks): Set early_finish field to vmsdbgout_early_finish.
    
    From-SVN: r266375

commit e525707a8cc0cee3a99de4615d2ed1cedc9c609a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 22 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r266362

commit 5178702f1c5fe4689e5646470a04ed01ffab7948
Author: Mihail Ionescu <mihail.ionescu@arm.com>
Date:   Wed Nov 21 16:50:37 2018 +0000

    backport: [multiple changes]
    
    2018-11-21  Mihail Ionescu  <mihail.ionescu@arm.com>
    
    gcc/
            PR target/87867
            Backport from mainiline
            2018-09-26  Eric Botcazou  <ebotcazou@adacore.com>
    
            * config/arm/arm.c (arm_reorg): Skip Thumb reorg pass for thunks.
            (arm32_output_mi_thunk): Deal with long calls.
    
    gcc/testsuite/
            PR target/87867
            Backport from mainiline
            2018-09-17  Eric Botcazou  <ebotcazou@adacore.com>
    
            * g++.dg/other/thunk2a.C: New test.
            * g++.dg/other/thunk2b.C: Likewise.
    
    From-SVN: r266348

commit 614af7de4bd3771838e62d53f5e83538af24ac7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 21 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r266330

commit 19319573cd0de3e247361efb6ac2ff294612284e
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Nov 20 14:47:49 2018 +0000

    backport: [multiple changes]
    
    2018-11-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-03-12  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/84777
            * tree-ssa-loop-ch.c (should_duplicate_loop_header_p): For
            force-vectorize loops ignore whether we are optimizing for size.
    
            2018-01-26  Richard Biener  <rguenther@suse.de>
    
            PR rtl-optimization/84003
            * dse.c (record_store): Only record redundant stores when
            the earlier store aliases at least all accesses the later one does.
    
            * g++.dg/torture/pr77745.C: Mark foo noinline to trigger
            latent bug in DSE if NOINLINE is appropriately defined.
            * g++.dg/torture/pr77745-2.C: New testcase including pr77745.C
            and defining NOINLINE.
    
    From-SVN: r266318

commit 8c3290e6f385785c93c755e2fc8bc1f628827edc
Author: Xuepeng Guo <xuepeng.guo@intel.com>
Date:   Tue Nov 20 14:35:43 2018 +0000

    backport: re PR target/87853 (_mm_cmpgt_epi8 broken with -funsigned-char)
    
            Backport from mainline
            2018-11-05  Xuepeng Guo  <xuepeng.guo@intel.com>
    
            PR target/87853
            * config/i386/emmintrin.h (__v16qs): New to cope with option
            -funsigned-char.
            (_mm_cmpeq_epi8): Replace __v16qi with __v16qs.
            (_mm_cmplt_epi8): Likewise.
            (_mm_cmpgt_epi8): Likewise.
    
    From-SVN: r266317

commit 0d0d194c74f341a81e1b120c8eb659c65e7cc770
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Nov 20 09:04:12 2018 +0000

    re PR rtl-optimization/85925 (compilation of masking with 257 goes wrong in combine at -02)
    
    2018-11-20  Eric Botcazou  <ebotcazou@adacore.com>
    
            PR rtl-optimization/85925
            * rtl.h (word_register_operation_p): New predicate.
            * combine.c (record_dead_and_set_regs_1): Only apply specific handling
            for WORD_REGISTER_OPERATIONS targets to word_register_operation_p RTX.
            * rtlanal.c (nonzero_bits1): Likewise.  Adjust couple of comments.
            (num_sign_bit_copies1): Likewise.
    
    From-SVN: r266304

commit 137bbd5413d5e285c5aa39cd5e1e5b612b2c7f9f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 20 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r266291

commit 441031756f2033c82e03eb6c6641851fdf246810
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 19 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r266257

commit effe5b750c1614551400c5b6aaebf264729e95f0
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Nov 18 22:36:30 2018 +0100

    backport: re PR target/87928 (ICE in ix86_compute_frame_layout, at config/i386/i386.c:11161 since r228607)
    
            Backport from mainline
            2018-11-11  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/87928
            * config/i386/i386.h (STACK_BOUNDARY): Use TARGET_64BIT_MS_ABI
            instead of (TARGET_64BIT && ix86_abi == MS_ABI).
            * config/i386/darwin.h (STACK_BOUNDARY): Ditto.
            * config/i386/cygming.h (STACK_BOUNDARY): Remove.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2018-11-11  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/87928
            * gcc.target/i386/pr87928.c: New test.
    
    From-SVN: r266254

commit 46e7b616795962f700b37a33c44faef7900d8c6e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 18 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r266243

commit eda372a0fd7e37f63a9dc25cb77f2d2675212505
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 17 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r266227

commit ce68261484d0fd00baa3eb5fe0e5cc3188402335
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 16 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r266196

commit 17cfe4f1ae53739e63df00e0783d5dd24f75cb4d
Author: Nathan Sidwell <nathan@acm.org>
Date:   Thu Nov 15 14:31:35 2018 +0000

    [debug/88006] -fdebug-types-section gives undefined ref
    
    https://gcc.gnu.org/ml/gcc-patches/2018-11/msg01280.html
            PR debug/88006
            PR debug/87462
            * dwarf2out.c (dwarf2out_finish): Apply resolve_addr to comdat
            type list.
    
            * g++.dg/debug/dwarf2/pr87462.C: New.
            * g++.dg/debug/dwarf2/pr88006.C: New.
    
    From-SVN: r266185

commit 848b45772ea6f4912acdf67e6647b708e3c5f380
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 15 12:06:55 2018 +0000

    misc.c (gnat_init_gcc_eh): Do not override the switch -fnon-call-exceptions passed on the command line in...
    
            * gcc-interface/misc.c (gnat_init_gcc_eh): Do not override the switch
            -fnon-call-exceptions passed on the command line in -gnatp mode.
    
    From-SVN: r266178

commit 9ce3b8d17e39b751314f65817aeed6b958afa774
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 15 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r266165

commit 37ef40f1825df675069d55ef8d7dc374a26caebc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 14 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r266094

commit 805bbc611e60f0b9acc958120e250413d237c2a5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Nov 13 09:03:34 2018 +0000

    misc.c (gnat_init_gcc_eh): Set -fnon-call-exceptions for the runtime on platforms where...
    
            * gcc-interface/misc.c (gnat_init_gcc_eh): Set -fnon-call-exceptions
            for the runtime on platforms where System.Machine_Overflow is true.
    
    From-SVN: r266059

commit fd2acfe3ce7c8ef37dfc5dc3c746d1f1eb53de15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 13 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r266040

commit 008fbe0fef7fe6f2257bc62cfc55fa7dfb411b16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 12 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r266021

commit af4dbfeef6997bf42501acde84a37c0fecb46797
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Nov 11 18:44:43 2018 +0100

    backport: re PR c++/58372 (internal compiler error: ix86_compute_frame_layout)
    
            Backport from mainline
            2018-11-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR middle-end/58372
            * cfgexpand.c (pass_expand::execute): Move the call to
            finish_eh_generation in front of the call to expand_stack_alignment.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2018-11-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR middle-end/58372
            * g++.dg/pr58372.C: New test.
    
    From-SVN: r266015

commit b8bc73e8a8c3a6e822edf1f1beb16a585b53a964
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 11 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r266005

commit 14d921073da22997a1d9e9621ddeb330e1511d1a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 10 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r265999

commit a18d07f9685492460133692e800595eb4e083119
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Nov 9 15:29:15 2018 +0000

    syscall: change RLIM_INFINITY from 0xffffffffffffffff to -1
    
        For compatibility with the gc toolchain's syscall package.
    
        Fixes golang/go#28665
    
        Reviewed-on: https://go-review.googlesource.com/c/148697
    
    From-SVN: r265972

commit 71905e119b3085d13584f95877d855f091fa5e73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 9 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r265943

commit 2df023972c2052a63930be7aa9de2f72806f1711
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 8 15:58:16 2018 +0000

    fe.h (Suppress_Checks): Declare.
    
            * fe.h (Suppress_Checks): Declare.
            * gcc-interface/misc.c (gnat_init_gcc_eh): Set -fnon-call-exceptions
            only if checks are not suppressed and -faggressive-loop-optimizations
            only if they are.
            * gcc-interface/trans.c (struct loop_info_d): Remove has_checks and
            warned_aggressive_loop_optimizations fields.
            (gigi): Do not clear warn_aggressive_loop_optimizations here.
            (Raise_Error_to_gnu): Do not set has_checks.
            (gnat_to_gnu) <N_Indexed_Component>: Remove support for aggressive
            loop optimizations.
    
    From-SVN: r265923

commit 8cc2ef4e91f15e68b446342d6b00d5cce37e93a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 8 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r265900

commit 98d8583ac6c12652de0cf28243efdfe2e4d67e73
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Nov 7 20:52:29 2018 +0000

    gcc: xtensa: don't force PIC for uclinux target
    
    xtensa-uclinux uses bFLT executable file format that cannot relocate
    fields representing offsets from data to code. C++ objects built as PIC
    use offsets to encode FDE structures. As a result C++ exception handling
    doesn't work correctly on xtensa-uclinux. Don't use PIC by default on
    xtensa-uclinux.
    
    gcc/
    2018-11-07  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-11-05  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/uclinux.h (XTENSA_ALWAYS_PIC): Change to 0.
    
    From-SVN: r265889

commit c12d748686d03b089340a118dec9b4865e737347
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 7 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r265854

commit bab143d1ed4660b2cf67c13a78dc1602be8d2b89
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 6 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r265824

commit 62aec8fdd62378937c38039dc6970d81a6d29fc7
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Mon Nov 5 20:59:38 2018 +0000

    compiler: handle abstract type in builtin numeric const value
    
        Builtin_call_expression::do_numeric_constant_value can be called by
        Array_type::verify_length before the determine types pass, so accept
        an abstract type.
    
        Test case is https://golang.org/cl/147537.
    
        Fixes golang/go#28601
    
        Reviewed-on: https://go-review.googlesource.com/c/147442
    
    From-SVN: r265818

commit 01103e281c57f6bf4c43dfa87a188dc16d702680
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 5 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r265781

commit 0f7e2175c18dcad09e9a9dd23f0600a4cc4f831e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 4 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r265771

commit e92ff3894fa87b5aa084035a1bb8cf1cc1af804c
Author: Tobias Burnus <burnus@net-b.de>
Date:   Sat Nov 3 15:49:33 2018 +0100

    backport: re PR fortran/87597 (wrong result with matmul inlining)
    
    2019-11-03  Tobias Burnus  <burnus@net-b.de>
            Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/87597
            * expr.c (gfc_simplify_expr): Avoid simplifying
            the 'array' argument to lbound/ubound/lcobound/
            ucobound.
    
    2018-11-03  Tobias Burnus  <burnus@net-b.de>
            Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/87597
            * gfortran.dg/inline_matmul_24.f90: New.
    
    
    Co-Authored-By: Thomas Koenig <tkoenig@gcc.gnu.org>
    
    From-SVN: r265769

commit 9f887ef15eee9d33e0457b5fc39063b3c9142f88
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 3 00:16:41 2018 +0000

    Daily bump.
    
    From-SVN: r265764

commit ce988f1927286362d5409b28ee36928fccc2f34b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 2 00:16:57 2018 +0000

    Daily bump.
    
    From-SVN: r265736

commit af31aac33cb3f659f94a27376ff769874a84dfad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 1 00:16:44 2018 +0000

    Daily bump.
    
    From-SVN: r265705

commit b1e70deacb7d17f1a290e9ef1d2dfd3932a0e216
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 31 13:16:10 2018 +0000

    PR libstdc++/87822 fix layout change for nested std::pair
    
    The introduction of the empty __pair_base base class for PR 86751
    changed the layout of std::pair<std::pair<...>, ...>. The outer pair and
    its first member both have a base class of the same type, which cannot
    exist at the same address. This causes the first member to be at a
    non-zero offset.
    
    The solution is to make the base class depend on the template
    parameters, so that each pair type has a different base class type,
    which allows the base classes of the outer pair and its first member to
    have the same address.
    
            PR libstdc++/87822
            * include/bits/stl_pair.h (__pair_base): Change to class template.
            (pair): Make base class type depend on template parameters.
            * testsuite/20_util/pair/87822.cc: New test.
    
    From-SVN: r265683

commit 410ac2f6edb8061be3aa6fdc50491150c57779a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 31 00:16:59 2018 +0000

    Daily bump.
    
    From-SVN: r265650

commit fd1c6591708430957e54466f0bc685292f406cb0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 30 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r265612

commit fd8dd539972cbe100c036cb7aeae100ff3523c01
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 29 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r265579

commit 960fb2af7d5cf6b393f2e344b5fc41d011e1c903
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 28 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r265562

commit 1f7bcefdef65666a5502687092976b65dff057cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 27 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r265552

commit 0f0a708aa17dcae403a6c62f9c5725436acbd02d
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Fri Oct 26 19:38:45 2018 +0000

    backport: re PR tree-optimization/87473 (ICE in create_add_on_incoming_edge, at gimple-ssa-strength-reduction.c:2344)
    
    [gcc]
    
    2018-10-26  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2018-10-19  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/87473
            * gimple-ssa-strength-reduction.c (record_phi_increments): For
            phi arguments identical to the base expression of the phi
            candidate, record a phi-adjust increment of zero minus the index
            expression of the hidden basis.
            (phi_incr_cost): For phi arguments identical to the base
            expression of the phi candidate, the difference to compare against
            the increment is zero minus the index expression of the hidden
            basis, and there is no potential savings from replacing the (phi)
            statement.
            (ncd_with_phi): For phi arguments identical to the base expression
            of the phi candidate, the difference to compare against the
            increment is zero minus the index expression of the hidden basis.
            (all_phi_incrs_profitable): For phi arguments identical to the
            base expression of the phi candidate, the increment to be checked
            for profitability is zero minus the index expression of the hidden
            basis.
    
    [gcc/testsuite]
    
    2018-10-26  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            Backport from mainline
            2018-10-19  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/87473
            * gcc.c-torture/compile/pr87473.c: New file.
    
    From-SVN: r265547

commit 78765edf93b8201e1f5fbff98d38c576aee80bf9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 26 00:16:38 2018 +0000

    Daily bump.
    
    From-SVN: r265512

commit 8bf26f70911846885c6a3e06febc7294d6566efc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 25 17:32:47 2018 +0100

    PR libstdc++/87749 fix (and optimize) string move construction
    
    The move constructor for the SSO string uses assign(const basic_string&)
    when either:
    
    (1) the source string is "local" and so the contents of the small string
    buffer need to be copied, or
    
    (2) the allocator does not propagate and is_always_equal is false.
    
    Case (1) is suboptimal, because the assign member is not noexcept and
    the compiler isn't smart enough to see it won't actually throw in this
    case. This causes extra code in the move assignment operator so that any
    exception will be turned into a call to std::terminate. This can be
    fixed by copying small strings inline instead of calling assign.
    
    Case (2) is a bug, because the specific instances of the allocators
    could be equal even if is_always_equal is false. This can result in an
    unnecessary deep copy (and potentially-throwing allocation) when the
    storage should be moved. This can be fixed by simply checking if the
    allocators are equal.
    
            PR libstdc++/87749
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI]
            (basic_string::operator=(basic_string&&)): For short strings copy the
            buffer inline. Only fall back to using assign(const basic_string&) to
            do a deep copy when reallocation is needed.
            * testsuite/21_strings/basic_string/modifiers/assign/char/87749.cc:
            New test.
            * testsuite/21_strings/basic_string/modifiers/assign/char/
            move_assign_optim.cc: New test.
            * testsuite/21_strings/basic_string/modifiers/assign/wchar_t/87749.cc:
            New test.
            * testsuite/21_strings/basic_string/modifiers/assign/wchar_t/
            move_assign_optim.cc: New test.
    
    From-SVN: r265497

commit 6c75d8ac50710a4671e8635421ab3d122208fa38
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 25 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r265476

commit 8733a0bfebc2c18c82f66ea37d173d12e39ddde0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 24 00:16:46 2018 +0000

    Daily bump.
    
    From-SVN: r265446

commit e1400f0bbbd7acc4b6378a1734d8780e1c609d5e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Oct 23 16:55:05 2018 +0100

    PR libstdc++/87704 fix unique_ptr(nullptr_t) constructors
    
    Using a delegating constructor to implement these constructors means
    that they instantiate the destructor, which requires the element_type to
    be complete. In C++11 and C++14 they were specified to be delegating,
    but that was changed as part of LWG 2801 so in C++17 they don't require
    a complete type (as was intended all along).
    
            PR libstdc++/87704
            * include/bits/unique_ptr.h (unique_ptr::unique_ptr(nullptr_t)): Do
            not delegate to default constructor.
            (unique_ptr<T[], D>::unique_ptr(nullptr_t)): Likewise.
            * testsuite/20_util/unique_ptr/cons/incomplete.cc: New test.
    
    From-SVN: r265429

commit 03a5b5013f5b9eb9794b5a41ecba267efb8a7259
Author: Tom de Vries <tdevries@suse.de>
Date:   Tue Oct 23 15:06:17 2018 +0000

    backport "[c++] Fix DECL_BY_REFERENCE of clone parms"
    
    Consider test.C compiled at -O0 -g:
    ...
    class string {
    public:
      string (const char *p) { this->p = p ; }
      string (const string &s) { this->p = s.p; }
    
    private:
      const char *p;
    };
    
    class foo {
    public:
      foo (string dir_hint) {}
    };
    
    int
    main (void)
    {
      std::string s = "This is just a string";
      foo bar(s);
      return 0;
    }
    ...
    
    When parsing foo::foo, the dir_hint parameter gets a DECL_ARG_TYPE of
    'struct string & restrict'.  Then during finish_struct, we call
    clone_constructors_and_destructors and create clones for foo::foo, and
    set the DECL_ARG_TYPE in the same way.
    
    Later on, during finish_function, cp_genericize is called for the original
    foo::foo, which sets the type of parm dir_hint to DECL_ARG_TYPE, and sets
    DECL_BY_REFERENCE of dir_hint to 1.
    
    After that, during maybe_clone_body update_cloned_parm is called with:
    ...
    (gdb) call debug_generic_expr (parm.typed.type)
    struct string & restrict
    (gdb) call debug_generic_expr (cloned_parm.typed.type)
    struct string
    ...
    The type of the cloned_parm is then set to the type of parm, but
    DECL_BY_REFERENCE is not set.
    
    When doing cp_genericize for the clone later on,
    TREE_ADDRESSABLE (TREE_TYPE ()) is no longer true for the updated type for
    the parm, so DECL_BY_REFERENCE is not set there either.
    
    The missing DECL_BY_REFERENCE on cloned_parm causes incorrect debug info to be
    generated.
    
    This patch fixes the problem by copying DECL_BY_REFERENCE in update_cloned_parm.
    
    Bootstrapped and reg-tested on x86_64.
    
    2018-10-23  Tom de Vries  <tdevries@suse.de>
    
            backport from trunk:
            2018-07-31  Tom de Vries  <tdevries@suse.de>
    
            PR debug/86687
            * optimize.c (update_cloned_parm): Copy DECL_BY_REFERENCE.
    
            * g++.dg/guality/pr86687.C: New test.
    
    From-SVN: r265427

commit 6d06f59b4953f5f565547587adbf7691302cb71a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 23 00:16:54 2018 +0000

    Daily bump.
    
    From-SVN: r265406

commit 44eabe0c88e1f3cc25094ed1c6a4e7d9e8e1cc2c
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 22 11:09:11 2018 +0000

    utils.c (unchecked_convert): Use local variables for the biased and reverse SSO attributes of both types.
    
            * gcc-interface/utils.c (unchecked_convert): Use local variables for
            the biased and reverse SSO attributes of both types.
            Further extend the processing of integral types in the presence of
            reverse SSO to all scalar types.
    
    From-SVN: r265383

commit 6ead6140be2182529db177211c025d53d0690abd
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 22 10:45:25 2018 +0000

    trans.c (Pragma_to_gnu): Use a simple memory constraint in all cases.
    
            * gcc-interface/trans.c (Pragma_to_gnu) <Pragma_Inspection_Point>: Use
            a simple memory constraint in all cases.
    
    From-SVN: r265380

commit 268ab32f4ad62bd9c85975e11dadb89893b2f742
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 22 09:47:52 2018 +0100

    PR libstdc++/79433 no #error for including TS headers with wrong -std
    
    Backport from mainline
    2017-09-12  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79433
            * include/Makefile.am: Remove <bits/c++14_warning.h>.
            * include/Makefile.in: Regenerate.
            * include/bits/c++14_warning.h: Remove.
            * include/experimental/algorithm: Do not include <c++14_warning.h>.
            * include/experimental/any: Likewise.
            * include/experimental/array: Likewise.
            * include/experimental/bits/erase_if.h: Likewise.
            * include/experimental/bits/lfts_config.h: Likewise.
            * include/experimental/bits/shared_ptr.h: Likewise.
            * include/experimental/bits/string_view.tcc: Likewise.
            * include/experimental/chrono: Likewise.
            * include/experimental/deque: Likewise.
            * include/experimental/filesystem: Do not include <c++0x_warning.h>.
            * include/experimental/forward_list: Do not include <c++14_warning.h>.
            * include/experimental/functional: Likewise.
            * include/experimental/iterator: Likewise.
            * include/experimental/list: Likewise.
            * include/experimental/map: Likewise.
            * include/experimental/memory: Likewise.
            * include/experimental/numeric: Likewise.
            * include/experimental/optional: Likewise.
            * include/experimental/propagate_const: Likewise.
            * include/experimental/ratio: Likewise.
            * include/experimental/regex: Likewise.
            * include/experimental/set: Likewise.
            * include/experimental/string: Likewise.
            * include/experimental/string_view: Likewise.
            * include/experimental/system_error: Likewise.
            * include/experimental/tuple: Likewise.
            * include/experimental/type_traits: Likewise.
            * include/experimental/unordered_map: Likewise.
            * include/experimental/unordered_set: Likewise.
            * include/experimental/vector: Likewise.
            * testsuite/experimental/any/misc/any_cast_neg.cc: Adjust dg-error
            line number.
            * testsuite/experimental/array/neg.cc: Likewise.
            * testsuite/experimental/propagate_const/assignment/move_neg.cc:
            Likewise.
            * testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements2.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements3.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements4.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements5.cc: Likewise.
    
    From-SVN: r265374

commit 2787eb01935882d8da3ba4f8afdb08b1f5c6c7c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 22 00:16:53 2018 +0000

    Daily bump.
    
    From-SVN: r265364

commit b118712e3efc655a2d63bc3905ba6cd4da0f9bcc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 21 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r265347

commit 32ea5986b0d286a9ca7991d2c36cddb2b6dd4b32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 20 00:16:43 2018 +0000

    Daily bump.
    
    From-SVN: r265337

commit 37a2c02ed522244face3b6c5a76cf878cce4fcbe
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Fri Oct 19 08:55:27 2018 +0000

    S/390: Fix problem with vec_init expander
    
    gcc/ChangeLog:
    
    2018-10-19  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-10-15  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390.c (s390_expand_vec_init): Force vector element
            into reg if it isn't a general operand.
    
    gcc/testsuite/ChangeLog:
    
    2018-10-19  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-10-15  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * g++.dg/vec-init-1.C: New test.
    
    From-SVN: r265309

commit cb84bb766bdec475a93e8ebc7ad9444fb348e878
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 19 00:16:55 2018 +0000

    Daily bump.
    
    From-SVN: r265301

commit 96be484ff06f2005f6529b0d1c1f0e969c1675ea
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 18 20:38:56 2018 +0100

    PR libstdc++/87641 correctly initialize accumulator in valarray::sum()
    
    Use the value of the first element as the initial value of the
    __valarray_sum accumulator. Value-initialization might not create the
    additive identity for the value type.
    
            PR libstdc++/87641
            * include/bits/valarray_array.h (__valarray_sum): Use first element
            to initialize accumulator instead of value-initializing it.
            * testsuite/26_numerics/valarray/87641.cc: New test.
    
    From-SVN: r265285

commit 3b5f5864830297cdaa094e766b170ea2ea1413c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 18 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r265253

commit ff5ac1211dcfd85ed69772f49f91eb0ce85e46b6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Oct 17 17:53:02 2018 +0000

    re PR middle-end/87623 (bytes swapped in register when comparing cause fail when compiled with  -O1 or higher)
    
            PR middle-end/87623
            * fold-const.c (fold_truth_andor_1): If the right side is not constant,
            bail out if both sides do not have the same storage order.
    
    From-SVN: r265244

commit ac60bbf79bf86309a21b079ddec8b3db85cb2910
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 17 00:16:34 2018 +0000

    Daily bump.
    
    From-SVN: r265226

commit e265431e9f52ce73b604771c732b49cbd3d8e5fa
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Tue Oct 16 13:40:57 2018 +0000

    [AArch64] Fix PR87511
    
    As mentioned in PR87511, the shift used in aarch64_mask_and_shift_for_ubfiz_p
    should be evaluated as a HOST_WIDE_INT rather than int.
    
    Backported from mainline
    
        gcc/
            PR target/87511
            * config/aarch64/aarch64.c (aarch64_mask_and_shift_for_ubfiz_p):
            Use HOST_WIDE_INT_1U for shift.
    
        testsuite/
            PR target/87511
            * gcc.target/aarch64/pr87511.c: Add new test.
    
    From-SVN: r265195

commit c1d43968e00e6fccbdd517d46d9b82c5d5f677ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 16 00:16:47 2018 +0000

    Daily bump.
    
    From-SVN: r265181

commit 0bc2fbb6c333cf8e05b598960d0f30af8f490d6a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 15 15:01:47 2018 +0100

    Adjust test to pass with latest glibc
    
    Glibc changed the it_IT locales to use thousands separators,
    invalidating this test. Use nl_NL instead, as Dutch only uses grouping
    for money not numbers.
    
            * testsuite/22_locale/numpunct/members/char/3.cc: Adjust test to
            account for change to glibc it_IT localedata (glibc bz#10797).
    
    From-SVN: r265167

commit 77f97466448a70542a90db649c3e205746eb2e2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 15 00:16:43 2018 +0000

    Daily bump.
    
    From-SVN: r265153

commit ab4a9d163140a2696633b2cbda573532c77529e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 14 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r265144

commit f726711112d20d6d496a83e9d680639fe4712115
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sat Oct 13 11:25:11 2018 +0000

    backport: close.c: Include <string.h>.
    
            Backport from trunk
            * io/close.c [!HAVE_UNLINK_OPEN_FILE]: Include <string.h>.
    
    From-SVN: r265141

commit de4653c0ec055285c7f138892c90e602950d0731
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 13 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r265137

commit ed9a7b1da2ff9123a80b805fdc2c7e932c44a35c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:55:17 2018 +0200

    backport: re PR target/87550 (Intrinsics for rdpmc (__rdpmc, __builtin_ia32_rdpmc) are interpreted as pure functions)
    
            Backported from mainline
            2018-10-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/87550
            * config/i386/i386-builtin.def (IX86_BUILTIN_RDPMC): Move from args set
            to special_args set.
    
            * gcc.target/i386/pr87550.c: New test.
    
    From-SVN: r265112

commit 914c2dbdcec7048b7a82a8a127067fa900f5cfb5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:54:34 2018 +0200

    backport: re PR middle-end/87248 (Bad code for masked operations involving signed ints)
    
            Backported from mainline
            2018-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/87248
            * fold-const.c (fold_ternary_loc) <case COND_EXPR>: Verify also that
            BIT_AND_EXPR's second operand is a power of two.  Formatting fix.
    
            * c-c++-common/torture/pr87248.c: New test.
    
    From-SVN: r265111

commit 9868d33f0ef5190f1937a8bea81e235962b71076
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:53:54 2018 +0200

    backport: re PR rtl-optimization/87065 (combine causes ICE in trunc_int_for_mode)
    
            Backported from mainline
            2018-08-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/87065
            * combine.c (simplify_if_then_else): Formatting fix.
            (if_then_else_cond): Guard MULT optimization with SCALAR_INT_MODE_P
            check.
            (known_cond): Don't return const_true_rtx for vector modes.  Use
            CONST0_RTX instead of const0_rtx.  Formatting fixes.
    
            * gcc.target/i386/pr87065.c: New test.
    
    From-SVN: r265110

commit 5dd76907d07ee1145d7a5ff8b9c0983695da404b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:53:11 2018 +0200

    backport: re PR middle-end/86627 (Signed 128-bit division by 2 no longer expanded to RTL)
    
            Backported from mainline
            2018-07-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86627
            * expmed.c (expand_divmod): Punt if d == HOST_WIDE_INT_MIN
            and size > HOST_BITS_PER_WIDE_INT.  For size > HOST_BITS_PER_WIDE_INT
            and abs_d == d, do the power of two handling if profitable.
    
            * gcc.target/i386/pr86627.c: New test.
    
    From-SVN: r265109

commit af899eccd306cde0d72055eacec16a0d916f8769
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:52:18 2018 +0200

    backport: re PR middle-end/86542 (wrong-code for collapsed taskloop which needs omp_cpyfn)
    
            Backported from mainline
            2018-07-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86542
            * omp-low.c (create_task_copyfn): Copy over also fields corresponding
            to _looptemp_ clauses, other than the first two.
    
            * testsuite/libgomp.c++/pr86542.C: New test.
    
    From-SVN: r265108

commit 8a171da8b31837cb30aac55a1f5119cf424f722d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:49:32 2018 +0200

    backport: re PR middle-end/86539 (OpenMP wrong-code with taskloop and references)
    
            Backported from mainline
            2018-07-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86539
            * gimplify.c (gimplify_omp_for): Ensure taskloop firstprivatized init
            and cond temporaries don't have reference type if iterator has
            pointer type.  For init use &for_pre_body instead of pre_p if
            for_pre_body is non-empty.
    
            * testsuite/libgomp.c++/pr86539.C: New test.
    
    From-SVN: r265107

commit 5f70207f6b04dcc141b79f0a59191f7c6f03f8f3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:47:57 2018 +0200

    backport: re PR fortran/86421 (OpenMP declare simd linear ref in module causes gfortran to bail out)
    
            Backported from mainline
            2018-07-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/86421
            * module.c (omp_declare_simd_clauses): Add LINEAR with _REF, _VAL and
            _UVAL suffixes.
            (mio_omp_declare_simd): Save and restore ref, val and uval modifiers
            on linear clauses.  Initialize n->where to gfc_current_locus.
    
            * gfortran.dg/vect/pr86421.f90: New test.
    
    From-SVN: r265106

commit 923b01be8ed296ce2a24a28dae5b3c0d1e5fcdea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:46:18 2018 +0200

    backport: re PR middle-end/86660 (libgomp.c++/for-15.C ICEs with nvptx offloading)
    
            Backported from mainline
            2018-07-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86660
            * omp-low.c (scan_sharing_clauses): Don't ignore map clauses for
            declare target to variables if they have always,{to,from,tofrom} map
            kinds.
    
            * testsuite/libgomp.c/pr86660.c: New test.
    
    From-SVN: r265105

commit 2e8cf16d0b8b9158a847384dcd7bbe5ab7f8284b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 16:43:18 2018 +0200

    backport: re PR c++/3698 (improper handling of an extern declared inline function)
    
            Backported from mainline
            2018-07-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/3698
            PR c++/86208
            * cp-gimplify.c (cp_genericize_r): When using extern_decl_map, or
            in TREE_USED flag from stmt to h->to.
    
            * g++.dg/opt/pr3698.C: New test.
    
    From-SVN: r265103

commit 91305b13252b67201cac4643cc12bbf2bae8bbfe
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Oct 12 13:41:56 2018 +0000

    backport: [multiple changes]
    
    2018-10-12  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-08-23  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/87024
            * tree-inline.c (copy_bb): Drop unused __builtin_va_arg_pack_len
            calls.
    
            * gcc.dg/pr87024.c: New testcase.
    
            2018-08-17  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/86505
            * tree-inline.c (copy_bb): When inlining __builtin_va_arg_pack_len ()
            across a va-arg-pack using call adjust its return value accordingly.
    
            * gcc.dg/torture/pr86505.c: New testcase.
    
    From-SVN: r265100

commit 147e60654722ba72460673ec90878e3e9bfb266f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 13:51:46 2018 +0100

    PR libstdc++/86751 default assignment operators for std::pair
    
    The solution for PR 77537 causes ambiguities due to the extra copy
    assignment operator taking a __nonesuch_no_braces parameter. By making
    the base class non-assignable we don't need the extra deleted overload
    in std::pair. The copy assignment operator will be implicitly deleted
    (and the move assignment operator not declared) as needed. Without the
    additional user-provided operator in std::pair the ambiguity is avoided.
    
    Backport from mainline
    2018-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86751
            * include/bits/stl_pair.h (__pair_base): New class with deleted copy
            assignment operator.
            (pair): Derive from __pair_base.
            (pair::operator=): Remove deleted overload.
            * python/libstdcxx/v6/printers.py (StdPairPrinter): New pretty printer
            so that new base class isn't shown in GDB.
            * testsuite/20_util/pair/86751.cc: New test.
            * testsuite/20_util/pair/ref_assign.cc: New test.
    
    From-SVN: r265096

commit 894a59843b4a2efae1a09eef1f69be50b7c3095b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 13:51:40 2018 +0100

    PR libstdc++/78595 implement insertion into maps in terms of emplace
    
    C++14 simplified the specification of the generic insert function
    templates to be equivalent to calling emplace (or emplace_hint).
    Defining them in terms of emplace takes care of the problems described
    in PR 78595, ensuring a single conversion to value_type is done at the
    right time.
    
    Backport from mainline
    2018-09-03  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78595
            * include/bits/stl_map.h (map::insert(_Pair&&))
            (map::insert(const_iterator, _Pair&&)): Do emplace instead of insert.
            * include/bits/stl_multimap.h (multimap::insert(_Pair&&))
            (multimap::insert(const_iterator, _Pair&&)): Likewise.
            * include/bits/unordered_map.h (unordered_map::insert(_Pair&&))
            (unordered_map::insert(const_iterator, _Pair&&))
            (unordered_multimap::insert(_Pair&&))
            (unordered_multimap::insert(const_iterator, _Pair&&)): Likewise.
            * include/std/type_traits (__enable_if_t): Define for C++11.
            * testsuite/23_containers/map/modifiers/insert/78595.cc: New test.
            * testsuite/23_containers/multimap/modifiers/insert/78595.cc: New test.
            * testsuite/23_containers/unordered_map/modifiers/78595.cc: New test.
            * testsuite/23_containers/unordered_multimap/modifiers/78595.cc: New
            test.
    
    From-SVN: r265095

commit e1bb6d27251ac4af92e0d98ca58341bd4f0cee30
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 13:51:34 2018 +0100

    Fix __gnu_cxx::_Pointer_adapter for long long arithmetic
    
    Backport from mainline
    2018-08-30  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/ext/pointer.h (_Pointer_adapter): Define operators for
            pointer arithmetic using long long offsets.
            * testsuite/ext/ext_pointer/1.cc: Test pointer arithmetic using
            long long values.
    
    From-SVN: r265094

commit 82182d876aff148dfb1c1306902353ecd5e20ff9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 13:51:29 2018 +0100

    Fix experimental::pmr typedefs and add tests
    
    The typedefs in <experimental/regex> and <experimental/string> don't
    need to be in the __cxx11 namespace, because they are only aliases and
    so will have the same mangled name as the underlying types.
    
    Backport from mainline
    2018-08-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/21_strings/basic_string/init-list.cc:
            Require cxx11-abi.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_match.cc:
            Likewise.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_string.cc:
            Likewise.
    
    Backport from mainline
    2018-08-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/87061
            * include/experimental/regex [!_GLIBCXX_USE_CXX11_ABI]
            (experimental::pmr::match_results, experimental::pmr::cmatch)
            (experimental::pmr::smatch, experimental::pmr::wcmatch)
            (experimental::pmr::wsmatch): Do not declare for gcc4-compatible ABI,
            because COW strings don't support C++11 allocator model.
            * include/experimental/string [!_GLIBCXX_USE_CXX11_ABI]
            (experimental::pmr::basic_string, experimental::pmr::string)
            (experimental::pmr::u16string, experimental::pmr::u32string)
            (experimental::pmr::wstring): Likewise.
    
    Backport from mainline
    2018-08-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/regex: Remove begin/end macros for namespace.
            * include/experimental/string: Likewise.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_deque.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_forward_list.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_list.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_map.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_match.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_multimap.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_multiset.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_set.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_string.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_map.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_multimap.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_multiset.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_set.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_vector.cc:
            New test.
    
    From-SVN: r265093

commit 16f40bcd18c1fe4b4d402ad05bb6de3ae85c1935
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 13:51:20 2018 +0100

    PR libstdc++/70966 make pmr::new_delete_resource() immortal
    
    Construct the program-wide resource objects using placement new. This
    means they have dynamic storage duration and won't be destroyed during
    termination.
    
    Backport from mainline
    2018-07-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70966
            * include/experimental/memory_resource (__get_default_resource): Use
            placement new to create an object with dynamic storage duration.
    
    Backport from mainline
    2018-06-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70966
            * include/experimental/memory_resource (__resource_adaptor_imp): Add
            static assertions to enforce requirements on pointer types.
            (__resource_adaptor_imp::get_allocator()): Add noexcept.
            (new_delete_resource, null_memory_resource): Return address of an
            object with dynamic storage duration.
            (__null_memory_resource): Remove.
            * testsuite/experimental/memory_resource/70966.cc: New.
    
    From-SVN: r265092

commit 273ec65f5b6208affe1f083d1379f028239159e2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 12:36:18 2018 +0100

    PR libstdc++/77854 document size_type for containers
    
            PR libstdc++/77854
            * doc/xml/manual/status_cxx1998.xml: Document size_type and
            difference_type for containers.
            * doc/html/*: Regenerate.
    
    From-SVN: r265082

commit 797830dc9f48c3d74b5cafba6616e9f0e46736e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 12 00:16:35 2018 +0000

    Daily bump.
    
    From-SVN: r265070

commit aad12a337f1eb627e0db5e9c800ee82c31b81ef4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 11 00:16:46 2018 +0000

    Daily bump.
    
    From-SVN: r265030

commit cf971867d251a46b838f1d2ea73d5328ccde4b39
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 10 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r265001

commit 35c011e8c658a047c51c0e8b6019f48326c352a0
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Oct 9 17:23:06 2018 +0000

    i386: Use TImode for BLKmode values in 2 integer registers
    
    When passing and returning BLKmode values in 2 integer registers, use
    1 TImode register instead of 2 DImode registers. Otherwise, V1TImode
    may be used to move and store such BLKmode values, which prevent RTL
    optimizations.
    
    gcc/
    
            Backport from mainline
            PR target/87370
            * config/i386/i386.c (construct_container): Use TImode for
            BLKmode values in 2 integer registers.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/87370
            * gcc.target/i386/pr87370.c: New test.
    
    From-SVN: r264989

commit 9956b2213b172dd76d7881625f8b1d5022e652d1
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Oct 9 12:37:18 2018 +0100

    Use -fno-show-column in libstdc++ installed testing.
    
    <https://gcc.gnu.org/ml/libstdc++/2016-08/msg00006.html> arranged for
    libstdc++ tests to use -fno-show-column by default, but only for
    build-tree testing.  This patch adds it to the options used for
    installed testing as well.
    
    Tested with installed testing for a cross to x86_64-linux-gnu, where
    it fixes various test failures.
    
            Backport from mainline
            2018-10-02  Joseph Myers  <joseph@codesourcery.com>
    
            * testsuite/lib/libstdc++.exp (libstdc++_init): Use
            -fno-show-column in default cxxflags.
    
    From-SVN: r264953

commit b3546480d76ab51fef7dd85604216afe872fabdd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 9 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r264946

commit 209fda0e951d456dd39a627bba73c838cdafd050
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Oct 8 15:23:48 2018 +0000

    i386: Correct _mm512_mask3_fmaddsub_round_pd
    
    Define _mm512_mask3_fmaddsub_round_pd with
    __builtin_ia32_vfmaddsubpd512_mask, instead of
    __builtin_ia32_vfmaddpd512_mask.
    
            Backport from mainline
            PR target/87517
            * config/i386/avx512fintrin.h (_mm512_mask_fmaddsub_round_pd):
            Defined with __builtin_ia32_vfmaddsubpd512_mask.
    
    From-SVN: r264937

commit cacf61c36bd3f23fc3e049f1404059647e713ec6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 8 14:13:06 2018 +0100

    PR libstdc++/87538 fix std::not_fn exception specifications
    
    Backport from mainline
    2018-10-08  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/87538
            * include/std/functional (_Not_fn::operator()): Check value of
            __is_nothrow_invocable as well.
            * testsuite/20_util/function_objects/not_fn/87538.cc: New test.
            * testsuite/experimental/functional/87538.cc: New test.
    
    From-SVN: r264926

commit beda1bd55cc3264ed998037288680f7a49788fd7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 8 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r264908

commit 098cc3008bf0360424c8a1e4902cfb6f4b7d26e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 7 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r264904

commit b7c93c154b0bf1957d7ece9fbfca80f09b8067df
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 6 00:16:55 2018 +0000

    Daily bump.
    
    From-SVN: r264894

commit 30a3702f309b0da151e358ca15fa3f61d52d9a71
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Oct 5 11:40:59 2018 +0000

    i386: Don't pass -msse2avx to assembler for -mavx
    
    With
    
    gcc -O2 -fPIC -flto -g -c -o a.o a.c
    gcc -O2 -fPIC -flto -g -mavx   -c -o b.o b.c
    gcc -shared -O2 -fPIC -flto -g -o lib1.so a.o b.o
    
    LTO correctly generates AVX for b.o and SSE for a.o.  But the GCC driver
    passes -msse2avx to assembler, which encodes SSE instructions as AVX
    instructions.  We shouldn't pass -msse2avx to assembler for -mavx.
    
            Backport from mainline
            PR target/87522
            * config/i386/gnu-user.h (ASM_SPEC): Don't pass -msse2avx to
            assembler for -mavx.
            * config/i386/gnu-user64.h (ASM_SPEC): Likewise.
    
    From-SVN: r264867

commit b75fc43bdcf235283b7324fef88b33a60da7b913
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 5 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r264858

commit 0d5cc8dfbe2c5a731e1f0836e2bd0f405ec2082a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 4 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r264829

commit 6927df526d03b070cfe63b0e0f97ac20151eb55c
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Wed Oct 3 23:49:11 2018 +0200

    backport: i386.h (SSE_REGNO): Fix check for FIRST_REX_SSE_REG.
    
            Backport from mainline
            2018-09-28  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.h (SSE_REGNO): Fix check for FIRST_REX_SSE_REG.
            (GET_SSE_REGNO): Rename from SSE_REGNO.  Update all uses for rename.
    
    From-SVN: r264826

commit f317c21d81fbaa30a73a0d47feb7b8f811a50bfe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 3 11:58:49 2018 +0100

    PR other/87353 fix formatting and grammar in manual
    
    The changes to invoke.texi in r242433 left some unwanted spaces that
    texi2pod.pl interprets as verbatim formatting. There are also some
    grammatical errors due to the removal of references to GCJ, where the
    G++ driver is referred to in the plural.
    
            PR other/87353
            * doc/invoke.texi (Link Options): Fix formatting and grammar.
    
    From-SVN: r264810

commit ff39d3d211374a1bde6638a5af42e07c58d5ebc4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 3 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r264802

commit 9762f217fd28a02290fe6bdc25edee735144230f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 2 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r264775

commit a424211e585645c709cecb564a864ae4c4187a23
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Oct 1 12:39:43 2018 +0000

    [arm] Avoid STRD with odd register for TARGET_ARM in output_move_double
    
    2018-10-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            Backport from mainline
            2018-06-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * config/arm/arm.c (output_move_double): Don't allow STRD instructions
            if starting source register is not even.
    
            Backport from mainline
            2018-07-02  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.target/arm/arm-soft-strd-even.c: Skip if -mfloat-abi is
            overriden.
            2018-06-29  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * gcc.target/arm/arm-soft-strd-even.c: New test.
    
    From-SVN: r264746

commit 5cca9cb822f22bb23127da50c098de53f0a76f47
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 1 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r264729

commit 84f5c559edfdc18f199ce84c60bf51d534b41204
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 30 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r264718

commit 5c317226c7c54e585fb4f2ca98068fe83335c510
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 29 18:28:53 2018 +0200

    re PR target/87467 (Incorrect function parameter for _mm512_abs_pd in `include/avx512fintrin.h`)
    
            PR target/87467
            * config/i386/avx512fintrin.h (_mm512_abs_pd, _mm512_mask_abs_pd): Use
            __m512d type for __A argument rather than __m512.
    
            * gcc.target/i386/avx512f-abspd-1.c (SIZE): Divide by two.
            (CALC): Use double instead of float.
            (TEST): Adjust to test _mm512_abs_pd and _mm512_mask_abs_pd rather than
            _mm512_abs_ps and _mm512_mask_abs_ps.
    
    From-SVN: r264714

commit 6c7a378ee501dff2a9565dc4e22654708434345e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 29 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r264707

commit 7bc662b4016ecb4d92776054101c4b8b6d2d5dbf
Author: Michael Meissner <meissner@linux.ibm.com>
Date:   Fri Sep 28 00:32:46 2018 +0000

    Backport pr 87033 to gcc 7
    
    From-SVN: r264686

commit 945696a491b68503bd180d6f475f0a2d591494b9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 28 00:16:34 2018 +0000

    Daily bump.
    
    From-SVN: r264683

commit 561341e1c33ab2d6b90858fae767c70492a24465
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 27 00:16:45 2018 +0000

    Daily bump.
    
    From-SVN: r264659

commit cb40a76447c6759e0cef795be8751880edefb535
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 26 00:16:48 2018 +0000

    Daily bump.
    
    From-SVN: r264590

commit 659d820cb44b3b5f5937b2fdcf7218bb3e7a82d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 25 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r264550

commit 3bdfe954afef02dc960e12672246ba4f1c1e35bd
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Mon Sep 24 08:15:53 2018 +0000

    Fix thinko
    
    From-SVN: r264524

commit 6108ede45db2a1e1eef7d19a672b9a5be06c8174
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 24 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r264520

commit e7cd6685298ac0291a1440abe198e82c8cf9b056
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 23 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r264508

commit 84b0779d828e1fcb3f0330adbd4fcca8abff0345
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 22 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r264498

commit 56f9cf9142a6f54fd692c409d0faed607e2cb873
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Sep 21 10:06:25 2018 +0000

    rs6000.c (rs6000_function_ok_for_sibcall): Return false if the call takes a static chain.
    
            * config/rs6000/rs6000.c (rs6000_function_ok_for_sibcall): Return false
            if the call takes a static chain.
    
    From-SVN: r264465

commit 26a6bcbdae72f3a603a920d678ac14dcdcc356eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 21 00:16:47 2018 +0000

    Daily bump.
    
    From-SVN: r264454

commit 684d698f5b7645f884c8274fa8e6f6aef9dd9d40
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Sep 20 01:10:47 2018 +0000

    pa.md (atomic_storeqi): Restore deleted expander.
    
            * config/pa/pa.md (atomic_storeqi): Restore deleted expander.
            (atomic_storehi): Likewise.
            (atomic_storesi): Likewise.
            (atomic_loaddi): Restore compare and swap exchange loop code.
    
    From-SVN: r264435

commit 0df44201857d82d06318a9e74c279acc28ec8329
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 20 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r264430

commit cd551c07148dc362c77c4eaf6e1e9700812305c2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 19 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r264415

commit 3d13b786617560179ad6833d01d2c28fe733127c
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Sep 18 09:02:14 2018 +0000

    [libgfortran] Fix uninitialized variable use in fallback_access
    
            Backport from trunk
            2018-09-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * io/unix.c (fallback_access): Avoid calling close on
            uninitialized file descriptor.
    
    From-SVN: r264384

commit 61fb3bb626312758f369a5a733edd07e3a8dec4b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 18 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r264378

commit 0c8e9728e09bb25bdb14574093eb1e0164c9c8f1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 17 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r264353

commit bed081ed0b9f3d5961de7d3fcbd9696d409f458c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 16 00:16:34 2018 +0000

    Daily bump.
    
    From-SVN: r264344

commit 3e31fa6dad1058897b65e19a510d7fd03a612480
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 15 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r264339

commit e0360ce2c3b922b6b937ce17110da174c2dd2651
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 14 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r264297

commit 75eb31153cb0d62959273325a4c6bad0d405bfc9
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Sep 13 19:46:05 2018 +0000

    re PR fortran/87284 (Allocation of class arrays with mold results in "conditional jump or move depends on uninitialised value")
    
    2018-09-13  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/87284
            * trans-expr.c (gfc_trans_class_init_assign): Access to
            to array elements of the dynamic type requires that the array
            reference be added to the class expression and not the _data
            component, unlike scalar expressions.
    
    2018-09-13  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/87284
            * gfortran.dg/allocate_with_mold_2.f90: New test.
    
    From-SVN: r264288

commit e5d5bf9962f3831664b130452e2b827e8dd9217b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Sep 13 10:14:39 2018 +0000

    backport: s-osinte-solaris.ads (upad64_t): New private type.
    
            Backport from mainline
            2018-07-31  Eric Botcazou  <ebotcazou@adacore.com>
    
            * s-osinte-solaris.ads (upad64_t): New private type.
            (mutex_t): Use it for 'lock' and 'data' components.
            (cond_t): Likewise for 'data' and use single 'flags' component.
    
    From-SVN: r264266

commit 0fbde3fbcba69e121117009abd99eed97ee7e3c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 13 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r264256

commit b08fb37a276895d87db157c4e5cc51e2515070d5
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Sep 12 20:01:11 2018 +0200

    Backport patch for PR86989 to 7
    
    2018-09-12  Segher Boessenkool  <segher@kernel.crashing.org>
    
            Backport from trunk
            2018-08-24  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/86989
            * config/rs6000/rs6000.c (toc_relative_expr_p): Check that the base is
            the TOC register.
    
    From-SVN: r264247

commit c6ebc6f71b74ac6b87a0da7fea1df8a35cbb2e68
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Wed Sep 12 11:13:56 2018 +0000

    S/390: Use proper rounding mode for DFP to BFD conversions
    
    According to IEEE 754 2008 4.3 'Rounding-direction attributes' the
    rounding mode of the target format needs to be used. By not setting
    the value so far we have always used the DFP rounding mode.
    
    gcc/ChangeLog:
    
    2018-09-12  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-09-12  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390.md (PFPO_RND_MODE_DFP, PFPO_RND_MODE_BFP): New
            constants.
            ("trunc<BFP:mode><DFP_ALL:mode>2")
            ("trunc<DFP_ALL:mode><BFP:mode>2")
            ("extend<BFP:mode><DFP_ALL:mode>2")
            ("extend<DFP_ALL:mode><BFP:mode>2"): Set proper rounding mode
            according to the target operand type.
    
    gcc/testsuite/ChangeLog:
    
    2018-09-12  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-09-12  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/dfp_to_bfp_rounding.c: New test.
    
    From-SVN: r264236

commit 23281ce8e99debd42c5f5f14bb62e29f9e47252c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 12 00:16:35 2018 +0000

    Daily bump.
    
    From-SVN: r264224

commit cfa0f3ff02dcbba758bc9b253b29eba0acbd8e46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 11 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r264198

commit 685323f840942241b03b7813fa00c0c82f60e710
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 10 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r264187

commit 0d12566faedb72e8f9789afc748766864be11683
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 9 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r264174

commit 92f3b07dc90270c46f0d708eb7ea3f9cc8cb5ece
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 8 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r264165

commit fd0d765417d194efd5cb08c36d2012eb83bc5103
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Sep 7 19:33:15 2018 +0200

    backport: re PR fortran/86116 (Ambiguous generic interface not recognised)
    
    2018-09-07  Janus Weil  <janus@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/86116
            * interface.c (compare_type): Remove a CLASS/TYPE check.
            (compare_type_characteristics): New function that behaves like the old
            'compare_type'.
            (gfc_check_dummy_characteristics, gfc_check_result_characteristics):
            Call 'compare_type_characteristics' instead of 'compare_type'.
    
    2018-09-07  Janus Weil  <janus@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/86116
            * gfortran.dg/generic_34.f90: New test case.
    
    From-SVN: r264161

commit 940a7af901bdbf3f468cd1f152a8fd8dca2eb1e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 7 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r264153

commit ccaea5e3ef8fc4a52380df2c0cac1362e78d56ec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 6 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r264136

commit 1f39f8887d6899d3448d1dbeeb699e260a7e80a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 5 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r264098

commit 6d447fc0b9d29d39525d458904ae90b7f3025842
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Sep 4 17:59:04 2018 +0000

    gcc: xtensa: fix NAND code in xtensa_expand_atomic
    
    NAND is ~(a1 & a2), but xtensa_expand_atomic does ~a1 & a2.
    That fixes libatomic tests atomic-op-{1,2}.
    
    gcc/
    2018-09-04  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-09-04  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_expand_atomic): Reorder AND and
            XOR operations in NAND case.
    
    From-SVN: r264090

commit c256655f90a5e4d21eb3e8559b5164c492e7ebe4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 4 14:33:14 2018 +0100

    Add -Waligned-new to Option Summary
    
            * doc/invoke.texi (Option Summary): Add -Waligned-new.
    
    From-SVN: r264082

commit 5883ffeea93c7d33f9b6af9894de845d0aef63f9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 4 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r264072

commit bd3cad80c77ec3f3ebc0b99d2fc969bc635a3a4c
Author: Tom de Vries <tdevries@suse.de>
Date:   Mon Sep 3 10:04:08 2018 +0000

    backport "[tail-merge] Fix side-effect test in stmt_local_def"
    
    2018-09-03  Tom de Vries  <tdevries@suse.de>
    
            backport from trunk:
            2018-06-21  Tom de Vries  <tdevries@suse.de>
    
            PR tree-optimization/85859
            * tree-ssa-tail-merge.c (stmt_local_def): Copy gimple_is_call
            test with comment from bb_no_side_effects_p.
    
            * gcc.dg/pr85859.c: New test.
    
    From-SVN: r264054

commit b603b8adf72238e5cb412f89fa98d99aa9a4bd8e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 3 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r264047

commit e86f2723c48fa78f30ae54e1750c4505e567f699
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 2 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r264035

commit 12824ca6de2dc3f29e36b69f1d425a32e013f7c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 1 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r264024

commit a8aaec737c163bc8bd868cc50c6f922313b650a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 31 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r264004

commit 34cf0cfa735bdf34eea379bff2a066f990a2495b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 30 00:16:43 2018 +0000

    Daily bump.
    
    From-SVN: r263970

commit 356669bee1d2e18097fc4a7f81ba40f5e3f2323c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 29 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r263938

commit 783bc8a53fd6cd155c6c721ef5cf91943d71393b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 28 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r263902

commit 053c1cc36103fdd4688bfc251c25e48ce970bc6e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 27 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r263865

commit 2ae6ca4e26fea95a7ec93d0dd68eaa4fdacc9776
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 26 00:16:42 2018 +0000

    Daily bump.
    
    From-SVN: r263858

commit c58e1ae81e8b0ff4cde498f74202c7d12dd70856
Author: Jozef Lawrynowicz <jozef.l@mittosystems.com>
Date:   Sat Aug 25 11:52:15 2018 +0000

    backport: re PR target/86662 (msp430-elf segfault with -flto and -mlarge)
    
    Backport from mainline
    
    PR target/86662
    
            * gcc/tree.c (build_common_tree_nodes): Initialize integer_types array
            with all enabled __intN types.
    
            * gcc/testsuite/gcc.target/msp430/pr86662.c: New test.
    
    From-SVN: r263852

commit 06fb6d6493462e5394963dc6d72547afea057a55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 25 00:16:43 2018 +0000

    Daily bump.
    
    From-SVN: r263847

commit cc6face490c9254d349c44d90cd887e8f7cc71c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 24 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r263825

commit 616bb687541d54cb3c26ce85b415ef94d3713519
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 23 00:16:43 2018 +0000

    Daily bump.
    
    From-SVN: r263796

commit ac5d2991b9d7f33812c13ed3b7a76cc01195387d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 22 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r263756

commit 10e3ee083f12c33aebefa9d07de255bf7bbb77ed
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Aug 21 16:27:22 2018 +0000

    x86: Always update EH return address in word_mode
    
    On x86, return address is always popped in word_mode.  eh_return needs
    to put EH return address in word_mode on stack.
    
    gcc/
    
            Backport from mainline
            PR target/87014
            * config/i386/i386.md (eh_return): Always update EH return
            address in word_mode.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/87014
            * g++.dg/torture/pr87014.C: New file.
    
    From-SVN: r263744

commit 8f60cfe0eb0979caee9968c947f0b7ebf4796e1f
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Aug 21 13:20:21 2018 +0000

    Restrict the pr86763 test to *-*-linux* targets
    
    clock_gettime is not available on some baremetal targets
    and may require -lrt on some non-linux targets.
    
    gcc/testsuite/ChangeLog:
    
            Backport from mainline
            2018-08-21  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * g++.dg/torture/pr86763.C: Restrict to *-*-linux*.
    
    From-SVN: r263701

commit 1bbd651c9132eb4de39c547f0aaad78c3f9ac5d6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 21 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r263681

commit 0164489653c1f2766cca596ee0a1e96eb89de48d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 20 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r263654

commit bd94222e483f116123c0ba04b80e768e1b43ef3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 19 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r263649

commit 54b1406aec9585c8fe4138ef09a800d006b48327
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 18 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r263642

commit 9741841c2c3de2ee70a37b4a46e701cb091843cc
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Aug 17 22:56:33 2018 +0000

    backport: pa.md (UNSPEC_MEMORY_BARRIER): New unspec enum.
    
            Backport from mainline
            2018-08-11  John David Anglin  <danglin@gcc.gnu.org>
    
            gcc
            * config/pa/pa.md (UNSPEC_MEMORY_BARRIER): New unspec enum.
            Update comment for atomic instructions.
            (atomic_storeqi, atomic_storehi, atomic_storesi, atomic_storesf,
            atomic_loaddf, atomic_loaddf_1, atomic_storedf, atomic_storedf_1):
            Remove.
            (atomic_loaddi): Revise fence expansion to only emit fence prior to
            load for __ATOMIC_SEQ_CST model.
            (atomic_loaddi_1): Remove float register target.
            (atomic_storedi): Handle CONST_INT values.
            (atomic_storedi_1): Remove float register source.  Add special case
            for zero value.
            (memory_barrier): New expander and insn.
    
            libgcc
            * config/pa/linux-atomic.c: Update comment.
            (FETCH_AND_OP_2, OP_AND_FETCH_2, FETCH_AND_OP_WORD, OP_AND_FETCH_WORD,
            COMPARE_AND_SWAP_2, __sync_val_compare_and_swap_4,
            SYNC_LOCK_TEST_AND_SET_2, __sync_lock_test_and_set_4): Use
            __ATOMIC_RELAXED for atomic loads.
            (SYNC_LOCK_RELEASE_1): New define.  Use __sync_synchronize() and
            unordered store to release lock.
            (__sync_lock_release_8): Likewise.
            (SYNC_LOCK_RELEASE_2): Remove define.
    
    From-SVN: r263638

commit bb094fdeb21f96b623d2c89c98d477c0871276a2
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Aug 17 14:17:10 2018 +0000

    backport: re PR c++/86763 (Wrong code comparing member of copy of a 237 byte object with nontrivial default constructor on x86-64 arch)
    
    2018-08-17  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-08-02  Richard Biener  <rguenther@suse.de>
    
            PR c++/86763
            * class.c (layout_class_type): Copy TYPE_TYPELESS_STORAGE
            to the CLASSTYPE_AS_BASE.
    
            * g++.dg/torture/pr86763.C: New testcase.
    
    From-SVN: r263621

commit 5eb51dcf956b2eaee541d422e7c13442d08d29eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 17 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r263609

commit f286ed96cb5d7325fe071e5780e023e5365c0cfa
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Aug 16 12:19:16 2018 +0200

    Backport r263246
    
    2018-08-16  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-08-02  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/86022
            * sanitizer_common/sanitizer_linux_libcdep.cc (ThreadDescriptorSize):
            Cherry-pick compiler-rt revision 338606.
    
    From-SVN: r263581

commit f2e53d480796a2a3d07cb934c8a5686e479330e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 16 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r263574

commit 317ab4f6e2146e9f42a3e02084138b3ac0960ec3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 15 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r263545

commit 26bf747efa6d125fa1f278ac974aa2931e836853
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 14 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r263525

commit 67d6bc96ba0fd7ab6441221f4eda8e17bfa7d379
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Aug 13 20:16:02 2018 +0100

    Revert "libstdc++-v3: Have aligned_alloc() on Newlib"
    
    This reverts commit r263463 / b7edd52337828cc46e469bca12f58288795b78d5
    because aligned_alloc is not defined for baremetal newlib targets, see
    https://gcc.gnu.org/ml/libstdc++/2018-08/msg00065.html
    
    Revert
    2018-08-10  Sebastian Huber  <sebastian.huber@embedded-brains.de>
    
            PR target/85904
            * configure.ac: Define HAVE_ALIGNED_ALLOC if building for
            Newlib.
            * configure: Regenerate.
    
    From-SVN: r263518

commit 228bce5e2915d39eee7fec7f36298a4efdbb2e28
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Aug 13 19:05:48 2018 +0200

    backport: re PR rtl-optimization/85645 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2348)
    
            Backport from mainline
            2018-05-09  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/85645
            * regrename.c (build_def_use): Also kill the chains that include the
            destination of a REG_CFA_REGISTER note.
    
            PR rtl-optimization/85645
            *  regcprop.c (copyprop_hardreg_forward_1): Don't propagate into an
            insn that has a REG_CFA_REGISTER note.
    
    From-SVN: r263509

commit f7f4276997134dd58a15e16034e619dbc423457d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 13 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r263501

commit 72752af0cc7dec8ce212c102c7ca2699be3b7768
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 12 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r263490

commit 521fb45ca6486a064e73612ad98b99cba615840c
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Aug 11 07:02:22 2018 -0400

    PR c++/86728 - C variadic generic lambda.
    
            * parser.c (cp_parser_parameter_declaration): Don't turn 'auto' into
            a pack if it's followed by a declarator-id.
    
    From-SVN: r263486

commit a6bf056871d288790b3e978d9f0557fc91078abb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 11 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r263481

commit bb709d25818cf0379bea0182c047cd07c1e629cd
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Aug 10 22:14:11 2018 +0200

    backport: re PR target/86197 (POWERPC: float128 parameter passing)
    
            Backport from mainline
            2018-06-19  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/86197
            * config/rs6000/rs6000.md (rs6000_discover_homogeneous_aggregate): An
            ieee128 argument takes up only one (vector) register, not two (floating
            point) registers.
    
    From-SVN: r263477

commit fd5c2f349a57f7a61cc855603baec95fd4ce1f92
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Fri Aug 10 06:31:57 2018 +0000

    libstdc++-v3: Have aligned_alloc() on Newlib
    
    While building for Newlib, some configure checks must be hard coded.
    The aligned_alloc() is supported since 2015 in Newlib.
    
    libstdc++-v3/
    
            PR target/85904
            * configure.ac: Define HAVE_ALIGNED_ALLOC if building for
            Newlib.
            * configure: Regenerate.
    
    From-SVN: r263463

commit 83a065cfacec5db46390614d3c83b553823c4493
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 10 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r263458

commit 41a9a9efcaad348afcb118b38e70aeaafceec7bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 9 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r263437

commit 1bdd8c0209f5d2929f46d3d61d54a3a2405b553a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:53:25 2018 +0100

    Prevent internal aligned_alloc clashing with libc version
    
    If configure fails to detect aligned_alloc we will try to define our
    own in new_opa.cc but that could clash with the libc version in
    <stdlib.h>. Use a namespace to keep them distinct.
    
            * libsupc++/new_opa.cc (aligned_alloc): Declare inside namespace to
            avoid clashing with an ::aligned_alloc function that was not detected
            by configure.
    
    From-SVN: r263426

commit 6c3d83cc1388cc0e698e6afa636939c62d4c28fb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 14:52:09 2018 +0100

    Fix Docbook markup to remove empty table cell
    
            * doc/xml/manual/using.xml: Remove empty table cell.
            * doc/html/*: Regenerate.
    
    From-SVN: r263403

commit 39a0fa68a3f020e9d120d7063f5964f5fcee4d2d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 14:46:29 2018 +0100

    Fix docs on C++17 and LFTS headers
    
            * doc/xml/manual/using.xml: Add missing header to table and fix typo.
            Remove C++17 headers not present on gcc-8-branch.
            * doc/html/*: Regenerate.
    
    From-SVN: r263402

commit 3457854bf289a77c7f9c7ad8298eba1e785a9d24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 8 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r263385

commit beaa526e137a69d8ac11dab92d00f9e362ebd875
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:55 2018 +0100

    Declare some explicit instantiations for strings in Debug Mode
    
    The empty reps and the I/O functions do not need to be implicitly
    instantiated to enable assertions, so declare the explicit
    instantiations when _GLIBCXX_EXTERN_TEMPLATE == -1 (i.e. when
    _GLIBCXX_ASSERTIONS is defined).
    
    Backport from mainline
    2018-06-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86138
            * include/bits/basic_string.tcc: [_GLIBCXX_EXTERN_TEMPLATE < 0]
            Declare explicit instantiations of COW empty reps and I/O functions.
    
    From-SVN: r263383

commit 3c96f0f28f0585f7c5f1ee9df7d2598631a22672
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:49 2018 +0100

    PR libstdc++/84654 Disable __float128 specializations for -mno-float128
    
    Backport from mainline
    2018-05-08  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85672
            * include/Makefile.am [!ENABLE_FLOAT128]: Change c++config.h entry
            to #undef _GLIBCXX_USE_FLOAT128 instead of defining it to zero.
            * include/Makefile.in: Regenerate.
            * include/bits/c++config (_GLIBCXX_USE_FLOAT128): Move definition
            within conditional block.
    
    Backport from mainline
    2018-05-01  Tulio Magno Quites Machado Filho  <tuliom@linux.vnet.ibm.com>
    
            PR libstdc++/84654
            * acinclude.m4: Set ENABLE_FLOAT128 instead of _GLIBCXX_USE_FLOAT128.
            * config.h.in: Remove references to _GLIBCXX_USE_FLOAT128.
            * configure: Regenerate.
            * include/Makefile.am: Replace the value of _GLIBCXX_USE_FLOAT128
            based on ENABLE_FLOAT128.
            * include/Makefile.in: Regenerate.
            * include/bits/c++config: Define _GLIBCXX_USE_FLOAT128.
            [!defined(__FLOAT128__) && !defined(__SIZEOF_FLOAT128__)]: Undefine
            _GLIBCXX_USE_FLOAT128.
    
    From-SVN: r263382

commit e552bfaa45bf10e3ccbb6f030ba06c619ff9f5bc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:45 2018 +0100

    PR libstdc++/80893 Fix null dereference in vector<bool>
    
    Backport from mainline
    2017-06-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80893
            * testsuite/23_containers/vector/bool/80893.cc: Add { target c++11 }.
    
    Backport from mainline
    2017-05-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80893
            * include/bits/stl_bvector.h (vector<bool>::_M_initialize): Avoid
            null pointer dereference when size is zero.
            * testsuite/23_containers/vector/bool/80893.cc: New.
            * testsuite/util/testsuite_allocator.h (PointerBase::PointerBase):
            Add non-explicit constructor from nullptr.
            (PointerBase::derived() const): Add const-qualified overload.
    
    From-SVN: r263381

commit 43c6a92ddc1a9ce115915579907880d2ee087c95
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:40 2018 +0100

    PR libstdc++/68519 use native duration to avoid rounding errors
    
    Backport from mainline
    2017-12-14  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/68519
            * include/std/condition_variable (condition_variable::wait_for):
            Convert duration to native clock's duration before addition.
            * testsuite/30_threads/condition_variable/members/68519.cc: New test.
    
    From-SVN: r263380

commit 16c2ce4b4d4a27e3e9d0f643b727d267d4da2487
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:33 2018 +0100

    PR libstdc++/86292 fix exception safety of std::vector<InputIterator> constructor
    
    Backport from mainline
    2018-06-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86292
            * include/bits/stl_vector.h (vector::_M_range_initialize<InputIter>):
            Add try-catch block.
            * testsuite/23_containers/vector/cons/86292.cc: New.
    
    From-SVN: r263379

commit db1e6ce9e8d50ee7975f8fa7e6a0c5ac5cdf425f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:28 2018 +0100

    Improve libstdc++ docs w.r.t newer C++ standards
    
    Instead of repeating all the old headers for every new standard I've
    changed the docs to only list the new headers for each standard.
    
    Backport from mainline
    2018-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/test.xml: Improve documentation on writing tests for
            newer standards.
            * doc/xml/manual/using.xml: Document all headers for C++11 and later.
            * doc/html/*: Regenerate.
    
    From-SVN: r263378

commit 3955800f9d605d90388087ac37bf6221e6d327ae
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:24 2018 +0100

    PR libstdc++/60555 std::system_category() should recognise POSIX errno values
    
    Backport from mainline
    2018-08-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * src/c++11/system_error.cc
            (system_error_category::default_error_condition): Add workaround for
            ENOTEMPTY and EEXIST having the same value on AIX.
            * testsuite/19_diagnostics/error_category/system_category.cc: Add
            extra testcases for EDOM, EILSEQ, ERANGE, EEXIST and ENOTEMPTY.
    
    Backport from mainline
    2018-08-01  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/60555
            * src/c++11/system_error.cc
            (system_error_category::default_error_condition): New override to
            check for POSIX errno values.
            * testsuite/19_diagnostics/error_category/generic_category.cc: New
            * testsuite/19_diagnostics/error_category/system_category.cc: New
            test.
    
    From-SVN: r263377

commit 6053258aa2afd0553936913ac6d56b7af0023ffb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:19 2018 +0100

    PR libstdc++/86861 Meet precondition for Solaris memalign
    
    Solaris memalign requires alignment to be at least sizeof(int), so
    increase it as needed.
    
    Also move the check for valid alignments from the fallback
    implementation of aligned_alloc into operator new, as it's required for
    all of aligned_alloc, memalign, posix_memalign and __aligned_malloc.
    
    Backport from mainline
    2018-08-07  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86861
            * libsupc++/new_opa.cc [_GLIBCXX_HAVE_MEMALIGN] (aligned_alloc):
            Replace macro with inline function.
            [__sun]: Increase alignment to meet memalign precondition.
            [!HAVE__ALIGNED_MALLOC && !HAVE_POSIX_MEMALIGN && !HAVE_MEMALIGN]
            (aligned_alloc): Move check for valid alignment to operator new.
            Remove redundant check for non-zero size, it's enforced by the caller.
            (operator new): Move check for valid alignment here. Use
            __builtin_expect on check for zero size.
    
    From-SVN: r263376

commit a2d762245d712fda04c73b7f528f4aad3e18a5fd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:15 2018 +0100

    Add workaround for aligned_alloc bug on AIX
    
    On AIX 7.2.0.0 aligned_alloc incorrectly requires the alignment to be a
    multiple of sizeof(void*).
    
    This adds a workaround to the operator new overload taking an alignment
    value, to increase the alignment (and size) if needed.
    
    Backport from mainline
    2018-07-30  Jonathan Wakely  <jwakely@redhat.com>
    
            * libsupc++/new_opa.cc (operator new(size_t, align_val_t)): Add
            workaround for aligned_alloc bug on AIX.
            * testsuite/18_support/new_aligned.cc: New test.
    
    From-SVN: r263375

commit c9ceac07d74d49d7848f82b253ae978545c17cb9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:11 2018 +0100

    PR libstdc++/86734 use addressof in reverse_iterator::operator->
    
    Backport from mainline
    2018-07-30  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86734
            * include/bits/stl_iterator.h (reverse_iterator::operator->): Use
            addressof (LWG 2188).
            * testsuite/24_iterators/reverse_iterator/dr2188.cc: New test.
    
    From-SVN: r263374

commit 276da1d4dad4af83a47f02f2b47219ac23b8d6e2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 7 23:50:06 2018 +0100

    Fix std::codecvt_utf8<wchar_t> for Mingw
    
    Backport from mainline
    2018-05-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * src/c++11/codecvt.cc (__codecvt_utf8_base<wchar_t>::do_in)
            [__SIZEOF_WCHAR_T__==2 && __BYTE_ORDER__!=__ORDER_BIG_ENDIAN__]: Set
            little_endian element in bitmask.
            * testsuite/22_locale/codecvt/codecvt_utf8/69703.cc: Run all tests.
            * testsuite/22_locale/codecvt/codecvt_utf8/wchar_t/1.cc: New.
    
    From-SVN: r263373

commit 74e25f1c71dc28f99301cd2291d076de3e08fe4b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 7 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r263348

commit d9e65f643a269cc092065a1acb6a4c2eec02c960
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 6 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r263322

commit 1c84d3ddaecfd90d7cbe395059b04f391f908c8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 5 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r263314

commit d794992a48f8bfebe7cb3649061c1b0436720142
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 4 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r263303

commit ec693a5e813113dfb30098f1cab8fbee9d604faa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 3 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r263282

commit 188bc018cdbf1eaa3ca485b506315d191fdd9168
Author: Jozef Lawrynowicz <jozef.l@mittosystems.com>
Date:   Thu Aug 2 20:36:14 2018 +0000

    backport: re PR middle-end/86705 (pr45678-2.c ICE with msp430-elf -mlarge)
    
    2018-08-02  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
    
            Backport from mainline
            2018-07-31  Jozef Lawrynowicz  <jozef.l@mittosystems.com>
    
            PR middle-end/86705
            * gcc/cfgexpand.c (set_parm_rtl): Use the alignment of Pmode when
            MAX_SUPPORTED_STACK_ALIGNMENT would otherwise be exceeded by the
            requested variable alignment.
            (expand_one_ssa_partition): Likewise.
            (expand_one_var): Likewise.
    
    From-SVN: r263277

commit 4618e59d3c1737bc6a6c695ef506439da0a9f0a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 2 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r263241

commit 2250ca17bd7748020f1ba06219b994da0d840c64
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Aug 1 08:07:16 2018 +0000

    re PR tree-optimization/86724 (Compilation error with new isl 0.20 (missing includes))
    
    2018-08-01  Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/86724
            * graphite.h: Include isl/id.h and isl/space.h to allow build
            with ISL 0.20.
    
    From-SVN: r263195

commit 183b8c025bbc861ab60ba741d6f9dcc41ee78acf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 1 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r263188

commit 4ddebaac1c12c9deeac0d66f5fb1c5f4cd4d76df
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 31 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r263078

commit eddde2b984b135db950170d13c82cc183133e6e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 30 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r263057

commit bb7bdf71cbea7afe4e5f980abeba12bc9b30b3af
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Jul 29 16:03:58 2018 +0000

    pa.c (pa_output_addr_vec): Align address table.
    
            * config/pa/pa.c (pa_output_addr_vec): Align address table.
            * config/pa/pa.h (JUMP_TABLES_IN_TEXT_SECTION): Revise comment.
            * config/pa/pa32-linux.h (JUMP_TABLES_IN_TEXT_SECTION): Define.
    
    From-SVN: r263053

commit 487034e36abfb9e8d034720e48e7628adc3dec02
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 29 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r263048

commit c74d388e7a5aeb2df03236a70a3d0a67938a61c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 28 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r263043

commit 06584b89fa41a52d458f294362e6669776f69ac4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 27 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r263025

commit a123db486ec121f2be19d136617233c4e8159fdd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 26 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r262986

commit 46c356f48d8ebca7f2d7338f33b999a3f3695b7a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 25 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r262955

commit 278a1bf20e1144686ca6c0004314de6f09c5b39b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 24 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r262938

commit 264033661a98cb1b322858934984d6ce72aad8ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 23 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r262925

commit c87d87f727c14d96e9488b20c3bcedfd7b87d2be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 22 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r262919

commit bb2043717ebf496316409fcbb601cad7bb2971f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 21 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r262915

commit 95df7580da2fd36dd6c0835caee84ce574bed8f1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 20 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r262895

commit 3e30d31a9195320c2c2163cefc7fdbc680b9e83c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 19 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r262868

commit 589d2de35da9560aa742433284e05afd7a2d4c86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 18 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r262844

commit 5d09bc26896a4234a7bc55179ed1a297edd03b41
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Jul 17 12:43:43 2018 +0000

    Avoid assembler warnings from AArch64 constructor/destructor priorities
    
    2018-07-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            Backport from mainline
            PR target/84168
            2017-09-28  Joseph Myers  <joseph@codesourcery.com>
    
            * config/aarch64/aarch64.c (aarch64_elf_asm_constructor)
            (aarch64_elf_asm_destructor): Pass SECTION_NOTYPE to get_section
            when creating .init_array and .fini_array sections with priority
            specified.
    
    From-SVN: r262821

commit 6044cc4858ce4965f2316c7e972d16162378e938
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jul 17 10:12:02 2018 +0000

    decl.c (choices_to_gnu): Rename parameters.
    
            * gcc-interface/decl.c (choices_to_gnu): Rename parameters.  Deal with
            an operand of Character type.  Factor out range generation to the end.
            Check that the bounds are literals and convert them to the type of the
            operand before building the ranges.
            * gcc-interface/utils.c (make_dummy_type): Minor tweak.
            (make_packable_type): Propagate TYPE_DEBUG_TYPE.
            (maybe_pad_type): Likewise.
    
    From-SVN: r262814

commit 56dbe683db7fe38dfeff73d74fcbfb9d8559aa10
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jul 17 09:23:31 2018 +0000

    decl.c (gnat_to_gnu_entity): Deal with more rvalues in the expression of a renaming.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Deal with
            more rvalues in the expression of a renaming.
    
    From-SVN: r262809

commit 05da00567367b62bc9b8023f4505ac05efd10ac7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 17 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r262762

commit 564ce8deb76bad976d3278bdfeda76c5fcaafcbd
Author: Fritz Reese <fritzoreese@gmail.com>
Date:   Mon Jul 16 23:35:39 2018 +0000

    re PR fortran/83184 (Out of memory or ICE with option -fdec)
    
    2018-07-16  Fritz Reese  <fritzoreese@gmail.com>
    
        gcc/testsuite/ChangeLog:
    
            PR fortran/83184
            Backport from trunk.
            * gfortran.dg/assumed_rank_14.f90: New testcase.
            * gfortran.dg/assumed_rank_15.f90: New testcase.
            * gfortran.dg/dec_structure_8.f90: Update error messages.
            * gfortran.dg/dec_structure_23.f90: Update error messages.
    
        gcc/fortran/ChangeLog:
    
            PR fortran/83184
            Backport from trunk.
            * decl.c (match_old_style_init): Initialize locus of variable expr when
            creating a data variable.
            (match_clist_expr): Verify array is explicit shape/size before
            attempting to allocate constant array constructor.
    
    From-SVN: r262759

commit 3283fd0f6cb4df4cfd3df5680fa7ffa9b78ab329
Author: Fritz Reese <fritzoreese@gmail.com>
Date:   Mon Jul 16 22:25:54 2018 +0000

    backport: re PR fortran/83183 (Out of memory with option -finit-derived)
    
    2018-07-16  Fritz Reese  <fritzoreese@gmail.com>
    
        gcc/testsuite/ChangeLog:
    
            Backport from trunk:
    
            PR fortran/83183
            PR fortran/86325
            * gfortran.dg/init_flag_18.f90: New testcase.
            * gfortran.dg/init_flag_19.f03: New testcase.
    
        gcc/fortran/ChangeLog:
    
            Backport from trunk:
    
            PR fortran/86417
            * module.c (mio_component): Set component->loc when loading from module.
    
            PR fortran/83183
            PR fortran/86325
            * expr.c (class_allocatable, class_pointer, comp_allocatable,
            comp_pointer): New helpers.
            (component_initializer): Generate EXPR_NULL for allocatable or pointer
            components. Do not generate initializers for components within BT_CLASS.
            Do not assign to comp->initializer.
            (gfc_generate_initializer): Use new helpers; move code to generate
            EXPR_NULL for class allocatable components into component_initializer().
    
    From-SVN: r262751

commit ca0cf1b80c07bb65f980a895825bb12c3fa9af67
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 16 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r262673

commit bead0103329f54db843b8619f2fb489a552b9a19
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 15 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r262663

commit 1881e37eed44ca099363750ad6579df98af8bbc3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 14 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r262656

commit 6accf869881ba429259d4d2119533e600d979e79
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 13 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r262618

commit 83bb92f0952051fb834c70397738a15b798eb354
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 12 16:29:50 2018 +0000

    re PR target/84829 (-mieee-fp causes to link with -lieee but that is no longer available)
    
    2018-07-12  Richard Biener  <rguenther@suse.de>
    
            PR target/84829
            * config/gnu-user.h (GNU_USER_TARGET_NO_PTHREADS_LIB_SPEC):
            Remove -mieee-fp handling.
    
            * gcc.target/i386/pr84829.c: New testcase.
    
    From-SVN: r262597

commit 89e91324ad06e28af2c8d83bcbef33c35e9eac48
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 12 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r262569

commit 476b60f4a8ee97986d2c3a64dde0b95c6b109a83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 11 00:16:48 2018 +0000

    Daily bump.
    
    From-SVN: r262547

commit 3e661b063677797d33a55fb2880570ba87065088
Author: Carl Love <cel@us.ibm.com>
Date:   Tue Jul 10 17:33:40 2018 +0000

    backport: vsx.md (define_insn "*stxvl"): Add missing argument to the sldi instruction.
    
    
    2018-07-10  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline
            2017-09-07  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/vsx.md (define_insn "*stxvl"): Add missing argument to
            the sldi instruction.
    
    From-SVN: r262541

commit 514452079e9b08b20567fb9e055cbc1ddd86b4d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 10 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r262530

commit 23063d8a47b912c2321636214bef4f1b16cdbff5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 9 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r262507

commit b35463f6d73d64bc97353909ce38552c095028bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 8 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r262503

commit 27631caf1bfd9aa88f07abea45af66a72644a8c3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 7 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r262490

commit 4f661d6d9bf039f7b3775ad23fc65d44b7aa0839
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 6 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r262460

commit 04ab81013d3906125d9ba8f5d8d368a7c2d80184
Author: François Dumont <fdumont@gcc.gnu.org>
Date:   Thu Jul 5 20:48:02 2018 +0000

    backport: re PR libstdc++/86272 (__gnu_debug::string uses undefined __glibcxx_check_insert_range2)
    
    2018-07-05  François Dumont  <fdumont@gcc.gnu.org>
    
            Backport from mainline
            2018-07-04  François Dumont  <fdumont@gcc.gnu.org>
    
            PR libstdc++/86272
            * include/debug/string
            (__gnu_debug::basic_string<>::insert<_Ite>(const_iterator, _Ite, _Ite)):
            Use __glibcxx_check_insert_range.
    
    From-SVN: r262454

commit 31a594c057ad9900077efc6ac8a11edde0a6bfd8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 5 00:16:41 2018 +0000

    Daily bump.
    
    From-SVN: r262426

commit 65215e08d3f2373803da33644d4d821095398bcb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:57 2018 +0100

    Use non-throwing is_directory in filesystem::create_directory
    
    The create_dir helper was calling the throwing form of
    filesystem::is_directory instead of passing the error_code argument.
    Since std::filesystem::create_directory(const path&, error_code&) is
    noexcept, it would call std::terminate if an error occurred in
    is_directory.
    
    Passing the error_code also takes care of clearing it in the case where
    is_directory returns true.
    
    Backport from mainline
    2018-03-09  Jonathan Wakely  <jwakely@redhat.com>
    
            src/filesystem/ops.cc (create_dir): Pass error_code to is_directory.
    
    From-SVN: r262413

commit 0ee55982e1a8a36b4eaaba9059c824d548326756
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:51 2018 +0100

    LWG 3050 Fix cv-qualification of convertibility constraints
    
    Backport from mainline
    2018-06-18  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/chrono (duration, operator*, operator/, operator%): Use
            const-qualified type as source type in is_convertible constraints.
            * testsuite/20_util/duration/arithmetic/dr3050.cc: New.
            * testsuite/20_util/duration/cons/dr3050.cc: New.
            * testsuite/20_util/duration/literals/range.cc: Rename to...
            * testsuite/20_util/duration/literals/range_neg.cc: Here. Adjust
            dg-error lineno.
    
    From-SVN: r262412

commit 822af00440abd7a5f2f974a062b7425da2e2ca08
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:42 2018 +0100

    PR libstdc++/86127 avoid unnecessary allocator conversions
    
    There is no need to use an allocator of the correct value_type when
    calling allocator_traits::construct and allocator_traits::destroy. The
    existing node allocator can be used, instead of constructing a new
    allocator object every time.
    
    There's also no benefit to using __gnu_cxx::__alloc_traits instead of
    std::allocator_traits to get the pointer and const_pointer types.
    std::forward_list is only available for C++11 and later, when
    std::allocator_traits is available too.
    
    Backport from mainline
    2018-06-13  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86127
            * include/bits/forward_list.h (_Fwd_list_base::_Tp_alloc_type): Remove
            unused typedef.
            (_Fwd_list_base::_M_create_node, _Fwd_list_base::_M_erase_after):
            Use node allocator to create and destroy elements.
            (forward_list::_Tp_alloc_type): Remove unused typedef.
            (forward_list::_Alloc_traits): Use allocator_traits instead of
            __gnu_cxx::__alloc_traits.
            * include/bits/forward_list.tcc (_Fwd_list_base::_M_erase_after):
            Use node allocator to create and destroy elements.
    
    From-SVN: r262411

commit d55126cdd6c399b93cee829942f44fd3c86e32c2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:37 2018 +0100

    Qualify another call in <variant>
    
    Backport from mainline
    2018-05-29  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/variant (__erased_dtor): Qualify call to __get.
    
    From-SVN: r262410

commit ade0ce8b51275c9051bb1b5e73a7e33b914f7f91
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:32 2018 +0100

    Qualify std::__invoke in <variant> to prevent ADL
    
    Backport from mainline
    2018-05-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/variant (__gen_vtable_impl::__visit_invoke): Qualify
            __invoke to prevent ADL.
    
    From-SVN: r262409

commit 576e157ac7b6c79cab51126b9e9a7df57dbdaa4f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:28 2018 +0100

    Add another workaround to std::variant for Clang bug 31852
    
    Backport from mainline
    2018-04-05  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/variant (_VARIANT_RELATION_FUNCTION_TEMPLATE): Qualify
            __get calls to avoid ADL and avoid ambiguity due to Clang bug.
    
    From-SVN: r262408

commit c6c090cd5ff339489a263647019c8645834625be
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:21 2018 +0100

    Add workaround to std::variant for Clang bug 31852
    
    Backport from mainline
    2018-03-26  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/variant (__get): Qualify calls to avoid ADL.
            (__select_index): Adjust whitespace.
            (variant): Add using-declaration to workaround Clang bug.
    
    From-SVN: r262407

commit c7618a293ad6a671c877045a9eaf3683faefa98c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:17 2018 +0100

    PR target/85904 check for aligned_alloc on netbsd cross-compilation
    
    Backport from mainline
    2018-05-24  Maya Rashish  <coypu@sdf.org>
    
            PR target/85904
            * crossconfig.m4: Test for aligned_alloc on netbsd.
            * configure: Regenerate.
    
    From-SVN: r262406

commit e9dae68f9f7be47198ee8edbfc702df9167bc48f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:13 2018 +0100

    PR libstdc++/85098 add missing definitions for static constants
    
    In C++11 and C++14 any odr-use of these constants requires a definition
    at namespace-scope.  In C++17 they are implicitly inline and so the
    namespace-scope redeclarations are redundant (and allowing them is
    deprecated).
    
    Backport from mainline
    2018-05-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85098
            * include/bits/regex.h [__cplusplus < 201703L] (basic_regex::icase)
            (basic_regex::nosubs, basic_regex::optimize, basic_regex::collate)
            (basic_regex::ECMAScript, basic_regex::basic, basic_regex::extended)
            (basic_regex::awk, basic_regex::grep, basic_regex::egrep): Add
            definitions.
            * include/bits/regex_automaton.h (_NFA::_M_insert_state): Adjust
            whitespace.
            * testsuite/28_regex/basic_regex/85098.cc: New
    
    From-SVN: r262405

commit c8fbe558101c52bf3ece5d71634c5380da73c310
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:06 2018 +0100

    PR libstdc++/85671 allow copy elision in path concatenation
    
    By performing the /= operation on a named local variable instead of a
    temporary the copy made for the return value can be elided.
    
    Backport from mainline
    2018-05-07  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85671
            * include/experimental/bits/fs_path.h (operator/): Likewise.
    
    From-SVN: r262404

commit b207860d8ebc0071edf9bda75fe3bc9aafd03015
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:59:01 2018 +0100

    PR libstdc++/83982 fix exception-safety guarantee of std::vector::resize
    
    Construct new elements before moving existing ones, so that if a default
    constructor throws, the existing elements are not left in a moved-from
    state.
    
    Backport from mainline
    2018-06-14  Daniel Trebbien <dtrebbien@gmail.com>
                Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83982
            * include/bits/vector.tcc (vector::_M_default_append(size_type)):
            Default-construct new elements before moving existing ones.
            * testsuite/23_containers/vector/capacity/resize/strong_guarantee.cc:
            New.
    
    From-SVN: r262403

commit e919c9ef06a1a80251b453aa4620e9fa9e9441a6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 4 14:58:50 2018 +0100

    PR libstdc++/84087 add default arguments to basic_string members (LWG 2268)
    
    This change was a DR against C++11 and so should have been implemented
    years ago.
    
    Backport from mainline
    2018-05-03  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/84087 LWG DR 2268 basic_string default arguments
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI=1]
            (append(const basic_string&, size_type, size_type)
            (assign(const basic_string&, size_type, size_type)
            (insert(size_type, const basic_string&, size_type, size_type)
            (replace(size_type,size_type,const basic_string&,size_type,size_type)
            (compare(size_type,size_type,constbasic_string&,size_type,size_type)):
            Add default arguments (LWG 2268).
            [_GLIBCXX_USE_CXX11_ABI=0]
            (append(const basic_string&, size_type, size_type)
            (assign(const basic_string&, size_type, size_type)
            (insert(size_type, const basic_string&, size_type, size_type)
            (replace(size_type,size_type,const basic_string&,size_type,size_type)
            (compare(size_type,size_type,constbasic_string&,size_type,size_type)):
            Likewise.
            * testsuite/21_strings/basic_string/dr2268.cc: New test.
    
    From-SVN: r262402

commit 7f5544420095eb491b6fcaf65c03648531d0fb5e
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Jul 4 14:22:29 2018 +0200

    Remove spurious $HOME include from BRIG FE Makefile
    
    2018-07-04  Martin Jambor  <mjambor@suse.cz>
    
            PR hsa/86371
            * Make-lang.in (BRIGINCLUDES): Remove erroneous include path in $HOME.
    
    From-SVN: r262400

commit 66c92f33e0f904bc0433f9b5d3a49d6312caafae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 4 00:16:51 2018 +0000

    Daily bump.
    
    From-SVN: r262362

commit 480d58a2a89ad23077fb3fb2ea84f192a323adee
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jul 3 12:27:04 2018 -0400

    PR c++/86378 - functional cast in noexcept-specifier.
    
            * tree.c (strip_typedefs_expr) [TREE_LIST]: Fix iteration.
    
    From-SVN: r262352

commit b2c9f2a3824ce276c263c23a5f25407da620b156
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Jul 3 09:46:31 2018 +0000

    re PR fortran/82969 (ICE in gfc_class_vptr_get, at fortran/trans-expr.c:211)
    
    2018-07-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82969
            PR fortran/86242
            * trans-array.c (structure_alloc_comps): Do not explicitly copy
            procedure pointer components.
    
    2018-07-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82969
            PR fortran/86242
            * gfortran.dg/proc_ptr_50.f90: New test.
    
    From-SVN: r262331

commit 6ba60bf88c1446734fc6976075745a9b07234afd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 3 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r262324

commit efa8f2afd2006b03491fe172030ca0cb83690326
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Mon Jul 2 16:29:24 2018 +0000

    re PR go/86331 (the gccgo's "go" tool looks like failing to invoke any sub go command)
    
            PR go/86331
        os: check return value as well as error from waitid
    
        https://gcc.gnu.org/PR86331 indicates that if a signal handler runs it
        is possible for syscall.Syscall6 to return a non-zero errno value even
        if no error occurs. That is a problem in general, but this fix will
        let us work around the general problem for the specific case of
        calling waitid.
    
        Reviewed-on: https://go-review.googlesource.com/121595
    
    From-SVN: r262315

commit d5ef75541c03bd2f43d108666d08c8b7aff9ecf2
Author: Martin Liska <marxin@gcc.gnu.org>
Date:   Mon Jul 2 14:51:14 2018 +0000

    Clean up gcc/ChangeLog file.
    
    From-SVN: r262310

commit a239d7e82fdf3728ecd2cd32f841a8b93c7181ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 2 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r262292

commit 8f359478278fe1bee7960128958b233418394977
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 1 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r262280

commit a9ba67bd143118f4997505507ff681af1e7024ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 30 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r262264

commit 6eb2ae214dd178511c65f8f9ff262d62f942297a
Author: Fritz Reese <foreese@gcc.gnu.org>
Date:   Fri Jun 29 20:29:34 2018 +0000

    Revert r262224 (backport of r262221) as PDTs are not supported in 7-branch.
    
    gcc/fortran/ChangeLog:
    -2018-06-28  Fritz Reese  <fritzoreese@gmail.com>
    -
    -       PR fortran/82865
    -       Backport from trunk.
    -       * decl.c (gfc_match_type): Refactor and check for PDT declarations.
    -
    
    gcc/testsuite/ChangeLog:
    -2018-06-28  Fritz Reese  <fritzoreese@gmail.com>
    -
    -       PR fortran/82865
    -       Backport from trunk.
    -       * gfortran.dg/dec_type_print_2.f03: New testcase.
    -
    
    From-SVN: r262260

commit f34342aa43f2219fb92ed3449ed609e5413eafce
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jun 29 11:31:30 2018 +0200

    Partial backport r256656
    
    2018-06-29  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-10  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * lex.c (search_line_fast): Remove illegal coercion of an
            unaligned pointer value to vector pointer type and replace with
            use of __builtin_vec_vsx_ld () built-in function, which operates
            on unaligned pointer values.
    
    git-svn-id: svn+ssh://gcc.gnu.org/svn/gcc/branches/gcc-6-branch@261621 138bc75d-0d04-0410-961f-82ee72b054a4
    
    From-SVN: r262243

commit 4e830dbbcbddbd433beebf9ed1ce5e479e8f2cab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 29 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r262238

commit a7fe62df62333290b45bb2dc81e6d1d1fbeedf41
Author: Fritz Reese <fritzoreese@gmail.com>
Date:   Thu Jun 28 16:51:23 2018 +0000

    re PR fortran/82865 (Option -fdec collides with PDT)
    
    2018-06-28  Fritz Reese  <fritzoreese@gmail.com>
    
        gcc/testsuite/ChangeLog:
    
            PR fortran/82865
            Backport from trunk.
            * gfortran.dg/dec_type_print_2.f03: New testcase.
    
        gcc/fortran/ChangeLog:
    
            PR fortran/82865
            Backport from trunk.
            * decl.c (gfc_match_type): Refactor and check for PDT declarations.
    
    From-SVN: r262224

commit ef5850f13b0319e07cdbdb387c7c8a81e1a80f50
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 27 20:25:21 2018 -0400

    PR c++/80290 - memory-hog with std::pair.
    
            * pt.c (type_unification_real): Skip non-dependent conversion
            check for a nested list argument.
            (braced_init_depth): New.
    
    From-SVN: r262204

commit 9fbd05fc975bed25c433acd13405c142af933923
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 28 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r262201

commit 566011d3ec960cb5c14ea09959cfd2a6dd8d5c95
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Wed Jun 27 20:08:21 2018 +0000

    [multiple changes]
    
    2018-06-27  David Edelsohn  <dje.gcc@gmail.com>
    
            2018-06-19  Tony Reix  <tony.reix@atos.com>
                Damien Bergamini  <damien.bergamini@atos.com>
                David Edelsohn  <dje.gcc@gmail.com>
    
            * collect2.c (static_obj): New variable.
            (static_libs): New variable.
            (is_in_list): Uncomment declaration.
            (main): Track AIX libraries linked statically.
            (is_in_list): Uncomment definition.
            (scan_prog_file): Don't add AIX shared libraries initializer
            to constructor list if linking statically.
    
    From-SVN: r262193

commit 2a67f97518d93a0d5e3469f0ae721a2e013586e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 27 00:16:42 2018 +0000

    Daily bump.
    
    From-SVN: r262169

commit c4d61a5b463f98e659826dc463b54eb30b06afc1
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Tue Jun 26 19:45:01 2018 +0000

    backport: rs6000-c.c (altivec_overloaded_builtins): Change behavior of vec_packsu (vector unsigned long long...
    
    gcc/ChangeLog:
    
    2018-06-26  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backported from mainline
            2018-06-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Change
            behavior of vec_packsu (vector unsigned long long, vector unsigned
            long long) to match behavior of vec_packs with same signature.
    
    gcc/testsuite/ChangeLog:
    
    2018-06-26  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backported from mainline
            2018-06-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/builtins-1.c: Add dg directives to scan
            for vpkudus.
    
    From-SVN: r262164

commit 8e24e825f52a8eff8ca309769d412e00756a1367
Author: Robin Dapp <rdapp@linux.vnet.ibm.com>
Date:   Tue Jun 26 12:23:02 2018 +0000

    S/390: Fix mtune default.
    
    When building with --with-tune=zEC12 and calling the resulting gcc
    with --march=z13 (no extra -mtune), the binary would unexpectedly be compiled
    with -march=z13 -mtune=zEC12.  This patch avoids using the default tune
    parameter if -march is specified as argument but the user can still
    explicitly state -march=z13 -mtune=zEC12.
    
    gcc/ChangeLog:
    
    2018-06-26  Robin Dapp  <rdapp@linux.ibm.com>
    
            * config/s390/s390.h (enum processor_flags): Do not use
            default tune parameter when -march was specified.
    
    From-SVN: r262145

commit a8b7129f6ad7ce052e661eee4dca9345c0a9675a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 26 13:54:29 2018 +0200

    re PR target/86314 (GCC 7.x and 8.x zero out "eax" before using "rax" in "lock bts")
    
            PR target/86314
            * config/i386/i386.md (setcc + movzbl to xor + setcc peephole2s):
            Check reg_overlap_mentioned_p in addition to reg_set_p with the same
            operands.
    
            * gcc.dg/pr86314.c: New test.
    
    From-SVN: r262144

commit b99c6132526cdbf8392d81fe2ef8a7e0caa5f529
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 26 13:16:10 2018 +0200

    re PR c++/86291 (OpenMP incorrect for-loop collapsing with iterators and at least 5 nested loops)
    
            PR c++/86291
            * parser.c (cp_parser_omp_for_loop_init): Change for_block argument
            type from vec<tree, va_gc> * to vec<tree, va_gc> *&.
    
            * testsuite/libgomp.c++/pr86291.C: New test.
    
    From-SVN: r262139

commit 967d9cf14dccc7eaf3d23ddc936df46691f91158
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 26 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r262125

commit efd36869c5c16991fc35b7d0e2c816dd067d85c4
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Jun 25 23:28:27 2018 +0000

    backport: re PR target/85424 (The __builtin_packlongdouble function might have issues with the output overlapping the inputs)
    
    2018-06-25  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-04-17  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/85424
            * config/rs6000/rs6000.md (pack<mode>): Do not try handle a pack
            where the inputs overlap with the output.
    
    From-SVN: r262122

commit e96d538fd648360ddf6e6831e43c07ec1689a5d9
Author: Fritz Reese <fritzoreese@gmail.com>
Date:   Mon Jun 25 19:07:03 2018 +0000

    re PR fortran/82972 (ICE with -finit-derived in gfc_conv_structure, at fortran/trans-expr.c:7733 (and others))
    
    
    2018-06-25  Fritz Reese  <fritzoreese@gmail.com>
    
            PR fortran/82972
            PR fortran/83088
            PR fortran/85851
            Backport from trunk.
            * expr.c (component_initializer): Assign init expr to c->initializer.
            (generate_isocbinding_initializer): New.
            (gfc_generate_initializer): Call generate_isocbinding_initializer to
            generate initializers for c_ptr and c_funptr with -finit-derived.
    
    2018-06-25  Fritz Reese  <fritzoreese@gmail.com>
    
            PR fortran/82972
            PR fortran/83088
            PR fortran/85851
            Backport from trunk.
            * gfortran.dg/init_flag_17.f90: New testcase.
    
    From-SVN: r262106

commit c7fdef1d619d8a98c1e26d368b22418ebc1a4dee
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 14:48:29 2018 +0200

    re PR target/84786 ([miscompilation] vunpcklpd accessing xmm16-22 targeting KNL)
    
            PR target/84786
            * config/i386/sse.md (vshift_count): New mode attr.
            (<shift_insn><mode>3<mask_name>): Use <vshift_count>N instead of vN
            as last operand's constraint for VI2_AVX2_AVX512BW shifts.  Use YvN
            instead of vN as last operand's constraint for VI48_AVX2 shifts.
    
            * gcc.target/i386/avx512f-pr84786-3.c: New test.
    
    From-SVN: r262014

commit 167dfcfc46dd278892e139b5987d1ef0e3c3ee9d
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Jun 25 07:52:09 2018 +0000

    re PR fortran/83118 (Bad intrinsic assignment of class(*) array component of derived type)
    
    2018-06-25  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83118
            Back port from trunk
            * resolve.c (resolve_ordinary_assign): Force the creation of a
            vtable for assignment of non-polymorphic expressions to an
            unlimited polymorphic object.
            * trans-array.c (gfc_alloc_allocatable_for_assignment): Use the
            size of the rhs type for such assignments. Set the dtype, _len
            and vptrs appropriately.
            * trans-expr.c (gfc_trans_assignment): Force the use of the
            _copy function for these assignments.
    
    2018-06-25  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83118
            Back port from trunk
            * gfortran.dg/unlimited_polymorphic_30.f03: New test.
    
    From-SVN: r262005

commit 02d5a81c8dcb8fc92895ae10d57810858d423816
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 25 00:16:48 2018 +0000

    Daily bump.
    
    From-SVN: r262000

commit d7449417f2dd6f51db5c80bf27fcf5a25367f1b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 24 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r261990

commit e9d21f6975b12726ea3bc29884d781b689e7a457
Author: Richard Sandiford <richard.sandiford@linaro.org>
Date:   Sat Jun 23 12:21:18 2018 +0000

    Fix phi backedge detection in backprop (PR85989)
    
    Backport trunk r261064.
    
    2018-06-23  Richard Sandiford  <richard.sandiford@linaro.org>
    
    gcc/
            PR tree-optimization/85989
            * gimple-ssa-backprop.c (backprop::m_visited_phis): New member
            variable.
            (backprop::intersect_uses): Check it when deciding whether this
            is a backedge reference.
            (backprop::process_block): Add each phi to m_visited_phis
            after visiting it, then clear it at the end.
    
    gcc/testsuite/
            PR tree-optimization/85989
            * gcc.dg/torture/pr85989.c: New test.
    
    From-SVN: r261984

commit a9c04be619c4c7adfef72946f394e40fe49165b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 23 00:16:47 2018 +0000

    Daily bump.
    
    From-SVN: r261977

commit 616196a7bd54817dce8889ad85607abe3d539991
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:33:58 2018 +0200

    backport: re PR c++/86210 (Missing -Wnonnull warning for function defined in the same TU)
    
            Backported from mainline
            2018-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/86210
            * c-common.c (check_nonnull_arg): Use fold_for_warn.  Adjust obsolete
            comment.
    
            * g++.dg/warn/Wnonnull4.C: New test.
    
    From-SVN: r261970

commit b1173d7d5c2b556a34665a036fd27bd8b31a18b4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:33:07 2018 +0200

    backport: re PR tree-optimization/86231 (vrp_meet causes wrong-code)
    
            Backported from mainline
            2018-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/86231
            * tree-vrp.c (union_ranges): For (  [  )  ] or (   )[   ] range and
            anti-range don't overwrite *vr0min before using it to compute *vr0max.
    
            * gcc.dg/tree-ssa/vrp119.c: New test.
            * gcc.c-torture/execute/pr86231.c: New test.
    
    From-SVN: r261969

commit 3765c86f5c5231a4285fdf130beed245778fe99f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:30:06 2018 +0200

    backport: re PR middle-end/85878 (ICE in convert_mode_scalar, at expr.c:287)
    
            Backported from mainline
            2018-06-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/85878
            * expr.c (expand_assignment): Only call store_expr for halves if the
            mode is the same.
    
            * gfortran.fortran-torture/compile/pr85878.f90: New test.
    
    From-SVN: r261968

commit eb989a7c141aaba0926bec114cc3f80b449fea63
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:29:24 2018 +0200

    backport: re PR target/85945 (ICE in resolve_subreg_use, at lower-subreg.c:751)
    
            Backported from mainline
            2018-06-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/85945
            * lower-subreg.c (find_decomposable_subregs): Don't decompose float
            subregs of multi-word pseudos unless the float mode has word size.
    
            * gcc.c-torture/compile/pr85945.c: New test.
    
    From-SVN: r261967

commit bcb3e32d2ca6b636bf249d174b72adb1c222b921
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:28:36 2018 +0200

    backport: re PR c++/86025 (ICE with -Wduplicated-branches and OpenMP critical)
    
            Backported from mainline
            2018-06-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/86025
            * tree.c (inchash::add_expr): Handle IDENTIFIER_NODE.
    
            * c-c++-common/gomp/pr86025.c: New test.
    
    From-SVN: r261966

commit 8d500ed580819f3c1a274b6a01688aef22d7b066
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:27:41 2018 +0200

    backport: re PR c++/85952 (Bogus -Wunused-but-set-variable warning with array structured binding)
    
            Backported from mainline
            2018-05-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85952
            * init.c (build_aggr_init): For structured binding initialized from
            array call mark_rvalue_use on the initializer.
    
            * g++.dg/warn/Wunused-var-33.C: New test.
    
    From-SVN: r261965

commit 9ab3937b2800d5765ba6bbe00add69aefb11d37d
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Jun 22 23:27:25 2018 +0200

    backport: re PR c/85696 (OpenMP with variably modified and default(none) won't compile)
    
            Backported from mainline
            2018-05-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/85696
            * c-omp.c (c_omp_predetermined_sharing): Return
            OMP_CLAUSE_DEFAULT_SHARED for artificial vars with integral type.
    
            * c-typeck.c (c_finish_omp_clauses): Don't use
            c_omp_predetermined_sharing, instead just check TREE_READONLY.
    
            * cp-tree.h (cxx_omp_predetermined_sharing_1): New prototype.
            * cp-gimplify.c (cxx_omp_predetermined_sharing): New wrapper around
            cxx_omp_predetermined_sharing_1.  Rename old function to ...
            (cxx_omp_predetermined_sharing_1): ... this.
            * semantics.c (finish_omp_clauses): Use cxx_omp_predetermined_sharing_1
            instead of cxx_omp_predetermined_sharing.
    
            * c-c++-common/gomp/pr85696.c: New test.
    
    From-SVN: r261964

commit f492b27c91433401f3f2fad73f3d972f52f1494b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:25:04 2018 +0200

    backport: re PR c/85696 (OpenMP with variably modified and default(none) won't compile)
    
            Backported from mainline
            2018-05-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/85696
            * c-omp.c (c_omp_predetermined_sharing): Return
            OMP_CLAUSE_DEFAULT_SHARED for artificial vars with integral type.
    
            * c-typeck.c (c_finish_omp_clauses): Don't use
            c_omp_predetermined_sharing, instead just check TREE_READONLY.
    
            * cp-tree.h (cxx_omp_predetermined_sharing_1): New prototype.
            * cp-gimplify.c (cxx_omp_predetermined_sharing): New wrapper around
            cxx_omp_predetermined_sharing_1.  Rename old function to ...
            (cxx_omp_predetermined_sharing_1): ... this.
            * semantics.c (finish_omp_clauses): Use cxx_omp_predetermined_sharing_1
            instead of cxx_omp_predetermined_sharing.
    
            * c-c++-common/gomp/pr85696.c: New test.
    
    From-SVN: r261963

commit 3056ef4bff035f29d1cbdcb095287ceac06d92ad
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:23:03 2018 +0200

    backport: re PR c++/85662 ("error: non-constant condition for static assertion" from __builtin_offsetof in C++)
    
            Backported from mainline
            2018-06-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85662
            * g++.dg/ext/offsetof3.C: New test.
    
            2018-05-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85662
            * c-common.h (fold_offsetof_1): Removed.
            (fold_offsetof): Add TYPE argument defaulted to size_type_node and
            CTX argument defaulted to ERROR_MARK.
            * c-common.c (fold_offsetof_1): Renamed to ...
            (fold_offsetof): ... this.  Remove wrapper function.  Add TYPE
            argument, convert the pointer constant to TYPE and use size_binop
            with PLUS_EXPR instead of fold_build_pointer_plus if type is not
            a pointer type.  Adjust recursive calls.
    
            * c-fold.c (c_fully_fold_internal): Use fold_offsetof rather than
            fold_offsetof_1, pass TREE_TYPE (expr) as TYPE to it and drop the
            fold_convert_loc.
            * c-typeck.c (build_unary_op): Use fold_offsetof rather than
            fold_offsetof_1, pass argtype as TYPE to it and drop the
            fold_convert_loc.
    
            * cp-gimplify.c (cp_fold): Use fold_offsetof rather than
            fold_offsetof_1, pass TREE_TYPE (x) as TYPE to it and drop the
            fold_convert.
    
            * g++.dg/ext/offsetof2.C: New test.
    
    From-SVN: r261962

commit 7329a73260d52c7a350db95df51a0041bcd2a192
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:20:53 2018 +0200

    backport: re PR c++/85659 (ICE with inline assembly inside virtual function)
    
            Backported from mainline
            2018-05-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85659
            * cfgexpand.c (expand_asm_stmt): Don't create a temporary if
            the type is addressable.  Don't force op into register if it has
            BLKmode.
    
            * g++.dg/ext/asm14.C: New test.
            * g++.dg/ext/asm15.C: New test.
            * g++.dg/ext/asm16.C: New test.
    
    From-SVN: r261961

commit 5ce295a0336858127f9e515db032d450a6599e83
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:20:02 2018 +0200

    backport: re PR web/85578 (broken links in gcc-8.0.1-RC-20180427/INSTALL/specific.html, and out of date prerequisites.html)
    
            Backported from mainline
            2018-05-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR web/85578
            * doc/install.texi2html: Replace _002d with - and _002a with * in
            generated html files using sed.
    
    From-SVN: r261960

commit 2e752352eb649f0fb7bc57a9d6f521ee295e8ece
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:19:32 2018 +0200

    backport: re PR tree-optimization/85529 (wrong code at -O2 and -O3 on x86_64-linux-gnu)
    
            Backported from mainline
            2018-04-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/85529
            * tree-ssa-reassoc.c (optimize_range_tests_var_bound): Add FIRST_BB
            argument.  Don't call get_nonzero_bits if opcode is ERROR_MARK_NODE,
            rhs2 def stmt's bb is dominated by first_bb and it isn't an obvious
            zero extension or masking of the MSB bit.
            (optimize_range_tests): Add FIRST_BB argument, pass it through
            to optimize_range_tests_var_bound.
            (maybe_optimize_range_tests, reassociate_bb): Adjust
            optimize_range_tests callers.
    
            * gcc.c-torture/execute/pr85529-1.c: New test.
            * gcc.c-torture/execute/pr85529-2.c: New test.
            * gcc.dg/pr85529.c: New test.
    
    From-SVN: r261959

commit fd64a8a1e0a80947225b67d5bd10b426cab558d7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:18:32 2018 +0200

    backport: re PR tree-optimization/85446 (wrong-code on riscv64)
    
            Backported from mainline
            2018-04-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/85446
            * match.pd ((intptr_t) x eq/ne CST to x eq/ne (typeof x) cst): Require
            the integral and pointer types to have the same precision.
    
    From-SVN: r261958

commit 940e9f392dbe03bbc2473537976e0424eca6a53d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:16:41 2018 +0200

    backport: re PR jit/85384 (libgccjit does not work if --with-gcc-major-version is used)
    
    2018-06-22  Jakub Jelinek  <jakub@redhat.com>
    
            Backported from mainline
            2018-04-18  David Malcolm  <dmalcolm@redhat.com>
    
            PR jit/85384
            * acx.m4 (GCC_BASE_VER): Remove \$\$ from sed expression.
    
            * configure.ac (gcc-driver-name.h): Honor --with-gcc-major-version
            by using gcc_base_ver to generate a gcc_driver_version, and use
            it when generating GCC_DRIVER_NAME.
            * configure: Regenerate.
    
            * configure: Regenerate.
    
    From-SVN: r261957

commit 102ea0d5f192f5f08dac5ea088ee426bb700aa6f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:12:32 2018 +0200

    backport: re PR c++/84463 (Supposedly-incompliant "error: '* key0' is not a constant expression")
    
            Backported from mainline
            2018-04-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84463
            * typeck.c (cp_build_addr_expr_1): Move handling of offsetof-like
            tricks from here to ...
            * cp-gimplify.c (cp_fold) <case ADDR_EXPR>: ... here.  Only use it
            if INDIRECT_REF's operand is INTEGER_CST cast to pointer type.
    
            * g++.dg/cpp0x/constexpr-nullptr-1.C: Add -O1 to dg-options.
            * g++.dg/cpp0x/constexpr-nullptr-2.C: Expect different diagnostics
            in two cases.  Uncomment two other tests and add expected dg-error for
            them.
            * g++.dg/init/struct2.C: Cast to int rather than long to avoid
            -Wnarrowing diagnostics on some targets for c++11.
            * g++.dg/parse/array-size2.C: Remove xfail.
            * g++.dg/cpp0x/constexpr-84463.C: New test.
    
    From-SVN: r261956

commit 50f8ab99c8a05a9cf2fa7a50d475623c50123903
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:11:28 2018 +0200

    backport: re PR rtl-optimization/85431 (UBSAN: ../../gcc/dse.c:303:15: runtime error: shift exponent 64 is too large for 64-bit type 'long unsigned int')
    
            Backported from mainline
            2018-04-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85431
            * dse.c (record_store): Ignore zero width stores.
    
    From-SVN: r261955

commit 837e188b6b51667acb83cb4a9f47c1f1b8e0004d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:10:59 2018 +0200

    backport: re PR target/85430 (ICE: SIGSEGV in memory_operand at recog.c:1358/9 with -O2 -fno-tree-ccp -fno-tree-fre)
    
            Backported from mainline
            2018-04-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/85430
            * config/i386/i386.md (*ashlqi3_1_slp): Use alu1 type instead of alu.
    
            * gcc.dg/pr85430.c: New test.
    
    From-SVN: r261954

commit bbca82040043a54511fed372438e6f15323bc958
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:10:17 2018 +0200

    backport: re PR rtl-optimization/85300 (ICE in exact_int_to_float_conversion_p, at simplify-rtx.c:895)
    
            Backported from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85300
            * combine.c (subst): Handle subst of CONST_SCALAR_INT_P new_rtx also
            into FLOAT and UNSIGNED_FLOAT like ZERO_EXTEND, return a CLOBBER if
            simplify_unary_operation fails.
    
            * gcc.dg/pr85300.c: New test.
    
    From-SVN: r261953

commit fd6def3e863cb076f053eabe56e71dbff2aed049
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:09:32 2018 +0200

    backport: re PR fortran/85313 (gcc/fortran/openmp.c: 2 * confused logic ?)
    
            Backported from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/85313
            * openmp.c (resolve_omp_do): Remove bogus if (j < i) break;.
            (resolve_oacc_nested_loops): Likewise.  Formatting fix.
    
            * gfortran.dg/gomp/pr85313.f90: New test.
    
    From-SVN: r261952

commit b8e47758b51d41c3f711501f5277214ddb492414
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:08:47 2018 +0200

    backport: re PR tree-optimization/85257 (wrong code with -O -fno-tree-ccp and reading zeroed vector member)
    
            Backported from mainline
            2018-04-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/85257
            * fold-const.c (native_encode_vector): If not all elts could fit
            and off is -1, return 0 rather than offset.
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Pass
            (offset - offset2) / BITS_PER_UNIT as 4th argument to
            native_encode_expr.  Verify len * BITS_PER_UNIT >= maxsizei.  Don't
            adjust buffer in native_interpret_expr call.
    
            * gcc.dg/pr85257.c: New test.
    
    From-SVN: r261951

commit 7b42eb87dccf59fdb4ee63020caf3f41677a0763
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:08:00 2018 +0200

    backport: re PR debug/85252 (ICE with -g for static zero-length array initialization)
    
            Backported from mainline
            2018-04-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/85252
            * dwarf2out.c (rtl_for_decl_init): For STRING_CST initializer only
            build CONST_STRING if TYPE_MAX_VALUE is non-NULL and is INTEGER_CST.
    
            * gcc.dg/debug/pr85252.c: New test.
    
    From-SVN: r261950

commit 0099aeaa3af0ef6f7b0a565c7818f6a3d6cfd570
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:07:16 2018 +0200

    backport: re PR c++/85210 (ICE with broken structured binding in template)
    
            Backported from mainline
            2018-04-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85210
            * pt.c (tsubst_decomp_names): Return error_mark_node and assert
            errorcount is set if tsubst doesn't return a VAR_DECL.
    
            * g++.dg/cpp1z/decomp42.C: New test.
    
    From-SVN: r261949

commit 75bcfc00e5346cef2e0e4738fa0fbfcef91017e6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:06:41 2018 +0200

    backport: re PR c++/85208 (ICE with #pragma weak and structured binding)
    
            Backported from mainline
            2018-04-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85208
            * decl.c (start_decl): For DECL_DECOMPOSITION_P decls, don't call
            maybe_apply_pragma_weak here...
            (cp_maybe_mangle_decomp): ... but call it here instead.
    
            * g++.dg/cpp1z/decomp41.C: New test.
    
    From-SVN: r261948

commit de680082bef8bb3188b2dec625200833fa60a958
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:05:52 2018 +0200

    backport: re PR inline-asm/85172 (internal compiler error: unexpected expression '<statement>' of kind asm_expr)
    
            Backported from mainline
            2018-04-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85172
            * constexpr.c (cxx_eval_builtin_function_call): For calls to
            builtin_valid_in_constant_expr_p functions, don't call
            cxx_eval_constant_expression if argument is not
            potential_constant_expression.
    
            * g++.dg/ext/builtin13.C: New test.
            * g++.dg/ext/atomic-4.C: New test.
    
    From-SVN: r261947

commit 47eddf9eed9cb40e22bfb3b45e8b7e1426ac5a7b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:05:08 2018 +0200

    backport: re PR rtl-optimization/85167 (shrink-wrap.c:333:15: runtime error with UBSAN)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85167
            * shrink-wrap.c (move_insn_for_shrink_wrap): Don't set bb_uses and
            bb_defs if *split_p, instead preinitialize it to NULL.
    
            * gcc.dg/pr85167.c: New test.
    
    From-SVN: r261946

commit 379d4cf94031bd16f01226647cda41ff9387d0a0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:04:25 2018 +0200

    backport: re PR c++/85147 (ICE with invalid variadic template-template parameter)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85147
            * pt.c (fixed_parameter_pack_p_1): Punt if parm is error_mark_node.
    
            * g++.dg/cpp0x/pr85147.C: New test.
    
    From-SVN: r261945

commit 8452d757ac167407fad1a4afb4122b46415eb62b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:03:38 2018 +0200

    backport: re PR c++/85140 (ICE with invalid use of alignas)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85140
            * name-lookup.c (handle_namespace_attrs): Return early if attributes
            is error_mark_node.
    
            * g++.dg/cpp0x/gen-attrs-64.C: New test.
    
    From-SVN: r261944

commit 870c4f81ad0ac193b6f08a9582ef361f18a90936
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:02:52 2018 +0200

    backport: re PR c++/84791 (ICE with broken OpenMP reduction clause)
    
            Backported from mainline
            2018-03-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84791
            * semantics.c (finish_omp_reduction_clause): If
            OMP_CLAUSE_REDUCTION_PLACEHOLDER is error_mark_node, return true
            even if processing_template_decl.
    
            * g++.dg/gomp/pr84791.C: New test.
    
    From-SVN: r261943

commit 01230f3857cf9dd50d1df8ce4c4af3b94907feda
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:02:07 2018 +0200

    backport: re PR target/85095 (worse code generated)
    
            Backported from mainline
            2018-03-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/85095
            * config/i386/i386.md (*add<mode>3_carry_0, *addsi3_carry_zext_0,
            *sub<mode>3_carry_0, *subsi3_carry_zext_0): New patterns.
    
            * gcc.target/i386/pr85095-1.c: New test.
            * gcc.target/i386/pr85095-2.c: New test.
            * gcc.c-torture/execute/pr85095.c: New test.
    
    From-SVN: r261942

commit 78b745b6808e7cc29d1dd357b0d0c25474a358ea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 23:01:00 2018 +0200

    backport: re PR c++/85076 (ICE with invalid template used as lambda argument)
    
            Backported from mainline
            2018-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85076
            * tree.c (cp_build_reference_type): If to_type is error_mark_node,
            return it right away.
    
            * g++.dg/cpp1y/pr85076.C: New test.
    
    From-SVN: r261941

commit b60dbb9e61bca427ef9d5884e29652207469d46b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:59:31 2018 +0200

    backport: re PR c++/85068 (ICE with invalid covariant return type hierarchy)
    
            Backported from mainline
            2018-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85068
            * class.c (update_vtable_entry_for_fn): Don't ICE if base_binfo
            is NULL.  Assert if thunk_binfo is NULL then errorcount is non-zero.
    
            * g++.dg/inherit/covariant22.C: New test.
    
    From-SVN: r261940

commit 49b60684bf7aa0db0df870445ac2439579bda353
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:58:44 2018 +0200

    backport: re PR inline-asm/85022 (internal compiler error: in write_dependence_p, at alias.c:3003)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85022
            * emit-rtl.c (init_emit_regs): Indicate that VOIDmode MEMs don't have
            known size by default.
    
    From-SVN: r261939

commit 3224e3e06248b9e2c314c49e765b3a5b7bf35f57
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:58:02 2018 +0200

    backport: re PR inline-asm/85034 (-O1 internal compiler error: in elimination_costs_in_insn, at reload1.c:3633)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85034
            * function.c (match_asm_constraints_1): Don't optimize if input
            doesn't satisfy general_operand predicate for output's mode.
    
            * gcc.target/i386/pr85034.c: New test.
    
    From-SVN: r261938

commit 7de2abafbabefd4c0b0ab23cd1ac32d35e69c912
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:57:15 2018 +0200

    backport: re PR inline-asm/85022 (internal compiler error: in write_dependence_p, at alias.c:3003)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85022
            * alias.c (write_dependence_p): Don't require for x_canonicalized
            non-VOIDmode if x has VOIDmode.
    
            * c-c++-common/torture/pr85022.c: New test.
    
    From-SVN: r261937

commit 5832c163cf8ab089d402aff3a371a96e9598b748
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:56:25 2018 +0200

    backport: re PR inline-asm/84941 (internal compiler error: in reg_overlap_mentioned_p, at rtlanal.c:1870 (reg_overlap_mentioned_p()/match_asm_constraints_1()))
    
            Backported from mainline
            2018-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/84941
            * function.c (match_asm_constraints_1): Don't do the optimization
            if input isn't a REG, SUBREG, MEM or constant.
    
            * gcc.dg/pr84941.c: New test.
    
    From-SVN: r261936

commit b6abb1374dfe2f789e9eb37c9089c275e99c1459
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:55:40 2018 +0200

    backport: re PR c/84999 (ICE in make_vector_type, at tree.c:9561)
    
            Backported from mainline
            2018-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/84999
            * c-typeck.c (build_binary_op): If c_common_type_for_size fails when
            building vector comparison, diagnose it and return error_mark_node.
    
            * c-c++-common/pr84999.c: New test.
    
    From-SVN: r261934

commit 5a986e0b8b89e384d92d8848662a57e5d8d2b84d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:54:44 2018 +0200

    backport: re PR c++/84961 (ICE error: SSA_NAME_DEF_STMT is wrong)
    
            Backported from mainline
            2018-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84961
            * cp-tree.h (genericize_compound_lvalue): Declare.
            * typeck.c (genericize_compound_lvalue): New function.
            (unary_complex_lvalue, cp_build_modify_expr): Use it.
            * semantics.c (finish_asm_stmt): Replace MODIFY_EXPR, PREINCREMENT_EXPR
            and PREDECREMENT_EXPR in output and "m" constrained input operands with
            COMPOUND_EXPR.  Call cxx_mark_addressable on the rightmost
            COMPOUND_EXPR operand.
    
            * c-c++-common/pr43690.c: Don't expect errors on "m" (--x) and
            "m" (++x) in C++.
            * g++.dg/torture/pr84961-1.C: New test.
            * g++.dg/torture/pr84961-2.C: New test.
    
    From-SVN: r261933

commit 672ec745f97d3ccce3f1d5da67bea3508010cedb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:53:41 2018 +0200

    backport: re PR debug/84875 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2348 on s390x)
    
            Backported from mainline
            2018-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/84875
            * dce.c (delete_unmarked_insns): Don't remove frame related noop moves
            holding REG_CFA_RESTORE notes, instead turn them into a USE.
    
            * gcc.dg/pr84875.c: New test.
    
    From-SVN: r261932

commit aeab2a087240170d090c627ada037890323ffbd4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:52:44 2018 +0200

    backport: re PR c/84953 (misleading warning from strpbrk(x,""))
    
            Backported from mainline
            2018-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/84953
            * builtins.c (fold_builtin_strpbrk): For strpbrk(x, "") use type
            instead of TREE_TYPE (s1) for the return value.
    
            * gcc.dg/pr84953.c: New test.
    
    From-SVN: r261931

commit 9d7e44b0069a150ea7f86c763423e427e5ba1536
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:51:42 2018 +0200

    backport: re PR sanitizer/85018 (Many sanitizer tests ICE since r258681)
    
            Backported from mainline
            2018-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/85018
            * dwarf2asm.c (dw2_output_indirect_constant_1): Set
            DECL_INITIAL (decl) to decl at the end.
            * varasm.c (use_blocks_for_decl_p): Revert the 2018-03-20 change,
            adjust the comment.
    
            2018-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84990
            * dwarf2asm.c (dw2_output_indirect_constant_1): Temporarily turn off
            flag_section_anchors.
            * varasm.c (use_blocks_for_decl_p): Remove hack for
            dw2_force_const_mem.
    
            2018-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/78651
            * dwarf2asm.c: Include fold-const.c.
            (dw2_output_indirect_constant_1): Set DECL_INITIAL (decl) to ADDR_EXPR
            of decl rather than decl itself.
    
            2018-03-19  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR sanitizer/78651
            * dwarf2asm.c (dw2_output_indirect_constant_1): Disable ASan before
            calling assemble_variable.
    
            * g++.dg/asan/pr78651.C: New test.
    
    From-SVN: r261930

commit 6a1e018fa43fec1aa455c4b407a35095b0012cde
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:48:57 2018 +0200

    backport: re PR target/84899 (ICE: in final_scan_insn_1, at final.c:3139 (error: could not split insn))
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84899
            * postreload.c (reload_combine_recognize_pattern): Perform
            INTVAL addition in unsigned HOST_WIDE_INT type to avoid UB and
            truncate_int_for_mode the result for the destination's mode.
    
            * gcc.dg/pr84899.c: New test.
    
    From-SVN: r261929

commit 1d5f72d6aaf422995a7d58b7871bf928b4ed2f0a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:47:57 2018 +0200

    backport: re PR c++/84874 (internal compiler error: in reshape_init_class, at cp/decl.c:5800)
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84874
            * g++.dg/cpp1z/desig8.C: New test.
    
    From-SVN: r261928

commit 9892faf5e642233dfa3d10eeb56a1074c3e45ea3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:46:37 2018 +0200

    backport: re PR tree-optimization/84841 (ICE: tree check: expected ssa_name, have real_cst in rewrite_expr_tree_parallel, at tree-ssa-reassoc.c:4624)
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/84841
            * tree-ssa-reassoc.c (INTEGER_CONST_TYPE): Change to 1 << 4 from
            1 << 3.
            (FLOAT_ONE_CONST_TYPE): Define.
            (constant_type): Return FLOAT_ONE_CONST_TYPE for -1.0 and 1.0.
            (sort_by_operand_rank): Put entries with higher constant_type last
            rather than first to match comments.
    
            * gcc.dg/pr84841.c: New test.
    
    From-SVN: r261927

commit 349fde3dad1e1e76d955656e479883368d04fb75
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:44:39 2018 +0200

    backport: re PR c++/84874 (internal compiler error: in reshape_init_class, at cp/decl.c:5800)
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84874
            * decl.c (reshape_init_class): Don't assert d->cur->index == field
            if d->cur->index is a FIELD_DECL, instead set field to d->cur->index.
    
            * g++.dg/cpp1z/desig7.C: New test.
    
    From-SVN: r261926

commit 9074761258633a5499d5b569e989229b5b25e0d1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:43:53 2018 +0200

    backport: re PR c++/79085 (ICE with placement new to unaligned location)
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79085
            * calls.c (expand_call): For TREE_ADDRESSABLE rettype ignore alignment
            check and use address of target always.
    
            * g++.dg/opt/pr79085.C: New test.
    
    From-SVN: r261925

commit 14203e03902501fae1993b49272c7e9e99b2cb30
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:43:09 2018 +0200

    backport: re PR c++/84222 ([[deprecated]] class complains about internal class usage)
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84222
            * cp-tree.h (cp_warn_deprecated_use): Declare.
            * tree.c (cp_warn_deprecated_use): New function.
            * typeck2.c (build_functional_cast): Use it.
            * decl.c (grokparms): Likewise.
            (grokdeclarator): Likewise.  Temporarily push nested class scope
            around grokparms call for out of class member definitions.
    
            * g++.dg/warn/deprecated.C (T::member3): Change dg-warning to dg-bogus.
            * g++.dg/warn/deprecated-6.C (T::member3): Likewise.
            * g++.dg/warn/deprecated-13.C: New test.
    
    From-SVN: r261924

commit 42e4700c955279dfd8e2689059f4140bff4923ae
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:41:55 2018 +0200

    backport: re PR target/84860 (ICE in emit_move_insn, at expr.c:3717)
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84860
            * optabs.c (emit_conditional_move): Pass address of cmode's copy
            rather than address of cmode as last argument to prepare_cmp_insn.
    
            * gcc.c-torture/compile/pr84860.c: New test.
    
    From-SVN: r261923

commit e915c604c15b18236c0d4a0109f8683b5c701150
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:40:45 2018 +0200

    backport: re PR c/84853 (ICE: verify_gimple failed (expand_shift_1))
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/84853
            * c-typeck.c (build_binary_op) <case RSHIFT_EXPR, case LSHIFT_EXPR>:
            If code1 is INTEGER_TYPE, only allow code0 VECTOR_TYPE if it has
            INTEGER_TYPE element type.
    
            * gcc.dg/pr84853.c: New test.
    
    From-SVN: r261922

commit 256768d44736da4b5dc68c838ace22feeeaf770c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:38:25 2018 +0200

    backport: re PR middle-end/84834 (ICE: tree check: expected integer_cst, have complex_cst in to_wide, at tree.h:5527)
    
            Backported from mainline
            2018-03-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/84834
            * match.pd ((A & C) != 0 ? D : 0): Use INTEGER_CST@2 instead of
            integer_pow2p@2 and test integer_pow2p in condition.
            (A < 0 ? C : 0): Similarly for @1.
    
            * gcc.dg/pr84834.c: New test.
    
    From-SVN: r261921

commit 5d34c11fe040ed413d3a193591730a8be17ae16a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:37:40 2018 +0200

    backport: re PR target/84827 (ICE in extract_insn, at recog.c:2311)
    
            Backported from mainline
            2018-03-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84827
            * config/i386/i386.md (round<mode>2): For 387 fancy math, disable
            pattern if -ftrapping-math -fno-fp-int-builtin-inexact.
    
            * gcc.target/i386/pr84827.c: New test.
    
    From-SVN: r261920

commit ffa78b61ccb7d7bea627e6db630f2dd72e2363db
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:36:31 2018 +0200

    backport: re PR target/84786 ([miscompilation] vunpcklpd accessing xmm16-22 targeting KNL)
    
            Backported from mainline
            2018-03-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84786
            * config/i386/sse.md (sse2_loadhpd): Use Yv constraint rather than v
            on the last operand.
    
            * gcc.target/i386/avx512f-pr84786-1.c: New test.
            * gcc.target/i386/avx512f-pr84786-2.c: New test.
    
    From-SVN: r261919

commit 656cc9e09125a0967af786a88ca340fc3da9ab71
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:35:29 2018 +0200

    backport: re PR target/84772 (powerpc-spe: Spurious "is used uninitialized" warning, or possibly incorrect codegen for va_arg(long double))
    
            Backported from mainline
            2018-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84772
            * config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Mark va_arg_tmp
            temporary TREE_ADDRESSABLE before gimplification of BUILT_IN_MEMCPY.
    
            * gcc.dg/pr84772.c: New test.
    
    From-SVN: r261918

commit 4dbb5fc70efceb411fb3cf5f06977e012dbf398d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:34:33 2018 +0200

    backport: re PR c++/84076 (Warning about objects through POD mistakenly claims the object is a pointer)
    
            Backported from mainline
            2018-03-09  Jason Merrill  <jason@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84076
            * call.c (convert_arg_to_ellipsis): Instead of cp_build_addr_expr
            build ADDR_EXPR with REFERENCE_TYPE.
            (build_over_call): For purposes of check_function_arguments, if
            argarray[j] is ADDR_EXPR with REFERENCE_TYPE created above, use
            its operand rather than the argument itself.
    
            * g++.dg/warn/Wformat-2.C: New test.
    
    From-SVN: r261917

commit d339e220ed624d1e892fa9f571ac49685c4d74bc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:33:38 2018 +0200

    backport: re PR c++/84767 (ICE with pointer to VLA)
    
            Backported from mainline
            2018-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84767
            * tree-inline.c (copy_tree_body_r): For INDIRECT_REF of a remapped
            decl, use remap_type if we want to use the type.
    
            * g++.dg/ext/vla18.C: New test.
    
    From-SVN: r261916

commit 36c1b85a679f063ad93a4199c03c26d01264d631
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:32:15 2018 +0200

    backport: re PR c++/80598 (-Wunused triggers for functions used in uninstantiated templates)
    
            Backported from mainline
            2018-03-08  Jason Merrill  <jason@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80598
            * call.c (build_over_call): In templates set TREE_USED (first_fn) when
            not calling mark_used for the benefit of -Wunused-function warning.
    
            * g++.dg/warn/Wunused-function4.C: New test.
    
    From-SVN: r261915

commit 6935710dbd297612be2237c50e16a1139987eb11
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:31:10 2018 +0200

    backport: re PR tree-optimization/84739 (ICE in get_value_for_expr, at tree-ssa-ccp.c:649)
    
            Backported from mainline
            2018-03-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/84739
            * tree-tailcall.c (find_tail_calls): Check call arguments against
            DECL_ARGUMENTS (current_function_decl) rather than
            DECL_ARGUMENTS (func) when checking for tail recursion.
    
            * gcc.dg/pr84739.c: New test.
    
    From-SVN: r261914

commit 8ae01fd0b7c703d4984617f630ccdfd9d27a1eda
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:29:34 2018 +0200

    backport: re PR target/84700 (ICE on 32-bit BE powerpc targets w/ -misel -O1)
    
            Backported from mainline
            2018-03-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84700
            * combine.c (combine_simplify_rtx): Don't try to simplify if
            if_then_else_cond returned non-NULL, but either true_rtx or false_rtx
            are equal to x.
    
            * gcc.target/powerpc/pr84700.c: New test.
    
    From-SVN: r261913

commit deea4ea79bd225297c9dc3b8ef59b5cf0f520c7b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 22 22:28:04 2018 +0200

    backport: re PR c++/84662 (internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in is_bitfield_expr_with_lowered_type, at cp/typeck.c:1944)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84662
            * pt.c (tsubst_copy_and_build) <case TEMPLATE_ID_EXPR>: Use
            RETURN instead of return.
            <case POINTER_PLUS_EXPR>: Likewise.
            <case CONVERT_EXPR>: If op0 is error_mark_node, just return
            it instead of wrapping it into CONVERT_EXPR.
    
            * g++.dg/cpp1y/pr84662.C: New test.
    
    From-SVN: r261912

commit 4a57c3b49c0c1fd177700e3869f61e741ccf471a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 22 16:58:38 2018 +0100

    PR libstdc++/86138 prevent implicit instantiation of COW empty rep
    
    The explicit instantiation declarations for std::basic_string are
    disabled for C++17 (and later) so that basic_string symbols get
    implicitly instantiated in every translation unit that needs them.  On
    targets that don't support STB_GNU_UNIQUE this leads to multiple copies
    of the empty rep symbol for COW strings. In order to detect whether a
    COW string needs to deallocate its storage it compares the address with
    the empty rep.  When there are multiple copies of the empty rep object
    the address is not unique, and so string destructors try to delete the
    empty rep, which crashes.
    
    In order to guarantee uniqueness of the _S_empty_rep_storage symbol this
    patch adds an explicit instantiation declaration for just that symbol.
    This means the other symbols are still implicitly instantiated in C++17
    code, but for the empty rep the definition in the library gets used.
    
    Separately, there is no need for C++17 code to implicitly instantiate
    the I/O functions for strings, so this also restores the explicit
    instantiation declarations for those functions.
    
    Backport from mainline
    2018-06-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86138
            * include/bits/basic_string.tcc:
            [__cplusplus > 201402 && !_GLIBCXX_USE_CXX11_ABI]
            (basic_string<char>::_Rep::_S_empty_rep_storage)
            (basic_string<wchar_t>::_Rep::_S_empty_rep_storage): Add explicit
            instantiation declarations.
            [__cplusplus > 201402] (operator>>, operator<<, getline): Re-enable
            explicit instantiation declarations.
            * testsuite/21_strings/basic_string/cons/char/86138.cc: New.
            * testsuite/21_strings/basic_string/cons/wchar_t/86138.cc: New.
    
    From-SVN: r261907

commit 6f9798bf9807bb0e8acda4ba85eec8ce40e7038f
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Fri Jun 22 14:38:34 2018 +0000

    backport: arm_cmse.h (cmse_nsfptr_create): Change typeof to __typeof__.
    
    gcc/
    2018-06-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2018-06-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * config/arm/arm_cmse.h (cmse_nsfptr_create): Change typeof to
            __typeof__.
            (cmse_check_pointed_object): Likewise.
    
    gcc/testsuite/
    2018-06-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2018-06-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * gcc.target/arm/cmse/cmse-1c99.c: New test.
    
    From-SVN: r261900

commit 388492965899de3ce46e4e2245fa33143085c026
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Fri Jun 22 14:35:24 2018 +0000

    backport: arm_cmse.h (cmse_nsfptr_create, [...]): Remove #include <stdint.h>.
    
    gcc/
    2018-06-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2018-05-17  Jerome Lambourg  <lambourg@adacore.com>
    
            * config/arm/arm_cmse.h (cmse_nsfptr_create, cmse_is_nsfptr): Remove
            #include <stdint.h>.  Replace intptr_t with __INTPTR_TYPE__.
    
    libgcc/
    2018-06-22  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2018-05-17  Jerome Lambourg  <lambourg@adacore.com>
    
            * config/arm/cmse.c (cmse_check_address_range): Replace
            UINTPTR_MAX with __UINTPTR_MAX__ and uintptr_t with __UINTPTR_TYPE__.
    
    From-SVN: r261898

commit 29989221e5356af1de442938cbc2047789709548
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Jun 22 14:25:18 2018 +0000

    syscall: remove Ustat
    
        glibc 2.28 removes ustat.h and the ustat function entirely, which
        breaks syscall.Ustat.
    
        Updates golang/go#25990
    
        Reviewed-on: https://go-review.googlesource.com/120535
    
    From-SVN: r261894

commit 39dce2a6933437345b9ddf03221d64d28513c53d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 22 00:16:34 2018 +0000

    Daily bump.
    
    From-SVN: r261875

commit 4ae5b426ffaa8ec48fa021e73cb7342a35411b8a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jun 21 21:51:51 2018 +0100

    * config/abi/post/x86_64-linux-gnu/baseline_symbols.txt: Update.
    
    From-SVN: r261864

commit 1534996ff5ea8e4f14e674432a32fe462dd01782
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Thu Jun 21 09:36:40 2018 +0000

    RISC-V: Add custom RTEMS multilibs
    
    Add multilib variants for -march=rv64imafd, e.g. to support the BOOMv2 core.
    
    Add -mcmodel=medany as a variant of the 64-bit multilibs for RTEMS.  The
    rationale for this change is that several existing RISC-V chips map the
    RAM at 0x80000000.  In RTEMS, we do not use virtual memory, so
    applications will run at this location which is outside the +-2GiB range
    in a 64-bit configuration.
    
    gcc/
            * config.gcc (riscv*-*-elf* | riscv*-*-rtems*): Use custom
            multilibs for *-*-rtems*.
            * config/riscv/t-rtems: New file.
    
    From-SVN: r261838

commit bc95e9eb0e59046c94b3db3efdec6b1d5c60e47b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 21 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r261828

commit 102073d298a6189c396001cf6c3239c6c218c86c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 20 00:16:49 2018 +0000

    Daily bump.
    
    From-SVN: r261777

commit bdaa9e551f27298cbec244717c13ac68a4a52bf7
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Jun 19 21:01:22 2018 +0000

    xtensa: fix PR target/65416
    
    The issue is caused by reordering of stack pointer update after stack
    space allocation with instructions that write to the allocated stack
    space. In windowed ABI register spill area for the previous call frame
    is located just below the stack pointer and may be reloaded back into
    the register file on movsp.
    Implement allocate_stack pattern for windowed ABI configuration and
    insert an instruction that prevents reordering of frame memory access
    and stack pointer update.
    
    gcc/
    2018-06-19  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-06-19  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.md (UNSPEC_FRAME_BLOCKAGE): New unspec
            constant.
            (allocate_stack, frame_blockage, *frame_blockage): New patterns.
    
    From-SVN: r261764

commit 22e89a8f22cbd5471ad3fc0d5dd3710eb071214c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jun 19 18:32:50 2018 +0100

    Remove unused <exception> header from <utility>
    
    This header was needed for the declaration of std::terminate but the
    calls to it were removed in r242401.
    
            * include/std/utility: Remove unused <exception> header.
    
    From-SVN: r261752

commit 23413cf4e56c1c667360cf82288aecad0e22bb66
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 19 09:46:40 2018 +0000

    gimplify.c (gimplify_init_constructor): Really never clear for an incomplete constructor if CONSTRUCTOR_NO_CLEARING is set.
    
            * gimplify.c (gimplify_init_constructor): Really never clear for an
            incomplete constructor if CONSTRUCTOR_NO_CLEARING is set.
    
    From-SVN: r261737

commit 9996652407a3066f4ac4f89411f1935e8c15bf6e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 19 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r261722

commit 0ccda1eae5964cbe33556e6a2dc43d180343d92e
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue Jun 19 00:02:30 2018 +0000

    PR middle-end/82063 - issues with arguments enabled by -Wall
    
    gcc/ChangeLog:
            PR middle-end/82063
            * calls.c (alloc_max_size): Correct a logic error/typo.
            Treat excessive arguments as infinite.  Warn for invalid arguments.
            * doc/invoke.texi (-Walloc-size-larger-than): Update.
    
    gcc/testsuite/ChangeLog:
            PR middle-end/82063
            * gcc.dg/Walloc-size-larger-than-1.c: New test.
            * gcc.dg/Walloc-size-larger-than-10.c: New test.
            * gcc.dg/Walloc-size-larger-than-11.c: New test.
            * gcc.dg/Walloc-size-larger-than-12.c: New test.
            * gcc.dg/Walloc-size-larger-than-13.c: New test.
            * gcc.dg/Walloc-size-larger-than-14.c: New test.
            * gcc.dg/Walloc-size-larger-than-15.c: New test.
            * gcc.dg/Walloc-size-larger-than-16.c: New test.
            * gcc.dg/Walloc-size-larger-than-2.c: New test.
            * gcc.dg/Walloc-size-larger-than-3.c: New test.
            * gcc.dg/Walloc-size-larger-than-4.c: New test.
            * gcc.dg/Walloc-size-larger-than-5.c: New test.
            * gcc.dg/Walloc-size-larger-than-6.c: New test.
            * gcc.dg/Walloc-size-larger-than-7.c: New test.
            * gcc.dg/Walloc-size-larger-than-8.c: New test.
            * gcc.dg/Walloc-size-larger-than-9.c: New test.
            * gcc.dg/Walloc-size-larger-than.c: New test.
    
    From-SVN: r261720

commit 204f4cdbe1741c1640ff68ab3cd2c4ec460f0b2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 18 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r261693

commit a0c97cbe4b0a2b239783aacd4b515dd322df5198
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 17 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r261684

commit 672684bb310c102b9f1df4f22202edc51bfb8ffd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 16 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r261672

commit 06ccfdfa9181d6ad9660f13e3125e8f176a2ea98
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 15 20:19:04 2018 +0100

    PR libstdc++/86169 unshare COW string when non-const data() called
    
            PR libstdc++/86169
            * include/bits/basic_string.h [!_GLIBCXX_USE_CXX11_ABI]
            (basic_string::data()): Unshare string.
            * testsuite/21_strings/basic_string/operations/data/char/86169.cc:
            New.
    
    From-SVN: r261646

commit 0c9294db39ff02addc2bf7cb9dcfddea1ed5bd09
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 15 17:42:57 2018 +0100

    Only define __cpp_lib_constexpr_char_traits for C++17
    
            * include/bits/char_traits.h (__cpp_lib_constexpr_char_traits): Only
            define for C++17 and above.
    
    From-SVN: r261637

commit 24245a3cfde3c9832b3ce57fc30903b6dd2fc81f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 15 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r261615

commit 5972b623419163bb7a67ce447566ee0ed9a9eaa6
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Thu Jun 14 05:19:35 2018 +0000

    RTEMS: Prefer int for int32_t
    
    Common systems like glibc and FreeBSD define int32_t to int.  This means
    a lot of third party code works well in these cases:
    
      #include <stdint.h>
    
      void f(int32_t);
    
      void f(int);
    
      void g(int32_t *);
    
      void h(void)
      {
        int i;
        g(&i);
      }
    
    On RTEMS you got however in C
    
      test.c:5:6: error: conflicting types for 'f'
        void f(int);
            ^
      test.c:3:6: note: previous declaration of 'f' was here
        void f(int32_t);
            ^
      test.c: In function 'h':
      test.c:12:4: warning: passing argument 1 of 'g' from incompatible
      pointer type [-Wincompatible-pointer-types]
        g(&i);
          ^
      test.c:7:6: note: expected 'int32_t * {aka long int *}' but argument
      is of type 'int *' void g(int32_t *);
    
    and C++
    
      test.c: In function 'void h()':
      test.c:12:4: error: invalid conversion from 'int*' to 'int32_t* {aka
      long int*}' [-fpermissive]
        g(&i);
          ^~
      test.c:7:6: note:   initializing argument 1 of 'void g(int32_t*)'
        void g(int32_t *);
          ^
    
    This was due to a Newlib speciality which uses long for int32_t if long
    is a 32-bit type.  To ease the use of third party software in RTEMS we
    override this Newlib option now and use int for int32_t if int is a
    32-bit type.
    
    gcc/
            * config/rtems.h (STDINT_LONG32): Define.
    
    From-SVN: r261584

commit 3841c001258f1b82af2b4d7542a513873df73b5e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 14 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r261578

commit 5d0316627e880665e2aef1adcb240d929bdc75bf
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jun 13 22:40:46 2018 +0000

    re PR fortran/86110 (ICE in gfc_resolve_character_array_constructor, at fortran/array.c:2044)
    
    2018-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86110
            * array.c (gfc_resolve_character_array_constructor): Avoid NULL
            pointer dereference.
    
    2018-06-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86110
            * gfortran.dg/pr86110.f90: New test.
    
    From-SVN: r261575

commit bc13aa945cb300dc0f52d2bc8f5ed9d08703bcac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 13 00:16:38 2018 +0000

    Daily bump.
    
    From-SVN: r261533

commit 71f5847e7414838bee04f650b0eb9b34d7bc5957
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 12 15:53:10 2018 -0400

    PR c++/85815 - reference to member of enclosing template.
    
            * parser.c (cp_parser_postfix_dot_deref_expression): Check
            currently_open_class.
    
    From-SVN: r261524

commit d525c67f13c824db4b0d9f9d8107fd398d1fcdf0
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 12 15:53:02 2018 -0400

    PR c++/86060 - ICE on range for with -std=c++98.
    
            * parser.c (cp_parser_init_statement): Don't clobber *decl after
            pedwarn.
    
    From-SVN: r261523

commit 7e5b05f19fd5c635e62e1e00a844355a1deb6f0a
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Jun 12 18:28:25 2018 +0000

    re PR fortran/44491 (Diagnostic just shows "<During initialization>" instead of a locus)
    
    2018-06-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/44491
            * expr.c (gfc_check_assign): Select non-NULL locus.
    
    2018-06-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/44491
            * gfortran.dg/pr44491.f90: New testcase
    
    From-SVN: r261520

commit 3960a3b98f50eb4b2aeeb78420391f0cd83b9781
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 12 10:35:05 2018 +0000

    ada-tree.h (TYPE_RETURN_BY_DIRECT_REF_P): Change from using TYPE_LANG_FLAG_4 to using TYPE_LANG_FLAG_0.
    
            * gcc-interface/ada-tree.h (TYPE_RETURN_BY_DIRECT_REF_P): Change from
            using TYPE_LANG_FLAG_4 to using TYPE_LANG_FLAG_0.
            (TYPE_ALIGN_OK): Move around.
            (TYPE_PADDING_FOR_COMPONENT): Remove superfluous parentheses.
            * gcc-interface/decl.c (change_qualified_type): Move to...
            (gnat_to_gnu_entity): Adjust comment.
            * gcc-interface/gigi.h (change_qualified_type): ...here; make inline.
            (ceil_pow2): Use ceil_log2.
            * gcc-interface/utils.c (finish_subprog_decl): Add couple of comments
            and do not set TREE_SIDE_EFFECTS.
            (handle_noreturn_attribute): Use change_qualified_type.
    
    From-SVN: r261488

commit ed457510e12e254dc1d6c5c19ee77b130d20696a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 12 10:20:02 2018 +0000

    decl.c (gnat_to_gnu_entity): Do not get the expression of a dispatch table that is not being defined.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Constant>: Do not get
            the expression of a dispatch table that is not being defined.
            <E_Record_Subtype>: Remove obsolete kludge.
    
    From-SVN: r261485

commit 92e047e7751db6da3f343f14e25ce257812f6310
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 12 10:09:20 2018 +0000

    Backpor from mainline
            2018-06-02  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Constant>: If this is
            not a definition, retrieve the expression only if it's a compile-time
            known value if we are just annotating types.
    
            * gcc-interface/utils.c (convert): Do not try to upcast properly for a
            conversion between tagged types in type_annotate_only mode.
    
    From-SVN: r261482

commit 99c7270971f393623ae2de2d5e13e583472f69b3
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jun 12 09:31:48 2018 +0000

    backport: decl.c (gnat_to_gnu_entity): Reuse the existing fields of a dummy fat pointer type, if any.
    
            Backport from mainline
            2018-06-11  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Type>: Reuse the
            existing fields of a dummy fat pointer type, if any.  Clear the
            TYPE_DECL_SUPPRESS_DEBUG on the fat pointer type after completing it.
    
    From-SVN: r261478

commit 1ba4d2fe378b4267c50f6d61fd99aea604336588
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 12 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r261470

commit 4e719bb23916643d12c4229a0949b24edbb54778
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Jun 11 13:25:37 2018 -0500

    backport: re PR target/85755 (PowerPC Gcc's -mupdate produces inefficient code on power8/power9 machines)
    
    gcc/
            Backport from mainline
            2018-06-08  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/85755
            * config/rs6000/rs6000.c (mem_operand_gpr): Enable PRE_INC and PRE_DEC
            addresses.
    
    gcc/testsuite/
            Backport from mainline
            2018-06-08  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/85755
            * gcc.target/powerpc/pr85755.c: New test.
    
    From-SVN: r261442

commit be4ab57111c0610e51ace9a9219a41e221f6d72e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 11 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r261391

commit 4627d4046da0ea5abc9f9ed83707dd378b934a83
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Jun 10 03:10:09 2018 +0000

    Add ChangeLog entry
    
    From-SVN: r261385

commit e8d0215ca24769b690815a658492e26a716feb67
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Jun 10 03:10:00 2018 +0000

    backport: re PR libfortran/86070 (gfortran.dg/fmt_zero_digits.f90 segmentation fault starting with r261077)
    
    2018-06-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk.
            PR libgfortran/86070
            * io/write_float.def (build_float_string): Initialize *len.
    
    From-SVN: r261384

commit 29bb1c248af5b0cdd955ed15c0aa78d574fa808b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 10 00:17:03 2018 +0000

    Daily bump.
    
    From-SVN: r261379

commit 216b8050e70ff726e371d6368cf6618f2ede815b
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 21:54:45 2018 +0000

    re PR fortran/38351 (Poor error message for rank mismatch in operator args)
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/38351
            * resolve.c (resolve_operator): Provide better error message for
            derived type entity used in an binary intrinsic numeric operator.
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/38351
            * gfortran.dg/pr38351.f90: New test.
            * gfortran.dg/typebound_operator_4.f03: Adjust for new error message.
    
    From-SVN: r261376

commit 68dc6e738082190494a80555609e3c7c894831d9
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 20:10:34 2018 +0000

    re PR fortran/63514 (functions containing volatile are considered pure)
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/63514
            * symbol.c (gfc_add_volatile): Enforce F2008:C1282 and F2018:C1588.
    
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/63514
            * gfortran.dg/pr63514.f90: New test.
    
    From-SVN: r261375

commit 707a031d31b95ef1d8401be81bcbaacb477da6e1
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 19:57:29 2018 +0000

    re PR fortran/78278 (ICE in gfc_wide_memset, at fortran/scanner.c:153)
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78278
            * data.c (gfc_assign_data_value): Re-arrange code to allow for
            an error for double initialization of CHARACTER entities.
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78278
            * gfortran.dg/data_bounds_1.f90: Add -std=gnu option.
            * gfortran.dg/data_char_1.f90: Ditto.
            * gfortran.dg/pr78571.f90: Ditto.
            * gfortran.dg/pr78278.f90: New test.
    
    From-SVN: r261374

commit 4dc4a78e90d856631fc569e6232f318e6ae62063
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 18:54:56 2018 +0000

    re PR fortran/86059 (ICE in reduce_binary_ac, at fortran/arith.c:1308 (and others))
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86059
            * array.c (match_array_cons_element): NULL() cannot be in an
            array constructor.
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86059
            * gfortran.dg/associate_30.f90: Remove code tested ...
            * gfortran.dg/pr67803.f90: Ditto.
            * gfortran.dg/pr67805.f90: Ditto.
            * gfortran.dg/pr86059.f90: ... here.  New test.
    
    From-SVN: r261373

commit cb7a7d9139bd9e6e40ca66c2155e33ace9451507
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 18:29:40 2018 +0000

    re PR fortran/85138 (ICE with generic function)
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85138
            PR fortran/85996
            PR fortran/86051
            * decl.c (gfc_match_char_spec): Use private namespace in attempt to
            reduce a charlen to a constant.
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85138
            PR fortran/85996
            PR fortran/86051
            * gfortran.dg/pr85138_1.f90: New test.
            * gfortran.dg/pr85138_2.f90: Ditto.
            * gfortran.dg/pr85996.f90: Ditto.
    
    From-SVN: r261371

commit e42913ed9c79309fefcd3e1212d64ef941d44100
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 9 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r261355

commit da871cfe693bcfbbfbcbb3e039a032c6956b36d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 8 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r261301

commit 0ce75deef3c58dfa5778dc672dfecca167d2d0e1
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jun 7 18:39:30 2018 +0000

    re PR fortran/86045 (ICE in reduce_binary_ac, at fortran/arith.c:1308)
    
    2018-06-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86045
            Backport from trunk.
            * simplify.c (gfc_simplify_mod): Re-arrange code to test whether
            'P' is zero and issue an error if it is.
    
    2018-06-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/86045
            Backport from trunk.
            * gfortran.dg/pr86045.f90: New test.
    
    From-SVN: r261291

commit 07b2e04ccdfbb9eabc5a9962bdedf572a26d3c8a
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Jun 7 18:13:33 2018 +0000

    re PR fortran/85641 (ICE with string concatenate)
    
    2018-06-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85641
            Backport from trunk.
            * frontend-passes.c (is_fe_temp): Add prototype.
            (realloc_string_callback): Early return for frontend-generated
            temporary.
    
    2018-06-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85641
            Backport from trunk.
            * gfortran.dg/realloc_on_assign_30.f90: New test.
    
    From-SVN: r261289

commit 167ce20782f2fa27d62d7e2dfb0202f019aee361
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Jun 7 09:01:57 2018 -0500

    backport: re PR target/63177 (Powerpc no-vfa-vect-depend-2.c and no-vfa-vect-depend-3.c failures)
    
            Backport from mainline
            2018-06-06  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/63177
            * /config/rs6000/rs6000.h (ASM_CPU_SPEC): Add support for -mpower9.
            Don't handle -mcpu=power8 if -mpower9-vector is also used.
    
    From-SVN: r261276

commit 33570df178dc6e74fed02cf9d9a31727785b6093
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 7 11:56:25 2018 +0000

    backport: re PR sanitizer/84761 (AddressSanitizer is not compatible with glibc 2.27 on x86)
    
    2018-06-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/84761
            * sanitizer_common/sanitizer_linux_libcdep.cc (__GLIBC_PREREQ):
            Define if not defined.
            (DL_INTERNAL_FUNCTION): Don't define.
            (InitTlsSize): For __i386__ if not compiled against glibc 2.27+
            determine at runtime whether to use regparm(3), stdcall calling
            convention for older glibcs or normal calling convention for
            newer glibcs for call to _dl_get_tls_static_info.
    
    From-SVN: r261272

commit 4aad21e2c03961711b9caa26034f7eb6f8edc6ff
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 7 10:10:00 2018 +0000

    backport: [multiple changes]
    
    2018-06-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-05-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/85588
            * fold-const.c (negate_expr_p): Restrict negation of operand
            zero of a division to when we know that can happen without
            overflow.
            (fold_negate_expr_1): Likewise.
    
            * gcc.dg/torture/pr85588.c: New testcase.
            * gcc.dg/torture/pr57656.c: Use dg-additional-options.
    
            2018-05-02  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/85567
            * gimplify.c (gimplify_save_expr): When in SSA form allow
            SAVE_EXPRs to compute to SSA vars.
    
            * gcc.dg/torture/pr85567.c: New testcase.
    
            2018-05-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/85597
            * tree-vect-stmts.c (vectorizable_operation): For ternary SLP
            do not use split vect_get_vec_defs call but call vect_get_slp_defs
            directly.
    
            * gcc.dg/vect/pr85597.c: New testcase.
    
    From-SVN: r261269

commit 5a4e789a3aaae7a856ca131144930192e8315670
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 7 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r261257

commit 8c2f7d080ac75852a9c235b5bc3667b994ae4f4c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 6 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r261224

commit d36e0ed9e3913936d2c92701ee6b7f4641e0036a
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Tue Jun 5 08:21:57 2018 +0000

    S/390: Fix __builtin_tbeginc signature
    
    The builtin was accidentally defined to have an integer return value.
    Fixed with the attached patch.
    
    gcc/ChangeLog:
    
    2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390-builtin-types.def: Add void function type.
            * config/s390/s390-builtins.def: Use the function type for the
            tbeginc builtin.
    
    gcc/testsuite/ChangeLog:
    
    2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/htm-builtins-compile-4.c: New test.
    
    From-SVN: r261190

commit 2e74544ceac780dd06f6e0895632af54ff9844a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 5 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r261178

commit e6a090b2d0121c0910224b2888633edb56e4b103
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Jun 4 17:09:01 2018 +0000

    re PR fortran/85981 (ICE in gfc_trans_string_copy, at fortran/trans-expr.c:6539)
    
    2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85981
            * resolve.c (resolve_allocate_deallocate): Check errmsg is default
            character kind.
    
    2018-06-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85981
            * gfortran.dg/allocate_alloc_opt_14.f90: New test.
            * gfortran.dg/allocate_alloc_opt_1.f90: Update error string.
            * gfortran.dg/allocate_stat_2.f90: Ditto.
            * gfortran.dg/deallocate_alloc_opt_1.f90: Ditto.
    
    From-SVN: r261162

commit 54a80d7fed679d7605fb28f53ba0ba37ccdaa2c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 4 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r261134

commit a50cac41f7c6af46f46051c80f1e45eca053cd41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 3 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r261118

commit 39ad29a981f5ab039eda17efb24e4b38cea057b4
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Sat Jun 2 10:58:13 2018 +0000

    Add missing directive
    
    From-SVN: r261111

commit 7f6c002cdf3a09c915907b78637fb945bc85f549
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 2 10:52:39 2018 +0000

    ada-tree.h (TYPE_PADDING_FOR_COMPONENT): New macro.
    
            * gcc-interface/ada-tree.h (TYPE_PADDING_FOR_COMPONENT): New macro.
            * gcc-interface/decl.c (gnat_to_gnu_component_type): Cache the padding
            type built for an aliased component with variable size.
    
    From-SVN: r261108

commit 63cf89107c98171a1f84ea13fbab1023c4700c09
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 2 09:52:57 2018 +0000

    backport: trans.c (Call_to_gnu): If this is a function call and there is no target...
    
            Backport from mainline
            2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc-interface/trans.c (Call_to_gnu): If this is a function call and
            there is no target, also create a temporary for the return value for
            an allocator if the type is an unconstrained record type with default
            discriminant.
    
    From-SVN: r261104

commit f5c1953fa837310d2a2b253c2b83acd9747139c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 2 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r261094

commit cffcc89ac3012c97d28fdb29d68c0aaf4e657837
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Jun 1 18:34:09 2018 +0000

    backport: re PR fortran/85840 (Memory leak in write.c)
    
    2018-06-01  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk.
            PR libgfortran/85840
            * io/write.c (write_float_0, write_real, write_real_g0,
            write_complex): Use separate local variables for the float
            string length.
    
    From-SVN: r261077

commit ada08cc201b6d986aa70bd185a301061ea34b5f8
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Fri Jun 1 12:57:16 2018 +0000

    backport: [multiple changes]
    
    2018-06-01  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            Backport from mainline:
            2018-05-23  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            * gimple-ssa-strength-reduction.c (struct slsr_cand_d): Add
            first_interp field.
            (alloc_cand_and_find_basis): Initialize first_interp field.
            (slsr_process_mul): Modify first_interp field.
            (slsr_process_add): Likewise.
            (slsr_process_cast): Modify first_interp field for each new
            interpretation.
            (slsr_process_copy): Likewise.
            (dump_candidate): Dump first_interp field.
            (replace_mult_candidate): Process all interpretations, not just
            subsequent ones.
            (replace_rhs_if_not_dup): Likewise.
            (replace_one_candidate): Likewise.
    
            Backport from mainline:
            2018-05-25  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            * gimple-ssa-strength-reduction.c (replace_one_candidate): Skip if
            this candidate has already been replaced in-situ by a copy.
    
    From-SVN: r261066

commit 70dd0dcefdb619f190b1e8ebf5c5c28f852ec996
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 1 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r261048

commit 1d568b9e4392b1d9fb486e0b829a880940bf956b
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu May 31 09:59:35 2018 +0000

    re PR sanitizer/86012 (libsanitizer build failure on sparc64-linux-gnu)
    
    2018-05-31  Matthias Klose  <doko@ubuntu.com>
    
            PR sanitizer/86012
            * sanitizer_common/sanitizer_platform_limits_posix.cc: Define
            SIZEOF_STRUCT_USTAT for 32bit sparc.
    
    From-SVN: r260992

commit 352bc46a46534d05c9428f770a7d23284c5f91d8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 31 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r260986

commit 04f6a9f9026874dcf103411809c01cf79fe305c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 30 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r260910

commit e092478145ecfe087d6aaff8cf2700481be0c1f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 29 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r260854

commit c91b6a11d4bb15e77e3d6ebdd8df245b35d4469d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 28 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r260812

commit c2b9b97ce24ffc33b5b1fe04deea93a784f59c2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 27 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r260799

commit 5c12b9deb7c8c4357e78909e078f670d2b06d34d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 26 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r260787

commit 56351a7aab2df2d75f04e983931767cbf65d998f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:24:06 2018 +0000

    re PR fortran/85543 (ICE in update_current_proc_array_outer_dependency, at fortran/resolve.c:3060)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85543
            Backport from trunk
            * resolve.c (update_current_proc_array_outer_dependency): Avoid NULL
            pointer dereference.
    
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85543
            Backport from trunk
            * gfortran.dg/pr85543.f90: New test.
    
    From-SVN: r260774

commit 926913758b6de42ad3c18b0ee68ef1fd3eb97f53
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:13:50 2018 +0000

    re PR fortran/85779 (ICE in gfc_typename, at fortran/misc.c:156)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85779
            Backport from trunk
            * decl.c (gfc_match_derived_decl): Fix NULL point dereference.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85779
            Backport from trunk
            * gfortran.dg/pr85779_1.f90: New test.
            * gfortran.dg/pr85779_2.f90: Ditto.
            * gfortran.dg/pr85779_3.f90: Ditto.
    
    From-SVN: r260773

commit 88097476b2ebaf017c7567acc9c5604bcae0a0bd
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:05:52 2018 +0000

    re PR fortran/85780 (ICE in resolve_fl_procedure, at fortran/resolve.c:12504)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85780
            Backport from trunk
            * resolve.c (resolve_fl_procedure): Avoid NULL dereference.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85780
            Backport from trunk
            * gfortran.dg/pr85780.f90: New test.
    
    From-SVN: r260771

commit c554c37a261158b0b1bf25b5dd4e4fa8e2e175e8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 18:57:04 2018 +0000

    re PR fortran/85895 (ICE in gfc_conv_array_ref, at fortran/trans-array.c:3518)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85895
            Backport from trunk
            * resolve.c (resolve_sync): Resolve expression before checking for
            an error.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85895
            Backport from trunk
            * gfortran.dg/coarray_3.f90: Fix invalid testcase.
            * gfortran.dg/pr85895.f90: New test.
    
    From-SVN: r260770

commit af0e20c8698ac56728b7e60916328ebea2711cc5
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri May 25 15:38:13 2018 +0200

    re PR target/85903 (FAIL: gcc.target/i386/avx512dq-vcvtuqq2pd-2.c)
    
            * config/i386/sse.md (cvtusi2<ssescalarmodesuffix>64<round_name>):
            Add {q} suffix to insn mnemonic.
    
            PR target/85903
            * config/i386/sse.md (movdi_to_sse): Do not generate pseudo
            when memory input operand is handled.
    
    testsuite/ChangeLog:
    
            * gcc.target/i386/avx512f-vcvtusi2sd64-1.c: Update scan string.
            * gcc.target/i386/avx512f-vcvtusi2ss64-1.c: Ditto.
    
    From-SVN: r260758

commit fb3d063722235dadd5cad3ebe04f6080d7996a88
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 25 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r260701

commit f38743e936095f81b2f2199c7be9da15be412d1c
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Thu May 24 20:21:54 2018 +0000

    libsanitizer: Use pre-computed size of struct ustat for Linux
    
    Cherry-pick compiler-rt revision 333213:
    
    <sys/ustat.h> has been removed from glibc 2.28 by:
    
    commit cf2478d53ad7071e84c724a986b56fe17f4f4ca7
    Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
    Date:   Sun Mar 18 11:28:59 2018 +0800
    
        Deprecate ustat syscall interface
    
    This patch uses pre-computed size of struct ustat for Linux.
    
            PR sanitizer/85835
            * sanitizer_common/sanitizer_platform_limits_posix.cc: Don't
            include <sys/ustat.h> for Linux.
            (SIZEOF_STRUCT_USTAT): New.
            (struct_ustat_sz): Use SIZEOF_STRUCT_USTAT for Linux.
    
    From-SVN: r260688

commit 9572599d64bd076bcc4df774cd0d76429f89b81c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 24 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r260631

commit f719aa16abf9196a434922384863882105f0c279
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 23 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r260559

commit 6784bc35d21ff2daf03b77caa0cebd0ae9b1a98d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 22 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r260495

commit 17b7d3edfb6e64a5826b4ff7c93780b570727dfa
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Mon May 21 16:34:44 2018 +0000

    re PR tree-optimization/85698 (CPU2017 525.x264_r fails starting with r257581)
    
            PR target/85698
            * config/rs6000/rs6000.c (rs6000_output_move_128bit): Check dest operand.
    
            * gcc.target/powerpc/pr85698.c: New test.
    
    From-SVN: r260476

commit 2cbde980300848709d653d146853cf6e66408c6a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 21 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r260429

commit e62bd7cfb89e07400e852b031e7c2d066c3f2841
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun May 20 18:08:04 2018 +0000

    re PR fortran/80657 (Loop in character function declaration)
    
    2018-05-20  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80657
            Backport from trunk
            * resolve.c (flag_fn_result_spec): Use the 'sym' argument to
            test for self refs to the function result in the character len
            expression. If a self reference is found, emit an error and
            return true.
            (resolve_fntype): Use the function symbol in the calls to the
            above.
    
    2018-05-20  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80657
            Backport from trunk
            * gfortran.dg/char_result_18.f90: New test.
    
    From-SVN: r260424

commit 1af98493eb3f77d1c4d9e73a69803026c10ed9cd
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun May 20 17:16:09 2018 +0000

    re PR fortran/82275 (gfortran rejects valid & accepts invalid reference to dimension-remapped type SELECT TYPE selector)
    
    2018-05-20  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82275
            Backport from trunk
            * match.c (gfc_match_type_spec): Go through the array ref and
            decrement 'rank' for every dimension that is an element.
    
    2018-05-20  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82275
            Backport from trunk
            * gfortran.dg/select_type_42.f90: New test.
    
    From-SVN: r260423

commit 6831d6045d49be06225dacc31aa5b907c1c9f198
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 20 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r260406

commit 34aac30d2dbe3870c054c754808d3415964f8c4c
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat May 19 14:53:58 2018 +0000

    re PR fortran/82923 (Automatic allocation of deferred length character using function result)
    
    2018-05-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82923
            PR fortran/66694
            PR fortran/82617
            * trans-array.c (gfc_alloc_allocatable_for_assignment): Set the
            charlen backend_decl of the rhs expr to ss->info->string_length
            so that the value in the current scope is used.
    
    2018-05-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82923
            * gfortran.dg/allocate_assumed_charlen_4.f90: New test. Note
            that the patch fixes PR66694 & PR82617, although the testcases
            are not explicitly included.
    
    From-SVN: r260399

commit 8c55577cec232d73181d37ab3dfbce7806322e7a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 19 00:16:38 2018 +0000

    Daily bump.
    
    From-SVN: r260386

commit 923ed8dc1cb0a3fcc8adafcb440b95ac8e626245
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 18 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r260345

commit 19620f85c74190a24c57d5cfff2a06fc02739ae6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 17 18:26:44 2018 +0100

    PR libstdc++/85812 fix memory leak in std::make_exception_ptr
    
            PR libstdc++/85812
            * libsupc++/cxxabi_init_exception.h (__cxa_free_exception): Declare.
            * libsupc++/exception_ptr.h (make_exception_ptr) [__cpp_exceptions]:
            Refactor to separate non-throwing and throwing implementations.
            [__cpp_rtti && !_GLIBCXX_HAVE_CDTOR_CALLABI]: Deallocate the memory
            if constructing the object throws.
    
    From-SVN: r260331

commit 0ecc8d6fd14e687ceb9f83d111b2f4ff4546ce6d
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu May 17 15:17:43 2018 +0000

    re PR fortran/82814 (ICE from submodule character function)
    
    2017-05-17  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82814
            * gfortran.dg/submodule_31.f08: New test.
    
    From-SVN: r260324

commit 5026bf985abb267773e4f1e258b958803fc089d2
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 17 14:23:34 2018 +0200

    Check is_single_const in intersect_with_plats
    
    2018-05-17  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2018-05-11  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/85655
            * ipa-cp.c (intersect_with_plats): Check that the lattice contains
            single const.
    
    From-SVN: r260320

commit 8b024b9ad39722aabb0bee14b3be802ef25e934a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 17 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r260302

commit 5b26bda1c6dcf0be14e815fc16e49a7b2131253c
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed May 16 11:17:10 2018 +0000

    re PR fortran/83149 ([6- and 7-branches] Missing test for sym->ns->proc_name: crash_signal in toplev.c:325)
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83149
            Backport from trunk
            * trans-decl.c (gfc_finish_var_decl): Test sym->ns->proc_name
            before accessing its components.
            * trans-types.c (gfc_sym_type): If a character result has null
            backend_decl, try the procedure symbol..
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83149
            Backport from trunk
            * gfortran.dg/pr83149_1.f90: New test.
            * gfortran.dg/pr83149.f90: Additional source for previous.
            * gfortran.dg/pr83149_b.f90: New test.
            * gfortran.dg/pr83149_a.f90: Additional source for previous.
    
    From-SVN: r260285

commit 0c09cb7ae87ce9e4669a50a244e20f0f90baad73
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed May 16 10:18:20 2018 +0000

    re PR fortran/83898 (ICE in gfc_conv_expr_descriptor, at fortran/trans-array.c:7181)
    
    2018-16-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83898
            Backport from trunk
            * trans-stmt.c (trans_associate_var): Do not set cst_array_ctor
            for characters.
    
    2018-16-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83898
            Backport from trunk
            * gfortran.dg/associate_33.f03 : New test.
    
    From-SVN: r260282

commit e777974703f52fae5bc138623b681e49659d91eb
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed May 16 09:35:19 2018 +0000

    re PR fortran/84546 (Bad sourced allocation of CLASS(*) with source with CLASS(*) component)
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/84546
            Backport from trunk
            * trans-array.c (structure_alloc_comps): Make sure that the
            vptr is copied and that the unlimited polymorphic _len is used
            to compute the size to be allocated.
            (build_array_ref): Set the 'unlimited' argument false in the
            call to gfc_get_class_array_ref.
            * trans-expr.c (gfc_get_class_array_ref): If unlimited, use the
            unlimited polymorphic _len for the offset to the element.
            (gfc_copy_class_to_class): Set the new 'unlimited' argument.
            * trans.h : Add the boolean 'unlimited' to the prototype.
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/84546
            Backport from trunk
            * gfortran.dg/unlimited_polymorphic_29.f90 : New test.
    
    From-SVN: r260281

commit ee1f682ad5099bb5fe45c7de41360792e3e614a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 16 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r260275

commit 1e0a4617def2a85c7b810a8aa9999a0aba1c746c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 15 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r260246

commit cb4a4643bc39a8a6d3cf4ad8cb19a68be38e0c1a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon May 14 23:22:27 2018 +0100

    PR libstdc++/67554 Do not pass null pointers to memcpy
    
            PR libstdc++/67554
            * include/bits/valarray_array.h (_Array_copy_ctor<_Tp, true>)
            (_Array_copier<_Tp, true>): Do not pass null pointers to memcpy.
    
    From-SVN: r260243

commit a49fa6a0842fefb55c161f5fce0e987f801e4d00
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon May 14 23:22:23 2018 +0100

    PR libstdc++/82966 fix swapping of node handles
    
            PR libstdc++/82966
            * include/bits/node_handle.h (_Node_handle_common::_M_swap): Use value
            instead of type.
            * testsuite/23_containers/set/modifiers/node_swap.cc: New.
    
    From-SVN: r260242

commit b2cf6670447e140c80721879dfdcd2b77e84e6f8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 14 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r260219

commit f30442321362aeaac9ec028de223e1e5f051282a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 13 00:16:39 2018 +0000

    Daily bump.
    
    From-SVN: r260203

commit 0db767d9118bc1f17b1c1d8b1e5f61621c2eed1c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat May 12 16:57:28 2018 +0000

    re PR fortran/85542 (ICE in check_inquiry, at fortran/expr.c:2426)
    
    2018-05-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85542
            Backport from trunk
            * expr.c (check_inquiry): Avoid NULL pointer dereference.
    
    2018-05-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85542
            Backport from trunk
            * gfortran.dg/pr85542.f90: New test.
    
    From-SVN: r260197

commit 1889a748b42299dc0da612b14dfac1ed0abc7e50
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat May 12 15:33:24 2018 +0000

    re PR fortran/68846 (Pointer function as LValue doesn't work when the assignment regards a dummy argument.)
    
    2018-05-12  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/68846
            PR fortran/70864
            Backport from trunk
            * resolve.c (get_temp_from_expr): The temporary must not have
            dummy or intent attributes.
    
    2018-05-12  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/68846
            Backport from trunk
            * gfortran.dg/temporary_3.f90 : New test.
    
            PR fortran/70864
            Backport from trunk
            * gfortran.dg/temporary_2.f90 : New test.
    
    From-SVN: r260195

commit 707c9c8f238da8fc68f7fab3d5438e48050ab0c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 12 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r260192

commit 32da09c4c69ad14743b9714976ffcac49f649767
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 18:00:41 2018 +0000

    re PR fortran/70870 (Segmentation violation in gfc_assign_data_value)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/70870
            Backport from trunk
            * data.c (gfc_assign_data_value): Check that a data object does
            not also have default initialization.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/70870
            Backport from trunk
            * gfortran.dg/pr70870_1.f90: New test.
    
    From-SVN: r260176

commit 59a3192bc33e619de7939bdeb70effe43e089ba3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 17:59:05 2018 +0000

    re PR fortran/85521 (ICE in gfc_resolve_character_array_constructor, at fortran/array.c:2049)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85521
            Backport from trunk
            * array.c (gfc_resolve_character_array_constructor): Substrings
            with upper bound smaller than lower bound are zero length strings.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85521
            Backport from trunk
            * gfortran.dg/pr85521_1.f90: New test.
            * gfortran.dg/pr85521_2.f90: New test.
    
    From-SVN: r260175

commit eb9c2ee54a8a66c44c355006038cd0cc9dfdaba3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 17:58:03 2018 +0000

    re PR fortran/85687 (ICE in gfc_sym_identifier, at fortran/trans-decl.c:351)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85687
            Backport from trunk
            * check.c (gfc_check_rank): Check that the argument is a data object.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85687
            Backport from trunk
            * gfortran.dg/pr85687.f90: new test.
    
    From-SVN: r260174

commit 92faf9aa8c710f0336408f9748a29f51af1d37e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 11 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r260145

commit b5fd4a4f061b1adfeb1f331f128a1a798ffb50c8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 10 20:23:33 2018 +0100

    Document Dual ABI for std::ios_base::failure
    
            * doc/xml/faq.xml: Link to C++17 status. Add note to outdated answer.
            * doc/xml/manual/debug_mode.xml: Add array and forward_list to list
            of C++11 containers with Debug Mode support.
            * doc/xml/manual/using.xml: Document Dual ABI for ios_base::failure.
            * doc/html/*: Regenerate.
    
    From-SVN: r260131

commit 040019f4595bb88952d404e5cfb9324e965bbad9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 10 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r260102

commit 82ad3a67e4e57943eaa67e35bb67468c7c13811b
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 8 22:34:03 2018 -0400

    PR c++/85646 - lambda visibility.
    
            * decl2.c (determine_visibility): Don't mess with template arguments
            from the containing scope.
            (vague_linkage_p): Check DECL_ABSTRACT_P before looking at a 'tor
            thunk.
    
    From-SVN: r260069

commit 1c786cb90177ebe6ca5568fb6abb93bd17c8e74d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 9 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r260061

commit 86b05b99080ce75f5fbe2e8fb5f463632b383093
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 8 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r260019

commit 12eb60f827c0443f32b2884ac068025c89f8c04c
Author: Edward Smith-Rowland <3dw4rd@verizon.net>
Date:   Mon May 7 16:23:29 2018 +0000

    backport: re PR libstdc++/80506 (Wrong magic number in std::gamma_distribution)
    
    2018-05-07  Edward Smith-Rowland  <3dw4rd@verizon.net>
                Jonathan Wakely  <jwakely@redhat.com>
    
            Backport from mainline
            2018-05-07  Edward Smith-Rowland  <3dw4rd@verizon.net>
    
            PR libstdc++/80506
            * include/bits/random.tcc (gamma_distribution::operator()): Fix magic
            number used in loop condition.
            (gamma_distribution::__generate_impl()): Ditto.
    
    
    Co-Authored-By: Jonathan Wakely <jwakely@redhat.com>
    
    From-SVN: r260006

commit 27933d2bcb3a865f836871290d302c2a99cb840b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 7 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259984

commit 235a7f0e13d48a49bdbedce54e3e88965b3667e5
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun May 6 13:52:46 2018 +0200

    re PR fortran/85507 (ICE in gfc_dep_resolver, at fortran/dependency.c:2258)
    
    gcc/fortran/ChangeLog:
    
    2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/85507
            Backport from trunk.
            * dependency.c (gfc_dep_resolver): Revert looking at coarray dimension
            introduced by r259385.
            * trans-intrinsic.c (conv_caf_send): Always report a dependency for
            same variables in coarray assignments.
    
    gcc/testsuite/ChangeLog:
    
    2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/85507
            Backport from trunk
            * gfortran.dg/coarray_dependency_1.f90: New test.
            * gfortran.dg/coarray_lib_comm_1.f90: Fix counting caf-expressions.
    
    From-SVN: r259977

commit 11806490260d590bde5a188ba09ff296c799118a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 6 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r259971

commit ad2890019d61808447eeb070d4c7e0ec8c8db1ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 5 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r259963

commit afe3349556758b361fbc6e2836cee5686ad82f17
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 4 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r259915

commit f7526fc9cf04707d803a5a04f12ae5d8f4525c93
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 3 21:16:34 2018 +0100

    PR libstdc++/84769 qualify call to std::get<0>
    
            PR libstdc++/84769
            * include/std/variant (visit): Qualify std::get call.
    
    From-SVN: r259910

commit 86c77995da475030048cca590168a8dc7a940c72
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 3 21:16:29 2018 +0100

    PR libstdc++/85632 fix wraparound in filesystem::space
    
    On 32-bit targets any values over 4GB would wrap and produce the wrong
    result.
    
            PR libstdc++/85632 use uintmax_t for arithmetic
            * src/filesystem/ops.cc (experimental::filesystem::space): Perform
            arithmetic in result type.
            * testsuite/experimental/filesystem/operations/space.cc: New.
    
    From-SVN: r259909

commit d22e1cbc77976baf93c50ce0fd54ec8bb8ec62a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 3 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r259872

commit b6fe618ca74c364d76b3c8c73a14f3b71d2e7b62
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 2 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r259816

commit d557a55ea92768ae4ab21cce176ea69b20a206fb
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue May 1 13:21:19 2018 +0000

    backport "[openacc] Fix ICE when compiling tile loop containing infinite loop"
    
    2018-05-01  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2018-04-16  Cesar Philippidis  <cesar@codesourcery.com>
                        Tom de Vries  <tom@codesourcery.com>
    
            PR middle-end/84955
            * omp-expand.c (expand_oacc_for): Add dummy false branch for
            tiled basic blocks without omp continue statements.
    
            * testsuite/libgomp.oacc-c-c++-common/pr84955.c: New test.
            * testsuite/libgomp.oacc-fortran/pr84955.f90: New test.
    
    From-SVN: r259795

commit 34cd4a050279755fc05d303c08fdcc46d0d47a8f
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue May 1 09:00:39 2018 +0000

    [arm] PR target/82518: Return false in ARRAY_MODE_SUPPORTED_P for BYTES_BIG_ENDIAN pt2
    
            Backport from trunk
            2018-04-27  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/82518
            * lib/target-supports.exp (check_effective_target_vect_load_lanes):
            Use check_effective_target_arm_little_endian.
    
    From-SVN: r259790

commit c3fab8c51cebe93b40b26149d678428be8b2fd75
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 1 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r259785

commit a6aef355cede4e91bf847843f0c16d5d892e6189
Author: Edward Smith-Rowland <3dw4rd@verizon.net>
Date:   Mon Apr 30 19:51:13 2018 +0000

    PR libstdc++/pr66689 - comp_ellint_3 and ellint_3 return garbage values
    
    2018-04-30  Edward Smith-Rowland  <3dw4rd@verizon.net>
    
            PR libstdc++/pr66689 - comp_ellint_3 and ellint_3 return garbage values
            * include/tr1/ell_integral.tcc: Correct the nu sign convention
            in ellint_3 and comp_ellint_3.
            * testsuite/tr1/5_numerical_facilities/special_functions/
            06_comp_ellint_3/check_value.cc: Regen with correct values.
            * testsuite/tr1/5_numerical_facilities/special_functions/
            14_ellint_3/check_value.cc: Ditto.
            * testsuite/special_functions/06_comp_ellint_3/check_value.cc: Ditto.
            * testsuite/special_functions/13_ellint_3/check_value.cc: Ditto.
            * testsuite/special_functions/06_comp_ellint_3/pr66689.cc: New.
            * testsuite/special_functions/13_ellint_3/pr66689.cc: New.
            * testsuite/tr1/5_numerical_facilities/special_functions/
            06_comp_ellint_3/pr66689.cc: New.
            * testsuite/tr1/5_numerical_facilities/special_functions/
            14_ellint_3/pr66689.cc: New.
    
    2018-04-30  Edward Smith-Rowland  <3dw4rd@verizon.net>
    
            PR libstdc++/68397 std::tr1::expint fails ... long double arguments.
            * include/tr1/exp_integral.tcc: Increase iteration limits.
            * testsuite/tr1/5_numerical_facilities/special_functions/15_expint/
            pr68397.cc: New test.
            * testsuite/special_functions/14_expint/pr68397.cc: New test.
    
    svn commit \ --This line, and those below, will be ignored--
      ChangeLog \ M ChangeLog M include/tr1/ell_integral.tcc A testsuite/special_functions/06_comp_ellint_3/pr66689.cc A
    testsuite/special_functions/13_ellint_3/pr66689.cc A testsuite/tr1/5_numerical_facilities/special_functions/06_comp_ellint_3/pr66689.cc A
    testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/pr66689.cc M testsuite/special_functions/06_comp_ellint_3/check_value.cc M
    testsuite/special_functions/13_ellint_3/check_value.cc M testsuite/tr1/5_numerical_facilities/special_functions/06_comp_ellint_3/check_value.cc M
    testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/check_value.cc M include/tr1/exp_integral.tcc A
    testsuite/special_functions/14_expint/pr68397.cc A testsuite/tr1/5_numerical_facilities/special_functions/15_expint/pr68397.cc
      include/tr1/ell_integral.tcc \
      testsuite/special_functions/06_comp_ellint_3/pr66689.cc \
      testsuite/special_functions/13_ellint_3/pr66689.cc \
      testsuite/tr1/5_numerical_facilities/special_functions/06_comp_ellint_3/pr66689.cc \
      testsuite/tr1/5_numerical_facilities/special_functions/14_ellint_3/pr66689.cc \
      testsuite/special_functions/06_comp_ellint_3/check_value.cc \
      testsuite/special_functions/13_ellint_3/check_value.cc \
      testsuite/tr1/5_numerical_facilities/special_functions/06_comp_ellint_3/check_value.cc \
      testsuite/tr1/5_numerical_facilities/special_functio
    
    From-SVN: r259777

commit 8856bf75211e1db3652dcb24fb7d1c54ff940c2b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 30 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r259751

commit 95115f56d3cab93aac1062aee0ddce6c7cd90970
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 29 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r259745

commit da5d5f16105c6cdfe4e156f979b2d9bc34281ede
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sat Apr 28 16:54:20 2018 +0200

    re PR fortran/81773 ([Coarray] Get with vector index on lhs leads to incorrect caf_get_by_ref() call.)
    
    gcc/fortran/ChangeLog:
    
    2018-04-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/81773
            PR fortran/83606
            Backport from trunk
            * dependency.c (gfc_dep_resolver): Coarray indexes are to be ignored
            during dependency computation.  They define no data dependency.
            * trans-array.c (conv_array_index_offset): The stride can not be set
            here, prevent fail.
            * trans-intrinsic.c (conv_caf_send): Add creation of temporary array
            for caf_get's result and copying to the array with vectorial
            indexing.
    
    gcc/testsuite/ChangeLog:
    
    2018-04-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/81773
            PR fortran/83606
            Backport from trunk
            * gfortran.dg/coarray/get_to_indexed_array_1.f90: New test.
            * gfortran.dg/coarray/get_to_indirect_array.f90: New test.
    
    From-SVN: r259742

commit 77922dcd01b768fa40f98204c89562e1e0bff953
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 28 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r259735

commit 8759f23f62fadbcce65a46e5318f654484f294df
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 27 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r259693

commit 8e8eb5c6029b94f44bf7d6c5ba678e04f257f441
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Apr 26 10:00:24 2018 +0000

    Backport PRs 84873, 85168, 85244, 85284
    
    2018-04-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-04-09  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/85284
            * tree-ssa-loop-niter.c (number_of_iterations_exit_assumptions):
            Only use the niter constraining form of simple_iv when the exit
            is always executed.
    
            * gcc.dg/torture/pr85284.c: New testcase.
    
            2018-04-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/85244
            * tree-dfa.c (get_ref_base_and_extent): Reset seen_variable_array_ref
            after seeing a component reference with an adjacent field.  Treat
            refs to arrays at struct end of external decls similar to
            refs to unconstrained commons.
    
            * gcc.dg/torture/pr85244-1.c: New testcase.
            * gcc.dg/torture/pr85244-2.c: Likewise.
    
            2018-04-04  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/85168
            * tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Avoid
            propagating abnormals.
    
            * gcc.dg/torture/pr85168.c: New testcase.
    
            2018-03-16  Richard Biener  <rguenther@suse.de>
    
            PR c/84873
            * c-gimplify.c (c_gimplify_expr): Revert previous change.  Instead
            unshare the possibly folded expression.
    
            2018-03-15  Richard Biener  <rguenther@suse.de>
    
            PR c/84873
            * c-gimplify.c (c_gimplify_expr): Do not fold expressions.
    
            * c-c++-common/pr84873.c: New testcase.
    
    From-SVN: r259670

commit cbbf5e7cd464b0b2a1987d5a83fd87c0372634ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 26 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r259660

commit 8d9340dd5ae962e8b7ad177cde05c6fe8f7c3268
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 25 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r259627

commit c535ec76b517011a9dc2cab50b7730cc7eaefd5d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Apr 25 00:00:47 2018 +0000

    re PR fortran/85520 (Out of memory when declaring a character with len << 0)
    
    2018-04-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85520
            * decl.c (gfc_match_char_spec): Check for negative length and set to 0.
    
    2018-04-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85520
            * gfortran.dg/pr85520.f90: New test.
    
    From-SVN: r259624

commit eb300da42aa3bfd263e5f6948e0a408817d9abf3
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:19:46 2018 +0200

    Backport r259490
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-19  Martin Liska  <mliska@suse.cz>
    
            * lto-symtab.c (lto_symtab_resolve_symbols): Do not bail out
            for multiple PREVAILING_DEF_IRONLY for common symbols.
    
    From-SVN: r259605

commit 01cd8ab79c8a06b02242c15495fc49488e933d72
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:19:32 2018 +0200

    Backport r259459
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-18  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            PR sanitizer/85389
            * asan/asan_allocator.h (kAllocatorSpace): For __powerpc64__ change
            from 0xa0000000000ULL to ~(uptr)0.
    
    From-SVN: r259604

commit 670a229a232c880c2b54e010a2e8610824373ec5
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:19:11 2018 +0200

    Backport r259431
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-17  Martin Liska  <mliska@suse.cz>
    
            PR lto/85405
            * ipa-devirt.c (odr_types_equivalent_p): Remove trailing
            in message, remote space in between '_G' and '('.
    
    From-SVN: r259603

commit ac4cb6fae72a2d50177f71d5d5218bb684f64af4
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:18:57 2018 +0200

    Backport r259429
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-17  Jan Hubicka  <jh@suse.cz>
    
            PR lto/85405
            * ipa-devirt.c (odr_types_equivalent_p): Handle bit fields.
    
    From-SVN: r259602

commit 16b3803b210d4d416f50170c12a17fcc1751089d
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:18:42 2018 +0200

    Backport r259274
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Martin Liska  <mliska@suse.cz>
    
            PR lto/85248
            * lto-symtab.c (lto_symtab_merge_p): Do not check for
            TREE_VALUES of error attributes.
    
    From-SVN: r259601

commit 1e38c2c902341939d3249c9edf2fa981c628f397
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:18:25 2018 +0200

    Backport r259265
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Richard Biener  <rguenther@suse.de>
                        Martin Liska  <mliska@suse.cz>
    
            PR lto/85248
            * lto-symtab.c (lto_symtab_merge_p): Handle noreturn attribute.
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR lto/85248
            * gcc.dg/lto/pr85248_0.c: New test.
            * gcc.dg/lto/pr85248_1.c: New test.
    
    From-SVN: r259600

commit e7b57280ccd7222c714b1af7d09cceac60a74edc
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:17:48 2018 +0200

    Backport r258924
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-28  Jakub Jelinek  <jakub@redhat.com>
                        Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/85081
            * gimplify.c (asan_poison_variable): Don't do the check for
            gimplify_omp_ctxp here.
            (gimplify_decl_expr): Do it here.
            (gimplify_target_expr): Likewise.
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-28  Jakub Jelinek  <jakub@redhat.com>
                        Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/85081
            * g++.dg/asan/pr85081.C: New test.
    
    From-SVN: r259599

commit f53ce58761a2407a4ac63a3d4fa771f6d4a9cf4a
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:17:19 2018 +0200

    Backport r258705
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-21  Martin Liska  <mliska@suse.cz>
    
            PR ipa/84963
            * ipa-icf.c (sem_item_optimizer::fixup_points_to_sets): Remove
            not intended return statement.
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-21  Martin Liska  <mliska@suse.cz>
    
            PR ipa/84963
            * gfortran.dg/goacc/pr84963.f90: New test.
    
    From-SVN: r259598

commit 6bacc8813f5b13f9d7c7a799db15dd572adbad9f
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Apr 24 17:17:00 2018 +0200

    Backport r258480
    
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/84658.
            * (sem_item_optimizer::sem_item_optimizer): Initialize new
            vector.
            (sem_item_optimizer::~sem_item_optimizer): Release it.
            (sem_item_optimizer::merge_classes): Register variable aliases.
            (sem_item_optimizer::fixup_pt_set): New function.
            (sem_item_optimizer::fixup_points_to_sets): Likewise.
            * ipa-icf.h: Declare new variables and functions.
    2018-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/84658.
            * g++.dg/ipa/pr84658.C: New test.
    
    From-SVN: r259597

commit 9f286fb0f8c1877e0b8ca8c4d91d556b2d16127c
Author: Aaron Sawdey <acsawdey@linux.ibm.com>
Date:   Tue Apr 24 00:19:43 2018 +0000

    backport: re PR target/83660 (ICE with vec_extract inside expression statement)
    
    2018-04-23  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            Backport from mainline
            2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            PR target/83660
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Mark
            vec_extract expression as having side effects to make sure it gets
            a cleanup point.
    
    2018-04-23  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            Backport from mainline
            2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            PR target/83660
            * gcc.target/powerpc/pr83660.C: New test.
    
    From-SVN: r259590

commit d970ea332190f172963ae0407f51852c89fe4f46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 24 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r259588

commit 137924df2450c057c2d33838584270929dde486f
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Apr 23 23:52:47 2018 +0300

    Implement P0969
    
    Backport from mainline
    
    2018-04-05  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            Implement P0969
            * decl.c (find_decomp_class_base): Check accessibility instead
            of declared access, adjust diagnostic.
    
    From-SVN: r259579

commit 038b3ea9deae859662d88cb2c0f21dcedacb9585
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Apr 23 20:29:22 2018 +0000

    re PR middle-end/85496 (internal compiler error: in emit_move_insn, at expr.c:3722)
    
            PR middle-end/85496
            * expr.c (store_field): In the bitfield case, if the value comes from
            a function call and is returned in registers by means of a PARALLEL,
            do not change the mode of the temporary unless BLKmode and VOIDmode.
    
    From-SVN: r259576

commit 9e515759f005c55cbc59e4862b4079ec1d7d27d3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Apr 23 21:58:57 2018 +0200

    PR c++/85470 - wrong error with static data member.
    
            * decl.c (check_initializer): Check DECL_INITIALIZED_IN_CLASS_P.
            * typeck2.c (store_init_value): Likewise.
    
    Co-Authored-By: Jason Merrill <jason@redhat.com>
    
    From-SVN: r259572

commit 6fe4e5f3f11bdb0654c1eef054699b616c0d312d
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Apr 23 17:22:58 2018 +0300

    Implement P0961
    
    Backport from mainline
    
    2018-04-05  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            Implement P0961
            * decl.c (get_tuple_decomp_init): Check the templatedness
            of a member get.
    
    From-SVN: r259561

commit a9a1a8b742270e3b4d6540566cb7954c4eb0376b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 23 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259555

commit 657efff657a28d77c31a62316b9aa4f25ce0a606
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 22 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r259543

commit 88f14434371d444a73d876dc2f087c97efc523e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 21 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259538

commit 4462004c6e798b179496549aeb63b03faabb9cc6
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Fri Apr 20 07:19:10 2018 -0500

    backport: re PR target/83969 (ICE in final_scan_insn, at final.c:2997 (error: could not split insn) for powerpc targets)
    
    gcc/
            Backport from mainline
            2018-03-09  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83969
            * config/rs6000/rs6000.c (rs6000_offsettable_memref_p): New prototype.
            Add strict argument and use it.
            (rs6000_split_multireg_move): Update for new strict argument.
            (mem_operand_gpr): Disallow all non-offsettable addresses.
            * config/rs6000/rs6000.md (*movdi_internal64): Use YZ constraint.
    
    gcc/testsuite/
            PR target/85436
            * go.dg/pr85436.go: New test.
    
            Backport from mainline
            2018-03-09  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83969
            * gcc.target/powerpc/pr83969.c: New test.
    
    From-SVN: r259520

commit b47ba21e7b8c539f3b869da9067166f7101e2318
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 20 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r259514

commit 450096bc3f4cac9c34693b52fc99ec29c453372d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Apr 19 16:29:03 2018 +0100

    PR c++/85464 - missing location for -Wignored-qualifiers diagnostic
    
    The fix for PR c++/69733 caused a regression for conversion operators
    with redundant cv-qualifiers, changing an incorrect location to an
    unknown location. This restores it to the incorrect location (as was
    already done on trunk by the fix for PR c++/65775).
    
    gcc/cp:
    
            PR c++/85464 - missing location for -Wignored-qualifiers diagnostic
            * decl.c (grokdeclarator): If declspecs->locations[ds_type_spec]
            is UNKNOWN_LOCATION fall back to input_location.
    
    gcc/testsuite:
    
            PR c++/85464 - missing location for -Wignored-qualifiers diagnostic
            * g++.dg/diagnostic/pr85464.C: New.
    
    From-SVN: r259499

commit 44d20480c1374b8f370f3bb8dff45563fbd8ae18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 19 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r259482

commit e18af2cac1fb462e8d5603d93471d5d8c07e85ec
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Apr 18 14:13:29 2018 +0100

    PR libstdc++/85442 fix duplicate debuginfo for cxx11-ios_failure.cc
    
    2018-04-18  Jonathan Wakely  <jwakely@redhat.com>
                Jakub Jelinek  <jakub@redhat.com>
    
            PR libstdc++/85442
            * src/c++11/Makefile.am: Don't generate debuginfo again for
            cxx11-ios_failure-lt.s and cxx11-ios_failure.s files.
            * src/c++11/Makefile.in: Regenerate.
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    
    From-SVN: r259468

commit 0cf68da8b4f57bcc7788f762df5ddca939628c89
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Apr 18 11:42:10 2018 +0000

    [ARM] Fix PR85261: ICE with FPSCR setter builtin
    
    Instruction pattern for setting the FPSCR expects the input value to be
    in a register. However, __builtin_arm_set_fpscr expander does not ensure
    that this is the case and as a result GCC ICEs when the builtin is
    called with a constant literal.
    
    This commit fixes the builtin to force the input value into a register.
    It also remove the unneeded volatile in the existing fpscr test and
    fixes the function prototype.
    
    2018-04-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2018-04-11  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/85261
        * config/arm/arm-builtins.c (arm_expand_builtin): Force input operand
        into register.
    
        gcc/testsuite/
        PR target/85261
        * gcc.target/arm/fpscr.c: Add call to __builtin_arm_set_fpscr with
        literal value.  Expect 2 MCR instruction.  Fix function prototype.
        Remove volatile keyword.
    
    From-SVN: r259465

commit a3d9aa9ad302db50de2e57e388aeb1d9fa507037
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 18 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r259454

commit f6fc2738b72e2fd6f65eec7a561f3aa17dde24a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 17 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259425

commit 30948e091333554ed16f3582cbf646458fc4d0b8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 16 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259391

commit 5f3c1d19b327e8ec9c47e28f22ccf9a491cef1c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 15 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259388

commit d5bfdbf17d195549e42694114ebfd1b9aa917d2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 14 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r259382

commit dc70c3122e07a1c0d8b0bab7c0f21db733a49cea
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Apr 13 11:55:37 2018 +0100

    Fix broken sed command from previous commit
    
            * src/c++11/Makefile.am: Fix sed command.
            * src/c++11/Makefile.in: Regenerate.
    
    From-SVN: r259375

commit c46c4b5ccca4789c23dfbcc1cfeb03db32c27d39
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Apr 13 11:19:30 2018 +0100

    Fix __iosfail_type_info hack to work on darwin
    
            * src/c++11/Makefile.am: Rewrite sed rule to be less fragile and to
            handle mangled names starting with double underscores on darwin.
            * src/c++11/Makefile.in: Regenerate.
    
    From-SVN: r259372

commit e9d8c7dbe7cab69afa1bfa15683f694b07db3b48
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 13 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r259362

commit 0ab1752faeabbe9a822241e900375eef8a802ca7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Apr 12 21:55:25 2018 +0100

    Fix comments that misspell names of files and classes
    
            * src/c++11/Makefile.am: Fix comment.
            * src/c++11/Makefile.in: Regenerate.
            * src/c++11/cxx11-ios_failure.cc: Fix comment.
            * src/c++98/ios_failure.cc: Likewise.
    
    From-SVN: r259358

commit 07026d892436a7291efe2642aefcb85d52305887
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Apr 12 20:06:50 2018 +0100

    PR libstdc++/85222 allow catching iostream errors as gcc4-compatible ios::failure
    
    Define a new exception type derived from std::ios::failure[abi:cxx11]
    which also aggregates an object of the gcc4-compatible ios::failure
    type. Make __throw_ios_failure throw this new type for iostream errors
    that raise exceptions. Provide custom type info for the new type so that
    it can be caught by handlers for the gcc4-compatible ios::failure type
    as well as handlers for ios::failure[abi:cxx11] and its bases.
    
    Backport from mainline
    2018-04-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85222
            * src/c++11/Makefile.am [ENABLE_DUAL_ABI]: Add special rules for
            cxx11-ios_failure.cc to rewrite type info for __ios_failure.
            * src/c++11/Makefile.in: Regenerate.
            * src/c++11/cxx11-ios_failure.cc (__ios_failure, __iosfail_type_info):
            New types.
            [_GLIBCXX_USE_DUAL_ABI] (__throw_ios_failure): Define here.
            * src/c++11/ios.cc (__throw_ios_failure): Remove definition.
            (_GLIBCXX_USE_CXX11_ABI): Don't define here.
            * src/c++98/ios_failure.cc (__construct_ios_failure)
            (__destroy_ios_failure, is_ios_failure_handler): New functions.
            [!_GLIBCXX_USE_DUAL_ABI] (__throw_ios_failure): Define here.
            * testsuite/27_io/ios_base/failure/dual_abi.cc: New.
            * testsuite/27_io/basic_ios/copyfmt/char/1.cc: Revert changes to
            handler types, to always catch std::ios_base::failure.
            * testsuite/27_io/basic_ios/exceptions/char/1.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/char/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/char/12297.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/ios_base/storage/2.cc: Likewise.
    
    From-SVN: r259352

commit 8b6c3882d1096f5875c6a78561df7abba5b14fe9
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Thu Apr 12 11:08:35 2018 +0000

    Ada: Fix s-oscons.ads generation
    
    The $(GNATLIBCFLAGS) are already included in $(GNATLIBCFLAGS_FOR_C).
    
    We must call the C compiler with the right machine flags.  So, add
    $(GNATLIBCFLAGS_FOR_C) to $(OSCONS_EXTRACT).  For example, on a bi-arch
    compiler supporting 32-bit and 64-bit instruction sets we pick otherwise
    only one variant due to a missing -m32 or -m64 flag.
    
    gcc/ada
            * gcc-interface/Makefile.in (OSCONS_CPP): Remove redundant
            $(GNATLIBCFLAGS).
            (OSCONS_EXTRACT): Add $(GNATLIBCFLAGS_FOR_C).
    
    From-SVN: r259343

commit 7f4f7c91fbe4a198341fc021553205ecb1886389
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Apr 12 10:20:11 2018 +0000

    IBM Z: Spectre: Prevent thunk cfi to be emitted with -fno-dwarf2-cfi-asm
    
    The CFI magic we emit as part of the indirect branch thunks in order to
    have somewhat sane unwind information must not be emitted with
    -fno-dwarf2-cfi-asm.
    
    gcc/ChangeLog:
    
    2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_output_indirect_thunk_function): Check
            also for flag_dwarf2_cfi_asm.
    
    gcc/testsuite/ChangeLog:
    
    2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/nobp-no-dwarf2-cfi.c: New test.
    
    From-SVN: r259341

commit 21082ba981ce960b2e7398ffc08afeb9357087a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 12 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259335

commit de4394a73c616c06b524da91c7e0cc91b9b06035
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Apr 11 20:36:37 2018 +0200

    alpha.md (stack_probe_internal): Rename from "probe_stack".
    
            * config/alpha/alpha.md (stack_probe_internal): Rename
            from "probe_stack".  Update all callers.
    
    From-SVN: r259329

commit 6736006840328cd5a8a49489d71f3133f6bf37fe
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Apr 11 09:47:21 2018 +0000

    [ARM] Fix PR85203: cmse_nonsecure_caller returns wrong result
    
    __builtin_cmse_nonsecure_caller implementation returns true in almost
    all cases due to 2 separate bugs:
    
    * gen_addsi is used instead of gen_andsi to retrieve the lsb
    * the lsb boolean value is not negated but the specification [1] says
      the intrinsic should return true for a nonsecure caller and a
      nonsecure caller is characterized with LR's lsb being 0
    
    This was not caught due to (1) lack of runtime test and (2) the existing
    RTL scan not taking into account that '.' matches newline in Tcl regular
    expressions.
    
    This commit fixes the implementation issues and improves testing of
    cmse_nonsecure_caller by (1) adding a runtime test for the secure caller
    case and (2) looking for an SET insn of an AND expression in the right
    function. This leaves the nonsecure caller case only partly tested
    since the exact value being AND and the negation are not covered by the
    scan and the existing test infrastructure does not allow 2 separate
    compilation and link to be performed. It is enough though to catch the
    current incorrect behavior.
    
    The commit also reorganize the scan directives in cmse-1.c to more
    easily identify what function they are intended to test in the file.
    
    2018-04-11  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2018-04-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/85203
        * config/arm/arm-builtins.c (arm_expand_builtin): Change
        expansion to perform a bitwise AND of the argument followed by a
        boolean negation of the result.
    
        gcc/testsuite/
        PR target/85203
        * gcc.target/arm/cmse/cmse-1.c: Tighten cmse_nonsecure_caller RTL scan
        to match a single insn of the baz function.  Move scan directives at
        the end of the file below the functions they are trying to test for
        better readability.
        * gcc.target/arm/cmse/cmse-16.c: New testcase.
    
    From-SVN: r259309

commit 7b8cb2f23202eb8cd5cd91c6357d91b990f8537c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 11 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259306

commit c51ea89a49bd18fdf2a0ca8a19936d6226c9b40b
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Tue Apr 10 18:55:43 2018 +0200

    [PR target/85056] Address -Wmaybe-uninitialized diagnostic
    
            gcc/testsuite/
            * gcc.target/nvptx/pr85056.c (main): Initialize "sum".
    
    trunk r259288
    
    From-SVN: r259289

commit 6d90490ddbb9df45e585bfd6c36d816275c76749
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 10 10:29:52 2018 -0400

    PR c++/85279 - dump_expr doesn't understand decltype.
    
            * error.c (dump_expr): Handle DECLTYPE_TYPE.
    
    From-SVN: r259280

commit f3f1033ca25dacf62f4e7694cdf27dfa977b54c7
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Apr 10 12:59:08 2018 +0000

    [AArch64] PR target/84748: Mark *compare_cstore<mode>_insn as clobbering CC reg
    
            Backport from mainline
            2018-03-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/84748
            * config/aarch64/aarch64.md (*compare_cstore<mode>_insn): Mark pattern
            as clobbering CC_REGNUM.
    
            * gcc.c-torture/execute/pr84748.c: New test.
    
    From-SVN: r259270

commit 0b35ecda198c0ed55cf2d745011b0f116ab9d4fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 10 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r259262

commit 643f5d1cf9ce08f0d9fa12d0a7df80fbb2868705
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 9 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r259226

commit ee104097e9a54f63ba79475c3e8b1e580739610f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 8 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r259214

commit 4d6a0466b70554941620a7d1b7585ef0b6c440f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 7 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259199

commit 13a9fe0d3cc2807cb7aad7d9c5f09cc613bb49cf
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Apr 6 22:32:39 2018 +0000

    re PR middle-end/85196 (ICE in extract_insn, at recog.c:2311: unrecognizable insn)
    
            PR target/85196
            * config/sparc/sparc.c (sparc_expand_move): Deal with symbolic operands
            based on LABEL_REF.  Remove useless assertion.
            (pic_address_needs_scratch): Fix formatting.
            (sparc_legitimize_pic_address): Minor tweaks.
            (sparc_delegitimize_address): Adjust assertion accordingly.
            * config/sparc/sparc.md (movsi_pic_label_ref): Change label_ref_operand
            into symbolic_operand.
            (movsi_high_pic_label_ref): Likewise.
            (movsi_lo_sum_pic_label_ref): Likewise.
            (movdi_pic_label_ref): Likewise.
            (movdi_high_pic_label_ref): Likewise.
            (movdi_lo_sum_pic_label_ref): Likewise.
    
    From-SVN: r259195

commit 54b3f890763813e248975fed9c489a88b2339909
Author: Amaan Cheval <amaan.cheval@gmail.com>
Date:   Fri Apr 6 20:59:51 2018 +0000

    config.gcc (x86_64-*-rtems*): Add rtems.h to tm_file for custom LIB_SPEC setup.
    
    2018-04-06  Amaan Cheval  <amaan.cheval@gmail.com>
    
            * config.gcc (x86_64-*-rtems*): Add rtems.h to tm_file for
            custom LIB_SPEC setup.
    
    From-SVN: r259191

commit 5cf1db4252faa327028227eb2cf7f78e3b9fba86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 6 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259158

commit e14242503373c0e2372e9b3fde0af94cc44438ed
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Apr 5 20:43:26 2018 +0200

    re PR target/85193 (ICE: SIGSEGV in memory_operand at recog.c:1361 with -O2 -fno-tree-ccp -fno-tree-fre -mno-sse)
    
            PR target/85193
            * config/i386/i386.md (define_attr "memory"): Handle rotate1 type.
    
    testsuite/ChangeLog:
    
            PR target/85193
            * gcc.target/i386/pr85193.c: New test.
    
    From-SVN: r259150

commit e0f9fc21c0db54c9fa2a771372a3112339fb4997
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Apr 5 14:27:49 2018 -0400

    PR c++/82152 - ICE with class deduction and inherited ctor.
    
            * pt.c (do_class_deduction): Ignore inherited ctors.
    
    From-SVN: r259147

commit 754ce5996e4cd24944d4cafc03d0886bf4ab1c99
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Apr 5 14:27:43 2018 -0400

    PR c++/84665 - ICE with array of empty class.
    
            * decl2.c (cp_check_const_attributes): Use fold_non_dependent_expr.
    
    From-SVN: r259146

commit b06634744d061d0e43ad26c45b45fa2d744da621
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Apr 5 14:27:37 2018 -0400

    PR c++/85006 - -fconcepts ICE with A<auto...> return type
    
            * pt.c (tsubst_pack_expansion): Allow unsubstituted auto pack.
    
    From-SVN: r259145

commit f8862cf4dd021a852b33693f51be4f6fce87ab46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 5 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259110

commit b65f99bc93b396beedb3ccac210088f0c64df84a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Apr 4 14:51:32 2018 -0500

    backport: re PR rtl-optimization/84878 (ICE: Segmentation fault (in add_cross_iteration_register_deps))
    
    gcc/
            Backport from mainline
            2018-04-04  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR rtl-optimization/84878
            * ddg.c (add_cross_iteration_register_deps): Use DF_REF_BB to determine
            the basic block.  Assert the use reference is not artificial and that
            it has an associated insn.
    
    gcc/testsuite/
            Backport from mainline
            2018-04-04  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR rtl-optimization/84878
            * gcc.target/powerpc/pr84878.c: New test.
    
    From-SVN: r259103

commit fdbeab6d5f6f76c683a38f0a508abc0cdd5b0444
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 4 12:46:00 2018 -0400

    PR c++/85118 - wrong error with generic lambda and std::bind.
    
            * call.c (add_template_conv_candidate): Disable if there are any
            call operators.
    
    From-SVN: r259094

commit dcc462f56274c9bdedf395dd5bd82002709f9878
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 4 12:45:53 2018 -0400

    PR c++/85148 - ICE with 'this' in array NSDMI.
    
            * tree.c (replace_placeholders_r): Use handled_component_p.
    
    From-SVN: r259093

commit aa840388340a09cfc6bba85bbe645c4782160e73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 4 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r259063

commit 3f24bbf3eb48112865585794539c88fe91b4f28a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Apr 3 22:41:37 2018 +0200

    i386.c (emit_i387_cw_initialization): Always use logic instructions when changing rounding bits to preserve precision...
    
            * config/i386/i386.c (emit_i387_cw_initialization): Always use logic
            instructions when changing rounding bits to preserve precision bits
            in the x87 control word.
    
    From-SVN: r259055

commit 59cd75da1479d7cb32e2710404060734b08f70c0
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 3 15:14:03 2018 -0400

    PR c++/85113 - ICE with constexpr and __builtin_constant_p.
    
            * constexpr.c (cxx_eval_builtin_function_call): Only defer
            __builtin_constant_p if ctx->quiet.
    
    From-SVN: r259053

commit cd94b4d82501f645dfde556991dc83191ce549d1
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 3 13:46:41 2018 -0400

    Fix noexcept merging with system headers.
    
            * typeck.c (merge_types): Limit matching attribute shortcut to
            the default case.
    
    From-SVN: r259048

commit 2db525f0597731b782bdf43c2ba97f67afb3ab66
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 3 13:46:35 2018 -0400

    PR c++/64095 - auto... parameter pack.
    
            * parser.c (cp_parser_parameter_declaration): Handle turning autos
            into packs here.
            (cp_parser_parameter_declaration_list): Not here.
    
    From-SVN: r259047

commit 487f89d84b554d57ab6a7904d0247e2aeb26bbf6
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Apr 3 13:46:30 2018 -0400

    PR c++/85060 - wrong-code with call to base member in template.
    
            * search.c (any_dependent_bases_p): Check uses_template_parms
            rather than processing_template_decl.
    
    From-SVN: r259046

commit 6471d76801496a2583f67abf09a2d4e754296c59
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Tue Apr 3 07:04:22 2018 -0700

    re PR target/85056 ([nvptx] wrong declaration of external arrays)
    
    PR target/85056
    
            Backport from mainline
            2018-03-27  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/85056
    
            gcc/
            * config/nvptx/nvptx.c (nvptx_assemble_decl_begin): Add '[]' to
            extern array declarations.
    
            gcc/testsuite/
            * testsuite/gcc.target/nvptx/pr85056.c: New test.
            * testsuite/gcc.target/nvptx/pr85056a.c: New test.
    
    From-SVN: r259032

commit 4ccb16405e2f4869b69ba85c368abd0fc2c1a6d9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 3 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r259023

commit dc60246a1b270a3a90d10c3188c704838932a06b
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 2 14:19:37 2018 -0500

    backport: re PR target/84912 (__builtin_divde* produce Internal Compiler Error when compiled -m32)
    
    gcc/
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * config/rs6000/rs6000.h: Update copyright date.
            (RS6000_BTM_POWERPC64): New define.
            (RS6000_BTM_COMMON): Add RS6000_BTM_POWERPC64.
            * config/rs6000/rs6000.c: Update copyright date.
            (rs6000_builtin_mask_calculate): Add support for RS6000_BTM_POWERPC64.
            (rs6000_invalid_builtin): Add handling for RS6000_BTM_POWERPC64
            (rs6000_builtin_mask_names): Add RS6000_BTM_POWERPC64.
            * config/rs6000/rs6000-builtin.def: Update copyright date.
            (BU_P7_POWERPC64_MISC_2): New macro definition.
            (DIVDE): Use it.
            (DIVDEU): Likewise.
    
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * config/rs6000/rs6000-builtin.def (DIVWEO): Delete macro expansion.
            (DIVWEUO): Likewise.
            (DIVDEO): Likewise.
            (DIVDEUO): Likewise.
            * config/rs6000/rs6000.c (builtin_function_type): Remove support for
            DIVWEUO and DIVDEUO.
            * config/rs6000/rs6000.md: Update copyright date.
            (UNSPEC_DIVEO, UNSPEC_DIVEUO): Delete unspecs.
            (UNSPEC_DIV_EXTEND): Remove deleted unspecs.
            (div_extend): Likewise.
            * doc/extend.texi: Update copyright date.
            (__builtin_divweo): Remove documentation for deleted builtin function.
            (__builtin_divweuo): Likewise.
            (__builtin_divdeo): Likewise.
            (__builtin_divdeuo): Likewise.
    
    gcc/testsuite/
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * gcc.target/powerpc/extend-divide-1.c (div_weo): Remove test for
            deleted builtin function.
            (div_weuo): Likewise.
            * gcc.target/powerpc/extend-divide-2.c (div_deo): Likewise.
            (div_deuo): Likewise.
    
    From-SVN: r259016

commit a86a5cadd85215ac48e1e51a55b4b8769c5f6e06
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 2 10:24:01 2018 -0500

    backport: re PR target/81143 (New test case gcc.target/powerpc/pr79799-2.c fails on powerpc BE)
    
            Backport from mainline
            2018-02-08  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/81143
            * gcc.target/powerpc/pr79799-2.c: Use __LITTLE_ENDIAN__.
    
    From-SVN: r259011

commit f1cc69541f874b2c00ea6489011d5d8766fb9c32
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 2 09:35:07 2018 -0500

    backport: re PR testsuite/80546 (FAIL: gcc.target/powerpc/bool3-p[78].c scan-assembler-not)
    
            Backport from mainline
            2018-03-30  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80546
            * config/rs6000/vsx.md (??r): New mode attribute.
            (*vsx_mov<mode>_64bit): Use it.
            (*vsx_mov<mode>_32bit): Likewise.
    
    From-SVN: r259009

commit f5508e7126629a1d39711f887329c707c0162e1b
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 2 12:03:16 2018 +0000

    i386: Enable AVX/AVX512 features only if supported by OSXSAVE
    
    Enable AVX and AVX512 features only if their states are supported by
    OSXSAVE.
    
            Backport from mainline
            PR target/85100
            * config/i386/cpuinfo.c (XCR_XFEATURE_ENABLED_MASK): New.
            (XSTATE_FP): Likewise.
            (XSTATE_SSE): Likewise.
            (XSTATE_YMM): Likewise.
            (XSTATE_OPMASK): Likewise.
            (XSTATE_ZMM): Likewise.
            (XSTATE_HI_ZMM): Likewise.
            (XCR_AVX_ENABLED_MASK): Likewise.
            (XCR_AVX512F_ENABLED_MASK): Likewise.
            (get_available_features): Enable AVX and AVX512 features only
            if their states are supported by OSXSAVE.
    
    From-SVN: r259006

commit eef06f4f937be8c095bbeedca52b61032555e4a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 2 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r259001

commit 7e28c873af30293804252b3918150cb25a1a80ac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 1 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258992

commit cbd411033c09127df982d84f345442dc6e8132af
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 31 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258985

commit c053e53d96baed1f2cd26820801d35ae7334d1f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 30 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r258969

commit f98fc319446b54f0b056ad44a30df784bfec1ac6
Author: Sebastian Peryt <sebastian.peryt@intel.com>
Date:   Thu Mar 29 16:51:03 2018 +0200

    re PR c++/84783 (Missing _mm256_permutexvar_epi64() intrinsic for AVX512VL)
    
    2018-03-29  Sebastian Peryt  <sebastian.peryt@intel.com>
    
            gcc/ChangeLog:
            PR c++/84783
            * config/i386/avx512vlintrin.h (_mm256_permutexvar_epi64)
            (_mm256_permutexvar_epi32, _mm256_permutex_epi64): New intrinsics.
    
            gcc/testsuite/ChangeLog:
            PR c++/84783
    
            * gcc.target/i386/avx512vl-vpermd-1.c (_mm256_permutexvar_epi32):
            Test new intrinsic.
            * gcc.target/i386/avx512vl-vpermq-imm-1.c (_mm256_permutex_epi64):
            Ditto.
            * gcc.target/i386/avx512vl-vpermq-var-1.c (_mm256_permutexvar_epi64):
            Ditto.
            * gcc.target/i386/avx512f-vpermd-2.c: Do not check for AVX512F_LEN.
            * gcc.target/i386/avx512f-vpermq-imm-2.c: Ditto.
            * gcc.target/i386/avx512f-vpermq-var-2.c: Ditto.
    
    From-SVN: r258958

commit 789da6ef2cc416dba156fb4b16f06128474d9a95
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Thu Mar 29 17:07:42 2018 +0300

    Implement P0962
    
    Backport from mainline
    2018-03-23  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            Implement P0962
            * parser.c (cp_parser_perform_range_for_lookup): Change
            the condition for deciding whether to use members.
    
    From-SVN: r258955

commit 1587a6644a034bfd65152917cb66fbe6ef8383c9
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Thu Mar 29 09:19:45 2018 +0000

    [ARM][PR target/84826] Fix ICE in extract_insn, at recog.c:2304 on
    arm-linux-gnueabihf
    
    This patch backports r258777 and r258805 to gcc-7-branch
    and gcc-6-branch. The same ICE occurs in both the branches with
    -fstack-check. Thus the test case directive has been changed.
    
    The discussion on the patch that went into trunk is:
    https://gcc.gnu.org/ml/gcc-patches/2018-03/msg01120.html
    
    ChangeLog entries:
    
    *** gcc/ChangeLog ***
    
    2018-03-29  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline
            2018-03-22  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * config/arm/arm.h (machine_function): Add static_chain_stack_bytes.
            * config/arm/arm.c (arm_compute_static_chain_stack_bytes): Avoid
            re-computing once computed.
            (arm_expand_prologue): Compute machine->static_chain_stack_bytes.
            (arm_init_machine_status): Initialize
            machine->static_chain_stack_bytes.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-03-29  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.target/arm/pr84826.c: Change dg-option to -fstack-check.
    
            Backport from mainline
            2018-03-23  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * gcc.target/arm/pr84826.c: Add dg directive.
    
            Backport from mainline
            2018-03-22  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * gcc.target/arm/pr84826.c: New test.
    
    From-SVN: r258948

commit 60b17aa843e71bb42f71fe227ea4328fd5443980
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 29 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258945

commit 2ebdf90a96f256f2e201b941349cbe5c7281d9b6
Author: Carl Love <cel@us.ibm.com>
Date:   Wed Mar 28 20:53:59 2018 +0000

    crypto-builtin-1-runnable: Add p8vector_hw to dg-do run.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-28  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-1-runnable:  Add
            p8vector_hw to dg-do run.
    
    From-SVN: r258937

commit 186778f45f377eb6edb0421cfec104a0ee1fd439
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Mar 28 17:34:08 2018 +0000

    re PR fortran/85084 (ICE: out of memory allocating 18446744073709551600 bytes ...)
    
    2018-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85084
            Backport from trunk.
            * frontend-passes.c (gfc_run_passes): Do not run front-end
            optimizations if a previous error occurred.
    
    2018-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85084
            Backport from trunk.
            * gfortran.dg/matmul_rank_1.f90: New test.
    
    From-SVN: r258926

commit 58cde6d46d4469d2215f768adf35ed4d7f8d37ec
Author: Kyrylo Tkachov <ktkachov@gcc.gnu.org>
Date:   Wed Mar 28 10:40:12 2018 +0000

    Fix up ChangeLog date from my previous commit
    
    From-SVN: r258919

commit 661a8af800e55bbc83bd565387d2df0e56912c84
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Wed Mar 28 10:15:47 2018 +0000

    [PR81647][AARCH64] Fix handling of Unordered Comparisons in aarch64-simd.md
    
    This is a backport of r258653 and r258672.
    
    ChangeLog Entries:
    
    *** gcc/ChangeLog ***
    
    2018-03-28  Sudakshina Das  <sudi.das@arm.com>
    
            2018-03-19  Sudakshina Das  <sudi.das@arm.com>
            PR target/81647
    
            * config/aarch64/aarch64-simd.md (vec_cmp<mode><v_cmp_result>): Modify
            instructions for UNLT, UNLE, UNGT, UNGE, UNEQ, UNORDERED and ORDERED.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-03-28  Sudakshina Das  <sudi.das@arm.com>
                Christophe Lyon  <christophe.lyon@linaro.org>
    
            2018-03-20  Christophe Lyon  <christophe.lyon@linaro.org>
    
            PR target/81647
            * gcc.target/aarch64/pr81647.c: Require fenv_exceptions.
    
            2018-03-19  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/81647
            * gcc.target/aarch64/pr81647.c: New.
    
    Co-Authored-By: Christophe Lyon <christophe.lyon@linaro.org>
    
    From-SVN: r258917

commit f00bed0e602d3d024d9867922ad30764e34b4670
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Mar 28 09:20:22 2018 +0000

    [arm] PR target/85026: Fix ldrsh length estimate in Thumb state
    
            Backport from mainline
            2018-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/85026
            * config/arm/arm.md (unaligned_loadhis): Remove first alternative.
            Clean up attributes.
    
            * g++.dg/pr85026.C: New test.
    
    From-SVN: r258916

commit 5c3427ecbe0f4661c0fda6516100ddce7194b97a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 28 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258911

commit e6708d874e5da4572cbdec0933a67b97eff1efed
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Mar 28 01:13:02 2018 +0200

    rs6000: -mreadonly-in-sdata (PR82411)
    
    This adds a new option -mreadonly-in-sdata (on by default) that
    controls whether readonly data can be put in sdata.  (For EABI this
    does nothing, readonly data is put in sdata2 as usual).
    
    
            Backport from mainline
            2018-03-08  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/82411
            * config/rs6000/rs6000.c (rs6000_elf_in_small_data_p): Don't put
            readonly data in sdata, if that is disabled.
            * config/rs6000/sysv4.opt (mreadonly-in-sdata): New option.
            * doc/invoke.texi (RS/6000 and PowerPC Options): Document
            -mreadonly-in-sdata option.
    
    
            Backport from mainline
            2018-03-08  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/82411
            * gcc.target/powerpc/ppc-sdata-2.c: Skip if -mno-readonly-in-sdata.
    
    From-SVN: r258907

commit 404879f2181721d0e9727d87661f4960f50aa321
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Tue Mar 27 13:26:56 2018 +0000

    [ARM][PR82989] Fix unexpected use of NEON instructions for shifts
    
    This is a backport of r258677 and r258723 of trunk.
    
    *** gcc/ChangeLog ***
    
    2018-03-27  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline:
            2018-03-20  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * config/arm/neon.md (ashldi3_neon): Update ?s for constraints
            to favor GPR over NEON registers.
            (<shift>di3_neon): Likewise.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-03-27  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline:
            2018-03-20  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * gcc.target/arm/pr82989.c: New test.
    
            Backport from mainline:
            2018-03-21  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * gcc.target/arm/pr82989.c: Change dg scan-assembly directives.
    
    From-SVN: r258883

commit 308aa0e25ab21759c91598f5aa395ff7f66d4592
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Mar 27 11:19:55 2018 +0000

    [arm] PR target/82518: Return false in ARRAY_MODE_SUPPORTED_P for BYTES_BIG_ENDIAN
    
            Backport from mainline
            2018-03-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/82518
            * config/arm/arm.c (arm_array_mode_supported_p): Return false for
            BYTES_BIG_ENDIAN.
    
            * lib/target-supports.exp (check_effective_target_vect_load_lanes):
            Disable for armeb targets.
            * gcc.target/arm/pr82518.c: New test.
    
    From-SVN: r258874

commit 38c2c4ecb853f9ffdf9311d4cae4deabc901b4c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 27 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r258868

commit da0a8eefd3145176ce921c15e32de24b898b139d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 26 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258848

commit 6cf78ba794cf0d24f1b545a2f0f6c0b2e8924594
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 25 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r258837

commit 6465f2597b44c3d5f17a105023670f505a213b6e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 24 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r258830

commit 90d813a4151e21865145b9e99befab64049481ef
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Fri Mar 23 12:48:58 2018 -0500

    backport: re PR target/83789 (__builtin_altivec_lvx fails for powerpc for altivec-4.c)
    
            Backport from mainline
            2018-03-20  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83789
            * config/rs6000/altivec.md (altivec_lvx_<mode>_2op): Delete define_insn.
            (altivec_lvx_<mode>_1op): Likewise.
            (altivec_stvx_<mode>_2op): Likewise.
            (altivec_stvx_<mode>_1op): Likewise.
            (altivec_lvx_<VM2:mode>): New define_expand.
            (altivec_stvx_<VM2:mode>): Likewise.
            (altivec_lvx_<VM2:mode>_2op_<P:mptrsize>): New define_insn.
            (altivec_lvx_<VM2:mode>_1op_<P:mptrsize>): Likewise.
            (altivec_stvx_<VM2:mode>_2op_<P:mptrsize>): Likewise.
            (altivec_stvx_<VM2:mode>_1op_<P:mptrsize>): Likewise.
            * config/rs6000/rs6000.c (altivec_expand_lv_builtin): Likewise.
            (altivec_expand_stv_builtin): Likewise.
            (altivec_expand_builtin): Likewise.
            * config/rs6000/vector.md: Likewise.
    
    From-SVN: r258819

commit beb3bcf419c8127bbb58878f65b076c668070781
Author: Carl Love <cel@us.ibm.com>
Date:   Fri Mar 23 15:08:28 2018 +0000

    backport: r6000.c (rtx_is_swappable_p): Add case UNSPEC_VPERMXOR.
    
    gcc/ChangeLog:
    
    2018-03-23  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline:
            2018-03-14  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/r6000.c (rtx_is_swappable_p): Add case UNSPEC_VPERMXOR.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-23  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-1-runnable.c: New test file.
    
    From-SVN: r258815

commit ece0cfbf67d4bba16ee513fcffd9b5240e283abd
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:40:06 2018 -0400

    PR c++/78489 - Substitution in wrong order
    
            PR c++/84489
            * pt.c (type_unification_real): Revert last two changes.
    
    From-SVN: r258814

commit ccc923e125417ba402bdc431005ffdc06138ea11
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:40:00 2018 -0400

    PR c++/71834 - template-id with too few arguments.
    
            * pt.c (coerce_template_parms): Make sure we gave an error.
    
    From-SVN: r258813

commit 7301f1f718aa31a68b021979940ab4a1cf52696d
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:39:54 2018 -0400

    PR c++/84937 - ICE with class deduction and auto.
    
            * pt.c (rewrite_template_parm): Fix auto handling.
    
    From-SVN: r258812

commit 508d86930bbfbaa3598235159bf8ee9d57ec024e
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:39:47 2018 -0400

    PR c++/80227 - SFINAE and negative array size.
    
            * decl.c (compute_array_index_type): Convert to signed for negative
            check.
    
    From-SVN: r258811

commit 8f9c5cac9e8db198c52264a1aa74fc1e38a7ffbd
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:39:36 2018 -0400

    PR c++/84839 - ICE with decltype of parameter pack.
    
            * pt.c (tsubst_pack_expansion): Set cp_unevaluated_operand while
            instantiating dummy parms.
    
    From-SVN: r258810

commit 9862e7a2969c504e70e09dc14152bb0b13791e30
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:39:30 2018 -0400

    PR c++/84798 - ICE with auto in abstract function declarator.
    
            * parser.c (cp_parser_parameter_declaration_clause): Check
            parser->default_arg_ok_p.
    
    From-SVN: r258809

commit d00ef60fb5fadeeab73b19102af6e304df5e8570
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 10:39:25 2018 -0400

    PR c++/84355 - ICE with deduction for member class template.
    
            * pt.c (tsubst) [TEMPLATE_TYPE_PARM]: Always substitute into
            CLASS_PLACEHOLDER_TEMPLATE.
    
    From-SVN: r258808

commit ce29952af4761bb66a04cebc057ab72e0ffaf1af
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Fri Mar 23 14:39:19 2018 +0000

    PR c++/82336 - link error with list-init default argument.
    
            * decl.c (check_default_argument): Unshare an initializer list.
    
    Co-Authored-By: Jason Merrill <jason@redhat.com>
    
    From-SVN: r258807

commit cf066fe583eeff893b5cfcb90c59088d5df0e700
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 23 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r258788

commit c8ea68cd43b0ed5eda35fdff1f48c8c5f7965a65
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Mar 22 17:42:32 2018 +0000

    xfail experimental/memory_resource/resource_adaptor.cc on 32-bit Solaris/x86 (PR libstdc++/77691)
    
            PR libstdc++/77691
            * testsuite/experimental/memory_resource/resource_adaptor.cc:
            xfail execution on 32-bit Solaris/x86.
    
    From-SVN: r258778

commit 49f957ecdd0d77d1900431e8b2c610933f755e34
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Mar 22 14:18:17 2018 +0000

    PR c++/71638, ICE with NSDMI and reference.
    
            * constexpr.c (cxx_eval_bare_aggregate): Update constructor's flags
            even when we replace an element.
    
            * g++.dg/cpp0x/nsdmi14.C: New test.
            * g++.dg/cpp1y/nsdmi-aggr10.C: New test.
    
    From-SVN: r258772

commit c66866e50f8cf6c3e5dbafa4f0bfeea3096d0fb6
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Mar 22 14:17:03 2018 +0000

    re PR c++/84927 (ICE with NSDMI and reference)
    
            PR c++/84927
            * constexpr.c (cxx_eval_bare_aggregate): Update constructor's flags
            as we evaluate the elements.
            (cxx_eval_constant_expression): Verify constructor's flags
            unconditionally.
    
    From-SVN: r258771

commit 3ad015a1b7eacae56ad0ee420adecd2794a6d050
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu Mar 22 14:14:06 2018 +0000

    re PR c++/84854 (ICE: unexpected expression in cxx_eval_constant_expression, at cp/constexpr.c:4774)
    
            PR c++/84854
            * semantics.c (finish_if_stmt_cond): Check if the type of the condition
            is boolean.
    
            * g++.dg/cpp1z/constexpr-if13.C: New test.
    
    From-SVN: r258770

commit eaf27fcd8f0a24293dc573f5f8637749861129bc
Author: Tom de Vries <tom@codesourcery.com>
Date:   Thu Mar 22 10:39:43 2018 +0000

    backport "[tail-merge] Don't merge bbs with bb_has_abnormal_pred"
    
    2018-03-22  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2018-03-22  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/84956
            * tree-ssa-tail-merge.c (find_clusters_1): Skip bbs with
            bb_has_abnormal_pred.
    
            * gcc.dg/pr84956.c: New test.
    
    From-SVN: r258759

commit 9645746829db498a389a81e0e4837eb106d66a82
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 22 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r258753

commit 7be869fa286950e9ed551e7beaafdd6c4f91c649
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Mar 21 01:26:25 2018 +0000

    re PR fortran/85001 (ICE in gfc_build_array_type, at fortran/trans-types.c:1420)
    
    2018-03-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85001
            * interface.c (symbol_rank): Remove bogus null pointer check that
            crept in when translating a ternary operator into an if-else
            constructor.
    
    2018-03-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85001
            * gfortran.dg/interface_41.f90: New test.
    
    From-SVN: r258699

commit e4a6dfa0ebadb2433c73487cf2f63d285c17937c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 21 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258696

commit e4d0d5006588bd64da93a7715c68a1bcda560c39
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 20 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258669

commit f95875cc2aa6e234662a5cb0a99f866ed582bdd7
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Mar 19 22:03:01 2018 +0000

    re PR fortran/84931 (Expansion of array constructor with constant implied-do-object goes sideways)
    
    2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84931
            Backport from trunk
            * simplify.c (gfc_convert_constant): Correctly handle iterators
            for type conversion.
    
    2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84931
            Backport from trunk
            * gfortran.dg/array_constructor_52.f90: New test.
    
    From-SVN: r258666

commit 18df884dbf051ce1fb6fb915f3118d72bef9a772
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Mar 19 18:54:29 2018 +0000

    re PR fortran/77414 (ICE in create_function_arglist, at fortran/trans-decl.c:2410)
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77414
            * decl.c (get_proc_name):  Check for a subroutine re-defined in
            the contain portion of a subroutine.  Change language of existing
            error message to better describe the issue. While here fix whitespace
            issues.
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77414
            * gfortran.dg/pr77414.f90: New test.
            * gfortran.dg/internal_references_1.f90: Adjust error message.
    
    From-SVN: r258654

commit 945ac36cf9f48ead9a3737becfb2a290ab1223e4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Mar 19 18:36:29 2018 +0000

    re PR fortran/65453 (ICE in build_function_decl, at fortran/trans-decl.c:2001)
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65453
            * decl.c (get_proc_name): Catch clash between a procedure statement
            and a contained subprogram
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65453
            * gfortran.dg/pr65453.f90: New test.
    
    From-SVN: r258652

commit a5d048aefc8ead13c4db5d73877014cc167307f6
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Mar 19 16:52:13 2018 +0000

    i386: Don't generate alias for function return thunk
    
    Function return thunks shouldn't be aliased to indirect branch thunks
    since indirect branch thunks are placed in COMDAT section and a COMDAT
    section with indirect branch may not have function return thunk.  This
    patch generates function return thunks directly.
    
    gcc/
    
            Backport from mainline
            2018-03-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84574
            * config/i386/i386.c (indirect_thunk_needed): Update comments.
            (indirect_thunk_bnd_needed): Likewise.
            (indirect_thunks_used): Likewise.
            (indirect_thunks_bnd_used): Likewise.
            (indirect_return_needed): New.
            (indirect_return_bnd_needed): Likewise.
            (output_indirect_thunk_function): Add a bool argument for
            function return.
            (output_indirect_thunk_function): Don't generate alias for
            function return thunk.
            (ix86_code_end): Call output_indirect_thunk_function to generate
            function return thunks.
            (ix86_output_function_return): Set indirect_return_bnd_needed
            and indirect_return_needed instead of indirect_thunk_bnd_needed
            and indirect_thunk_needed.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-03-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84574
            * gcc.target/i386/ret-thunk-9.c: Expect __x86_return_thunk
            label instead of __x86_indirect_thunk label.
    
    From-SVN: r258647

commit 6390d8ad774362e09ff0ed1b41cbe4bbdfc7523f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 19 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r258639

commit 2faddee74f8c5daeddfdc90b18263f771794017c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 18 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r258625

commit c867bccb024e674b9425f21483bdc4f418548242
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 17 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258616

commit 16168e8919dfe08f7161e65d4faa0469c4cf50a0
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Mar 16 03:30:06 2018 +0000

    Commit ChangeLog entries for revision 258582.
    
    2018-03-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78741
            * decl.c (get_proc_name):  Check for clash of entry name with
            subroutine name.
    
    2018-03-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78741
            * gfortran.dg/pr78741.f90: New test.
    
    From-SVN: r258583

commit 9114a81b8eb8c6fd248fd1914e27a741053414fd
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Mar 16 03:28:08 2018 +0000

    re PR fortran/78741 (ICE in gfc_get_symbol_decl, at fortran/trans-decl.c:1534)
    
    2018-03-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78741
            * decl.c (get_proc_name):  Check for clash of entry name with
            subroutine name.
    
    2018-03-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78741
            * gfortran.dg/pr78741.f90: New test.
    
    From-SVN: r258582

commit 8c52c39dd9373dff324976c03acc369619401dca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 16 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258578

commit a6d4eb17213f65d98413401fbb7d619b007a103c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 15 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258545

commit 5363506db620ffcc7ec0950c8321571331cdc14f
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Mar 14 23:51:06 2018 +0000

    re PR target/83451 (FAIL: gfortran.dg/matmul_10.f90   -O3 -fomit-frame-pointer -funroll-loops -fpeel-loops -ftracer -finline-functions (ICE))
    
            PR target/83451
            * config/pa/pa.c (pa_emit_move_sequence):  Always emit secondary reload
            insn for floating-point loads and stores.
    
    From-SVN: r258542

commit 7ebfd2ee5bf3912ced5f1cb558f4976698113489
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 14 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r258507

commit 237ee2f8fa1f3d06b198d85f298135e4f2a98f44
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 13 13:24:36 2018 +0000

    PR libstdc++/84769 qualify std::get and std::get_if to avoid ADL
    
    Backport from mainline
    2018-03-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/84769
            * include/std/variant (get<_Tp, _Types...>, get_if<_Tp, _Types...>):
            Qualify calls to get<_Np, Types...> and get_if<_Np, _Types...>.
    
    From-SVN: r258482

commit f0658cde30cd988eec49cae0b84073101b3b6b78
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 13 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r258473

commit be7d8f2f9e1e9e20b3115b8833328f67e2c1b39c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Mar 12 23:32:30 2018 +0000

    PR libstdc++/84773 use aligned alloc functions for FreeBSD and MinGW cross-compilers
    
            PR libstdc++/84773
            PR libstdc++/83662
            * crossconfig.m4: Check for aligned_alloc etc. on freebsd and mingw32.
            * configure: Regenerate.
            * include/c_global/cstdlib [_GLIBCXX_HAVE_ALIGNED_ALLOC]
            (aligned_alloc): Add using-declaration.
            * testsuite/18_support/aligned_alloc/aligned_alloc.cc: New test.
    
    From-SVN: r258469

commit 992ce42ee97092c724c38a9697b66a85702b7cb3
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Mar 12 22:40:19 2018 +0000

    re PR ada/82813 (warning: '.builtin_memcpy' writing between 2 and 6 bytes into a region of size 0 overflows the destination [-Wstringop-overflow=])
    
            PR ada/82813
            * gcc-interface/misc.c (gnat_post_options): Disable string overflow
            warnings.
    
    From-SVN: r258467

commit 158f05a9bd55949e7163ba6b0bf4fef466a71cf0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Mar 12 22:34:08 2018 +0000

    Fix spelling of -mclflushopt in manual
    
            * doc/invoke.texi (-mclflushopt): Fix spelling of option.
    
    From-SVN: r258464

commit 2f0406b84693fa814a432f42b929e1abefb86463
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Mar 12 18:15:42 2018 +0000

    re PR fortran/83939 (Constraint C1290 (elemental function cannot be allocatable) not enforced)
    
    2018-03-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83939
            * resolve.c (resolve_fl_procedure): Enforce F2018:C15100.
    
    2018-03-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83939
            * gfortran.dg/pr83939.f90
    
    From-SVN: r258456

commit 358f48bfacf6ca25e69133680adc17808b5cab8f
Author: Richard Sandiford <richard.sandiford@linaro.org>
Date:   Mon Mar 12 13:50:52 2018 +0000

    Don't vectorise zero-step rmw operations (PR 84485)
    
    GCC 6 and 7 would vectorise:
    
    void
    f (unsigned long incx, unsigned long incy,
       float *restrict dx, float *restrict dy)
    {
      unsigned long ix = 0, iy = 0;
      for (unsigned long i = 0; i < 512; ++i)
        {
          dy[iy] += dx[ix];
          ix += incx;
          iy += incy;
        }
    }
    
    without first proving that incy is nonzero.  This is a regression from
    GCC 5.  It was fixed on trunk in r256644, which versioned the loop based
    on whether incy is zero, but that's obviously too invasive to backport.
    This patch instead bails out for possibly-zero steps in the place that
    trunk would try a check for zeroness.
    
    Also, the patch makes vect_analyze_data_ref_access check safelen
    as well as force_vectorize.
    
    2018-03-12  Richard Sandiford  <richard.sandiford@linaro.org>
    
    gcc/
            PR tree-optimization/84485
            * tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Return
            true for zero dependence distances if the step might be zero,
            and if there is no metadata that guarantees correctness.
            (vect_analyze_data_ref_access): Check safelen as well as
            force_vectorize.
    
    gcc/testsuite/
            PR tree-optimization/84485
            * gcc.dg/vect/pr84485.c: New test.
    
    From-SVN: r258450

commit 55cb6a5b1bdba54cefed2a0cba407dfe0e716967
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 12 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258440

commit 39341f77937a02c8b1f50e3257b52df35d90a665
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:43:39 2018 +0000

    backport: re PR target/83984 (ld: The value 0x8000000000005 does not fit when applying the relocation DIR21L)
    
            Backport from mainline
            2018-02-14  John David Anglin  <danglin@gcc.gnu.org>
    
            PR target/83984
            * config/pa/pa.md: Load address of PIC label using the linkage table
            if the label is nonlocal.
    
    From-SVN: r258432

commit d2b8cea8d74c765972d8ef3213c3c8841f2375dc
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:37:40 2018 +0000

    backport: fptr.c (_dl_read_access_allowed): New.
    
            Backport from mainline
            2018-03-06  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/fptr.c (_dl_read_access_allowed): New.
            (__canonicalize_funcptr_for_compare): Use it.
    
    From-SVN: r258430

commit da43f14da3d2919389c6268177ced12dcbfaadd3
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:32:16 2018 +0000

    backport: pa.h (ASM_GENERATE_INTERNAL_LABEL): Revise to use sprint_ul.
    
            Backport from mainline
            2018-03-06  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.h (ASM_GENERATE_INTERNAL_LABEL): Revise to use
            sprint_ul.
            (ASM_OUTPUT_ADDR_VEC_ELT): Revise for above change.
            (ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.
            * config/pa/pa64-hpux.h (ASM_GENERATE_INTERNAL_LABEL): Revise as above.
    
    From-SVN: r258428

commit 6cf7691a62d1b4447c21e02c50cb44db4b97aab5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 11 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r258422

commit fe1e1848c38026969c4a3d85861371f0b77ac20d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Mar 10 18:44:25 2018 +0000

    re PR fortran/84734 (Compiling codes with insane array dimensions gives an ICE after r257971)
    
    2018-03-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84734
            * arith.c (check_result, eval_intrinsic):  If result overflows, pass
            the expression up the chain instead of a NULL pointer.
    
    2018-03-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84734
            * gfortran.dg/pr84734.f90: New test.
    
    From-SVN: r258417

commit faaab12a7b3cff02aac90e7c2f98fedae11d6240
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Mar 10 10:15:01 2018 +0000

    trans.c (node_has_volatile_full_access): Consider only entities for objects.
    
            * gcc-interface/trans.c (node_has_volatile_full_access) <N_Identifier>:
            Consider only entities for objects.
    
    From-SVN: r258413

commit 041bc6e3328573ab1f5fea69d0b1582395664753
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 9 22:35:17 2018 -0500

    PR c++/84785 - ICE with alias template and default targs.
    
            * pt.c (type_unification_real): Set processing_template_decl if
            saw_undeduced == 1.
    
    From-SVN: r258409

commit 5dd9a6b9d0e97a2422ee45243632c432225c5b4e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 10 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258404

commit 1427e626a877437bdba4cc7314f55ad625c045c0
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Mar 9 12:35:17 2018 +0000

    S/390: libatomic: Fix 16 byte atomic exchange
    
    The compiler builtin will use the hardware instruction cdsg if the
    memory operand is properly aligned and will fall back to the
    library call otherwise.
    In case the compiler for one part is able to detect that the
    location is aligned and fails to do so for another usage of the hw
    instruction and the sw fall back would be mixed on the same memory
    location.  To avoid this the library fall back also has to use the
    hardware instruction if possible.
    
    libatomic/ChangeLog:
    
    2018-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-03-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/exch_n.c: New file.
            * configure.tgt: Add the config directory for s390.
    
    From-SVN: r258385

commit 5d90168c8ade31daebae6f4c1b66214fa61b64d8
Author: Kugan Vivekanandarajah <kuganv@linaro.org>
Date:   Fri Mar 9 01:55:44 2018 +0000

    backport: pr63304_1.c: Remove-mno-fix-cortex-a53-843419.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-09  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2017-09-13  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            * gcc.target/aarch64/pr63304_1.c: Remove-mno-fix-cortex-a53-843419.
    
    gcc/ChangeLog:
    
    2018-03-09  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2017-09-13  Kugan Vivekanandarajah  <kuganv@linaro.org>
            * config/aarch64/aarch64.c (aarch64_override_options_after_change_1):
            Disable pc relative literal load irrespective of TARGET_FIX_ERR_A53_84341
            for default.
    
    From-SVN: r258378

commit 79a2b5f6c084ae823cce2b1460408a28a01468b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 9 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258373

commit ed297ea93e651bb4cf0e352a645ab7dcc5cebead
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Mar 8 19:01:23 2018 +0000

    re PR fortran/64124 ([F95] Valid constant expr rejected)
    
    2018-03-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64124
            PR fortran/70409
            * decl.c (gfc_match_char_spec): Try to reduce a charlen to a constant.
    
    2018-03-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64124
            PR fortran/70409
            * gfortran.dg/pr64124.f90: New tests.
            * gfortran.dg/pr70409.f90: New tests.
    
    From-SVN: r258367

commit 672a905ad24d733784031ad397dd252d426ce8c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 8 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258344

commit 24742e9ef9b973603daebc604927c09e6b094979
Author: Denis Chertykov <chertykov@gmail.com>
Date:   Wed Mar 7 12:13:12 2018 +0300

    backport: re PR target/84209 ([avr] Don't split SP in split2)
    
            Backport from mainline
            2018-02-07  Georg-Johann Lay  <avr@gjlay.de>
    
            PR target/84209
            * config/avr/avr.h (GENERAL_REGNO_P, GENERAL_REG_P): New macros.
            * config/avr/avr.md: Only post-reload split REG-REG moves if
            either register is GENERAL_REG_P.
    
    From-SVN: r258315

commit 8526b00e7d714f4d11feacec0eeacfa53d610827
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Mar 7 07:50:57 2018 +0000

    re PR c++/84684 (inserting random code / flags produces wrong code)
    
            PR c++/84684
            * constexpr.c (cxx_bind_parameters_in_call): Unshare evaluated
            arguments.
    
            * g++.dg/cpp1z/constexpr-84684.C: New test.
    
    From-SVN: r258313

commit 2042f0c77347cea50644c2ff54757ffa048dcb22
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 7 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r258308

commit 8641f24ec56b80cfa6001de94ec30175a1fc7b60
Author: Carl Love <cel@us.ibm.com>
Date:   Tue Mar 6 23:52:59 2018 +0000

    backport: 2/16/18 commit 257748 Carl Love <cel@us.ibm.com>
    
    gcc/ChangeLog
    2018-03-06  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline
            2/16/18  commit 257748  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/altivec.h: Remove vec_vextract4b and vec_vinsert4b.
            * config/rs6000/rs6000-builtin.def: Remove macro expansion for
            VINSERT4B_DI and VINSERT4B.
            * config/rs6000/rs6000.c: Remove case statements for
            P9V_BUILTIN_VINSERT4B, P9V_BUILTIN_VINSERT4B_DI,
            and P9V_BUILTIN_VEC_VINSERT4B.
            * config/rs6000/rs6000-c.c (altivec_expand_builtin): Remove entries for
            P9V_BUILTIN_VEC_VEXTRACT4B and P9V_BUILTIN_VEC_VINSERT4B.
            * config/rs6000/vsx.md:  Remove define_expand vinsert4b,
            define_insn *vinsert4b_internal, define_insn "*vinsert4b_di_internal.
            * doc/extend.texi: Remove vec_vextract4b, non ABI definitions for
            vec_insert4b.
    
    gcc/testsuite/ChangeLog
    2018-03-06  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline
            2/16/18  commit 257748  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/p9-vinsert4b-1.c: Remove test file for non-ABI
            tests.
            * gcc.target/powerpc/p9-vinsert4b-2.c: Remove test file for non-ABI
            tests.
    
    From-SVN: r258306

commit 2f329d15d465844fe8de753856bd0eab28773f87
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:07:49 2018 +0100

    Backport r257932
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-23  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR testsuite/80551
            * c-c++-common/tsan/race_on_mutex.c: Change regexp to allow
            __GI___pthread_mutex_init as well.
    
    From-SVN: r258300

commit 6b8712da43ee1d6b93ef520d2fa9cc6e419fe139
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:07:38 2018 +0100

    Backport r257842
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-20  Martin Liska  <mliska@suse.cz>
    
            PR c/84310
            PR target/79747
            * final.c (shorten_branches): Build align_tab array with one
            more element.
            * opts.c (finish_options): Add alignment option limit check.
            (MAX_CODE_ALIGN): Likewise.
            (MAX_CODE_ALIGN_VALUE): Likewise.
            * doc/invoke.texi: Document maximum allowed option value for
            all -falign-* options.
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-20  Martin Liska  <mliska@suse.cz>
    
            PR c/84310
            PR target/79747
            * gcc.target/i386/pr84310.c: New test.
            * gcc.target/i386/pr84310-2.c: Likewise.
    
    From-SVN: r258299

commit abf755ad77d1c787d5b3ba14967757b6cdeed408
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:07:18 2018 +0100

    Backport r257803
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-19  Martin Liska  <mliska@suse.cz>
    
            PR other/80589
            * doc/invoke.texi: Fix typo.
            * params.def (PARAM_MAX_LOOP_HEADER_INSNS): Likewise.
    
    From-SVN: r258298

commit e97e8a72092911712467d2b4a531692b2f979809
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:06:56 2018 +0100

    Backport r257384
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-05  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/84137
            * doc/gcov.texi: Fix typo in documentation.
    
    From-SVN: r258297

commit 2e9ea2795c33e1d533e00bb4ec628205e686bfcd
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:06:45 2018 +0100

    Backport r257383
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-05  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/83879
            * doc/gcov.texi: Document necessity of --dynamic-list-data when
            using dlopen functionality.
    
    From-SVN: r258296

commit 71d5ffd3e42e16f0e4a4513566381c37b058feeb
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:06:29 2018 +0100

    Backport r256989
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-23  Martin Liska  <mliska@suse.cz>
    
            PR lto/81440
            * lto-symtab.c (lto_symtab_merge): Handle and do not warn about
            trailing arrays at the end of a struct.
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-23  Martin Liska  <mliska@suse.cz>
    
            PR lto/81440
            * gcc.dg/lto/pr81440.h: New test.
            * gcc.dg/lto/pr81440_0.c: New test.
            * gcc.dg/lto/pr81440_1.c: New test.
    
    From-SVN: r258295

commit c28d61c1b38d86650b4f109dca4d94e6fac8a699
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:06:10 2018 +0100

    Backport r255818
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-12-19  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/82675
            * loop-unroll.c (unroll_loop_constant_iterations): Allocate one
            more element in sbitmap.
    
    From-SVN: r258294

commit 481a9a326711e35c7060f972e93ac39bc3f78927
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:05:52 2018 +0100

    Backport r247342
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-27  Martin Liska  <mliska@suse.cz>
    
            PR testsuite/79455
            * c-c++-common/tsan/race_on_mutex.c: Make the scanned pattern
            more generic.
    
    From-SVN: r258293

commit c17f25542dbada02c16bf2e389019c2a951cf310
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:05:36 2018 +0100

    Fix IPA profile merging, fixed in trunk with r253910.
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-05  Martin Liska  <mliska@suse.cz>
    
            * ipa-utils.c (ipa_merge_profiles): Do not merge alias or
            a function without profile.
    
    From-SVN: r258292

commit 4377de0a9e74c592518366e669808c7a5327636a
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:05:06 2018 +0100

    Backport r257939
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto-partition.c (lto_balanced_map): Watch overflow.
    
    From-SVN: r258291

commit c67174f46ad49e7801da56f7274603090648fa54
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:04:36 2018 +0100

    Backport r257877
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-21  Jan Hubicka  <hubicka@ucw.cz>
    
            PR c/84229
            * ipa-cp.c (determine_versionability): Do not version functions caling
            va_arg_pack.
    
    From-SVN: r258290

commit 200c8f653539ce297030bb041eb041bd195d5027
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:04:20 2018 +0100

    Backport r257490
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/81360
            * cgraph.h (symtab_node::output_to_lto_symbol_table_p): Declare
            * symtab.c: Include builtins.h
            (symtab_node::output_to_lto_symbol_table_p): Move here
            from lto-streamer-out.c:output_symbol_p.
            * lto-streamer-out.c (write_symbol): Turn early exit to assert.
            (output_symbol_p): Move all logic to symtab.c
            (produce_symtab): Update.
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/81360
            * lto.c (unify_scc): Register prevailing trees, not trees to be freed.
            (read_cgraph_and_symbols): Use
            symtab_node::output_to_lto_symbol_table_p.
    
    From-SVN: r258289

commit 89050a7496ebc4eb27e0de6aff5c51f8066bffbd
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:02:46 2018 +0100

    Backport r257442
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto.c (register_resolution): Remove forgotten sanity check.
    
    From-SVN: r258288

commit 072663b1460105e163175d6f61706d4e8999fc8d
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:02:22 2018 +0100

    Backport r257412
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/81004
            * lto.c: Include builtins.h
            (register_resolution): Merge resolutions in case trees was
            merged across units.
            (lto_maybe_register_decl): Break out from ...
            (lto_read_decls): ... here.
            (unify_scc): Also register decls here.
            (read_cgraph_and_symbols): Sanity check that all resolutions was
            read.
    
    From-SVN: r258287

commit 0d3d9bfd05c2412bb7e6c419f527fb95e299d2b0
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:02:03 2018 +0100

    Backport r257343
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-02  Eric Botcazou  <ebotcazou@adacore.com>
    
            PR lto/83954
            * lto-symtab.c (warn_type_compatibility_p): Do not recurse into the
            component type of array types with non-aliased component.
    
    From-SVN: r258286

commit e86ed8ec449193b7c64527c86475f93feb5f1a13
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:01:44 2018 +0100

    Backport r257183
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/83954
            * lto-symtab.c (warn_type_compatibility_p): Silence false positive
            for type match warning on arrays of pointers.
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/83954
            * gcc.dg/lto/pr83954.h: New testcase.
            * gcc.dg/lto/pr83954_0.c: New testcase.
            * gcc.dg/lto/pr83954_1.c: New testcase.
    
    From-SVN: r258285

commit cbac8410bcd71498b4c0c86d487c1fc4e8869de6
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Mar 6 21:00:48 2018 +0100

    Backport r253729
    
    2018-03-06  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-13  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto-lang.c (lto_post_options): Clean shlib flag when not doing PIC.
    
    From-SVN: r258284

commit ac3f35daf89deab49212774f8d82adab45d7a685
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Mar 6 19:27:48 2018 +0000

    re PR fortran/56667 (Syntax error causes misleading message: "Expected PARAMETER symbol in complex constant")
    
    2018-03-06  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56667
            * primary.c (match_sym_complex_part): Give the matcher for an implied
            do-loop a chance to run.
    
    2018-03-06  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56667
            * gfortran.dg/implied_do_2.f90: New test.
            * gfortran.dg/coarray_8.f90: Update for new error message.
    
    From-SVN: r258282

commit 936b7b3e22cb4d1f53b46c623aee47a1550f053b
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Mar 6 09:54:30 2018 -0600

    backport: re PR target/81572 (gcc-7 regression: unnecessary vector regmove on compare)
    
    gcc/
            Backport from mainline
            2018-02-22  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/81572
            * lra-int.h (LRA_UNKNOWN_ALT, LRA_NON_CLOBBERED_ALT): New macros.
            * lra.c (lra_set_insn_recog_data, lra_update_insn_recog_data): Use
            LRA_UNKNOWN_ALT.
            * lra-constraints.c (curr_insn_transform): Set up
            LRA_NON_CLOBBERED_ALT for moves processed on the fast path.  Use
            LRA_UNKNOWN_ALT.
            (remove_inheritance_pseudos): Use LRA_UNKNOWN_ALT.
            * lra-eliminations.c (spill_pseudos): Ditto.
            (process_insn_for_elimination): Ditto.
            * lra-lives.c (reg_early_clobber_p): Use the new macros.
            * lra-spills.c (spill_pseudos): Use LRA_UNKNOWN_ALT and
            LRA_NON_CLOBBERED_ALT.
    
    gcc/testsuite/
            Backport from mainline
            2018-02-22  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/81572
            * gcc.target/powerpc/pr81572.c: New.
    
    From-SVN: r258280

commit 3be21a86195b7ea4798af62e2f2ed15d0b7c5b62
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Mar 6 12:21:41 2018 +0000

    trans.c (convert_with_check): Fix typo in the condition guarding the overflow check emitted for the upper...
    
            * gcc-interface/trans.c (convert_with_check): Fix typo in the condition
            guarding the overflow check emitted for the upper bound of a floating-
            point conversion.
    
    From-SVN: r258278

commit 945732c434d9b4517fedb52bf856df92334816d4
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Mar 6 10:01:52 2018 +0000

    backport: [multiple changes]
    
    2018-03-06  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-03-05  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/84486
            * tree-ssa-pre.c (create_expression_by_pieces): Remove dead code.
            When inserting a __builtin_assume_aligned call set the LHS
            SSA name alignment info accordingly.
    
            2018-02-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/84607
            * genmatch.c (capture_info::walk_match): Do not mark
            captured expressions without operands as expr_p given
            they act more like predicates and should be subject to
            "lost tail" side-effect preserving.
    
            * gcc.dg/pr84607.c: New testcase.
    
    From-SVN: r258274

commit 88f1a5c3e6171e7af74543cc64707bc1f653e7b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 6 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r258266

commit 6d70521e76afb14364a00fe65272426555aa6557
Author: Will Schmidt <will_schmidt@vnet.ibm.com>
Date:   Mon Mar 5 17:11:16 2018 +0000

    backport: re PR target/84371 (test case gcc.target/powerpc/builtins-3.c fails on power9)
    
    2018-03-05  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            Backport from trunk.
    
            2018-02-16  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            PR target/84371
            * gcc.target/powerpc/builtins-3.c: Update dg-options and dg-skip-if
            stanzas.
            * gcc.target/powerpc/builtins-3.p8.c: Add dg-skip-if stanza.
            * gcc.target/powerpc/builtins-3.p9.c: Add dg-skip-if stanza.
    
    From-SVN: r258257

commit 2465bbe21494129f69951a402e6b8913ed2d1b5d
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Mon Mar 5 17:09:49 2018 +0100

    re PR target/84524 (-O3 causes behavior change)
    
            PR target/84524
            * config/i386/sse.md (*<code><mode>3): Replace <mask_prefix3> with
            orig,vex.
            (*<plusminus_insn><mode>3): Likewise.  Remove <mask_operand3> uses.
    
            * gcc.c-torture/execute/pr84524.c: New test.
            * gcc.target/i386/avx512bw-pr84524.c: New test.
    
    From-SVN: r258253

commit f2d6e2b42d59a675c5111c0529a0675124318b51
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Mar 5 09:28:07 2018 -0500

    PR c++/84686 - missing volatile loads.
    
            * cvt.c (convert_to_void): Call maybe_undo_parenthesized_ref.
    
    From-SVN: r258245

commit 09bac2abc595e68a64ff707ca236f678f99a0714
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 5 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258237

commit 8bc0bee23af735527a38c1c5c8a711ed07ed6cd2
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Mar 4 13:56:09 2018 +0000

    re PR fortran/83076 (ICE in gfc_deallocate_scalar_with_status, at fortran/trans.c:1598)
    
    2018-03-04  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83076
            * resolve.c (resolve_fl_derived0): Add caf_token fields for
            allocatable and pointer scalars, when -fcoarray selected.
            * trans-types.c (gfc_copy_dt_decls_ifequal): Copy the token
            field as well as the backend_decl.
            (gfc_get_derived_type): Flag GFC_FCOARRAY_LIB for module
            derived types that are not vtypes. Components with caf_token
            attribute are pvoid types. For a component requiring it, find
            the caf_token field and have the component token field point to
            its backend_decl.
    
            PR fortran/83319
            *trans-types.c (gfc_get_array_descriptor_base): Add the token
            field to the descriptor even when codimen not set.
    
    
    2018-03-04  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83076
            * gfortran.dg/coarray_45.f90 : New test.
    
            PR fortran/83319
            * gfortran.dg/coarray_46.f90 : New test.
    
    From-SVN: r258233

commit 46a0e42a7d30ef80fcdb950b7e4e335b7b8fb552
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Mar 4 01:52:24 2018 +0000

    re PR fortran/71085 (ICE with some intrinsic functions specifying array function result dimension)
    
    2018-03-03  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/71085
            * trans-expr.c (gfc_apply_interface_mapping_to_expr): Do not
            dereference NULL pointer.
    
    
    2018-03-03  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/71085
            * gfortran.dg/pr71085.f90: New test.
    
    From-SVN: r258229

commit 48560a9dfe20ca585b717477bbd52de23542af97
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 4 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r258226

commit a563d195614f514670a136f0f628b649723424ce
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Mar 3 19:02:28 2018 +0000

    re PR fortran/51434 (ICE with scalar init of an array parameter, used in DT default init with transfer)
    
    2018-03-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/51434
            * simplify.c (gfc_simplify_transfer): Resolve mold.
    
    2018-03-03  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/51434
            * gfortran.dg/pr51434.f90: New test.
    
    From-SVN: r258222

commit 791881a3293ffc14d1b8096d0995244bcd4b8667
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Mar 3 16:33:17 2018 +0000

    re PR fortran/80965 (ICE with class argument and -O2 optimization)
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80965
            * resolve.c (build_loc_call): Change symtree name from 'loc' to
            '_loc'.
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80965
            * gfortran.dg/select_type_41.f90: New test.
    
    From-SVN: r258213

commit e45fa8dd0ebefb31748f6e9176312bebbd79ce29
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Mar 3 16:26:49 2018 +0000

    re PR fortran/78990 (ICE when assigning polymorphic array function result)
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78990
            * expr.c (gfc_is_class_array_function): Renamed from
            'gfc_is_alloc_class_array_function' and modified to return true
            for pointers as well as allocatable results.
            * gfortran.h : Change of name for prototype of above function.
            * trans-array.c (gfc_add_loop_ss_code): Force finalization of
            class array results.
            (build_class_array_ref): Change assertion into a condition.
            (build_class_array_ref): Set the se class_vptr for class array
            function results.
            (gfc_walk_function_expr): Reference gfc_is_class_array_function
            as above.
            * trans-decl.c (get_proc_result): Move it up before
            gfc_trans_deferred_vars.
            (gfc_trans_deferred_vars): Nullify explicit return class arrays
            on entry.
            * trans-expr.c (gfc_conv_class_to_class): Allow conversion of
            class array functions that have an se class_vptr and use it
            for the result vptr.
            (gfc_conv_subref_array_arg): Rename reference to the above
            function.
            (gfc_conv_procedure_call): Ditto. Add the se pre block to the
            loop pre block before the function is evaluated. Do not
            finalize class pointer results.
            (arrayfunc_assign_needs_temporary, gfc_trans_assignment_1) More
            renamed references.
            * trans-intrinsic.c (gfc_conv_intrinsic_size): Ditto.
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78990
            * gfortran.dg/class_67.f90: New test.
    
    From-SVN: r258212

commit a903e07c1f0d3cd340f3175a56be0cb5805cb459
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:43:30 2018 +0100

    backport: re PR ipa/84628 (attribute(warning/error) functions should not be merged together)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR ipa/84628
            * expr.c (expand_expr_real_1) <case CALL_EXPR>: Don't emit diagnostics
            for error or warning attributes if CALL_FROM_THUNK_P is set.
            Formatting fixes.
    
            * gcc.dg/pr84628.c: New test.
    
    From-SVN: r258208

commit cd421ffd10306a5123783da1f0c8744a2ccbc5a1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:42:40 2018 +0100

    backport: re PR inline-asm/84625 (ICE with empty constraint and vector constant)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/84625
            * config/i386/i386.c (ix86_print_operand): Use conditional
            output_operand_lossage instead of gcc_assert if CONST_VECTOR is not
            zero vector.
    
            * gcc.target/i386/pr84625.c: New test.
    
    From-SVN: r258207

commit 01cb1e60a5e8de3ad4f221ce4915766e153a4918
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:41:52 2018 +0100

    backport: re PR sanitizer/70875 (ICE in get_ubsan_type_info_for_type with -fsanitize=undefined)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/70875
            * gcc.dg/ubsan/bounds-3.c: Add -fno-sanitize-recover=bounds to
            dg-options and dg-shouldfail "ubsan" directive.
    
    From-SVN: r258206

commit 22e23fdda721c3354c6a748408b28f0c64a6842b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:41:20 2018 +0100

    backport: re PR c++/84558 (ICE with invalid constexpr constructor)
    
            Backported from mainline
            2018-02-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84558
            * constexpr.c (cxx_eval_vec_init_1): For reuse, treat NULL eltinit like
            a valid constant initializer.  Formatting fixes.
    
            * g++.dg/cpp1y/pr84558.C: New test.
    
    From-SVN: r258205

commit 68f2615df80c1449cd180238518e2e7316a9e6cc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:40:39 2018 +0100

    backport: re PR c++/84557 (ICE with invalid firstprivate variable)
    
            Backported from mainline
            2018-02-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84557
            * parser.c (cp_parser_omp_var_list_no_open): Only call
            cp_parser_lookup_name_simple on names satisfying identifier_p.
            (cp_parser_oacc_routine): Likewise.
    
            * g++.dg/gomp/pr84557.C: New test.
    
    From-SVN: r258204

commit 13a90dc4b9fd5e046046aa79c5a837921bafad4c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:39:52 2018 +0100

    backport: re PR c++/84556 (C++17, lambda, OpenMP simd: sorry, unimplemented: unexpected AST)
    
            Backported from mainline
            2018-02-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84556
            * g++.dg/gomp/pr84556.C: New test.
            * g++.dg/vect/pr84556.cc: New test.
    
    From-SVN: r258203

commit abf608a6cc1f28d89165daa45916a8a07b0472a4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:39:18 2018 +0100

    backport: ipa-prop.c (ipa_vr_ggc_hash_traits::hash): Hash p->min and p->max as pointers rather than using iterative_hash_expr.
    
            Backported from mainline
            2018-02-23  Jakub Jelinek  <jakub@redhat.com>
    
            * ipa-prop.c (ipa_vr_ggc_hash_traits::hash): Hash p->min and
            p->max as pointers rather than using iterative_hash_expr.
    
    From-SVN: r258202

commit 9196e777acb59dea44732b55a59c4a8395283681
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:38:48 2018 +0100

    backport: re PR tree-optimization/84503 (store-merging miscompilation on powerpc64 with -O3 since r241789)
    
            Backported from mainline
            2018-02-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/84503
            * gcc.dg/pr84503-1.c: New test.
            * gcc.dg/pr84503-2.c: New test.
    
            2017-11-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR bootstrap/82916
            * gimple-ssa-store-merging.c
            (pass_store_merging::terminate_all_aliasing_chains): For
            gimple_store_p stmts also call refs_output_dependent_p.
    
            * gcc.dg/pr82916.c: New test.
    
    From-SVN: r258201

commit 1a9f6a3756931f5007147bc06c2327083e12cd26
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:37:47 2018 +0100

    backport: re PR c++/84445 (ICE with __builtin_launder and virtual function)
    
            Backported from mainline
            2018-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84445
            * class.c (fixed_type_or_null) <case CALL_EXPR>: Only test
            TREE_HAS_CONSTRUCTOR if instance is not an internal function call.
    
            * g++.dg/cpp1z/launder7.C: New test.
    
    From-SVN: r258200

commit 1f6acb1861576c55cb35cfe05ec8ffa8c9adcd6b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:37:05 2018 +0100

    backport: re PR c++/84449 (ICE with constexpr and deleted destructor)
    
            Backported from mainline
            2018-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84449
            * tree.c (bot_manip): If build_cplus_new or break_out_target_exprs
            returns error_mark_node, return it immediately.
            (break_out_target_exprs): If cp_walk_tree with bot_manip returns
            error_mark_node, return error_mark_node.
    
            * g++.dg/cpp0x/constexpr-84449.C: New test.
    
    From-SVN: r258199

commit 8043a9baa162475f547f5799b0828ba8bd0d1152
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:36:20 2018 +0100

    backport: re PR c++/84444 (ICE with __builtin_launder and cast)
    
            Backported from mainline
            2018-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84444
            * builtins.c (builtin_mathfn_code): Don't check if CALL_EXPR_FN (t)
            is ADDR_EXPR.
    
            * g++.dg/cpp1z/launder8.C: New test.
    
    From-SVN: r258198

commit fb24b1a32e56d183fd4f1e3b2995bf507ecfa2db
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:35:37 2018 +0100

    backport: re PR c++/84448 (ICE with broken condition in parallel for loop)
    
            Backported from mainline
            2018-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84448
            * parser.c (cp_parser_binary_expression): For no_toplevel_fold_p, if
            either operand is error_mark_node, set current.lhs to that instead of
            creating a binary op with error_mark_node operands.
    
            * g++.dg/gomp/pr84448.C: New test.
    
    From-SVN: r258197

commit d3422478e5987d6ef63d900404575072854d7f53
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:34:48 2018 +0100

    backport: re PR c++/84430 (ICE with #pragma omp simd in lambda)
    
            Backported from mainline
            2018-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84430
            * constexpr.c (potential_constant_expression_1): Handle OMP_SIMD.
    
            * g++.dg/gomp/pr84430.C: New test.
    
    From-SVN: r258196

commit 718b8a4c89b46254f2d57794da8678e0a5f4c3df
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:34:07 2018 +0100

    backport: re PR ipa/84425 (Hang in ipa-inline.c starting with r250048)
    
            Backported from mainline
            2018-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/84425
            * ipa-inline.c (inline_small_functions): Fix a typo.
    
            * gcc.c-torture/compile/pr84425.c: New test.
    
    From-SVN: r258194

commit aa2bcdb761f7e2970c2354abc3aa5d5164d2f69a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:33:26 2018 +0100

    backport: re PR fortran/84418 (ICE with fortran OpenMP linear (ref ()) clause)
    
            Backported from mainline
            2018-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/84418
            * trans-openmp.c (gfc_trans_omp_clauses): For OMP_CLAUSE_LINEAR_REF
            kind set OMP_CLAUSE_LINEAR_STEP to TYPE_SIZE_UNIT times last_step.
    
            * libgomp.fortran/pr84418-1.f90: New test.
            * libgomp.fortran/pr84418-2.f90: New test.
    
    From-SVN: r258193

commit f2fc871ec1668633d9b386475c24b4b749a261d2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:32:26 2018 +0100

    backport: re PR c++/84192 (ICE with statement expression)
    
            Backported from mainline
            2018-02-16  Marek Polacek  <polacek@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84192
            * constexpr.c (cxx_eval_constant_expression) <case RETURN_EXPR>: Don't
            set *jump_target to anything if jump_target is NULL.
    
            * g++.dg/cpp1y/constexpr-84192.C: New test.
    
    From-SVN: r258192

commit d5c2f7441038f5e49f601073c60d097eaf1df4bf
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:31:38 2018 +0100

    backport: re PR c/82210 (Having _Alignas in a struct with VLAs causes writing to one array to overwrite another)
    
            Backported from mainline
            2018-02-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/82210
            * stor-layout.c (place_field): For variable length fields, adjust
            offset_align afterwards not just based on the field's alignment,
            but also on the size.
    
            * gcc.c-torture/execute/pr82210.c: New test.
    
    From-SVN: r258191

commit 9a1a9fe88bfb36bca919313167013ff66c7f7a1b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:30:57 2018 +0100

    backport: re PR c++/84341 (ICE with #pragma omp atomic)
    
            Backported from mainline
            2018-02-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84341
            * parser.c (cp_parser_binary_expression): Use build_min instead of
            build2_loc to build the no_toplevel_fold_p toplevel binary expression.
    
            * c-c++-common/gomp/pr84341.c: New test.
    
    From-SVN: r258190

commit 123fadd72085c86f6855a246030ded2988f5bc42
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:29:52 2018 +0100

    backport: re PR sanitizer/83987 (ICE with OpenMP, sanitizer and virtual bases)
    
            Backported from mainline
            2018-02-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83987
            * omp-low.c (maybe_remove_omp_member_access_dummy_vars,
            remove_member_access_dummy_vars): New functions.
            (lower_omp_for, lower_omp_taskreg, lower_omp_target,
            lower_omp_1, execute_lower_omp): Use them.
    
            * tree.c (cp_free_lang_data): Revert 2018-01-23 change.
    
            * g++.dg/ubsan/pr83987-2.C: New test.
    
    From-SVN: r258189

commit 3f7dace1eb98210406847889a8d921befd801167
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:28:43 2018 +0100

    backport: re PR rtl-optimization/84308 (Memory leak in spread_components)
    
            Backported from mainline
            2018-02-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/84308
            * shrink-wrap.c (spread_components): Release todo vector.
    
    From-SVN: r258188

commit ec35c867d9da79368116e09fb787a846c3a8bdf8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:28:15 2018 +0100

    backport: re PR sanitizer/84285 (Fail to statically link with -fsanitize=undefined)
    
            Backported from mainline
            2018-02-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/84285
            * gcc.c (STATIC_LIBASAN_LIBS, STATIC_LIBTSAN_LIBS,
            STATIC_LIBLSAN_LIBS, STATIC_LIBUBSAN_LIBS): Handle -static like
            -static-lib*san.
    
    From-SVN: r258187

commit 9ee0e809cd26d3cc9ff4c79d057a215379b4defc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:27:47 2018 +0100

    backport: re PR c++/83659 (ICE on compilable C++ code: in tree_to_shwi, at tree.c:6821)
    
            Backported from mainline
            2018-02-09  Marek Polacek  <polacek@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83659
            * fold-const.c (fold_indirect_ref_1): Use VECTOR_TYPE_P macro.
            Formatting fixes.  Verify first that tree_fits_shwi_p (op01).
            Sync some changes from cxx_fold_indirect_ref.
    
            * constexpr.c (cxx_fold_indirect_ref): Sync some changes from
            fold_indirect_ref_1.  Verify first that tree_fits_shwi_p (op01).
            Formatting fixes.
    
            * g++.dg/torture/pr83659.C: New test.
    
    From-SVN: r258186

commit 09d82b553c11b6f3b400da1e745e4e4b465c3109
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:26:52 2018 +0100

    backport: re PR c++/84082 (ICE with broken template function definition)
    
            Backported from mainline
            2018-02-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84082
            * parser.c (cp_parser_dot_deref_incomplete): New function.
            (cp_parser_postfix_dot_deref_expression): Use it.
    
            * g++.dg/template/incomplete11.C: New test.
            * g++.dg/parse/crash67.C: Expect an incomplete type diagnostics too.
    
    From-SVN: r258185

commit b372012e11e4efa0af6956b30f6de43db9f07d17
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:25:59 2018 +0100

    backport: tree-eh.c (operation_could_trap_helper_p): Ignore honor_trapv for *DIV_EXPR and *MOD_EXPR.
    
            Backported from mainline
            2018-02-07  Jakub Jelinek  <jakub@redhat.com>
    
            * tree-eh.c (operation_could_trap_helper_p): Ignore honor_trapv for
            *DIV_EXPR and *MOD_EXPR.
    
    From-SVN: r258184

commit 9575487b6c528ed7aa975f970d5d33deea2cb0cc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:25:27 2018 +0100

    backport: re PR tree-optimization/81661 (ICE in gimplify_modify_expr, at gimplify.c:5638)
    
            Backported from mainline
            2018-02-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/81661
            PR tree-optimization/84117
            * tree-eh.h (rewrite_to_non_trapping_overflow): Declare.
            * tree-eh.c: Include gimplify.h.
            (find_trapping_overflow, replace_trapping_overflow,
            rewrite_to_non_trapping_overflow): New functions.
            * tree-vect-loop.c: Include tree-eh.h.
            (vect_get_loop_niters): Use rewrite_to_non_trapping_overflow.
    
            * gcc.dg/pr81661.c: New test.
            * gfortran.dg/pr84117.f90: New test.
    
    From-SVN: r258183

commit e91f3c250e079bfc0caa0ee7c7d088886ca8edad
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:24:36 2018 +0100

    backport: re PR fortran/84116 (ICE in gfc_match_omp_clauses, at fortran/openmp.c:1354)
    
            Backported from mainline
            2018-01-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/84116
            * openmp.c (gfc_match_omp_clauses): If all the linear
            gfc_match_omp_variable_list calls failed, don't gfc_free_omp_namelist
            nor set *head = NULL.  Formatting fixes.
    
            * gfortran.dg/gomp/pr84116.f90: New test.
    
    From-SVN: r258182

commit fd681b4e041bf96a942782fbbc17f990daabf664
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:23:43 2018 +0100

    backport: re PR c++/83993 (ICE: constant not recomputed when ADDR_EXPR changed)
    
            Backported from mainline
            2018-01-31  Jason Merrill  <jason@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83993
            * constexpr.c (cxx_eval_outermost_constant_expr): Build NOP_EXPR
            around non-constant ADDR_EXPRs rather than clearing TREE_CONSTANT
            on ADDR_EXPR.
    
            * g++.dg/init/pr83993-2.C: New test.
    
    From-SVN: r258181

commit fb50692f4e4983ee6e7a43dfd55a1cb9a73168e2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:22:45 2018 +0100

    backport: re PR preprocessor/69869 (internal compiler error: Segmentation fault in call to skip_macro_block_comment when using '-traditional-cpp')
    
            Backported from mainline
            2018-01-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR preprocessor/69869
            * traditional.c (skip_macro_block_comment): Return bool, true if
            the macro block comment is unterminated.
            (copy_comment): Use return value from skip_macro_block_comment instead
            of always false.
    
            * gcc.dg/cpp/trad/pr69869.c: New test.
    
    From-SVN: r258180

commit defdca27d561fddec1c0ab81848961aa3709e1d4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:21:58 2018 +0100

    backport: re PR target/83986 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2348)
    
            Backported from mainline
            2018-01-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/83986
            * sched-deps.c (sched_analyze_insn): For frame related insns, add anti
            dependence against last_pending_memory_flush in addition to
            pending_jump_insns.
    
            * gcc.dg/pr83986.c: New test.
    
    From-SVN: r258179

commit 199779363945acb863b7fd8a0aa0c25416db728e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:21:10 2018 +0100

    backport: re PR libgomp/84096 (Wrong prototype for omp_init_nest_lock_with_hint() in "omp.h.in")
    
            Backported from mainline
            2018-01-29  Christoph Spiel  <cspiel@freenet.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/84096
            * omp.h.in (omp_init_nest_lock_with_hint): Use omp_nest_lock_t
            instead of omp_lock_t.
    
    From-SVN: r258178

commit 6f4f0d1f60b7f372c4757ae89ae9c93b80a90013
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:20:42 2018 +0100

    backport: re PR middle-end/84040 (compilation time of gcc.c-torture/compile/limits-blockid.c is 50x slower)
    
            Backported from mainline
            2018-01-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/84040
            * sched-deps.c (sched_macro_fuse_insns): Return immediately if
            !insn_set.
    
    From-SVN: r258177

commit b22f1568ea7f8e201f2b50c3da2a029a3979215c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:20:13 2018 +0100

    backport: c-cppbuiltin.c (c_cpp_builtins): Use ggc_strdup for the fp_suffix argument.
    
            Backported from mainline
            2018-01-27  Jakub Jelinek  <jakub@redhat.com>
    
            * c-cppbuiltin.c (c_cpp_builtins): Use ggc_strdup for the fp_suffix
            argument.
            (LAZY_HEX_FP_VALUES_CNT): Define.
            (lazy_hex_fp_values): Allow up to LAZY_HEX_FP_VALUES_CNT lazy hex fp
            values rather than just 12.
            (builtin_define_with_hex_fp_value): Likewise.
    
            * include/cpplib.h (enum cpp_builtin_type): Change BT_LAST_USER from
            BT_FIRST_USER + 31 to BT_FIRST_USER + 63.
    
    From-SVN: r258176

commit 17fed8c50528cf8cf9146311bda6baf03b9037a4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:19:00 2018 +0100

    backport: re PR c++/84031 (structured binding unpacks nameless padding bitfields)
    
            Backported from mainline
            2018-01-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84031
            * decl.c (find_decomp_class_base): Ignore unnamed bitfields.  Ignore
            recursive calls that return ret.
            (cp_finish_decomp): Ignore unnamed bitfields.
    
            * g++.dg/cpp1z/decomp36.C: New test.
    
    From-SVN: r258175

commit 8cf4c7029b428f976e3c98fbec2898369fc237ce
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:18:15 2018 +0100

    backport: re PR middle-end/83977 (ICE in simd_clone_clauses_extract, at omp-simd-clone.c:184)
    
            Backported from mainline
            2018-01-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/83977
            * tree-inline.c (tree_function_versioning): Remove "omp declare simd"
            attributes from DECL_ATTRIBUTES (new_decl) without affecting
            DECL_ATTRIBUTES (old_decl).
    
            * c-c++-common/gomp/pr83977-1.c: New test.
            * c-c++-common/gomp/pr83977-2.c: New test.
            * c-c++-common/gomp/pr83977-3.c: New test.
            * gfortran.dg/gomp/pr83977.f90: New test.
    
    From-SVN: r258174

commit d828fc3a4b308024d0e26456ebb2e4809342bbf7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:17:11 2018 +0100

    backport: re PR sanitizer/83987 (ICE with OpenMP, sanitizer and virtual bases)
    
            Backported from mainline
            2018-01-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83987
            * tree.c (cp_free_lang_data): Change DECL_VALUE_EXPR of
            DECL_OMP_PRIVATIZED_MEMBER vars to error_mark_node.
    
            * g++.dg/ubsan/pr83987.C: New test.
    
    From-SVN: r258173

commit 4128f4b1ceb7509dda855e2b80f4a2ee1bd8b650
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:16:27 2018 +0100

    backport: re PR c++/83958 (ICE: Segmentation fault (in find_decomp_class_base))
    
            Backported from mainline
            2018-01-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83958
            * decl.c (cp_finish_decomp): Diagnose if reference structure binding
            refers to incomplete type.
    
            * g++.dg/cpp1z/decomp35.C: New test.
    
    From-SVN: r258172

commit 3fbbba5960707266c2c42277aa1821bc7ba1c79d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:15:49 2018 +0100

    backport: re PR middle-end/83945 (internal compiler error: Segmentation fault with -O -fcode-hoisting)
    
            Backported from mainline
            2018-01-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/83945
            * tree-emutls.c: Include gimplify.h.
            (lower_emutls_2): New function.
            (lower_emutls_1): If ADDR_EXPR is a gimple invariant and walk_tree
            with lower_emutls_2 callback finds some TLS decl in it, unshare_expr
            it before further processing.
    
            * gcc.dg/tls/pr83945.c: New test.
    
    From-SVN: r258171

commit 8ef9da3d06c1507198f520ba3a74365d854adb21
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:14:58 2018 +0100

    backport: re PR target/83930 (ICE: RTL check: expected code 'const_int', have 'mem' in simplify_binary_operation_1, at simplify-rtx.c:3302)
    
            Backported from mainline
            2018-01-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/83930
            * simplify-rtx.c (simplify_binary_operation_1) <case UMOD>: Use
            UINTVAL (trueop1) instead of INTVAL (op1).
    
            * gcc.dg/pr83930.c: New test.
    
    From-SVN: r258170

commit 4c0b33f532b9572385dcf09dfb3327b1def39c98
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:14:11 2018 +0100

    backport: re PR c++/83824 (ICE on invalid C++ code with alignas: in chainon, at tree.c:3037)
    
            Backported from mainline
            2018-01-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83824
            * parser.c (attr_chainon): New function.
            (cp_parser_label_for_labeled_statement, cp_parser_decl_specifier_seq,
            cp_parser_namespace_definition, cp_parser_init_declarator,
            cp_parser_type_specifier_seq, cp_parser_parameter_declaration,
            cp_parser_gnu_attributes_opt): Use it.
            (cp_parser_member_declaration, cp_parser_objc_class_ivars,
            cp_parser_objc_struct_declaration): Likewise.  Don't reset
            prefix_attributes if attributes is error_mark_node.
    
            * g++.dg/cpp0x/pr83824.C: New test.
    
    From-SVN: r258169

commit 9c18f8cd36bd429da56b449aa8001d253f5eff2c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:13:28 2018 +0100

    backport: re PR c++/83817 (internal compiler error: tree check: expected call_expr, have aggr_init_expr in tsubst_copy_and_build, at cp/pt.c:17822)
    
            Backported from mainline
            2018-01-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83817
            * pt.c (tsubst_copy_and_build) <case CALL_EXPR>: If function
            is AGGR_INIT_EXPR rather than CALL_EXPR, set AGGR_INIT_FROM_THUNK_P
            instead of CALL_FROM_THUNK_P.
    
            * g++.dg/cpp1y/pr83817.C: New test.
    
    From-SVN: r258168

commit 89aa33708f47da489ac0891398e2dc22bb973828
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:12:39 2018 +0100

    backport: re PR preprocessor/83722 (the ICE dumper doesn't comment-out some error messages)
    
            Backported from mainline
            2018-01-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR preprocessor/83722
            * gcc.c (try_generate_repro): Pass
            &temp_stderr_files[RETRY_ICE_ATTEMPTS - 1] rather than
            &temp_stdout_files[RETRY_ICE_ATTEMPTS - 1] as last argument to
            do_report_bug.
    
    From-SVN: r258167

commit 7f95ef4f30f0373a99603c282931733cdf3a51d3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Mar 3 14:12:10 2018 +0100

    backport: re PR tree-optimization/83605 (ICE: verify_gimple failed (error: dead STMT in EH table))
    
            Backported from mainline
            2018-01-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83605
            * gimple-ssa-strength-reduction.c: Include tree-eh.h.
            (find_candidates_dom_walker::before_dom_children): Ignore stmts that
            can throw.
    
            * gcc.dg/pr83605.c: New test.
    
    From-SVN: r258166

commit ccfcb97e5755d2dd7c92f6d9f33816650995afef
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Mar 3 00:17:03 2018 +0000

    PR libstdc++/84671 handle digit separators in duration literals
    
    Backport from mainline
    2018-03-02  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/84671
            * include/bits/parse_numbers.h (_Number_help): Add partial
            specialization to handle digit separators. Adjust partial
            specialization for recursion temrination to require _Pow == 1ULL.
            * testsuite/20_util/duration/literals/84671.cc: New
    
    From-SVN: r258164

commit a900dfdf6d0536e59cd64e48175f4f90d02ee749
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 3 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r258162

commit ef12f9dcf7c204eac515f5d25ec12b4ecbfabf79
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 2 11:55:55 2018 -0500

    Fix MIPS16 ICE.
    
            * pt.c (type_dependent_expression_p): Check DECL_LANG_SPECIFIC.
    
    From-SVN: r258145

commit db6fe41ff5feb93fa064ffaabceced3ceef670e0
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 2 11:55:49 2018 -0500

    PR c++/84489 - dependent default template argument
    
            * pt.c (type_unification_real): Handle early substitution failure.
    
    From-SVN: r258144

commit 99364c275c372083abdae6acfbfa1b41fed1291c
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Mar 2 13:09:55 2018 +0000

    i386: Add TARGET_INDIRECT_BRANCH_REGISTER
    
    For
    
    ---
    struct C {
      virtual ~C();
      virtual void f();
    };
    
    void
    f (C *p)
    {
      p->f();
      p->f();
    }
    ---
    
    -mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:
    
    _Z1fP1C:
    .LFB0:
            .cfi_startproc
            pushq   %rbx
            .cfi_def_cfa_offset 16
            .cfi_offset 3, -16
            movq    (%rdi), %rax
            movq    %rdi, %rbx
            jmp     .LIND1
    .LIND0:
            pushq   16(%rax)
            jmp     __x86_indirect_thunk
    .LIND1:
            call    .LIND0
            movq    (%rbx), %rax
            movq    %rbx, %rdi
            popq    %rbx
            .cfi_def_cfa_offset 8
            movq    16(%rax), %rax
            jmp     __x86_indirect_thunk_rax
            .cfi_endproc
    
    x86-64 is supposed to have asynchronous unwind tables by default, but
    there is nothing that reflects the change in the (relative) frame
    address after .LIND0.  That region really has to be moved outside of
    the .cfi_startproc/.cfi_endproc bracket.
    
    This patch adds TARGET_INDIRECT_BRANCH_REGISTER to force indirect
    branch via register whenever -mindirect-branch= is used.  Now,
    -mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:
    
    _Z1fP1C:
    .LFB0:
            .cfi_startproc
            pushq   %rbx
            .cfi_def_cfa_offset 16
            .cfi_offset 3, -16
            movq    (%rdi), %rax
            movq    %rdi, %rbx
            movq    16(%rax), %rax
            call    __x86_indirect_thunk_rax
            movq    (%rbx), %rax
            movq    %rbx, %rdi
            popq    %rbx
            .cfi_def_cfa_offset 8
            movq    16(%rax), %rax
            jmp     __x86_indirect_thunk_rax
            .cfi_endproc
    
    so that "-mindirect-branch=thunk-extern" is equivalent to
    "-mindirect-branch=thunk-extern -mindirect-branch-register", which is
    used by Linux kernel.
    
    gcc/
    
            Backport from mainline
            PR target/84039
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Replace
            ix86_indirect_branch_register with
            TARGET_INDIRECT_BRANCH_REGISTER.
            (Bw): Likewise.
            * config/i386/i386.md (indirect_jump): Likewise.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Peepholes of indirect call and jump via memory: Likewise.
            (*sibcall_GOT_32): Disallowed for TARGET_INDIRECT_BRANCH_REGISTER.
            (*sibcall_value_GOT_32): Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
            * config/i386/i386.h (TARGET_INDIRECT_BRANCH_REGISTER): New.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84039
            * gcc.target/i386/indirect-thunk-1.c: Updated.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
    
    From-SVN: r258135

commit b5286ee60af1ecfe738ba8b54d694437065190be
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Mar 2 13:05:18 2018 +0000

    i386: Update -mfunction-return= for return with pop
    
    When -mfunction-return= is used, simple_return_pop_internal should pop
    return address into ECX register, adjust stack by bytes to pop from stack
    and jump to the return thunk via ECX register.
    
    Revision 257992 removed the bool argument from ix86_output_indirect_jmp.
    Update comments to reflect it.
    
    Tested on i686 and x86-64.
    
    gcc/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_output_indirect_jmp): Update comments.
    
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84530
            * config/i386/i386-protos.h (ix86_output_indirect_jmp): Remove
            the bool argument.
            (ix86_output_indirect_function_return): New prototype.
            (ix86_split_simple_return_pop_internal): Likewise.
            * config/i386/i386.c (indirect_return_via_cx): New.
            (indirect_return_via_cx_bnd): Likewise.
            (indirect_thunk_name): Handle return va CX_REG.
            (output_indirect_thunk_function): Create alias for
            __x86_return_thunk_[re]cx and __x86_return_thunk_[re]cx_bnd.
            (ix86_output_indirect_jmp): Remove the bool argument.
            (ix86_output_indirect_function_return): New function.
            (ix86_split_simple_return_pop_internal): Likewise.
            * config/i386/i386.md (*indirect_jump): Don't pass false
            to ix86_output_indirect_jmp.
            (*tablejump_1): Likewise.
            (simple_return_pop_internal): Change it to define_insn_and_split.
            Call ix86_split_simple_return_pop_internal to split it for
            -mfunction-return=.
            (simple_return_indirect_internal): Call
            ix86_output_indirect_function_return instead of
            ix86_output_indirect_jmp.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84530
            * gcc.target/i386/ret-thunk-22.c: New test.
            * gcc.target/i386/ret-thunk-23.c: Likewise.
            * gcc.target/i386/ret-thunk-24.c: Likewise.
            * gcc.target/i386/ret-thunk-25.c: Likewise.
            * gcc.target/i386/ret-thunk-26.c: Likewise.
    
    From-SVN: r258134

commit d2d907c4d1cadc46960261b9d1c95d2897801c0b
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Fri Mar 2 09:39:31 2018 +0100

    [nvptx] Add support for CUDA 9
    
    Backport trunk r256891:
    
            gcc/
            2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/83790
            * config/nvptx/nvptx.c (output_init_frag): Don't use generic address
            spaces for function labels.
    
            gcc/testsuite/
            2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/83790
            * gcc.target/nvptx/indirect_call.c: New test.
    
    From-SVN: r258126

commit 593fcf51cd4f0f0cb230b85a5886a80976adf73d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 2 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r258119

commit d6f0e7af521de1714ea902065d3c4b123d812416
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Mar 1 14:47:18 2018 -0500

    PR c++/71569 - decltype of template.
    
            * parser.c (cp_parser_decltype_expr): Handle missing template args.
    
    From-SVN: r258111

commit 276e3f24d619e87f5e3f7f57d60db7915a822ff2
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Thu Mar 1 16:41:11 2018 +0000

    backport: with follow-up r255433 commit.
    
    2017-03-01  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2017-12-05  Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>
        with follow-up r255433 commit.
    
        gcc/testsuite/
        * gcc.c-torture/unsorted/dump-noaddr.x: Generate dump files in
        tmpdir.
    
    From-SVN: r258105

commit d38532e5c4dbdbbb2cff5570730642ae6dafda10
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Mar 1 11:12:26 2018 -0500

    PR c++/71569 - ICE with redundant args on member variable template.
    
            * decl.c (start_decl): Handle partial specialization of member
            variable template.
            * pt.c (determine_specialization): Allow partial specialization
            of member variable template without specializing enclosing class.
            (process_partial_specialization): Improve error message.
    
    Co-Authored-By: Alexandre Oliva <aoliva@redhat.com>
    
    From-SVN: r258103

commit fc41aa95f8e62afa88e9d3ffa91405376148e538
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 1 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r258091

commit 5088df49e6deb124b17c4161a8ff66bca8f1903d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Feb 28 16:34:31 2018 -0500

    PR c++/71784 - ICE with ref-qualifier and explicit specialization.
    
            * pt.c (determine_specialization): Check ref-qualifier.
    
    From-SVN: r258086

commit d47385a74427eda64c8996e66109bd9229321374
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Feb 28 18:35:46 2018 +1030

    gcc testsuite changes for new linker messages
    
    GNU ld error messages have changed to comply with the GNU coding
    standards.
    
            * lib/prune.exp (prune_gcc_output): Match lower case "in function"
            GNU ld message.
            * g++.dg/other/anon5.C: Match lower case "bad value" GNU ld message.
    
    From-SVN: r258055

commit 8f95db14c6546a9ec3ba6cdf91ba1e8c3777248c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 28 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258049

commit b64aa28307bf711ee6c60fe098459d9ef03095d0
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Feb 27 10:31:29 2018 -0500

    PR c++/84496 - ICE with generic lambda in lambda.
    
            * pt.c (type_dependent_expression_p): Fix dependency checking of
            functions without DECL_TEMPLATE_INFO.
    
    From-SVN: r258037

commit b841e78ad72cd1915577b381614b5f7d15c80813
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 21:47:31 2018 -0500

    PR c++/84441 - ICE with base initialized from ?:
    
            * call.c (unsafe_copy_elision_p): Handle COND_EXPR.
    
    From-SVN: r258025

commit eff4c8eb712f5e1eec66ba8f1e71a75f52cac62c
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 21:47:25 2018 -0500

    PR c++/84520 - ICE with generic lambda in NSDMI.
    
            * lambda.c (lambda_expr_this_capture): Don't look for fake NSDMI
            'this' in a generic lambda instantiation.
    
    From-SVN: r258024

commit a68f6eae3e0b31b4d633f99cc512514305fd7b31
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 27 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r258019

commit 695604a9fab1429ad632fc2125ad18ead040693e
Author: Carl Love <cel@us.ibm.com>
Date:   Mon Feb 26 18:37:27 2018 +0000

    backport: altivec.h: Add builtin names vec_extract4b vec_insert4b.
    
    
    gcc/ChangeLog
    
    2018-02-26  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline: commit 257747 on 2018-02-16.
    
            * config/rs6000/altivec.h: Add builtin names vec_extract4b
            vec_insert4b.
            * config/rs6000/rs6000-builtin.def: Add INSERT4B and EXTRACT4B
            definitions.
            * config/rs6000/rs6000-c.c: Add the definitions for
            P9V_BUILTIN_VEC_EXTRACT4B and P9V_BUILTIN_VEC_INSERT4B.
            * config/rs6000/rs6000.c (altivec_expand_builtin): Add
            P9V_BUILTIN_EXTRACT4B and P9V_BUILTIN_INSERT4B case statements.
            * config/rs6000/vsx.md: Add define_insn extract4b.  Add define_expand
            definition for insert4b and define insn *insert3b_internal.
            * doc/extend.texi: Add documentation for vec_extract4b.
    
    gcc/testsuite/ChangeLog
    
    2018-02-26  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline: commit 257747 on 2018-02-16.
    
            * gcc.target/powerpc/builtins-7-p9-runnable.c: New runnable test file
            for the ABI definitions for vec_extract4b and vec_insert4b.
    
    From-SVN: r258007

commit 8d21a3144a9565d0364b732f8ee0adc359f369fe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Feb 26 17:09:34 2018 +0000

    PR libstdc++/84532 prevent unwrapping of reference_wrapper arguments
    
    Backport from mainline
    2018-02-23  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/84532
            * include/std/thread (thread::__make_invoker): Construct tuple
            directly instead of using make_tuple.
            * testsuite/30_threads/async/84532.cc: New.
            * testsuite/30_threads/thread/84532.cc: New.
    
    From-SVN: r258004

commit ce0cdf7168c265daf41c9ccbe956b9b313354b6e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Feb 26 16:39:41 2018 +0000

    re PR rtl-optimization/83496 (wrong code generated with -Os -mbranch-cost=1)
    
            PR rtl-optimization/83496
            * reorg.c (steal_delay_list_from_target): Change REDUNDANT array from
            booleans to RTXes.  Call fix_reg_dead_note on every non-null element.
            (steal_delay_list_from_fallthrough): Call fix_reg_dead_note on a
            redundant insn, if any.
            (relax_delay_slots): Likewise.
            (update_reg_unused_notes): Rename REDUNDANT_INSN to OTHER_INSN.
    
    From-SVN: r258000

commit b2cc5bc076275335834c0a650958d705921c9e17
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 01:09:07 2018 -0500

    PR c++/81589 - error with is_trivially_constructible.
    
            * method.c (constructible_expr): Set cp_unevaluated.
    
    Co-Authored-By: Ville Voutilainen <ville.voutilainen@gmail.com>
    
    From-SVN: r257981

commit adff9ac1becc06cfc2215703252a46e4a824bcb3
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 01:09:01 2018 -0500

    PR c++/84015 - ICE with class deduction and auto template parm.
    
            * pt.c (rewrite_template_parm): Use tf_partial in first tsubst.
    
    From-SVN: r257980

commit e65b9c0a1aae69f9ec9840f29fd5fa8ff79bc504
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 26 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r257977

commit 65f84ebdcac5d168f403fb7304bd3212032ced83
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Feb 25 17:16:09 2018 +0000

    2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Commit ChangeLog entries for r257972, wcich were forgotten.
    
    From-SVN: r257973

commit b5ffe43e310dfe63b83fe7567ce7e623c03b9087
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Feb 25 17:08:51 2018 +0000

    re PR fortran/83633 (gfortran internal compiler error for explicit-shape array with non-constant bounds)
    
    2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83633
            * decl.c (variable_decl): Check that an explicit-shape-array with
            nonconstant bounds is allowed.
    
    2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83633
            * gfortran.dg/explicit_shape_1.f90: New test.
            * gfortran.dg/automatic_module_variable.f90: Update regex.
            * gfortran.dg/bad_automatic_objects_1.f90: Ditto.
            * gfortran.dg/constant_shape.f90: Ditto.
    
    From-SVN: r257972

commit 2fcedd14799acdd172197d652906ef5fd6e65161
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Feb 25 09:30:04 2018 +0000

    re PR fortran/78238 ([OOP] ICE: verify_gimple failed, with -fdefault-integer-8)
    
    2018-02-25  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/78238
            Backport from trunk
            * gfortran.h (gfc_integer_4_kind): Define.
            * resolve.c (resolve_select_type): Make sure that the
            kind of c->high is gfc_integer_4_kind.
    
    2018-02-25  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/78238
            Backport from trunk
            * gfortran.dg/select_type_40.f90: New test.
    
    From-SVN: r257969

commit eb0050ebb0b3a8985dac0f0ed5a069bfbf930ef3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 25 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r257966

commit 1742491dab9a4d99a5bcae0c28a1dbce66cb21b6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Feb 24 17:51:09 2018 +0000

    re PR fortran/30792 (DATA implied-do substring allowed with -std=f95/f2003)
    
    2018-02-24  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/30792
            * decl.c (gfc_match_data): Check for invalid substring in
            data-implied-do
    
    2018-02-24  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/30792
            * gfortran.dg/data_substring.f90: New test.
    
    From-SVN: r257963

commit f8307ec686b2e910c13218d539504854369eadc1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 24 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257959

commit d5c8c847da83b8d79c884d91e12c829fffa5d767
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Feb 23 19:37:57 2018 +0000

    re PR fortran/84511 (Internal compiler error from directly printing return of C_LOC)
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84511
            * trans-io.c (transfer_expr): Deal with C_LOC in transfer statement.
    
    From-SVN: r257948

commit 3a2e1e322b42d7e57297c660f1122f7c6d61585e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Feb 23 19:35:51 2018 +0000

    re PR fortran/84346 (Statement functions should not accept keywords)
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84346
            * interface.c (compare_actual_formal): Issue error if keyword is
            used in a statement function.
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84346
            * gfortran.dg/statement_function_1.f90: Update test.
    
    From-SVN: r257946

commit e6edd7f791af5ec8c877b6f93725b74f0118c85a
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Feb 23 19:16:00 2018 +0000

    backport: re PR fortran/84506 (INQUIRE(pos=) always sets pos=0 with -fdefault-integer-8)
    
    2018-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/84506
            * trans-io.c (set_parameter_value_inquire): Adjust range check of
            negative unit values for kind=8 units to the kind=4 negative limit.
    
            * gfortran.dg/inquire_19.f90: New test.
    
    From-SVN: r257945

commit 7f6385a1705c9238080aeefd544c1b9de7544f8f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 23 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257926

commit 4b3dc9496cfdab862ef3645967ce9278796d5191
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Feb 22 18:52:21 2018 +0000

    re PR fortran/81116 (Last character of allocatable-length string reset to blank in an assigment)
    
    2018-02-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/81116
            PR fortran/84495
            Backport from trunk
            * frontend-passes.c (realloc_string_callback): If expression is a
            concatenation, also check for dependency.
            (constant_string_length): Check for presence of symtree.
    
    2018-02-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/81116
            PR fortran/84495
            * gfortran.dg/realloc_on_assignment_29.f90:  New test.
    
    From-SVN: r257912

commit b1214cd3b98c2e767914edf46850dcc9a1c4bb12
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Thu Feb 22 15:01:05 2018 +0000

    Adding the missing LTGT to plug the ICE in PR81228.
    
    This is a backport of r255625 of trunk.
    
    *** gcc/ChangeLog ***
    
    2018-02-22  Sudakshina Das  <sudi.das@arm.com>
                Bin Cheng  <bin.cheng@arm.com>
    
            Backport from mainline:
            2017-12-14  Sudakshina Das  <sudi.das@arm.com>
                        Bin Cheng  <bin.cheng@arm.com>
    
            PR target/81228
            * config/aarch64/aarch64.c (aarch64_select_cc_mode): Move LTGT to
            CCFPEmode.
            * config/aarch64/aarch64-simd.md (vec_cmp<mode><v_cmp_result>): Add
            LTGT.
    
    *** gcc/testsuite/ChangeLog ***
    
    2017-02-22  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline:
            2017-12-14  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/81228
            * gcc.dg/pr81228.c: New.
    
    Co-Authored-By: Bin Cheng <bin.cheng@arm.com>
    
    From-SVN: r257901

commit 446d0c490b39ef5a002043867f7aafb2406ed7ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 22 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257886

commit 0961a18f236405c7c102f5e6e5100d51d942d226
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 21 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r257867

commit e9d3cf703bcc28559b3a6e84665e842b1b85538c
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Feb 20 21:08:38 2018 +0000

    libgcc: xtensa: fix build with -mtext-section-literals
    
    libgcc/
    2018-02-20  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-02-20  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/ieee754-df.S (__adddf3_aux): Add
            .literal_position directive.
            * config/xtensa/ieee754-sf.S (__addsf3_aux): Likewise.
    
    From-SVN: r257863

commit fa07ca91a013894884aa43c246513ea106c17779
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue Feb 20 04:05:38 2018 +0000

    backport: re PR fortran/82007 (DTIO write format stored in a string leads to severe errors)
    
    2018-02-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/82007
            * resolve.c (resolve_transfer): Delete code looking for 'DT'
            format specifiers in format strings. Set formatted to true if a
            format string or format label is present.
            * trans-io.c (get_dtio_proc): Likewise. (transfer_expr): Fix
            whitespace.
    
    From-SVN: r257837

commit 32057ae18bbd3f5fef19ac72186490e9e92800ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 20 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257834

commit fa61ad2d1123631bfa7d124491d739fe093a00a6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Feb 19 16:02:38 2018 +0000

    PR libstdc++/81797 Add .NOTPARALLEL to include/Makefile for darwin
    
    Backport from mainline
    2018-02-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81797
            * configure.ac (INCLUDE_DIR_NOTPARALLEL): Define.
            * configure: Regenerate.
            * include/Makefile.am (INCLUDE_DIR_NOTPARALLEL): Add .NOTPARALLEL when
            defined.
            * include/Makefile.in: Regenerate.
    
    From-SVN: r257808

commit 89bad1c16314f5ac3d9ac2c928a34c4b4c70c014
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Feb 19 14:53:36 2018 +0000

    Fix lambdas in template default argument of inherited ctor.
    
    gcc/cp:
    
    Backport from mainline
    2017-08-29  Jason Merrill  <jason@redhat.com>
    
            Fix lambdas in template default argument of inherited ctor.
            * method.c (synthesized_method_base_walk): Replace an inherited
            template with its specialization.
            (synthesized_method_walk): Make inheriting_ctor a pointer.
            (maybe_explain_implicit_delete, explain_implicit_non_constexpr)
            (deduce_inheriting_ctor, implicitly_declare_fn): Adjust.
    
    gcc/testsuite:
    
    Backport from mainline
    2018-01-02  Marek Polacek  <polacek@redhat.com>
    
            PR c++/81860
            * g++.dg/cpp0x/inh-ctor30.C: New test.
    
    From-SVN: r257806

commit 72a5e4619827aaba26ccc892ee9d1312e397d4f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 19 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257799

commit 5286b8c296e01a1ab99eb89db191e800b8020221
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Feb 18 16:30:42 2018 +0000

    backport: re PR fortran/84412 (Erroneous "Inquire statement identifies an internal file" error)
    
    2018-02-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/84412
            * io/transfer.c (finalize_transfer): After completng an internal unit
            I/O operation, clear internal_unit_kind.
    
            * gfortran.dg/inquire_18.f90: New test.
    
    From-SVN: r257793

commit f9b6d86c4a3f2945ec37222e524acec7447da0e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 18 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257786

commit 1643fb2bcac1e5263b7218d360b1a163f4f65662
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Feb 17 16:01:50 2018 +0000

    backport: re PR fortran/84270 (optimization bug with assumed size array argument)
    
    2018-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/84270
            * frontend-passes (scalarized_expr):  If the expression
            is an assumed size array, leave in the last reference
            and pass AR_SECTION instead of AR_FULL to gfc_resolve
            in order to avoid an error.
    
    2018-02-17  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/84270
            * gfortran.dg/inline_matmul_22.f90: New test.
    
    From-SVN: r257784

commit 3abece18b2e073378af33716b7c594574910c3ed
Author: Jozef Lawrynowicz <jozefl.gcc@gmail.com>
Date:   Sat Feb 17 00:25:15 2018 +0000

    re PR target/79242 (ICE in simplify_subreg, at simplify-rtx.c:6029)
    
    2018-02-16  Jozef Lawrynowicz <jozefl.gcc@gmail.com>
    
            PR target/79242
            * machmode.def: Define a complex mode for PARTIAL_INT.
            * genmodes.c (complex_class): Return MODE_COMPLEX_INT for
            MODE_PARTIAL_INT.
            * doc/rtl.texi: Document CSPImode.
            * config/msp430/msp430.c (msp430_hard_regno_nregs): Add CPSImode
            handling.
            (msp430_hard_regno_nregs_with_padding): Likewise.
    
            PR target/79242
            gcc.target/msp430/pr79242.c: New test.
    
    From-SVN: r257779

commit f61af34fbed3de1f153e84aeecb3688e5f73d9e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 17 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r257777

commit 1be4d64652c2120d60b3d8dc531a6b1d5cdd2e42
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 16 23:26:49 2018 +0000

    re PR target/84277 (A lot of new acats testsuite failures)
    
            PR ada/84277
            * gnat.dg/array11.adb (Array11): Tweak index and remove warning.
            * gnat.dg/dispatch1.adb: Rename into...
            * gnat.dg/disp1.adb: ...this.
            * gnat.dg/dispatch1_p.ads: Rename into...
            * gnat.dg/disp1_pkg.ads: ...this.
            * gnat.dg/disp2.adb: Rename into...
            * gnat.dg/dispatch2.adb: ...this.
            * gnat.dg/dispatch2_p.ads: Rename into...
            * gnat.dg/disp2_pkg.ads: ...this.
            * gnat.dg/dispatch2_p.adb: Rename into...
            * gnat.dg/disp2_pkg.adb: this.
            * gnat.dg/generic_dispatch.adb: Rename into...
            * gnat.dg/generic_disp.adb: this.
            * gnat.dg/generic_dispatch_p.ads: Rename into...
            * gnat.dg/generic_disp_pkg.ads: ...this.
            * gnat.dg/generic_dispatch_p.adb: Rename into...
            * gnat.dg/generic_disp_pkg.adb: ...this.
            * gnat.dg/null_pointer_deref1.adb (Null_Pointer_Deref1): Robustify.
            * gnat.dg/null_pointer_deref2.adb (Null_Pointer_Deref2): Likewise.
            * gnat.dg/object_overflow1.adb: Tweak index.
            * gnat.dg/object_overflow2.adb: Likewise.
            * gnat.dg/object_overflow3.adb: Likewise.
            * gnat.dg/object_overflow4.adb: Likewise.
            * gnat.dg/object_overflow5.adb: Likewise.
    
    From-SVN: r257774

commit 850cdd0cd7b98b386caef20bc52cfb20d966ff73
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 16:06:56 2018 -0500

    PR c++/84151 - unnecessary volatile load with static member.
    
            * call.c (build_new_method_call_1): Avoid loading from a volatile
            lvalue used as the object argument for a static member function.
    
    From-SVN: r257767

commit 72123b430605f718a4941ae7aa5f619ee92f5534
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 16:06:50 2018 -0500

    PR c++/81853 - using-directive and constexpr.
    
            * constexpr.c (cxx_eval_constant_expression): Handle USING_STMT.
    
    From-SVN: r257766

commit 755f523693c508d99d3a14708494288a3d3c7b4d
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 16:06:45 2018 -0500

    PR c++/84420 - ICE with structured binding in lambda.
    
            * lambda.c (is_capture_proxy): Check DECL_DECOMPOSITION_P.
    
    From-SVN: r257765

commit 54c2127a382890b0f781aee6439b82a5c9226a3e
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 16:06:39 2018 -0500

    PR c++/83835 - C++17 error with constructor ctors.
    
            * call.c (build_special_member_call): Set TARGET_EXPR_DIRECT_INIT_P.
    
    From-SVN: r257764

commit bb6ee7116e9128b0dbd149fea7039d3064038725
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 14:06:59 2018 -0500

    PR c++/82664 - ICE with reference to function template parm.
    
            * pt.c (convert_nontype_argument_function): Avoid obfuscationg
            NOP_EXPRs.
    
    From-SVN: r257754

commit 73ffff9633d35d045496494760b39313c0c2acfb
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 11:45:49 2018 -0500

    PR c++/82764 - C++17 ICE with empty base
    
            * class.c (build_base_field_1): Set DECL_SIZE to zero for empty
            base.
    
    From-SVN: r257746

commit 45a1860e42efa7e8ba56143bc4553777d5df158e
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Fri Feb 16 15:37:35 2018 +0000

    Fix emit_store_flag_force () function to fix ICE in int_mode_for_mode,
    
    at stor-layout.c:403 with arm-linux-gnueabi.
    
    *** gcc/ChangeLog ***
    
    2018-02-16  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from trunk
            2018-01-10  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82096
            * expmed.c (emit_store_flag_force): Swap if const op0
            and change VOIDmode to mode of op0.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-02-16  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from trunk
            2018-01-12  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.c-torture/compile/pr82096.c: Add dg-skip-if
            directive.
    
            Backport from trunk
            2018-01-10  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82096
            * gcc.c-torture/compile/pr82096.c: New test.
    
    From-SVN: r257741

commit 40f10e4bdef40e6d59356cde40c26fbbb1d61b55
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 09:12:48 2018 -0500

    PR c++/83227 - C++17 ICE with init-list derived-to-base conversion.
    
            * call.c (convert_like_real): Don't use the copy-list-initialization
            shortcut for ck_base.
    
    From-SVN: r257738

commit e46c575b587699f7d18fbc63efc371f18b7f8ebb
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 09:12:42 2018 -0500

    PR c++/84045 - ICE with typedef and noexcept.
    
            * except.c (build_noexcept_spec): Use strip_typedefs_expr.
    
    From-SVN: r257737

commit a263579fc5086bae492166491a54a7329ca8c153
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Feb 16 07:57:56 2018 +0000

    re PR c/84190 (double arithmetic on x86 no longer rounds to nearest)
    
    2018-02-16  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/84190
            * tree-ssa.c (non_rewritable_mem_ref_base): Do not touch
            volatile accesses if the decl isn't volatile.
    
            * g++.dg/torture/pr84190.C: New testcase.
    
    From-SVN: r257722

commit 04024315b4bb1add360b1303553359ab9d1fb5e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 16 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r257717

commit c6d64f05c162ee006493522fdf0275d177de77e6
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Feb 15 17:54:41 2018 +0000

    backport: re PR target/84154 (PowerPC GCC 7 and 8 have regression in converting fp to short/char and returning it)
    
    [gcc]
    2018-02-15  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-02-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/84154
            * config/rs6000/rs6000.md (fix_trunc<SFDF:mode><QHI:mode>2):
            Convert from define_expand to be define_insn_and_split.  Rework
            float/double/_Float128 conversions to QI/HI/SImode to work with
            both ISA 2.07 (power8) or ISA 3.0 (power9).  Fix regression where
            conversions to QI/HImode types did a store and then a load to
            truncate the value.  For conversions to VSX registers, don't split
            the insn, instead emit the code directly.  Use the code iterator
            any_fix to combine signed and unsigned conversions.
            (fix<uns>_trunc<SFDF:mode>si2_p8): Likewise.
            (fixuns_trunc<SFDF:mode><QHI:mode>2): Likewise.
            (fix_trunc<IEEE128:mode><QHI:mode>2): Likewise.
            (fix<uns>_trunc<SFDF:mode><QHI:mode>2): Likewise.
            (fix_<mode>di2_hw): Likewise.
            (fixuns_<mode>di2_hw): Likewise.
            (fix_<mode>si2_hw): Likewise.
            (fixuns_<mode>si2_hw): Likewise.
            (fix<uns>_<IEEE128:mode><SDI:mode>2_hw): Likewise.
            (fix<uns>_trunc<IEEE128:mode><QHI:mode>2): Likewise.
            (fctiw<u>z_<mode>_smallint): Rename fctiw<u>z_<mode>_smallint to
            fix<uns>_trunc<SFDF:mode>si2_p8.
            (fix_trunc<SFDF:mode><QHI:mode>2_internal): Delete, no longer
            used.
            (fixuns_trunc<SFDF:mode><QHI:mode>2_internal): Likewise.
            (fix<uns>_<mode>_mem): Likewise.
            (fctiw<u>z_<mode>_mem): Likewise.
            (fix<uns>_<mode>_mem): Likewise.
            (fix<uns>_trunc<SFDF:mode><QHSI:mode>2_mem): On ISA 3.0, prevent
            the register allocator from doing a direct move to the GPRs to do
            a store, and instead use the ISA 3.0 store byte/half-word from
            vector register instruction.  For IEEE 128-bit floating point,
            also optimize stores of 32-bit ints.
            (fix<uns>_trunc<IEEE128:mode><QHSI:mode>2_mem): Likewise.
    
    [gcc/testsuite]
    2018-02-15  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-02-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/84154
            * gcc.target/powerpc/pr84154-1.c: New tests.
            * gcc.target/powerpc/pr84154-2.c: Likewise.
            * gcc.target/powerpc/pr84154-3.c: Likewise.
    
    From-SVN: r257697

commit 401444beff20cb9332d62c314df7726057044cdf
Author: Will Schmidt <will_schmidt@vnet.ibm.com>
Date:   Thu Feb 15 14:50:15 2018 +0000

    re PR testsuite/84388 (test case gcc/testsuite/gcc.target/powerpc/fold-vec-mult-int128-p9.c fails for gcc 7 on power9)
    
    [testsuite]
    
    2018-02-15  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            PR target/84388
            * gcc.target/powerpc/fold-vec-mult-int128-p8.c: Update dg-options
            and scan-assembler stanzas.
            * gcc.target/powerpc/fold-vec-mult-int128-p9.c: Same.
    
    From-SVN: r257692

commit b90fb39d27cd521593b9b7636fe143ab63ae3968
Author: Aaron Sawdey <acsawdey@linux.vnet.ibm.com>
Date:   Thu Feb 15 14:48:15 2018 +0000

    backport: re PR debug/83758 (ICE building gccgo on powerpc64le --with-cpu=power8)
    
    2018-02-15  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            Back port from mainline
            2018-01-30  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            PR target/83758
            * config/rs6000/rs6000.c (rs6000_internal_arg_pointer): Only return
            a reg rtx.
    
    From-SVN: r257691

commit caf5565402575d6fc0f57a40b16eb84f4cd841ad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 15 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r257678

commit 04d3ad5d3f7704fc63ad86ad5b6b11825c06f6eb
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Feb 14 13:56:25 2018 -0600

    re PR target/84390 (test case gcc.target/powerpc/vsxcopy.c fails for gcc 7 and gcc 6 on power9)
    
            PR target/84390
            * gcc.target/powerpc/vsxcopy.c: Also match lxv when compiling
            with -mcpu=power9.
    
    From-SVN: r257670

commit 6f2750187ddedcaf4fbe0f3572a8bb0b03ea2b3c
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Feb 14 12:48:53 2018 -0600

    backport: re PR target/84372 (test case gcc.target/powerpc/lvsl-lvsr.c fails on power9)
    
            Back port from mainline
            2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84372
            * gcc.target/powerpc/lvsl-lvsr.c: Also match lxv when compiling
            with -mcpu=power9.
    
    From-SVN: r257667

commit a1cd383520ce5414e8164398cf9de2d0abcf5b1e
Author: Peter Bergner <bergner@gcc.gnu.org>
Date:   Wed Feb 14 09:17:04 2018 -0600

    backport: re PR target/84279 (powerpc64le ICE on cvc4)
    
    gcc/
            Back port from mainline
            2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84279
            * config/rs6000/rs6000.c (mem_operand_gpr): Disallow altivec addresses.
    
    gcc/testsuite/
            Back port from mainline
            2018-02-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84279
            * g++.dg/pr84279.C: New test.
    
    From-SVN: r257661

commit f58f535f35a3aa42e57864bbd901fc1b41067269
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Feb 14 13:55:47 2018 +0100

    Fix location handling in ipa_modify_call_arguments
    
    2018-02-14  Martin Jambor  <mjambor@suse.cz>
    
            PR c++/83990
            * ipa-prop.c (ipa_modify_call_arguments): Use location of call
            statements, also set location of a load to a temporary.
    
    From-SVN: r257656

commit 0097d9582a602dbb94b305cf1aff04a638b7bc01
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 14 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257650

commit 5aba19fadffd17b01c19f0f0d513046a0457f3cc
Author: Alastair McKinstry <alastair.mckinstry@sceal.ie>
Date:   Tue Feb 13 08:03:04 2018 +0000

    Make module files reproducible
    
    Using lbasename ensures that the build path does not end up in the
    module file.
    
    Regtested on x86_64-pc-linux-gnu. Backport from trunk.
    
    2018-02-13  Alastair McKinstry  <alastair.mckinstry@sceal.ie>
                Janne Blomqvist  <jb@gcc.gnu.org>
    
            * module.c (dump_module): Use lbasename to ensure that module
            files are reproducible.
    
    Co-Authored-By: Janne Blomqvist <jb@gcc.gnu.org>
    
    From-SVN: r257614

commit 07f8a7f6b0d08d1a853ad3ed1572b9d6926fa677
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 13 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257609

commit 727bcd82f20f28df4ca6b34300c6b52b7bc7109c
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Feb 12 20:13:30 2018 +0000

    re PR fortran/68560 (The test gfortran.dg/shape_8.f90 now fails when compiled with -flto)
    
    2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/68560
            * gfortran.dg/shape_9.f90: New test.
    
    2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/68560
            * gfortran.dg/shape_9.f90: New test.
    
    From-SVN: r257602

commit 97b3a91f9c3d3b15dffaa0b2c02568d42c06d119
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Feb 12 18:08:02 2018 +0000

    re PR fortran/35299 (scope of variables in statement function do not acquire rank from host)
    
    2018-02-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
    
            PR fortran/35299
            ChangeLog for r257566
            * gfortran.dg/statement_function_3.f: New test.
    
    2018-02-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
    
            PR fortran/35299
            ChangeLog for r257566
            * resolve.c (resolve_formal_arglist): Update error message.
    
    From-SVN: r257594

commit 2b99dac472fc04ac42abb64ad986173182d328d8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Feb 12 18:04:33 2018 +0000

    re PR fortran/54223 (Statement function statement with dummy arguments that are also OPTIONAL may crash in wrong calls)
    
    2018-02-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/54223
            PR fortran/84276
            * interface.c (compare_actual_formal): Add in_statement_function
            bool parameter.  Skip check of INTENT attribute for statement
            functions.  Arguments to a statement function cannot be optional,
            issue error for missing argument.
            (gfc_procedure_use, gfc_ppc_use, gfc_arglist_matches_symbol): Use
            in_statement_function.
    
    2018-02-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/54223
            PR fortran/84276
            * gfortran.dg/statement_function_1.f90: New test.
            * gfortran.dg/statement_function_2.f90: New test.
    
    From-SVN: r257593

commit 4644b5209df2ec79d3c19b3a0e817cc2bccaeb8d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 12 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257573

commit 90c79d7a86d2062a18edda5c016676558928d871
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 11 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257558

commit caeda217caa6ba0feda938c54e1e1629c4e9717e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Feb 10 23:35:00 2018 +0000

    pa.c (hppa_profile_hook): Mark SYMBOL_REF for _mcount as function label.
    
            * config/pa/pa.c (hppa_profile_hook): Mark SYMBOL_REF for _mcount as
            function label.
    
    From-SVN: r257555

commit 3c2b0b5a38be8c9fba03ce206d0dea0fce9b01e0
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Feb 10 19:55:06 2018 +0000

    backport: re PR middle-end/84089 (FAIL: g++.dg/cpp1y/lambda-generic-x.C  -std=gnu++14 (internal compiler error))
    
            Backport from mainline
            2018-02-01  Aldy Hernandez  <aldyh@redhat.com>
    
            PR target/84089
            * config/pa/predicates.md (base14_operand): Handle VOIDmode.
    
    From-SVN: r257552

commit 2ad529135859cd1235f59b8b52a2df781c877a99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 10 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r257547

commit 380d364374224fde2018785f559a231e450149dc
Author: Martin Jambor <mjambor@suse.cz>
Date:   Fri Feb 9 16:49:20 2018 +0100

    [hsa] Set program allocation for static local variables
    
    2018-02-09  Martin Jambor  <mjambor@suse.cz>
    
            * hsa-gen.c (get_symbol_for_decl): Set program allocation for
            static local variables.
    
    libgomp/
            * testsuite/libgomp.hsa.c/staticvar.c: New test.
    
    From-SVN: r257528

commit d4841529d0f456ebe9c0cfce5939baa37e4faa33
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Feb 9 11:45:49 2018 +0000

    S/390: Fix PR84295
    
    gcc/ChangeLog:
    
    2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/PR84295
            * config/s390/s390.c (s390_set_current_function): Invoke
            s390_indirect_branch_settings also if fndecl didn't change.
    
    gcc/testsuite/ChangeLog:
    
    2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/PR84295
            * gcc.target/s390/pr84295.c: New test.
    
    From-SVN: r257523

commit ed3783d6f4d00238c6c509eaf7afadfd28f8f681
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 9 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257507

commit 45bb1b8e46f0cf589ce61328f25f948eabad4838
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Thu Feb 8 18:48:37 2018 +0000

    re PR target/84113 (libgcc/unwind.inc:136:1: unrecognizable insn: internal compiler error on Darwin)
    
    2018-02-08  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/84113
            * config/rs6000/altivec.md (*restore_world): Remove LR use.
            * config/rs6000/predicates.md (restore_world_operation): Adjust op
            count, remove one USE.
    
    From-SVN: r257501

commit 9bdc290eccdc0f6f351423a9097c8d545d93ca50
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Feb 8 17:00:48 2018 +0000

    S/390: Disable branch prediction for indirect branches
    
    gcc/ChangeLog:
    
    2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-opts.h (enum indirect_branch): Define.
            * config/s390/s390-protos.h (s390_return_addr_from_memory)
            (s390_indirect_branch_via_thunk)
            (s390_indirect_branch_via_inline_thunk): Add function prototypes.
            (enum s390_indirect_branch_type): Define.
            * config/s390/s390.c (struct s390_frame_layout, struct
            machine_function): Remove.
            (indirect_branch_prez10thunk_mask, indirect_branch_z10thunk_mask)
            (indirect_branch_table_label_no, indirect_branch_table_name):
            Define variables.
            (INDIRECT_BRANCH_NUM_OPTIONS): Define macro.
            (enum s390_indirect_branch_option): Define.
            (s390_return_addr_from_memory): New function.
            (s390_handle_string_attribute): New function.
            (s390_attribute_table): Add new attribute handler.
            (s390_execute_label): Handle UNSPEC_EXECUTE_JUMP patterns.
            (s390_indirect_branch_via_thunk): New function.
            (s390_indirect_branch_via_inline_thunk): New function.
            (s390_function_ok_for_sibcall): When jumping via thunk disallow
            sibling call optimization for non z10 compiles.
            (s390_emit_call): Force indirect branch target to be a single
            register.  Add r1 clobber for non-z10 compiles.
            (s390_emit_epilogue): Emit return jump via return_use expander.
            (s390_reorg): Handle JUMP_INSNs as execute targets.
            (s390_option_override_internal): Perform validity checks for the
            new command line options.
            (s390_indirect_branch_attrvalue): New function.
            (s390_indirect_branch_settings): New function.
            (s390_set_current_function): Invoke s390_indirect_branch_settings.
            (s390_output_indirect_thunk_function):  New function.
            (s390_code_end): Implement target hook.
            (s390_case_values_threshold): Implement target hook.
            (TARGET_ASM_CODE_END, TARGET_CASE_VALUES_THRESHOLD): Define target
            macros.
            * config/s390/s390.h (struct s390_frame_layout)
            (struct machine_function): Move here from s390.c.
            (TARGET_INDIRECT_BRANCH_NOBP_RET)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP_THUNK)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP_INLINE_THUNK)
            (TARGET_INDIRECT_BRANCH_NOBP_CALL)
            (TARGET_DEFAULT_INDIRECT_BRANCH_TABLE)
            (TARGET_INDIRECT_BRANCH_THUNK_NAME_EXRL)
            (TARGET_INDIRECT_BRANCH_THUNK_NAME_EX)
            (TARGET_INDIRECT_BRANCH_TABLE): Define macros.
            * config/s390/s390.md (UNSPEC_EXECUTE_JUMP)
            (INDIRECT_BRANCH_THUNK_REGNUM): Define constants.
            (mnemonic attribute): Add values which aren't recognized
            automatically.
            ("*cjump_long", "*icjump_long", "*basr", "*basr_r"): Disable
            pattern for branch conversion.  Fix mnemonic attribute.
            ("*c<code>", "*sibcall_br", "*sibcall_value_br", "*return"): Emit
            indirect branch via thunk if requested.
            ("indirect_jump", "<code>"): Expand patterns for branch conversion.
            ("*indirect_jump"): Disable for branch conversion using out of
            line thunks.
            ("indirect_jump_via_thunk<mode>_z10")
            ("indirect_jump_via_thunk<mode>")
            ("indirect_jump_via_inlinethunk<mode>_z10")
            ("indirect_jump_via_inlinethunk<mode>", "*casesi_jump")
            ("casesi_jump_via_thunk<mode>_z10", "casesi_jump_via_thunk<mode>")
            ("casesi_jump_via_inlinethunk<mode>_z10")
            ("casesi_jump_via_inlinethunk<mode>", "*basr_via_thunk<mode>_z10")
            ("*basr_via_thunk<mode>", "*basr_r_via_thunk_z10")
            ("*basr_r_via_thunk", "return<mode>_prez10"): New pattern.
            ("*indirect2_jump"): Disable for branch conversion.
            ("casesi_jump"): Turn into expander and expand patterns for branch
            conversion.
            ("return_use"): New expander.
            ("*return"): Emit return via thunk and rename it to ...
            ("*return<mode>"): ... this one.
            * config/s390/s390.opt: Add new options and and enum for the
            option values.
    
    gcc/testsuite/ChangeLog:
    
    2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/nobp-function-pointer-attr.c: New test.
            * gcc.target/s390/nobp-function-pointer-nothunk.c: New test.
            * gcc.target/s390/nobp-function-pointer-z10.c: New test.
            * gcc.target/s390/nobp-function-pointer-z900.c: New test.
            * gcc.target/s390/nobp-indirect-jump-attr.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-attr.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-z10.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-z900.c: New test.
            * gcc.target/s390/nobp-indirect-jump-nothunk.c: New test.
            * gcc.target/s390/nobp-indirect-jump-z10.c: New test.
            * gcc.target/s390/nobp-indirect-jump-z900.c: New test.
            * gcc.target/s390/nobp-return-attr-all.c: New test.
            * gcc.target/s390/nobp-return-attr-neg.c: New test.
            * gcc.target/s390/nobp-return-mem-attr.c: New test.
            * gcc.target/s390/nobp-return-mem-nothunk.c: New test.
            * gcc.target/s390/nobp-return-mem-z10.c: New test.
            * gcc.target/s390/nobp-return-mem-z900.c: New test.
            * gcc.target/s390/nobp-return-reg-attr.c: New test.
            * gcc.target/s390/nobp-return-reg-mixed.c: New test.
            * gcc.target/s390/nobp-return-reg-nothunk.c: New test.
            * gcc.target/s390/nobp-return-reg-z10.c: New test.
            * gcc.target/s390/nobp-return-reg-z900.c: New test.
            * gcc.target/s390/nobp-table-jump-inline-z10.c: New test.
            * gcc.target/s390/nobp-table-jump-inline-z900.c: New test.
            * gcc.target/s390/nobp-table-jump-z10.c: New test.
            * gcc.target/s390/nobp-table-jump-z900.c: New test.
    
    From-SVN: r257498

commit 784c86ebd6c6174413d16756e717222226d64982
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Feb 8 13:30:49 2018 +0000

    re PR middle-end/84233 (ICE (segfault) in gimple_assign_rhs_code)
    
    2018-02-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/84233
            * tree-ssa-phiprop.c (propagate_with_phi): Use separate
            changed flag instead of boguously re-using phi_inserted.
    
            * g++.dg/torture/pr84233.C: New testcase.
    
    From-SVN: r257487

commit 9ca2653483b14fd1caeaadc68d10d945fdd7fe9e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 8 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257476

commit acdd508a97c220a9a4c6a2992f6363682eb29be6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Feb 7 22:36:24 2018 +0000

    re PR fortran/82994 (ICE in gfc_match_deallocate, at fortran/match.c:4478)
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82994
            * match.c (gfc_match_deallocate): Check for NULL pointer.
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82994
            * gfortran.dg/deallocate_error_3.f90: New test.
            * gfortran.dg/deallocate_error_4.f90: New test.
    
    From-SVN: r257467

commit 1c96aa8b474f2f6c0e36a7032d7e38cd47a0cce4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Feb 7 20:45:40 2018 +0000

    re PR fortran/82049 (ICE with character(*),parameter array constructor)
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82049
            * match.c (gfc_match_type_spec): If the charlen is non-NULL, then
            try to resolve it.  While here return early if possible.
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82049
            * gfortran.dg/assumed_charlen_parameter.f90: New test.
    
    From-SVN: r257460

commit d6e5fa72eb33fef3d9a418895eacbd82f637d93b
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Feb 7 20:04:39 2018 +0000

    backport: rs6000.c (rs6000_option_override_internal): Display warning message for -mno-speculate-indirect-jumps.
    
    [gcc]
    
    2018-02-07  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_option_override_internal):
            Display warning message for -mno-speculate-indirect-jumps.
    
    [gcc/testsuite]
    
    2018-02-07  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/safe-indirect-jump-1.c: Detect deprecation
            warning for -mno-speculate-indirect-jumps.
            * gcc.target/powerpc/safe-indirect-jump-2.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-3.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-4.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-5.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-6.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-7.c: Likewise.
    
    From-SVN: r257458

commit 701609214f87edd64dfe6258504892071a0b0f26
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 7 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r257434

commit 5facf7ac76a9f9dcadd8a513255b75e57a226414
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Feb 6 10:30:49 2018 +0000

    Avoid cc1 SEGV in gcc.dg/rtl/x86_64/final.c (PR target/79975)
    
            PR target/79975
            * gcc.dg/rtl/x86_64/final.c: Add -fdwarf2-cfi-asm to dg-options.
    
    From-SVN: r257409

commit bb1279f1364146f7c8233723bc82e5c7a5ae4096
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 6 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257403

commit 7d28399ad6afa23958fc4446c3cf945329a5214f
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Feb 5 22:35:08 2018 +0000

    Disable SHF_MERGE on Solaris 10/x86 (PR bootstrap/84017)
    
            Backport from mainline
            2018-01-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR bootstrap/84017
            * configure.ac (gcc_cv_as_shf_merge): Disable on Solaris 10/x86.
            * configure: Regenerate.
    
    From-SVN: r257398

commit 8ee9f279136b8d164ae24d4008eb140b727554e0
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Feb 5 13:17:37 2018 -0600

    backport: re PR target/56010 (Powerpc, -mcpu=native and -mtune=native  use the wrong name for target 7450)
    
            Back port from mainline
            2018-02-01  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/56010
            PR target/83743
            * config/rs6000/driver-rs6000.c: #include "diagnostic.h".
            #include "opts.h".
            (rs6000_supported_cpu_names): New static variable.
            (linux_cpu_translation_table): Likewise.
            (elf_platform) <cpu>: Define new static variable and use it.
            Translate kernel AT_PLATFORM name to canonical name if needed.
            Error if platform name is unknown.
    
    From-SVN: r257392

commit 6ba0afd9704f74b397ffc59593dd65701052b193
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 5 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r257371

commit 9ec67122e664d95fea4b17e2d2dee7ad01e1baa6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 4 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r257361

commit a280be2ab238ecf70748bb3bc40a6bb5953f2110
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 3 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257354

commit f11eef4c5abacac40814ffbe82a1f2d22d124fc5
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Feb 2 16:47:02 2018 +0000

    i386: Pass INVALID_REGNUM as invalid register number
    
            Backport from mainline
            * config/i386/i386.c (ix86_output_function_return): Pass
            INVALID_REGNUM, instead of -1, as invalid register number to
            indirect_thunk_name and output_indirect_thunk.
    
    From-SVN: r257341

commit fc8922bb92b05197b39787640ca8f785c5e7786b
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Feb 2 17:05:27 2018 +0100

    dec_parameter_1.f (sub1): Remove statement with no effect.
    
            * gfortran.dg/dec_parameter_1.f (sub1): Remove statement with no effect.
            * gfortran.dg/dec_parameter_2.f90 (sub1): Ditto.
    
    From-SVN: r257338

commit 5fb556ce38e8697b99eab6ae27f3ce40421d12bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 2 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r257321

commit e569fc9aac6f6f02a66a950c42a323ca1620fb7e
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Feb 1 23:22:03 2018 +0100

    re PR rtl-optimization/84123 (internal compiler error: in gen_rtx_SUBREG, at emit-rtl.c:908, alpha linux.)
    
            PR rtl-optimization/84123
            * combine.c (change_zero_ext): Check if hard register satisfies
            can_change_dest_mode before calling gen_lowpart_SUBREG.
    
    From-SVN: r257318

commit d94c2790e0df880cbac2815e565891e759d9a513
Author: Renlin Li <renlin.li@arm.com>
Date:   Thu Feb 1 21:09:06 2018 +0000

    [PR83370][AARCH64]Use tighter register constraint for sibcall patterns.
    
    gcc/
    
            backport from mainline
            2018-02-01  Renlin Li  <renlin.li@arm.com>
    
            PR target/83370
            * config/aarch64/aarch64.c (aarch64_class_max_nregs): Handle
            TAILCALL_ADDR_REGS.
            (aarch64_register_move_cost): Likewise.
            * config/aarch64/aarch64.h (reg_class): Rename CALLER_SAVE_REGS to
            TAILCALL_ADDR_REGS.
            (REG_CLASS_NAMES): Likewise.
            (REG_CLASS_CONTENTS): Rename CALLER_SAVE_REGS to
            TAILCALL_ADDR_REGS. Remove IP registers.
            * config/aarch64/aarch64.md (Ucs): Update register constraint.
    
    gcc/testsuite/
    
            backport from mainline
            2018-02-01  Richard Sandiford  <richard.sandiford@linaro.org>
    
            PR target/83370
            * gcc.target/aarch64/pr83370.c: New.
    
    From-SVN: r257314

commit 8ee604e0083e43c4ab9e4d5ace7bf35135a519c9
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Feb 1 12:07:46 2018 +0000

    backport: re PR target/82795 (ICE in predicate_mem_writes, at tree-if-conv.c:2251)
    
    2018-02-01  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-11-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82795
            * tree-if-conv.c (predicate_mem_writes): Remove bogus assert.
    
            * gcc.target/i386/pr82795.c: New testcase.
    
    From-SVN: r257292

commit c6bd500eca0f0cb046e5e01a8592ede3491aee4c
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Feb 1 08:07:12 2018 +0000

    Guard against incomplete AVX512F support in Solaris as
    
            Backport from mainline
            2018-01-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * lib/target-supports.exp (check_effective_target_avx512f): Also
            check for __builtin_ia32_addsd_round,
            __builtin_ia32_getmantsd_round.
            * gcc.target/i386/i386.exp (check_effective_target_avx512f):
            Remove.
    
    From-SVN: r257282

commit 1d1418bd61e3a9af117d83a84bdbbb30a2902737
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 1 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r257278

commit 12ee89961adabee3b6e185ee756211eee1820581
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jan 31 18:22:19 2018 +0000

    backport: re PR bootstrap/80867 (gnat bootstrap broken on powerpc64le-linux-gnu with -O3)
    
    gcc/ChangeLog:
    
    2018-01-31  Richard Biener <rguenther@suse.de>
                Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline
            2018-01-29  Richard Biener <rguenther@suse.de>
                        Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR bootstrap/80867
            * tree-vect-stmts.c (vectorizable_call): Don't call
            targetm.vectorize_builtin_md_vectorized_function if callee is
            NULL.
    
    
    Co-Authored-By: Kelvin Nilsen <kelvin@gcc.gnu.org>
    
    From-SVN: r257248

commit 9f734f6bec4b45c6ceca72fcddd4e2929904eb14
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jan 31 15:01:53 2018 +0000

    re PR rtl-optimization/84071 (wrong elimination of zero-extension after sign-extended load)
    
            PR rtl-optimization/84071
            * doc/tm.texi.in (WORD_REGISTER_OPERATIONS): Add explicit case.
            * doc/tm.texi: Regenerate.
    
    From-SVN: r257238

commit fa2faf84b1844f99b8d3fa2ed61b05defd15ca7b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jan 31 10:08:08 2018 +0000

    re PR rtl-optimization/84071 (wrong elimination of zero-extension after sign-extended load)
    
            PR rtl-optimization/84071
            * combine.c (record_dead_and_set_regs_1): Record the source unmodified
            for a paradoxical SUBREG on a WORD_REGISTER_OPERATIONS target.
    
    From-SVN: r257226

commit 930e0d77a4f8656340d9d0421e031605d795f6d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 31 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r257214

commit 52d413c621c0bfd8b175e3752513ab5606abf134
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 30 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r257169

commit fe72e7ff6835c4a6e8c25bea6e696b3e3fe97579
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jan 29 21:00:52 2018 +0000

    Fix m68k-linux-gnu libgcc build for ColdFire (PR target/68467).
    
    PR target/68467 is libgcc failing to build for m68k-linux-gnu
    configured for ColdFire.
    
    Jeff has an analysis in the PR identifying the problem as resulting
    from the callers of libcalls with 1-byte or 2-byte arguments wanting
    to push just 1 or 2 bytes on the stack, while the libcall
    implementations have the normal C ABI and expect 4-byte arguments.
    For normal C functions, I believe the TARGET_PROMOTE_PROTOTYPES
    definition would ensure such arguments get passed as 4-byte, but that
    does not apply for libcalls.
    
    This patch fixes the issue by defining TARGET_PROMOTE_FUNCTION_MODE
    for m68k.  The definition is conservative, only applying promotions in
    the case of arguments to libcalls; otherwise it returns the unpromoted
    type, which I believe matches what the default implementation of the
    hook would have done on m68k.
    
    I have tested that this fixes the libgcc build for ColdFire, and, in
    conjunction with one glibc patch, this enables glibc to build cleanly
    for ColdFire and to pass the compilation parts of the glibc testsuite
    except for one test unrelated to this patch (while glibc and the
    compilation parts of the testsuite continue to build OK for
    non-ColdFire m68k, as expected).  I have *not* run any GCC tests for
    this patch, or any execution tests for m68k.
    
            Backport from mainline
            2018-01-24  Joseph Myers  <joseph@codesourcery.com>
    
            PR target/68467
            * config/m68k/m68k.c (m68k_promote_function_mode): New function.
            (TARGET_PROMOTE_FUNCTION_MODE): New macro.
    
    From-SVN: r257165

commit fceecb5f37d65944c822bd172cde89e670669d49
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jan 29 15:58:36 2018 -0500

    PR c++/82461 - constexpr list-initialized member
    
            * constexpr.c (potential_constant_expression_1): Check
            TARGET_EXPR_DIRECT_INIT_P.
    
    From-SVN: r257164

commit 1f82453a8d53d125bec259d9fdfd58597d289a51
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Jan 29 17:03:17 2018 +0100

    backport: re PR target/81763 (Issues with BMI on 32bit x86 apps on GCC 7.1+)
    
            Backport from mainline
            2018-01-26  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81763
            * config/i386/i386.md (*andndi3_doubleword): Add earlyclobber
            to (=&r,r,rm) alternative. Add (=r,0,rm) and (=r,r,0) alternatives.
    
    From-SVN: r257154

commit 9a5343f7114472a30b546fdf7bb855898e60c633
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 29 14:45:00 2018 +0000

    PR libstdc++/83833 fix failing test on ia32
    
            PR libstdc++/83833
            * testsuite/26_numerics/random/chi_squared_distribution/83833.cc:
            Add -ffloat-store to options for m68k and ia32.
    
    From-SVN: r257150

commit 0396ba8a888ccca825e5d09c9d4399acbacc642c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 29 13:58:54 2018 +0000

    PR libstdc++/83658 fix exception-safety in std::any::emplace
    
            PR libstdc++/83658
            * include/std/any (any::__do_emplace): Only set _M_manager after
            constructing the contained object.
            * testsuite/20_util/any/misc/any_cast_neg.cc: Adjust dg-error line.
            * testsuite/20_util/any/modifiers/83658.cc: New test.
    
    From-SVN: r257145

commit feb2be45d4c997832a903a506f184627e946215f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 29 13:58:49 2018 +0000

    PR libstdc++/83833 fix chi_squared_distribution::param(const param&)
    
    Backport from mainline
    2018-01-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83833
            * include/bits/random.h (chi_squared_distribution::param): Update
            gamma distribution parameter.
            * testsuite/26_numerics/random/chi_squared_distribution/83833.cc: New
            test.
    
    From-SVN: r257144

commit 1bb3a7a3afc0feea745a5d5b6d7e2a829d38a876
Author: Alan Modra <amodra@gcc.gnu.org>
Date:   Mon Jan 29 14:58:41 2018 +1030

    fix changelog typo
    
    From-SVN: r257136

commit 07d298bf39a5d200b94efd38b5dd67ad06d2f3ed
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Jan 29 14:53:00 2018 +1030

    PR84033, powerpc64le -moptimize-swaps bad code with vec_vbpermq
    
    vbpermq produces its output in bits 48..63 of the target vector reg,
    so the output cannot be lane swapped.
    
    gcc/
            PR target/84033
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Exclude
            UNSPEC_VBPERMQ.
    gcc/testsuite/
            PR target/84033
            * gcc.target/powerpc/swaps-p8-46.c: New.
    
    Backport svn r257070
    
    From-SVN: r257135

commit bbb41b17fe9fc8af99af157839fed8d8d2da2c13
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 29 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257133

commit 08fce90c273bdedb1d0ee65d63e5a86d603d7291
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 28 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r257129

commit 6631266e409fa997d8d45d6c7c9ae3009ece97eb
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sat Jan 27 14:07:29 2018 +0000

    Replace -mfunction-return== with -mfunction-return=
    
    Fix a typo in doc/invoke.texi.
    
            Backport from mainline
            * doc/invoke.texi: Replace -mfunction-return==@var{choice} with
            -mfunction-return=@var{choice}.
    
    From-SVN: r257125

commit 8d5cf96064e4e2ccf0d13a8848955ef6838ecc54
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sat Jan 27 13:10:24 2018 +0000

    i386: Use const reference of struct ix86_frame to avoid copy
    
    We can use const reference of struct ix86_frame to avoid making a local
    copy of ix86_frame.  ix86_expand_epilogue makes a local copy of struct
    ix86_frame and uses the reg_save_offset field as a local variable.  This
    patch uses a separate local variable for reg_save_offset.
    
    Tested on x86-64 with ada.
    
            Backport from mainline
            PR target/83905
            * config/i386/i386.c (ix86_expand_prologue): Use cost reference
            of struct ix86_frame.
            (ix86_expand_epilogue): Likewise.  Add a local variable for
            the reg_save_offset field in struct ix86_frame.
    
    From-SVN: r257123

commit a949926b75739ee81bbeaeab54b8ed3acd514fe8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 27 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r257116

commit 4a5b2fc90680133f062ddbeaa62423eaa43992e6
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Jan 26 22:31:37 2018 +0100

    rs6000: Fix safe-indirect-jump-[18].c
    
    Thist patch merges the safe-indirect-jump-1.c and -8.c testcases,
    since they do the same thing.  On the 64-bit and AIX ABIs the indirect
    call is not a sibcall, since there is code generated after the call
    (the restore of r2).  On the 32-bit non-AIX ABIs it is a sibcall.
    
    
            Backport from trunk
            2018-01-26  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * gcc.target/powerpc/safe-indirect-jump-1.c: Build on all targets.
            Make expected output depend on whether we expect sibcalls or not.
            * gcc.target/powerpc/safe-indirect-jump-8.c: Delete (merged into
            safe-indirect-jump-1.c).
    
            Backport from trunk
            2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/83946
            * gcc.target/powerpc/safe-indirect-jump-8.c: Skip for AIX.
    
    From-SVN: r257110

commit bfddeb89eeab4150676f13b9be9f5ee01f0f584d
Author: Nathan Sidwell <nathan@acm.org>
Date:   Fri Jan 26 13:48:37 2018 +0000

    [C++/82878] backport fix
    
    https://gcc.gnu.org/ml/gcc-patches/2018-01/msg02170.html
            PR c++/82878
            PR c++/78495
            * call.c (build_call_a): Don't set CALL_FROM_THUNK_P for inherited
            ctor.
            * cp-gimplify.c (cp_genericize_r): Restore THUNK dereference
            inhibibition check removed in previous c++/78495 change.
    
            PR c++/82878
            * g++.dg/cpp0x/pr82878.C: New.
            * g++.dg/cpp1z/inh-ctor38.C: Check moves too.
    
    From-SVN: r257089

commit 534d53db5fce87a2f39bfa2405ff6d0bf258a510
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jan 26 13:24:53 2018 +0100

    re PR rtl-optimization/83985 (Compile time hog for 32-bit BE powerpc targets)
    
            PR rtl-optimization/83985
            * dce.c (deletable_insn_p): Return false for separate shrink wrapping
            REG_CFA_RESTORE insns.
            (delete_unmarked_insns): Don't ignore separate shrink wrapping
            REG_CFA_RESTORE insns here.
    
            * gcc.dg/pr83985.c: New test.
    
    From-SVN: r257088

commit 76ae1eec430111c1f12dc6afb70975efbc5ceb39
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 26 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r257072

commit fd526ae1ce1d36dca19d34ca8067713d3a0ebd8e
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Jan 25 20:39:01 2018 +0100

    backport: i386.c (indirect_thunk_name): Declare regno as unsigned int.
    
            Backport from mainline
            2018-01-17  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.c (indirect_thunk_name): Declare regno
            as unsigned int.  Compare regno with INVALID_REGNUM.
            (output_indirect_thunk): Ditto.
            (output_indirect_thunk_function): Ditto.
            (ix86_code_end): Declare regno as unsigned int.  Use INVALID_REGNUM
            in the call to output_indirect_thunk_function.
    
    From-SVN: r257067

commit 8c92f46a25521efe5a51870982194f17faa08de0
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jan 25 17:36:47 2018 +0000

    backport: re PR target/83862 (powerpc: ICE in signbit testcase)
    
    [gcc]
    2018-01-25  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-01-22  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/83862
            * config/rs6000/rs6000-protos.h (rs6000_split_signbit): Delete,
            no longer used.
            * config/rs6000/rs6000.c (rs6000_split_signbit): Likewise.
            * config/rs6000/rs6000.md (signbit<mode>2): Change code for IEEE
            128-bit to produce an UNSPEC move to get the double word with the
            signbit and then a shift directly to do signbit.
            (signbit<mode>2_dm): Replace old IEEE 128-bit signbit
            implementation with a new version that just does either a direct
            move or a regular move.  Move memory interface to separate insns.
            Move insns so they are next to the expander.
            (signbit<mode>2_dm_mem_be): New combiner insns to combine load
            with signbit move.  Split big and little endian case.
            (signbit<mode>2_dm_mem_le): Likewise.
            (signbit<mode>2_dm_<su>ext): Delete, no longer used.
            (signbit<mode>2_dm2): Likewise.
    
    [gcc/testsuite]
    2018-01-25  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-01-22  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/83862
            * gcc.target/powerpc/pr83862.c: New test.
    
    From-SVN: r257060

commit 24f63f147ec62bb3207658772f55efed5238f0fb
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Jan 25 10:50:08 2018 -0600

    backport: re PR target/83399 (Power8 ICE During LRA with 2-op rtl pattern for lvx instruction)
    
    gcc/
            Back port from mainline
            2018-01-10  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83399
            * config/rs6000/rs6000.c (print_operand) <'y'>: Use
            VECTOR_MEM_ALTIVEC_OR_VSX_P.
            * config/rs6000/vsx.md (*vsx_le_perm_load_<mode> for VSX_D): Use
            indexed_or_indirect_operand predicate.
            (*vsx_le_perm_load_<mode> for VSX_W): Likewise.
            (*vsx_le_perm_load_v8hi): Likewise.
            (*vsx_le_perm_load_v16qi): Likewise.
            (*vsx_le_perm_store_<mode> for VSX_D): Likewise.
            (*vsx_le_perm_store_<mode> for VSX_W): Likewise.
            (*vsx_le_perm_store_v8hi): Likewise.
            (*vsx_le_perm_store_v16qi): Likewise.
            (eight unnamed splitters): Likewise.
    
    gcc/testsuite/
            Back port from mainline
            2018-01-10  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83399
            * gcc.target/powerpc/pr83399.c: New test.
    
    From-SVN: r257058

commit 9120a85da4a65da66281a3f14e4fc0c222f4bb89
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Jan 25 16:23:21 2018 +0000

    backport: rs6000-p8swap.c (swap_feeds_both_load_and_store): New function.
    
    2018-01-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-p8swap.c (swap_feeds_both_load_and_store):
            New function.
            (rs6000_analyze_swaps): Mark a web unoptimizable if it contains a
            swap associated with both a load and a store.
    
    From-SVN: r257056

commit ae5df2bb8d19e9f13d8f240656386b24fe9ec5e7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jan 25 15:46:46 2018 +0000

    PR libstdc++/81076 make __byte_operand SFINAE-friendly
    
            PR libstdc++/81076
            * include/c_global/cstddef (__byte_operand): Define primary template.
            * testsuite/18_support/byte/81076.cc: New test.
    
    From-SVN: r257055

commit 94bb0f59852a144d28f7479442e510a83df0e08d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jan 25 15:46:41 2018 +0000

    PR libstdc++/83830 Define std::has_unique_object_representations_v
    
            PR libstdc++/83830
            * include/std/type_traits (has_unique_object_representations_v): Add
            variable template.
            * testsuite/20_util/has_unique_object_representations/value.cc: Check
            variable template.
    
    From-SVN: r257054

commit 40394b23e9246561a0f5076075fa214388900700
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 25 09:25:01 2018 +0000

    BASE-VER: Increment to 7.3.1.
    
    2018-01-25  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Increment to 7.3.1.
    
    From-SVN: r257043

commit 6184085fc664265dc78fd1ad4204c0cbef202628
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Thu Jan 25 08:17:27 2018 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r257041

commit 95cc11e3e6bc8be67db9667e8751d73eebab478a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 25 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257035

commit 95e96215620afd2a58b36e8b38fa6ba717c34edf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 24 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r257007

commit 08d2ba1b656e4966ad823f48a725b33d4044e743
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Jan 23 21:47:51 2018 +0000

    libgcc: xtensa: fix NaN return from add/sub/mul/div helpers
    
    libgcc/
    2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/ieee754-df.S (__addsf3, __subsf3, __mulsf3)
            (__divsf3): Make NaN return value quiet.
            * config/xtensa/ieee754-sf.S (__adddf3, __subdf3, __muldf3)
            (__divdf3): Make NaN return value quiet.
    
    From-SVN: r257003

commit 2a1709a3baa5251c9ec5fb0a555deae5a0b73bac
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jan 23 20:54:32 2018 +0000

    re PR rtl-optimization/81443 (build/genrecog.o: virtual memory exhausted: Cannot allocate memory)
    
            PR rtl-optimization/81443
            * rtlanal.c (num_sign_bit_copies1) <SUBREG>: Do not propagate results
            from inner REGs to paradoxical SUBREGs.
    
    From-SVN: r256998

commit 2ea7b3f38a08ddae51c977ce6f91e30a2f4b581f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 23 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r256969

commit b26004c32ae943a6092a57d412bb2e63786d3bcd
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jan 22 18:23:18 2018 +0000

    * es.po: Update.
    
    From-SVN: r256956

commit 7d5e9e33cc52a3e5c42e5ae4975865813da9b2e0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 22 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r256937

commit 6a6eb20cce2340b89cb9ed75b36af816170023ab
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun Jan 21 13:32:58 2018 +0000

    backport: re PR target/83946 (Safe Indirect Jumps broken on AIX)
    
    [gcc]
    
    2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        David Edelsohn  <dje.gcc@gmail.com>
    
            PR target/83946
            * config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):
            Change "crset eq" to "crset 2".
            (*call_value_indirect_nonlocal_sysv<mode>): Likewise.
            (*call_indirect_aix<mode>_nospec): Likewise.
            (*call_value_indirect_aix<mode>_nospec): Likewise.
            (*call_indirect_elfv2<mode>_nospec): Likewise.
            (*call_value_indirect_elfv2<mode>_nospec): Likewise.
            (*sibcall_nonlocal_sysv<mode>): Change "crset eq" to "crset 2";
            change assembly output from . to $.
            (*sibcall_value_nonlocal_sysv<mode>): Likewise.
            (indirect_jump<mode>_nospec): Change assembly output from . to $.
            (*tablejump<mode>_internal1_nospec): Likewise.
    
    [gcc/testsuite]
    
    2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        David Edelsohn  <dje.gcc@gmail.com>
    
            PR target/83946
            * gcc.target/powerpc/safe-indirect-jump-1.c: Change expected
            assembly output from "crset eq" to "crset 2".
            * gcc.target/powerpc/safe-indirect-jump-2.c: Change expected
            assembly output from . to $.
            * gcc.target/powerpc/safe-indirect-jump-3.c: Likewise.
            * gcc.target/powerpc/safe-indirect-jump-1.c: Change expected
            assembly output from "crset eq" to "crset 2".
            * gcc.target/powerpc/safe-indirect-jump-8.c: Change expected
            assembly output from "crset eq" to "crset 2", and from . to $.
    
    From-SVN: r256932

commit 2b34fcaf993d29cd450b8ee2a79bd0cf13fa944f
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sun Jan 21 05:13:20 2018 +0000

    backport: re PR target/80870 (ICE building 7.1.0 sh-elf crosscompiler on macOS)
    
            Backport from mainline
            2018-01-21  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/80870
            * config/sh/sh_optimize_sett_clrt.cc:
            Use INCLUDE_ALGORITHM and INCLUDE_VECTOR instead of direct includes.
    
    From-SVN: r256928

commit 58c5da101309dd3cdd59cb692c0959de4d90f5f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 21 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r256923

commit c6a8a62985d204a16a36476d6726da53f407b73d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 20 20:45:50 2018 +0000

    re PR fortran/83900 (ICE in gfc_simplify_matmul, at fortran/simplify.c:4593)
    
    2018-01-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
        * simplify.c (gfc_simplify_matmul): Set return type correctly.
    
    2018-01-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * gfortran.dg/matmul_18.f90: New test.
    
    From-SVN: r256920

commit 0ba299611d5336828f60886407442541f2a375cb
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 20 07:00:43 2018 +0000

    re PR fortran/83900 (ICE in gfc_simplify_matmul, at fortran/simplify.c:4593)
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * simplify.c (gfc_simplify_matmul): Delete bogus assertion.
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * gfortran.dg/matmul_17.f90: New test.
    
    From-SVN: r256913

commit bd89646c80de0acb191393ed476fc060c1bebc47
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 20 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r256910

commit 7d94fb328d3eb6800911edbc8df2ee8f835a467f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Jan 19 23:37:29 2018 +0000

    backport: re PR fortran/80768 (NULL pointer dereferenced in gfc_check_num_images at fortran/check.c)
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport of r250734 from mainline
            PR fortran/80768
            * check.c (gfc_check_num_images): Fix typo.
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80768
            * gfortran.dg/num_images_1.f90:  New test that tests fix in r250734.
    
    From-SVN: r256907

commit 30e8f455db79d6ee2ed19f5e6d9ad56bcc609586
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 19 11:25:14 2018 +0000

    PR libstdc++/83834 replace wildcard pattern in linker script
    
    Backport from mainline
    2018-01-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83834
            * config/abi/pre/gnu.ver (GLIBCXX_3.4): Replace std::c[a-g]* wildcard
            pattern with exact match for std::cerr.
    
    From-SVN: r256882

commit 0aebfa2330d908b430d32a8513a4b449595437a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 19 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r256869

commit 1ee924b55b02584e91f2dd2e1db2c68755e98cb1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jan 18 20:31:32 2018 +0000

    PR libstdc++/82644 document IS 29124 support
    
    Backport from mainline
    2017-10-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/intro.xml: Include new section.
            * doc/xml/manual/status_cxxis29124.xml: New section on IS 29124
            status.
            * doc/html/*: Regenerate.
    
    From-SVN: r256863

commit 6657c57a9fa3e549ac0bc576176884f231e241eb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Jan 18 20:31:25 2018 +0000

    Update references to C++17 in libstdc++ manual
    
    Backport from mainline
    2017-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2017.xml: Update references to C++17
            section numbers.
    
    From-SVN: r256862

commit 8f87c1ab9bf078dfe0a4beae8e4f82a9f483581c
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Thu Jan 18 18:27:22 2018 +0000

    backport: re PR fortran/83864 (ICE in gfc_apply_init, at fortran/expr.c:4271)
    
    2018-01-18  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from mainline
            PR fortran/83864
            * expr.c (gfc_apply_init): Do not dereference NULL pointer.
    
    2018-01-18  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from mainline
            PR fortran/83864
            * gfortran.dg/pr83864.f90: New test.
    
    From-SVN: r256857

commit 4a560547e3776cb4f42d1bedcd360e11007ff118
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Jan 18 01:34:10 2018 +0000

    backport: rs6000.c (rs6000_opt_vars): Add entry for -mspeculate-indirect-jumps.
    
    [gcc]
    
    2018-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_opt_vars): Add entry for
            -mspeculate-indirect-jumps.
            * config/rs6000/rs6000.md (*call_indirect_elfv2<mode>): Disable
            for -mno-speculate-indirect-jumps.
            (*call_indirect_elfv2<mode>_nospec): New define_insn.
            (*call_value_indirect_elfv2<mode>): Disable for
            -mno-speculate-indirect-jumps.
            (*call_value_indirect_elfv2<mode>_nospec): New define_insn.
            (indirect_jump): Emit different RTL for
            -mno-speculate-indirect-jumps.
            (*indirect_jump<mode>): Disable for
            -mno-speculate-indirect-jumps.
            (*indirect_jump<mode>_nospec): New define_insn.
            (tablejump): Emit different RTL for
            -mno-speculate-indirect-jumps.
            (tablejumpsi): Disable for -mno-speculate-indirect-jumps.
            (tablejumpsi_nospec): New define_expand.
            (tablejumpdi): Disable for -mno-speculate-indirect-jumps.
            (tablejumpdi_nospec): New define_expand.
            (*tablejump<mode>_internal1): Disable for
            -mno-speculate-indirect-jumps.
            (*tablejump<mode>_internal1_nospec): New define_insn.
            * config/rs6000/rs6000.opt (mspeculate-indirect-jumps): New
            option.
    
            Backport from mainline
            2018-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):
            Generate different code for -mno-speculate-indirect-jumps.
            (*call_value_indirect_nonlocal_sysv<mode>): Likewise.
            (*call_indirect_aix<mode>): Disable for
            -mno-speculate-indirect-jumps.
            (*call_indirect_aix<mode>_nospec): New define_insn.
            (*call_value_indirect_aix<mode>): Disable for
            -mno-speculate-indirect-jumps.
            (*call_value_indirect_aix<mode>_nospec): New define_insn.
            (*sibcall_nonlocal_sysv<mode>): Generate different code for
            -mno-speculate-indirect-jumps.
            (*sibcall_value_nonlocal_sysv<mode>): Likewise.
    
    [gcc/testsuite]
    
    2018-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/safe-indirect-jump-1.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-2.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-3.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-4.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-5.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-6.c: New file.
    
            Backport from mainline
            2018-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/safe-indirect-jump-1.c: Remove endian
            restriction, but still restrict to 64-bit.
            * gcc.target/powerpc/safe-indirect-jump-7.c: New file.
            * gcc.target/powerpc/safe-indirect-jump-8.c: New file.
    
    From-SVN: r256832

commit a38e64ad03911fa82983f54c283dd49f6d40380f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jan 18 00:30:42 2018 +0000

    backport: re PR fortran/83874 (ICE initializing character array from derived type)
    
    2018-01-17  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from mainline
            PR fortran/83874
            * decl.c (add_init_expr_to_sym): Do not dereference NULL pointer.
    
    2018-01-17  Harald Anlauf  <anlauf@gmx.de>
    
            Backport from mainline
            PR fortran/83874
            * gfortran.dg/pr83874.f90: New test.
    
    From-SVN: r256829

commit c9173d486c921435cd166b2c131cc94ac01d8f1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 18 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r256826

commit b4e93c5826ee7112463d2ed0ee9a4959b5362b78
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jan 17 13:08:05 2018 -0500

    PR c++/81843 - ICE with variadic member template.
    
            PR c++/72801
            * pt.c (unify_pack_expansion): Don't try to deduce enclosing
            template args.
    
    From-SVN: r256808

commit 99547487e15637ef6ef7d3f39236fabee54cab4d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jan 17 13:07:53 2018 -0500

    PR c++/82331 - ICE with variadic partial specialization of auto
    
            * pt.c (unify) [TEMPLATE_PARM_INDEX]: Set processing_template_decl
            around call to tsubst.
    
    From-SVN: r256807

commit d1f067b8122721ff9fd3050cf51718799a00173d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jan 17 13:07:45 2018 -0500

    PR c++/82760 - memory corruption with aligned new.
    
            * call.c (build_operator_new_call): Update *args if we add the
            align_arg.
    
    From-SVN: r256806

commit 4743bef07a9a4cf2da6fa991148d42565a4d3284
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jan 17 12:51:07 2018 +0000

    backport: [multiple changes]
    
    2018-01-17  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-12-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81877
            * tree-ssa-loop-im.c (ref_indep_loop_p): Remove safelen parameters.
            (outermost_indep_loop): Adjust.
            (ref_indep_loop_p_1): Likewise.  Remove safelen handling again.
            (can_sm_ref_p): Adjust.
    
            * g++.dg/torture/pr81877.C: New testcase.
            * g++.dg/vect/pr70729.cc: XFAIL.
            * g++.dg/vect/pr70729-nest.cc: XFAIL.
    
            2017-12-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81782
            * tree-ssa-uninit.c (warn_uninitialized_vars): Properly
            handle accesses outside of zero-sized vars.
    
            * gcc.dg/uninit-pr81782.c: New testcase.
    
    From-SVN: r256792

commit f743dd807b7a8b6a676eb20a991602cc0a4a420e
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Jan 17 11:51:03 2018 +0000

    [arm] PR target/83687: Fix invalid combination of VSUB + VABS into VABD
    
            Backport from mailine
            2018-01-15  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/83687
            * config/arm/iterators.md (VF): New mode iterator.
            * config/arm/neon.md (neon_vabd<mode>_2): Use the above.
            Remove integer-related logic from pattern.
            (neon_vabd<mode>_3): Likewise.
    
            * gcc.target/arm/neon-combine-sub-abs-into-vabd.c: Delete integer
            tests.
            * gcc.target/arm/pr83687.c: New test.
    
    From-SVN: r256791

commit 76bc6ce90fe037203d8915c39568d4106b419520
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Jan 17 12:46:56 2018 +0100

    Backport r256266
    
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/82352
            * g++.dg/ipa/pr82352.C (size_t): Define to __SIZE_TYPE__ instead of
            long unsigned int.
    
    From-SVN: r256790

commit 6f8fe8b724e3f34cb9feee65f514947e308332f1
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Jan 17 12:46:31 2018 +0100

    Backport r256226
    
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-04  Martin Liska  <mliska@suse.cz>
    
            PR ipa/82352
            * ipa-icf.c (sem_function::merge): Do not cross comdat boundary.
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-04  Martin Liska  <mliska@suse.cz>
    
            PR ipa/82352
            * g++.dg/ipa/pr82352.C: New test.
    
    From-SVN: r256789

commit c27677a5db0a19c55b0aa885ca2226d7ba272ee4
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Jan 17 12:45:48 2018 +0100

    Backport r256177
    
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-03  Martin Liska  <mliska@suse.cz>
    
            PR ipa/83549
            * cif-code.def (VARIADIC_THUNK): New enum value.
            * ipa-inline-analysis.c (compute_inline_parameters):
            Do not inline variadic thunks.
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-03  Martin Liska  <mliska@suse.cz>
    
            PR ipa/83549
            * g++.dg/ipa/pr83549.C: New test.
    
    From-SVN: r256788

commit c7773e671546a3089837daabc7acf534dc187232
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Jan 17 12:43:56 2018 +0100

    Subject: Backport r256009
    
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-12-27  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/83552
            * tree-ssa-strlen.c (fold_strstr_to_strncmp): Assign result
            of get_string_lenth to a SSA_NAME if not a GIMPLE value.
    2018-01-17  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-12-27  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/83552
            * gcc.dg/pr83552.c: New test.
    
    From-SVN: r256786

commit d64efb4249c51408ffe551710a63b9b281e4da8d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 17 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r256771

commit f1560a4d9ef7608385a6b07bfe593f9a3a9561b6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jan 16 20:48:43 2018 +0000

    re PR testsuite/77734 (FAIL: gcc.dg/plugin/must-tail-call-1.c -fplugin=./must_tail_call_plugin.so (test  for excess errors))
    
            PR testsuite/77734
            * gcc.dg/plugin/must-tail-call-1.c: Pass -fdelayed-branch on SPARC.
    
    From-SVN: r256757

commit d60de20fe0fc6c81c7ebe1ea5b87eb4c5af893cb
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jan 16 20:40:30 2018 +0000

    * testsuite/17_intro/names.cc: Undefine 'y' on SPARC/Linux.
    
    From-SVN: r256755

commit 3a76f570dcd45dfcce6a87f0bdb5e513567368a4
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jan 16 17:20:10 2018 +0100

    rtlanal: dead_or_set_regno_p should handle CLOBBER (PR83424)
    
    In PR83424 combine's move_deaths puts a REG_DEAD note in the wrong place
    because dead_or_set_regno_p does not account for CLOBBER insns.  This
    fixes it.
    
    
            PR rtl-optimization/83424
            * rtlanal.c (dead_or_set_regno_p): Handle CLOBBER just like SET.
    
    gcc/testsuite/
            PR rtl-optimization/83424
            * gcc.dg/pr83424.c: New testsuite.
    
    From-SVN: r256750

commit f1176d9edc35ded39bd48e5bea342c5aeec1b2ac
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 12:49:29 2018 +0000

    i386: Don't use reference of struct ix86_frame
    
    Use reference of struct ix86_frame in ix86_expand_prologue and
    ix86_expand_epilogue caused:
    
    raised STORAGE_ERROR : stack overflow or erroneous memory access
    make[5]: *** [/export/gnu/import/git/sources/gcc/gcc/ada/Make-generated.in:45: ada/sinfo.h] Error 1
    
    on trunk when bootstrapping GCC with ada on x86-64.
    
            * config/i386/i386.c (ix86_expand_prologue): Don't use reference
            of struct ix86_frame.
            (ix86_expand_epilogue): Likewise.
    
    From-SVN: r256742

commit ce8249fe78adcfed8bf4d6a6579c6e2b35c47a95
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 11:22:01 2018 +0000

    x86: Disallow -mindirect-branch=/-mfunction-return= with -mcmodel=large
    
    Since the thunk function may not be reachable in large code model,
    -mcmodel=large is incompatible with -mindirect-branch=thunk,
    -mindirect-branch=thunk-extern, -mfunction-return=thunk and
    -mfunction-return=thunk-extern.  Issue an error when they are used with
    -mcmodel=large.
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_set_indirect_branch_type): Disallow
            -mcmodel=large with -mindirect-branch=thunk,
            -mindirect-branch=thunk-extern, -mfunction-return=thunk and
            -mfunction-return=thunk-extern.
            * doc/invoke.texi: Document -mcmodel=large is incompatible with
            -mindirect-branch=thunk, -mindirect-branch=thunk-extern,
            -mfunction-return=thunk and -mfunction-return=thunk-extern.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-10.c: New test.
            * gcc.target/i386/indirect-thunk-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-9.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-10.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-11.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-9.c: Likewise.
            * gcc.target/i386/ret-thunk-17.c: Likewise.
            * gcc.target/i386/ret-thunk-18.c: Likewise.
            * gcc.target/i386/ret-thunk-19.c: Likewise.
            * gcc.target/i386/ret-thunk-20.c: Likewise.
            * gcc.target/i386/ret-thunk-21.c: Likewise.
    
    From-SVN: r256737

commit 3a205fe54c65d0fb6315162ff47b1ef27c52012a
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 11:19:51 2018 +0000

    x86: Add 'V' register operand modifier
    
    Add 'V', a special modifier which prints the name of the full integer
    register without '%'.  For
    
    extern void (*func_p) (void);
    
    void
    foo (void)
    {
      asm ("call __x86_indirect_thunk_%V0" : : "a" (func_p));
    }
    
    it generates:
    
    foo:
            movq    func_p(%rip), %rax
            call    __x86_indirect_thunk_rax
            ret
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (print_reg): Print the name of the full
            integer register without '%'.
            (ix86_print_operand): Handle 'V'.
             * doc/extend.texi: Document 'V' modifier.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-register-4.c: New test.
    
    From-SVN: r256736

commit fedde6d3b9d19ed351cec1e9457a890a70aade96
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 11:17:49 2018 +0000

    x86: Add -mindirect-branch-register
    
    Add -mindirect-branch-register to force indirect branch via register.
    This is implemented by disabling patterns of indirect branch via memory,
    similar to TARGET_X32.
    
    -mindirect-branch= and -mfunction-return= tests are updated with
    -mno-indirect-branch-register to avoid false test failures when
    -mindirect-branch-register is added to RUNTESTFLAGS for "make check".
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Disallow memory operand for
            -mindirect-branch-register.
            (Bw): Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
            * config/i386/i386.md (indirect_jump): Call convert_memory_address
            for -mindirect-branch-register.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Disallow peepholes of indirect call and jump via memory for
            -mindirect-branch-register.
            (*call_pop): Replace m with Bw.
            (*call_value_pop): Likewise.
            (*sibcall_pop_memory): Replace m with Bs.
            * config/i386/i386.opt (mindirect-branch-register): New option.
            * doc/invoke.texi: Document -mindirect-branch-register option.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-1.c (dg-options): Add
            -mno-indirect-branch-register.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-1.c: New test.
            * gcc.target/i386/indirect-thunk-register-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-3.c: Likewise.
    
    i386: Rename to ix86_indirect_branch_register
    
    Rename the variable for -mindirect-branch-register to
    ix86_indirect_branch_register to match the command-line option name.
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Replace
            ix86_indirect_branch_thunk_register with
            ix86_indirect_branch_register.
            (Bw): Likewise.
            * config/i386/i386.md (indirect_jump): Likewise.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Peepholes of indirect call and jump via memory: Likewise.
            * config/i386/i386.opt: Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
    
    x86: Rewrite ix86_indirect_branch_register logic
    
    Rewrite ix86_indirect_branch_register logic with
    
    (and (not (match_test "ix86_indirect_branch_register"))
         (original condition before r256662))
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/predicates.md (constant_call_address_operand):
            Rewrite ix86_indirect_branch_register logic.
            (sibcall_insn_operand): Likewise.
    
    Don't check ix86_indirect_branch_register for GOT operand
    
    Since GOT_memory_operand and GOT32_symbol_operand are simple pattern
    matches, don't check ix86_indirect_branch_register here.  If needed,
    -mindirect-branch= will convert indirect branch via GOT slot to a call
    and return thunk.
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Update
            ix86_indirect_branch_register check.  Don't check
            ix86_indirect_branch_register with GOT_memory_operand.
            (Bw): Likewise.
            * config/i386/predicates.md (GOT_memory_operand): Don't check
            ix86_indirect_branch_register here.
            (GOT32_symbol_operand): Likewise.
    
    i386: Rewrite indirect_branch_operand logic
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/predicates.md (indirect_branch_operand): Rewrite
            ix86_indirect_branch_register logic.
    
    From-SVN: r256735

commit c03a55410307026f7bc8e7dc11b586467c8ea7ec
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 11:10:44 2018 +0000

    x86: Add -mfunction-return=
    
    Add -mfunction-return= option to convert function return to call and
    return thunks.  The default is 'keep', which keeps function return
    unmodified.  'thunk' converts function return to call and return thunk.
    'thunk-inline' converts function return to inlined call and return thunk.
    'thunk-extern' converts function return to external call and return
    thunk provided in a separate object file.  You can control this behavior
    for a specific function by using the function attribute function_return.
    
    Function return thunk is the same as memory thunk for -mindirect-branch=
    where the return address is at the top of the stack:
    
    __x86_return_thunk:
            call L2
    L1:
            pause
            lfence
            jmp L1
    L2:
            lea 8(%rsp), %rsp|lea 4(%esp), %esp
            ret
    
    and function return becomes
    
            jmp __x86_return_thunk
    
    -mindirect-branch= tests are updated with -mfunction-return=keep to
    avoid false test failures when -mfunction-return=thunk is added to
    RUNTESTFLAGS for "make check".
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386-protos.h (ix86_output_function_return): New.
            * config/i386/i386.c (ix86_set_indirect_branch_type): Also
            set function_return_type.
            (indirect_thunk_name): Add ret_p to indicate thunk for function
            return.
            (output_indirect_thunk_function): Pass false to
            indirect_thunk_name.
            (ix86_output_indirect_branch_via_reg): Likewise.
            (ix86_output_indirect_branch_via_push): Likewise.
            (output_indirect_thunk_function): Create alias for function
            return thunk if regno < 0.
            (ix86_output_function_return): New function.
            (ix86_handle_fndecl_attribute): Handle function_return.
            (ix86_attribute_table): Add function_return.
            * config/i386/i386.h (machine_function): Add
            function_return_type.
            * config/i386/i386.md (simple_return_internal): Use
            ix86_output_function_return.
            (simple_return_internal_long): Likewise.
            * config/i386/i386.opt (mfunction-return=): New option.
            (indirect_branch): Mention -mfunction-return=.
            * doc/extend.texi: Document function_return function attribute.
            * doc/invoke.texi: Document -mfunction-return= option.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-1.c (dg-options): Add
            -mfunction-return=keep.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-1.c: New test.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-16.c: Likewise.
            * gcc.target/i386/ret-thunk-2.c: Likewise.
            * gcc.target/i386/ret-thunk-3.c: Likewise.
            * gcc.target/i386/ret-thunk-4.c: Likewise.
            * gcc.target/i386/ret-thunk-5.c: Likewise.
            * gcc.target/i386/ret-thunk-6.c: Likewise.
            * gcc.target/i386/ret-thunk-7.c: Likewise.
            * gcc.target/i386/ret-thunk-8.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
    
    i386: Don't use ASM_OUTPUT_DEF for TARGET_MACHO
    
    ASM_OUTPUT_DEF isn't defined for TARGET_MACHO.  Use ASM_OUTPUT_LABEL to
    generate the __x86_return_thunk label, instead of the set directive.
    Update testcase to remove the __x86_return_thunk label check.  Since
    -fno-pic is ignored on Darwin, update testcases to sscan or "push"
    only on Linux.
    
    gcc/
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/83839
            * config/i386/i386.c (output_indirect_thunk_function): Use
            ASM_OUTPUT_LABEL, instead of ASM_OUTPUT_DEF, for TARGET_MACHO
            for  __x86.return_thunk.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/83839
            * gcc.target/i386/indirect-thunk-1.c: Scan for "push" only on
            Linux.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-4.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Don't check the
            __x86_return_thunk label.
            Scan for "push" only for Linux.
    
    From-SVN: r256734

commit 0c198399c1ccb27e1c9803c0d2e5679e7eb7f17c
Author: H.J. Lu <hjl@gcc.gnu.org>
Date:   Tue Jan 16 03:04:48 2018 -0800

    Update ChangeLog entries
    
    From-SVN: r256733

commit 7799a85590b85bd80b047c1064d9a98421710fbf
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Jan 16 10:59:42 2018 +0000

    x86: Add -mindirect-branch=
    
    Add -mindirect-branch= option to convert indirect call and jump to call
    and return thunks.  The default is 'keep', which keeps indirect call and
    jump unmodified.  'thunk' converts indirect call and jump to call and
    return thunk.  'thunk-inline' converts indirect call and jump to inlined
    call and return thunk.  'thunk-extern' converts indirect call and jump to
    external call and return thunk provided in a separate object file.  You
    can control this behavior for a specific function by using the function
    attribute indirect_branch.
    
    2 kinds of thunks are geneated.  Memory thunk where the function address
    is at the top of the stack:
    
    __x86_indirect_thunk:
            call L2
    L1:
            pause
            lfence
            jmp L1
    L2:
            lea 8(%rsp), %rsp|lea 4(%esp), %esp
            ret
    
    Indirect jmp via memory, "jmp mem", is converted to
    
            push memory
            jmp __x86_indirect_thunk
    
    Indirect call via memory, "call mem", is converted to
    
            jmp L2
    L1:
            push [mem]
            jmp __x86_indirect_thunk
    L2:
            call L1
    
    Register thunk where the function address is in a register, reg:
    
    __x86_indirect_thunk_reg:
            call    L2
    L1:
            pause
            lfence
            jmp     L1
    L2:
            movq    %reg, (%rsp)|movl    %reg, (%esp)
            ret
    
    where reg is one of (r|e)ax, (r|e)dx, (r|e)cx, (r|e)bx, (r|e)si, (r|e)di,
    (r|e)bp, r8, r9, r10, r11, r12, r13, r14 and r15.
    
    Indirect jmp via register, "jmp reg", is converted to
    
            jmp __x86_indirect_thunk_reg
    
    Indirect call via register, "call reg", is converted to
    
            call __x86_indirect_thunk_reg
    
    gcc/
    
            Backport from mainline
            * config/i386/i386-opts.h (indirect_branch): New.
            * config/i386/i386-protos.h (ix86_output_indirect_jmp): Likewise.
            * config/i386/i386.c (ix86_using_red_zone): Disallow red-zone
            with local indirect jump when converting indirect call and jump.
            (ix86_set_indirect_branch_type): New.
            (ix86_set_current_function): Call ix86_set_indirect_branch_type.
            (indirectlabelno): New.
            (indirect_thunk_needed): Likewise.
            (indirect_thunk_bnd_needed): Likewise.
            (indirect_thunks_used): Likewise.
            (indirect_thunks_bnd_used): Likewise.
            (INDIRECT_LABEL): Likewise.
            (indirect_thunk_name): Likewise.
            (output_indirect_thunk): Likewise.
            (output_indirect_thunk_function): Likewise.
            (ix86_output_indirect_branch_via_reg): Likewise.
            (ix86_output_indirect_branch_via_push): Likewise.
            (ix86_output_indirect_branch): Likewise.
            (ix86_output_indirect_jmp): Likewise.
            (ix86_code_end): Call output_indirect_thunk_function if needed.
            (ix86_output_call_insn): Call ix86_output_indirect_branch if
            needed.
            (ix86_handle_fndecl_attribute): Handle indirect_branch.
            (ix86_attribute_table): Add indirect_branch.
            * config/i386/i386.h (machine_function): Add indirect_branch_type
            and has_local_indirect_jump.
            * config/i386/i386.md (indirect_jump): Set has_local_indirect_jump
            to true.
            (tablejump): Likewise.
            (*indirect_jump): Use ix86_output_indirect_jmp.
            (*tablejump_1): Likewise.
            (simple_return_indirect_internal): Likewise.
            * config/i386/i386.opt (mindirect-branch=): New option.
            (indirect_branch): New.
            (keep): Likewise.
            (thunk): Likewise.
            (thunk-inline): Likewise.
            (thunk-extern): Likewise.
            * doc/extend.texi: Document indirect_branch function attribute.
            * doc/invoke.texi: Document -mindirect-branch= option.
    
    gcc/testsuite/
    
            Backport from mainline
            * gcc.target/i386/indirect-thunk-1.c: New test.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
    
    From-SVN: r256732

commit 30bd6019befe436ddcd468e4a63afae1617e99ac
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jan 16 09:51:57 2018 +0000

    backport: re PR target/81481 (Spills %xmm to stack in glibc strspn SSE 4.2 variant)
    
    2018-01-16  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-29  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR target/81481
            * ira-costs.c (scan_one_insn): Don't take into account PIC equiv
            with a symbol for LRA.
    
            * gcc.target/i386/pr81481.c: New.
    
    From-SVN: r256731

commit 31ba61a78179b87b149848d45df9af1b7654407e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 16 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r256718

commit 8cd9e9f172832b4c5aa23ab826ee6bf027eefe27
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Jan 15 23:08:12 2018 +0100

    backport: re PR target/83629 (ICE: in decompose_normal_address, at rtlanal.c:6329 with -O2 -fPIC -frename-registers --param=sched-autopref-queue-depth=nnn)
    
            Backport from mainline
            2018-01-10  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/83629
            * config/rs6000/rs6000.md (load_toc_v4_PIC_2, load_toc_v4_PIC_3b,
            load_toc_v4_PIC_3c): Wrap const term in CONST RTL.
    
    gcc/testsuite/
            Backport from mainline
            2018-01-10  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/83629
            * gcc.target/powerpc/pr83629.c: New testcase.
    
            2018-01-12  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/83629
            * gcc.target/powerpc/pr83629.c: Require ilp32.
    
    From-SVN: r256711

commit 1984fccf0b395e262f90e15610f7732f4273dd85
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Jan 15 16:13:23 2018 +0000

    i386: Align stack frame if argument is passed on stack
    
    When a function call is removed, it may become a leaf function.  But if
    argument may be passed on stack, we need to align the stack frame when
    there is no tail call.
    
    Tested on Linux/i686 and Linux/x86-64.
    
    gcc/
    
            Backport from mainline
            PR target/83330
            * config/i386/i386.c (ix86_function_arg_advance): Set
            outgoing_args_on_stack to true if there are outgoing arguments
            on stack.
            (ix86_function_arg): Likewise.
            (ix86_compute_frame_layout): Align stack frame if argument is
            passed on stack.
            * config/i386/i386.h (machine_function): Add
            outgoing_args_on_stack.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/83330
            * gcc.target/i386/pr83330.c: New test.
    
    From-SVN: r256703

commit d031a3aaf5863d4e7e0771443893b2ad4d761016
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Jan 15 11:33:42 2018 +0000

    i386: More use reference of struct ix86_frame to avoid copy
    
    When there is no need to make a copy of ix86_frame, we can use reference
    of struct ix86_frame to avoid copy.
    
            Backport from mainline
            * config/i386/i386.c (ix86_expand_prologue): Use reference of
            struct ix86_frame.
            (ix86_expand_epilogue): Likewise.
    
    From-SVN: r256695

commit ed493f27091ed705cfd790c110a3a8d0efb4974e
Author: H.J. Lu <hjl@gcc.gnu.org>
Date:   Mon Jan 15 03:32:23 2018 -0800

    Move ChangeLog entries to gcc/ChangeLog
    
    From-SVN: r256693

commit b3bb6c435ebf47dd02cf382ba70f5e3a0323733c
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Jan 15 11:28:44 2018 +0000

    i386: Use reference of struct ix86_frame to avoid copy
    
    When there is no need to make a copy of ix86_frame, we can use reference
    of struct ix86_frame to avoid copy.
    
            Backport from mainline
            * config/i386/i386.c (ix86_can_use_return_insn_p): Use reference
            of struct ix86_frame.
            (ix86_initial_elimination_offset): Likewise.
            (ix86_expand_split_stack_prologue): Likewise.
    
    From-SVN: r256692

commit 37d3afcae70dbb3307c5f1e3edded36be66fdda3
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Jan 15 11:27:24 2018 +0000

    i386: Move struct ix86_frame to machine_function
    
    Make ix86_frame available to i386 code generation.  This is needed to
    backport the patch set of -mindirect-branch= to mitigate variant #2 of
    the speculative execution vulnerabilities on x86 processors identified
    by CVE-2017-5715, aka Spectre.
    
            Backport from mainline
            * config/i386/i386.c (ix86_frame): Moved to ...
            * config/i386/i386.h (ix86_frame): Here.
            (machine_function): Add frame.
            * config/i386/i386.c (ix86_compute_frame_layout): Repace the
            frame argument with &cfun->machine->frame.
            (ix86_can_use_return_insn_p): Don't pass &frame to
            ix86_compute_frame_layout.  Copy frame from cfun->machine->frame.
            (ix86_can_eliminate): Likewise.
            (ix86_expand_prologue): Likewise.
            (ix86_expand_epilogue): Likewise.
            (ix86_expand_split_stack_prologue): Likewise.
    
    From-SVN: r256691

commit b6294d3eab9f4f6998ec324f8ef78d37f391d4e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 15 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r256679

commit 6e3d1ae6e1a619eee1928780bad233d22b6ab595
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Jan 14 21:44:50 2018 +0000

    backport: re PR libfortran/83811 (fortran 'e' format broken for single digit exponents)
    
    2018-01-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/83811
            * gfortran.dg/fmt_e.f90: New test.
    
            * gfortran.dg/fmt_e.f90: New test.
    
    From-SVN: r256675

commit ed402c475a48193b5d3b6aa2d8982c059f8ea473
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun Jan 14 17:47:30 2018 +0000

    backport: re PR target/83677 (PPC: The xxpermr instruction is not generated correctly)
    
    [gcc]
    
    2018-01-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/83677
            * config/rs6000/altivec.md (*altivec_vpermr_<mode>_internal):
            Reverse order of second and third operands in first alternative.
            * config/rs6000/rs6000.c (rs6000_expand_vector_set): Reverse order
            of first and second elements in UNSPEC_VPERMR vector.
            (altivec_expand_vec_perm_le): Likewise.
    
    [gcc/testsuite]
    
    2018-01-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/83677
            * gcc.target/powerpc/pr83677.c: New file.
    
    From-SVN: r256670

commit 38c84ba5d64dd757be7e0caa8b2f8e746f856a88
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jan 14 16:45:38 2018 +0100

    backport: re PR rtl-optimization/83628 (performance regression when accessing arrays on alpha)
    
            Backport from mainline
            2018-01-12  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/83628
            * config/alpha/alpha.md (*saddsi_1): New insn_ans_split pattern.
            (*saddl_se_1): Ditto.
            (*ssubsi_1): Ditto.
            (*ssubl_se_1): Ditto.
    
            Backport from mainline
            2018-01-09  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/83628
            * combine.c (force_int_to_mode) <case ASHIFT>: Use mode instead of
            op_mode in the force_to_mode call.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2018-01-12  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/83628
            * gcc.target/alpha/pr83628-3.c: New test.
    
    From-SVN: r256665

commit 2d8d78a10d8679aab0e1fea3ac4a4f247405e0d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 14 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r256652

commit e2be49635268d4058afe62464f79a39c6462b292
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 13 18:58:56 2018 +0000

    backport: re PR fortran/78814 (ICE in symbol_rank, at fortran/interface.c:1265)
    
    2012-01-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/78814
            * interface.c (symbol_rank): Check for NULL pointer.
    
    2012-01-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/78814
            * gfortran.dg/interface_40.f90: New testcase.
    
    From-SVN: r256646

commit f43b6a905e7c2645f738620103b9d72a15220f6b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Jan 13 01:53:52 2018 +0000

    Fix type printers for Library Fundamentals types
    
            * python/libstdcxx/v6/printers.py (register_type_printers): Remove
            printer for experimental::any. Fix printers for experimental::optional
            and experimental::basic_string_view.
    
    From-SVN: r256604

commit b520d0cffb23195e46050059167d8a4a67ffa9c0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Jan 13 01:53:47 2018 +0000

    PR libstdc++/83626 simplify filesystem::remove and filesystem::remove_all
    
    Backport from mainline
    2018-01-05  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83626
            * src/filesystem/ops.cc (remove(const path&, error_code&)): Remove
            unnecessary symlink_status call.
            (remove_all(const path&, error_code&)): Use filesystem::remove.
    
    From-SVN: r256603

commit ab1c0a5d9cd413537971deffcedbcaa7282242c5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 13 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r256601

commit 22ec74897c7eb14f9b7930a037676d1fa2ac4033
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Fri Jan 12 12:12:38 2018 +0000

    backport: re PR target/81819 ([RX] internal compiler error: in rx_is_restricted_memory_address, at config/rx/rx.c:311)
    
    gcc/
            Backport from mainline
            2018-01-12  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/81819
            * config/rx/rx.c (rx_is_restricted_memory_address):
            Handle SUBREG case.
    
    From-SVN: r256579

commit 951346c205dc8367c02b011c6c18592ebe68ed1e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Jan 12 10:20:42 2018 +0000

    re PR rtl-optimization/83565 (RTL combine pass yields wrong rotate result)
    
            PR rtl-optimization/83565
            * rtlanal.c (nonzero_bits1): On WORD_REGISTER_OPERATIONS machines, do
            not extend the result to a larger mode for rotate operations.
            (num_sign_bit_copies1): Likewise.
    
    From-SVN: r256573

commit 28b93b93046bc12668daece98a27a707e1934cca
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Fri Jan 12 05:32:31 2018 +0000

    Avoid Solaris/SPARC comparison failures with Solaris as (PR bootstrap/81926)
    
            Backport from mainline
            2018-01-04  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR bootstrap/81926
            * cgraphunit.c (symbol_table::compile): Switch to text_section
            before calling assembly_start debug hook.
    
    From-SVN: r256562

commit e1521062de84682ea06fa7267912b43d7c2aef11
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 12 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r256560

commit 05d34c633d6e9346b02489304b03aee4c854d37d
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Jan 11 15:18:38 2018 +0000

    backport: re PR target/81821 ([RX] xchg_mem<mode> uses wrong memory operand size)
    
    gcc/
            Backport from mainline
            2018-01-11  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/81821
            * config/rx/rx.md (BW): New mode attribute.
            (sync_lock_test_and_setsi): Add mode suffix to insn output.
    
    From-SVN: r256538

commit 4bf06d991a5760ecdd5f7f47c47255785b674568
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 11 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r256471

commit 91716fe0dd2aed30399e095512f6d2762cd16480
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 23:41:48 2018 +0000

    re PR fortran/82367 (ICE with deferred length string allocate on non-deferred length argument)
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82367
            * resolve.c (resolve_allocate_expr): Check for NULL pointer.
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82367
            * gfortran.dg/deferred_character_18.f90: New test.
    
    From-SVN: r256466

commit 7a760f1977cd1f6f31f9482f3efdefa2ac2de824
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 22:35:00 2018 +0000

    backport: re PR fortran/83093 (ICE in fold_convert_loc, at fold-const.c:2266)
    
    2018-01-10 Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/83093
            * resolve.c (resolve_charlen): Check the type of cl->length
            after resolution.
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/83093
            * gfortran.dg/allocate_with_typespec_7.f90: New test.
    
    From-SVN: r256459

commit ee30b822e5d3714150eced7d15d867c0deeddbe1
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 18:47:44 2018 +0000

    backport: re PR fortran/82841 (Segfault in gfc_simplify_transfer)
    
    2018-01-10  Steven G. Kargl  <kargl@kgcc.gnu.org>
    
            Backport r254555 from trunk
            PR Fortran/82841
            * gfortran.dg/transfer_simplify_11.f90: New test.
    
    
    2018-01-10  Steven G. Kargl  <kargl@kgcc.gnu.org>
    
            Backport r254555 from trunk
            PR Fortran/82841
            * simplify.c(gfc_simplify_transfer): Do not dereference a NULL pointer.
            Unwrap a short line.
    
    From-SVN: r256445

commit df18d5afa6310fb145e8a4e51f7ca7694105111c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 10 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r256414

commit 8c90c237aa21a76e9c80866b7aa897767949b5a2
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Jan 9 23:36:24 2018 +0000

    * es.po: Update.
    
    From-SVN: r256409

commit d8d1029d8e74205165413083b92564f03a008343
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jan 9 08:53:14 2018 +0000

    backport: re PR c++/83713 (ICE in do_narrow at gcc/convert.c:474)
    
    2018-01-09  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-01-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/83713
            * convert.c (do_narrow): Properly guard TYPE_OVERFLOW_WRAPS checks.
    
            * g++.dg/torture/pr83713.C: New testcase.
    
    From-SVN: r256371

commit 603ceb882d160462908b3826cf1824690f233b37
Author: Jim Wilson <jimw@sifive.com>
Date:   Tue Jan 9 01:01:45 2018 +0000

    RISC-V: Fix -msave-restore bug with sibcalls.
    
           2018-01-08  Monk Chiang  <sh.chiang04@gmail.com>
                        Kito Cheng  <kito.cheng@gmail.com>
            gcc/
            * config/riscv/riscv.c (machine_function::is_leaf): Remove field.
            (riscv_leaf_function_p): Delete.
            (riscv_function_ok_for_sibcall): Return false when TARGET_SAVE_RESTORE.
    
            2018-01-08  Chih-Mao Chen <pkmx.tw@gmail.com>
                        Monk Chiang  <sh.chiang04@gmail.com>
            gcc/testsuite/
            * gcc.target/riscv/save-restore-1.c: New.
    
            2017-11-29  Jim Wilson  <jimw@sifive.com>
            gcc/testsuite/
            * gcc.target/riscv/riscv.exp: New.
    
    From-SVN: r256363

commit c9af7ef8509b577b606004b0bbb779fc78552c3c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 9 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r256360

commit 9192145f0b9af72113c1a4479f0a21a35ad69824
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Jan 8 18:42:50 2018 +0000

    [arm] PR target/82975: Guard against reg_renumber being NULL in arm.h
    
            Backport from mainline
            2017-12-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/82975
            * config/arm/arm.h (TEST_REGNO): Adjust comment as expected in r255830.
    
            * gcc.dg/pr82975.c: New test.
    
    From-SVN: r256350

commit 2fc75a03b0de66ec3c1b13f140d5bd92969f5eca
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Mon Jan 8 13:39:11 2018 +0000

    RTEMS/EPIPHANY: Add RTEMS support
    
    gcc/
            * config.gcc (epiphany-*-elf*): Add (epiphany-*-rtems*) configuration.
            * config/epiphany/rtems.h: New file.
    
    libgcc/
            * config.host (epiphany-*-elf*): Add (epiphany-*-rtems*)
            configuration.
    
    From-SVN: r256342

commit 871fb7e343706976bdba772e8c680884118b091c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 8 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r256326

commit 71cacd0b5c9c99ca40a42580022a1f548d3ca021
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jan 7 20:14:55 2018 +0100

    alpha.md (*sadd<modesuffix>): Use ASHIFT instead of MULT rtx.
    
            * config/alpha/alpha.md (*sadd<modesuffix>): Use ASHIFT
            instead of MULT rtx.  Update all corresponding splitters.
            (*saddl_se): Ditto.
            (*ssub<modesuffix>): Ditto.
            (*ssubl_se): Ditto.
            (*cmp_sadd_di): Update split patterns.
            (*cmp_sadd_si): Ditto.
            (*cmp_sadd_sidi): Ditto.
            (*cmp_ssub_di): Ditto.
            (*cmp_ssub_si): Ditto.
            (*cmp_ssub_sidi): Ditto.
            * config/alpha/predicates.md (const23_operand): New predicate.
            * config/alpha/alpha.c (alpha_rtx_costs) [PLUS, MINUS]:
            Look for ASHIFT, not MULT inner operand.
            (alpha_split_conditional_move): Update for *sadd<modesuffix> change.
    
    testsuite/ChangeLog:
    
            * gcc.target/alpha/pr83628-1.c: New test.
            * gcc.target/alpha/pr83628-2.c: Ditto.
    
    From-SVN: r256324

commit 7f40e113d070ebe0ab0aa6701bbdf7b9a5ca9ac5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 7 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r256316

commit 7203d58a46967279262860ab214ec36b78917a91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 6 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r256303

commit f8e2a3f31e2b186e7928bba216e6a27a360d44dd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:22:33 2018 +0000

    Improve tests for error reporting in Filesystem TS
    
    Backport from mainline
    2017-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Ensure that error_code arguments are
            cleared when required.
            * testsuite/experimental/filesystem/operations/create_directory.cc:
            Remove redundant check.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            Ensure that error_code argument is cleared when required.
    
    From-SVN: r256293

commit 7a2b2be984e644184ef7239592cb10b62892a14b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:22:28 2018 +0000

    PR libstdc++/83600 fix end iterator for unready std::match_results
    
    Backport from mainline
    2017-12-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83600
            * include/bits/regex.h (match_results::end()): Return valid iterator
            when not ready.
            * testsuite/28_regex/match_results/ctors/char/default.cc: Check that
            unready objects are empty and have equal begin and end iterators.
            * testsuite/28_regex/match_results/ctors/wchar_t/default.cc: Likewise.
    
    From-SVN: r256292

commit a6d46487f3baf551ff2de7f0d735ed39de19fcdd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:22:17 2018 +0000

    PR libstdc++/83598 don't modify flags passed to std::basic_regex constructors
    
    Backport from mainline
    2017-12-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83598
            * include/bits/regex.h (basic_regex): Don't modify flags passed to
            constructors.
            * testsuite/28_regex/basic_regex/ctors/83598.cc: New test.
    
    From-SVN: r256291

commit 0070e3297eef582c2216b9335e1476e482afe9b0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:22:12 2018 +0000

    PR libstdc++/83279 handle sendfile not copying entire file
    
    Backport from mainline
    2017-12-14  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83279
            * src/filesystem/std-ops.cc (do_copy_file): Handle sendfile not
            copying entire file.
    
    From-SVN: r256290

commit 826137607d3baef33d95fe80c873d4db7c3646be
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 21:27:29 2018 +0000

    Avoid redundant calls to filesystem::status_known
    
    Backport from mainline
    2018-01-04  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/fs_ops.h (exists(const path&, error_code&))):
            Only check status_known once.
    
    From-SVN: r256288

commit 72eaf75b3077b2d2e3a5b8da7e2f82066647816e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 21:27:25 2018 +0000

    PR libstdc++/83626 Don't report errors when removing non-existent files
    
    Backport from mainline
    2018-01-05  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83626
            * src/filesystem/ops.cc (remove(const path&, error_code&)): Do not
            report an error for ENOENT.
            (remove_all(const path&)): Fix type of result variable.
            (remove_all(const path&, error_code&)): Use non-throwing increment
            for directory iterator. Call POSIX remove directly to avoid redundant
            calls to symlink_status. Do not report errors for ENOENT.
            * testsuite/experimental/filesystem/operations/remove_all.cc: Test
            throwing overload.
    
    Backport from mainline
    2018-01-04  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83626
            * src/filesystem/ops.cc (remove(const path&, error_code&))): Remove
            redundant call to ec.clear().
            (remove_all(const path&, error_code&))): Do not return an error for
            non-existent paths.
            * testsuite/experimental/filesystem/operations/remove.cc: New test.
            * testsuite/experimental/filesystem/operations/remove_all.cc: Fix
            expected results for non-existent paths.
    
    From-SVN: r256287

commit df7dd7127c4a0db0583668cefa72bc5f2c2e088c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 21:27:20 2018 +0000

    PR libstdc++/79283 fix filesystem::read_symlink for /proc
    
    Backport from mainline
    2017-10-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79283
            * src/filesystem/ops.cc (read_symlink): Handle st_size being zero.
    
    From-SVN: r256286

commit d7e9a32ab05c1c1ebb1ec6cf1dea7b2907ed8a09
Author: Michael Weiser <michael.weiser@gmx.de>
Date:   Fri Jan 5 13:58:54 2018 +0000

    [PATCH, PR83492] Fix selection of aarch64 big-endian shift parameters based on __AARCH64EB__
    
    2018-01-05  Michael Weiser  <michael.weiser@gmx.de>
    
            Backport from trunk
            2017-12-20  Michael Weiser  <michael.weiser@gmx.de>
    
            PR preprocessor/83492
            * lex.c (search_line_fast) [__ARM_NEON && __ARM_64BIT_STATE]:
            Fix selection of big-endian shift parameters by using
            __ARM_BIG_ENDIAN.
    
    From-SVN: r256278

commit 30833826aa147ee76cfd258d3f8ef90f9b445668
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 5 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r256271

commit 58929d71e1e3db9ffa2ac900e87c7905d5f4c4ff
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jan 4 20:16:23 2018 +0000

    re PR fortran/83679 (r256113 causes regression on pr77942.f90)
    
    2018-01-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR Fortran/83679
            * simplify.c (gfc_simplify_cshift): Restore early return for zero-sized
            array.  Update Copyright year while here.
    
    From-SVN: r256263

commit 166d8f080c4fd964f5ca186160728e29ee9c535d
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Thu Jan 4 20:58:29 2018 +0200

    Protect optional's deduction guide with the feature macro
    
    Backport from mainline
    2018-01-03  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    Protect optional's deduction guide with the feature macro
    * include/std/optional: Use the feature macro.
    
    From-SVN: r256261

commit a03a98143dce9dacd53eaf14b7288d5f71af4bfb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 4 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r256221

commit 8a159915b98b20b0de60373f336bec324a64be4d
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Wed Jan 3 13:46:38 2018 +0200

    PR libgfortran/83649 Chunk large reads and writes
    
    Backport from trunk.
    
    It turns out that Linux never reads or writes more than 2147479552
    bytes in a single syscall. For writes this is not a problem as
    libgfortran already contains a loop around write() to handle short
    writes. But for reads we cannot do this, since then read will hang if
    we have a short read when reading from the terminal.  Also, there are
    reports that macOS fails I/O's larger than 2 GB.  Thus, to work around
    these issues do large reads/writes in chunks.
    
    The testcase from the PR
    
    program largewr
      integer(kind=1) :: a(2_8**31+1)
      a = 0
      a(size(a, kind=8)) = 1
      open(10, file="largewr.dat", access="stream", form="unformatted")
      write (10) a
      close(10)
      a(size(a, kind=8)) = 2
      open(10, file="largewr.dat", access="stream", form="unformatted")
      read (10) a
      if (a(size(a, kind=8)) == 1) then
        print *, "All is well"
      else
        print *, "Oh no"
      end if
    end program largewr
    
    fails on trunk but works with the patch.
    
    Regtested on x86_64-pc-linux-gnu, committed to trunk.
    
    libgfortran/ChangeLog:
    
    2018-01-03  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR libgfortran/83649
            * io/unix.c (MAX_CHUNK): New define.
            (raw_read): For reads larger than MAX_CHUNK, loop.
            (raw_write): Write no more than MAX_CHUNK bytes per iteration.
    ---
     libgfortran/io/unix.c | 50 ++++++++++++++++++++++++++++++++++++++++++--------
     1 file changed, 42 insertions(+), 8 deletions(-)
    
    diff --git a/libgfortran/io/unix.c b/libgfortran/io/unix.c
    index a07a3c9..7a982b3 100644
    --- a/libgfortran/io/unix.c
    +++ b/libgfortran/io/unix.c
    @@ -292,18 +292,49 @@ raw_flush (unix_stream *s  __attribute__ ((unused)))
       return 0;
     }
    
    +/* Write/read at most 2 GB - 4k chunks at a time. Linux never reads or
    +   writes more than this, and there are reports that macOS fails for
    +   larger than 2 GB as well.  */
    +#define MAX_CHUNK 2147479552
    +
     static ssize_t
     raw_read (unix_stream *s, void *buf, ssize_t nbyte)
     {
       /* For read we can't do I/O in a loop like raw_write does, because
          that will break applications that wait for interactive I/O.  We
    -     still can loop around EINTR, though.  */
    -  while (true)
    +     still can loop around EINTR, though.  This however causes a
    +     problem for large reads which must be chunked, see comment above.
    +     So assume that if the size is larger than the chunk size, we're
    +     reading from a file and not the terminal.  */
    +  if (nbyte <= MAX_CHUNK)
         {
    -      ssize_t trans = read (s->fd, buf, nbyte);
    -      if (trans == -1 && errno == EINTR)
    -       continue;
    -      return trans;
    +      while (true)
    +       {
    +         ssize_t trans = read (s->fd, buf, nbyte);
    +         if (trans == -1 && errno == EINTR)
    +           continue;
    +         return trans;
    +       }
    +    }
    +  else
    +    {
    +      ssize_t bytes_left = nbyte;
    +      char *buf_st = buf;
    +      while (bytes_left > 0)
    +       {
    +         ssize_t to_read = bytes_left < MAX_CHUNK ? bytes_left: MAX_CHUNK;
    +         ssize_t trans = read (s->fd, buf_st, to_read);
    +         if (trans == -1)
    +           {
    +             if (errno == EINTR)
    +               continue;
    +             else
    +               return trans;
    +           }
    +         buf_st += trans;
    +         bytes_left -= trans;
    +       }
    +      return nbyte - bytes_left;
         }
     }
    
    @@ -317,10 +348,13 @@ raw_write (unix_stream *s, const void *buf, ssize_t nbyte)
       buf_st = (char *) buf;
    
       /* We must write in a loop since some systems don't restart system
    -     calls in case of a signal.  */
    +     calls in case of a signal.  Also some systems might fail outright
    +     if we try to write more than 2 GB in a single syscall, so chunk
    +     up large writes.  */
       while (bytes_left > 0)
         {
    -      trans = write (s->fd, buf_st, bytes_left);
    +      ssize_t to_write = bytes_left < MAX_CHUNK ? bytes_left: MAX_CHUNK;
    +      trans = write (s->fd, buf_st, to_write);
           if (trans == -1)
            {
              if (errno == EINTR)
    --
    2.7.4
    
    From-SVN: r256172

commit cb1df2ac952e1258de848c5ba14118cd4b518549
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 3 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r256115

commit 1b4f0bcf4bdaab2e4c9174eed7ffe7ceed868405
Author: Andrew Waterman <andrew@sifive.com>
Date:   Tue Jan 2 20:57:54 2018 +0000

    RISC-V: Fix for icache flush issue on multicore processors.
    
            gcc/
            * config/riscv/linux.h (ICACHE_FLUSH_FUNC): New.
            * config/riscv/riscv.md (clear_cache): Use it.
    
    From-SVN: r256110

commit 27f04c8cc7780b9a1f9b973d5dbb4698502e64fd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 2 19:07:41 2018 +0100

    re PR c++/83556 (ICE in gimplify_expr, at gimplify.c:12004)
    
            PR c++/83556
            * tree.c (replace_placeholders_r): Pass NULL as last argument to
            cp_walk_tree instead of d->pset.  If non-TREE_CONSTANT and
            non-PLACEHOLDER_EXPR tree has been seen already, set *walk_subtrees
            to false and return.
            (replace_placeholders): Pass NULL instead of &pset as last argument
            to cp_walk_tree.
    
            * g++.dg/cpp0x/pr83556.C: New test.
    
    From-SVN: r256087

commit 52535f91db79d02151d9237c9ef45a482396865c
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Jan 2 18:01:31 2018 +0000

    re PR fortran/83650 (Wrong simplification in cshift with negative shifts)
    
    2018-01-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/83650
            * simplify.c (gfc_simplify_cshift): Correct contition for
            negative shifts.
    
    2018-01-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/83650
            * gfortran.dg/simplify_cshift_1.f90: Correct condition.
    
    From-SVN: r256085

commit 22be5165e0caea927c4b492807675318187356e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 2 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r256067

commit 528dc0195daf3b31d29d162176e969f1c29fb14a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jan 1 12:30:28 2018 +0100

    re PR rtl-optimization/83608 (ICE in convert_move, at expr.c:229 in GIMPLE store merging pass)
    
            PR middle-end/83608
            * expr.c (store_expr_with_bounds): Use simplify_gen_subreg instead of
            convert_modes if target mode has the right side, but different mode
            class.
    
            * g++.dg/opt/pr83608.C: New test.
    
    From-SVN: r256063

commit 63563fe69e1e708f96f8fe4a28ab24268cf1a0e8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jan 1 12:28:57 2018 +0100

    re PR tree-optimization/83609 (ICE in read_complex_part at gcc/expr.c:3202)
    
            PR middle-end/83609
            * expr.c (expand_assignment): Fix up a typo in simplify_gen_subreg
            last argument when extracting from CONCAT.  If either from_real or
            from_imag is NULL, use expansion through memory.  If result is not
            a CONCAT and simplify_gen_subreg fails, try to simplify_gen_subreg
            the parts directly to inner mode, if even that fails, use expansion
            through memory.
    
            * gcc.dg/pr83609.c: New test.
            * g++.dg/opt/pr83609.C: New test.
    
    From-SVN: r256062

commit f0b9bc343410fc3f36ddf68ebcdc3340bf4a3e68
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jan 1 12:27:17 2018 +0100

    re PR middle-end/83623 (ICE: in convert_move, at expr.c:248 with -march=knl and 16bit vector bswap/rotate)
    
            PR middle-end/83623
            * expmed.c (expand_shift_1): For 2-byte rotates by BITS_PER_UNIT,
            check for bswap in mode rather than HImode and use that in expand_unop
            too.
    
            * gcc.dg/pr83623.c: New test.
    
    From-SVN: r256061

commit dc9fa1419686e01ca826ca9d60909fc70467947c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jan 1 00:17:45 2018 +0000

    * es.po: Update.
    
    From-SVN: r256060

commit c6f9988610f727b3288929fc5d929cabe4989bd3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 1 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r256057

commit e11c6835a7b67ed44aafa4c8b30f52cb3efe4065
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 31 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r256047

commit 83ab9a1ad84201dc6f7dd0bfb3d980ee4832d8bb
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Dec 30 02:14:34 2017 +0000

    backport: re PR libfortran/83613 (Executing gfortran.dg/inquire_internal.f90 hangs on darwin after r255621)
    
    2017-12-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/83613
            * io/unit.c (init_units): Don't forget to unlock the unit locks
            after being inserted.
    
    From-SVN: r256041

commit f4c41575678b366d6ba025df10279f59b04f1e30
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 30 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r256038

commit 48498fcfeeb39093636235e2712701c433ee442d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 29 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r256029

commit 8c5b3f8f74da4b978477b41cc200eaab4d8927e6
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Dec 28 20:43:38 2017 +0000

    re PR fortran/83548 (Compilation Error using logical function in parameter)
    
    2017-12-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR Fortran/83548
            * match.c (gfc_match_type_spec): Check for LOGICAL conflict in
            type-spec versus LOGICAL intrinsic subprogram.
    
    2017-12-28  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR Fortran/83548
            * gfortran.dg/array_constructor_type_22.f03: New test.
    
    From-SVN: r256025

commit cf4a3f0859d315e3c09a8697bfaf17aac20d5561
Author: François Dumont <fdumont@gcc.gnu.org>
Date:   Thu Dec 28 05:37:54 2017 +0000

    backport: re PR libstdc++/82522 (std::map::insert(value_type &&) not selected)
    
    2017-12-28  François Dumont  <fdumont@gcc.gnu.org>
    
            Backport from mainline
            2017-12-20  François Dumont  <fdumont@gcc.gnu.org>
    
            PR libstdc++/82522
            * include/debug/map.h (map::insert(value_type&&))
            (map::insert(const_iterator, value_type&&)): Add overload for rvalues.
            * include/debug/multimap.h (multimap::insert(value_type&&))
            (multimap::insert(const_iterator, value_type&&)): Likewise.
            * include/debug/unordered_map (unordered_map::insert(value_type&&))
            (unordered_map::insert(const_iterator, value_type&&))
            (unordered_multimap::insert(value_type&&))
            (unordered_multimap::insert(const_iterator, value_type&&)): Likewise.
            * testsuite/23_containers/map/modifiers/insert/dr2354.cc (test02): New.
            * testsuite/23_containers/multimap/modifiers/insert/dr2354.cc (test02):
            New.
            * testsuite/23_containers/unordered_map/insert/dr2354.cc (test02): New.
            * testsuite/23_containers/unordered_multimap/insert/dr2354.cc (test02):
            New.
    
    From-SVN: r256018

commit cb6d05cd8177a68fe0d9b05ec9d95948d8e95626
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 28 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r256016

commit b37ba4de67f1ccc61960642ef2b4800b1e76b65e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 27 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r256005

commit 8abf694609df92bf7b0a917add2ec469edf9da04
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 26 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r255999

commit 09c83dafc2d8044b0919376703514f4d08ba860a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 25 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r255995

commit 8c8599a14d87311ddf584209856468b5212cb7ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r255990

commit 11942b177649d252a21c3991dde83c112c1efd41
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Dec 23 09:43:10 2017 +0100

    re PR c++/83553 (compiler removes body of the for-loop, although there is a case label inside)
    
            PR c++/83553
            * fold-const.c (struct contains_label_data): New type.
            (contains_label_1): Return non-NULL even for CASE_LABEL_EXPR, unless
            inside of a SWITCH_BODY seen during the walk.
            (contains_label_p): Use walk_tree instead of
            walk_tree_without_duplicates, prepare data for contains_label_1 and
            provide own pset.
    
            * c-c++-common/torture/pr83553.c: New test.
    
    From-SVN: r255988

commit 2c0a302f1a87feee95e201a28f250efacac79713
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 23 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255985

commit 7ad64964da6208d62662470dd0f38adb2b451e4c
Author: Martin Jambor <mjambor@suse.cz>
Date:   Fri Dec 22 19:28:59 2017 +0100

    [PR 82027] Also stream opt_info of former_clones
    
    2017-12-22  Martin Jambor  <mjambor@suse.cz>
    
            PR lto/82027
            * lto-cgraph.c (output_cgraph_opt_summary_p): Also check former
            clones.
    
    testsuite/
            * g++.dg/lto/pr82027_0.C: New test.
    
    From-SVN: r255983

commit b58d01a9773cbd83ccf7dbde58564d10b092a92a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 19:12:15 2017 +0100

    re PR debug/83550 (Bad location of DW_TAG_structure_type with forward declaration since r224161)
    
            PR debug/83550
            * c-decl.c (finish_struct): Set DECL_SOURCE_LOCATION on
            TYPE_STUB_DECL and call rest_of_type_compilation before processing
            incomplete vars rather than after it.
    
            * c-c++-common/dwarf2/pr83550.c: New test.
    
    From-SVN: r255982

commit b4b883cee34560fbe5f06d432804e48ed40e8e7f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 09:54:26 2017 +0100

    backport: re PR c/83448 (ice in get_source_location_for_substring, at input.c:1507)
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/83448
            * gimple-ssa-sprintf.c (maybe_warn): Don't call set_caret_index
            if navail is >= dir.len.
    
            * gcc.c-torture/compile/pr83448.c: New test.
            * gcc.dg/tree-ssa/builtin-snprintf-warn-4.c: New test.
    
    From-SVN: r255972

commit 7dc36181a097c8299f9a5e663af5c0c9eeb00a4b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 09:53:37 2017 +0100

    backport: re PR rtl-optimization/80747 (gcc.dg/tree-ssa/tailrecursion-4.c fails with ICE when compiled with options "-fprofile-use -freorder-blocks-and-partition")
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80747
            PR rtl-optimization/83512
            * cfgrtl.c (force_nonfallthru_and_redirect): When splitting
            succ edge from ENTRY, copy partition from e->dest to the newly
            created bb.
            * bb-reorder.c (reorder_basic_blocks_simple): If last_tail is
            ENTRY, use BB_PARTITION of its successor block as current_partition.
            Don't copy partition when splitting succ edge from ENTRY.
    
            * gcc.dg/pr80747.c: New test.
            * gcc.dg/pr83512.c: New test.
    
    From-SVN: r255971

commit f0666a4f0a6f99f2a7d66f0e219a1954021c7518
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 09:52:28 2017 +0100

    backport: re PR tree-optimization/83523 (ICE: verify_gimple failed (error: statement marked for throw, but doesn't))
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83523
            * tree-ssa-math-opts.c (is_widening_mult_p): Return false if
            for INTEGER_TYPE TYPE_OVERFLOW_TRAPS.
            (convert_mult_to_fma): Likewise.
    
            * g++.dg/tree-ssa/pr83523.C: New test.
    
    From-SVN: r255970

commit 79cd47fc9dd18aef9ed9bb523b99d7f6b0a2706a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 09:51:26 2017 +0100

    backport: re PR tree-optimization/83521 (ICE: verify_gimple failed (error: invalid operand in unary operation))
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83521
            * tree-ssa-phiopt.c (factor_out_conditional_conversion): Use
            gimple_build_assign without code on result of
            fold_build1 (VIEW_CONVERT_EXPR, ...), as it might not create
            a VIEW_CONVERT_EXPR.
    
            * gcc.dg/pr83521.c: New test.
    
    From-SVN: r255969

commit 5e3552617012e976ec766da0590796e62ff8075e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 22 09:50:30 2017 +0100

    backport: re PR ipa/82801 (Internal compiler error with Eigen and __attribute__((always_inline, flatten)))
    
            Backported from mainline
            2017-12-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/82801
            PR ipa/83346
            * ipa-inline.c (flatten_remove_node_hook): New function.
            (ipa_inline): Keep only nodes with flatten attribute at the end of
            the array in the order from ipa_reverse_postorder, only walk that
            portion of array for flattening, if there is more than one such
            node, temporarily register a removal hook and ignore removed nodes.
    
            * g++.dg/ipa/pr82801.C: New test.
    
    From-SVN: r255968

commit ec59f9b643e2eab024e0ab6f8d3bec437d83dbd0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 22 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r255964

commit 32a3966ecd50196e3605362a5cc58b14740a71e1
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Dec 21 21:48:34 2017 +0100

    re PR target/83467 (ICE: in assign_by_spills, at lra-assigns.c:1476: unable to find a register to spill with -flive-range-shrinkage -m8bit-idiv)
    
            PR target/83467
            * config/i386/i386.md (*ashl<mode>3_mask): Add operand
            constraints to operand 2.
            (*<shift_insn><mode>3_mask): Ditto.
            (*<rotate_insn><mode>3_mask): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/83467
            * gcc.target/i386/pr83467-1.c: New test.
            * gcc.target/i386/pr83467-2.c: Ditto.
    
    From-SVN: r255956

commit 44612ae164970ca6bee2721f64f8b99aacfc5ffd
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Dec 21 10:34:35 2017 +0000

    backport: re PR fortran/83436 (Internal file cannot be accessed by UNFORMATTED data transfer when reading from /dev/urandom)
    
    2017-12-21  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/83436
            * gfortran.dg/internal_readwrite_4.f90: New test.
    
    From-SVN: r255940

commit 0e927c845cdcc75c28603491bbd971e87a4e0c86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 21 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r255908

commit 61d8fc0ea3204ca3a9a8efc8c32d1d754bb8556a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 20 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r255847

commit 3c6ef044d3de56d92238868396bf1ecbc634f211
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Tue Dec 19 15:25:56 2017 +0000

    backport: re PR tree-optimization/82726 (ICE in verify_ssa during GIMPLE pass: pcom)
    
    
            Backport from mainline
            2017-11-15  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/82726
            PR tree-optimization/70754
            * tree-predcom.c (order_drefs_by_pos): New function.
            (combine_chains): Move code setting has_max_use_after to...
            (try_combine_chains): ...here.  New parameter.  Sort combined chains
            according to position information.
            (tree_predictive_commoning_loop): Update call to above function.
            (update_pos_for_combined_chains, pcom_stmt_dominates_stmt_p): New.
    
            2017-11-15  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/82726
            Revert
            2017-01-23  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/70754
            * tree-predcom.c (stmt_combining_refs): New parameter INSERT_BEFORE.
            (reassociate_to_the_same_stmt): New parameter INSERT_BEFORE.  Insert
            combined stmt before it if not NULL.
            (combine_chains): Process refs reversely and compute dominance point
            for root ref.
    
            Revert
            2017-02-23  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/79663
            * tree-predcom.c (combine_chains): Process refs in reverse order
            only for ZERO length chains, and add explaining comment.
    
            gcc/testsuite
    
            Backport from mainline
            2017-11-15  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/82726
            * gcc.dg/tree-ssa/pr82726.c: New test.
    
    From-SVN: r255828

commit b1c275e2c5c7cdbc89d9d1329edb512509f72db3
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Dec 19 13:40:42 2017 +0000

    Add a tetst for PR middle-end/83471
    
            Backported from mainline
            PR middle-end/83471
            * g++.dg/torture/pr83471.C: New test.
    
    From-SVN: r255822

commit fe513fce568f834e1ff24a6ca70fc6dee061013c
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Dec 19 10:02:48 2017 +0000

    re PR c++/83116 (Statement with no effect causes wrong code of static object constexpr method)
    
            PR c++/83116
            * constexpr.c (cxx_eval_call_expression): Only look into
            constexpr_call_table if ctx->strict.
    
            * g++.dg/cpp1y/constexpr-83116.C: New test.
    
    From-SVN: r255813

commit 109836feacbfc6f155ea89b39ad5200abf34d175
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue Dec 19 08:20:05 2017 +0000

    RTEMS/PowerPC: Remove 64-bit soft-float multilib
    
    gcc/
            PR target/83387
            * config/rs6000/t-rtems (MULTILIB_REQUIRED): Remove 64-bit soft-float
            multilib.
    
    From-SVN: r255810

commit 9f987b42fc8965619fa0859d5ace6433f70b5c3e
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Tue Dec 19 08:07:22 2017 +0000

    SPARC: Make sure that jump is to a label in errata workaround
    
    In some cases the jump could be to a return instruction and in those cases the
    next_active_insn() function tries to follow an invalid pointer which leads to a
    crash. This error did not manifest when using a 32-bit version of GCC which is
    why I did not detect it before.
    
    gcc/
            * config/sparc/sparc.c (sparc_do_work_around_errata): Make sure
            the jump is to a label.
    
    From-SVN: r255808

commit 8ef935f76ae22915bb8bb940d98df0b841d3c6a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 19 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255794

commit cfee4c0585ce657155df4a3aac39a822949807fe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 18 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r255770

commit 4e138baf89513db18d1e364bb78c9da1335275e7
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Dec 17 17:02:10 2017 +0000

    backport: pa.c (pa_legitimate_address_p): For scaled indexing...
    
            Backport from mainline
            2017-12-03  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.c (pa_legitimate_address_p): For scaled indexing,
            require base operand is a REG_POINTER prior to reload on targets
            with non-equivalent space registers.
    
    From-SVN: r255762

commit eb9432196713358bb0753d7f4dd424c745144de5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 17 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255757

commit 4429163edfa69a807bc2b07e5f3c833e6631f6c8
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Dec 16 21:57:17 2017 +0000

    backport: re PR libfortran/81937 (stack-buffer-overflow on memcpy in libgfortran/io/unix.c on character(kind=4))
    
    2017-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/81937
            * io/list_read.c (next_char_internal): Don't attempt to read
            from the internal unit stream if no bytes are left. Decrement
            bytes_left in the right place.
    
    From-SVN: r255752

commit 703106c36ebb9589a14c9eab5d18c92649983b43
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Dec 16 19:59:14 2017 +0000

    backport: re PR libfortran/78549 (Very slow formatted internal file output)
    
    2017-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/78549
            * io/inquire.c (inquire_via_unit): Adjust test for existence for
            pre-connected internal units.
            * io/transfer.c (finalize_transfer): When done with a transfer
            to internal units, free the format buffer and close the stream.
            (st_read_done): Delete freeing the stream, now handled using
            sclose in finalize_transfer. (st_write_done): Likewise.
            * io/unit.c (get_unit): Return NULL for special reserved unit
            numbers, signifying not accessible to the user.
            (init_units): Insert the two special internal units into the
            unit treap. This makes these unit structures available without
            further allocations for later use by internal unit I/O. These
            units are automatically deleted by normal program termination.
            * io/unix.c (mem_close): Add a guard check to protect from double free.
    
    From-SVN: r255751

commit e8baf08f2a5b44c056762a82d3a90f4036db7c21
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Dec 16 01:41:10 2017 +0100

    backport: re PR c++/83205 (ICE on structured binding with ill-formed negative std::tuple_size<T>::value)
    
            Backported from mainline
            2017-12-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83205
            * decl.c (cp_finish_decomp): Handle the case when tsize is not
            error_mark_node, but doesn't fit into uhwi.  Split up count != eltscnt
            and !tree_fits_uhwi_p (tsize) error_at calls into error_n and inform_n
            to handle plural forms properly.
    
            * g++.dg/cpp1z/decomp3.C: Adjust for structured binding count
            mismatch diagnostics split into error and warning with plural
            forms.
            * g++.dg/cpp1z/decomp10.C: Likewise.
            * g++.dg/cpp1z/decomp32.C: New test.
    
    From-SVN: r255736

commit c3fce73ee961987e36134cfa2068878f53f5e989
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Dec 16 01:40:14 2017 +0100

    backport: re PR c++/81197 (ICE with structured binding and lifetime-extended temporaries)
    
            Backported from mainline
            2017-12-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81197
            * cp-tree.h (cp_maybe_mangle_decomp): Declare.
            * decl.c (cp_maybe_mangle_decomp): New function.
            (cp_finish_decomp): Don't SET_DECL_ASSEMBLER_NAME here.
            * parser.c (cp_convert_range_for,
            cp_parser_decomposition_declaration): Call cp_maybe_mangle_decomp.
            * pt.c (tsubst_expr): Likewise.
            * mangle.c (find_decomp_unqualified_name): New function.
            (write_unqualified_name): Handle DECL_DECOMPOSITION_P
            where DECL_ASSEMBLER_NAME is already set.
    
            * g++.dg/cpp1z/decomp34.C: New test.
    
    From-SVN: r255735

commit b0fc69c9430480cf4d851973e26b23379790dd52
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 16 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r255733

commit f455bd3a1dfb43546d39629300acee31d362b928
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:16:15 2017 +0100

    re PR c++/83217 (Compiler segfault: structured binding by reference to a templated type via a pointer)
    
            PR c++/83217
            * decl.c (cp_finish_decomp): If decl's type is REFERENCE_TYPE,
            call complete_type (TREE_TYPE (type)).
    
            * g++.dg/cpp1z/decomp33.C: New test.
    
    From-SVN: r255730

commit 99ccf43c7077fa8e1e563d86ad499f3f5b32423e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:15:30 2017 +0100

    re PR tree-optimization/83269 (Wrong constant folding)
    
            PR tree-optimization/83269
            * fold-const.c (fold_binary_loc): Perform (-A) - B -> (-B) - A
            subtraction in arg0's type if type is signed and arg0 is unsigned.
            Formatting fix.
    
            * gcc.c-torture/execute/pr83269.c: New test.
    
    From-SVN: r255729

commit ea5869d3243849afbdcd550ae8da1be9b7f9d289
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:14:41 2017 +0100

    backport: re PR tree-optimization/83198 (ICE in format_floating, at gimple-ssa-sprintf.c:1900)
    
            Backported from mainline
            2017-12-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83198
            * gimple-ssa-sprintf.c (format_floating): Set type solely based on
            dir.modifier, regardless of TREE_TYPE (arg).  Assume non-REAL_CST
            value if arg is a REAL_CST with incompatible type.
    
            * gcc.dg/pr83198.c: New test.
            * gcc.dg/tree-ssa/pr83198.c: New test.
    
    From-SVN: r255728

commit a31d2f7b36535e4f6eb0894447d2a9e58e7fec46
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:13:37 2017 +0100

    backport: re PR c++/79650 (ICE on invalid c++ code with label arithmetic in convert_nontype_argument (pt.c:6515))
    
            Backported from mainline
            2017-12-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79650
            * pt.c (convert_nontype_argument): Diagnose
            reduced_constant_expression_p expressions that aren't INTEGER_CST.
    
            * g++.dg/template/pr79650.C: New test.
    
    From-SVN: r255727

commit a9a6b2e8cf2364665ea36a84c51a9d873a1a2d51
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:12:46 2017 +0100

    backport: re PR tree-optimization/80631 (Compiling with -O3 -mavx2 gives wrong code)
    
            Backported from mainline
            2017-12-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/80631
            * tree-vect-loop.c (get_initial_def_for_reduction): Fix comment typo.
            (vect_create_epilog_for_reduction): Add INDUC_VAL argument, for
            INTEGER_INDUC_COND_REDUCTION use INDUC_VAL instead of
            hardcoding zero as the value if COND_EXPR is never true.  For
            INTEGER_INDUC_COND_REDUCTION don't emit the final COND_EXPR if
            INDUC_VAL is equal to INITIAL_DEF.
            (vectorizable_reduction): Compute INDUC_VAL for
            vect_create_epilog_for_reduction, if no value is suitable, don't
            use INTEGER_INDUC_COND_REDUCTION for now.  Formatting fixes.
    
            * gcc.dg/vect/pr80631-1.c: New test.
            * gcc.dg/vect/pr80631-2.c: New test.
    
            PR tree-optimization/80631
            * gcc.target/i386/avx2-pr80631.c: New test.
    
    From-SVN: r255726

commit af3b2e05386612da9a6d8d5c6459acb3d65c7cd0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:11:33 2017 +0100

    backport: re PR target/81906 (Calls to rint() wrongly optimized away starting in g++ 6)
    
            Backported from mainline
            2017-12-08  Joseph Myers  <joseph@codesourcery.com>
                        Alexander Monakov  <amonakov@ispras.ru>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81906
            * config/i386/i386.c (ix86_expand_rint): Handle flag_rounding_math.
    
            * gcc.target/i386/pr81906.c: New test.
    
    From-SVN: r255725

commit 1c8f2b0a850f26507675314769413ac03d3806b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:10:40 2017 +0100

    backport: re PR c++/80259 (ICE deleting friend function)
    
            Backported from mainline
            2017-12-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80259
            * decl2.c (grokfield): Diagnose = delete redefinition of a friend.
    
            * g++.dg/cpp0x/pr80259.C: New test.
    
    From-SVN: r255723

commit 25d8a020e0b9e2648aeacee7d99b2cf12081ce4e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:09:50 2017 +0100

    backport: re PR sanitizer/81212 (-Wreturn-type is disabled when used together with -fsanitize=return)
    
            Backported from mainline
            2017-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81212
            * tree-cfg.c (pass_warn_function_return::execute): Handle
            __builtin_ubsan_handle_missing_return like __builtin_unreachable
            with BUILTINS_LOCATION.
    
            * g++.dg/ubsan/pr81212.C: New test.
    
    From-SVN: r255722

commit e2e1e8d9f89dd917c6845106834375432c43f7df
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:09:07 2017 +0100

    backport: re PR target/78643 (ICE in convert_move, at expr.c:230)
    
            Backported from mainline
            2017-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78643
            PR target/80583
            * expr.c (get_inner_reference): If DECL_MODE of a non-bitfield
            is BLKmode for vector field with vector raw mode, use TYPE_MODE
            instead of DECL_MODE.
    
            * gcc.target/i386/pr80583.c: New test.
    
    From-SVN: r255721

commit ab26ce4518203a88bea67a3c0e0e506569aee6bf
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:08:20 2017 +0100

    backport: re PR target/80819 (Useless store to the stack  in _mm_set_epi64x with SSE4 -mno-avx)
    
            Backported from mainline
            2017-11-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/80819
            * config/i386/sse.md (vec_concatv2di): Remove * from (=Yr,0,*rm)
            alternative.
    
            * gcc.target/i386/pr80819-1.c: New test.
            * gcc.target/i386/pr80819-2.c: New test.
    
    From-SVN: r255720

commit d67cb7e4017152fccac36d87ca8a4e8b86acc25b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:07:23 2017 +0100

    backport: re PR c++/81888 (Structured bindings stopped working)
    
            Backported from mainline
            2017-11-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81888
            * parser.c (cp_parser_decomposition_declaration): Reject just
            BRACE_ENCLOSED_INITIALIZER_P initializers with nelts != 1 rather
            than all such CONSTRUCTORs, and only if is_direct_init is true.
    
            * g++.dg/cpp1z/decomp30.C: Add a test for structured binding with
            = {} and = { a, a } initializers.
            * g++.dg/cpp1z/decomp31.C: New test.
    
    From-SVN: r255719

commit 4c8c427fcf2d272d35c01733387bf088238d71e9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:06:16 2017 +0100

    backport: re PR c++/81675 (attribute(noreturn) of destructor in :? not honored)
    
            Backported from mainline
            2017-11-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81675
            * cp-gimplify.c (cp_fold) <case COND_EXPR>: Don't return immediately
            for VOID_TYPE_P COND_EXPRs, instead fold the operands and if op0 is
            INTEGER_CST, ensure that both op1 and op2 are non-NULL and fall
            through into normal folding, otherwise just rebuild x if any op
            changed.
    
            * g++.dg/warn/pr81675.C: New test.
    
    From-SVN: r255718

commit 7e27191cf5a42623d296338b6c288b0092fe7671
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 23:05:00 2017 +0100

    backport: re PR rtl-optimization/81553 (ICE in immed_wide_int_const, at emit-rtl.c:607)
    
            Backported from mainline
            2017-11-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/81553
            * combine.c (simplify_if_then_else): In (if_then_else COND (OP Z C1) Z)
            to (OP Z (mult COND (C1 * STORE_FLAG_VALUE))) optimization, if OP
            is a shift where C1 has different mode than the whole shift, use C1's
            mode for MULT rather than the shift's mode.
    
            * gcc.c-torture/compile/pr81553.c: New test.
    
    From-SVN: r255717

commit 88b712c241bb820f28d59cc8bfcbea575b3de654
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Dec 15 23:00:48 2017 +0100

    backport: re PR fortran/81304 (Bogus warning with -Wsurprising and -fopenmp: Type specified for intrinsic function 'min' / 'max')
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/81304
            * trans-openmp.c (gfc_trans_omp_array_reduction_or_udr): Set
            attr.implicit_type in intrinsic_sym to avoid undesirable warning.
    
            * testsuite/libgomp.fortran/pr81304.f90: New test.
    
    From-SVN: r255716

commit e57525d5149e7432975a209a065ecdedd5dd6d3f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:58:13 2017 +0100

    backport: re PR sanitizer/83014 (ICE in pretty-print with -fsanitize=bounds)
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83014
            * ubsan.c (ubsan_type_descriptor): Use pp_unsigned_wide_integer
            instead of pp_printf with HOST_WIDE_INT_PRINT_DEC.  Avoid calling
            tree_to_uhwi twice.
    
            * gcc.dg/ubsan/pr83014.c: New test.
    
    From-SVN: r255715

commit 5a8687cc5256440c80eacb07fccbe717c4476efb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:57:19 2017 +0100

    backport: tree-object-size.c (pass_through_call): Do not handle BUILT_IN_STPNCPY_CHK which is not a pass through call.
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            * tree-object-size.c (pass_through_call): Do not handle
            BUILT_IN_STPNCPY_CHK which is not a pass through call.
    
            * gcc.dg/builtin-object-size-18.c: New test.
    
    From-SVN: r255714

commit 7c11fb2820559be78f38b46c8067c16dd71f64e3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:56:21 2017 +0100

    backport: parser.c (cp_parser_omp_declare): Change return type to bool from void, return true for declare simd.
    
            Backported from mainline
            2017-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            * parser.c (cp_parser_omp_declare): Change return type to bool from
            void, return true for declare simd.
            (cp_parser_pragma): Return cp_parser_omp_declare returned value
            rather than always false.
    
    From-SVN: r255713

commit 29d1342c4be7f6310221f828e3320b06b20941ec
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:55:47 2017 +0100

    backport: re PR fortran/81841 (THREADPRIVATE (OpenMP) wrongly rejected in BLOCK DATA)
    
            Backported from mainline
            2017-11-23  Dirk Broemmel  <d.broemmel@fz-juelich.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/81841
            * parse.c (parse_spec): Allow ST_OMP_THREADPRIVATE inside of
            BLOCK DATA.
    
            * libgomp.fortran/pr81841.f90: New test.
    
    From-SVN: r255712

commit 8ea87c5f83617310b89869df175d42a387b0ae40
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:54:15 2017 +0100

    backport: re PR middle-end/82253 (ICE in convert_move, at expr.c:604)
    
            Backported from mainline
            2017-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/82253
            * expr.c (expand_assignment): For CONCAT to_rtx, complex type from and
            bitpos/bitsize covering the whole destination, use store_expr only if
            the complex mode is the same.  Otherwise, use expand_normal and if
            it returns CONCAT, subreg each part separately instead of trying to
            subreg the whole result.
    
            * gfortran.dg/pr82253.f90: New test.
    
    From-SVN: r255711

commit 98a409be9db44905867242eb583eb31367bfcf94
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:53:29 2017 +0100

    backport: re PR debug/83084 (-fcompare-debug failure on ppc64le)
    
            Backported from mainline
            2017-11-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/83084
            * valtrack.c (propagate_for_debug_subst, propagate_for_debug): Reset
            debug insns if they would contain UNSPEC_VOLATILE or volatile asm.
            (dead_debug_insert_temp): Likewise, but also ignore even non-volatile
            asm.
    
            * g++.dg/opt/pr83084.C: New test.
    
    From-SVN: r255710

commit 98ea6f03f9533c9135960c05defcd8320bbfbe69
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:52:06 2017 +0100

    backport: re PR target/82880 (gcc --help=target --help=optimizers hangs on mips)
    
            Backported from mainline
            2017-11-21  James Cowgill  <James.Cowgill@imgtec.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82880
            * config/mips/frame-header-opt.c (mips_register_frame_header_opt):
            Remove static keyword from f variable.
    
            * gcc.dg/opts-8.c: New test.
    
    From-SVN: r255709

commit 0c924e851e9697dd06e279fa413a17a3a88e5b76
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:50:52 2017 +0100

    backport: re PR c++/83059 (ICE on invalid C++ code: in tree_to_uhwi, at tree.c:6633)
    
            Backported from mainline
            2017-11-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83059
            * c-common.c (get_atomic_generic_size): Use TREE_INT_CST_LOW
            instead of tree_to_uhwi, formatting fix.
    
            * c-c++-common/pr83059.c: New test.
    
    From-SVN: r255708

commit e74d698765e06d6b9238a34b32727b8b563e2173
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 15 22:50:00 2017 +0100

    backport: re PR c++/82781 (Vector extension operators return wrong result in constexpr)
    
            Backported from mainline
            2017-11-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82781
            * constexpr.c (cxx_eval_vector_conditional_expression): New function.
            (cxx_eval_constant_expression) <case VEC_COND_EXPR>: Use it instead
            of cxx_eval_conditional_expression.
    
            * g++.dg/ext/constexpr-pr82781.C: New test.
    
    From-SVN: r255707

commit 8c633e4d27ad439877cee8b932851ac055537fe4
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 15 20:45:36 2017 +0000

    re PR bootstrap/83439 (Bootstrap failure with --enable-checking=yes,rtl,extra)
    
    2017-12-15  Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/83439
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            Adjust remaining gimple_set_modified to use the modified
            variable instead.
    
    From-SVN: r255704

commit 9f671acc02b0c38b51b9fef857243ed8ed8669b6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Dec 15 11:31:42 2017 +0000

    re PR target/66488 (segfault on sizeof(long) < sizeof(void*) and large GCC memory usage)
    
            PR target/66488
            * ggc-page.c (HOST_BITS_PER_PTR): Do not define here...
            * hwint.h (HOST_BITS_PER_PTR): ...but here instead.
            * config/i386/xm-mingw32.h (HOST_BITS_PER_PTR): Delete.
    
    From-SVN: r255688

commit 2c44df49aa2bfbe736b257eb0a836591c562d834
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 15 10:12:08 2017 +0000

    backport: re PR tree-optimization/82060 (ICE in refs_may_alias_p_1 with devirtualization enabled)
    
    2017-12-15  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            PR tree-optimization/82060
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            Move devirtualization after stmt folding and before EH/AB/noreturn
            cleanup to get the stmt refs canonicalized.  Use a bool instead
            of gimple_modified_p since that doesn't work for NOPs.  Schedule
            NOPs generated by folding for removal.
    
            * g++.dg/torture/pr82060.C: New testcase.
    
    From-SVN: r255682

commit c49c3117e3a8f2e167e0ff15173a260f9f532ae6
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Fri Dec 15 09:59:24 2017 +0000

    Fix regression on soft float targets for armv8_2-fp16-move-2.c
    
    *** gcc/testsuite/ChangeLog ***
    
    2017-12-15  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.target/arm/armv8_2-fp16-move-2.c: Remove dg-add-options.
    
    From-SVN: r255681

commit ab5f49b5d86b96c9dc6c36149a9782116656203f
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 15 08:19:15 2017 +0000

    backport: [multiple changes]
    
    2017-12-15  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-05  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82102
            * tree-ssa-pre.c (eliminate): Check if lhs is NULL.
    
            * gcc.dg/torture/pr82102.c: New testcase.
    
            2017-09-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/82128
            * gimple-fold.c (gimple_fold_call): Update SSA name in-place to
            default-def to avoid breaking iterator update with the weird
            interaction with cgraph_update_edges_for_call_stmt_node.
    
            * g++.dg/pr82128.C: New testcase.
    
    From-SVN: r255678

commit ec40d1a8ad5519dd5cdd8a6cc2cb3cf6444a34bf
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 15 08:12:10 2017 +0000

    Backport PRs 82402, 82697, 82765, 82902
    
    2017-12-15  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-11-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82402
            * tree-vect-loop-manip.c (create_lcssa_for_virtual_phi): Properly
            set SSA_NAME_OCCURS_IN_ABNORMAL_PHI.
    
            * gcc.dg/torture/pr82402.c: New testcase.
    
            2017-10-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82697
            * tree-ssa-phiopt.c (cond_store_replacement): Use alias-set
            zero for conditional load and unconditional store.
    
            * gcc.dg/torture/pr82697.c: New testcase.
    
            2017-11-02  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/82765
            * varasm.c (decode_addr_const): Make offset HOST_WIDE_INT.
            Truncate ARRAY_REF index and element size.
    
            * gcc.dg/pr82765.c: New testcase.
    
            2017-11-09  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82902
            * tree-ssa-phiprop.c (propagate_with_phi): Test proper type.
    
            * g++.dg/torture/pr82902.C: New testcase.
    
    From-SVN: r255677

commit 5c7286278897dc8d3fd982eebf643b15146db41b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 15 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r255669

commit 34f5d7982a79fa5eab25cf7c17ff31ca385da288
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Dec 14 11:43:32 2017 -0600

    backport: re PR target/80210 (ICE in in extract_insn, at recog.c:2311 on ppc64 for with __builtin_pow)
    
    gcc/
            Backport from mainline
            2017-10-02  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Rewrite
            function to not use the have_cpu variable.  Do not set cpu_index,
            rs6000_cpu_index or rs6000_tune_index if we end up using TARGET_DEFAULT
            or the default cpu.
            (rs6000_valid_attribute_p): Remove duplicate initializations of
            old_optimize and func_optimize.
            (rs6000_pragma_target_parse): Call rs6000_activate_target_options ().
            (rs6000_activate_target_options): Make global.
            * config/rs6000/rs6000-protos.h (rs6000_activate_target_options): Add
            prototype.
    
    gcc/testsuite/
            Backport from mainline
            2017-10-02  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * gcc.target/powerpc/pr80210-2.c: New test.
    
    From-SVN: r255655

commit 31ceab27a864774c57a86637bf962bcc415c7a3c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Dec 14 17:29:22 2017 +0000

    PR libstdc++/83427 detect weak result type from noexcept functions
    
            PR libstdc++/83427
            * include/bits/refwrap.h (_Weak_result_type_impl)
            (_Reference_wrapper_base): Deduce noexcept for function types.
            * testsuite/20_util/bind/83427.cc: New test.
            * testsuite/20_util/reference_wrapper/83427.cc: New test.
    
    From-SVN: r255652

commit a9834d8de0e49b04f20b3c6e8a26a2e4d8e6ad8b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Dec 14 17:05:43 2017 +0000

    decl.c (gnat_to_gnu_field): Do not set the alignment of the enclosing record type if it is not already set.
    
            * gcc-interface/decl.c (gnat_to_gnu_field): Do not set the alignment
            of the enclosing record type if it is not already set.
    
    From-SVN: r255646

commit 3824ac481e56c94924e1440109e04885c74fc6f3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Dec 14 11:53:02 2017 +0000

    PR libstdc++/59568 don't use putback or update value when extraction fails
    
            PR libstdc++/59568
            * include/std/complex (operator>>): Only use putback if a character
            was successfully extracted and only set the value if a number was
            successfully extracted.
            * testsuite/26_numerics/complex/inserters_extractors/char/59568.cc:
            New test.
    
    From-SVN: r255633

commit 7eb38f05ee140b38aa337613761c8dc4eddd3509
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Dec 13 21:43:10 2017 -0600

    backport: ppc-auxv.h (PPC_FEATURE2_HTM_NO_SUSPEND): New define.
    
    gcc/
            Backport from mainline
            2017-12-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/ppc-auxv.h (PPC_FEATURE2_HTM_NO_SUSPEND): New define.
            * config/rs6000/rs6000.c (cpu_supports_info): Use it.
    
    gcc/testsuite/
            Backport from mainline
            2017-12-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            * gcc.target/powerpc/cpu-builtin-1.c (htm-no-suspend): Add test.
    
    From-SVN: r255622

commit cbbde35a9ce9d2b4768b2141df2e78dd5f828f4f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255619

commit 730b33562c1c0aee1d442816ecce48d2713f29b8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Dec 13 09:30:42 2017 +0000

    * gcc-interface/trans.c (Subprogram_Body_to_gnu): Initialize locus.
    
    From-SVN: r255604

commit c3eea58cc5904bdba50340d2633ca30654e74445
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Dec 13 09:18:42 2017 +0000

    trans.c (process_freeze_entity): Be prepared for a package without body.
    
            * gcc-interface/trans.c (process_freeze_entity): Be prepared for a
            package without body.
    
    From-SVN: r255602

commit f89e8e80204d1890624616d3e4c9d72290a5bfda
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Dec 13 09:05:48 2017 +0000

    decl.c (gnat_to_gnu_entity): Robustify test for types descendant of System.Address.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity): Robustify test for types
            descendant of System.Address.
            (gnat_to_gnu_subprog_type): Likewise.
    
    From-SVN: r255600

commit 17fb0c2dce865aabc0db0f8c8febd513e7e12ce6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 13 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r255595

commit 4fb43923efc804c95a53dbe2fcf1a5f0dfefef02
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Dec 12 18:07:24 2017 +0000

    PR libstdc++/83395 fix invocable traits for INVOKE<cv void>
    
            PR libstdc++/83395
            * include/std/type_traits (__is_invocable_impl): Remove partial
            specialization for INVOKE<void> and restore is_void<R> check in
            primary template.
            (__is_nt_invocable_impl): Likewise.
            * testsuite/20_util/is_invocable/83395.cc: New test.
            * testsuite/20_util/is_nothrow_invocable/83395.cc: New test.
    
    From-SVN: r255585

commit d7126655218bc47a734703ea3a92e0dc095bf036
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 12 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r255561

commit 634940f16812a80c2b3cc1d0e8c46a6c5d2c8086
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Dec 11 18:54:55 2017 +0000

    backport: re PR target/81959 (PowerPC __float128 optimization fails with integer PRE_INC addresses)
    
    [gcc]
    2017-12-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-12-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81959
            * config/rs6000/rs6000.c (rs6000_address_for_fpconvert): Check for
            whether we can allocate pseudos before trying to fix an address.
            * config/rs6000/rs6000.md (float_<mode>si2_hw): Make sure the
            memory address is indexed or indirect.
            (floatuns_<mode>si2_hw2): Likewise.
    
    [gcct/testsuite]
    2017-12-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-12-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81959
            * gcc.target/powerpc/pr81959.c: New test.
    
    From-SVN: r255545

commit e9c07226b8e3374af456a27d2c41ba6c7774c8fa
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Mon Dec 11 17:07:33 2017 +0000

    Backported 'Fix wrong code by arm_final_prescan with fp16 move instructions'
    
    ChangeLog entry are as follow:
    
    *** gcc/ChangeLog ***
    
    2017-12-11  Sudakshina Das  <sudi.das@arm.com>
    
            Backported from trunk
            2017-12-01  Sudakshina Das  <sudi.das@arm.com>
    
            * config/arm/vfp.md (*movhf_vfp_fp16): Add conds attribute.
    
    *** gcc/testsuite/ChangeLog ***
    
    2017-12-11  Sudakshina Das  <sudi.das@arm.com>
    
            Backported from trunk
            2017-12-01  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.target/arm/armv8_2-fp16-move-2.c: New test.
    
    From-SVN: r255541

commit 5e8974d1f2fd2f05e6a611b4b46672d32e8ac126
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 11 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255536

commit 3a15e0edf82b058e91b8bc74ae64dfa10dc6473a
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sun Dec 10 20:52:54 2017 +0000

    Backport "Fix condition folding in c_parser_omp_for_loop"
    
    2017-12-10  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2017-09-16  Tom de Vries  <tom@codesourcery.com>
    
            PR c/81875
            * c-parser.c (c_parser_omp_for_loop): Fold only operands of cond, not
            cond itself.
    
            * testsuite/libgomp.c/pr81875.c: New test.
    
    From-SVN: r255531

commit 07f59edb304928ce26ade359105acbe8bfb79333
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 10 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255526

commit 040f7ca425c651a1379f871ce700f119533b246b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255519

commit 84bb19ceab7780fad63c39870d78bdcc732e9aae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 8 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255489

commit 32c5be0d14fae53e5a0f5d63e036cbfe87c83367
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Thu Dec 7 13:20:27 2017 +0000

    backport: re PR target/80101 (ICE in store_data_bypass_p, at recog.c:3737)
    
    gcc/testsuite/ChangeLog:
    
    2017-12-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk
            2017-05-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/80101
            * gcc.target/powerpc/pr80101-1.c: New test.
    
    
    gcc/ChangeLog:
    
    2017-12-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk
            2017-05-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR target/80101
            * config/rs6000/power6.md: Replace store_data_bypass_p calls with
            rs6000_store_data_bypass_p in seven define_bypass directives and
            in several comments.
            * config/rs6000/rs6000-protos.h: Add prototype for
            rs6000_store_data_bypass_p function.
            * config/rs6000/rs6000.c (rs6000_store_data_bypass_p): New
            function implements slightly different (rs6000-specific) semantics
            than store_data_bypass_p, returning false rather than aborting
            with assertion error when arguments do not satisfy the
            requirements of store data bypass.
            (rs6000_adjust_cost): Replace six calls of store_data_bypass_p with
            rs6000_store_data_bypass_p.
    
    From-SVN: r255465

commit 6df2bbd2a8654b32f5ac5a5983f3d29b7672ec7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 7 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255459

commit 2e5a45f9323280c679e285d76fa4f9a471e2a2b6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Dec 6 08:38:32 2017 +0000

    Revert
            2017-11-29  Martin Aberg  <maberg@gaisler.com>
    
            * config/sparc/sparc.md (divdf3_fix): Add NOP and adjust length
            to prevent b2bst errata sequence.
            (sqrtdf2_fix): Likewise.
    
    From-SVN: r255440

commit ee11eff31bcb9ca81aaca15b835ff47e3d1c206d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 6 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r255436

commit d8881440285723742002c5a51954dc0c9af72a8c
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Dec 5 14:31:41 2017 +0000

    xtensa: enable address sanitizer
    
    2017-12-05  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2017-12-05  Max Filippov  <jcmvbkbc@gmail.com>
            * config/xtensa/xtensa.c (xtensa_asan_shadow_offset): New
            function.
            (TARGET_ASAN_SHADOW_OFFSET): New macro definition.
            * config/xtensa/xtensa.h (FRAME_GROWS_DOWNWARD): Set to 1 if
            ASAN is enabled.
    
    From-SVN: r255422

commit 6c118c0f70ffca2d9ac77ee0ffccf0c0478e74a7
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Dec 5 14:29:53 2017 +0000

    xtensa: add support for SSP
    
    gcc/
    2017-12-05  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2017-05-08  Max Filippov  <jcmvbkbc@gmail.com>
            * config/xtensa/xtensa-protos.h
            (xtensa_initial_elimination_offset): New declaration.
            * config/xtensa/xtensa.c (xtensa_initial_elimination_offset):
            New function. Move its body from the INITIAL_ELIMINATION_OFFSET
            macro definition, add case for FRAME_POINTER_REGNUM when
            FRAME_GROWS_DOWNWARD.
            * config/xtensa/xtensa.h (FRAME_GROWS_DOWNWARD): New macro
            definition.
            (INITIAL_ELIMINATION_OFFSET): Replace body with call to
            xtensa_initial_elimination_offset.
    
    From-SVN: r255421

commit 1247cb582c882b52876de68f1335aa93b53ccea8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 5 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255397

commit 957004f6f82d230d1aaaaeb72610dfc584d90fe8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Dec 4 23:14:23 2017 +0000

    sparc.c (sparc_do_work_around_errata): Use mem_ref instead of MEM_P in a couple more places.
    
            * config/sparc/sparc.c (sparc_do_work_around_errata): Use mem_ref
            instead of MEM_P in a couple more places.  Fix formatting issues.
    
    From-SVN: r255394

commit 5099bde3f031b35e98cf790718e699ad04357434
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Mon Dec 4 13:41:46 2017 +0000

    RTEMS/Ada: Account for 64-bit time_t
    
    The Newlib time_t has now 64 bits for RTEMS.
    
    gcc/ada
    
            * gcc-interface/Makefile.in (RTEMS): Use s-osprim.adb.
            * s-osprim-rtems.adb: New file.
            * s-osinte-rtems.adb (pthread_cond_t): Fix alignment.
            (pthread_mutexattr_t): Likewise.
            (pthread_rwlockattr_t): Likewise.
            (pthread_rwlock_t): Likewise.
            (time_t): Use 64-bit integer.
    
    From-SVN: r255381

commit 2df7463a7ac52109a92a27f51bccf1e1c501a948
Author: Sebastian Peryt <sebastian.peryt@intel.com>
Date:   Mon Dec 4 12:03:37 2017 +0100

    Fix PR82941 and PR82942 by adding proper vzeroupper generation on SKX.
    
    Add X86_TUNE_EMIT_VZEROUPPER to indicate if vzeroupper instruction should
    be inserted before a transfer of control flow out of the function.  It is
    turned on by default unless we are tuning for KNL.  Users can always use
    -mzeroupper or -mno-zeroupper to override X86_TUNE_EMIT_VZEROUPPER.
    
    2017-12-04  Sebastian Peryt  <sebastian.peryt@intel.com>
            H.J. Lu  <hongjiu.lu@intel.com>
    
    gcc/
            Bakcported from trunk
            PR target/82941
            PR target/82942
            PR target/82990
            * config/i386/i386.c (pass_insert_vzeroupper): Remove
            TARGET_AVX512F check from gate condition.
            (ix86_check_avx256_register): Changed to ...
            (ix86_check_avx_upper_register): ... this. Add extra check for
            VALID_AVX512F_REG_OR_XI_MODE.
            (ix86_avx_u128_mode_needed): Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_check_avx256_stores): Changed to ...
            (ix86_check_avx_upper_stores): ... this. Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_avx_u128_mode_after): Changed
            avx_reg256_found to avx_upper_reg_found. Changed
            ix86_check_avx256_stores to ix86_check_avx_upper_stores.
            (ix86_avx_u128_mode_entry): Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_avx_u128_mode_exit): Ditto.
            (ix86_option_override_internal): Set MASK_VZEROUPPER if
            neither -mzeroupper nor -mno-zeroupper is used and
            TARGET_EMIT_VZEROUPPER is set.
            * config/i386/i386.h: (host_detect_local_cpu): New define.
            (TARGET_EMIT_VZEROUPPER): New.
            * config/i386/x86-tune.def: Add X86_TUNE_EMIT_VZEROUPPER.
    
    2017-12-04  Sebastian Peryt  <sebastian.peryt@intel.com>
            H.J. Lu  <hongjiu.lu@intel.com>
    
    gcc/testsuite/
            Backported from trunk
            PR target/82941
            PR target/82942
            PR target/82990
            * gcc.target/i386/pr82941-1.c: New test.
            * gcc.target/i386/pr82941-2.c: Likewise.
            * gcc.target/i386/pr82942-1.c: Likewise.
            * gcc.target/i386/pr82942-2.c: Likewise.
            * gcc.target/i386/pr82990-1.c: Likewise.
            * gcc.target/i386/pr82990-2.c: Likewise.
            * gcc.target/i386/pr82990-3.c: Likewise.
            * gcc.target/i386/pr82990-4.c: Likewise.
            * gcc.target/i386/pr82990-5.c: Likewise.
            * gcc.target/i386/pr82990-6.c: Likewise.
            * gcc.target/i386/pr82990-7.c: Likewise.
    
    Co-Authored-By: H.J. Lu <hongjiu.lu@intel.com>
    
    From-SVN: r255378

commit fdef6a73f1fe135f4186c6beaddf26d088f9f992
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Mon Dec 4 03:51:28 2017 +0000

    backport: re PR libfortran/83168 (FAIL: gfortran.dg/fmt_f0_2.f90 with a sanitized libgfortran)
    
    2017-12-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/83168
            * io/write.c (select_string): Bump size by one to avoid
            overrun.
    
    From-SVN: r255373

commit 487568a811dc5ddb4a38887c0622435efcb7452c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 4 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r255371

commit 7aee7828dee9e73eb9852a1eeb13d2fb837bd543
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Dec 3 20:43:59 2017 +0000

    backport: re PR fortran/83191 (Writing a namelist with repeated complex numbers)
    
    2017-12-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
                Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            Backport from trunk
            PR libgfortran/83191
            * io/transfer.c (list_formatted_read_scalar): Do not set
            namelist_mode bit here. (namelist_read): Likewise.
            (data_transfer_init): Clear the mode bit here.
            (finalize_transfer): Do set the mode bit just before any calls
            to namelist_read or namelist_write. It can now be referred to
            in complex_write.
            * io/write.c (write_complex): Suppress the leading blanks when
            namelist_mode bit is not set to 1.
    
            * gfortran.dg/namelist_95.f90: New test.
    
    Co-Authored-By: Dominique d'Humieres <dominiq@lps.ens.fr>
    
    From-SVN: r255368

commit d8e390ad7972e2e71253e29bd4023d43edafc499
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Dec 3 05:05:51 2017 +0000

    backport: re PR fortran/83225 (runtime error in transfer.c)
    
    2017-12-02  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/83225
            * io/io.h (is_internal_unit): Use the unit_is_internal bit.
            * io/transfer.c (data_transfer_init): Set the bit to true for
            internal units. Use that bit for checks for internal unit
            initializations.
            * io/unit.c (insert_unit): As a precaution, set the
            internal_unit_kind to zero when a unit structure is first created.
    
    From-SVN: r255364

commit 600c0c1f9a38c4afe1f4f2195bff65d000f235fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 3 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255360

commit 41ff41cfcbbe4438faa1ea3eecdefef795f7cb71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 2 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r255343

commit cd68fefbc0ef3144be97669f0243cdde884e3bab
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Dec 1 21:35:52 2017 +0100

    rs6000: Improve comparison rtx_cost (PR81288)
    
    The current rs6000 rtx_cost for comparisons against 0 is very high if
    TARGET_ISEL && !TARGET_MFCRF, much higher than for reg-reg comparisons,
    much higher than a load of 0 and such a reg-reg-comparison.  This leads
    to infinite recursion in CSE (see PR81288).
    
    This patch removes the too-high cost, also simplifying this code.
    
    
            PR 81288/target
            * config/rs6000/rs6000.c (rs6000_rtx_costs): Do not handle
            TARGET_ISEL && !TARGET_MFCRF differently.  Simplify code.
    
    From-SVN: r255337

commit 50748fad7c2313ebe6ce964d3e43d924b18211e2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:50:59 2017 +0000

    PR libstdc++/82522 overload map insert functions for rvalues (LWG 2354)
    
    Backport from mainline
    2017-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/82522
            * doc/xml/manual/intro.xml: Document LWG 2354 changes.
            * include/bits/stl_map.h (map::insert(value_type&&))
            (map::insert(const_iterator, value_type&&)): Add overload for rvalues.
            * include/bits/stl_multimap.h (multimap::insert(value_type&&))
            (multimap::insert(const_iterator, value_type&&)): Likewise.
            * include/bits/unordered_map.h (unordered_map::insert(value_type&&))
            (unordered_map::insert(const_iterator, value_type&&))
            (unordered_multimap::insert(value_type&&))
            (unordered_multimap::insert(const_iterator, value_type&&)): Likewise.
            * testsuite/23_containers/map/modifiers/insert/dr2354.cc: New test.
            * testsuite/23_containers/multimap/modifiers/insert/dr2354.cc: New
            test.
            * testsuite/23_containers/unordered_map/insert/dr2354.cc: New test.
            * testsuite/23_containers/unordered_multimap/insert/dr2354.cc: New
            test.
    
    From-SVN: r255330

commit 2a8f244b91a85cb8c8ae4f728b56c739f5dd5a80
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:23 2017 +0000

    PR libstdc++/83134 Ensure std::__not_ converts B::value to bool
    
    Backport from mainline
    2017-11-23  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83134
            * include/std/type_traits (__not_): Explicitly convert to bool.
            * testsuite/20_util/declval/requirements/1_neg.cc: Adjust dg-error.
            * testsuite/20_util/logical_traits/83134.cc: New test.
            * testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust
            dg-error.
            * testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:
            Likewise.
    
    From-SVN: r255329

commit 526e9a2a50b2c25f1ce02270a8e333d78fcf4372
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:18 2017 +0000

    Add noexcept to std::integral_constant members
    
    Backport from mainline
    2017-12-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/type_traits (integral_constant): Make member functions
            noexcept (LWG 2346).
            * include/std/utility (integer_sequence): Likewise.
    
    From-SVN: r255328

commit 32d94e772ea9882c2a1beadfaae1f864ddbc7c39
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:15 2017 +0000

    Add noexcept to std::shared_future copy operations (LWG DR 2799)
    
    Backport from mainline
    2017-11-16  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/future (shared_future): Add noexcept to copy constructor
            and copy-assignment operator (LWG 2799).
    
    From-SVN: r255327

commit c210258bae08b8489ed22b81a74cf8ddc0b2af80
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:11 2017 +0000

    Add noexcept to generic std::size, std::empty and std::data
    
    Backport from mainline
    2017-11-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/range_access.h (size, empty, data): Add conditional
            noexcept to generic overloads.
    
    From-SVN: r255326

commit e737fc0cba35a46cc9ba6815ec198eae25bc2bee
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:07 2017 +0000

    PR libstdc++/82685 add 'noexcept' to string_view literals
    
    Backport from mainline
    2017-10-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/82685
            * include/experimental/string_view (operator""sv): Add noexcept.
            * include/std/string_view (operator""sv): Likewise.
    
    From-SVN: r255325

commit c4e8c8d71c59620e1dea4aeaa4139471256d20ff
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:12:04 2017 +0000

    PR libstdc++/83226 avoid forming pointer-to-reference type
    
    Backport from mainline
    2017-11-30  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83226
            * include/bits/node_handle.h (_Node_handle::__pointer): Avoid forming
            pointer-to-reference types.
            * testsuite/23_containers/map/modifiers/insert/83226.cc: New test.
    
    From-SVN: r255324

commit 54482a130ae985afbac4b34e7062a9a8ddd493e8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:11:59 2017 +0000

    Fix typo in std::wbuffer_convert
    
    Backport from mainline
    2017-11-14  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/locale_conv.h (wbuffer_convert::_M_conv_get): Fix typo.
            * testsuite/22_locale/conversions/buffer/3.cc: New test.
    
    From-SVN: r255323

commit 051af3f55fe1b1f85e9c4c2c754c276284141b3e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 1 17:11:55 2017 +0000

    Remove _Node_insert_return::get() member functions (P0508R0)
    
    Backport from mainline
    2017-11-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/node_handle.h (_Node_insert_return::get): Remove, as
            per P0508R0.
    
    From-SVN: r255322

commit bb3194045e277fe5b0d5f0b22ffffbc6307f7731
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Fri Dec 1 11:03:24 2017 +0000

    RTEMS/Ada: Fix some POSIX types
    
    gcc/ada
            * s-osinte-rtems.ads (pthread_cond_t): Use correct size and
            alignment.
            (pthread_mutex_t): Likewise.
            (pthread_rwlock_t): Likewise.
    
    From-SVN: r255303

commit 0b3c14e15f32e5cf8926482d8f7f5a93019b868e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 1 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r255287

commit 5b92217b2ba322e3857b727ac2ebd33ca3add558
Author: Jim Wilson <jimw@sifive.com>
Date:   Thu Nov 30 18:38:26 2017 +0000

    Riscv doc fixes and improvements.
    
            gcc/
            Backport from mainline
            2017-11-30  Jim Wilson  <jimw@sifive.com>
            * doc/invoke.texi (RISC-V Options): Delete nonexistent -mmemcpy and
            -mno-memcpy options.  For -mplt, -mfdiv, -mdiv, -msave-restore, and
            -mstrict-align, add info on default value.  Delete redundant lines for
            -mabi.  Add missing -mexplicit-relocs docs.
    
            Backport from mainline
            2017-11-01  Palmer Dabbelt  <palmer@dabbelt.com>
            * doc/invoke.texi (RISC-V Options): Use "@minus{}2 GB", not "-2 GB".
            * doc/invoke.texi (RISC-V Options): Explicitly name the medlow
            and medany code models, and describe what they do.
    
            2017-10-27  Palmer Dabbelt  <palmer@dabbelt.com>
            PR target/82717
            * doc/invoke.texi (RISC-V) <-mabi>: Correct and improve.
    
    From-SVN: r255281

commit ba682b82e26ff8ccb33251247c5f515c19bb1594
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 30 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255263

commit daccaeb998010d3a9ef78caca643fef5601aa210
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Nov 29 23:13:34 2017 +0100

    Be conservative with arithmetic jmp-function types
    
    2017-11-29  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/82808
            * tree.c (expr_type_first_operand_type_p): New function.
            * tree.h (expr_type_first_operand_type_p): Declare it.
            * ipa-cp.c (ipa_get_jf_pass_through_result): Use it.
    
    testsuite/
            * gcc.dg/ipa/pr82808.c: New test.
    
    From-SVN: r255256

commit 330f2c9882e1c485d61bdf8b3da6f1802065311c
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 17:07:29 2017 +0000

    [SPARC] Recognize the load when accessing the GOT
    
    Needed for the UT699 errata workaround to function correctly when
    compiling with -fPIC.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sparc.c (sparc_do_work_around_errata): Treat the
            movsi_pic_gotdata_op instruction as a load for the UT699 errata
            workaround.
    
    From-SVN: r255245

commit 803f3f3e8abb04436584acfb76c585f194367ec8
Author: Martin Aberg <maberg@gaisler.com>
Date:   Wed Nov 29 17:03:32 2017 +0000

    [SPARC] Prevent -mfix-ut699 from generating b2bst errata sequences
    
    The sequence
      st
      fdivd / fsqrtd
      std
    was generated in some cases with -mfix-ut699 when there was
    a st before the div/sqrt. This sequence could trigger the b2bst errata.
    
    Now the following safe sequence is generated instead:
      st
      nop
      fdivd / fsqrtd
      std
    
    Backport from mainline
    2017-11-29  Martin Aberg  <maberg@gaisler.com>
    
    gcc/
            * config/sparc/sparc.md (divdf3_fix): Add NOP and adjust length
            to prevent b2bst errata sequence.
            (sqrtdf2_fix): Likewise.
    
    From-SVN: r255244

commit dc363a55589cbad6c020af504314e880287eb082
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 17:01:45 2017 +0000

    [SPARC] Errata workaround for GRLIB-TN-0013
    
    This patch provides a workaround for the errata described in GRLIB-TN-0013.
    
    If the workaround is enabled it will:
    
    * Prevent div and sqrt instructions in the delay slot.
    
    * Insert NOPs to prevent the sequence (div/sqrt) -> (two or three floating
      point operations or loads) -> (div/sqrt).
    
    * Not insert NOPs if any of the floating point operations have a dependency
      on the destination register of the first (div/sqrt).
    
    * Not insert NOPs if one of the floating point operations is a (div/sqrt).
    
    * Insert NOPs to prevent (div/sqrt) followed by a branch.
    
    It is applicable to GR712RC, UT700, and UT699.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sparc.c (fpop_reg_depend_p): New function.
            (div_sqrt_insn_p): New function.
            (sparc_do_work_around_errata): Insert NOP instructions to
            prevent sequences that could trigger the TN-0013 errata for
            certain LEON3 processors.
            (pass_work_around_errata::gate): Also test sparc_fix_lost_divsqrt.
            (sparc_option_override): Set sparc_fix_lost_divsqrt appropriately.
            * config/sparc/sparc.md (fix_lost_divsqrt): New attribute.
            (in_branch_delay): Prevent div and sqrt in delay slot if
            fix_lost_divsqrt.
            * config/sparc/sparc.opt (sparc_fix_lost_divsqrt): New variable.
    
    From-SVN: r255243

commit 304d27a0994cf3cc8b02f3a81cd4928c76510202
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 16:58:35 2017 +0000

    [SPARC] Errata workaround for GRLIB-TN-0010
    
    This patch provides a workaround for the errata described in GRLIB-TN-0010.
    
    If the workaround is enabled it will:
    
     * Insert a NOP between load instruction and atomic
       instruction (swap, ldstub, casa).
    
     * Insert a NOP at branch target if load in delay slot
       and atomic instruction at branch target.
    
    It is applicable to UT700.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sparc.c (atomic_insn_p): New function.
            (sparc_do_work_around_errata): Insert NOP instructions to
            prevent sequences that could trigger the TN-0010 errata for
            UT700.
            * config/sparc/sync.md (atomic_compare_and_swap_leon3_1): Make
            instruction referable in atomic_insns_p.
    
    From-SVN: r255242

commit e3f124c72dd81c9b01de9c063ebded0854cd3c2c
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 16:56:25 2017 +0000

    [SPARC] Errata workaround for GRLIB-TN-0011
    
    This patch provides a workaround for the errata described in GRLIB-TN-0011.
    
    If the workaround is enabled it will:
    
     * Insert .align 16 before atomic instructions (swap, ldstub, casa).
    
    It is applicable to GR712RC.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sync.md (swapsi): 16-byte align if sparc_fix_gr712rc.
            (atomic_compare_and_swap_leon3_1): Likewise.
            (ldstub): Likewise.
    
    From-SVN: r255241

commit a6c33857dfae052f6f6f78fc9869b8a3801ef88b
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 16:53:47 2017 +0000

    [SPARC] Errata workaround for GRLIB-TN-0012
    
    This patch provides a workaround for the errata described in GRLIB-TN-0012.
    
    If the workaround is enabled it will:
    
     * Prevent any floating-point operation from being placed in the
       delay slot of an annulled integer branch.
    
     * Place a NOP at the branch target of an integer branch if it is
       a floating-point operation or a floating-point branch.
    
    It is applicable to GR712RC.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sparc.c (fpop_insn_p): New function.
            (sparc_do_work_around_errata): Insert NOP instructions to
            prevent sequences that could trigger the TN-0012 errata for
            GR712RC.
            (pass_work_around_errata::gate): Also test sparc_fix_gr712rc.
            * config/sparc/sparc.md (fix_gr712rc): New attribute.
            (in_branch_annul_delay): Prevent floating-point instructions
            in delay slot of annulled integer branch.
    
    From-SVN: r255240

commit 8b5205f89d4ce177967907aad4f976d2e24d2b27
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 29 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r255223

commit c45915392bc2fe76d792553c697ca7adeda0f728
Author: Jim Wilson <jimw@sifive.com>
Date:   Wed Nov 29 00:00:01 2017 +0000

    Add riscv -mstrict-align option.
    
            gcc/
            Backport from mainline
            2017-11-04  Andrew Waterman  <andrew@sifive.com>
    
            * config/riscv/riscv.c (riscv_option_override): Conditionally set
            TARGET_STRICT_ALIGN based upon -mtune argument.
    
            Backport from mainline
            2017-05-04  Andrew Waterman  <andrew@sifive.com>
    
            * config/riscv/riscv.opt (mstrict-align): New option.
            * config/riscv/riscv.h (STRICT_ALIGNMENT): Use it.  Update comment.
            (SLOW_UNALIGNED_ACCESS): Define.
            (riscv_slow_unaligned_access): Declare.
            * config/riscv/riscv.c (riscv_tune_info): Add slow_unaligned_access
            field.
            (riscv_slow_unaligned_access): New variable.
            (rocket_tune_info): Set slow_unaligned_access to true.
            (optimize_size_tune_info): Set slow_unaligned_access to false.
            (riscv_cpu_info_table): Add entry for optimize_size_tune_info.
            (riscv_valid_lo_sum_p): Use TARGET_STRICT_ALIGN.
            (riscv_option_override): Set riscv_slow_unaligned_access.
            * doc/invoke.texi: Add -mstrict-align to RISC-V.
    
    From-SVN: r255221

commit 2be42c93b96fc2e4f61e02bd4e93874fd96e0bda
Author: Jim Wilson <jimw@sifive.com>
Date:   Tue Nov 28 19:48:30 2017 +0000

    Add riscv musl support.
    
            gcc/
            Backport from mainline
            2017-11-07  Michael Clark  <michaeljclark@mac.com>
    
            * config/riscv/linux.h (MUSL_ABI_SUFFIX): New define.
            (MUSL_DYNAMIC_LINKER): Likewise.
    
    From-SVN: r255216

commit a82d7ade2db20688de64333826c0b2c8cfe86d85
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Nov 28 15:38:55 2017 +0000

    re PR fortran/83021 (gfortran segfault in polymorphic assignment)
    
    2017-11-28  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83021
            * resolve.c (resolve_component): Only escape for use assciated
            vtypes if the current namespace has no proc_name and is most
            particularly block data.
    
    From-SVN: r255205

commit 326c95acd997985f3e83441d452f433d752e8dd9
Author: Jim Wilson <jimw@sifive.com>
Date:   Tue Nov 28 00:55:03 2017 +0000

    Fix riscv linux kernel boot failure.
    
            gcc/
            Backport from mainline
            2017-10-25  Palmer Dabbelt  <palmer@dabbelt.com>
    
            * config/riscv/riscv.md (ZERO_EXTEND_LOAD): Define.
            * config/riscv/pic.md (local_pic_load): Rename to local_pic_load_s,
            mark as a sign-extending load.
            (local_pic_load_u): Define.
    
    From-SVN: r255187

commit 3e82e78509a74f586986db9797ea6300fea2660d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 28 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r255184

commit 247da19e843615724ce47fc2ac4eca15dec9e272
Author: Jim Wilson <jimw@sifive.com>
Date:   Mon Nov 27 22:33:29 2017 +0000

    Fix RISCV ICE on linux kernel build.
    
            gcc/
            Backport from mainline
            2017-11-03  Kito Cheng  <kito.cheng@gmail.com>
    
            * config/riscv/riscv.c (riscv_legitimize_move): Handle
            non-legitimate address.
    
    From-SVN: r255181

commit 37c3433979133ed443a01bc5e4d188b9e55830a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 27 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255157

commit 3f857988bba076ab93fe4db58e27633938f5e94b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 26 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r255152

commit a62b5df31cc3c8b903c5562903585b660cd9a1a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 25 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r255146

commit 6b856e6c31e40f8c84f4e86f7b73268d2b454703
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Nov 24 18:00:57 2017 +0100

    combine: Don't split insns if half is unused (PR82621)
    
    If we have a PARALLEL of two SETs, and one half is unused, we currently
    happily split that into two instructions (albeit the unused one is
    useless).  Worse, as PR82621 shows, combine will happily merge this
    insn into I3 even if some intervening insn sets the same register
    again, which is wrong.
    
    This fixes it by not splitting PARALLELs with REG_UNUSED notes.  It
    all is handled fine by combine in that case; just the "single set
    that is unused" case isn't handled properly.
    
    This also results in better code: combine will now actually throw
    away the unused SET.  (It still won't do that in an I3).
    
    
            PR rtl-optimization/82621
            * combine.c (try_combine): Do not split PARALLELs of two SETs if the
            dest of one of those SETs is unused.
    
    From-SVN: r255142

commit 0dc933f4f5659ab7e3283c3141288d86a25a0fcc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 24 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r255129

commit a687bfa9f7695091224d4a2556650183d6bedde1
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Nov 23 21:02:48 2017 +0000

    backport: re PR fortran/79072 (ICE with class(*) pointer function result and character value)
    
    2017-11-23  Paul Thomas  <pault@gcc.gnu.org>
    
    
            Backported from trunk
            PR fortran/79072
            * trans-expr.c (trans_class_vptr_len_assignment): Set from_len
            if the temporary is unlimited polymorphic.
            * trans-stmt.c (trans_associate_var): Use the fake result decl
            to obtain the 'len' field from an explicit function result when
            in that function scope.
    
    2017-11-23  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/79072
            * gfortran.dg/class_result_5.f90: New test.
            * gfortran.dg/class_result_6.f90: New test.
    
    From-SVN: r255120

commit 5ed479711fc86e0d45a64212dbd29ebb654857c3
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Thu Nov 23 17:19:18 2017 +0000

    backport: re PR libfortran/78549 (Very slow formatted internal file output)
    
    2017-11-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/78549
            * io/io.h (newunit_free): Add declaration. Clean some whitespace.
            * io/transfer.c (st_read_done, st_write_done): Call newunit_free.
            * io/unit.c (newunit_free): Change type from static void to void.
    
    From-SVN: r255108

commit 83d51b3e9cd113598f11540c554274b98c59b04b
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Nov 23 14:08:12 2017 +0000

    backport: re PR target/83111 ([sh] stack smashing detected in gen_udivsi3)
    
    gcc/
            Backport from mainline
            2017-11-23  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/83111
            * config/sh/sh.md (udivsi3, divsi3, sibcall_value_pcrel,
            sibcall_value_pcrel_fdpic): Use local variable instead of
            operands[3].
            (calli_tbr_rel): Add missing operand 2.
            (call_valuei_tbr_rel): Add missing operand 3.
    
    From-SVN: r255097

commit 254cf0505959c594f3e34f4e005aeba634f08686
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 23 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255088

commit d938e377b1003470e77280a16e413344c9ea17f6
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 22 09:04:47 2017 +0000

    revert: backport: re PR rtl-optimization/82044 (runtime signed integer overflow in check_mem_read_rtx() and all_positions_needed_p() in dse.c)
    
    2017-11-22  Richard Biener  <rguenther@suse.de>
    
            Revert
            2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-11-21  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/82044
            PR tree-optimization/82042
            * dse.c (check_mem_read_rtx): Check for overflow.
    
    From-SVN: r255046

commit 496898596ef5caa8158dbaefb38d0b7a566eb957
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 22 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r255040

commit ddf89dd532061d478550c78d94a1b0e771866095
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Nov 21 19:09:01 2017 +0000

    backport: re PR fortran/82586 ([PDT] ICE: write_symbol(): bad module symbol)
    
    2017-11-21  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk fix for PR82586
            PR fortran/78686
            * resolve.c (resolve_generic_f): Check usage of derived type by
            calling gfc_use_derived.
    
    2017-11-21  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk fix for PR82586
            PR fortran/78686
            * gfortran.dg/pr78686.f90: New test.
    
    From-SVN: r255029

commit cef469e76dd935445b33071bb1e4a2d6d3f8c421
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 20:03:11 2017 +0100

    Backport r254137
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-27  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/82457
            * doc/invoke.texi: Document that one needs a non-strict ISO mode
            for fork-like functions to be properly instrumented.
    
    From-SVN: r255028

commit b606d65aa69a5bbdd12dc71b723af739f555bd8b
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Nov 21 19:01:38 2017 +0000

    ppc-asm.h (f50, vs50): Fix values.
    
            * config/rs6000/ppc-asm.h (f50, vs50): Fix values.
    
    From-SVN: r255026

commit ae95c86478562ea8504e761360737b59588c183a
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Nov 21 18:14:34 2017 +0000

    [ARM] Fix cmse_nonsecure_entry return insn size
    
    A number of instructions are output in assembler form by
    output_return_instruction () when compiling a function with the
    cmse_nonsecure_entry attribute for Armv8-M Mainline with hardfloat float
    ABI. However, the corresponding thumb2_cmse_entry_return insn pattern
    does not account for all these instructions in its computing of the
    length of the instruction.
    
    This may lead GCC to use the wrong branching instruction due to
    incorrect computation of the offset between the branch instruction's
    address and the target address.
    
    This commit fixes the mismatch between what output_return_instruction ()
    does and what the pattern think it does and adds a note warning about
    mismatch in the affected functions' heading comments to ensure code does
    not get out of sync again.
    
    Note: no test is provided because the C testcase is fragile (only works
    on GCC 6) and the extracted RTL test fails to compile due to bugs in the
    RTL frontend (PR82815 and PR82817)
    
    2017-11-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2017-11-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * config/arm/arm.c (output_return_instruction): Add comments to
        indicate requirement for cmse_nonsecure_entry return to account
        for the size of clearing instruction output here.
        (thumb_exit): Likewise.
        * config/arm/thumb2.md (thumb2_cmse_entry_return): Fix length for
        return in hardfloat mode.
    
    From-SVN: r255020

commit cee2740307549ff88035b1185e6692cb6885f67a
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:02:35 2017 +0100

    Backport r255001
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-11-21  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/82044
            PR tree-optimization/82042
            * dse.c (check_mem_read_rtx): Check for overflow.
    
    From-SVN: r255013

commit fdd38d7ec33aeb2f444b34c18477290d7c93b424
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:02:04 2017 +0100

    Backport r254524
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-11-08  Martin Liska  <mliska@suse.cz>
    
            * gimplify.c (expand_FALLTHROUGH_r): Simplify usage
            of gimple_call_internal_p.
    
    From-SVN: r255012

commit 20dda3e716216c28c12caf2ec39ea5fa1e44534e
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:01:43 2017 +0100

    Backport r254519
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-11-08  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/82792
            * gimplify.c (expand_FALLTHROUGH_r): Skip IFN_ASAN_MARK.
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-11-08  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/82792
            * g++.dg/asan/pr82792.C: New test.
    
    From-SVN: r255011

commit 11f76249684711ea3256bd03b1e0e7021ed45946
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:01:16 2017 +0100

    Backport r254257
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-31  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/82633
            * doc/gcov.texi: Document -fkeep-{static,inline}-functions and
            their interaction with GCOV infrastructure.
    
    From-SVN: r255010

commit 39ac3ee8a477658fd2a62c76b81f3898bcb6b7a7
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:00:55 2017 +0100

    Backport r253886
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-19  Martin Liska  <mliska@suse.cz>
    
            PR driver/81829
            * file-find.c (remove_prefix): Remove.
            * file-find.h (remove_prefix): Likewise.
            * gcc-ar.c: Remove smartness of lookup.
    
    From-SVN: r255009

commit 3e08f9fedab998c3eb95ac9bae63c5977cff9ef8
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 17:00:26 2017 +0100

    Backport r253845
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-18  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/82545
            * asan.c (asan_expand_poison_ifn): Do not put gimple stmt
            on an abnormal edge.
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-18  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/82545
            * gcc.dg/asan/pr82545.c: New test.
    
    From-SVN: r255008

commit 543d5c328910309d3b89b9acff5695ff6664bdf9
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Nov 21 16:59:56 2017 +0100

    Backport r253639
    
    2017-11-21  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-11  Martin Liska  <mliska@suse.cz>
    
            * print-rtl.c (print_insn): Move declaration of idbuf
            to same scope as name.
    
    From-SVN: r255007

commit 78ec951e50d05463a6fbfd2da5cb9114a8893e2e
Author: Claudiu Zissulescu <claziss@synopsys.com>
Date:   Tue Nov 21 12:57:16 2017 +0100

    [ARC] Backport r254866.
    
    From-SVN: r255000

commit 4a7a8e11a3341657d3a8a1a630f1faeba802a52d
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Nov 21 09:31:12 2017 +0000

    Adapt Solaris 12 references
    
            libgo:
            Backport from mainline
    
        With the change in the Solaris release model (no more major releases
        like Solaris 12 but only minor ones like 11.4), the Solaris 12
        references in GCC need to be adapted.
    
        Patch by Rainer Orth.
    
        Reviewed-on: https://go-review.googlesource.com/77490
    
            libgcc:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.host (*-*-solaris2*): Adapt comment for Solaris 12
            renaming.
            * config/sol2/crtpg.c (__start_crt_compiler): Likewise.
            * configure.ac (libgcc_cv_solaris_crts): Likewise.
            * configure: Regenerate.
    
            gcc:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit since
            Solaris 11.  Update comment.
            * configure.ac (gcc_cv_ld_pid): Adapt comment for Solaris 12
            renaming.
            * config/sol2.h (STARTFILE_SPEC): Likewise.
            * configure: Regenerate.
    
            gcc/testsuite:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * lib/target-supports.exp (check_effective_target_pie): Adapt
            comment for Solaris 12 renaming.
    
            * gcc.dg/torture/pr60092.c: Remove *-*-solaris2.11* dg-xfail-run-if.
    
    From-SVN: r254994

commit 2d2a66a53e7043685decaf3a1f854c8610984c96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 21 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r254975

commit 5c956beb8a672d094d8dba303545f38c2065c7ba
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Nov 20 21:10:28 2017 +0100

    rs6000: Don't touch below the stack pointer (PR77687)
    
    With the 32-bit SVR4 ABI we don't have a red zone, so we have to restore
    the callee-saved registers before we restore the stack pointer.
    
    The previous fix for this PR failed in two ways, for huge frames: first,
    we use a negative offset from r11 in that case, so the (mem:BLK 11) access
    does no good; second, sched does not handle accesses to mem:BLK correctly
    in this case (does not make dependencies).
    
    This patch fixes it by doing a store to (mem:BLK (scratch)) instead.
    This means no unrelated (not to stack) loads/stores can be moved over the
    stack restore either, but so be it.
    
    
            PR target/77687
            * config/rs6000/rs6000.md (stack_restore_tie): Store to a scratch
            address instead of to r1 and r11.
    
    gcc/testsuite/
            PR target/77687
            * gcc.target/powerpc/pr77687.c: New testcase.
    
    From-SVN: r254968

commit 8ffd559cd5df8ecffa16d322090c71893bdb405b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 20 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r254942

commit 62efd178ddaa906589dd28e226cb84a85e2058cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 19 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r254922

commit dc4d4d510ac6de40de7812c6fb894ae0da26985e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 18 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r254911

commit 2c8462947a9d1d5c8567369b2e73cf991a878df0
Author: Vineet Gupta <vgupta@synopsys.com>
Date:   Fri Nov 17 11:15:26 2017 +0000

    [ARC] Backport ARC patch r250097.
    
    From-SVN: r254864

commit ebb206c69e370357abc029b1056bd3b5950e8bd7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 17 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r254851

commit fe3c24c3ed6707d6448a35accb595f362eb29837
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Nov 16 17:04:21 2017 +0100

    i386.c (x86_print_call_or_nop): Emit 5 byte nop explicitly as a stream of bytes.
    
            * config/i386/i386.c (x86_print_call_or_nop): Emit 5 byte nop
            explicitly as a stream of bytes.
    
    From-SVN: r254828

commit a1d5ff0a2e0382699133a96c5698f2dd37d72d60
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 16 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r254792

commit e1f38328f4ce3618d30a8466238c05ddf120c394
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 15 12:50:39 2017 +0000

    re PR tree-optimization/82985 (ICC: in vn_nary_build_or_lookup_1, at tree-ssa-sccvn.c:1722)
    
    2017-11-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82985
            Backport from mainline
            2017-08-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81790
            * tree-ssa-sccvn.c (vn_lookup_simplify_result): Handle both
            CONSTRUCTORs from simplifying and VN.
    
            * gcc.dg/torture/pr81790.c: New testcase.
            * g++.dg/torture/pr82985.C: Likewise.
    
    From-SVN: r254766

commit 395decb0d1d3ec8ed62260a6e301f6cdbdb48602
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Wed Nov 15 11:54:11 2017 +0000

    [PATCH] [PR82155] Fix crash in dwarf2out_abstract_function
    
    Backport from mainline (r253147):
    
    This patch is an attempt to fix the crash reported in PR82155.
    
    When generating a C++ class method for a class that is itself nested in
    a class method, dwarf2out_early_global_decl currently leaves the
    existing context DIE as it is if it already exists.  However, it is
    possible that this call happens at a point where this context DIE is
    just a declaration that is itself not located in its own context.
    
    From there, if dwarf2out_early_global_decl is not called on any of the
    FUNCTION_DECL in the context chain, DIEs will be left badly scoped and
    some (such as the nested method) will be removed by the type pruning
    machinery.  As a consequence, dwarf2out_abstract_function will will
    crash when called on the corresponding DECL because it asserts that the
    DECL has a DIE.
    
    This patch fixes this crash making dwarf2out_early_global_decl process
    context DIEs the same way we process abstract origins for FUNCTION_DECL:
    if the corresponding DIE exists but is only a declaration, call
    dwarf2out_decl anyway on it so that it is turned into a more complete
    DIE and so that it is relocated in the proper context.
    
    Bootstrapped and regtested on x86_64-linux.
    
    gcc/
    
            PR debug/82155
            * dwarf2out.c (dwarf2out_early_global_decl): Call dwarf2out_decl
            on the FUNCTION_DECL function context if it has a DIE that is a
            declaration.
    
    gcc/testsuite/
    
            * g++.dg/pr82155.C: New testcase.
    
    From-SVN: r254761

commit 05eb144e64f3cb19d6a60a6fd0027bd6c2da52b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 15 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r254745

commit e26d4fbe7f545351facd9fd4dddec889ffba1a91
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r254716

commit 71360fd464902c007562927693e55e0a3777b1ee
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 13 20:46:08 2017 +0000

    backport: re PR fortran/82934 (Segfault on assumed character length in allocate)
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/82934
            * trans-stmt.c (gfc_trans_allocate): Remove the gcc_assert on
            null string length for assumed length typespec and set
            expr3_esize to NULL_TREE;
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/82934
            * gfortran.dg/allocate_assumed_charlen_1.f90: New test.
    
    From-SVN: r254709

commit 7951af54092e04332eb40159b048b31480ab323e
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 13 20:43:26 2017 +0000

    backport: re PR fortran/78619 (ICE in copy_reference_ops_from_ref, at tree-ssa-sccvn.c:889)
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78619
            * check.c (same_type_check): Introduce a new argument 'assoc'
            with default value false. If this is true, use the symbol type
            spec of BT_PROCEDURE expressions.
            (gfc_check_associated): Set 'assoc' true in the call to
            'same_type_check'.
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78619
            * gfortran.dg/pr78619.f90: New test.
    
    From-SVN: r254708

commit 62adf57eea6486bf8caca9458b83cf9a2d9224d1
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Mon Nov 13 22:01:20 2017 +0200

    Introduce logical_type_node and use it
    
    Backport from trunk.
    
    Earlier GFortran used to redefine boolean_type_node, which in the rest
    of the compiler means the C/C++ _Bool/bool type, to the Fortran
    default logical type.  When this redefinition was removed, a few
    issues surfaced. Namely,
    
    1) PR 82869, where we created a boolean tmp variable, and passed it to
    the runtime library as a Fortran logical variable of a different size.
    
    2) Fortran specifies that logical operations should be done with the
    default logical kind, not in any other kind.
    
    3) Using 8-bit variables have some issues, such as
       - on x86, partial register stalls and length prefix changes.
          - s390 has a compare with immediate and jump instruction which
               works with 32-bit but not 8-bit quantities.
    
    This patch addresses these issues by introducing a type
    logical_type_node which is a Fortran LOGICAL variable of default
    kind. It is then used in places were the Fortran standard mandates, as
    well as for compiler generated temporary variables.
    
    For x86-64, using the Polyhedron benchmark suite, no performance or
    code size difference worth mentioning was observed.
    
    Regtested on x86_64-pc-linux-gnu.
    
    gcc/fortran/ChangeLog:
    
    2017-11-13  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR 82869
            * convert.c (truthvalue_conversion): Use logical_type_node.
            * trans-array.c (gfc_trans_allocate_array_storage): Likewise.
            (gfc_trans_create_temp_array): Likewise.
            (gfc_trans_array_ctor_element): Likewise.
            (gfc_trans_array_constructor_value): Likewise.
            (trans_array_constructor): Likewise.
            (trans_array_bound_check): Likewise.
            (gfc_conv_array_ref): Likewise.
            (gfc_trans_scalarized_loop_end): Likewise.
            (gfc_conv_array_extent_dim): Likewise.
            (gfc_array_init_size): Likewise.
            (gfc_array_allocate): Likewise.
            (gfc_trans_array_bounds): Likewise.
            (gfc_trans_dummy_array_bias): Likewise.
            (gfc_conv_array_parameter): Likewise.
            (duplicate_allocatable): Likewise.
            (duplicate_allocatable_coarray): Likewise.
            (structure_alloc_comps): Likewise
            (get_std_lbound): Likewise
            (gfc_alloc_allocatable_for_assignment): Likewise
            * trans-decl.c (add_argument_checking): Likewise
            (gfc_generate_function_code): Likewise
            * trans-expr.c (gfc_copy_class_to_class): Likewise
            (gfc_trans_class_array_init_assign): Likewise
            (gfc_trans_class_init_assign): Likewise
            (gfc_conv_expr_present): Likewise
            (gfc_conv_substring): Likewise
            (gfc_conv_cst_int_power): Likewise
            (gfc_conv_expr_op): Likewise
            (gfc_conv_procedure_call): Likewise
            (fill_with_spaces): Likewise
            (gfc_trans_string_copy): Likewise
            (gfc_trans_alloc_subarray_assign): Likewise
            (gfc_trans_pointer_assignment): Likewise
            (gfc_trans_scalar_assign): Likewise
            (fcncall_realloc_result): Likewise
            (alloc_scalar_allocatable_for_assignment): Likewise
            (trans_class_assignment): Likewise
            (gfc_trans_assignment_1): Likewise
            * trans-intrinsic.c (build_fixbound_expr): Likewise
            (gfc_conv_intrinsic_aint): Likewise
            (gfc_trans_same_strlen_check): Likewise
            (conv_caf_send): Likewise
            (trans_this_image): Likewise
            (conv_intrinsic_image_status): Likewise
            (trans_image_index): Likewise
            (gfc_conv_intrinsic_bound): Likewise
            (conv_intrinsic_cobound): Likewise
            (gfc_conv_intrinsic_mod): Likewise
            (gfc_conv_intrinsic_dshift): Likewise
            (gfc_conv_intrinsic_dim): Likewise
            (gfc_conv_intrinsic_sign): Likewise
            (gfc_conv_intrinsic_ctime): Likewise
            (gfc_conv_intrinsic_fdate): Likewise
            (gfc_conv_intrinsic_ttynam): Likewise
            (gfc_conv_intrinsic_minmax): Likewise
            (gfc_conv_intrinsic_minmax_char): Likewise
            (gfc_conv_intrinsic_anyall): Likewise
            (gfc_conv_intrinsic_arith): Likewise
            (gfc_conv_intrinsic_minmaxloc): Likewise
            (gfc_conv_intrinsic_minmaxval): Likewise
            (gfc_conv_intrinsic_btest): Likewise
            (gfc_conv_intrinsic_bitcomp): Likewise
            (gfc_conv_intrinsic_shift): Likewise
            (gfc_conv_intrinsic_ishft): Likewise
            (gfc_conv_intrinsic_ishftc): Likewise
            (gfc_conv_intrinsic_leadz): Likewise
            (gfc_conv_intrinsic_trailz): Likewise
            (gfc_conv_intrinsic_mask): Likewise
            (gfc_conv_intrinsic_spacing): Likewise
            (gfc_conv_intrinsic_rrspacing): Likewise
            (gfc_conv_intrinsic_size): Likewise
            (gfc_conv_intrinsic_sizeof): Likewise
            (gfc_conv_intrinsic_transfer): Likewise
            (gfc_conv_allocated): Likewise
            (gfc_conv_associated): Likewise
            (gfc_conv_same_type_as): Likewise
            (gfc_conv_intrinsic_trim): Likewise
            (gfc_conv_intrinsic_repeat): Likewise
            (conv_isocbinding_function): Likewise
            (conv_intrinsic_ieee_is_normal): Likewise
            (conv_intrinsic_ieee_is_negative): Likewise
            (conv_intrinsic_ieee_copy_sign): Likewise
            (conv_intrinsic_move_alloc): Likewise
            * trans-io.c (set_parameter_value_chk): Likewise
            (set_parameter_value_inquire): Likewise
            (set_string): Likewise
            * trans-openmp.c (gfc_walk_alloc_comps): Likewise
            (gfc_omp_clause_default_ctor): Likewise
            (gfc_omp_clause_copy_ctor): Likewise
            (gfc_omp_clause_assign_op): Likewise
            (gfc_omp_clause_dtor): Likewise
            (gfc_omp_finish_clause): Likewise
            (gfc_trans_omp_clauses): Likewise
            (gfc_trans_omp_do): Likewise
            * trans-stmt.c (gfc_trans_goto): Likewise
            (gfc_trans_sync): Likewise
            (gfc_trans_arithmetic_if): Likewise
            (gfc_trans_simple_do): Likewise
            (gfc_trans_do): Likewise
            (gfc_trans_forall_loop): Likewise
            (gfc_trans_where_2): Likewise
            (gfc_trans_allocate): Likewise
            (gfc_trans_deallocate): Likewise
            * trans-types.c (gfc_init_types): Initialize logical_type_node and
            their true/false trees.
            (gfc_get_array_descr_info): Use logical_type_node.
            * trans-types.h (logical_type_node): New tree.
            (logical_true_node): Likewise.
            (logical_false_node): Likewise.
            * trans.c (gfc_trans_runtime_check): Use logical_type_node.
            (gfc_call_malloc): Likewise
            (gfc_allocate_using_malloc): Likewise
            (gfc_allocate_allocatable): Likewise
            (gfc_add_comp_finalizer_call): Likewise
            (gfc_add_finalizer_call): Likewise
            (gfc_deallocate_with_status): Likewise
            (gfc_deallocate_scalar_with_status): Likewise
            (gfc_call_realloc): Likewise
    
    
    gcc/testsuite/ChangeLog:
    
    2017-11-13  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR 82869
            * gfortran.dg/logical_temp_io.f90: New test.
            * gfortran.dg/logical_temp_io_kind8.f90: New test.
    
    From-SVN: r254706

commit f512f6f96bc62b237fbafa61b98f455d77854d1e
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Nov 13 12:38:16 2017 +0000

    Use -xbrace_comment=no with recent Solaris/x86 as
    
            Backport from mainline
            2017-10-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * configure.ac (gcc_cv_as_ix86_xbrace_comment): Check if assembler
            supports -xbrace_comment option.
            * configure: Regenerate.
            * config.in: Regenerate.
            * config/i386/sol2.h (ASM_XBRACE_COMMENT_SPEC): Define.
            (ASM_CPU_SPEC): Use it.
    
    From-SVN: r254681

commit 6d4e81840e3f00ff97ead46040f79a152134bf9e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 13 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r254668

commit 8eae0ada2648f365d9272d086a3353c685f92d0b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 12 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r254662

commit d665945628946c8eb3ab0ed8ae3887770fe92d15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 11 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254646

commit 98598f05375f7c95d6ce5358257633fdf5ef991e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Nov 10 08:23:20 2017 +0000

    utils.c (convert): Add comment and do not fall through to the next case.
    
            * gcc-interface/utils.c (convert) <RECORD_TYPE>: Add comment and do
            not fall through to the next case.
            <ARRAY_TYPE>: Deal specially with a dereference from another array
            type with the same element type.
    
    From-SVN: r254619

commit 72369bbdd66d1f39e07ff38095f5170314bf95bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 10 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r254616

commit 2ae87906ec0e42df9d65a67fc66aa5427e261c04
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Nov 9 11:21:06 2017 +0100

    Backport PRs 64682, 69567, 69737, 82683
    
            Backport from mainline
            2017-11-01  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/64682
            PR rtl-optimization/69567
            PR rtl-optimization/69737
            PR rtl-optimization/82683
            * combine.c (distribute_notes) <REG_DEAD>: If the new I2 sets the same
            register mentioned in the note, drop the note, unless it came from I3,
            in which case it should go to I3 again.
    
    From-SVN: r254564

commit d04c03ee0e6aa446a1022c9803e848a8ffd48c04
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 9 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r254558

commit fd1675d08222532d447fd5d12909e0c7c8a58010
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 8 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r254515

commit 2364fa7f799c8b580b17249ea958f53efd24d7a6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Nov 7 07:44:58 2017 +0000

    re PR rtl-optimization/81803 (miscompilation at -O1 on mips64el)
    
            PR rtl-optimization/81803
            * lra-constraints.c (curr_insn_transform): Also reload the whole
            register for a strict subreg no wider than a word if this is for
            a WORD_REGISTER_OPERATIONS target.
    
    From-SVN: r254488

commit cf0cc17f255693b176c45ff2758a15a1aac2c5b5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 7 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254482

commit d006aa2b09705fbc7bcfaf6adb274fe0edf8a6cf
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 6 10:40:11 2017 +0000

    backport: re PR fortran/78641 ([OOP] ICE on polymorphic allocatable function in array constructor)
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/78641
            * resolve.c (resolve_ordinary_assign): Do not add the _data
            component for class valued array constructors being assigned
            to derived type arrays.
            * trans-array.c (gfc_trans_array_ctor_element): Take the _data
            of class valued elements for assignment to derived type arrays.
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/78641
            * gfortran.dg/class_66.f90: New test.
    
    From-SVN: r254444

commit cc44302bc66db20e4ae5925803d8f2b8fbb53031
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 6 10:14:29 2017 +0000

    [multiple changes]
    
     2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/69739
            * trans-expr.c (gfc_map_intrinsic_function): Return false for
            bounds without the DIM argument instead of ICEing.
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/69739
            * gfortran.dg/pr69739.f90: New test.
    
    From-SVN: r254442

commit cdfabae2abb10d27a670c69d90d823d9d7dda8d6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 6 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r254434

commit 4561f563ecfb516c1f2a816712e944b3dfb9ef70
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Sun Nov 5 20:30:41 2017 +0100

    backport: re PR libgcc/82635 (std::thread's join broken on FreeBSD with all GCCs >= 5)
    
    2017-11-05  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-11-04  Andreas Tobler  <andreast@gcc.gnu.org>
    
        PR libgcc/82635
        * config/i386/freebsd-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Use a
        sysctl to determine whether we're in a trampoline.
        Keep the pattern matching method for systems without
        KERN_PROC_SIGTRAMP sysctl.
    
    From-SVN: r254431

commit b5172328ddeb8c64cefaa7d12ab76b9460133fa9
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Nov 5 16:56:14 2017 +0000

    re PR fortran/81447 ([7/8] gfortran fails to recognize the exact dynamic type of a polymorphic entity that was allocated in a external procedure)
    
    2017-11-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81447
            PR fortran/82783
            * resolve.c (resolve_component): There is no need to resolve
            the components of a use associated vtype.
            (resolve_fl_derived): Unconditionally generate a vtable for any
            module derived type, as long as the standard is F2003 or later
            and it is not a vtype or a PDT template.
    
    2017-11-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81447
            * gfortran.dg/class_65.f90: New test.
            * gfortran.dg/alloc_comp_basics_1.f90: Increase builtin_free
            count from 18 to 21.
            * gfortran.dg/allocatable_scalar_9.f90: Increase builtin_free
            count from 32 to 54.
            * gfortran.dg/auto_dealloc_1.f90: Increase builtin_free
            count from 4 to 10.
            * gfortran.dg/coarray_lib_realloc_1.f90: Increase builtin_free
            count from 3 to 6. Likewise _gfortran_caf_deregister from 2 to
            3, builtin_malloc from 1 to 4 and builtin_memcpy|= MEM from
            2 to 5.
            * gfortran.dg/finalize_28.f90: Increase builtin_free
            count from 3 to 6.
            * gfortran.dg/move_alloc_15.f90: Increase builtin_free and
            builtin_malloc counts from 11 to 14.
            * gfortran.dg/typebound_proc_27.f03: Increase builtin_free
            count from 7 to 10. Likewise builtin_malloc from 12 to 15.
    
    From-SVN: r254429

commit cd45ac3b3db4092aa039fa21f76ec74094d8cbe1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 5 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r254414

commit 6cdeebc0e66838cb47d04acec6b6d1c35538c0ab
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Nov 4 16:41:09 2017 +0000

    re PR fortran/82796 (Private+equivalence in used module breaks compilation of pure function)
    
    2017-11-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82796
            * resolve.c (resolve_equivalence): An entity in a common block within
            a module cannot appear in an equivalence statement if the entity is
            with a pure procedure.
    
    2017-11-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82796
            * gfortran.dg/equiv_pure.f90: New test.
    
    From-SVN: r254409

commit 56d687fec33faa8167ef69d4c88b882956cd64d1
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sat Nov 4 15:37:03 2017 +0100

    trans-expr.c (gfc_trans_assignment_1): Character kind conversion may create a loop variant temporary, too.
    
    gcc/fortran/ChangeLog:
    
    2017-11-04  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            * trans-expr.c (gfc_trans_assignment_1): Character kind conversion may
            create a loop variant temporary, too.
            * trans-intrinsic.c (conv_caf_send): Treat char arrays as arrays and
            not as scalars.
            * trans.c (get_array_span): Take the character kind into account when
            doing pointer arithmetic.
    
    gcc/testsuite/ChangeLog:
    
    2017-11-04  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            * gfortran.dg/coarray/send_char_array_1.f90: New test.
    
    From-SVN: r254408

commit 74d0b7cff0d0895f9aaaf552578edc1d4c02a9d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 4 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r254401

commit 726e7a70b911f4676de4a97b19e042552ceedd17
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Fri Nov 3 19:01:29 2017 +0000

    re PR fortran/81735 (double free or corruption (fasttop) error (SIGABRT) with character(:) and custom return type with allocatable)
    
    2017-11-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81735
            * trans-decl.c (gfc_trans_deferred_vars): Correct case where
            'tmp' can be used unititialized.
    
    2017-11-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81735
            * gfortran.dg/pr81735.f90: New test.
    
    From-SVN: r254389

commit cebaca360061bad32d99562ca42a6727cac13199
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Fri Nov 3 15:01:10 2017 +0000

    PR60580: Fix frame pointer option magic
    
    To fix PR60580 simplify the logic in aarch64_override_options_after_change_1 ().
    If the frame pointer is enabled, set it to a special value that behaves similar
    to frame pointer omission.  If we don't do this all leaf functions will get a
    frame pointer even if flag_omit_leaf_frame_pointer is set.
    
    If flag_omit_frame_pointer has this special value, we must force the frame
    pointer if not in a leaf function.  We also need to force it in a leaf function
    if flag_omit_frame_pointer is not set or if LR is used.
    
    Doing this allows both -fomit-frame-pointer and -fomit-leaf-frame-pointer to be
    independently set and changed in each function with the expected behaviour.
    
        gcc/
            PR middle-end/60580
            * config/aarch64/aarch64.c (aarch64_frame_pointer_required)
            Check special value of flag_omit_frame_pointer.
            (aarch64_can_eliminate): Likewise.
            (aarch64_override_options_after_change_1): Simplify handling of
            -fomit-frame-pointer and -fomit-leaf-frame-pointer.
    
    From-SVN: r254377

commit a3d5fd7670efd24c1f10af9c646271f65fb61510
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 3 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r254363

commit f92892ddbb6970a6eb16bd5b1e8971fbf16b1484
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Thu Nov 2 15:02:23 2017 +0000

    Move testsuite entry to proper file
    
    From-SVN: r254347

commit 64e562b214174fe4345c13365554e9e0f56bb8e9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 2 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254333

commit 64814d1e43e1f3439a819c47f6deb2c57a345d41
Author: Tamar Christina <tnfchris@gcc.gnu.org>
Date:   Wed Nov 1 11:57:48 2017 +0000

    backport: [multiple changes]
    
    2017-11-01  Tamar Christina  <tamar.christina@arm.com>
    
            Backported from trunk
            * gcc.dg/vect/vect-align-1.c: Fix vect_hw_misalign condition.
            * gcc.dg/vect/vect-align-2.c: Likewise.
            * gcc.dg/vect/vect-multitypes-1.c: Likewise
    
    2017-11-01  Tamar Christina  <tamar.christina@arm.com>
    
            Backported from trunk
            * gcc.dg/vect/vect-multitypes-1.c: Correct target selector.
    
    2017-11-01  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backported from trunk
            * lib/target-supports.exp (check_effective_target_vect_hw_misalign):
            Fix arm check.
    
    From-SVN: r254301

commit 3ce323d91783b80e01f80d89b7399c850ed01079
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Nov 1 11:29:07 2017 +0000

    re PR libfortran/80850 (Sourced allocate() fails to allocate a pointer)
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80850
            * trans_expr.c (gfc_conv_procedure_call): When passing a class
            argument to an unlimited polymorphic dummy, it is wrong to cast
            the passed expression as unlimited, unless it is unlimited. The
            correct way is to assign to each of the fields and set the _len
            field to zero.
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80850
            * gfortran.dg/class_64_f90 : New test.
    
    From-SVN: r254299

commit aafe60b2f42c0e38d45436d9431ea8d8bdb7af9a
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Nov 1 11:35:13 2017 +0100

    [PR 81702] Remove devirtualization assert
    
    2017-11-01  Martin Jambor  <mjambor@suse.cz>
    
            PR c++/81702
            * gimple-fold.c (gimple_get_virt_method_for_vtable): Remove assert.
    
    testsuite/
            * g++.dg/tree-ssa/pr81702.C: New test.
    
    From-SVN: r254295

commit 1281989b2b94cbfcf64bcc18877ce50762cd04aa
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Nov 1 09:33:26 2017 +0000

    re PR libfortran/80850 (Sourced allocate() fails to allocate a pointer)
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80850
            * trans_expr.c (gfc_conv_procedure_call): When passing a class
            argument to an unlimited polymorphic dummy, it is wrong to cast
            the passed expression as unlimited, unless it is unlimited. The
            correct way is to assign to each of the fields and set the _len
            field to zero.
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80850
            * gfortran.dg/class_64_f90 : New test.
    
    From-SVN: r254293

commit 9f746a1f297c6e2c8f3177941b45a8b8a3ffe453
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 1 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r254286

commit 902b2d9d0ae2fc5621375aaa64225be9356375cd
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Oct 31 11:34:55 2017 +0100

    re PR target/82772 (GCC crashes as compiling ags_thread.c source file on alpha architecture)
    
            PR target/82772
            * config/alpha/sync.md (fetchop_constr) <and>: Change to "rINM".
    
    From-SVN: r254254

commit 9e87e3a81e9e189e871cb8f7846094d6b30a794f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 31 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254248

commit 4fb049116196b715a81c8f36899cd9c99c727a93
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon Oct 30 19:17:40 2017 +0000

    re PR c++/82085 (ICE: Template variable reference used in nested template alias)
    
    /cp
    2017-10-30  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/82085
            * pt.c (tsubst_copy_and_build, [INDIRECT_REF]): For a REFERENCE_REF_P,
            unconditionally call convert_from_reference.
    
    /testsuite
    2017-10-30  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/82085
            * g++.dg/cpp1y/var-templ56.C: New.
    
    From-SVN: r254240

commit 5a69d9d5dac521e48daad13906267615190cbc05
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 30 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r254209

commit 56ee567a87e28489020b961d17c978e2267dfed2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 29 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r254202

commit 202536931cb42814a9274cf10c47686237e37822
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sat Oct 28 16:56:06 2017 +0200

    check.c (gfc_check_co_reduce): Clarify error message.
    
    gcc/fortran/ChangeLog:
    
    2017-10-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            * check.c (gfc_check_co_reduce): Clarify error message.
    
    From-SVN: r254198

commit d138f8ec622b6359d65729a988407806545f0e25
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Oct 28 08:53:19 2017 +0000

    re PR fortran/81758 ([OOP] Broken vtab)
    
    2017-10-28  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81758
            * trans-expr.c (trans_class_vptr_len_assignment): 'vptr_expr'
            must only be set if the right hand side expression is of type
            class.
    
    2017-10-28  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81758
            * gfortran.dg/class_63.f90: New test.
    
    From-SVN: r254196

commit 6db8d46fb4e7b642d43cb9198966268803775af8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 28 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r254191

commit 9dccb36f6b580fac14acf8459307054e4645f0d0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 27 22:35:06 2017 +0200

    backport: re PR c++/82159 (ICE: in assign_temp, at function.c:961)
    
            Backported from mainline
            2017-10-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82159
            * expr.c (store_field): Don't optimize away bitsize == 0 store
            from CALL_EXPR with addressable return type.
    
            * g++.dg/opt/pr82159-2.C: New test.
    
    From-SVN: r254181

commit 02a55dcbaf3a8b139632a5932f476eca7a206437
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 27 22:34:22 2017 +0200

    backport: re PR c++/82373 (syntax error in error message)
    
            Backported from mainline
            2017-10-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82373
            * error.c (dump_function_decl): If show_return, call dump_type_suffix
            on the same return type dump_type_prefix has been called on.
    
            * g++.dg/cpp1y/pr82373.C: New test.
    
    From-SVN: r254180

commit d84264fb758c6d3d1cd738eed9062aa6de65ef2f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 27 22:33:35 2017 +0200

    backport: re PR sanitizer/81715 (asan-stack=1 redzone allocation is too inflexible)
    
            Backported from mainline
            2017-09-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81715
            * tree-inline.c (expand_call_inline): Emit clobber stmts for
            VAR_DECLs to which addressable non-volatile parameters are mapped
            and for id->retvar after the return value assignment, though
            for -fsanitize=kernel-address only.  Clear id->retval and id->retbnd
            after inlining.
    
            * g++.dg/asan/pr81715.C: New test.
    
    From-SVN: r254179

commit 7b3d2ce965ad5070541fd82db3d919d4c2e1112e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 27 22:32:47 2017 +0200

    backport: re PR c/82234 (__builtin_shuffle is not in the keyword index)
    
            Backported from mainline
            2017-09-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/82234
            * doc/extend.texi: Add @findex entry for __builtin_shuffle.
    
    From-SVN: r254178

commit eeecd15ffcd8005184ad7052008846afd1c7e762
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 27 22:32:21 2017 +0200

    backport: re PR rtl-optimization/82192 (gcc produces incorrect code with -O2 and bit-field)
    
            Backported from mainline
            2017-09-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/82192
            * combine.c (make_extraction): Don't look through non-paradoxical
            SUBREGs or TRUNCATE if pos + len is or might be bigger than
            inner's mode.
    
            * gcc.c-torture/execute/pr82192.c: New test.
    
    From-SVN: r254177

commit ee3ac71709f209b016ad4f789199bd04898f012e
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Oct 27 18:51:35 2017 +0000

    Rimvydas (RJ)
    
    2017-10-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
                Rimvydas (RJ)
    
            Backport from trunk
            PR libgfortran/81938
            io/format.c (free_format_data): Don't try to free vlist
            descriptors past the end of the fnode array.
    
    From-SVN: r254169

commit dba9a0fe801a1460c2959bdceeffde4612df0035
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Oct 27 14:25:34 2017 +0200

    re PR target/82703 (Wrong addition of std::array components with -O2 -ftree-loop-vectorize -ftree-slp-vectorize (works fine with -O2))
    
            PR target/82703
            * config/i386/i386-protos.h (maybe_get_pool_constant): Removed.
            * config/i386/i386.c (maybe_get_pool_constant): Removed.
            (ix86_split_to_parts): Use avoid_constant_pool_reference instead of
            maybe_get_pool_constant.
            * config/i386/predicates.md (zero_extended_scalar_load_operand):
            Likewise.
    
            * gcc.dg/pr82703.c: New test.
    
    From-SVN: r254146

commit c14baec783a32eb4cc50fc07a2818f63eec2ba32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 27 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r254130

commit 8c8bbddf95a5b4837631aff3584dbd04354e9179
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 26 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r254095

commit 21197715b315339415f7057d0ef75331fa395da5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 25 15:18:43 2017 +0100

    Update C++17 library status documentation
    
            * doc/xml/manual/status_cxx1998.xml: Correct statement about
            what the doc covers.
            * doc/xml/manual/status_cxx2011.xml: Likewise.
            * doc/xml/manual/status_cxx2014.xml: Likewise.
            * doc/xml/manual/status_cxx2017.xml: Update C++17 status, and
            information on feature-test macros.
            * doc/xml/manual/status_cxxtr1.xml: Correct statement about what
            the doc covers.
            * doc/xml/manual/status_cxxtr24733.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r254080

commit ebeefa2420dff52700acf8acf26dd14688ce718d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 25 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r254065

commit 631e4d36eba2fd175f5ea6aa258313a25ca47df8
Author: Qing Zhao <qing.zhao@oracle.com>
Date:   Tue Oct 24 22:46:19 2017 +0000

    re PR middle-end/80295 (ICE in __builtin_update_setjmp_buf expander)
    
    gcc/ChangeLog
    
    2017-10-24  Qing Zhao <qing.zhao@oracle.com>
                Wilco Dijkstra <wilco.dijkstra@arm.com>
    
            * builtins.c (expand_builtin_update_setjmp_buf): Add a
            converstion to Pmode from the buf_addr.
    
    gcc/testsuite/ChangeLog
    
    2017-10-24  Qing Zhao <qing.zhao@oracle.com>
                Wilco Dijkstra <wilco.dijkstra@arm.com>
    
            PR middle-end/80295
            * gcc.target/aarch64/pr80295.c: New test.
    
    Co-Authored-By: Wilco Dijkstra <wdijkstr@arm.com>
    
    From-SVN: r254063

commit 58b9b5919211087d0605fc68ef4c62393ac9f01d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 24 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254029

commit 032c672c5c83646fbcdefdb6e6056e537af03a8c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 23 18:16:38 2017 +0100

    PR libstdc++/81395 fix crash when write follows large read
    
    Backport from mainline
    2017-07-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81395
            * include/bits/fstream.tcc (basic_filebuf::xsgetn): Don't set buffer
            pointers for write mode after reading.
            * testsuite/27_io/basic_filebuf/sgetn/char/81395.cc: New.
    
    From-SVN: r254015

commit 9063c5acf29f1cd2b9488f820a372904b377a1db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 23 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253995

commit be3b9654c90697e1a5495b2a6cdb39986d92a636
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 22 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253981

commit 735b7d675a59fdc731db97452ccf0582a480b2c5
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Oct 21 17:09:43 2017 +0000

    re PR fortran/82312 ([OOP] Pointer assignment to component of class variable results wrong vptr for the variable.)
    
    2017-10-21  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82312
            * resolve.c (gfc_resolve_code): Simplify condition for class
            pointer assignments becoming regular assignments by asserting
            that only class valued targets are permitted.
            * trans-expr.c (trans_class_pointer_fcn): New function using a
            block of code from gfc_trans_pointer_assignment.
            (gfc_trans_pointer_assignment): Call the new function. Tidy up
            a minor whitespace issue.
    
    2017-10-21  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82312
            * gfortran.dg/typebound_proc_36.f90 : New test.
    
    From-SVN: r253976

commit 1b962a501d7912d2d77bc0686632392667dc8cd5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Oct 21 10:45:44 2017 +0000

    * gcc-interface/Makefile.in: Remove bogus settings for VxWorks.
    
    From-SVN: r253974

commit 30be09e3394b94813d728dc19e0921dbc97503b9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Oct 21 02:16:57 2017 +0100

    Fix invalid path::iterator test
    
            * testsuite/experimental/filesystem/path/itr/traversal.cc: Do not
            increment past-the-end iterators.
    
    From-SVN: r253968

commit cf1e97274423ef404f7a20b9905598b6a6f8affc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 21 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253965

commit dc0d363ff936659bc26c81125be1707aa47c274e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 20 22:06:20 2017 +0100

    Update value of __cpp_lib_chrono feature-test macro
    
            * include/std/chrono (__cpp_lib_chrono): Update macro value to
            indicate support for P0505R0.
            * testsuite/20_util/duration/arithmetic/constexpr_c++17.cc: Check
            for updated macro.
    
    From-SVN: r253960

commit 37f7230a10e93a5d4ac7314fa009b72960fe3854
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 20 19:19:09 2017 +0100

    Define __cpp_lib_byte feature-test macro
    
            * include/c_global/cstddef: Define __cpp_lib_byte feature-test macro.
            * testsuite/18_support/byte/requirements.cc: Check macro.
    
    From-SVN: r253953

commit 313b789516c77cd6afa6a7299fefad86897f1609
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Oct 20 18:01:36 2017 +0000

    backport: re PR fortran/79795 (Fortran ICE in resolve_symbol starting with r163221)
    
    2017-10-20  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79795
            * resolve.c (resovle_symbol): Change gcc_assert to
            sensible error message.
    
    2017-10-20  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79795
            * gfortran.dg/assumed_size_2.f90: New test.
    
    From-SVN: r253951

commit 774310c50ccae5a54a2b6b483eedc122ea3aefd7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 20 16:14:33 2017 +0100

    PR libstdc++/82481 Suppress clang-tidy warnings
    
    Backport from mainline
    2017-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/82481
            * include/std/mutex (call_once): Suppress clang-tidy warnings about
            dangling references.
    
    From-SVN: r253944

commit 7759a387e25c46fe0fe19044f1785d012a85c1f8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 20 16:14:29 2017 +0100

    PR libstdc++/79433 no #error for including headers with wrong -std
    
    Backport from mainline
    2017-09-12  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79433
            * doc/xml/manual/status_cxx2017.xml: Update feature-test macros.
            * doc/html/*: Regenerate.
            * include/Makefile.am: Remove <bits/c++17_warning.h>.
            * include/Makefile.in: Regenerate.
            * include/bits/c++17_warning.h: Remove.
            * include/bits/string_view.tcc: Do not include <bits/c++17_warning.h>
            for pre-C++17 modes.
            * include/std/any: Likewise.
            (__cpp_lib_any): Define.
            * include/std/mutex (__cpp_lib_scoped_lock): Adjust value as per new
            SD-6 draft.
            * include/std/numeric (__cpp_lib_gcd_lcm): Define as per new SD-6
            draft.
            * include/std/optional: Do not include <bits/c++17_warning.h>.
            (__cpp_lib_optional): Define.
            * include/std/shared_mutex: Do not include <bits/c++14_warning.h>.
            * include/std/string_view: Do not include <bits/c++17_warning.h>.
            (__cpp_lib_string_view): Define.
            * include/std/variant: Do not include <bits/c++17_warning.h>.
            (__cpp_lib_variant): Define.
            * testsuite/20_util/optional/cons/value_neg.cc: Adjust dg-error line
            numbers.
            * testsuite/26_numerics/gcd/1.cc: Test for __cpp_lib_gcd_lcm.
            * testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line
            numbers.
            * testsuite/26_numerics/lcm/1.cc: Test for __cpp_lib_gcd_lcm.
            * testsuite/26_numerics/lcm/lcm_neg.cc: Adjust dg-error line
            numbers.
            * testsuite/30_threads/scoped_lock/requirements/typedefs.cc: Adjust
            expected value of __cpp_lib_scoped_lock.
    
    From-SVN: r253943

commit 24aeb1b9392426209019284cfe052a67991d49bc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 20 16:14:23 2017 +0100

    Fix path::iterator post-increment and post-decrement
    
    Backport from mainline
    2017-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_path.h (path::iterator++(int))
            (path::iterator--(int)): Fix for paths with only one component.
            * testsuite/experimental/filesystem/path/itr/traversal.cc: Test
            post-increment and post-decrement.
    
    From-SVN: r253942

commit 47ffadd9156a16559cc4154d808324647ef0f308
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Oct 20 11:19:03 2017 +0000

    re PR tree-optimization/82603 (ICE in ifcvt_local_dce w/ -O2 -ftree-loop-vectorize)
    
    2017-10-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82603
            * tree-if-conv.c (predicate_mem_writes): Make sure to only
            remove false predicated stores.
    
            * gcc.dg/torture/pr82603.c: New testcase.
    
    From-SVN: r253932

commit 29ad09f6a8bba5ff7d3cd59e9401099f7459f0b1
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Oct 20 11:18:00 2017 +0000

    backport: re PR tree-optimization/82436 (465.tonto ICE in vect_get_slp_vect_defs, at tree-vect-slp.c:3410)
    
    2017-10-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-10-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82436
            * tree-vect-slp.c (vect_supported_load_permutation_p): More
            conservatively choose the vectorization factor when checking
            whether we can perform the required load permutation.
            (vect_transform_slp_perm_load): Assert when we may not fail.
    
            * gcc.dg/vect/pr82436.c: New testcase.
    
    From-SVN: r253931

commit 17858ef22810d5e482c9c4c2c86cdff72339bbf6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 20 10:01:31 2017 +0200

    re PR sanitizer/82595 (bootstrap fails in libsanitizer on powerpc64-unknown-linux-gnu)
    
            PR sanitizer/82595
            * lsan/Makefile.am (lsan_files): Remove lsan_preinit.cc.
            * lsan/Makefile.in: Regenerated.
    
    From-SVN: r253927

commit 1f3c9ed4ce70b986611c05a5da1c685deb35c556
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 20 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253918

commit 2e2128b7c6b3a59066817d9ca56f31d515e2e7cb
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Oct 19 17:49:24 2017 +0000

    backport: re PR libfortran/82233 (execute_command_line causes program to stop when command fails (or does not exist))
    
    2017-10-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR libfortran/82233
            * intrinsics/execute_command_line.c (execute_command_line):
            No call to runtime_error if cmdstat is present.
    
    2017-10-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR libfortran/82233
            * gfortran.dg/execute_command_line_3.f90: New test.
    
    From-SVN: r253907

commit ca7e162896f41c23533940be924e2f5f16bdf472
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Thu Oct 19 13:14:55 2017 +0000

    [ARM] PR 82445 - suppress 32-bit aligned ldrd/strd peepholing with -mno-unaligned-access
    
    Peephole patterns exist in the arm backend to spot load/store
    operations to adjacent memory operations in order to convert them into
    ldrd/strd instructions.  However, when we have strict alignment
    enforced, then we can only do this if the accesses are known to be
    64-bit aligned; this is unlikely to be the case for most loads.  The
    patch adds some alignment checking to the code that validates the
    addresses for use in the peephole patterns.  This should also fix
    incorrect generation of ldrd/strd with unaligned accesses that could
    previously have occurred on ARMv5e where all such operations must be
    64-bit aligned.
    
    I've added some new tests as well.  In doing so I discovered that the
    ldrd/strd peephole tests could never fail since they would match the
    source file name in the scanned assembly as well as any instructions
    of the intended type.  I've fixed those by tightening the scan results
    slightly.
    
    gcc:
    
    * config/arm/arm.c (align_ok_ldrd_strd): New function.
    (mem_ok_for_ldrd_strd): New parameter align.  Extract the alignment of the
    mem into it.
    (gen_operands_ldrd_strd): Validate the alignment of the accesses.
    
    testsuite:
    
    * gcc.target/arm/peep-ldrd-1.c: Tighten test scan pattern.
    * gcc.target/arm/peep-strd-1.c: Likewise.
    * gcc.target/arm/peep-ldrd-2.c: New test.
    * gcc.target/arm/peep-strd-2.c: New test.
    
    From-SVN: r253891

commit 925a6f3aaacc43d42777cca04bab7ddf3a99a102
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 19 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253875

commit b0a9b256be99f95ef354a685be5a0ab84dd7dfbf
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Oct 18 23:13:16 2017 +0200

    ira: volatile asm's are not moveable (PR82602)
    
    A volatile asm statement can not be moved (relative to other volatile
    asm, etc.), but IRA would do it nevertheless.  This patch fixes it.
    
    
            PR rtl-optimization/82602
            * ira.c (rtx_moveable_p): Return false for volatile asm.
    
    From-SVN: r253870

commit 9aae1b1f1541fa85b64f0e49d8c459aaf8e09c64
Author: Vladimir Makarov <vmakarov@redhat.com>
Date:   Wed Oct 18 16:47:38 2017 +0000

    re PR middle-end/82556 (internal compiler error in curr_insn_transform, at lra-constraints.c:4307)
    
    2017-10-18  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR middle-end/82556
            * lra-constraints.c (curr_insn_transform): Use non-input operand
            instead of output one for matched reload.
    
    2017-10-18  Vladimir Makarov  <vmakarov@redhat.com>
    
            PR middle-end/82556
            * gcc.target/i386/pr82556.c: New.
    
    From-SVN: r253863

commit 184fb54d801e034a5f764bc2d6c394a5ba1c44fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 18 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253839

commit ec13b9b06d02186ac2427a7e9b4a61b126a80da4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Oct 17 20:34:43 2017 +0000

    * gcc.dg/attr-alloc_size-11.c: UnXFAIL for visium-*-*.
    
    From-SVN: r253832

commit a203c78308329adff784274b29e83104abed13f4
Author: Nathan Sidwell <nathan@acm.org>
Date:   Tue Oct 17 17:27:11 2017 +0000

    [C++ PATCH 82560] missing dtor call
    
    https://gcc.gnu.org/ml/gcc-patches/2017-10/msg01068.html
            PR c++/82560
            * call.c (build_over_call): Don't pass tf_no_cleanup to nested
            calls.
    
            PR c++/82560
            * g++.dg/cpp0x/pr82560.C: New.
    
    From-SVN: r253822

commit 0c2ff9c3969a406749a5cecf57b74df6327abf27
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Tue Oct 17 16:47:15 2017 +0200

    re PR tree-optimization/82549 (ICE at -O1 and above: verify_gimple failed)
    
            PR tree-optimization/82549
            * fold-const.c (optimize_bit_field_compare, fold_truth_andor_1):
            Formatting fixes.  Instead of calling make_bit_field_ref with negative
            bitpos return 0.
    
            * gcc.c-torture/compile/pr82549.c: New test.
    
    From-SVN: r253816

commit 7ea6f14bdc9f84d9a1100d57914172c4e079aea5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 17 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r253800

commit ce229d5066f335bde129303081128173ee8af9ce
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Oct 16 19:44:04 2017 +0000

    re PR fortran/52832 ([F03] ASSOCIATE construct with proc-pointer selector is rejected)
    
    2017-10-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/52832
            * match.c (gfc_match_associate): Before failing the association
            try again, allowing a proc pointer selector.
    
            PR fortran/80120
            PR fortran/81903
            PR fortran/82121
            * primary.c (gfc_match_varspec): Introduce 'tgt_expr', which
            points to the associate selector, if any. Go through selector
            references, after resolution for variables, to catch any full
            or section array references. If a class associate name does
            not have the same declared type as the selector, resolve the
            selector and copy the declared type to the associate name.
            Before throwing a no implicit type error, resolve all allowed
            selector expressions, and copy the resulting typespec.
    
            PR fortran/67543
            * resolve.c (resolve_assoc_var): Selector must cannot be the
            NULL expression and it must have a type.
    
            PR fortran/78152
            * resolve.c (resolve_symbol): Allow associate names to be
            coarrays.
    
    2017-10-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78512
            * gfortran.dg/associate_9.f03 : Remove XFAIL.
            * gfortran.dg/associate_26.f90 : New test.
    
            PR fortran/80120
            * gfortran.dg/associate_27.f90 : New test.
    
            PR fortran/81903
            * gfortran.dg/associate_28.f90 : New test.
    
            PR fortran/82121
            * gfortran.dg/associate_29.f90 : New test.
    
            PR fortran/67543
            * gfortran.dg/associate_30.f90 : New test.
    
    From-SVN: r253794

commit ac7b259d92a60d8b2160e0f1621ae8f1a54b8397
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Oct 16 18:48:56 2017 +0000

    re PR fortran/81048 (incorrect derived type initialization)
    
    2017-10-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81048
            * resolve.c (resolve_symbol): Ensure that derived type array
            results get default initialization.
    
    2017-10-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81048
            * gfortran.dg/derived_init_4.f90 : New test.
    
    From-SVN: r253793

commit 0e5c063608acb651eca09489b201b416cb2ce70b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 16 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253774

commit 149331ec5f4ae29d9a38d20f1aca697b6d9b5d14
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sun Oct 15 19:45:33 2017 +0000

    re PR go/82559 (libgo bootstrap broken on at least alpha, s390x)
    
            PR go/82559
    Backport from mainline:
        https://golang.org/cl/46712
        https://golang.org/cl/46839
    
    From-SVN: r253770

commit e6e519fb4f4444afde7c25cc99e336de34d9fab3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 15 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r253766

commit 8a8ca5ed305ee63372ed053fab56b026964df09c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 14 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r253746

commit 7aaf7ebd9b5aecd19cb2681aa38326137d8252a2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 13 19:26:28 2017 +0200

    re PR target/82274 (__builtin_mul_overflow fails to detect overflow for int64_t when compiled with -m32)
    
            PR target/82274
            * internal-fn.c (expand_mul_overflow): If both operands have
            the same highpart of -1 or 0 and the topmost bit of lowpart
            is different, overflow is if res <= 0 rather than res < 0.
    
            * libgcc2.c (__mulvDI3): If both operands have
            the same highpart of -1 and the topmost bit of lowpart is 0,
            multiplication overflows even if both lowparts are 0.
    
            * gcc.dg/pr82274-1.c: New test.
            * gcc.dg/pr82274-2.c: New test.
    
    From-SVN: r253735

commit f35018157d36b76550e629098039dde65ea16809
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 13 09:39:42 2017 +0200

    re PR target/82524 (expensive-optimizations produces wrong results)
    
            PR target/82524
            * config/i386/i386.md (addqi_ext_1, andqi_ext_1,
            *andqi_ext_1_cc, *<code>qi_ext_1, *xorqi_ext_1_cc): Change
            =Q constraints to +Q and into insn condition add check
            that operands[0] and operands[1] are equal.
            (*addqi_ext_2, *andqi_ext_2, *<code>qi_ext_2): Change
            =Q constraints to +Q and into insn condition add check
            that operands[0] is equal to either operands[1] or operands[2].
    
            * gcc.c-torture/execute/pr82524.c: New test.
    
    From-SVN: r253711

commit 49edf1686ff0847e9243831cdf9a01a8dcf59de6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 13 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253703

commit 975298370a6f4edf85f26e2518cb87c1ecf54551
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 12 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r253669

commit 8a6d0ecfa12d3b809602da59dd94aa3f2efa027b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 11 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253626

commit d2113c13ef27c9d91b7b3e0f883309545a3d3ad4
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Tue Oct 10 19:58:49 2017 +0000

    elf.c: Fix typo in the last commit, SFH_COMPRESSED vs SHF_COMPRESSED.
    
    2017-10-10  Paolo Carlini  <paolo.carlini@oracle.com>
    
            * elf.c: Fix typo in the last commit, SFH_COMPRESSED vs SHF_COMPRESSED.
    
    From-SVN: r253607

commit 0065f0d5000dbede108ba4067bd833f7d41beb29
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Tue Oct 10 20:43:47 2017 +0200

    backport: config.gcc: (armv7*-*-freebsd*): New target.
    
    2017-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backported from mainline r253602
        2017-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: (armv7*-*-freebsd*): New target.
        (armv6*-*-freebsd*): Remove obsolete TARGET_FREEBSD_ARMv6 define.
    
    From-SVN: r253603

commit 4b8401f477c6eab7df2f16bb93584d50f614259b
Author: Ian Lance Taylor <iant@golang.org>
Date:   Tue Oct 10 16:55:04 2017 +0000

    re PR go/80914 (gcc-go binaries don't run)
    
            PR go/80914
            * elf.c (SHF_COMPRESSED): Define.
            (elf_add): Ignore debug sections with SHF_COMPRESSED set.
    
    From-SVN: r253594

commit 0bf35f65aaf78a7767449c15485dd220659ee93f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 10 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r253573

commit 9a3a146277f97f08818e7f8a9f1577f9d045b778
Author: James Cowgill <James.Cowgill@imgtec.com>
Date:   Mon Oct 9 16:59:38 2017 +0000

    Backport correct Go MIPS architecture names from trunk.
    
    Brings in the following patches:
        https://golang.org/cl/46150
        https://golang.org/cl/46151
        https://golang.org/cl/46152
        https://golang.org/cl/46153
        https://golang.org/cl/46154
        https://gcc.gnu.org/ml/gcc-patches/2017-06/msg01777.html
    
            * go.test/go-test.exp (go-set-goarch): Update MIPS architecture names.
    
    From-SVN: r253551

commit 4bd0f26039388e24304d5bf6199ef29a5e9382d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 9 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r253535

commit abfe8859e23b9171795defbce460a1f513e349c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 8 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253518

commit 335a0a29644cd601c5a380a16bd2897f01c48726
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 7 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r253505

commit a45258d20b966c3cd76784adca5890bb1588752a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 6 20:00:54 2017 +0200

    re PR c++/82299 (-Wuseless-cast errors on typed enums used in member data initializers in c++1z)
    
            PR c++/82299
            * decl.c (reshape_init): Suppress warn_useless_cast for direct enum
            init.
            * typeck.c (convert_for_assignment): Likewise.
    
            * g++.dg/cpp0x/pr82299.C: New test.
    
    From-SVN: r253499

commit 1e28109018159c47157a45f19ed6101ffef66430
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Oct 6 07:38:51 2017 +0000

    [AArch64] Backport to gcc-7 PR71727 fix -mstrict-align
    
    2017-10-06  Christophe Lyon  <christophe.lyon@linaro.org>
    
            gcc/
            Backport from mainline r253242.
            2017-09-27  Christophe Lyon  <christophe.lyon@linaro.org>
    
            PR target/71727
            * config/aarch64/aarch64.c
            (aarch64_builtin_support_vector_misalignment): Always return false
            when misalignment is unknown.
    
            gcc/testsuite/
            Backport from mainline r253251.
            2017-09-27  Christophe Lyon  <christophe.lyon@linaro.org>
    
            PR target/71727
            * gcc.target/aarch64/pr71727-2.c: New test.
    
    From-SVN: r253477

commit 32fe08bb8356637944cbd0f7626688892a4c0db4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 6 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r253471

commit 74a2b1d572422b03a7f6182eb6284b87f9e3fade
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Oct 5 17:43:01 2017 -0400

    * call.c (convert_arg_to_ellipsis): Use the result of force_rvalue.
    
    From-SVN: r253466

commit f64766fde8094a4020396569c76affbcb4d46d8a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Oct 5 16:32:40 2017 +0000

    re PR ada/82393 (Compilation error on cygwin64)
    
            PR ada/82393
            * mingw32.h (_O_U8TEXT, _O_U16TEXT, _O_WTEXT): Delete.
            * sysdep.c (__gnat_set_mode ): Use DJGPP version for Cygwin.
    
    From-SVN: r253455

commit 43ea71b175b54891a0e96cdee28a3f4e0b37950e
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Thu Oct 5 10:45:04 2017 +0000

    Add sanitizer_linux_x86_64.lo if __x86_64__ is defined by $CC
    
    Since size of "void *" is 4 bytes for x32, check if __x86_64__ is defined
    by $CC, instead of
    
    if test x$ac_cv_sizeof_void_p = x8; then
    
    to decide wether sanitizer_linux_x86_64.lo should be used.
    
            Backported from mainline
            PR sanitizer/82379
            * configure.tgt (SANITIZER_COMMON_TARGET_DEPENDENT_OBJECTS): Set
            to sanitizer_linux_x86_64.lo if __x86_64__ is defined by $CC.
    
    From-SVN: r253442

commit 8f8812856662142d348b1b52180edd05acd47623
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 5 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r253435

commit 3eb1e9c89df8f636c13cfcafe3cfe00737ddbb49
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Oct 4 13:47:08 2017 -0400

    PR c++/82406 - C++17 error with noexcept function type
    
            PR c++/70029 - ICE with ref-qualifier and -flto
    gcc/
            * langhooks.h (struct lang_hooks_for_types): Add
            copy_lang_qualifiers.
            * langhooks-def.h (LANG_HOOKS_COPY_LANG_QUALIFIERS): Default to
            NULL.
            (LANG_HOOKS_FOR_TYPES_INITIALIZER): Use it.
            * tree.c (verify_type): Re-enable TYPE_CANONICAL main variant check.
            (build_type_attribute_qual_variant): Use copy_lang_qualifiers.
    gcc/cp/
            * tree.c (cxx_copy_lang_qualifiers): New.
            * cp-tree.h: Declare it.
            * cp-objcp-common.h: Define LANG_HOOKS_COPY_LANG_QUALIFIERS.
    
    From-SVN: r253424

commit 3d2be6b44d9e8bfcc010004009100f474c96123b
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Oct 4 11:38:24 2017 -0400

    PR c++/81525 - broken handling of auto in generic lambda.
    
            * pt.c (tsubst_decl) [VAR_DECL]: Use strip_innermost_template_args.
    
    From-SVN: r253415

commit b33d945ba88405c6b0350674a6e4e5eaa90ba0d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 4 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r253392

commit 0efe5ea92c7a9734c631fbaa872f9e2e41febf67
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Oct 3 15:50:45 2017 +0000

    backport: re PR fortran/80118 (ICE with zero size parameter array)
    
    2017-10-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80118
            * expr.c (gfc_get_full_arrayspec_from_expr): If there is
            no symtree, set array spec to NULL.
    
    2017-10-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80118
            * gfortran.dg/zero_sized_7.f90: New test.
    
    
    
    Co-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>
    
    From-SVN: r253383

commit ede8827db730cc4b84a998159bd47ff7ba2bf233
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 3 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253375

commit 2ddbf320995061c3679f6ab707c6e81b47a8ff40
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Mon Oct 2 21:05:27 2017 +0000

    libgo: update to Go 1.8.3 release
    
    From-SVN: r253367

commit 21cc5b775064b92a21a3061bf82849abcacfa211
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 2 18:07:45 2017 +0000

    backport: re PR tree-optimization/82337 (ICE: SSA corruption at tree-ssa-coalesce.c:1010)
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gimple-ssa-strength-reduction.c (find_phi_def): Don't record a
            phi definition if the PHI result appears in an abnormal PHI.
            (find_basis_for_base_expr): Don't record a basis if the LHS of the
            basis appears in an abnormal PHI.
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gcc.c-torture/compile/pr82337.c: New file.
    
    From-SVN: r253359

commit c30b6475f4c7da9d7b4bcf109b2b207cbd8a4208
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon Oct 2 13:58:11 2017 +0200

    Handle libbacktrace in contrib/gcc_update
    
            contrib/
            * gcc_update (files_and_dependencies): Handle libbacktrace.
    
    trunk r253346
    
    From-SVN: r253347

commit 087d0805fbc795ee80c818f4b1909fa37c038d87
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 2 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r253333

commit 1fd7cad65d8de92acfbb9272a10f2e319dd9e781
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 1 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r253326

commit 0624feee0b2c73fe8996c1ca32449c47c18e7ab6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 30 10:27:27 2017 +0200

    i386.c (ix86_split_idivmod): Use mode instead of always SImode for DIV and MOD in REG_EQUAL notes.
    
            * config/i386/i386.c (ix86_split_idivmod): Use mode instead of
            always SImode for DIV and MOD in REG_EQUAL notes.
    
    From-SVN: r253320

commit def8dcdb1fffdd3b6f44dc2170d6de3a4a312a3e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 30 10:26:32 2017 +0200

    backport: re PR c/82340 (volatile ignored in compound literal)
    
            Backported from mainline
            2017-09-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/82340
            * c-decl.c (build_compound_literal): Use c_apply_type_quals_to_decl
            instead of trying to set just TREE_READONLY manually.
    
            * gcc.dg/tree-ssa/pr82340.c: New test.
    
    From-SVN: r253319

commit 4eb003869d871959b80667a5251d07a14b12b17b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Sep 30 10:25:02 2017 +0200

    backport: re PR c++/82159 (ICE: in assign_temp, at function.c:961)
    
            Backported from mainline
            2017-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82159
            * gimplify.c (gimplify_modify_expr): Don't optimize away zero sized
            lhs from calls if the lhs has addressable type.
    
            * g++.dg/opt/pr82159.C: New test.
    
    From-SVN: r253318

commit f11eb23ea333d1120f326b8177adf1404e3e757a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 30 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r253314

commit ac5cb7c9a003bc5ea817d9164d060fa0bc428592
Author: Krister Walfridsson <krister.walfridsson@gmail.com>
Date:   Fri Sep 29 21:34:00 2017 +0000

    backport: re PR target/77480 (netbsd specfile will not link against libc when building -shared (+patch))
    
    2017-09-29  Krister Walfridsson  <krister.walfridsson@gmail.com>
    
            Backport from mainline
            2017-06-29  Maya Rashish  <coypu@sdf.org>
    
            PR target/77480
            * config/netbsd.h (NETBSD_LIB_SPEC): Add -lc when creating shared
            objects.
    
    From-SVN: r253309

commit 4ffa3da132ea22d8f4d21e45bfa9a3b734ec6d5d
Author: Krister Walfridsson <krister.walfridsson@gmail.com>
Date:   Fri Sep 29 09:38:08 2017 +0000

    backport: re PR target/39570 (cabs and cabsf are named differently on NetBSD 5)
    
    2017-09-29  Krister Walfridsson  <krister.walfridsson@gmail.com>
    
            Backport from mainline
            2017-09-26  Krister Walfridsson  <krister.walfridsson@gmail.com>
    
            PR target/39570
            * gcc/config/netbsd-protos.h: New file.
            * gcc/config/netbsd.c: New file.
            * gcc/config/netbsd.h (SUBTARGET_INIT_BUILTINS): Define.
            * gcc/config/t-netbsd: New file.
            * gcc/config.gcc (tm_p_file): Add netbsd-protos.h.
            (tmake_file) Add t-netbsd.
            (extra_objs) Add netbsd.o.
    
    From-SVN: r253283

commit e3929263bc81687b224a7c52dfb4b16d6f57e529
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 29 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r253273

commit 98c9c18131994d140061898067c1ab2bf6f25e1c
Author: Krister Walfridsson <krister.walfridsson@gmail.com>
Date:   Thu Sep 28 19:17:51 2017 +0000

    backport: re PR target/80600 (hidden symbol `__cpu_model' is referenced by DSO)
    
    gcc/ChangeLog:
    
            Backport from mainline
            2017-05-14  Krister Walfridsson  <krister.walfridsson@gmail.com>
    
            PR target/80600
            * config/netbsd.h (NETBSD_LIBGCC_SPEC): Always add -lgcc.
    
    libgcc/ChangeLog:
    
            Backport from mainline
            2017-05-14  Krister Walfridsson  <krister.walfridsson@gmail.com>
    
            PR target/80600
            * config.host (*-*-netbsd*): Add t-slibgcc-libgcc to tmake_file.
    
    From-SVN: r253263

commit 920436fedbc292936a03d8d8a4b705701cfa6ceb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 28 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253247

commit dc6124e513f3da0efff0e92206eb4501d3b9bb7f
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Wed Sep 27 15:40:39 2017 +0000

    backport: sourcebuild.texi (ARM-specific attributes): Document new arm_neon_ok_no_float_abi effective target.
    
    Backport from trunk r249639.
    
    2017-09-27  Christophe Lyon  <christophe.lyon@linaro.org>
    
            gcc/
            Backport from trunk r249639.
            2017-06-26  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * doc/sourcebuild.texi (ARM-specific attributes): Document new
            arm_neon_ok_no_float_abi effective target.
    
            gcc/testsuite/
            Backport from trunk r249639.
            2017-06-26  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * lib/target-supports.exp
            (check_effective_target_arm_neon_ok_nocache): Add flags with
            -mfloat-abi=hard. Include arm_neon.h.
            (check_effective_target_arm_neon_ok_no_float_abi_nocache): New.
            (check_effective_target_arm_neon_ok_no_float_abi): New.
            * gcc.target/arm/lto/pr65837_0.c: Require
            arm_neon_ok_no_float_abi. Add -mfpu=neon to dg-lto-options.
            * gcc.target/arm/lto/pr65837-attr_0.c: Require
            arm_neon_ok_no_float_abi. Remove dg-suppress-ld-options.
    
    From-SVN: r253234

commit dba29deff3e1460adec4781953c1360f678c7928
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 27 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r253221

commit 87c7cf476602cdd95dfde4079ac98b613803e899
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Sep 26 10:16:40 2017 +0000

    Backport PRs 82244, 82264, 82276, 82285, 82291
    
    2017-09-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82244
            * tree-vrp.c (remove_range_assertions): Do not propagate
            a constant to abnormals but replace the assert with a copy.
    
            * gcc.dg/torture/pr82244.c: New testcase.
    
            2017-09-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82276
            PR tree-optimization/82244
            * tree-vrp.c (build_assert_expr_for): Set
            SSA_NAME_OCCURS_IN_ABNORMAL_PHI if the variable we assert on
            has it set.
            (remove_range_assertions): Revert earlier change.
    
            * gcc.dg/torture/pr82276.c: New testcase.
    
            2017-09-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82264
            * tree-ssa-sccvn.c (vn_phi_eq): Use safe_dyn_cast to check
            for GIMPLE_CONDs.
            (vn_phi_lookup): Likewise.
            (vn_phi_insert): Likewise.
            * is-a.h (safe_dyn_cast): New.
    
            * gcc.dg/torture/pr82264.c: New testcase.
    
            2017-09-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82285
            * tree-vect-patterns.c (vect_recog_bool_pattern): Also handle
            enumeral types.
    
            * gcc.dg/torture/pr82285.c: New testcase.
    
            2017-09-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82291
            * tree-if-conv.c (predicate_mem_writes): Make sure to
            remove writes in blocks predicated with false.
    
            * gcc.dg/torture/pr82291.c: New testcase.
    
    From-SVN: r253190

commit bff800cf76396226836b3844f92850e5ca69f906
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 26 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253184

commit 446aa47469c484dd7ee78e09358ee14e19c78117
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 25 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r253130

commit a96730591f9c1121ace002a95e32ca702ba7af92
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r253121

commit ed2fab608251c1d2fdec60f4f74830799e48bce5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 23 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r253113

commit 0350ea29c060b975f97494df69c1b8e7d8054003
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Sep 22 20:20:40 2017 +0000

    re PR bootstrap/81926 (go/parse.o differs between stage2 and stage3)
    
            PR bootstrap/81926
            * cp-objcp-common.c (cp_get_debug_type): Do only one lookup.
    
    From-SVN: r253110

commit c15f0c23dae2131e832d0bd7304b89f1c14f0b84
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 22 21:00:03 2017 +0200

    re PR sanitizer/81929 (exponential slowdown in undefined behavior sanitizer for streaming)
    
            PR sanitizer/81929
            * tree.c (struct replace_placeholders_t): Add pset field.
            (replace_placeholders_r): Call cp_walk_tree with d->pset as
            last argument instead of NULL.  Formatting fix.
            (replace_placeholders): Add pset variable, add its address
            into data.  Pass &pset instead of NULL to cp_walk_tree.
    
            * g++.dg/ubsan/pr81929.C: New test.
    
    From-SVN: r253108

commit c193a01040bd28e2fa6f898964d30427b030b963
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 22 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253087

commit 896c30e0fdb170e212e8b46cb35ccd137eb12173
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Sep 21 22:25:37 2017 +0930

    PR81996, __builtin_return_address(0) fails
    
    rs6000_return_addr assumes that the stack link is at frame+0, which is
    true for count>0.  For count==0, rs6000_return_addr is called with
    frame==frame_pointer_rtx and the stack link is *not* at frame+0 if
    -fstack-protector-all or -fsanitize=address because rs6000.h sets
    FRAME_GROWS_DOWNWARD for those options.
    
            PR target/81996
            * gcc/config/rs6000/rs6000.c (rs6000_return_addr): Use
            stack_pointer_rtx for count 0.  Update comments.  Break up
            large rtl expression.
    
    From-SVN: r253067

commit c568955a6daa1c23674e1ea1e45d293e7eb61e6e
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Thu Sep 21 12:16:31 2017 +0000

    PR71951: Fix unwinding with -fomit-frame-pointer
    
    As described in PR71951, if libgcc is built with -fomit-frame-pointer,
    unwinding crashes, for example while doing a backtrace.  The underlying
    reason is the Dwarf unwinder does not setup the frame pointer register
    in the initialization code.  When later unwinding a function that uses
    the frame pointer, it tries to read FP using _Unwind_GetGR, and this
    crashes if has never restored FP.  To unwind correctly the first frame
    must save and restore FP (it is unwound in a special way so that it
    uses SP instead of FP).  This is done by adding -fno-omit-frame-pointer.
    
        gcc/
            PR target/71951
            * config/aarch64/aarch64.h (LIBGCC2_UNWIND_ATTRIBUTE): Define.
    
    From-SVN: r253063

commit 6445b688e5e47b7ae27ffadd5b8df5b7250923ef
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Sep 21 11:11:21 2017 +0100

    Fix tests for std::clamp
    
            * testsuite/25_algorithms/clamp/1.cc: Fix order of arguments and
            expected results when using predicate defining reverse order.
            * testsuite/25_algorithms/clamp/constexpr.cc: Likewise.
    
    From-SVN: r253053

commit f7d54492792b37c97190b3a3ded1c5199baa1ce4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 21 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r253045

commit 78992217665ddec6bdfc0813be9a42fdcc6b52f5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 23:26:26 2017 +0100

    Fix libstdc++ testsuite failures with -D_GLIBCXX_USE_CXX11_ABI=0
    
    Backport from mainline
    2017-06-14  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/test.xml: Correct instructions on running tests.
            * testsuite/27_io/basic_ios/copyfmt/char/1.cc: Adjust to pass when
            -D_GLIBCXX_USE_CXX11_ABI=0 added to RUNTESTFLAGS.
            * testsuite/27_io/basic_ios/exceptions/char/1.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/char/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/char/12297.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/ios_base/storage/2.cc: Likewise.
    
    From-SVN: r253039

commit ae6af5239b96722e4db164a311956c263a7def86
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 23:26:19 2017 +0100

    PR libstdc++/79162 Fix std::string regression due to LWG 2946 (old ABI)
    
            PR libstdc++/79162
            * include/bits/basic_string.h [!_GLIBCXX_USE_CXX11_ABI]
            (basic_string::_If_sv): Remove from the overload set when the
            argument is derived from basic_string.
    
    From-SVN: r253038

commit 094932a3c37d4cfa275b8e1e3622c2b7fed0a27f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 19:52:56 2017 +0100

    PR libstdc++/79162 Fix std::string regression due to LWG 2946
    
            PR libstdc++/79162
            * include/bits/basic_string.h (basic_string::_If_sv): Remove from the
            overload set when the argument is derived from basic_string.
            * testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc: New
            test.
            * testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc:
            New test.
    
    From-SVN: r253025

commit 7ef7062dbcc9f322060038828e80c65e79f3243e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 17:51:03 2017 +0100

    Fix failing C++17 test
    
            * testsuite/24_iterators/range_access_cpp17.cc: Fix order of dg-do
            and dg-options directives. Fix invalid test.
    
    From-SVN: r253020

commit 6c8a90ba128ba0c5135e5677968845b885e8cd0b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 15:22:29 2017 +0100

    PR libstdc++/82262 fix std::hash<std::optional<const T>>
    
            PR libstdc++/82262
            * include/std/optional (__optional_hash_call_base): Add template
            parameter for remove_const_t<_Tp> and use it consistently.
            * testsuite/20_util/optional/hash.cc: Test optional<const T>.
    
    From-SVN: r253015

commit 598c1fda3c46da6be91f566636a360c558785216
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 15:22:25 2017 +0100

    PR libstdc++/82254 fix std::is_nothrow_invocable_r w.r.t throwing conversions
    
            PR libstdc++/82254
            * include/std/type_traits (__is_invocable): Add partial specialization
            for INVOKE<void> case and remove is_void<R> check from partial
            specialization for INVOKE<R> case.
            (__is_nt_invocable_impl): New helper for is_nothrow_invocable_r.
            (is_nothrow_invocable_r): Use __is_nt_invocable_impl.
            * testsuite/20_util/is_nothrow_invocable/value.cc: Add tests for
            conversions that can throw or fail to convert. Use static assert
            strings to explain negative results.
            * testsuite/20_util/is_nothrow_invocable/value_ext.cc: Use
            is_nothrow_constructible in is_nt_invocable_conv.
    
    From-SVN: r253014

commit 49614a55fb4570dbbb1aea8d5ed3e853077c66f2
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Sep 20 01:32:59 2017 +0000

    backport: re PR fortran/78387 (OpenMP segfault/stack size exceeded writing to internal file)
    
    2017-09-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/78387
            * io/list_read.c (nml_read_obj): Remove use of stash.
            * io/transfer.c (st_read_done, st_write_done): Likewise.
            * io/unit.c (stash_internal_unit): Delete function.
            (get_unit): Remove use of stash.
            (init_units): Likewise.
            (close_units): Likewise.
            * io/write.c (nml_write_obj): Likewise:
    
    From-SVN: r252992

commit 93a30148663be3c21b4797c0cb52c61770ae25a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 20 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r252989

commit 9e634ac9bcae44fa9efbd0178b9a84ec8cd8e54c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Sep 19 16:57:14 2017 +0200

    i386.c (fold_builtin_cpu): Add M_AMDFAM17H to processor_model and "amdfam17h" to arch_names_table.
    
            * config/i386/i386.c (fold_builtin_cpu): Add M_AMDFAM17H
            to processor_model and "amdfam17h" to arch_names_table.
            * doc/extend.texi (__builtin_cpu_is): Document amdfam17h CPU name.
    
    From-SVN: r252978

commit cf9ff480cec12eecf8551407189534c318597a9c
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 11:03:05 2017 +0200

    Ignore empty string in target attribute (PR c++/81355).
    
    2017-09-19  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * config/i386/i386.c (sorted_attr_string): Skip empty strings.
    
    From-SVN: r252970

commit c2d655fa22e8485046bdef06491c0551c917ec6f
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 11:02:33 2017 +0200

    Revert backport.
    
    From-SVN: r252969

commit a851022421749bdbceb97637595ccecbf5f80214
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 19 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r252960

commit 4d26b83715b1c0ef936475d68e2f5232bf7f7df5
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:37:16 2017 -0400

    PR c++/81236 - ICE with template-id in generic lambda
    
            * parser.c (parsing_default_capturing_generic_lambda): Don't check
            for enclosing template.
            * semantics.c (finish_qualified_id_expr): Call it.
            * cp-tree.h: Adjust.
    
    From-SVN: r252946

commit f16091882bed916eb87c96116c1b3f08e4052389
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:37:10 2017 -0400

    PR c++/80767 - unnecessary instantiation of generic lambda
    
            PR c++/82030 - ICE inheriting from multiple lambdas
            * call.c (convert_like_real): Call build_user_type_conversion_1 if
            cand is null.
            (add_conv_candidate): Build a ck_user conversion with no candidate.
            (compare_ics): Handle null candidate.
    
    From-SVN: r252945

commit 4d093be23a8e273ad9aa2646ce91fda600327439
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Mon Sep 18 14:37:04 2017 -0400

    PR c++/78840 - ICE with const and nested generic lambda
    
            * g++.dg/cpp1y/lambda-generic-const5.C: New.
    
    From-SVN: r252944

commit 5de2272480bee0138f441d409ca7f33d5c5f1033
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:36:59 2017 -0400

    PR c++/80935 - wrong C++17 error with lambda
    
            * decl.c (check_for_uninitialized_const_var): Check
            is_instantiation_of_constexpr.
    
    From-SVN: r252943

commit 3ef1cd3d1ec1b7463d3b280fd3c523a75ba4d7f5
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:36:53 2017 -0400

    PR c++/81671 - nullptr_t template parameter
    
            * pt.c (convert_nontype_argument): Fix nullptr_t check.
    
    From-SVN: r252942

commit 3f2b67a9bb1f7af7ea757308238384f05a62e1a6
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Sep 18 14:36:47 2017 -0400

    PR c++/81525 - wrong constant value with generic lambda
    
            * pt.c (tsubst_decl) [VAR_DECL]: Avoid clobbering auto.
            (tsubst_copy) [VAR_DECL]: Handle auto.
    
    From-SVN: r252941

commit e1eaa7a325cde6ea0655655dbc0b4a249cf37c70
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 18 10:13:54 2017 +0000

    backport: [multiple changes]
    
    2017-09-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-04  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82084
            * fold-const.h (can_native_encode_string_p): Declare.
            * fold-const.c (can_native_encode_string_p): Factor out from ...
            (native_encode_string): ... here.
            * tree-vect-stmts.c (vectorizable_store): Call it to avoid
            vectorizing stores from constants we later cannot handle.
    
            * g++.dg/torture/pr82084.C: New testcase.
    
            2017-09-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82108
            * tree-vect-stmts.c (vectorizable_load): Fix pointer adjustment
            for gap in the non-permutation SLP case.
    
            * gcc.dg/vect/pr82108.c: New testcase.
    
    From-SVN: r252918

commit 8983f2c3856431a3a64d1d1e4813652705513afa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 18 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r252899

commit 12636f35806a17aac4b2dea115b2736da4c14fb7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 17 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r252891

commit fdd753cbaab9b09a474654dca7b8ba9133701acd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 16 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r252869

commit 33a5063b3d3dc53c7ce72421e57fd5ae3c9c8d6c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 13:27:07 2017 +0200

    backport: re PR c++/81314 (Undefined reference to a function with -fopenmp)
    
            Backported from mainline
            2017-09-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81314
            * cp-gimplify.c (omp_var_to_track): Look through references.
            (omp_cxx_notice_variable): Likewise.
    
            * testsuite/libgomp.c++/pr81314.C: New test.
    
    From-SVN: r252806

commit 8ccf92f52b933b3b7efe280f9c3e41909558e38b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 13:26:03 2017 +0200

    backport: re PR target/81325 (-fcompare-debug failure on ppc64le)
    
            Backported from mainline
            2017-09-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81325
            * cfgbuild.c (find_bb_boundaries): Ignore debug insns in decisions
            if and where to split a bb, except for splitting before debug insn
            sequences followed by non-label real insn.  Delete debug insns
            in between basic blocks.
    
            * g++.dg/cpp0x/pr81325.C: New test.
    
    From-SVN: r252805

commit 47d845c39ff743aa202d69c1b424cbf90b9cee2d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 13:24:49 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): For
            ALTIVEC_BUILTIN_VEC_LD if arg1 has array type call default_conversion
            on it early, rather than manual conversion late.  For
            ALTIVEC_BUILTIN_VEC_ST if arg2 has array type call default_conversion
            instead of performing manual conversion.
    
            * gcc.target/powerpc/pr82112.c: New test.
            * g++.dg/ext/altivec-18.C: New test.
    
    From-SVN: r252804

commit c395cf94fc9116ce85ea54c9635ef4efb0e59d27
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 13:22:57 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * c-common.c (sync_resolve_size): Instead of c_dialect_cxx ()
            assertion check that in the condition.
            (get_atomic_generic_size): Likewise.  Before testing if parameter
            has pointer type, if it has array type, call for C++
            default_conversion to perform array-to-pointer conversion.
    
            * c-c++-common/pr82112.c: New test.
            * gcc.dg/pr82112.c: New test.
    
    From-SVN: r252803

commit 84b42a8f0f3c5f4223e30ed074ec8d16f77a7d0e
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:19:50 2017 +0200

    Fix backport.
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-09-14  Martin Liska  <mliska@suse.cz>
    
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Add proper printf format.
    
    From-SVN: r252790

commit 5b7919a004aeffcda1c8d1613c0be6bc0eec3131
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:19:33 2017 +0200

    Backport r252024
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-09-12  Martin Liska  <mliska@suse.cz>
    
            PR testsuite/82114
            * gcc.dg/gimplefe-14.c (main): Add handling of case 0.
    
    From-SVN: r252789

commit f38aca72f0c7c03dedd6a506bad0cf82abb7d2f1
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:19:15 2017 +0200

    Backport r251530
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * ipa-icf-gimple.c (func_checker::compare_tree_list_operand):
            Rename to ...
            (func_checker::compare_asm_inputs_outputs): ... this function.
            (func_checker::compare_gimple_asm): Use the function to compare
            also ASM constrains.
            * ipa-icf-gimple.h: Rename the function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * gcc.dg/ipa/pr82001.c: New test.
    
    From-SVN: r252788

commit 4bcb671a4905a6fac31f9dea03f2994ef9c75071
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:18:34 2017 +0200

    Subject: Backport r251400
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * gcc.c (driver_handle_option): Add new argument.
            * opts-common.c (handle_option): Pass
            target_option_override_hook.
            * opts-global.c (lang_handle_option): Add new option.
            (set_default_handlers):  Add new argument.
            (decode_options): Likewise.
            * opts.c (target_handle_option): Likewise.
            (common_handle_option): Call target_option_override_hook.
            * opts.h (struct cl_option_handler_func): Add hook for
            target option override.
            (struct cl_option_handlers): Likewise.
            (set_default_handlers): Add new argument.
            (decode_options): Likewise.
            (common_handle_option): Likewise.
            (target_handle_option): Likewise.
            * toplev.c (toplev::main): Pass targetm.target_option.override
            hook.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * c-common.c (parse_optimize_options): Add argument to function
            call.
            * c-pragma.c (handle_pragma_diagnostic): Likewise.
    
    From-SVN: r252787

commit 6f29f57e2af7ba9f485b9efac3682b71b8750022
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:14:24 2017 +0200

    Backport r251406
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * gcc-interface/trans.c (Pragma_to_gnu): Set argument to NULL.
    
    From-SVN: r252786

commit 99fc8910b0552a54a7241e653dd41bd8f7d3b2d2
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:13:58 2017 +0200

    Backport r251020
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * c-attribs.c (handle_target_attribute):
            Report warning for an empty string argument of target attribute.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * g++.dg/other/pr81355.C: New test.
    
    From-SVN: r252785

commit d87e2f8f94cce59cea825f922d61eb96bf0823d6
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:13:23 2017 +0200

    Backport r250951
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * ipa-icf-gimple.c (func_checker::compare_cst_or_decl): Consider
            LABEL_DECLs that can be from a different function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * gcc.dg/ipa/pr81696.c: New test.
    
    From-SVN: r252784

commit 627aed2616cd8e59653e61fc2b2d746ee4536048
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:13:02 2017 +0200

    Backport r250336
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-19  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/63361
            * c-c++-common/ubsan/float-cast-overflow-1.c: Add either
            -ffloat-store or -mieee for targets that need it.
    
    From-SVN: r252783

commit 1afc6fafb2e96aef9a54dca537c6002116474a9e
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 10:12:30 2017 +0200

    Backport r249735
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * ipa-visibility.c (non_local_p): Handle visibility.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * c-attribs.c (handle_alias_ifunc_attribute): Append ifunc alias
            to a function declaration.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * gcc.target/i386/pr81128.c: New test.
    
    From-SVN: r252782

commit d4895db7a09a129c0dc0af9b541547c0b27e6fd8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 15 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r252778

commit 2a5c8dd0ba5177a4a6eb441d01c2ac6fed265b34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 14 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r252743

commit 12657787f93ab4cd6e8cfe179da9e4c6fb70ee84
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 17:38:47 2017 +0100

    PR libstdc++/79162 implement LWG 2946 and LWG 2758
    
    Backport from mainline
    2017-09-04  Daniel Kruegler  <daniel.kruegler@gmail.com>
    
            PR libstdc++/79162
            Implement LWG 2946, LWG 2758's resolution missed further corrections
            * include/bits/basic_string.h (basic_string::compare): Add missing
            required noexcept specifications.
            (basic_string): Introduce internal _S_to_string_view and __sv_wrapper
            for implicit string_view conversion.
            (basic_string::basic_string): Fix explicit string_view conversion by
            implicit conversion using _S_to_string_view and __sv_wrapper.
            (basic_string): Introduce internal basic_string(__sv_wrapper, Alloc)
            constructor.
            (basic_string): Fix operator=(T) template by operator=(const T&)
            template for uncopyable types (PR 79162).
            (basic_string::operator+=, basic_string::append, basic_string::assign)
            (basic_string::insert, basic_string::replace, basic_string::find)
            (basic_string::rfind, basic_string::find_first_of)
            (basic_string::find_last_of, basic_string::find_first_not_of)
            (basic_string::find_last_not_of, basic_string::compare): Replace
            __sv_type argument by template const T& (LWG 2946) and correct
            documentation describing __sv_type argument.
            (basic_string::find, basic_string::rfind, basic_string::find_first_of)
            (basic_string::find_last_of, basic_string::find_first_not_of)
            (basic_string::find_last_not_of, basic_string::compare): Replace
            unconditional noexcept specification by conditional noexcept
            specification to partially balance the removal of noexcept by LWG 2946.
            * testsuite/21_strings/basic_string/79162.cc: New.
            * testsuite/21_strings/basic_string/lwg2946.cc: New.
    
    From-SVN: r252337

commit c2f99c9d9a3bcbc7005357e93bec41056b66bb8c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 16:20:21 2017 +0100

    PR libstdc++/81468 constrain std::chrono::time_point constructor
    
            PR libstdc++/81468
            * include/std/chrono (time_point(const time_point<_Dur2>&)): Add
            missing constraint from LWG DR 1177.
            * testsuite/20_util/duration/cons/dr1177.cc: New.
            * testsuite/20_util/time_point/cons/81468.cc: New.
            * testsuite/20_util/duration/literals/range.cc: Update dg-error line.
    
    From-SVN: r252090

commit 61068cc1749e46efb94c59f2220c7efb39c6177c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:22:35 2017 +0100

    Fix broken URLs in libstdc++ API docs
    
            * doc/doxygen/mainpage.html: Fix broken URLs.
    
    From-SVN: r252071

commit a9b45e70469b5867813753ba3089994ced4aba96
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:07:25 2017 +0100

    PR libstdc++/81835 fix broken URLs in libstdc++ docs
    
            PR libstdc++/81835
            * doc/xml/manual/extensions.xml: Replace unstable URL.
            * doc/html/manual/ext_demangling.html: Regenerate.
            * libsupc++/cxxabi.h (__cxa_demangle): Fix broken URL.
    
    From-SVN: r252067

commit 8e3a97d59ac47b46a7a8d4a440344b2c7c7aa75f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 13 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r252050

commit ce1a6c358bed26beb3416cbb703fda6809119cff
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 12 21:02:13 2017 +0000

    backport: re PR target/81833 (PowerPC: VSX: Miscompiles ffmpeg's scalarproduct_int16_vsx at -O1)
    
    [gcc]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * config/rs6000/altivec.md (altivec_vsum2sws): Convert from a
            define_insn to a define_expand.
            (altivec_vsum2sws_direct): New define_insn.
            (altivec_vsumsws): Convert from a define_insn to a define_expand.
    
    [gcc/testsuite]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * gcc.target/powerpc/pr81833-1.c: New file.
            * gcc.target/powerpc/pr81833-2.c: New file.
    
    From-SVN: r252042

commit e38bde5423c85db03ac619f2232cbcad41924246
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 12 17:27:14 2017 +0100

    PR libstdc++/70483 make std::experimental::string_view fully constexpr
    
    Backport from mainline
    2017-09-12  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70483
            * include/experimental/bits/string_view.tcc (basic_string_view::find)
            (basic_string_view::rfind, basic_string_view::find_first_of)
            (basic_string_view::find_last_of, basic_string_view::find_first_not_of)
            (basic_string_view::find_last_not_of): Add constexpr specifier.
            * include/experimental/string_view (basic_string_view::remove_prefix)
            (basic_string_view::remove_suffix, basic_string_view::swap)
            (basic_string_view::compare, basic_string_view::find)
            (basic_string_view::rfind, basic_string_view::find_first_of)
            (basic_string_view::find_last_of, basic_string_view::find_first_not_of)
            (basic_string_view::find_last_not_of, operator==, operator!=)
            (operator<, operator>, operator<=, operator>=): Likewise.
            * testsuite/experimental/string_view/operations/compare/char/70483.cc:
            New.
    
    From-SVN: r252032

commit 53e7178da50ddf11bcb2fb8f2a15cb90844b9129
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 12 17:27:09 2017 +0100

    PR libstdc++/70483 make std::string_view fully constexpr
    
    Backport from mainline
    2017-09-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70483
            * include/bits/string_view.tcc (basic_string_view::find)
            (basic_string_view::rfind, basic_string_view::find_first_of)
            (basic_string_view::find_last_of, basic_string_view::find_first_not_of)
            (basic_string_view::find_last_not_of): Add constexpr specifier.
            * include/std/string_view (basic_string_view::operator=)
            (basic_string_view::rbegin, basic_string_view::rend)
            (basic_string_view::crbegin, basic_string_view::crend)
            (basic_string_view::remove_prefix, basic_string_view::remove_suffix)
            (basic_string_view::swap, basic_string_view::compare)
            (basic_string_view::find, basic_string_view::rfind)
            (basic_string_view::find_first_of, basic_string_view::find_last_of)
            (basic_string_view::find_first_not_of)
            (basic_string_view::find_last_not_of, basic_string_view::_M_check)
            (basic_string_view::_M_limit, operator==, operator!=, operator<)
            (operator>, operator<=, operator>=): Likewise.
            * testsuite/21_strings/basic_string_view/modifiers/remove_prefix/
            char/1.cc: Repeat tests in constexpr context.
            * testsuite/21_strings/basic_string_view/modifiers/remove_prefix/
            wchar_t/1.cc: Likewise.
            * testsuite/21_strings/basic_string_view/modifiers/remove_suffix/
            char/1.cc: Likewise.
            * testsuite/21_strings/basic_string_view/modifiers/remove_suffix/
            wchar_t/1.cc: Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/char/1.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/char/2.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/char/3.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/wchar_t/1.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/wchar_t/2.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/find/wchar_t/3.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operators/char/2.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operators/wchar_t/2.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/range_access/char/1.cc: Test
            cbegin, cend, rbegin, rend, crbegin and crend.
            * testsuite/21_strings/basic_string_view/range_access/wchar_t/1.cc:
            Likewise.
            * testsuite/21_strings/basic_string_view/operations/compare/char/1.cc:
            Remove trailing whitespace.
            * testsuite/21_strings/basic_string_view/operations/compare/wchar_t/
            1.cc: Likewise.
            * testsuite/21_strings/basic_string_view/modifiers/swap/char/1.cc:
            New.
            * testsuite/21_strings/basic_string_view/modifiers/swap/wchar_t/1.cc:
            New.
            * testsuite/21_strings/basic_string_view/operations/compare/char/2.cc:
            New.
            * testsuite/21_strings/basic_string_view/operations/compare/wchar_t/
            2.cc: New.
    
    From-SVN: r252031

commit 54316fafea9fa539e43b148ba669aa93a3a26eb0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 12 17:27:01 2017 +0100

    Finish implementing P0426R1 "Constexpr for std::char_traits" for C++17
    
    As discussed in PR c++/80265 ("__builtin_{memcmp,memchr,strlen} are
    not usable in constexpr functions"), use __builtin_constant_p to tell
    whether we can defer to a constexpr algorithm.
    
    I used __always_inline__ just to be thorough.  It isn't really really
    necessary as far as I could determine.
    
    Changes like these:
    
             if (__n == 0)
               return 0;
     -      return wmemcmp(__s1, __s2, __n);
     +      else
     +        return wmemcmp(__s1, __s2, __n);
    
    are necessary otherwise G++ complains that we're calling a
    non-constexpr function, which looks like a a manifestation of PR67026
    to me.
    
    libstdc++-v3:
    2017-06-12  Pedro Alves  <palves@redhat.com>
    
            * doc/xml/manual/status_cxx2017.xml: Update C++17 constexpr
            char_traits status.
            * doc/html/*: Regenerate.
    
            * include/bits/char_traits.h (_GLIBCXX_ALWAYS_INLINE): Define if
            not already defined.
            (__cpp_lib_constexpr_char_traits): Uncomment.
            (__constant_string_p, __constant_char_array_p): New.
            (std::char_traits<char>, std::char_traits<wchar_t>): Add
            _GLIBCXX17_CONSTEXPR on compare, length and find and use
            __constant_string_p, __constant_char_array_p and
            __builtin_constant_p to defer to __gnu_cxx::char_traits at compile
            time.
    
            * testsuite/21_strings/char_traits/requirements/
            constexpr_functions_c++17.cc: Uncomment
            __cpp_lib_constexpr_char_traits tests.  Uncomment
            test_compare<char>, test_length<char>, test_find<char>,
            test_compare<wchar_t>, test_length<wchar_t> and test_find<wchar_t>
            static_assert tests.
    
    From-SVN: r252030

commit a13244e8fe4c7b77cdbc4a5b89a35e7917c3bac8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 12 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r251995

commit 7cd44d39d3c0afaeadb52c5984dd25d1b17a3faa
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 11 21:44:42 2017 +0000

    xtensa: fix PR target/82181
    
    2017-09-11  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
    
            * config/xtensa/xtensa.c (xtensa_mem_offset): Check that both
            words of DImode object are reachable by xtensa_uimm8x4 access.
    
    From-SVN: r251987

commit 1d56f1768ef8220b2e1e0fa4cad65d17724c24c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 11 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251955

commit cb3903dac5b44efe58b0a3ca54ec1e9f84443620
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun Sep 10 21:09:38 2017 +0000

    backport: re PR target/80695 (gratuitous use of stxvx to store multiple pointers)
    
    [gcc]
    
    2017-09-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/80695
            * config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):
            Account for direct move costs for vec_construct of integer
            vectors.
    
            Backport from mainline
            2017-07-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/80695
            * config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost):
            Reduce cost estimate for direct moves.
    
    [gcc/testsuite]
    
    2017-09-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/80695
            * gcc.target/powerpc/pr80695-p8.c: New file.
            * gcc.target/powerpc/pr80695-p9.c: New file.
    
    From-SVN: r251952

commit 1d255b97d1b40f86c55d99c2470574390f420cc6
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Sep 10 17:03:40 2017 +0000

    re PR ada/79441 (gnat.dg/pack9.adb fails)
    
            PR ada/79441
            * gnat.dg/pack9.adb: Robustify.
    
    From-SVN: r251950

commit a37ce680515b9a736265f8d57842e72286f9910c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sun Sep 10 09:44:04 2017 +0100

    PR c++/81852 define feature-test macro for -fthreadsafe-statics
    
    gcc/c-family:
    
            PR c++/81852
            * c-cppbuiltin.c (c_cpp_builtins): Define __cpp_threadsafe_static_init.
    
    gcc/testsuite:
    
            PR c++/81852
            * g++.dg/cpp1y/feat-cxx11.C: Check __cpp_threadsafe_static_init.
            * g++.dg/cpp1y/feat-cxx14.C: Likewise.
            * g++.dg/cpp1y/feat-cxx98.C: Likewise.
            * g++.dg/cpp1y/feat-neg.C: Likewise.
            * g++.dg/cpp1z/feat-cxx1z.C: Likewise.
    
    From-SVN: r251946

commit c319a7a03c0f0d2d7cfc506f4382440fad82f1e9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 10 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251944

commit 1dbe491929d210a0da4839a05f75dbf5c0cdc4dc
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Sep 9 12:30:42 2017 +0000

    decl.c (promote_object_alignment): New function taken from...
    
            * gcc-interface/decl.c (promote_object_alignment): New function taken
            from...
            (gnat_to_gnu_entity) <E_Variable>: ...here.  Invoke it.
            (gnat_to_gnu_field): If the field is Atomic or VFA, invoke it and
            create a padding type on success before doing the atomic check.
    
    From-SVN: r251932

commit 5d5372468c2da010c64c0bff5ebc969fddde0fc4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Sep 9 12:19:38 2017 +0000

    decl.c (gnat_to_gnu_entity): Apply the promotion to static memory earlier in the processing.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Apply the
            promotion to static memory earlier in the processing.
    
    From-SVN: r251930

commit 2d9534b21515bef4904ff5f84fbd66dd1c7d7a42
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Sep 9 12:06:48 2017 +0000

    sem_util.ads (Set_Rep_Info): New inline procedure.
    
            * sem_util.ads (Set_Rep_Info): New inline procedure.
            * sem_util.adb (Set_Rep_Info): Implement it.
            * sem_ch3.adb (Process_Subtype): If the case of a constraint present,
            always copy the representation aspects onto the subtype.
            * gcc-interface/decl.c (gnat_to_gnu_entity): Only set the TYPE_ALIGN_OK
            and TYPE_BY_REFERENCE_P flags on types after various promotions.
            * gcc-interface/trans.c (node_has_volatile_full_access) <N_Identifier>:
            Consider all kinds of entities.
    
    From-SVN: r251928

commit 753161f615d424b71ee873224fe90cc5099f8dcb
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Sep 9 09:43:33 2017 +0000

    re PR bootstrap/81926 (go/parse.o differs between stage2 and stage3)
    
            PR bootstrap/81926
            * cp-objcp-common.c (struct debug_type_hasher): New class.
            (debug_type_hash): New variable.
            (cp_get_debug_type): Associate the OFFSET_TYPEs with the types.
    
    From-SVN: r251923

commit 6e1b4597773a77b4ab26f8105f289893bd36f58d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 9 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r251916

commit 35a04528f854e503a091da96e4b21a095768ae93
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Sep 8 17:12:15 2017 +0000

    re PR target/81988 (invalid std instruction with odd register)
    
            PR target/81988
            * config/sparc/sparc.md (mulsi3): Rename into *mulsi3_sp32.
            (*mulsi3_sp64): New instruction.
            (mulsi3): New expander.
    
    From-SVN: r251905

commit b573cd732d9daf9803acea79e78386a4cbb0b408
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 8 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r251860

commit f0da73ec406ba7faecef50d356436e239a57a831
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:41:42 2017 +0200

    backport: re PR middle-end/81768 (error: control flow in the middle of basic block)
    
            Backported from mainline
            2017-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81768
            * omp-low.c (lower_omp_for): Recompute tree invariant if
            gimple_omp_for_initial/final is ADDR_EXPR.
    
            * gcc.dg/gomp/pr81768-2.c: New test.
    
    From-SVN: r251857

commit 22bfd3f3a9d000e2fbe487a6f2eacab3ea40f53f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:40:06 2017 +0200

    backport: re PR middle-end/81768 (error: control flow in the middle of basic block)
    
            Backported from mainline
            2017-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81768
            * omp-expand.c (expand_omp_simd): Force second operands of COND_EXPR
            into gimple val before gimplification fo the COND_EXPR.
    
            * gcc.dg/gomp/pr81768-1.c: New test.
    
    From-SVN: r251856

commit 7804f36f1e30fae399e51860019de4bb304fdd58
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:30:58 2017 +0200

    backport: lra-remat.c (reg_overlap_for_remat_p): Fix a pasto.
    
            Backported from mainline
            2017-09-04  Jakub Jelinek  <jakub@redhat.com>
    
            * lra-remat.c (reg_overlap_for_remat_p): Fix a pasto.
    
    From-SVN: r251855

commit f7b87491a905fdbe9c89a3dcc740185f6dbdec36
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:29:04 2017 +0200

    backport: re PR sanitizer/81923 ([ASAN] gcc emites wrong odr asan instrumentation for glibc)
    
            Backported from mainline
            2017-09-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81923
            * asan.c (create_odr_indicator): Strip name encoding from assembler
            name before appending it after __odr_asan_.
    
            * gcc.dg/asan/pr81923.c: New test.
    
    From-SVN: r251854

commit 9e2e13bd6d7277d739e9f8b4e5929cbd3dc91678
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:26:34 2017 +0200

    backport: re PR c/81687 (Compiler drops label in OpenMP region)
    
    2017-09-07  Jakub Jelinek  <jakub@redhat.com>
    
            Backported from mainline
            2017-08-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/81687
            * omp-low.c (omp_copy_decl): Don't remap FORCED_LABEL or DECL_NONLOCAL
            LABEL_DECLs.
            * tree-cfg.c (move_stmt_op): Don't adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels.
            (move_stmt_r) <case GIMPLE_LABEL>: Adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels here.
    
            * testsuite/libgomp.c/pr81687-1.c: New test.
            * testsuite/libgomp.c/pr81687-2.c: New test.
    
    From-SVN: r251853

commit 4330b878c7c238ecc5edf26a70515d5ad281efe8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:24:36 2017 +0200

    backport: ptrace.h: New file.
    
            Backported from mainline
            2017-08-07  Jakub Jelinek  <jakub@redhat.com>
    
            * include/system/sys/ptrace.h: New file.
    
    From-SVN: r251852

commit 6b6bdf1822441541718b71b3b751dae8825faf79
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:23:14 2017 +0200

    backport: re PR target/81621 (ICE in delete_insn, at cfgrtl.c:167 with s390x cross compiler)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81621
            * bb-reorder.c (pass_partition_blocks::execute): Return TODO_df_finish
            after setting changeable df flags.
    
            * gcc.dg/pr81621.c: New test.
    
    From-SVN: r251851

commit 2926cf5b227bf59c83bc0b039c7e34030a1d4811
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:20:43 2017 +0200

    backport: re PR driver/81650 (gcc -m32 mishandles -Walloc-size-larger-than=9223372036854775807)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR driver/81650
            * calls.c (alloc_max_size): Use HOST_WIDE_INT_UC (10??)
            instead of 10??LU, perform unit multiplication in wide_int,
            don't change alloc_object_size_limit if the limit is larger
            than SSIZE_MAX.
    
            * gcc.dg/pr81650.c: New test.
    
    From-SVN: r251850

commit d85d1bf482781df8a3be615443f11a1125069584
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:19:47 2017 +0200

    backport: re PR middle-end/81052 (ICE in verify_dominators, at dominance.c:1184)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81052
            * omp-low.c (diagnose_sb_0): Handle flag_openmp_simd like flag_openmp.
            (pass_diagnose_omp_blocks::gate): Enable also for flag_openmp_simd.
    
            * c-c++-common/pr81052.c: New test.
    
    From-SVN: r251849

commit 54e97c588ab3315280908b1842595a335e35abb7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 7 22:18:45 2017 +0200

    backport: re PR c/45784 (gcc OpenMP - error: invalid controlling predicate)
    
            Backported from mainline
            2017-07-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/45784
            * c-omp.c (c_finish_omp_for): If the condition is wrapped in
            rhs of COMPOUND_EXPR(s), skip them and readd their lhs into
            new COMPOUND_EXPRs around the rhs of the comparison.
    
            * testsuite/libgomp.c/pr45784.c: New test.
            * testsuite/libgomp.c++/pr45784.C: New test.
    
    From-SVN: r251848

commit e7954201e54cab87be3ad85aaa22f39e148b75d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 7 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251824

commit 2d3af62ba554e45a525e4eefd1eff9cc1ef121f4
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Sep 6 18:42:56 2017 +0000

    backport: re PR tree-optimization/81987 (ICE in verify_ssa with -O3 -march=skylake-avx512)
    
    [gcc]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * gimple-ssa-strength-reduction.c (insert_initializers): Don't
            insert an initializer in a location not dominated by the stride
            definition.
    
    [gcc/testsuite]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * g++.dg/torture/pr81987.C: New file.
    
    From-SVN: r251815

commit 7bcf615d74258684f363bbd638b48f6673059a04
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Sep 6 17:10:28 2017 +0200

    re PR testsuite/82120 (FAIL: gcc.dg/tree-ssa/pr81588.c)
    
            PR testsuite/82120
            * gcc.dg/tree-ssa/pr81588.c: Don't run on logical_op_short_circuit
            targets except for those where -mbranch-cost=2 is supported.
    
    From-SVN: r251806

commit 6243cd0615bed44ff37f48c3c522d09891c7350f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 6 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r251749

commit 540b5cb6c70b75bc18b170378bccd7e5fb0ed499
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 5 21:49:01 2017 +0000

    backport: re PR tree-optimization/81503 (Wrong code at -O2)
    
    [gcc]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Ensure
            folded constant fits in the target type; reorder tests for clarity.
    
    [gcc/testsuite]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gcc.c-torture/execute/pr81503.c: New file.
    
    From-SVN: r251743

commit db72abb6b8038dc9caa919c946be5c0a085a8235
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Tue Sep 5 11:04:41 2017 +0000

    [PR79542][Ada] Fix ICE in dwarf2out.c with nested func. inlining
    
    This is a backport from trunk.
    
    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=79542 reports an ICE in
    dwarf2out.c for an Ada testcase built with optimization.
    
    This crash happens during the late generation pass because
    add_gnat_descriptive_type cannot find the type DIE corresponding to some
    descriptive type after having tried to generate it. This is because the
    DIE was generated during the early generation pass, but then pruned by
    the type pruning machinery. So why was it pruned?
    
    We are in a situation where we have cloned types (because of inlining,
    IIUC) whose TYPE_NAME have non-null DECL_ABSTRACT_ORIGIN attributes. As
    a consequence:
    
      * In modified_type_die, the "handle C typedef types" part calls
        gen_type_die on the cloned type.
    
      * gen_type_die matches a typedef variant, and then calls gen_decl_die
        on its TYPE_NAME, which will end up calling gen_typedef_die.
    
      * gen_typedef_die checks decl_ultimate_origin for this TYPE_DECL, and
        finds one, so it only adds a DW_AT_abstract_origin attribute to the
        DW_TAG_typedef DIE, but the cloned type itself does not get its own
        DIE.
    
      * Back in modified_type_die, the call to lookup_type_die on the type
        passed to gen_type_die returns NULL.
    
    In the end, whole type trees, i.e. the ones referenced by
    DECL_ABSTRACT_ORIGIN attributes, are never referenced from type pruning
    "roots" and are thus pruned. The descriptive type at stake here is one
    of them, hence the assertion failure.
    
    This patch attemps to fix that with what seems to be the most sensible
    thing to do in my opinion: updating the "handle C typedef types" part in
    modified_type_die to check decl_ultimate_origin before calling
    gen_type_die: if that function returns something not null, then we know
    that gen_type_die/gen_typedef_die will not generate a DIE for the input
    type, so we try to process the ultimate origin instead. It also updates
    in a similar way gen_type_die_with_usage, assert that when
    gen_typedef_die is called on nodes that have an ultimate origin, this
    origin is themselves.
    
    gcc/
            PR ada/79542
            * dwarf2out.c (modified_type_die): For C typedef types that have
            an ultimate origin, process the ultimate origin instead of the
            input type.
            (gen_typedef_die): Assert that input DECLs have no ultimate
            origin.
            (gen_type_die_with_usage): For typedef variants that have an
            ultimate origin, just call gen_decl_die on the original DECL.
            (process_scope_var): Avoid creating DIEs for local typedefs and
            concrete static variables.
    
    gcc/testsuite/
    
            PR ada/79542
            * gnat.dg/debug13.ads, gnat.dg/debug13.adb: New testcase.
    
    From-SVN: r251709

commit 497ffa572f485574894ee53dee590df02e13070a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 09:49:34 2017 +0000

    re PR ada/62235 (segmentation fault on Ada 2012 code)
    
            PR ada/62235
            * gcc-interface/decl.c (gnat_to_gnu_entity): Skip regular processing
            for Itypes that are E_Record_Subtype with a cloned subtype.
            <E_Record_Subtype>: Use the DECL of the cloned type directly, if any.
    
    From-SVN: r251707

commit 613ef8fec7b69df109b46ccb3a01f43f0071ee75
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 09:15:50 2017 +0000

    utils.c (unchecked_convert): When the result type is a non-biased integral type with size 0...
    
            * gcc-interface/utils.c (unchecked_convert): When the result type is a
            non-biased integral type with size 0, set the result to 0 directly.
    
    From-SVN: r251702

commit 437fe63c6d7b9b484148957dd973c3d73bb551b3
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 08:29:05 2017 +0000

    trans.c (Call_to_gnu): If this is a function call and there is no target...
    
            * gcc-interface/trans.c (Call_to_gnu): If this is a function call and
            there is no target, do not create a temporary for the return value for
            an allocator either.
    
    From-SVN: r251696

commit d349b8ea754b367f5cfeb83b5f42577e6ef1a5d5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 08:17:56 2017 +0000

    trans.c (pos_to_constructor): Skip conversions to an unconstrained array type.
    
            * gcc-interface/trans.c (pos_to_constructor): Skip conversions to an
            unconstrained array type.
    
    From-SVN: r251693

commit f2ab7f7250ded4c0ee0b984bfcfa08db63f7f187
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 5 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251688

commit 99f4d23fd0d44d82a8363a5016d6af6b28fa7b24
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Sep 4 20:43:44 2017 +0200

    mpx-os-support.h: New file.
    
            * gcc.target/i386/mpx/mpx-os-support.h: New file.
            * gcc.target/i386/mpx/mpx-check.h: Include mpx-os-support.h.
            (check_osxsave): New function.
            (main): Use __get_cpuid_count and return NORUNRES on failure.
            Use check_osxsave.
            * gcc.target/i386/mpx/va-arg-pack-1-lbv.c (foo1): Use
            __builtin_va_arg_pack instead of __va_arg_pack.
            * gcc.target/i386/mpx/va-arg-pack-1-nov.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-1-ubv.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-lbv.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-nov.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-ubv.c (foo1): Ditto.
    
    From-SVN: r251684

commit c3c6d737b6c30e88b183c5dc82c38e1bdc5fb413
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:57 2017 +0100

    PR c++/82039 suppress -Wzero-as-null-pointer-constant warning
    
    Backport from mainline
    2017-08-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR c++/82039
            * include/ext/new_allocator.h (__gnu_cxx::new_allocator::allocate):
            Adjust null pointer constant to avoid warning.
    
    From-SVN: r251658

commit b121ffed0a875723eaa257de2a4385b3878d4ae7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:53 2017 +0100

    PR libstdc++/81912 make std::__iterator_category constexpr
    
    Backport from mainline
    2017-08-21  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81912
            * include/bits/stl_iterator_base_types.h (__iterator_category): Add
            constexpr for C++11 and later.
            * testsuite/24_iterators/container_access.cc: Add target selector.
            * testsuite/24_iterators/range_access.cc: Fix clause number in
            comment.
            * testsuite/24_iterators/range_access_cpp14.cc: Likewise.
            * testsuite/24_iterators/range_access_cpp17.cc: New.
    
    From-SVN: r251657

commit 6e85190f9759196ef0f614445791bb9a8cd8ec7c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:49 2017 +0100

    Fix test for __has_unique_object_representations support in Clang
    
    Backport from mainline
    2017-08-09  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/type_traits (_GLIBCXX_NO_BUILTIN_HAS_UNIQ_OBJ_REP):
            Replace with _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP and use
            __is_identifier to set it.
    
    From-SVN: r251656

commit ec5016c3953bb42990314d63dfac1544648b687d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:45 2017 +0100

    Fix test for __is_aggregate support in Clang
    
    Backport from mainline
    2017-08-09  Katsuhiko Nishimra  <ktns.87@gmail.com>
    
            * include/std/type_traits (_GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE): Use
            __is_identifier instead of __has_builtin.
    
    From-SVN: r251655

commit c825961aa19deebe1521c3f0650994f6c87734da
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:42 2017 +0100

    PR libstdc++/81891 fix double-free in hashtable constructor
    
    Backport from mainline
    2017-08-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81891
            * include/bits/hashtable.h (_Hashtable(_InputIterator, _InputIterator,
            size_type, const _H1&, const _H2&, const _Hash&, const _Equal&,
            const _ExtractKey&, const allocator_type&)): Let destructor do clean
            up if an exception is thrown.
            * testsuite/23_containers/unordered_map/cons/81891.cc: New.
    
    From-SVN: r251654

commit 9584ad529f4f4a3172c4e0c5626032c43c5ebe30
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:37 2017 +0100

    PR libstdc++/81599 fix typo in Doxygen comments
    
    Backport from mainline
    2017-07-31  Marek Polacek  <polacek@redhat.com>
    
            PR libstdc++/81599
            * include/bits/stl_stack.h: Fix typo.
    
    From-SVN: r251653

commit 16c067fa4aba019c45fe064c7cb57deca9cdab09
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 13:24:33 2017 +0100

    PR libstdc++/81338 correctly manage string capacity
    
    Backport from mainline
    2017-07-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81338
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI] (basic_string):
            Declare basic_stringbuf to be a friend.
            * include/bits/sstream.tcc (basic_stringbuf::overflow)
            [_GLIBCXX_USE_CXX11_ABI]: Use unused capacity before reallocating.
            * include/std/sstream (basic_stringbuf::__xfer_bufptrs): Update string
            length to buffer length.
            * testsuite/27_io/basic_stringstream/assign/81338.cc: New.
    
    From-SVN: r251652

commit 075e2a50fff557d918cf7f9e3840f87d67028c9d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 4 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r251632

commit 5e4f96c5f5abf369183ecd81d9b26917fb015a90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 3 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r251623

commit ef28b004607f6b64987fcf48270cb5cdfb5e1da5
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Sat Sep 2 21:04:08 2017 +0200

    backport: re PR fortran/81770 (Bogus warning: Pointer in pointer assignment might outlive the pointer target)
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * expr.c (gfc_check_pointer_assign): Improve the check whether pointer
            may outlive pointer target.
    
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * gfortran.dg/warn_target_lifetime_3.f90: Fix a typo.
            * gfortran.dg/warn_target_lifetime_4.f90: New testcase.
    
    From-SVN: r251618

commit cfe5b1dbea6fac6ba81628b82a2e9125ceea02f8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 2 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r251616

commit 71a835084a99809ffe6d2928dcdefb0cb37d9813
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Sep 1 09:24:54 2017 +0000

    re PR c++/82040 (ICE with -Wbool-operation and ~)
    
            PR c++/82040
            * typeck.c (cp_build_unary_op): Avoid re-entering reporting routines.
    
            * g++.dg/warn/Wbool-operation-1.C: New test.
    
    From-SVN: r251582

commit 2525ae2ebd5de7c18d3b5b0f6e21bd56592256e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 1 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251579

commit 38babcc9c25fd5afbcaa18d98814a3bad9edc7fa
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Aug 31 20:28:17 2017 +0000

    backport: re PR target/81504 (gcc-7 regression: vec_st  in loop misoptimized)
    
    2017-08-31  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81504
            * config/rs6000/rs6000.c (find_alignment_op): Add reference
            parameter and_insn and return it.
            (recombine_lvx_pattern): Insert a copy to ensure availability of
            the base register of the copied masking operation at the point of
            the instruction replacement.
            (recombine_stvx_pattern): Likewise.
    
    From-SVN: r251575

commit 967320300d22269e842b24b49d71c112335aa358
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 31 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251552

commit b0aa4339215553e03250e737cd58a924a4298b19
Author: Michael Meissner <meissner@gcc.gnu.org>
Date:   Wed Aug 30 01:14:05 2017 +0000

    backport: re PR target/81593 (Optimize PowerPC vector set from vector extract)
    
    2017-08-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-08-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81593
            * gcc.target/powerpc/vsx-extract-6.c: New tests for optimzing
            vector inserts from vector extracts.
            * gcc.target/powerpc/vsx-extract-7.c: Likewise.
    
    From-SVN: r251446

commit 5eebe567c3f6cf501ebb47568cf7c5f2473df0e6
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Aug 30 01:12:21 2017 +0000

    backport: re PR target/81593 (Optimize PowerPC vector set from vector extract)
    
    [gcc]
    2017-08-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-08-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81593
            * config/rs6000/vsx.md (vsx_concat_<mode>_1): New combiner insns
            to recognize inserting into a vector from a double word element
            that was extracted from another vector, and eliminate extra
            XXPERMDI instructions.
            (vsx_concat_<mode>_2): Likewise.
            (vsx_concat_<mode>_3): Likewise.
            (vsx_set_<mode>, VSX_D): Rewrite vector set in terms of vector
            concat to allow optimizing inserts from previous extracts.
    
    [gcc/testsuite]
    2017-08-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-08-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81593
            * gcc.target/powerpc/vec-setup.h: New tests to test various
            combinations of setting up vectors of 2 double word elements.
            * gcc.target/powerpc/vec-setup-long.c: Likewise.
            * gcc.target/powerpc/vec-setup-double.c: Likewise.
            * gcc.target/powerpc/vec-setup-be-long.c: Likewise.
            * gcc.target/powerpc/vec-setup-be-double.c: Likewise.
    
    From-SVN: r251445

commit c2a251cd901b6d6d6b1cef2237a3b07b36a2d2ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 30 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r251443

commit f3235b72ecad434d454a73074556c3c95874b164
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 29 17:53:44 2017 +0930

    [RS6000] linux startfile/endfile
    
    These need to match the gnu-user.h definitions to support
    --enable-default-pie.  Otherwise we end up linking the wrong startup
    files when defaulting to PIE.
    
            PR target/81170
            PR target/81295
            * config/rs6000/sysv4.h (STARTFILE_LINUX_SPEC): Upgrade to
            match gnu-user.h startfile.
            (ENDFILE_LINUX_SPEC): Similarly.
    
    From-SVN: r251403

commit 82cd399fbe2bcbbab90526445a5bef19273b300e
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 29 17:52:44 2017 +0930

    PR driver/81523: Make -static override -pie
    
    -static and -pie together behave differently depending on whether GCC is
    configured with --enable-default-pie.  On x86, "-static -pie" fails to
    create executable when --enable-default-pie isn't used, but creates a
    static executable when --enable-default-pie is used.  This patch makes
    -static completely override -pie to create a static executable, regardless
    if --enable-default-pie is used to configure GCC.
    
            PR target/81170
            PR target/81295
            PR driver/81523
            * gcc.c (NO_PIE_SPEC): Delete.
            (PIE_SPEC): Define as !no-pie/pie.  Move static|shared|r
            exclusion..
            (LINK_PIE_SPEC): ..to here.
            (LINK_COMMAND_SPEC): Support -no-pie.
            * config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Correct
            chain of crtbegin*.o selection, update for PIE_SPEC changes and
            format.
            (GNU_USER_TARGET_ENDFILE_SPEC): Similarly.
            * config/sol2.h (STARTFILE_CRTBEGIN_SPEC): Similarly.
            (ENDFILE_CRTEND_SPEC): Similarly.
    
    From-SVN: r251402

commit 897c0169ea3eb8b0fee95e0b64beb926f74f3cba
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Aug 29 07:06:46 2017 +0000

    backport: re PR tree-optimization/81977 (Issue with inline memcpy with optimizations enabled)
    
    2017-08-29  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-08-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81977
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Fix look through
            memcpy.
    
            * g++.dg/torture/pr81977.C: New testcase.
    
            2017-08-28  Richard Biener  <rguenther@suse.de>
    
            PR debug/81993
            * dwarf2out.c (gen_remaining_tmpl_value_param_die_attributes):
            Do nothing for removed DIEs.
    
    From-SVN: r251399

commit cf496a34a33924619f7ab8ba15b822dbb264614e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 29 00:16:35 2017 +0000

    Daily bump.
    
    From-SVN: r251394

commit 8dc7f6cba5e2a74ce3c97d31f7652056700e59a4
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 28 12:49:55 2017 +0000

    backport: [multiple changes]
    
    2017-08-28  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-06-14  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81088
            * fold-const.c (split_tree): Drop TREE_OVERFLOW flag from
            literal constants.
            (fold_binary_loc): When associating do not treat pre-existing
            TREE_OVERFLOW on literal constants as a reason to allow
            TREE_OVERFLOW on associated literal constants.
    
            * c-c++-common/ubsan/pr81088.c: New testcase.
    
            2017-06-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81065
            * fold-const.c (extract_muldiv_1): Remove bogus distribution
            case of C * (x * C2 + C3).
            (fold_addr_of_array_ref_difference): Properly fold index difference.
    
            * c-c++-common/ubsan/pr81065.c: New testcase.
    
            2017-06-08  Marek Polacek  <polacek@redhat.com>
    
            PR sanitize/80932
            * c-c++-common/ubsan/pr80932.c: Test with ints, not with long ints.
    
            2017-06-07  Marek Polacek  <polacek@redhat.com>
    
            PR sanitizer/80932
            * fold-const.c (extract_muldiv_1) <case MINUS_EXPR>: Add
            TYPE_OVERFLOW_WRAPS check.
    
            * c-c++-common/ubsan/pr80932.c: New test.
    
    From-SVN: r251381

commit 9563a3d30ac812f30d2997650f6156ab0e66ba4a
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 28 12:16:06 2017 +0000

    backport: [multiple changes]
    
    2017-08-28  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-08-21  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81884
            * tree-ssa-alias.c (stmt_kills_ref_p): Handle array accesses
            at struct end conservatively when comparing common bases.
    
            * g++.dg/torture/pr81884.C: New testcase.
    
            2017-05-04  Richard Biener  <rguenther@suse.de>
    
            * tree.c (array_at_struct_end_p): Handle arrays at struct
            end with flexarrays more conservatively.  Refactor and treat
            arrays of arrays or aggregates more strict.  Fix
            VIEW_CONVERT_EXPR handling.  Remove allow_compref argument.
            * tree.h (array_at_struct_end_p): Adjust prototype.
            * gimple-fold.c (get_range_strlen): Likewise.
            * tree-chkp.c (chkp_may_narrow_to_field): Likewise.
    
    From-SVN: r251379

commit 2377f9833dee1cb42b5fb1903a1471c1cb7d1858
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 28 10:19:17 2017 +0000

    backport: [multiple changes]
    
    2017-08-28  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-08-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81181
            * tree-ssa-pre.c (compute_antic_aux): Defer clean() to ...
            (compute_antic): ... end of iteration here.
    
            * gcc.dg/torture/pr81181.c: New testcase.
    
            2017-08-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81723
            * tree-vect-slp.c (struct bst_traits): New hash traits.
            (bst_fail): New global.
            (vect_build_slp_tree_2): New worker, split out from ...
            (vect_build_slp_tree): ... this now wrapping it with using
            bst_fail set to cache SLP tree build fails.  Properly handle
            max_tree_size.
            (vect_analyze_slp_instance): Allocate and free bst_fail.
    
            * gfortran.dg/pr81723.f: New testcase.
    
            2017-08-24  Richard Biener  <rguenther@suse.de>
    
            PR target/81921
            * config/i386/i386.c: Include symbol-summary.h, ipa-prop.h
            and ipa-inline.h.
            (ix86_can_inline_p): When ix86_fpmath flags do not match
            check whether the callee uses FP math at all.
    
            * gcc/testsuite/gcc.target/i386/pr81921.c: New testcase.
    
    From-SVN: r251376

commit bf5f5dd0f13ffb2d5aaab0a033062cd6a7e90c85
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 28 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r251372

commit 451123e4481169bd79277a3f05cc0ccb440f9282
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 27 00:16:37 2017 +0000

    Daily bump.
    
    From-SVN: r251366

commit 621482e770b52eebb090f31823af4d4aa34e9461
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 26 00:16:42 2017 +0000

    Daily bump.
    
    From-SVN: r251361

commit 9bdbbf52ac301be669d487ff776eb5733bb52511
Author: Marek Polacek <mpolacek@gcc.gnu.org>
Date:   Fri Aug 25 16:31:50 2017 +0000

    re PR c++/81607 (Conditional operator: "type mismatch in shift expression" error)
    
            PR c++/81607
            * cp-gimplify.c (cp_fold): If folding exposed a branch of
            a COND_EXPR, convert it to the original type of the COND_EXPR, if
            they differ.
    
    From-SVN: r251358

commit 55f4f24476c9bb03b6682a0e05669fcecdb99d08
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 25 00:16:29 2017 +0000

    Daily bump.
    
    From-SVN: r251345

commit 9c1c75946f46b5e873aa2c44c2d9dad5b18c6f01
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Aug 24 16:30:51 2017 +0200

    backport: target-supports.exp (check_avx2_hw_available): Fix breakage due NULL being undefined.
    
            Backport from mainline
            2017-08-23  Daniel Santos  <daniel.santos@pobox.com>
    
            * lib/target-supports.exp (check_avx2_hw_available):
            Fix breakage due NULL being undefined.
    
    From-SVN: r251336

commit 6de5fdb3d8eb1426a243292ef70cabbddb068bdd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 24 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r251324

commit cd53429f1d21134e9afa1facdea6607f898a78cd
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Aug 23 15:03:46 2017 -0500

    backport: re PR target/72804 (Poor code gen with -mvsx-timode)
    
    gcc/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/72804
            * config/rs6000/vsx.md (*vsx_le_permute_<mode>): Add support for
            operands residing in integer registers.
            (*vsx_le_perm_load_<mode>): Likewise.
            (*vsx_le_perm_store_<mode>): Likewise.
            (define_peephole2): Add peepholes to optimize the above.
    
    gcc/testsuite/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/72804
            * gcc.target/powerpc/pr72804.c: New test.
    
    From-SVN: r251318

commit d684a9bb4bcc3952649a347133b86c87a45c8930
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Aug 23 00:41:10 2017 +0000

    backport: re PR fortran/81296 (derived type I/o problem)
    
    2017-08-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81296
            * trans-io.c (get_dtio_proc): Add check for format label and set
            formatted flag accordingly. Reorganize the code a little.
    
            * gfortran.dg/dtio_12.f90: Update test.
    
    From-SVN: r251301

commit f4abc808dcc48071912640c517331e5dd6ba0e8d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 23 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r251299

commit 8bd5889eaa9f2df5568742f8e893753b61461fdb
Author: Peter Bergner <bergner@gcc.gnu.org>
Date:   Tue Aug 22 15:13:11 2017 -0500

    backport: re PR target/80210 (ICE in in extract_insn, at recog.c:2311 on ppc64 for with __builtin_pow)
    
    gcc/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * config/rs6000/rs6000.c (rs6000_activate_target_options): New function.
            (rs6000_set_current_function): Rewrite function to use it.
    
    gcc/testsuite/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * gcc.target/powerpc/pr80210.c: New test.
    
    From-SVN: r251293

commit 70f0aa4d6db728acf67bb9dec89f2c25c6eba4c5
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue Aug 22 13:59:37 2017 +0000

    [PowerPC/RTEMS] Enable -mcmodel option
    
    gcc/
            * config.gcc (powerpc-*-rtems*): Add rs6000/linux64.opt.
            * config/rs6000/rtems.h (ASM_PREFERRED_EH_DATA_FORMAT): New define.
            (DOT_SYMBOLS): Likewise.
            (MINIMAL_TOC_SECTION_ASM_OP): Likewise.
            (RELOCATABLE_NEEDS_FIXUP): Likewise.
            (RS6000_ABI_NAME): Likewise.
            (TARGET_CMODEL): Likewise.
            (TOC_SECTION_ASM_OP): Likewise.
            (SET_CMODEL): New macro.
            (SUBSUBTARGET_OVERRIDE_OPTIONS): Evaluate cmodel options.
    
    From-SVN: r251277

commit ae34027b9ac5be8f1dfd4b2caa0e434c7f340a25
Author: Yvan Roux <yvan.roux@linaro.org>
Date:   Tue Aug 22 10:51:52 2017 +0000

    backport: re PR c++/80287 (C++ crash with __attribute((may_alias)))
    
    2017-08-22  Yvan Roux  <yvan.roux@linaro.org>
    
            Backport from mainline
            2017-08-22  Yvan Roux  <yvan.roux@linaro.org>
    
            PR c++/80287
            * g++.dg/pr80287.C: New test.
    
    From-SVN: r251273

commit 4525932d399ecd7204ecdfd4beb6e4552f80d939
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 07:55:34 2017 +0000

    backport: re PR target/81910 ([avr] ICE with "address" attribute on type)
    
    gcc/
            Backport from 2017-08-22 trunk r251256.
            PR target/81910
            * config/avr/avr.c (avr_handle_addr_attribute): Early return if
            not VAR_P. Filter attribute warnings with OPT_Wattributes.
            (avr_attribute_table) <io, io_low, address>: Initialize
            .decl_required with true.
    
    From-SVN: r251257

commit 170edbf6e6747d29c58161f3d7ccdd792179d93d
Author: Sebastian Huber <sh@gcc.gnu.org>
Date:   Tue Aug 22 06:16:51 2017 +0000

    [RISC-V/RTEMS] Add missing file
    
    Forgot "svn add".
    
    From-SVN: r251255

commit 8ff869f7140f5b7d9de4052aa616c66b1c98ca49
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 22 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r251252

commit 0f813c9bd7b0ea5bc19a3bd8d6dbfd11041cb48b
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Aug 21 15:08:42 2017 +0100

    * de.po: Update.
    
    From-SVN: r251229

commit 5d6744e9e44440ff4214f9af2f39aeee1f918dc6
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 21 12:42:47 2017 +0000

    re PR target/79883 (avr i18n: untranslated "interrupt" or "signal")
    
            PR target/79883
            * config/avr/avr.c (avr_set_current_function): Typo in diagnostic.
    
    From-SVN: r251224

commit 707bcd1b4f88c32aeb1ec29854db4595619ad460
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 21 00:16:50 2017 +0000

    Daily bump.
    
    From-SVN: r251214

commit 2f9e7a343f5d6a85aa161f8fe100f3ef10a10d76
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Aug 20 19:00:59 2017 +0000

    re PR testsuite/81056 (FAIL: 17_intro/names.cc (test for excess errors))
    
            PR testsuite/81056
            * testsuite/17_intro/names.cc: Undef 'd' and 'r' on __hpux__.
    
    From-SVN: r251209

commit 1f55a00dafb6466704406776d5f2925688fcade5
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Aug 20 18:40:28 2017 +0000

    re PR ipa/77732 (FAIL: gcc.dg/ipa/ipcp-cstagg-7.c scan-ipa-dump-times cp "Discovered an indirect  call to a known target" 3)
    
            PR ipa/77732
            * gcc.dg/ipa/ipcp-cstagg-7.c: Xfail on 32-bit hppa.
    
    From-SVN: r251207

commit 0b66953d010b68cafa415a7d5ec3e4c1663bed6d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 20 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r251204

commit e016034b39d3527e5ca13f4a375eff5c7d801830
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Aug 19 10:22:54 2017 +0200

    re PR target/81894 (Typo in x86 built-in function list)
    
            PR target/81894
            * doc/extend.texi (x86 Built-in Functions): Correct the name of
            __builtin_ia32_lzcnt_u16.
    
    From-SVN: r251198

commit 61ad471aede2045fd378df406bd8bdbecf149e47
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 19 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r251195

commit 1ddec7a687ae09eecb7c5950d8fbdad843dacc49
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Aug 18 21:36:50 2017 +0000

    backport: re PR fortran/80164 (ICE in gfc_format_decoder at gcc/fortran/error.c:933)
    
    2017-08-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80164
            * trans-stmt.c (gfc_trans_call): If no code expr, use code->loc
            as warning/error locus.
    
            * gfortran.dg/array_temporaries_4.f90: New test.
    
    From-SVN: r251189

commit 30a5b0f9bd72c5b0285b4030b6b2d4083962124b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 18 00:16:29 2017 +0000

    Daily bump.
    
    From-SVN: r251177

commit 7355ab54e29b23405c9bd03895d8d640166076c0
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Aug 17 21:37:06 2017 +0200

    backport: re PR target/81861 (ASan pr64820.c testcase segfaults with LTO and -fstack-protector-strong)
    
            Backport from mainline
            2017-08-17  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR target/81861
            * config/i386/i386.c (ix86_option_override_internal): Save target
            specific options after ix86_stack_protector_guard_reg was changed.
    
    From-SVN: r251162

commit e1398837153eb8deedccc34e1c6959d33dd50293
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 17 00:16:33 2017 +0000

    Daily bump.
    
    From-SVN: r251138

commit c07643f22113ac0c336e48999c2f5bba752889dc
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Aug 16 21:21:48 2017 +0100

    * fr.po: Update.
    
    From-SVN: r251132

commit 05d98180cc645d8a848c3137ab2f59a0abf17762
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Aug 16 14:09:15 2017 +0000

    backport: re PR tree-optimization/81354 (Segmentation fault in SSA Strength Reduction using -O3)
    
    [gcc]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Insert on edges rather than explicitly creating landing pads.
            (analyze_candidates_and_replace): Commit edge inserts.
    
    
    [gcc/testsuite]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * g++.dg/torture/pr81354.C: New file.
    
    From-SVN: r251120

commit 2d3a77b853dc7c142187601c1bdb7edc4bdcfbaa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 16 00:18:35 2017 +0000

    Daily bump.
    
    From-SVN: r251112

commit 52caeae857963893482b16f2dc08ab85351cada3
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Aug 16 00:43:11 2017 +0100

    Limit SH strncmp inline expansion (PR target/78460).
    
    GCC mainline built for sh4-linux-gnu runs out of memory building a
    glibc test, which calls strncmp with very large constant size
    argument, resulting in the SH inline strncmp expansion trying to
    inline a fully unrolled expansion of strncmp for that size.
    
    This patch limits that fully unrolled expansion to the case of less
    than 32 bytes.  This is explicitly *not* trying to be optimal in any
    way (very likely a lower threshold makes sense), just to limit enough
    to avoid the out-of-memory issue in the glibc testsuite.
    
    I have *not* run the GCC testsuite for SH.  I have verified that this
    allows the glibc testsuite to build OK, with both GCC mainline and GCC
    7 branch (and that the included test builds quickly with patched GCC,
    runs out of memory with unpatched GCC).
    
            PR target/78460
            PR target/67712
    gcc:
            * config/sh/sh-mem.cc (sh_expand_cmpnstr): Only unroll for
            constant count if that count is less than 32.
    
    gcc/testsuite:
            * gcc.c-torture/compile/string-large-1.c: New test.
    
    From-SVN: r251109

commit 17cc49fdaf2ac29387aee649ae02754a77839eb4
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Aug 15 21:39:11 2017 +0100

    Update .po files.
    
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
    
    From-SVN: r251107

commit 639c1cfb7dc58afa56fee5f749e253b3914dbe4e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Aug 14 13:14:09 2017 +0100

    PR libstdc++/81751 don't call fflush(NULL)
    
    Backport from mainline
    2017-08-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79820
            PR libstdc++/81751
            * config/io/basic_file_stdio.cc (sys_open(FILE*, ios_base::openmode)):
            Call fflush on the stream instead of calling sync() while _M_cfile is
            null. Restore original value of errno.
            * testsuite/ext/stdio_filebuf/char/79820.cc: New.
            * testsuite/ext/stdio_filebuf/char/81751.cc: New.
    
    From-SVN: r251090

commit 3cb1586fa22e5bacad18af4ef3f045188cccedab
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Aug 14 13:14:01 2017 +0100

    PR libstdc++/53984 handle exceptions in basic_istream::sentry
    
    Backport from mainline
    2017-07-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/53984
            * include/bits/basic_ios.h (basic_ios::_M_setstate): Adjust comment.
            * include/bits/istream.tcc (basic_istream::sentry): Handle exceptions
            during construction.
            * include/std/istream: Adjust comments for formatted input functions
            and unformatted input functions.
            * testsuite/27_io/basic_fstream/53984.cc: New.
            * testsuite/27_io/basic_istream/sentry/char/53984.cc: New.
    
    From-SVN: r251089

commit fec6fbfa4c7498f1fe2f40446e0a5349ce4c8932
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Mon Aug 14 08:11:28 2017 +0000

    BASE-VER: Set to 7.2.1.
    
    2017-08-14  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 7.2.1.
    
    From-SVN: r251084

commit 7c645777da50364b1ba41a01285060f7d2f86ec2
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Mon Aug 14 08:04:56 2017 +0000

    BASE-VER: Set to 7.2.1.
    
    2017-08-14  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 7.2.1.
    
    From-SVN: r251083

commit 586a0829dc38626ca27b79e5dd689fae32fc8ca8
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Mon Aug 14 07:59:11 2017 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r251081

commit 254d33e711c85e678d651f922f4b39e7983843f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 14 00:17:14 2017 +0000

    Daily bump.
    
    From-SVN: r251079

commit 001d260c9fcbdfd2c339986680a16d87c5120d1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 13 00:16:52 2017 +0000

    Daily bump.
    
    From-SVN: r251071

commit ae84d10bd57c9706f11a64a82b85d6e2742267f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 12 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r251063

commit 9da4bcd1e265ec3d9357b74172de5eb46b537387
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 11 00:17:16 2017 +0000

    Daily bump.
    
    From-SVN: r251044

commit df62872c567927d3a95169044b1b6fde2adbe5a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 10 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r251016

commit 5b6f97c9a7e23f6513e84d20abd19d459011fe77
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Wed Aug 9 16:18:59 2017 -0400

    Revert "PR c++/81525 - wrong constant value with generic lambda"
    
    From-SVN: r251002

commit c02c8b11e164417e9aee3aab5778440b2e028cca
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Aug 9 16:17:55 2017 -0400

    PR c++/81525 - wrong constant value with generic lambda
    
            * pt.c (tsubst_decl) [VAR_DECL]: Avoid clobbering auto.
            (tsubst_copy) [VAR_DECL]: Handle auto.
    
    From-SVN: r251001

commit abe0604c18672507259502909bb205df9a43eeca
Author: Leonid Koppel <lkoppel@uwaterloo.ca>
Date:   Wed Aug 9 20:17:47 2017 +0000

    PR c++/67054 - Inherited ctor with non-default-constructible members
    
            * method.c (walk_field_subobs) Consider member initializers (NSDMIs)
            when deducing an inheriting constructor.
    
    From-SVN: r251000

commit adc61e57b39b4d5fa10348544efff2a1264fdf18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 9 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r250982

commit 783f5cb4ca9520a7be62c4cfd6860534bb00e068
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Aug 8 13:21:12 2017 +0000

    re PR target/81766 (ICE in maybe_add_or_update_dep_1, at sched-deps.c:924 caused by r250815)
    
    2017-08-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81766
            * function.c (thread_prologue_and_epilogue_insns): Restore
            behavior of always calling find_many_sub_basic_blocks on
            the inserted prologue.
    
            * gcc.target/i386/pr81766.c: New testcase.
    
    From-SVN: r250958

commit 77ed870464221a0d6bee239ce3afa09771a85f90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 8 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r250939

commit 73e760fb788fe97c992e4bb201605d0d819e0468
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Aug 7 16:56:22 2017 +0100

    * es.po: Update.
    
    From-SVN: r250922

commit a00058a94f8cd77eed723e8b6a4c062228e2ede2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 7 00:16:31 2017 +0000

    Daily bump.
    
    From-SVN: r250907

commit e6977a24a2ce56ba9403ec2c85d993ff622ce422
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 6 00:16:48 2017 +0000

    Daily bump.
    
    From-SVN: r250893

commit f395ad73e544b4c15f5f12eb4b2f3fb2951d3378
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 5 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250888

commit 72a42200568f31ddea8c67f9dedd97499bd366a3
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Aug 4 23:18:39 2017 +0100

    * gcc.pot: Regenerate.
    
    From-SVN: r250884

commit b197d7f140a1541a46b4f903194932b617248dfc
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Aug 4 12:29:55 2017 +0000

    re PR go/81617 (mksigtab.sh fails to resolve NSIG with glibc 2.26)
    
            PR go/81617
        libgo: change mksigtab to recognize glibc 2.26 NSIG expression
    
        Fixes golang/go#21147
        Fixes GCC PR 81617
    
        Reviewed-on: https://go-review.googlesource.com/52611
    
    From-SVN: r250872

commit f188e7aca34e5b8b7119a0143b5b737467a9722a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 4 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250863

commit 4dd8a3d659a26e2dcd4092d804d3ccbeef4ccc9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 3 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r250840

commit 83a6ca99c3fc7db74218bebb567d93a4cb962ede
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Wed Aug 2 16:27:42 2017 +0000

    compiler: only finalize embedded fields before finalizing methods
    
        When finalizing the methods of a named struct type, we used to
        finalize all the field types first.  That can fail if the field types
        refer indirectly to the named type.  Change it to just finalize the
        embedded field types first, and the rest of the fields later.
    
        Fixes golang/go#21253
    
        Reviewed-on: https://go-review.googlesource.com/52570
    
    From-SVN: r250833

commit 14098669c6e87745783f984de02e8febc7a4df97
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Aug 2 15:02:50 2017 +0200

    funcspec-56.inc (no_3dnowa): Properly test "no-3dnowa" target attribute.
    
            * gcc.target/i386/funcspec-56.inc (no_3dnowa): Properly
            test "no-3dnowa" target attribute.
    
    From-SVN: r250827

commit 308c5a653449e14763fc69eadd2f19cd584abfac
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Aug 2 12:27:24 2017 +0200

    re PR tree-optimization/81655 (new test case gcc.dg/tree-ssa/pr81588.c fails on powerpc64)
    
            PR tree-optimization/81655
            PR tree-optimization/81588
            * gcc.dg/tree-ssa/pr81588.c: Use -mbranch-cost=2 where possible,
            don't run the test on branch-cost=1 targets.
    
    From-SVN: r250819

commit b396c654898aaedadc90e27c267fa38218d5d427
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Aug 2 09:26:46 2017 +0200

    re PR middle-end/79499 (ICE in rtl_verify_bb_insns, at cfgrtl.c:2661)
    
            PR middle-end/79499
            * function.c (thread_prologue_and_epilogue_insns): Determine blocks
            for find_many_sub_basic_blocks bitmap by looking up BLOCK_FOR_INSN
            of first NONDEBUG_INSN_P in each of the split_prologue_seq and
            prologue_seq sequences - if any.
    
            * gcc.dg/pr79499.c: New test.
    
    From-SVN: r250815

commit 31aa0bad3e7aa4bd8e3b0f9cc82ac6d2d0335e56
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 2 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r250809

commit df88d34b9cd0de020da709c7750299cfe1b250b6
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Aug 2 00:44:37 2017 +0100

    * fr.po: Update.
    
    From-SVN: r250806

commit 5ed13b67d0b0811ac5132eb0e37db124b1a17f24
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Aug 2 00:06:11 2017 +0200

    re PR target/81641 (Assemble failure with named address spaces and -masm=intel)
    
            PR target/81641
            * config/i386/i386.c (ix86_print_operand_address_as): For -masm=intel
            print "ds:" only for immediates in generic address space.
    
    testsuite/ChangeLog:
    
            PR target/81641
            * gcc.target/i386/pr81641.c: New test.
    
    From-SVN: r250801

commit c49cb08753d3d34bbb99ddb45d089417abcc6b1c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Aug 1 18:44:17 2017 +0200

    re PR target/81622 (ICE on invalid altivec code with ppc64{,le})
    
            PR target/81622
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): For
            __builtin_vec_cmpne verify both arguments are compatible vectors
            before looking at TYPE_MODE on the element type.  For __builtin_vec_ld
            verify arg1_type is a pointer or array type.  For __builtin_vec_st,
            move computation of aligned to after checking the argument types.
            Formatting fixes.
    
            * gcc.target/powerpc/pr81622.c: New test.
    
    From-SVN: r250787

commit d124e3d61ca549310e598665c6505cdfd48c0fd3
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Aug 1 16:49:54 2017 +0200

    Fix segfault in gcov.c (PR gcov-profile/81561).
    
    2017-08-01  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-26  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/81561
            * gcov.c (unblock): Make unblocking safe as we need to preserve
            index correspondence of blocks and block_lists.
    
    From-SVN: r250782

commit d90e0fb9aeaed77896852a10e0f069f364bcf464
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Aug 1 13:58:13 2017 +0000

    re PR tree-optimization/71752 (ICE in compute_live_loop_exits, at tree-ssa-loop-manip.c:229 w/ -O1 -ftree-vectorize)
    
    2017-08-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71752
            PR tree-optimization/81633
            * tree-vect-slp.c (vect_get_slp_defs): Handle null operands
            in the original suggested way.
    
            * gcc.dg/vect/pr81633.c: New testcase.
    
    From-SVN: r250779

commit 2d55c24f77c3bf60b75e68a01d53a937aa357014
Author: Richard Sandiford <richard.sandiford@linaro.org>
Date:   Tue Aug 1 12:22:03 2017 +0000

    Backport fix for PR 80769
    
    2017-08-01  Richard Sandiford  <richard.sandiford@linaro.org>
    
    gcc/
            PR tree-optimization/80769
            * tree-ssa-strlen.c (strinfo): Document that "stmt" is also used
            for malloc and calloc.  Document the new invariant that all related
            strinfos have delayed lengths or none do.
            (get_next_strinfo): New function.
            (verify_related_strinfos): Move earlier in file.
            (set_endptr_and_length): New function, split out from...
            (get_string_length): ...here.  Also set the lengths of related
            strinfos.
    
    gcc/testsuite/
            PR tree-optimization/80769
            * gcc.dg/strlenopt-31.c: New test.
            * gcc.dg/strlenopt-31g.c: Likewise.
    
    From-SVN: r250772

commit fb700fcbf057cf3e538c5a23baa2c13d3acd263b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Aug 1 10:43:45 2017 +0200

    re PR tree-optimization/81588 (Wrong code at -O2)
    
            PR tree-optimization/81588
            * tree-ssa-reassoc.c (optimize_range_tests_var_bound): If
            ranges[i].in_p, invert comparison code ccode.  For >/>=,
            swap rhs1 and rhs2 and comparison code unconditionally,
            for </<= don't do that.  Don't swap rhs1/rhs2 again if
            ranges[i].in_p, instead invert comparison code ccode if
            opcode or oe->rank is BIT_IOR_EXPR.
    
            * gcc.dg/tree-ssa/pr81588.c: New test.
            * gcc.dg/pr81588.c: New test.
            * gcc.c-torture/execute/pr81588.c: New test.
    
    From-SVN: r250761

commit 6277010eca652249cd8cd39dbef5f985a2135d5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 1 00:16:26 2017 +0000

    Daily bump.
    
    From-SVN: r250755

commit 5fd0db72efefa15e99dc48144c8f5fc19b47e51c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jul 31 16:51:07 2017 +0100

    * es.po, uk.po: Update.
    
    From-SVN: r250748

commit 8a9a2371a72a572360a11bf25bfc4e3ac1186bca
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Mon Jul 31 11:33:18 2017 +0000

    [Committed] S/390: Support z14 as CPU name.
    
    With IBM z14 officially announced we can add support for z14 as
    preferred CPU name.  We still pass arch12 to Binutils in order to keep
    older Binutils versions supported.
    
    gcc/ChangeLog:
    
    2017-07-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-07-31  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config.gcc: Add z14.
            * config/s390/driver-native.c (s390_host_detect_local_cpu): Add
            CPU model numbers for z13s and z14.
            * config/s390/s390-c.c (s390_resolve_overloaded_builtin): Replace
            arch12 with z14.
            * config/s390/s390-opts.h (enum processor_type): Rename
            PROCESSOR_ARCH12 to PROCESSOR_3906_Z14.
            * config/s390/s390.c (processor_table): Add field for CPU name to
            be passed to Binutils.
            (s390_asm_output_machine_for_arch): Use the new field in
            processor_table for Binutils.
            (s390_expand_builtin): Replace arch12 with z14.
            (s390_issue_rate): Rename PROCESSOR_ARCH12 to PROCESSOR_3906_Z14.
            (s390_get_sched_attrmask): Likewise.
            (s390_get_unit_mask): Likewise.
            * config/s390/s390.opt: Add z14 to processor_type enum.
    
    From-SVN: r250740

commit 9e4de329b1e21a5f701702b37be2ee79fe7938b0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 31 10:46:29 2017 +0200

    re PR sanitizer/81604 (Ubsan type reporting can be bogus in some cases)
    
            PR sanitizer/81604
            * ubsan.c (ubsan_type_descriptor): For UBSAN_PRINT_ARRAY don't
            change type to the element type, instead add eltype variable and
            use it where we are interested in the element type.
    
            * c-c++-common/ubsan/pr81604.c: New test.
    
    From-SVN: r250729

commit 6c9d51255db98de87735450d7a8cfddc558802e0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 31 00:16:42 2017 +0000

    Daily bump.
    
    From-SVN: r250724

commit ac02624698e8f869acdea906203156b67f3803e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 30 00:16:30 2017 +0000

    Daily bump.
    
    From-SVN: r250717

commit dfb1c7274f2bb2034efed156069b339ee56cf1ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 29 00:16:35 2017 +0000

    Daily bump.
    
    From-SVN: r250692

commit 7a4b10a14fe9cc687fb098750438bd70139cee5b
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Fri Jul 28 17:29:31 2017 -0500

    backport: ppc-auxv.h (PPC_FEATURE2_DARN): New define.
    
    gcc/
            Backport from mainline
            2017-07-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/ppc-auxv.h (PPC_FEATURE2_DARN): New define.
            (PPC_FEATURE2_SCV): Likewise.
            * config/rs6000/rs6000.c (cpu_supports_info): Use them.
    
    gcc/testsuite/
            Backport from mainline
            2017-07-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            * gcc.target/powerpc/cpu-builtin-1.c (darn, scv): Add tests.
    
    From-SVN: r250688

commit fc626ac32f5039c38cad0d9caf6e6593acbeef9f
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Fri Jul 28 13:25:40 2017 +0000

    backport: dwarf2asm.c (dw2_asm_output_nstring): Encode double quote character for AIX.
    
    Backport from mainline
    2017-07-25  David Edelsohn  <dje.gcc@gmail.com>
    
            * dwarf2asm.c (dw2_asm_output_nstring): Encode double quote
            character for AIX.
            * dwarf2out.c (output_macinfo): Copy debug_line_section_label
            to dl_section_ref.  On AIX, append an expression to subtract
            the size of the section length to dl_section_ref.
    
    From-SVN: r250663

commit c2ca7b74ce417524422250005998df21a37b8993
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Fri Jul 28 11:13:45 2017 +0000

    backport: re PR target/81414 (ICE in fma steering on AArch64/cortex-a57)
    
            Backport from mainline r250496
            2017-07-25  Bin Cheng  <bin.cheng@arm.com>
    
            PR target/81414
            * config/aarch64/cortex-a57-fma-steering.c (analyze): Skip fmul/fmac
            instructions if no du chain is found.
    
            * gcc.target/aarch64/pr81414.C: New.
    
    From-SVN: r250657

commit 3df4b03a3775308fe2bcd0c9e25242d0fc124e26
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Fri Jul 28 08:20:50 2017 +0000

    [PowerPC/RTEMS] Add 64-bit support using ELFv2 ABI
    
    Add 64-bit support for RTEMS using the ELFv2 ABI with 64-bit long
    double.
    
    gcc/
            * config.gcc (powerpc-*-rtems*): Remove rs6000/eabi.h.  Add
            rs6000/biarch64.h.
            * config/rs6000/rtems.h (ASM_DECLARE_FUNCTION_SIZE): New macro.
            (ASM_OUTPUT_SPECIAL_POOL_ENTRY_P): Likewise.
            (CRT_CALL_STATIC_FUNCTION): Likewise.
            (ASM_DEFAULT_SPEC): New define.
            (ASM_SPEC32): Likewise.
            (ASM_SPEC64): Likewise.
            (ASM_SPEC_COMMON): Likewise.
            (ASM_SPEC): Likewise.
            (INVALID_64BIT): Likewise.
            (LINK_OS_DEFAULT_SPEC): Likewise.
            (LINK_OS_SPEC32): Likewise.
            (LINK_OS_SPEC64): Likewise.
            (POWERPC_LINUX): Likewise.
            (PTRDIFF_TYPE): Likewise.
            (RESTORE_FP_PREFIX): Likewise.
            (RESTORE_FP_SUFFIX): Likewise.
            (SAVE_FP_PREFIX): Likewise.
            (SAVE_FP_SUFFIX): Likewise.
            (SIZE_TYPE): Likewise.
            (SUBSUBTARGET_OVERRIDE_OPTIONS): Likewise.
            (TARGET_64BIT): Likewise.
            (TARGET_64BIT): Likewise.
            (TARGET_AIX): Likewise.
            (WCHAR_TYPE_SIZE): Likewise.
            (WCHAR_TYPE): Undefine.
            (TARGET_OS_CPP_BUILTINS): Add 64-bit PowerPC defines.
            (CPP_OS_DEFAULT_SPEC): Use previous CPP_OS_RTEMS_SPEC.
            (CPP_OS_RTEMS_SPEC): Delete.
            (SUBSUBTARGET_EXTRA_SPECS): Remove cpp_os_rtems.  Add
            asm_spec_common, asm_spec32, asm_spec64, link_os_spec32, and
            link_os_spec64.
            * config/rs6000/t-rtems: Add mcpu=e6500/m64 multilibs.
    
    libgcc/
            * config/rs6000/ibm-ldouble.c: Disable if defined __rtems__.
    
    From-SVN: r250654

commit 438c40546f811e85641e97d958ae06236d92d167
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Fri Jul 28 06:06:37 2017 +0000

    [RISC-V] Add RTEMS support
    
    gcc/
            * config.gcc (riscv*-*-elf*): Add (riscv*-*-rtems*).
            * config/riscv/rtems.h: New file.
    
    From-SVN: r250649

commit e5180504c2f7e0f8090eac37a37a0b1500ab8cc3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 28 00:16:29 2017 +0000

    Daily bump.
    
    From-SVN: r250646

commit 31722be4adffad78e1ea0f46b03cac92e416ca2a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jul 27 12:57:23 2017 +0000

    sparc.c (sparc_option_override): Set MASK_FSMULD flag earlier and only if MASK_FPU is set.
    
            * config/sparc/sparc.c (sparc_option_override): Set MASK_FSMULD flag
            earlier and only if MASK_FPU is set.  Adjust formatting.
    
    From-SVN: r250624

commit 3c8aa2bdcb0afe6e06ec5f84fa7500081a3557df
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jul 27 10:42:22 2017 +0000

    S/390: Fix PR81534
    
    The HI/QI atomic_fetch_<atomic><mode>" expander accepted symbolic
    references and emitted CAS patterns whose insn predicates rejected them.
    
    Fixed by allowing symbolic references there as well.  Reload will get
    rid of them due to the constraint letter.
    
    Regression tested on s390x.
    
    gcc/ChangeLog:
    
    2017-07-27  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-07-27  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/81534
            * config/s390/s390.md ("*atomic_compare_and_swap<mode>_1")
            ("*atomic_compare_and_swapdi_2", "*atomic_compare_and_swapsi_3"):
            Change s_operand to memory_operand.
    
    gcc/testsuite/ChangeLog:
    
    2017-07-27  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-07-27  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/81534
            * gcc.target/s390/pr81534.c: New test.
    
    From-SVN: r250618

commit f5e245835acd3bdf83f5089dd54b587ace23a095
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Jul 27 09:36:37 2017 +0000

    re PR c++/71570 (ICE on invalid variable capture in cxx_incomplete_type_diagnostic, at cp/typeck2.c:55)
    
    /cp
    2017-07-27  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71570
            * lambda.c (add_capture): Early return if we cannot capture by
            reference.
    
    /testsuite
    2017-07-27  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71570
            * g++.dg/cpp0x/lambda/lambda-ice17.C: New.
    
    From-SVN: r250614

commit 26590fc68b673614c36153407ab1261d59e2f612
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 27 11:06:08 2017 +0200

    re PR tree-optimization/81555 (Wrong code at -O1)
    
            PR tree-optimization/81555
            PR tree-optimization/81556
            * tree-ssa-reassoc.c (rewrite_expr_tree): Add NEXT_CHANGED argument,
            if true, force CHANGED for the recursive invocation.
            (reassociate_bb): Remember original length of ops array, pass
            len != orig_len as NEXT_CHANGED in rewrite_expr_tree call.
    
            * gcc.c-torture/execute/pr81555.c: New test.
            * gcc.c-torture/execute/pr81556.c: New test.
    
    From-SVN: r250610

commit 01cee9757022cd488a83b32481872ac9f14bde0f
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jul 27 10:38:35 2017 +0200

    Subject: Backport r250271
    
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-17  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81302
            * opts.c (finish_options): Do not allow -fgnu-tm
            w/ -fsanitize={kernel-,}address.  Say sorry.
    
    From-SVN: r250608

commit 4dad7c1d134f60c7e2fd3831b523d4824c87c471
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jul 27 09:32:53 2017 +0200

    Backport r250561
    
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-26  Martin Liska  <mliska@suse.cz>
    
            PR sanitize/81186
            * function.c (expand_function_start): Make expansion of
            nonlocal_goto_save_area after parm_birth_insn.
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-26  Martin Liska  <mliska@suse.cz>
    
            PR sanitize/81186
            * gcc.dg/asan/pr81186.c: New test.
    
    From-SVN: r250605

commit da7b783895708b802d02baaba9e5f3030170a1e1
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jul 27 09:32:15 2017 +0200

    Backport r249833
    
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-30  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81021
            * tree-eh.c (lower_resx): Call BUILT_IN_ASAN_HANDLE_NO_RETURN
            before BUILT_IN_UNWIND_RESUME when ASAN is used.
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-30  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81021
            * g++.dg/asan/pr81021.C: New test.
    
    From-SVN: r250604

commit 7d3d0ac762e9146b2efbbbc9d0c01fa06bca3598
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jul 27 09:31:19 2017 +0200

    Backport r249728
    
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * asan.c (instrument_derefs): Bail out inner references
            that are hard register variables.
    2017-07-27  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * gcc.dg/asan/pr81224.c: New test.
    
    From-SVN: r250603

commit ec2af726ed4eee97612f1df9da987e4e1a719b6c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 27 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r250600

commit 25827259296fee9930e0e72325875a7c3f4035c4
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Wed Jul 26 12:42:03 2017 +0000

    [SPARC] Add -mfsmuld option
    
    Add the -mfsmuld option to control the generation of the FsMULd
    instruction.  In general, this instruction is available in architecture
    version V8 and V9 CPUs with FPU.  Some CPUs of this category do not
    support this instruction properly, e.g. AT697E, AT697F and UT699.  Some
    CPUs of this category do not implement it in hardware, e.g. LEON3/4 with
    GRFPU-lite.
    
    gcc/
            * config/sparc/sparc.c (dump_target_flag_bits): Dump MASK_FSMULD.
            (sparc_option_override): Honour MASK_FSMULD.
            * config/sparc/sparc.h (MASK_FEATURES): Add MASK_FSMULD.
            * config/sparc/sparc.md (muldf3_extend): Use TARGET_FSMULD.
            * config/sparc/sparc.opt (mfsmuld): New option.
            * doc/invoke.texi (mfsmuld): Document option.
    
    From-SVN: r250571

commit ead42435e71f0a476bc866a272b90efa1b9894a4
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Wed Jul 26 11:57:57 2017 +0000

    Disable pr79041-2.c with -mabi=ilp32.
    
        gcc/testsuite/
            PR target/79041
            * gcc.target/aarch64/pr79041-2.c: Don't run in ILP32.
    
    From-SVN: r250569

commit 1f80d8f1c29e6f27f51b62056f1343cc80dd29aa
Author: Georg-Johann Lay <gjl@gcc.gnu.org>
Date:   Wed Jul 26 09:01:53 2017 +0000

    Typo.
    
    From-SVN: r250563

commit cb42c9b08e30fb045c6db87f43677752247f589b
Author: Georg-Johann Lay <gjl@gcc.gnu.org>
Date:   Wed Jul 26 08:58:37 2017 +0000

    backport: re PR lto/81487 ([mingw32] ld.exe: error: asprintf failed)
    
    lto-plugin/
            Backport from 2017-07-21 trunk r250428.
            PR lto/81487
            * lto-plugin.c (claim_file_handler): Use xasprintf instead of
            asprintf.
            [hi!=0]: Swap hi and lo arguments supplied to xasprintf.
    gcc/
            Backport from 2017-07-25 trunk r250499.
            PR 81487
            * hsa-brig.c (brig_init): Use xasprintf instead of asprintf.
            * gimple-pretty-print.c (dump_probability): Same.
            * tree-ssa-structalias.c (alias_get_name): Same.
    
    From-SVN: r250562

commit 259828e6c7afd612fe485772441ef5e62ef626cb
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jul 26 08:36:34 2017 +0000

    Backport PRs 80721, 81175, 81410, 81455, 81505
    
    2017-07-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-06-02  Richard Biener  <rguenther@suse.de>
                    Markus Eisenmann  <meisenmann.lba@fh-salzburg.ac.at>
    
            PR libstdc++/80721
            * libsupc++/eh_alloc.cc (pool::free): Keep list properly
            sorted and add missing freelist item merging cases.
    
            2017-06-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81410
            * tree-vect-stmts.c (vectorizable_load): Properly adjust for
            the gap in the ! slp_perm SLP case after each group.
    
            * gcc.dg/vect/pr81410.c: New testcase.
    
            2017-07-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81455
            * tree-ssa-loop-unswitch.c (find_loop_guard): Make sure to
            not walk in cycles when looking for guards.
    
            * gcc.dg/pr81455.c: New testcase.
    
            2017-07-25  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81505
            * fold-const.c (fold_negate_const): TREE_OVERFLOW should be
            sticky.
    
            * gcc.dg/ubsan/pr81505.c: New testcase.
    
            2017-07-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81175
            * gcc.target/i386/pr69255-2.c (foo): Use the return value of the
            gather.
    
            2017-06-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81175
            * config/i386/i386.c (ix86_init_mmx_sse_builtins): Use def_builtin
            rather than def_builtin_pure for __builtin_ia32_gatherpf*.
    
            2017-06-26  Richard Biener  <rguenther@suse.de>
    
            PR target/81175
            * config/i386/i386.c (ix86_init_mmx_sse_builtins):
            Use def_builtin_pure for all gather builtins.
    
            * gfortran.dg/pr81175.f: New testcase.
    
            2017-06-21  Marc Glisse  <marc.glisse@inria.fr>
    
            * config/i386/i386.c (struct builtin_isa): New field pure_p.
            Reorder for compactness.
            (def_builtin, def_builtin2, ix86_add_new_builtins): Handle pure_p.
            (def_builtin_pure, def_builtin_pure2): New functions.
            (ix86_init_mmx_sse_builtins) [__builtin_ia32_stmxcsr]: Mark as pure.
    
            * gcc.dg/tree-ssa/addadd.c: Un-XFAIL.
            * gcc.dg/tree-ssa/addadd-2.c: New file.
    
    From-SVN: r250560

commit 2c88b546bc560e0fa3ae3ddbb2ab2bdc1318aded
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Wed Jul 26 08:32:41 2017 +0000

    [SPARC] Drop superfluous MASK_FPU enable
    
    All TARGET_DEFAULT defines set MASK_FPU.  There is no need to set it in
    some CPU target flags enable.
    
    gcc/
            * config/sparc/sparc.c (sparc_option_override): Remove MASK_FPU
            from all CPU target flags enable members.
    
    From-SVN: r250559

commit 145e8bfade1272d95ac26879505ca39d656f2327
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Wed Jul 26 08:31:09 2017 +0000

    [RTEMS] Add GCC Runtime Library Exception
    
    gcc/
            PR libgcc/61152
            * config/aarch64/rtems.h: Add GCC Runtime Library Exception.
            Format changes.
            * config/arm/rtems.h: Likewise.
            * config/bfin/rtems.h: Likewise.
            * config/i386/rtemself.h: Likewise.
            * config/lm32/rtems.h: Likewise.
            * config/m32c/rtems.h: Likewise.
            * config/m68k/rtemself.h: Likewise.
            * config/microblaze/rtems.h: Likewise.
            * config/mips/rtems.h: Likewise.
            * config/moxie/rtems.h: Likewise.
            * config/nios2/rtems.h: Likewise.
            * config/rs6000/rtems.h: Likewise.
            * config/rtems.h: Likewise.
            * config/sh/rtems.h: Likewise.
            * config/sh/rtemself.h: Likewise.
            * config/sparc/rtemself.h: Likewise.
    
    From-SVN: r250558

commit 6e8da31609581aee4872e8317bb0dd1c6650032a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 26 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250553

commit db1f03b6f7bfb3c2635eeec3eda2c03ef04396ab
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jul 25 19:40:50 2017 +0000

    backport: re PR tree-optimization/81162 (UBSAN switch triggers incorrect optimization in SLSR)
    
    [gcc]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Don't
            replace a negate with an add.
    
    [gcc/testsuite]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gcc.dg/ubsan/pr81162.c: New file.
    
    From-SVN: r250542

commit 371868a847ee17477710ed39beddcfa82eb6363f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:05:25 2017 +0100

    Support move-only deleters in std::shared_ptr (LWG 2802)
    
    Backport from mainline
    2017-06-09  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/intro.xml: Document LWG 2802, 2873 and 2942 changes.
            * include/bits/shared_ptr.h (shared_ptr): Use rvalues for deleters
            (LWG 2802).
            * include/bits/shared_ptr_base.h (_Sp_ebo_helper, _Sp_counted_deleter
            (_Sp_counted_deleter::_Impl, __shared_count, __shared_ptr): Likewise.
            * testsuite/20_util/shared_ptr/cons/lwg2802.cc: New.
    
    From-SVN: r250541

commit dea4c7435c6ae893abd4218f44147b212855d18d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:05:19 2017 +0100

    Add noexcept to shared_ptr owner comparisons (LWG 2873)
    
    Backport from mainline
    2017-06-05  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/shared_ptr_base.h (__shared_ptr::owner_before)
            (__weak_ptr::owner_before, _Sp_owner_less::operator()): Add noexcept
            specifiers as per LWG 2873 and LWG 2942.
            * testsuite/20_util/owner_less/noexcept.cc: New.
            * testsuite/20_util/shared_ptr/observers/owner_before.cc: Test
            noexcept guarantees.
            * testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.
    
    From-SVN: r250540

commit b65b2273620445aabac5143aa2b20df0fdd91d63
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:05:13 2017 +0100

    PR libstdc++/80553 don't allow destroying non-destructible types
    
    Backport from mainline
    2017-04-28  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80553
            * include/bits/stl_construct.h (_Destroy, _Destroy_n): Add static
            assertions to ensure type is destructible.
            (destroy_at, destroy, destroy_n): Move from stl_uninitialized.h.
            * include/bits/stl_uninitialized.h (destroy_at, destroy, destroy_n):
            Move to stl_construct.h.
            * testsuite/20_util/specialized_algorithms/memory_management_tools/
            destroy_neg.cc: New test.
            * testsuite/23_containers/vector/cons/destructible_neg.cc: New test.
    
    From-SVN: r250539

commit 0182e8bb7baea4602c9894e6807acae5f6b14386
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:05:07 2017 +0100

    Implement std::experimental::source_location (N4519)
    
    Backport from mainline
    2017-05-16  Jonathan Wakely  <jwakely@redhat.com>
    
            * configure: Regenerate.
            * doc/xml/manual/status_cxx2017.xml: Update status table.
            * doc/html/*: Regenerate.
            * include/Makefile.am: Add new header.
            * include/Makefile.in: Regenerate.
            * include/experimental/source_location: New header implementing N4519.
            * testsuite/experimental/source_location/1.cc: New test.
    
    From-SVN: r250538

commit 6c018e95a47034ee688384d50d5090ba69a1b329
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:59 2017 +0100

    Prevent __uses_alloc from holding dangling references
    
    Backport from mainline
    2017-07-06  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/uses_allocator.h (__use_alloc(const _Alloc&&)): Add
            deleted overload to prevent dangling references to rvalues.
            * include/experimental/memory_resource
            (polymorphic_allocator::construct): Do not call __use_alloc with
            rvalue arguments.
    
    From-SVN: r250537

commit 2f484ee274dc8aef21513468cb328ecbdf6a096f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:54 2017 +0100

    PR libstdc++/81017 add noexcept to std::function move operations
    
    Backport from mainline
    2017-06-08  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81017
            * include/bits/std_function.h (function::function(function&&))
            (function::operator=(funtion&&)): Add noexcept.
            * testsuite/20_util/function/assign/move.cc: Check for noexcept.
            * testsuite/20_util/function/cons/move.cc: Likewise.
    
    From-SVN: r250536

commit efafffd0565bda1c7cd8a42878d2f5df4d8a53c1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:44 2017 +0100

    Reorder std::scoped_lock parameters as per P0739R0 DR status
    
    Backport from mainline
    2017-07-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/mutex (scoped_lock): Reorder std::adopt_lock_t parameter
            as per P0739R0.
            * testsuite/30_threads/scoped_lock/cons/1.cc: Reorder arguments.
            * testsuite/30_threads/scoped_lock/cons/deduction.cc: Test deduction
            with std::adopt_lock_t.
            * testsuite/30_threads/scoped_lock/requirements/typedefs.cc: Check
            feature-test macro.
    
    From-SVN: r250535

commit 8b6fb0e81fe536286435d24ded1b6d33002d9f02
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:38 2017 +0100

    Constrain std::variant constructor for class template argument deduction
    
    Backport from mainline
    2017-07-14  Jason Merrill  <jason@redhat.com>
        Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/variant (variant::variant(_Tp&&)): Constrain to remove
            the constructor for empty variants from the candidate functions
            during class template argument deduction.
            * testsuite/20_util/variant/deduction.cc: New.
    
    From-SVN: r250534

commit 65cc9573658b0ede85da93992583e654a3e87ec4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:32 2017 +0100

    PR libstdc++/80939 Remove unmeetable constexpr specifiers
    
    Backport from mainline
    2017-06-02  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80939
            * include/std/variant (__erased_ctor, __erased_assign, __erased_swap)
            (__erased_hash): Remove constexpr specifier and qualify calls to
            __ref_cast.
            (__erased_dtor): Remove constexpr specifier and use _Destroy.
    
    From-SVN: r250533

commit e83fef1f151e0a5c9f18b4cfec8a2f0ad414c7df
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 25 19:04:27 2017 +0100

    PR libstdc++/80737 backport std::variant fix from mainline
    
    Backport from mainline
    2017-05-20  Tim Shen  <timshen@google.com>
    
            PR libstdc++/80737
            * include/std/variant(variant::variant): SFINAE on is_same first.
            * testsuite/20_util/variant/any.cc: test case.
    
    From-SVN: r250532

commit 1e0bc913455f9ef48e3813b05b8fe45002daedfb
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jul 25 14:32:30 2017 +0000

    backport: re PR target/81407 ([avr] Diagnose if a variable in progmem needs constructing.)
    
    gcc/
            Backport from 2017-07-12 trunk r250151.
            PR target/81407
            * config/avr/avr.c (avr_encode_section_info)
            [progmem && !TREE_READONLY]: Error if progmem object needs
            constructing.
    
    From-SVN: r250522

commit ca73e1b3d3c74a7f0d3c288db1e050ce01b04d48
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Tue Jul 25 12:08:59 2017 +0000

    re PR target/79041 (aarch64 backend emits R_AARCH64_ADR_PREL_PG_HI21 relocation despite -mpc-relative-literal-loads option being used)
    
    Fix PR79041
    
    As described in PR79041, -mcmodel=large -mpc-relative-literal-loads
    may be used to avoid generating ADRP/ADD or ADRP/LDR.  However both
    trunk and GCC7 may still emit ADRP for some constant pool literals.
    Fix this by adding a aarch64_pcrelative_literal_loads check.
    
        gcc/
            PR target/79041
            * config/aarch64/aarch64.c (aarch64_classify_symbol):
            Avoid SYMBOL_SMALL_ABSOLUTE for literals with pc-relative literals.
        gcc/testsuite/
            * gcc.target/aarch64/pr79041-2.c: New test.
    
    From-SVN: r250514

commit 7db1c40d36d815cb630021f996ad16619ad11906
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jul 25 11:39:23 2017 +0000

    backport: re PR rtl-optimization/75964 (insn combiner removes comparison after ABS)
    
    gcc/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * simplify-rtx.c (simplify_const_relational_operation): Remove
            invalid handling of comparisons of integer ABS.
    gcc/testsuite/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * gcc.dg/torture/pr75964.c: New test.
    
    From-SVN: r250509

commit 16ac9369b0741666f82391db187a5536e16d3638
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Tue Jul 25 08:56:26 2017 +0000

    backport: re PR tree-optimization/81388 (Incorrect code generation with -O1)
    
            Backport from 2017-07-20 trunk r250384.
    
            PR tree-optimization/81388
            Revert r238585:
            2016-07-21  Bin Cheng  <bin.cheng@arm.com>
    
            * tree-ssa-loop-niter.c (number_of_iterations_lt_to_ne): Clean up
            by removing computation of may_be_zero.
    
            gcc/testsuite
            PR tree-optimization/81388
            * gcc.dg/tree-ssa/pr81388-1.c: New test.
            * gcc.dg/tree-ssa/pr81388-2.c: New test.
    
    From-SVN: r250497

commit cc30cfd55376d8b0e30fea890da5fe76bbe719a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 25 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250492

commit a5855a06f1d3190ac63e1206737d2bb3d72f4cc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 24 00:16:43 2017 +0000

    Daily bump.
    
    From-SVN: r250469

commit 0c9fcbd9a71a090b1d26d3336df8eaf9d9a74556
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Jul 23 12:33:08 2017 +0200

    re PR target/80569 (i686: "shrx" instruction generated in 16-bit mode)
    
            PR target/80569
            * config/i386/i386.c (ix86_option_override_internal): Disable
            BMI, BMI2 and TBM instructions for -m16.
    
    testsuite/ChangeLog:
    
            PR target/80569
            * gcc.target/i386/pr80569.c: New test.
    
    From-SVN: r250460

commit c381b93d38b34ab0e3b6f35934dbb7254196b23c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 23 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r250456

commit dec9183cec46b40c1c9be489fbedd7cdf0932b15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 22 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r250449

commit 3de5d63909a9dc3a0f32920b64b1aba60d278aaa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 21 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250411

commit c72684a4e75865a83f81c7294d345f81a8b54696
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Thu Jul 20 22:03:26 2017 +0000

    re PR go/81393 (Bootstrap failure on s390x-linux while building libgo against recent glibc)
    
            PR go/81393
    syscall: don't use GETREGS/SETREGS on s390
    
    They were removed in recent glibc.
    
    This is a backport of https://golang.org/cl/48231 to earlier branches.
    Define required type and constants in syscall package directly, don't
    try to pull them from the system header files.
    
    From-SVN: r250402

commit e1a9ef3f5c06c0e0c90ab2e188704dd674ce751a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Jul 20 09:31:57 2017 -0500

    backport: float128-ifunc.c: Don't include auxv.h.
    
    libgcc/
            Backport from mainline
            2017-07-07  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/float128-ifunc.c: Don't include auxv.h.
            (have_ieee_hw_p): Delete function.
            (SW_OR_HW) Use __builtin_cpu_supports().
    
    From-SVN: r250391

commit 0e9284adc87e246f775ad6ab06408c023cbf2854
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 20 10:29:45 2017 +0200

    re PR libquadmath/65757 (gfortran gives incorrect result for anint with real*16 argument)
    
            PR libquadmath/65757
            * math/roundq.c: Cherry-pick upstream glibc 2015-04-28 change.
    
    From-SVN: r250379

commit 60110507804bed87c42aaab17d5b51e962648cc9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 20 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250375

commit 4aae5594ac12d7c1e20e2c5f01368c72616b3c02
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jul 19 20:31:53 2017 +0000

    backport: re PR target/81193 (PowerPC GCC __builtin_cpu_is and __builtin_cpu_supports should warn about old libraries)
    
    [gcc]
    2017-07-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If GLIBC
            provides the hardware capability bits, define the macro
            __BUILTIN_CPU_SUPPORTS__.
            * config/rs6000/rs6000.c (cpu_expand_builtin): Generate a warning
            if GLIBC does not provide the hardware capability bits.  Add a
            gcc_unreachable call if the built-in cpu function is neither
            __builtin_cpu_is nor __builtin_cpu_supports.
            * doc/extend.texi (PowerPC built-in functions): Document that
            GLIBC 2.23 or newer is needed by __builtin_cpu_is and
            __builtin_cpu_supports.  Document the macros defined by GCC if the
            newer GLIBC is available.
    
    [gcc/testsuite]
    2017-07-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * gcc.target/powerpc/cpu-builtin-1.c: Change test to use #ifdef
            __BUILTIN_CPU_SUPPORTS to see if the GLIBC is new enough that
            __builtin_cpu_is and __builtin_cpu_supports are supported.
    
    From-SVN: r250368

commit fd8e5aa174565decd22e32bb0b22e37dc2b5581e
Author: John Marino <gnugcc@marino.st>
Date:   Wed Jul 19 15:57:48 2017 +0000

    Fix Unwind support on DragonFly BSD after sigtramp move
    
    2017-07-19  John Marino  <gnugcc@marino.st>
    
            * config/i386/dragonfly-unwind.h: Handle sigtramp relocation.
    
    From-SVN: r250356

commit 0f37b1a17035e22961a22a95a33bb9f82bac6c2d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 19 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250331

commit c3221d0c677e56b13de2a763488d88e2ca7fd25a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jul 18 20:28:12 2017 +0200

    re PR target/81471 (internal compiler error: in curr_insn_transform, at lra-constraints.c:3495)
    
            PR target/81471
            * config/i386/i386.md (rorx_immediate_operand): New mode attribute.
            (*bmi2_rorx<mode>3_1): Use rorx_immediate_operand as
            operand 2 predicate.
            (*bmi2_rorxsi3_1_zext): Use const_0_to_31_operand as
            operand 2 predicate.
            (ror,rol -> rorx splitters): Use const_int_operand as
            operand 2 predicate.
    
    testsuite/ChangeLog:
    
            PR target/81471
            * gcc.target/i386/pr81471.c: New test.
    
    From-SVN: r250317

commit bffd88f8606c036abf57bbae017fe86b9706275a
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Jul 18 13:06:07 2017 +0000

    Backport "Insert diverging jump alap in nvptx_single"
    
    2017-07-18  Tom de Vries  <tom@codesourcery.com>
    
            backport from mainline:
            2017-07-17  Tom de Vries  <tom@codesourcery.com>
    
            PR target/81069
            * config/nvptx/nvptx.c (nvptx_single): Insert diverging branch as late
            as possible.
    
    From-SVN: r250308

commit 415f3135e6f833b47f302a369df8a126df4b6ad8
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jul 18 09:39:53 2017 +0000

    backport: re PR target/81473 ([avr] build fails due to INT8_MIN and friends.)
    
    gcc/
            Backport from 2017-07-18 trunk r250301.
            PR target/81473
            * config/avr/avr.c (avr_optimize_casesi): Don't use
            INT8_MIN, INT8_MAX, UINT8_MAX, INT16_MIN, INT16_MAX, UINT16_MAX.
    
    From-SVN: r250302

commit 89d5e61aabcb8f6c10a73ccad77d0cafa779bbf4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 18 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r250293

commit 4771e97b8b6d3f46a679feb9372df03978999111
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 17 21:45:59 2017 +0200

    re PR tree-optimization/81428 (ICE: in build_one_cst, at tree.c:2079 with -O2. Fixed point division.)
    
            PR tree-optimization/81428
            * match.pd (X / X -> one): Don't optimize _Fract divisions, as 1
            can't be built for those types.
    
            * gcc.dg/fixed-point/pr81428.c: New test.
    
    From-SVN: r250289

commit ffaf3bdd97cae0fe87f0838c22683831ed7092b9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 17 21:42:37 2017 +0200

    re PR tree-optimization/81365 (GCC miscompiles swap)
    
            PR tree-optimization/81365
            * tree-ssa-phiprop.c (propagate_with_phi): When considering hoisting
            aggregate moves onto bb predecessor edges, make sure there are no
            loads that could alias the lhs in between the start of bb and the
            loads from *phi.
    
            * g++.dg/torture/pr81365.C: New test.
    
    From-SVN: r250288

commit 77966a0d914d1ff94b155d239b49917ff8a50f08
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 17 21:41:08 2017 +0200

    backport: re PR sanitizer/81066 (sanitizer_stoptheworld_linux_libcdep.cc:276:22: error: aggregate ‘sigaltstack handler_stack’ has incomplete type and cannot be defined)
    
            Backported from mainline
            2017-07-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81066
            * sanitizer_common/sanitizer_linux.h: Cherry-pick upstream r307969.
            * sanitizer_common/sanitizer_linux.cc: Likewise.
            * sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc: Likewise.
            * tsan/tsan_platform_linux.cc: Likewise.
    
    From-SVN: r250287

commit 96a0e2875820e7136d43320ef8e9f61bdeef6927
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 17 21:39:23 2017 +0200

    backport: re PR c++/81258 (ICE on C++1z code with invalid decomposition declaration: in cp_finish_decl, at cp/decl.c:6760)
    
            Backported from mainline
            2017-07-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81258
            * parser.c (cp_parser_decomposition_declaration): Diagnose invalid
            forms of structured binding initializers.
    
            * g++.dg/cpp1z/decomp21.C (foo): Adjust expected diagnostics.
            * g++.dg/cpp1z/decomp30.C: New test.
    
    From-SVN: r250286

commit fc28766c1a64d50a9eef54e500211bbc8d5a9a69
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 17 21:38:29 2017 +0200

    backport: re PR target/81225 (ICE with -mavx512ifma -O3 -ffloat-store)
    
            Backported from mainline
            2017-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81225
            * config/i386/sse.md (vec_extract_lo_<mode><mask_name>): For
            V8FI, V16FI and VI8F_256 iterators, use <store_mask_predicate> instead
            of nonimmediate_operand and <store_mask_constraint> instead of m for
            the input operand.  For V8FI iterator, always split if input is a MEM.
            For V16FI and V8SF_256 iterators, don't test if both operands are MEM
            if <mask_applied>.  For VI4F_256 iterator, use <store_mask_predicate>
            instead of register_operand and <store_mask_constraint> instead of v for
            the input operand.  Make sure both operands aren't MEMs for if not
            <mask_applied>.
    
            * gcc.target/i386/pr81225.c: New test.
    
    From-SVN: r250285

commit 495da5a6fd28801e168d42512470870b7aa36dd5
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Jul 17 09:06:39 2017 +0000

    backport: re PR middle-end/80929 (Division with constant no more optimized to mult highpart)
    
            Backport from 2017-07-17 trunk r250258.
            PR 80929
            * config/avr/avr.c (avr_mul_highpart_cost): New static function.
            (avr_rtx_costs_1) [TRUNCATE]: Use it to compute mul_highpart cost.
            [LSHIFTRT, outer_code = TRUNCATE]: Same.
    
    From-SVN: r250259

commit 18f04b519fd90b7a69b81723bdb4ff1ec9c90d3f
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Mon Jul 17 05:28:38 2017 +0000

    [SPARC/RTEMS] Add __FIX_LEON3FT_B2BST
    
    In case the LEON3FT back-to-back store workaround is active
    (sparc_fix_b2bst), then define the builtin define __FIX_LEON3FT_B2BST on
    RTEMS.  The intended use case for this is operating system code in
    assembly language.  See also:
    
    https://lists.rtems.org/pipermail/devel/2017-July/018463.html
    
    gcc/
            *  gcc/config/sparc/rtemself.h (TARGET_OS_CPP_BUILTINS): Add
            conditional builtin define __FIX_LEON3FT_B2BST.
    
    From-SVN: r250255

commit 0e43fc9ee53de3661e1e9140cdb08d460829a091
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Mon Jul 17 05:20:59 2017 +0000

    [RTEMS] Add multilibs for LEON3FT back-to-back store workaround
    
    Replace MULTILIB_EXCEPTIONS with MULTILIB_REQUIRED for readability.
    -mfix-gr712rc and -mfix-ut700 are currently equivalent.
    
    gcc/
            * config/sparc/t-rtems: Add mfix-gr712rc multilibs. Replace
            MULTILIB_EXCEPTIONS with MULTILIB_REQUIRED. Match -mfix-gr712rc
            with -mfix-ut700.
    
    From-SVN: r250253

commit 4bc688098b81dc805ffc5e9358972ecce6cdf445
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 17 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r250250

commit 1fcc5158c56099a24b84d36a49befb0a71059deb
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Jul 16 22:07:15 2017 +0000

    re PR rtl-optimization/81424 (internal error on GPRbuild with -O2)
    
            PR rtl-optimization/81424
            * optabs.c (prepare_cmp_insn): Use copy_to_reg instead of force_reg
            to remove potential trapping from operands if -fnon-call-exceptions.
    
    From-SVN: r250247

commit faefaf5172c5b0ced7b055484e7d66e295b5593c
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Sun Jul 16 10:43:47 2017 +0000

    sparc.md (divdf3_fix): Add NOP to prevent back to back store errata sensitive sequence from being...
    
    2017-07-16  Daniel Cederman  <cederman@gaisler.com>
    
            * config/sparc/sparc.md (divdf3_fix): Add NOP to prevent back
            to back store errata sensitive sequence from being generated.
            (sqrtdf2_fix): Likewise.
    
    From-SVN: r250235

commit c72b0c0f0c91683649c8a8abf8ff421cb43509be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 16 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250229

commit 4fbbc92b8a35180284a8f519a0099318133091ed
Author: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Date:   Sat Jul 15 17:01:08 2017 +0000

    re PR ada/81446 (building Ada fails due to missing No_Elaboration_Code_All)
    
            PR ada/81446
            * system-linux-m68k.ads: Add pragma No_Elaboration_Code_All.
            (Backend_Overflow_Checks): Set to True.
    
    From-SVN: r250225

commit 99dcf8d1c6a353ebbc28d3c06995f92e0039c553
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 15 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250220

commit ab5b8f49717a7734379659887d4323543cfb03ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 14 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r250194

commit 4375c64c0eea3956d6bb89464f79ca4281683796
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 13 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250172

commit 6cc498e884a603f3fec599e25f9be12e7576d16f
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Jul 12 15:31:22 2017 +0000

    backport: re PR target/79883 (avr i18n: untranslated "interrupt" or "signal")
    
    gcc/
            Backport from 2017-07-12 trunk r250156.
            PR target/79883
            * config/avr/avr.c (avr_set_current_function): In diagnostic
            messages: Quote keywords and (parts of) identifiers.
            [WITH_AVRLIBC]: Warn for functions named "ISR", "SIGNAL" or
            "INTERRUPT".
    
    From-SVN: r250157

commit bca1c0e1bcea9e72d7fb95713ced1cbef6b50d25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 12 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r250146

commit f4687869199645dfea0912fa756bac5009a838cf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 11 12:52:14 2017 +0100

    PR libstdc++/80316 make promise::set_value throw no_state error
    
    Backport from mainline
    2017-04-21  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80316
            * include/std/future (_State_baseV2::_Setter::operator()): Remove
            _S_check calls that are done after the pointer to the shared state is
            already dereferenced.
            (_State_baseV2::_Setter<_Res, void>): Define specialization for void
            as partial specialization so it can be defined within the definition
            of _State_baseV2.
            (_State_baseV2::__setter): Call _S_check.
            (_State_baseV2::__setter(promise<void>*)): Add overload for use by
            promise<void>::set_value and promise<void>::set_value_at_thread_exit.
            (promise<T>, promise<T&>, promise<void>): Make _State a friend.
            (_State_baseV2::_Setter<void, void>): Remove explicit specialization.
            (promise<void>::set_value, promise<void>::set_value_at_thread_exit):
            Use new __setter overload.
            * testsuite/30_threads/promise/members/at_thread_exit2.cc: New test.
            * testsuite/30_threads/promise/members/set_exception.cc: Test
            promise<T&> and promise<void> specializations.
            * testsuite/30_threads/promise/members/set_exception2.cc: Likewise.
            Test for no_state error condition.
            * testsuite/30_threads/promise/members/set_value2.cc: Likewise.
    
    From-SVN: r250126

commit 9c36e9c261d1ff46cf52d556e1ac9ca47da8a8f2
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Tue Jul 11 07:21:04 2017 +0000

    sparc.opt (mfix-ut700): New option.
    
            * config/sparc/sparc.opt (mfix-ut700): New option.
            (mfix-gr712rc): Likewise.
            (sparc_fix_b2bst): New variable.
            * doc/invoke.texi (SPARC options): Document them.
            (ARM options): Fix warnings.
            * config/sparc/sparc.c (sparc_do_work_around_errata): Insert NOP
            instructions to prevent sequences that can trigger the store-store
            errata for certain LEON3FT processors.
            (pass_work_around_errata::gate): Also test sparc_fix_b2bst.
            (sparc_option_override): Set sparc_fix_b2bst appropriately.
            * config/sparc/sparc.md (fix_b2bst): New attribute.
            (in_branch_delay): Prevent stores in delay slot if fix_b2bst.
    
    From-SVN: r250121

commit b0c4c9f1fbb6e829c30dd85bfcafc70ad96dfce1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jul 11 07:32:39 2017 +0200

    re PR target/81375 (unrecognizable insn)
    
            PR target/81375
            * config/i386/i386.md (divsf3): Add TARGET_SSE to TARGET_SSE_MATH.
            (rcpps): Ditto.
            (*rsqrtsf2_sse): Ditto.
            (rsqrtsf2): Ditto.
            (div<mode>3): Macroize insn from divdf3 and divsf3
            using MODEF mode iterator.
    
    testsuite/ChangeLog:
    
            PR target/81375
            * gcc.target/i386/pr81375.c: New test.
    
    From-SVN: r250113

commit a79004721b6e497724ca29ecdfbbcb8b4ba95076
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 11 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250110

commit b1b70d05c5b16d828378a4f2dd70c2afeb275b9d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 10 00:16:42 2017 +0000

    Daily bump.
    
    From-SVN: r250089

commit e676f9581c832eca7a002d8e82fc8cbbff2a616d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 9 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r250078

commit 1ec963007618e1cb56bc8fb521c72554e86934a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 8 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r250071

commit 69115c8c9dda905c607665cee2e3b25261998693
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Jul 7 20:47:15 2017 +0000

    backport: re PR target/81348 (PowerPC64: Code built with -mcpu=power9 hits SEGV in RTL split2)
    
    [gcc]
    2017-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
    
            PR target/81348
            * config/rs6000/rs6000.md (HI sign_extend splitter): Use the
            correct operand in doing the split.
    
    [gcc/testsuite]
    2017-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81348
            * gcc.target/powerpc/pr81348.c: New test.
    
    From-SVN: r250060

commit 0316d24f7adc9c2219eb03ac67086a26c37ebe97
Author: Jose E. Marchesi <jose.marchesi@oracle.com>
Date:   Fri Jul 7 17:42:43 2017 +0200

    Support for the SPARC M8 cpu.
    
    This patch serie adds support for the SPARC M8 processor to GCC.
    The SPARC M8 processor implements the Oracle SPARC Architecture 2017.
    
    - bmask* instructions are put in their own instruction type.  It makes
      little sense to have them in the same category than array
      instructions.
    
    - Similarly, VIS compare instructions are put in their own instruction
      type.  This is to better accommodate subtypes, which are not quite
      the same than the subtypes of `visl' instructions.
    
    - The introduction of a new `subtype' insn attribute in sparc.md
      avoids the need for adjusting the instruction scheduler DFAs for
      previous cpu models every time a new cpu is introduced.
    
    - The full set of SPARC instructions used in sparc.md, and their
      position in the type/subtype hierarchy, is documented in a comment.
      This eases the modification of the DFA schedulers, and the addition
      of new cpus.
    
    - The M7 DFA scheduler is reworked:
    
      + To use the new type/subtype hierarchy.
      + The v3pipe insn attribute is no longer needed.
      + More accurate latencies for instructions.
      + The S4 core pipeline is documented in a comment in niagara7.md.
    
    - Support for -mcpu=m8 (we are thus suggesting to abandon the niagaraN
      denomination for M8 and later processors.)
    
    - Support for a new VIS level, VIS4B, covering the new VIS
      instructions introduced in OSA2017 and implemented in the M8.  Also
      built-ins.
    
    - A M8 DFA scheduler:
    
      + Also based on the new type/subtype hierarchy.
      + The functional units in the S5 core are explicitly documented in a
        comment in m8.md.
    
    
    gcc/ChangeLog:
    
            * config/sparc/m8.md: New file.
            * config/sparc/sparc.md: Include m8.md.
    
            * config/sparc/sparc.opt: New option -mvis4b.
            * config/sparc/sparc.c (dump_target_flag_bits): Handle MASK_VIS4B.
            (sparc_option_override): Handle VIS4B.
            (enum sparc_builtins): Define
            SPARC_BUILTIN_DICTUNPACK{8,16,32},
            SPARC_BUILTIN_FPCMP{LE,GT,EQ,NE}{8,16,32}SHL,
            SPARC_BUILTIN_FPCMPU{LE,GT}{8,16,32}SHL,
            SPARC_BUILTIN_FPCMPDE{8,16,32}SHL and
            SPARC_BUILTIN_FPCMPUR{8,16,32}SHL.
            (check_constant_argument): New function.
            (sparc_vis_init_builtins): Define builtins
            __builtin_vis_dictunpack{8,16,32},
            __builtin_vis_fpcmp{le,gt,eq,ne}{8,16,32}shl,
            __builtin_vis_fpcmpu{le,gt}{8,16,32}shl,
            __builtin_vis_fpcmpde{8,16,32}shl and
            __builtin_vis_fpcmpur{8,16,32}shl.
            (sparc_expand_builtin): Check that the constant operands to
            __builtin_vis_fpcmp*shl and _builtin_vis_dictunpack* are indeed
            constant and in range.
            * config/sparc/sparc-c.c (sparc_target_macros): Handle
            TARGET_VIS4B.
            * config/sparc/sparc.h (SPARC_IMM2_P): Define.
            (SPARC_IMM5_P): Likewise.
            * config/sparc/sparc.md (cpu_feature): Add new feagure "vis4b".
            (enabled): Handle vis4b.
            (UNSPEC_DICTUNPACK): New unspec.
            (UNSPEC_FPCMPSHL): Likewise.
            (UNSPEC_FPUCMPSHL): Likewise.
            (UNSPEC_FPCMPDESHL): Likewise.
            (UNSPEC_FPCMPURSHL): Likewise.
            (cpu_feature): New CPU feature `vis4b'.
            (dictunpack{8,16,32}): New insns.
            (FPCSMODE): New mode iterator.
            (fpcscond): New code iterator.
            (fpcsucond): Likewise.
            (fpcmp{le,gt,eq,ne}{8,16,32}{si,di}shl): New insns.
            (fpcmpu{le,gt}{8,16,32}{si,di}shl): Likewise.
            (fpcmpde{8,16,32}{si,di}shl): Likewise.
            (fpcmpur{8,16,32}{si,di}shl): Likewise.
            * config/sparc/constraints.md: Define constraints `q' for unsigned
            2-bit integer constants and `t' for unsigned 5-bit integer
            constants.
            * config/sparc/predicates.md (imm5_operand_dictunpack8): New
            predicate.
            (imm5_operand_dictunpack16): Likewise.
            (imm5_operand_dictunpack32): Likewise.
            (imm2_operand): Likewise.
            * doc/invoke.texi (SPARC Options): Document -mvis4b.
            * doc/extend.texi (SPARC VIS Built-in Functions): Document the
            ditunpack* and fpcmp*shl builtins.
    
            * config.gcc: Handle m8 in --with-{cpu,tune} options.
            * config.in: Add HAVE_AS_SPARC6 define.
            * config/sparc/driver-sparc.c (cpu_names): Add entry for the SPARC
            M8.
            * config/sparc/sol2.h (CPP_CPU64_DEFAULT_SPEC): Define for
            TARGET_CPU_m8.
            (ASM_CPU32_DEFAUILT_SPEC): Likewise.
            (CPP_CPU_SPEC): Handle m8.
            (ASM_CPU_SPEC): Likewise.
            * config/sparc/sparc-opts.h (enum processor_type): Add
            PROCESSOR_M8.
            * config/sparc/sparc.c (m8_costs): New struct.
            (sparc_option_override): Handle TARGET_CPU_m8.
            (sparc32_initialize_trampoline): Likewise.
            (sparc64_initialize_trampoline): Likewise.
            (sparc_issue_rate): Likewise.
            (sparc_register_move_cost): Likewise.
            * config/sparc/sparc.h (TARGET_CPU_m8): Define.
            (CPP_CPU64_DEFAULT_SPEC): Define for M8.
            (ASM_CPU64_DEFAULT_SPEC): Likewise.
            (CPP_CPU_SPEC): Handle M8.
            (ASM_CPU_SPEC): Likewise.
            (AS_M8_FLAG): Define.
            * config/sparc/sparc.md: Add m8 to the cpu attribute.
            * config/sparc/sparc.opt: New option -mcpu=m8 for sparc targets.
            * configure.ac (HAVE_AS_SPARC6): Check for assembler support for
            M8 instructions.
            * configure: Regenerate.
            * doc/invoke.texi (SPARC Options): Document -mcpu=m8 and
            -mtune=m8.
    
            * config/sparc/niagara7.md: Rework the DFA scheduler to use insn
            subtypes.
            * config/sparc/sparc.md: Remove the `v3pipe' insn attribute.
            ("*movdi_insn_sp32"): Do not set v3pipe.
            ("*movsi_insn"): Likewise.
            ("*movdi_insn_sp64"): Likewise.
            ("*movsf_insn"): Likewise.
            ("*movdf_insn_sp32"): Likewise.
            ("*movdf_insn_sp64"): Likewise.
            ("*zero_extendsidi2_insn_sp64"): Likewise.
            ("*sign_extendsidi2_insn"): Likewise.
            ("*mov<VM32:mode>_insn"): Likewise.
            ("*mov<VM64:mode>_insn_sp64"): Likewise.
            ("*mov<VM64:mode>_insn_sp32"): Likewise.
            ("<plusminus_insn><VADDSUB:mode>3"): Likewise.
            ("<vlop:code><VL:mode>3"): Likewise.
            ("*not_<vlop:code><VL:mode>3"): Likewise.
            ("*nand<VL:mode>_vis"): Likewise.
            ("*<vlnotop:code>_not1<VL:mode>_vis"): Likewise.
            ("*<vlnotop:code>_not2<VL:mode>_vis"): Likewise.
            ("one_cmpl<VL:mode>2"): Likewise.
            ("faligndata<VM64:mode>_vis"): Likewise.
            ("alignaddrsi_vis"): Likewise.
            ("alignaddrdi_vis"): Likweise.
            ("alignaddrlsi_vis"): Likewise.
            ("alignaddrldi_vis"): Likewise.
            ("fcmp<gcond:code><GCM:gcm_name><P:mode>_vis"): Likewise.
            ("bmaskdi_vis"): Likewise.
            ("bmasksi_vis"): Likewise.
            ("bshuffle<VM64:mode>_vis"): Likewise.
            ("cmask8<P:mode>_vis"): Likewise.
            ("cmask16<P:mode>_vis"): Likewise.
            ("cmask32<P:mode>_vis"): Likewise.
            ("pdistn<P:mode>_vis"): Likewise.
            ("<vis3_addsub_ss_patname><VASS:mode>3"): Likewise.
    
            * config/sparc/sparc.md ("subtype"): New insn attribute.
            ("*wrgsr_sp64"): Set insn subtype.
            ("*rdgsr_sp64"): Likewise.
            ("alignaddrsi_vis"): Likewise.
            ("alignaddrdi_vis"): Likewise.
            ("alignaddrlsi_vis"): Likewise.
            ("alignaddrldi_vis"): Likewise.
            ("<plusminus_insn><VADDSUB:mode>3"): Likewise.
            ("fexpand_vis"): Likewise.
            ("fpmerge_vis"): Likewise.
            ("faligndata<VM64:mode>_vis"): Likewise.
            ("bshuffle<VM64:mode>_vis"): Likewise.
            ("cmask8<P:mode>_vis"): Likewise.
            ("cmask16<P:mode>_vis"): Likewise.
            ("cmask32<P:mode>_vis"): Likewise.
            ("fchksm16_vis"): Likewise.
            ("v<vis3_shift_patname><GCM:mode>3"): Likewise.
            ("fmean16_vis"): Likewise.
            ("fp<plusminus_insn>64_vis"): Likewise.
            ("<plusminus_insn>v8qi3"): Likewise.
            ("<vis3_addsub_ss_patname><VASS:mode>3"): Likewise.
            ("<vis4_minmax_patname><VMMAX:mode>3"): Likewise.
            ("<vis4_uminmax_patname><VMMAX:mode>3"): Likewise.
            ("<vis3_addsub_ss_patname>v8qi3"): Likewise.
            ("<vis4_addsub_us_patname><VAUS:mode>3"): Likewise.
            ("*movqi_insn"): Likewise.
            ("*movhi_insn"): Likewise.
            ("*movsi_insn"): Likewise.
            ("movsi_pic_gotdata_op"): Likewise.
            ("*movdi_insn_sp32"): Likewise.
            ("*movdi_insn_sp64"): Likewise.
            ("movdi_pic_gotdata_op"): Likewise.
            ("*movsf_insn"): Likewise.
            ("*movdf_insn_sp32"): Likewise.
            ("*movdf_insn_sp64"): Likewise.
            ("*zero_extendhisi2_insn"): Likewise.
            ("*zero_extendqihi2_insn"): Likewise.
            ("*zero_extendqisi2_insn"): Likewise.
            ("*zero_extendqidi2_insn"): Likewise.
            ("*zero_extendhidi2_insn"): Likewise.
            ("*zero_extendsidi2_insn_sp64"): Likewise.
            ("ldfsr"): Likewise.
            ("prefetch_64"): Likewise.
            ("prefetch_32"): Likewise.
            ("tie_ld32"): Likewise.
            ("tie_ld64"): Likewise.
            ("*tldo_ldub_sp32"): Likewise.
            ("*tldo_ldub1_sp32"): Likewise.
            ("*tldo_ldub2_sp32"): Likewise.
            ("*tldo_ldub_sp64"): Likewise.
            ("*tldo_ldub1_sp64"): Likewise.
            ("*tldo_ldub2_sp64"): Likewise.
            ("*tldo_ldub3_sp64"): Likewise.
            ("*tldo_lduh_sp32"): Likewise.
            ("*tldo_lduh1_sp32"): Likewise.
            ("*tldo_lduh_sp64"): Likewise.
            ("*tldo_lduh1_sp64"): Likewise.
            ("*tldo_lduh2_sp64"): Likewise.
            ("*tldo_lduw_sp32"): Likewise.
            ("*tldo_lduw_sp64"): Likewise.
            ("*tldo_lduw1_sp64"): Likewise.
            ("*tldo_ldx_sp64"): Likewise.
            ("*mov<VM32:mode>_insn"): Likewise.
            ("*mov<VM64:mode>_insn_sp64"): Likewise.
            ("*mov<VM64:mode>_insn_sp32"): Likewise.
    
            * config/sparc/sparc.md ("type"): New insn type viscmp.
            ("fcmp<gcond:code><GCM:gcm_name><P:mode>_vis"): Set insn type to
            viscmp.
            ("fpcmp<gcond:code>8<P:mode>_vis"): Likewise.
            ("fucmp<gcond:code>8<P:mode>_vis"): Likewise.
            ("fpcmpu<gcond:code><GCM:gcm_name><P:mode>_vis"): Likewise.
            * config/sparc/niagara7.md ("n7_vis_logical_v3pipe"): Handle
            viscmp.
            ("n7_vis_logical_11cycle"): Likewise.
            * config/sparc/niagara4.md ("n4_vis_logical"): Likewise.
            * config/sparc/niagara2.md ("niag3_vis": Likewise.
            * config/sparc/niagara.md ("niag_vis"): Likewise.
            * config/sparc/ultra3.md ("us3_fga"): Likewise.
            * config/sparc/ultra1_2.md ("us1_fga_double"): Likewise.
    
            * config/sparc/sparc.md: New instruction type `bmask'.
            (bmaskdi_vis): Use the `bmask' type.
            (bmasksi_vis): Likewise.
            * config/sparc/ultra3.md (us3_array): Likewise.
            * config/sparc/niagara7.md (n7_array): Likewise.
            * config/sparc/niagara4.md (n4_array): Likewise.
            * config/sparc/niagara2.md (niag2_vis): Likewise.
            (niag3_vis): Likewise.
            * config/sparc/niagara.md (niag_vis): Likewise.
    
    gcc/testsuite/ChangeLog:
    
            * gcc.target/sparc/dictunpack.c: New file.
            * gcc.target/sparc/fpcmpdeshl.c: Likewise.
            * gcc.target/sparc/fpcmpshl.c: Likewise.
            * gcc.target/sparc/fpcmpurshl.c: Likewise.
            * gcc.target/sparc/fpcmpushl.c: Likewise.
    
    From-SVN: r250050

commit e604883c8f5987c5827c5e2a24fb654be5597349
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 7 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250046

commit 239a30a97e07402a0a4539d4eaf4e0efd1eb0935
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 6 14:27:05 2017 -0400

    PR c++/81204 - parse error with dependent template-name
    
            PR c++/81204 - parse error with dependent template-name
            * parser.c (cp_parser_lookup_name): Revert previous change.
    
    From-SVN: r250038

commit dbaeae0182eef1ea10cd13c5f00b4ff7286d0e68
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 6 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r250011

commit edfd99216638b12e7d8313b6b75c52b96f8853d0
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Jul 5 12:49:08 2017 +0000

    backport: re PR target/81305 ([avr] avrtiny uses LDS for SREG in ISR routines which is out of range of LDS.)
    
    gcc/
            Backport from 2017-07-05 trunk r249995.
            PR target/81305
            * config/avr/avr.c (avr_out_movhi_mr_r_xmega) [CONSTANT_ADDRESS_P]:
            Don't depend on "optimize > 0".
            (out_movhi_r_mr, out_movqi_mr_r): Same.
            (out_movhi_mr_r, out_movqi_r_mr): Same.
            (avr_address_cost) [CONSTANT_ADDRESS_P]: Don't depend cost for
            io_address_operand on "optimize > 0".
    gcc/testsuite/
            Backport from 2017-07-05 trunk r249995, r249996.
            PR target/81305
            * gcc.target/avr/isr-test.h: New file.
            * gcc.target/avr/torture/isr-01-simple.c: New test.
            * gcc.target/avr/torture/isr-02-call.c: New test.
            * gcc.target/avr/torture/isr-03-fixed.c: New test.
    
    From-SVN: r249998

commit 7a4cadf3b6f129e4f4328d8164c83dc16319c6cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 5 00:16:26 2017 +0000

    Daily bump.
    
    From-SVN: r249981

commit df3f3c4b1180f67a3268b59fe28832ec21e8a084
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jul 4 23:05:17 2017 +0200

    re PR target/81300 (-fpeephole2 breaks __builtin_ia32_sbb_u64, _subborrow_u64 on AMD64)
    
            PR target/81300
            * config/i386/i386.md (setcc + movzbl/and to xor + setcc peepholes):
            Require dead FLAGS_REG at the beginning of a peephole.
    
            PR target/81294
            * config/i386/adxintrin.h (_subborrow_u32): Swap _X and _Y
            arguments in the call to __builtin_ia32_sbb_u32.
            (_subborrow_u64): Swap _X and _Y arguments in the call to
            __builtin_ia32_sbb_u64.
    
    testsuite/ChangeLog:
    
            PR target/81300
            * gcc.target/i386/pr81300.c: New test.
    
            PR target/81294
            * gcc.target/i386/adx-addcarryx32-2.c (adx_test): Swap
            x and y arguments in the call to _subborrow_u32.
            * gcc.target/i386/adx-addcarryx64-2.c (adx_test): Swap
            x and y arguments in the call to _subborrow_u64.
            * gcc.target/i386/pr81294-1.c: New test.
            * gcc.target/i386/pr81294-2.c: Ditto.
    
    From-SVN: r249978

commit 05009fb215574e752290d58fd53038ec9aecc25b
Author: Thomas Preud'homme <thopre01@gcc.gnu.org>
Date:   Tue Jul 4 13:31:16 2017 +0000

    Fix ChangeLog format in r249596
    
    This patch fixes relative pathnames in gcc/ChangeLog for r249596.
    
    From-SVN: r249965

commit 1a8be74612e0ab0f149f7f843603a8b48ae2843f
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Jul 4 11:22:56 2017 +0100

    Use ucontext_t not struct ucontext in linux-unwind.h files.
    
    Current glibc no longer gives the ucontext_t type the tag struct
    ucontext, to conform with POSIX namespace rules.  This requires
    various linux-unwind.h files in libgcc, that were previously using
    struct ucontext, to be fixed to use ucontext_t instead.  This is
    similar to the removal of the struct siginfo tag from siginfo_t some
    years ago.
    
    This patch changes those files to use ucontext_t instead.  As the
    standard name that should be unconditionally safe, so this is not
    restricted to architectures supported by glibc, or conditioned on the
    glibc version.
    
    Tested compilation together with current glibc with glibc's
    build-many-glibcs.py.
    
            * config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),
            config/alpha/linux-unwind.h (alpha_fallback_frame_state),
            config/bfin/linux-unwind.h (bfin_fallback_frame_state),
            config/i386/linux-unwind.h (x86_64_fallback_frame_state,
            x86_fallback_frame_state), config/m68k/linux-unwind.h (struct
            uw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),
            config/pa/linux-unwind.h (pa32_fallback_frame_state),
            config/riscv/linux-unwind.h (riscv_fallback_frame_state),
            config/sh/linux-unwind.h (sh_fallback_frame_state),
            config/tilepro/linux-unwind.h (tile_fallback_frame_state),
            config/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use
            ucontext_t instead of struct ucontext.
    
    From-SVN: r249956

commit fce50b729079c5759f358642935b1c6a68dc2ca4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 4 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r249941

commit df063da574ab5e245b550c4538f42f4e684e1566
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Jul 3 14:20:02 2017 +0200

    backport: rs6000.md (add<mode>3): Use reg_or_subregno instead of REGNO.
    
    Backport from trunk:
    
    2017-06-15  Segher Boessenkool  <segher@kernel.crashing.org>
    
    * config/rs6000/rs6000.md (add<mode>3): Use reg_or_subregno instead
    of REGNO.
    
    From-SVN: r249905

commit 3c60c3693d801d36efde5f7dac9c1d3b4a465deb
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Jul 3 08:32:20 2017 +0000

    Backport "Fix sigsegv in find_same_succ_bb"
    
    2017-07-03  Tom de Vries  <tom@codesourcery.com>
    
            backport from mainline:
            2017-07-03  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/81192
            * tree-ssa-tail-merge.c (same_succ_flush_bb): Handle
            BB_SAME_SUCC (bb) == NULL.
    
            * gcc.dg/pr81192.c: New test.
    
    From-SVN: r249898

commit c81aed0a6bba9d1241824af2047e45f257be90c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 3 00:16:37 2017 +0000

    Daily bump.
    
    From-SVN: r249891

commit 29dcb1a6712474a6b9cd93defb8727c7f0e0275f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 2 00:16:29 2017 +0000

    Daily bump.
    
    From-SVN: r249875

commit f1f3f55901c9dccacacf4bb085cdd8fbbb8a944e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 1 00:16:26 2017 +0000

    Daily bump.
    
    From-SVN: r249860

commit a577c31243bf7ee037ddfa9f27e04a5dec0230ca
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 30 18:20:22 2017 -0400

    PR c++/54769 - wrong lookup of dependent template-name.
    
            PR c++/81257 - ICE with invalid ::template.
            * parser.c (cp_parser_template_name): Handle dependent object type.
            (cp_parser_nested_name_specifier_opt): Make template_keyword_p a
            parameter.
            (cp_parser_id_expression): Pass it.
    
    From-SVN: r249857

commit e8c860f780340a2457d52138b9a4c902d57f3c6c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 30 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r249825

commit 3a202a726dfb9600ce6758f3679ccff84072256b
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jun 29 22:19:29 2017 +0000

    backport: re PR target/80510 (Optimize Power7/power8 Altivec load/stores)
    
    [gcc]
    2017-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * config/rs6000/rs6000.md (ALTIVEC_DFORM): Do not allow DImode in
            32-bit, since indexed is not valid for DImode.
            (mov<mode>_hardfloat32): Reorder ISA 2.07 load/stores before ISA
            3.0 d-form load/stores to be the same as mov<mode>_hardfloat64.
            (define_peephole2 for Altivec d-form load): Add 32-bit support.
            (define_peephole2 for Altivec d-form store): Likewise.
    
            Backport from mainline
            2017-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79799
            * config/rs6000/rs6000.c (rs6000_expand_vector_init): Add support
            for doing vector set of SFmode on ISA 3.0.
            * config/rs6000/vsx.md (vsx_set_v4sf_p9): Likewise.
            (vsx_set_v4sf_p9_zero): Special case setting 0.0f to a V4SF
            element.
            (vsx_insert_extract_v4sf_p9): Add an optimization for inserting a
            SFmode value into a V4SF variable that was extracted from another
            V4SF variable without converting the element to double precision
            and back to single precision vector format.
            (vsx_insert_extract_v4sf_p9_2): Likewise.
    
    [gcc/testsuite]
    2017-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: Allow test to run on 32-bit.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
            Backport from mainline
            2017-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79799
            * gcc.target/powerpc/pr79799-1.c: New test.
            * gcc.target/powerpc/pr79799-2.c: Likewise.
            * gcc.target/powerpc/pr79799-3.c: Likewise.
            * gcc.target/powerpc/pr79799-4.c: Likewise.
            * gcc.target/powerpc/pr79799-5.c: Likewise.
    
    From-SVN: r249819

commit 7c9092dba912629192361d4534280a219cc0d570
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jun 29 17:32:20 2017 -0400

    PR c++/81180 - ICE with C++17 deduction of member class template.
    
            * pt.c (build_deduction_guide): Correct member template handling.
    
    From-SVN: r249817

commit c98abc8fee2ebfcb7fbcf34a8df414123b5ef4b2
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jun 29 15:44:58 2017 -0400

    PR c++/81188 - matching decltype of member function call.
    
            * tree.c (cp_tree_equal): Remove COMPONENT_REF special case.
    
    From-SVN: r249814

commit 738a36a2c27b8576ae479fb2a3b3a0d91c59a38f
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jun 29 12:46:29 2017 -0400

    PR c++/81164 - ICE with invalid inherited constructor.
    
            * search.c (binfo_direct_p): New.
            * name-lookup.c (do_class_using_decl): Use it.
    
    From-SVN: r249801

commit 4d69799530c3159b91607534eb2ffb8fd572de2e
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 29 08:53:27 2017 +0000

    backport: re PR ipa/81112 (internal compiler error: tree check: expected integer_cst, have range_expr in get_len, at tree.h:5321)
    
    2017-06-29  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-06-19  Richard Biener  <rguenther@suse.de>
    
            PR ipa/81112
            * ipa-prop.c (find_constructor_constant_at_offset): Handle
            RANGE_EXPR conservatively.
    
            * g++.dg/torture/pr81112.C: New testcase.
    
    From-SVN: r249772

commit 6974c4026e561e70088ad7340d89e5b05f4713c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 29 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r249768

commit 35813cb651a70febded8e1c928b52c834af87075
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 28 17:08:58 2017 -0400

    PR c++/61022 - error with variadic template template parm
    
            * pt.c (convert_template_argument): Keep the TYPE_PACK_EXPANSION.
    
    From-SVN: r249763

commit ae2daf1922be49a75ede68ca146b44a73942031d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 28 17:08:50 2017 -0400

    PR c++/72801 - ICE with variadic partial specialization
    
            * pt.c (unify_pack_expansion): Use PACK_EXPANSION_EXTRA_ARGS.
    
    From-SVN: r249762

commit 98626a3eeab175892bd354f279263848343790b9
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Jun 28 17:08:43 2017 -0400

    PR c++/81204 - parse error with dependent template-name
    
            * parser.c (cp_parser_lookup_name): Disqualify function templates
            after lookup.
    
    From-SVN: r249761

commit 075a5f6aaf5a782c6302fcb1b21a73cd1b65a5e6
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 28 13:25:33 2017 +0000

    backport: [multiple changes]
    
    2017-06-28  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-06-09  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81007
            * ipa-polymorphic-call.c
            (ipa_polymorphic_call_context::restrict_to_inner_class):
            Skip FIELD_DECLs with error_mark_node type.
            * passes.def (all_lowering_passes): Run pass_build_cgraph_edges
            last again.
    
            * g++.dg/pr81007.C: New testcase.
    
            2017-06-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81083
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Do not use abnormals
            as values.
    
            * gcc.dg/torture/pr81083.c: New testcase.
    
            2017-06-21  Richard Biener  <rguenther@suse.de>
    
            PR gcov-profile/81080
            * configure.ac: Add AC_SYS_LARGEFILE.
            * libgcov.h: Include auto-target.h before tsystem.h to pick
            up _FILE_OFFSET_BITS which might differ for multilibs.
            * config.in: Regenerate.
            * configure: Likewise.
    
    From-SVN: r249738

commit a103487a61c40fcbf9feea82fa8b2d541feed681
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 28 07:51:51 2017 +0000

    val-profiler-threads-1.c (main): Fix 2nd argument passed to pthread_join.
    
    2017-06-28  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc.dg/tree-prof/val-profiler-threads-1.c (main): Fix 2nd argument
            passed to pthread_join.
    
    From-SVN: r249724

commit 66c3937325f436f6c268c420c8e801517e7097dd
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed Jun 28 04:14:32 2017 +0000

    backport: re PR fortran/53029 (missed optimization in internal read (without implied-do-loop))
    
    2017-06-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/53029
            * io/list_read.c(list_formatted_read_scalar: Set the err return
            value to the common.flags error values.
    
            * gfortran.dg/read_5.f90: New test.
    
    From-SVN: r249719

commit ff0ff47b0febf7e6ac46ac28575505663d568d7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 28 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r249716

commit e1ae2994175e3f9c807a93c53a1444b6ba10be04
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jun 27 18:43:35 2017 +0200

    backports
    
    From-SVN: r249699

commit b15062031afb9b8327ea3df04c73e3c47d4da3e5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jun 27 17:23:46 2017 +0100

    PR libstdc++/81221 fix namespace qualification for parallel mode
    
            PR libstdc++/81221
            * include/bits/stl_algo.h (sample): Qualify with _GLIBCXX_STD_A not
            std.
            * testsuite/25_algorithms/sample/81221.cc: New.
    
    From-SVN: r249698

commit 4e365a51f6c1f83ea00a465482cda8be4b1bc7ab
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 27 10:18:10 2017 +0200

    re PR sanitizer/81209 (-fsanitize=undefined ICE on darwin)
    
            PR sanitizer/81209
            * ubsan.c (ubsan_encode_value): Initialize DECL_CONTEXT on var.
    
            * g++.dg/ubsan/pr81209.C: New test.
    
    From-SVN: r249680

commit b8c5e47875456fc655df4416b713d2835b7bcf45
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 27 10:16:10 2017 +0200

    re PR middle-end/81207 (tree check fail in simplify_builtin_call)
    
            PR middle-end/81207
            * gimple-fold.c (replace_call_with_call_and_fold): Handle
            gimple_vuse copying separately from gimple_vdef copying.
    
            * gcc.c-torture/compile/pr81207.c: New test.
    
    From-SVN: r249679

commit ccfde6b73acbc6113f9457f4945ebe567e727c31
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 27 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249672

commit d7ec17b44bd9060cfbeb38334e11a63988b7d1fe
Author: Jim Wilson <jim.wilson@r3-a15.aus-colo>
Date:   Mon Jun 26 21:44:50 2017 +0000

    Fix for SPEC CPu2017 621.wrf_s failure, add missing locking code.
    
            libgfortran/
            Backport from trunk
            PR libfortran/81195
            * io/unit.c (get_unit): Call __gthread_mutex_lock before newunit_stack
            and newunit_tos references.  Call __gthread_mutex_unlock afterward.
    
    From-SVN: r249668

commit aa2978007a6e7e0bdab0108eb1b318f9ac63616d
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jun 26 14:49:25 2017 -0400

    re PR c++/81215 (deduction failure with variadic template template parameter)
    
            PR c++/81215
    
            * pt.c (unify_bound_ttp_args): Restore old logic for C++14 and down.
    
    From-SVN: r249665

commit e860a3fd7fd6bae4f14b953bec02ad8a9f4dff83
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 26 09:49:21 2017 +0000

    * c-c++-common/ubsan/sanitize-recover-7.c (dg-options): Add -w.
    
    From-SVN: r249642

commit ace39d58bff710576ee4e3dca8e62d296788dacc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 26 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r249636

commit 4f338f8a6501000a4bc807e40bd4b75b6eab78fc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 25 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249631

commit d0f531ddfca0050489bdad46cbe418f3cf1bdeec
Author: Jim Wilson <jim.wilson@linaro.org>
Date:   Sat Jun 24 23:22:11 2017 +0000

    Backport patch to remove falkor aarch32 support.
    
            gcc/
            * config/aarch64/aarch64-cost-tables.h (qdf24xx_extra_costs): Move to
            here.
            * config/arm/aarch-cost-tables.h (qdf24xx_extra_costs): From here.
            * config/arm/arm-cpu-cdata.h: Regenerate.
            * config/arm/arm-cpu-data.h, config/arm/arm-cpu.h: Likewise.
            * config/arm/arm-tables.opt, config/arm/arm-tune.md: Likewise.
            * config/arm/arm-cpus.in: Delete falkor and qdf24xx entries.
            * config/arm/arm.c (arm_qdf24xx_tune): Delete.
            * config/arm/bpabi.h (BE8_LINK_SPEC): Delete falkor and qdf24xx
            support.
            * config/arm/t-aprofile (MULTILIB_MATCHES): Delete falkor and qdf24xx
            support.
            * config/arm/t-rmprofile: Likewise.
            * doc/invoke.texi (ARM Options): Drop falkor and qdf24xx support.
    
    From-SVN: r249628

commit 1ba13896ebe9e4630984280e7e07dd06f65740fe
Author: Marek Polacek <polacek@redhat.com>
Date:   Sat Jun 24 11:05:12 2017 +0000

    re PR tree-optimization/80612 (ICE in get_range_info, at tree-ssanames.c:375)
    
            PR tree-optimization/80612
            * calls.c (get_size_range): Check for INTEGRAL_TYPE_P.
    
            * gcc.dg/torture/pr80612.c: New test.
    
    From-SVN: r249625

commit ed9193e42dd817454e5bbbc2a3766bdfe559f39c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 24 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r249618

commit 6eb22297df6449f2f8ee46bd1052fa947698aa27
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 23 19:30:01 2017 -0400

    PR c++/79056 - C++17 ICE with invalid template syntax.
    
            * parser.c (cp_parser_simple_type_specifier): Don't assume that type
            is a TYPE_DECL.
            (cp_parser_check_for_invalid_template_id): Handle TYPE_DECL.
            * pt.c (template_placeholder_p): New.
            * cp-tree.h: Declare it.
    
    From-SVN: r249615

commit ac6a451c19f96ee70517ec7c58d8b4143840d6ec
Author: Eric Botcazou <ebotcazou@libertysurf.fr>
Date:   Fri Jun 23 19:34:21 2017 +0200

    os-unix-sysdep.c (__cilkrts_getticks): Adjust preprocessor test for SPARC/Linux.
    
            * runtime/config/sparc/os-unix-sysdep.c (__cilkrts_getticks): Adjust
            preprocessor test for SPARC/Linux.
            * runtime/jmpbuf.h (CILK_[UN]ADJUST_SP): Likewise.
    
    From-SVN: r249602

commit 5105d5588d754691c321a8f038a5da1e0a8b4870
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Jun 23 17:12:32 2017 +0000

    os: align siginfo argument to waitid
    
        Backport https://golang.org/cl/46511 from gc trunk, as it may fix a
        bug reported for gccgo running on MIPS
        (https://groups.google.com/d/msg/golang-dev/sDg-t1_DPw0/-AJmLxgPBQAJ).
    
        Reviewed-on: https://go-review.googlesource.com/46571
    
    From-SVN: r249600

commit 4e85f2146a45cd702360d895a2ffe6c73c6a5f80
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Fri Jun 23 16:08:40 2017 +0000

    [ARM] Rename FPSCR builtins to correct names
    2017-06-23  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
        gcc/
        * gcc/config/arm/arm-builtins.c (arm_init_builtins): Rename
        __builtin_arm_ldfscr to __builtin_arm_get_fpscr, and rename
        __builtin_arm_stfscr to __builtin_arm_set_fpscr.
    
        gcc/testsuite/
        * gcc.target/arm/fpscr.c: New file.
    
    From-SVN: r249596

commit 13e96c875c24f136d8f166f6e8fdbebb5043e705
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 23 11:56:04 2017 +0100

    PR c++/81187 fix -Wnoexcept-type entry in manual
    
            PR c++/81187
            * doc/invoke.texi (-Wnoexcept-type): Fix name of option, from
            -Wnoexcept.
    
    From-SVN: r249586

commit 662a3c2b4d333aad808e0e1ed8068108756a5edf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 23 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r249582

commit ccefbdd7ef0211005b8d7e4ebc1d857c176a1990
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:41:09 2017 +0200

    Backport r249368
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-19  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80879
            * gimplify.c (gimplify_switch_expr):
            Initialize live_switch_vars for SWITCH_BODY == STATEMENT_LIST.
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-19  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80879
            * gcc.dg/asan/use-after-scope-switch-4.c: New test.
    
    From-SVN: r249551

commit 8540410965d84082886cc840c4d27d32240d6214
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:40:43 2017 +0200

    Backport r248729
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-31  Martin Liska  <mliska@suse.cz>
    
            PR target/79155
            * config/i386/cpuid.h: Fix typo in a comment in cpuid.h.
    
    From-SVN: r249550

commit 074bec2a33c3d5eed714497a719108865a50e65f
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:40:15 2017 +0200

    Backport r248647
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-30  Martin Liska  <mliska@suse.cz>
    
            PR other/80909
            * auto-profile.c (get_function_decl_from_block): Fix
            parenthesis.
    
    From-SVN: r249549

commit 40fbc3ff0c85d3537d3ade7903f35954694dd241
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:40:00 2017 +0200

    Backport r248489
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * params.def: Bound partial-inlining-entry-probability param.
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * g++.dg/ipa/pr80212.C: Remove the test as it does not longer
            split at the problematic spot.
            * gcc.dg/ipa/pr48195.c: Change 101 to 100 as 101 is no longer
            a valid value of the param.
    
    From-SVN: r249548

commit 294842cb2e0676aa722a99c3e8fb9a6e7c4691d5
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:39:26 2017 +0200

    Backport r248089
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-16  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79849.
            PR ipa/79850.
            * ipa-devirt.c (warn_types_mismatch): Fix typo.
            (odr_types_equivalent_p): Likewise.
    
    From-SVN: r249547

commit 1c5214501b4127bb786b130b258641c34256a80b
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:38:56 2017 +0200

    Backport r248060
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-15  Martin Liska  <mliska@suse.cz>
    
            PR driver/31468
            * gcc.c (process_command): Do not allow empty argument of -o option.
    
    From-SVN: r249546

commit f98d120b10ca62c86b28ebae104ff61ab62d2be5
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:38:40 2017 +0200

    Backport r247507
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Add missing preposition.
            * gcov.c (function_info::function_info): Properly fill up
            all member variables.
    
    From-SVN: r249545

commit c7da80177d10b4ffaed13c1f96f0583910f318b5
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:38:22 2017 +0200

    Backport r247485
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            PR other/80589
            * common.opt: Fix typo.
            * doc/invoke.texi: Likewise.
    
    From-SVN: r249544

commit 5b8ea22b86164fbb73ce0bc225383b8b6ec99f33
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:37:57 2017 +0200

    Backport r247377
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Enhance documentation of gcov.
    
    From-SVN: r249543

commit 7b11e21d5f966bd2bbfe92f7bad3783931051de8
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:37:38 2017 +0200

    Backport r247376
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Sort options in alphabetic order.
            * doc/gcov-dump.texi: Likewise.
            * doc/gcov-tool.texi: Likewise.
            * gcov.c (print_usage): Likewise.
            * gcov-dump.c (print_usage): Likewise.
            * gcov-tool.c (print_merge_usage_message): Likewise.
            (print_rewrite_usage_message): Likewise.
            (print_overlap_usage_message): Likewise.
    
    From-SVN: r249542

commit 2f5b8b6d6f75493d645dd09255171163a72c0c0e
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:37:13 2017 +0200

    Backport r247375
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/53915
            * gcov.c (format_gcov): Print 'NAN %' when top > bottom.
    
    From-SVN: r249541

commit ed4635ea7237062afbfdd68903935f7d735342c9
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:36:56 2017 +0200

    Backport r247371
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR driver/56469
            * coverage.c (coverage_remove_note_file): New function.
            * coverage.h: Declare the function.
            * toplev.c (finalize): Clean if an error has been seen.
    
    From-SVN: r249540

commit 4931d01ed6f6af202ee4995c0f7056ffcfdcd9a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 22 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r249491

commit 967348bc04280152c2a8109310c28cfcbb08951a
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jun 21 22:51:15 2017 +0000

    backport: re PR target/80510 (Optimize Power7/power8 Altivec load/stores)
    
    2017-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: Restrict test to 64-bit until
            32-bit support is added.  Change ITYPE size to 64-bit integer.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
    From-SVN: r249488

commit ceccf94fd2b4efc73bed5aad9ec54d9b1ca44d5b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:23:16 2017 +0200

    re PR target/81151 (-Wmaybe-uninitialized in insn-emit.c)
    
            PR target/81151
            * config/i386/sse.md (round<mode>2): Renumber match_dup and
            operands indexes to avoid gap between operands and match_dups.
    
    From-SVN: r249484

commit 54a390bed71824a0b4d1df8211fad884f2fb9a33
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:22:05 2017 +0200

    re PR c++/81154 (OpenMP with shared variable in a template class crash)
    
            PR c++/81154
            * semantics.c (handle_omp_array_sections_1, finish_omp_clauses):
            Complain about t not being a variable if t is OVERLOAD even
            when processing_template_decl.
    
            * g++.dg/gomp/pr81154.C: New test.
    
    From-SVN: r249483

commit 8887fa10785a8a7788e86db18dc54f7470ff4b0f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:19:38 2017 +0200

    re PR c++/81130 (ICE OpenMP shared clause in gimplify_var_or_parm_decl, at gimplify.c:2584)
    
            PR c++/81130
            * gimplify.c (omp_add_variable): Don't force GOVD_SEEN for types
            with ctors/dtors if GOVD_SHARED is set.
    
            * testsuite/libgomp.c++/pr81130.C: New test.
    
    From-SVN: r249482

commit 67d4a7232c0d787319d9c7c73ac51e84ee01bd3b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:18:34 2017 +0200

    backport: re PR target/81121 (ICE: in extract_insn, at recog.c:2311)
    
            Backported from mainline
            2017-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81121
            * config/i386/i386.md (TARGET_USE_VECTOR_CONVERTS float si->{sf,df}
            splitter): Require TARGET_SSE2 in the condition.
    
            * gcc.target/i386/pr81121.c: New test.
    
    From-SVN: r249481

commit 34bec96670ff5a83e71d8627d66b88aee07a614b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:17:49 2017 +0200

    backport: re PR sanitizer/81125 (-fsanitize=undefined ICE)
    
            Backported from mainline
            2017-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81125
            * ubsan.h (ubsan_encode_value): Workaround buggy clang++ parser
            by removing enum keyword.
            (ubsan_type_descriptor): Likewise.  Formatting fix.
    
            2017-06-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81125
            * ubsan.h (enum ubsan_encode_value_phase): New.
            (ubsan_encode_value): Change second argument to
            enum ubsan_encode_value_phase with default value of
            UBSAN_ENCODE_VALUE_GENERIC.
            * ubsan.c (ubsan_encode_value): Change second argument to
            enum ubsan_encode_value_phase PHASE from bool IN_EXPAND_P,
            adjust uses, for UBSAN_ENCODE_VALUE_GENERIC use just
            create_tmp_var_raw instead of create_tmp_var and use a
            TARGET_EXPR.
            (ubsan_expand_bounds_ifn, ubsan_build_overflow_builtin,
            instrument_bool_enum_load, ubsan_instrument_float_cast): Adjust
            ubsan_encode_value callers.
    
            PR sanitizer/81111
            * ubsan.c (ubsan_encode_value): If current_function_decl is NULL,
            use create_tmp_var_raw instead of create_tmp_var, mark it addressable
            just by setting TREE_ADDRESSABLE on the result and use a TARGET_EXPR.
    
            PR sanitizer/81125
            * g++.dg/ubsan/pr81125.C: New test.
    
            PR sanitizer/81111
            * g++.dg/ubsan/pr81111.C: New test.
    
    From-SVN: r249480

commit 32047dc9b8ec39fd6ee1c6a4d26064c78a7cb43e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:15:55 2017 +0200

    backport: re PR sanitizer/80973 (ICE with lambda and -fsanitize=undefined)
    
            Backported from mainline
            2017-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80973
            * cp-gimplify.c (cp_genericize_r): Don't instrument MEM_REF second
            argument even if it has REFERENCE_TYPE.
    
            * g++.dg/ubsan/pr80973.C: New test.
    
    From-SVN: r249479

commit 6bf3d75c4041c5bfaf4099e629130f83e6221d3e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 00:14:23 2017 +0200

    backport: re PR c++/80984 (ICE with label/variable ambiguity)
    
            Backported from mainline
            2017-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80984
            * cp-gimplify.c (cp_genericize): Only look for VAR_DECLs in
            BLOCK_VARS (outer) chain.
            (cxx_omp_const_qual_no_mutable): Likewise.
    
            * g++.dg/opt/nrv18.C: New test.
    
    From-SVN: r249478

commit dedf5c85237d54e574134589aab8a612606a70b2
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Thu Jun 22 00:09:46 2017 +0300

    PR libstdc++/80675, PR libstdc++/80940
    
    Backport from mainline
    2017-06-21  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/80675
    PR libstdc++/80940
    * include/std/istream:
    (__is_convertible_to_basic_istream_test(basic_istream<_Ch, _Up>*)): New.
    (__do_is_convertible_to_basic_istream_impl): Likewise.
    (__is_convertible_to_basic_istream_impl): Likewise.
    (__is_convertible_to_basic_istream): Use the new base.
    (__rvalue_istream_type): New.
    (operator>>(_Istream&&, _Tp&&)): Use the new helper alias
    for the SFINAE check, convert to the helper alias type before
    doing the actual extraction.
    * include/std/ostream:
    (__is_convertible_to_basic_ostream_test(basic_ostream<_Ch, _Up>*)): New.
    (__do_is_convertible_to_basic_ostream_impl): Likewise.
    (__is_convertible_to_basic_ostream_impl): Likewise.
    (__is_convertible_to_basic_ostream): Use the new base.
    (__rvalue_ostream_type): New.
    (operator<<(_Ostream&&, const _Tp&)): Use the new helper alias
    for the SFINAE check, convert to the helper alias type before
    doing the actual insertion.
    * testsuite/27_io/rvalue_streams-2.cc: Add new tests.
    
    From-SVN: r249471

commit 50ae657ea5d7e01c20b47332e81ff2ac71a4e222
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jun 21 17:17:28 2017 +0200

    baseline_symbols.txt: Update.
    
            * config/abi/post/alpha-linux-gnu/baseline_symbols.txt: Update.
    
    From-SVN: r249456

commit 08c2c9a7ab713bb1c328c42c4852909226f4807c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jun 21 09:55:52 2017 +0100

    PR libstdc++/81092 Regenerate configure for libtool_VERSION change
    
            PR libstdc++/81092
            * configure: Regenerate.
    
    From-SVN: r249439

commit 2a2264286085992ec90fef20cec0231b7b34e8aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 21 00:16:26 2017 +0000

    Daily bump.
    
    From-SVN: r249431

commit fc6f394ab7385adcf4a6bf09086c2a0147482c58
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Jun 20 12:47:58 2017 -0400

    PR c++/80972 - C++17 ICE with attribute packed.
    
            * call.c (build_over_call): Allow a TARGET_EXPR from reference
            binding.
    
    From-SVN: r249421

commit 2cbfe194873c1d4517489d2d64c5d9da35a3eedc
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Tue Jun 20 13:47:03 2017 +0000

    Backport: [Patch AArch64 obvious] Fix expected string for fp16 extensions
    
            * config/aarch64/aarch64-option-extensions.def (fp16): Fix expected
            feature string.
    
    From-SVN: r249413

commit a7f71015027eba72f0f98731a783f28da7fd397a
Author: Andreas Schwab <schwab@suse.de>
Date:   Tue Jun 20 10:27:32 2017 +0000

    re PR target/80970 (internal compiler error in find_reloads, at reload.c:4077)
    
    PR target/80970
    * config/m68k/m68k.md (bsetdreg, bchgdreg, bclrdreg): Use "=d"
    instead of "+d".
    
    From-SVN: r249402

commit 655d472f96d81c7b1ffec2e972cbb94327ac2c60
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 20 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r249393

commit d9710c57726c696bb6ec48c10b3c24a95fd17073
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jun 19 16:56:08 2017 -0400

    PR c++/80562 - ICE with constexpr if.
    
            * semantics.c (finish_if_stmt_cond): Call
            instantiate_non_dependent_expr.
    
    From-SVN: r249389

commit 5bc2a4df8a64759276eb75d8a3247d77ecdc11db
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jun 19 16:56:02 2017 -0400

    PR c++/80829 - ICE with constexpr copy of base subobject.
    
            * constexpr.c (clear_no_implicit_zero): New.
            (cxx_eval_call_expression): Call it.
    
    From-SVN: r249388

commit 630825e20475604d0d551b47b9305931c8c0a4b2
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jun 19 14:20:48 2017 -0400

    PR c++/81073 - constexpr and static var in statement-expression.
    
            * constexpr.c (cxx_eval_constant_expression) [DECL_EXPR]: Check
            potential_constant_expression.
    
    From-SVN: r249383

commit b1eff1fcd6c8187c56124e5a7fc8cdc4e3bef01b
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Mon Jun 19 16:58:03 2017 +0000

    Backport: [Patch ARM] Fix PR71778
    
    gcc/
    
            PR target/71778
            * config/arm/arm-builtins.c (arm_expand_builtin_args): Return TARGET
            if given a non-constant argument for an intrinsic which requires a
            constant.
    
    gcc/testsuite/
    
            PR target/71778
            * gcc.target/arm/pr71778.c: New.
    
    From-SVN: r249379

commit 0f6691118ac4a6c97159f1c7bb20490df438a5a6
Author: Alexander Monakov <amonakov@ispras.ru>
Date:   Mon Jun 19 19:08:52 2017 +0300

    doc: update x86 -mcx16 option description
    
            * doc/invoke.texi (mcx16): Rewrite.
    
    From-SVN: r249377

commit 355a0a7911457df6a53048734c8958de5bdff8c7
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Jun 19 10:12:07 2017 +0000

    Update Solaris baselines for GCC 7.2 (PR libstdc++/81092)
    
            * config/abi/post/i386-solaris2.10/baseline_symbols.txt: Regenerate.
            * config/abi/post/i386-solaris2.10/amd64/baseline_symbols.txt: Likewise.
            * config/abi/post/i386-solaris2.11/baseline_symbols.txt: Likewise.
            * config/abi/post/i386-solaris2.11/amd64/baseline_symbols.txt: Likewise.
            * config/abi/post/sparc-solaris2.10/baseline_symbols.txt: Likewise.
            * config/abi/post/sparc-solaris2.10/sparcv9/baseline_symbols.txt:
            Likewise.
            * config/abi/post/sparc-solaris2.11/baseline_symbols.txt: Likewise.
            * config/abi/post/sparc-solaris2.11/sparcv9/baseline_symbols.txt:
            Likewise.
    
    From-SVN: r249363

commit c76b9f519e4ba4df6d0b608f42c1241cc71df1c8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 19 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r249355

commit ff14bc27a7c25f1077a8f400d8fc7a63e5eafa18
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sun Jun 18 19:00:49 2017 +0000

    x32: Update baseline_symbols.txt
    
            PR libstdc++/81092
            * config/abi/post/x86_64-linux-gnu/x32/baseline_symbols.txt: Updated.
    
    From-SVN: r249351

commit 7cb25c3b535d2e4220466d394452731c61b762a6
Author: Jason Merrill <jason@redhat.com>
Date:   Sun Jun 18 00:54:37 2017 -0400

    PR c++/60063 - -Wunused-local-typedefs and templates.
    
            * decl2.c (is_late_template_attribute): Return false for "used".
    
    From-SVN: r249346

commit 533b0f557648be0c2c1c552acd5ba304147a3b40
Author: Jason Merrill <jason@redhat.com>
Date:   Sun Jun 18 00:28:03 2017 -0400

    PR c++/70844 - -Wuseless-cast and inheriting constructor.
    
            * method.c (forward_parm): Suppress warn_useless_cast.
    
    From-SVN: r249345

commit 23abfeb281e70caa8652c9bd9b1d18649f6ce327
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 18 00:16:32 2017 +0000

    Daily bump.
    
    From-SVN: r249342

commit 006879f2da2c6f2902ac861a8c27d91054d1e353
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Fri Jun 16 22:49:22 2017 -0400

    fix ChangeLog
    
    From-SVN: r249335

commit 05b15104069b75ca4d7403edeec37e5b1ad8ddca
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:34:15 2017 -0400

    PR c++/81045 - Wrong type-dependence with auto return type.
    
            * pt.c (type_dependent_expression_p): An undeduced auto outside the
            template isn't dependent.
            * call.c (build_over_call): Instantiate undeduced auto even in a
            template.
    
    From-SVN: r249333

commit 2fa1a2d996ec430832ecf8b6027e23f3aeebff35
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:34:08 2017 -0400

    PR c++/81102 - Wrong error with partial specialization.
    
            * pt.c (unify) [TEMPLATE_PARM_INDEX]: Strip reference when comparing
            types.  Do type deduction later.
    
    From-SVN: r249332

commit 9773d53aa3a1087ffbd3eabd592c1950bd543782
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:34:01 2017 -0400

    PR c++/80174 - ICE with partial specialization of member template.
    
            PR c++/71747
            * pt.c (get_partial_spec_bindings): Only coerce innermost args.
    
    From-SVN: r249331

commit 4f3d690c9b89d275f8836a115708c31df528e57f
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:51 2017 -0400

    PR c++/80831 - ICE with -fsyntax-only.
    
            * decl2.c (c_parse_final_cleanups): Use cgraph_node::get_create.
    
    From-SVN: r249330

commit 5e5932dca5cb39bf1ba5eb83d02cfda8bcb70183
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:43 2017 -0400

    PR c++/80639 - ICE with invalid PMF initialization.
    
            PR c++/80043 - ICE with -fpermissive
            * typeck.c (convert_for_assignment): Recurse when instantiate_type
            returns without an error.
    
    From-SVN: r249329

commit d4ddf7af75e164b67f16e47a64729b1262e824ea
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:36 2017 -0400

    PR c++/80465 - ICE with generic lambda with noexcept-specifier.
    
            * lambda.c (maybe_add_lambda_conv_op): Keep processing_template_decl
            set longer for a generic lambda.
    
    From-SVN: r249328

commit e2595c6b322889ee9a5b58c5a18c8a98f469aa24
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:28 2017 -0400

    PR c++/80614 - Wrong mangling for C++17 noexcept type
    
            * mangle.c (write_type): Put the eh spec back on the function type.
    
    From-SVN: r249327

commit a053c1f4ee32fac415f5dd8faf995992bbf5a9df
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:10 2017 -0400

    PR c++/80384 - ICE with dependent noexcept-specifier
    
            * pt.c (dependent_type_p_r) [FUNCTION_TYPE]: Check for dependent
            noexcept-specifier.
    
    From-SVN: r249326

commit 154c2e3781e9321d67c9f6bdc6464d6126249ba0
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:33:01 2017 -0400

    Fix array decay handling in constant expressions.
    
            * parser.c (cp_parser_constant_expression): Check
            potential_rvalue_constant_expression after decay_conversion.
            * pt.c (convert_nontype_argument): Don't require linkage in C++17.
    
    From-SVN: r249325

commit 5aed8fcfb50e70fc90f8c82533cda10d15a03d78
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jun 16 22:32:53 2017 -0400

    * constexpr.c (potential_constant_expression_1): Allow 'this' capture.
    
    From-SVN: r249324

commit c4b6e29e275ea60883feb94c63149830078ad73e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 17 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r249315

commit b9306aabbfa2ee38027a6ab120acf19e8f8691c9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 16 16:31:58 2017 +0200

    re PR libstdc++/81092 (Missing symbols for new std::wstring constructors)
    
            PR libstdc++/81092
            * config/abi/post/i486-linux-gnu/baseline_symbols.txt: Update.
    
    From-SVN: r249261

commit d8be51c85f02c5c4e42f1b49366e9058083bf4fa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 14:35:22 2017 +0100

    Fix std::wbuffer_convert::sync()
    
            * include/bits/locale_conv.h (wbuffer_convert::sync): Fix condition.
            * testsuite/22_locale/conversions/buffer/2.cc: New.
    
    From-SVN: r249256

commit 38a5f817827434dbcc0a8f8c17bced103e1b0446
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:19:54 2017 +0100

    Backport libstdc++ doc improvements from mainline
    
            * doc/xml/manual/appendix_contributing.xml: Link to the list of bad
            names, and link to the test docs and note higher DejaGnu version
            requirement.
            * doc/xml/manual/allocator.xml: Fix ViewCVS URLs.
            * doc/xml/manual/mt_allocator.xml: Likewise.
            * doc/xml/manual/test.xml: Correct instructions on running tests.
            * doc/html/*: Regenerate.
    
    From-SVN: r249250

commit b1a54fbcfff60551fa182b0cef0dd7fec31bcebc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:18:53 2017 +0100

    PR libstdc++/81092 add std::wstring symbols and bump library version
    
            PR libstdc++/81092
            * acinclude.m4: Bump libtool_VERSION.
            * config/abi/post/i386-linux-gnu/baseline_symbols.txt: Update.
            * config/abi/post/x86_64-linux-gnu/32/baseline_symbols.txt: Update.
            * config/abi/pre/gnu.ver: Add wstring constructor symbols to new
            GLIBCXX_3.4.24 version.
            * doc/xml/manual/abi.xml: Document new versions.
            * doc/html/*: Regenerate.
            * testsuite/21_strings/basic_string/cons/char/8.cc: Use base object
            constructors to ensure required symbols are exported.
            * testsuite/21_strings/basic_string/cons/wchar_t/8.cc: Likewise.
            * testsuite/util/testsuite_abi.cc: Add new version.
    
    From-SVN: r249248

commit 0d6e29350848a42f1a6df613d68e1c33d813f941
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:18:44 2017 +0100

    Fix missing returns in libstdc++ header and tests
    
            * include/bits/locale_conv.h (wbuffer_convert::_M_put): Add missing
            return statement.
            * testsuite/21_strings/basic_string_view/operations/copy/char/1.cc:
            Return void.
            * testsuite/21_strings/basic_string_view/operations/copy/wchar_t/1.cc:
            Likewise.
            * testsuite/23_containers/map/modifiers/insert_or_assign/1.cc: Add
            missing return statements.
            * testsuite/23_containers/unordered_map/modifiers/insert_or_assign.cc:
            Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/char/12.cc:
            Return void.
            * testsuite/special_functions/14_expint/pr68397.cc: Likewise.
    
    From-SVN: r249247

commit 5b0b04750a5931884cee5401ea493116168f3455
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 16 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249232

commit 6a799a264b689f3200a7721135e8949040e3ba0c
Author: Nicolas Boulenguez <nicolas.boulenguez@free.fr>
Date:   Fri Jun 16 00:22:18 2017 +0200

    re PR ada/81105 (system-freebsd-x86.ads renamed but referenced by gcc/ada/gcc-interface/Makefile.in)
    
            PR ada/81105
            * gcc-interface/Makefile.in (x86 kfreebsd): Adjust system.ads setting.
            (i[3456]86-pc-gnu): Likewise.
            (x86_64 kfreebsd): Likewise.
    
    From-SVN: r249229

commit da9057102cf97d597b23edc1686c8fbf46add146
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 15 13:25:33 2017 +0000

    re PR rtl-optimization/80474 (ipa-cp wrongly adding LO(symbol) twice)
    
            PR rtl-optimization/80474
            * reorg.c (update_block): Do not ignore instructions in a delay slot.
    
    From-SVN: r249220

commit 50e0759745e255a9fdcf29d1ff09ce96fc6d853d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 15 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r249211

commit d03f4299d3d6606aa2097fb8bdefa5fd745a70e0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 14 11:23:18 2017 +0000

    sparc.h (MASK_ISA): Add MASK_LEON and MASK_LEON3.
    
            * config/sparc/sparc.h (MASK_ISA): Add MASK_LEON and MASK_LEON3.
            (MASK_FEATURES): New macro.
            * config/sparc/sparc.c (sparc_option_override): Remove the special
            handling of -mfpu and generalize it to all MASK_FEATURES switches.
    
    From-SVN: r249190

commit 9b6d5249f7509e05e3bd1d1a2cfde81c0ce0a7a4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 14 07:45:45 2017 +0000

    * config/sparc/driver-sparc.c (cpu_names): Add SPARC-T5 entry.
    
    From-SVN: r249184

commit 5a38e4f706d4e865da23ee50a9eca35f54b9aa2c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 14 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r249178

commit 48aa6391641aed6578752940a842bcbbab1a1aeb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 13 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249141

commit e45a996a2fa0e8ef838aed5f21c0a9057c90df5f
Author: David S. Miller <davem@davemloft.net>
Date:   Mon Jun 12 19:32:49 2017 +0000

    More refinements to fixing sparc's PR target/80968.
    
            PR target/80968
            * config/sparc/sparc.md (return expander): Emit frame blockage if
            function uses alloca.
    
    From-SVN: r249135

commit dd7cdec6c1d95c83e7494977181267edda5f4ec7
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 12 10:49:17 2017 +0000

    re PR ada/81070 (build failure for s-intrr.adb)
    
            PR ada/81070
            * s-interr-hwint.adb: Reinstate.
            * gcc-interface/Makefile.in (RTEMS): Use it again.
    
    From-SVN: r249116

commit 95abcdaa9b96f0b2ea6fe5bc7a3b2965dcdf3866
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Mon Jun 12 07:06:40 2017 +0000

    RTEMS: Use TLS for Ada run-time
    
    Do not use the RTEMS-specific task variables for the Ada run-time since
    they are not available in RTEMS 4.12 or later.  Use thread-local storage
    instead.
    
    gcc/ada
            * Makefile.in (rtems): Use TLS implementation for
            s-tpopsp.adb.
            * s-tpopsp-rtems.adb: Delete.
    
    From-SVN: r249112

commit 4288036a1cbd56f549dac61ce87644eceb1687e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 12 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r249109

commit 8dee77ca78f9232794543b0f0af780f5c61e1b1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 11 00:16:30 2017 +0000

    Daily bump.
    
    From-SVN: r249101

commit 0bcae538480b49c819d5ab1cb018ac4f55439742
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 10 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249086

commit d4e39c88698dfd6874916684335f850def0eb253
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Jun 9 19:45:53 2017 +0200

    backport: re PR fortran/70601 ([OOP] ICE on procedure pointer component call)
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * trans-expr.c (gfc_conv_procedure_call): Fix detection of allocatable
            function results.
    
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * gfortran.dg/proc_ptr_comp_50.f90: New test.
    
    From-SVN: r249066

commit e40747b16bda4b8f6fdb2deaaba93545c18921aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 9 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249044

commit 2d4d4a3bc51907818c2c008395900e76d7ed2462
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Jun 8 21:42:59 2017 +0200

    re PR target/81015 (Bad codegen for __builtin_clz(unsigned short))
    
            PR target/81015
            Revert:
            2016-12-14  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/59874
            * config/i386/i386.md (*ctzhi2): New insn_and_split pattern.
            (*clzhi2): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/81015
            * gcc.target/i386/pr59874-1.c (foo): Call __builtin_ctzs.
            * gcc.target/i386/pr59874-2.c (foo): Call __builtin_clzs.
            * gcc.target/i386/pr81015.c: New test.
    
    From-SVN: r249039

commit 7d75cd45a716ffbdad8292fa1eb88adef6299144
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 8 21:12:38 2017 +0200

    re PR c/81006 (ICE with zero-size array and #pragma omp task depend)
    
            PR c/81006
            * c-typeck.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * semantics.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * c-c++-common/gomp/pr81006.c: New test.
    
    From-SVN: r249036

commit d5e8341185ff23231bc64e4d623b29970ba0ae7f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 8 21:02:09 2017 +0200

    re PR c++/81011 (ICE with #pragma omp task and inaccessible copy-constructor)
    
            PR c++/81011
            * cp-gimplify.c (cxx_omp_finish_clause): When changing clause
            to OMP_CLAUSE_SHARED, also clear OMP_CLAUSE_SHARED_FIRSTPRIVATE
            and OMP_CLAUSE_SHARED_READONLY flags.
    
            * g++.dg/gomp/pr81011.C: New test.
    
    From-SVN: r249032

commit 854e6816b8ef2780fd1b77437260e5039a05b296
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Thu Jun 8 13:21:46 2017 +0000

    backport: dwarf2out.c (DWARF_INITIAL_LENGTH_SIZE_STR): New.
    
            Backport from mainline
            2017-06-02  David Edelsohn  <dje.gcc@gmail.com>
    
            * dwarf2out.c (DWARF_INITIAL_LENGTH_SIZE_STR): New.
            (dl_section_ref): New.
            (dwarf2out_finish): Copy debug_line_section_label to dl_section_ref.
            On AIX, append an expression to subtract the size of the
            section length to dl_section_ref.
    
    From-SVN: r249014

commit 85f405a71ab5313f37608907de1716b4f8020c41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 8 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r249002

commit f7ab96ef5b36fa613f2144e6d567faece1b5ba3e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jun 7 17:50:36 2017 +0100

    PR libstdc++/81002 fix std::basic_regex range constructor
    
            PR libstdc++/81002
            * include/bits/regex_compiler.h (__compile_nfa): Add template argument
            list to specify traits type.
            * testsuite/28_regex/basic_regex/ctors/basic/iter.cc: New.
    
    From-SVN: r248991

commit ac19d704013644b9a4654db0feab2a69eafa83ce
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 7 13:07:06 2017 +0000

    Backport PRs 80549, 80593, 80705, 80842, 80906
    
    2017-06-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-05-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80549
            * tree-cfgcleanup.c (mfb_keep_latches): New helper.
            (cleanup_tree_cfg_noloop): Create forwarders to known loop
            headers if they do not have a preheader.
    
            * gcc.dg/torture/pr80549.c: New testcase.
    
            2017-05-19  Richard Biener  <rguenther@suse.de>
    
            PR c++/80593
            * c-warn.c (strict_aliasing_warning): Do not warn for accesses
            to alias-set zero memory.
    
            * g++.dg/warn/Wstrict-aliasing-bogus-char-2.C: New testcase.
            * g++.dg/warn/Wstrict-aliasing-6.C: Adjust expected outcome.
    
            2017-05-26  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80842
            * tree-ssa-ccp.c (set_lattice_value): Always meet with the old
            value.
    
            * gcc.dg/torture/pr80842.c: New testcase.
    
            2017-05-31  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80906
            * graphite-isl-ast-to-gimple.c (copy_loop_close_phi_nodes): Get
            and pass through iv_map.
            (copy_bb_and_scalar_dependences): Adjust.
            (translate_pending_phi_nodes): Likewise.
            (copy_loop_close_phi_args): Handle code-generating IVs instead
            of ICEing.
    
            * gcc.dg/graphite/pr80906.c: New testcase.
    
            2017-05-11  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80705
            * tree-vect-data-refs.c (vect_analyze_data_refs): DECL_NONALIASED
            bases are not vectorizable.
    
            * gcc.dg/vect/bb-slp-pr80705.c: New testcase.
    
    From-SVN: r248970

commit 2904f6ac8ec020bb8b8dc4883bd36a32a4b4ee06
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Jun 7 11:29:34 2017 +0000

    re PR c/80919 (ICE: Segmentation fault with -Wall when printing address of size 0 array)
    
            PR c/80919
            * c-format.c (matching_type_p): Return false if any of the types
            requires structural equality.
    
            * gcc.dg/format/pr80919.c: New test.
    
    From-SVN: r248963

commit d27af1ff8ae0703435b87d1f8355dca1871e4f09
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 7 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r248941

commit 5aa0092db2ecf88997f5e826b1ce15909c4507ea
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jun 6 22:27:13 2017 +0000

    backport: re PR target/80718 (GCC generates slow code for offsettable vec_duplicate)
    
    Back port from mainline
    
    [gcc]
    2017-05-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80718
            * config/rs6000/vsx.md (vsx_splat_<mode>, VSX_D iterator): Prefer
            VSX registers over GPRs, particularly on ISA 2.07 which does not
            have the MTVSRDD instruction.
    
    [gcc/testsuite]
    2017-05-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80718
            * gcc.target/powerpc/pr80718.c: New test.
    
    From-SVN: r248936

commit 88c502146c211a991649f71f3952965997d8b49d
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Jun 6 22:23:07 2017 +0000

    backport: re PR fortran/80975 (matmul for zero-length arrays)
    
    2017-06-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80975
            * m4/matmul_internal.m4:  Move zeroing before early return.
            * generated/matmul_c10.c: Regenerated.
            * generated/matmul_c16.c: Regenerated.
            * generated/matmul_c4.c: Regenerated.
            * generated/matmul_c8.c: Regenerated.
            * generated/matmul_i1.c: Regenerated.
            * generated/matmul_i16.c: Regenerated.
            * generated/matmul_i2.c: Regenerated.
            * generated/matmul_i4.c: Regenerated.
            * generated/matmul_i8.c: Regenerated.
            * generated/matmul_r10.c: Regenerated.
            * generated/matmul_r16.c: Regenerated.
            * generated/matmul_r4.c: Regenerated.
            * generated/matmul_r8.c: Regenerated.
    
    2017-06-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80975
            * gfortran.dg/matmul_16.f90: New test.
            * gfortran.dg/inline_matmul_18.f90: New test.
    
    From-SVN: r248935

commit 3179bb54ce4e4bdfc7896e3ffacfe9a877f12168
Author: David S. Miller <davem@davemloft.net>
Date:   Tue Jun 6 18:42:52 2017 +0000

    sparc: Fix stack references in return delay slot.
    
    gcc/
    
            PR target/80968
            * config/sparc/sparc.c (sparc_expand_prologue): Emit frame
            blockage if function uses alloca.
    
    gcc/testsuite/
    
            * gcc.target/sparc/sparc-ret-3.c: New test.
    
    From-SVN: r248929

commit 4bbb73f6dfa785e9219bbd60fcc12c9ad7df1c57
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 6 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248907

commit 62bef1b4edb0a43a23400914b115771a5ee6f38c
Author: Volker Reichelt <v.reichelt@netcologne.de>
Date:   Mon Jun 5 18:08:25 2017 +0000

    * doc/invoke.texi (-Wduplicated-branches): Add to warning list.
    
    From-SVN: r248890

commit 7b3108445488ad6e53c64523b78367cabfd0efcf
Author: Volker Reichelt <v.reichelt@netcologne.de>
Date:   Mon Jun 5 17:43:24 2017 +0000

    parser.c (cp_parser_base_specifier): Fix typos in error messages.
    
            * parser.c (cp_parser_base_specifier): Fix typos in error messages.
    
    From-SVN: r248886

commit 7c74f817f55119b8d2701d940f7b840555ad8471
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Mon Jun 5 11:31:32 2017 +0200

    backport: re PR fortran/80766 ([OOP] ICE with type-bound procedure returning an array)
    
    2017-06-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80766
            * resolve.c (resolve_fl_derived): Make sure that vtype symbols are
            properly resolved.
    
    2017-06-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80766
            * gfortran.dg/typebound_call_28.f90: New test.
    
    From-SVN: r248873

commit 9b364150d995930197f3c932788422095f51711b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 5 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r248866

commit 31bcddaf149eb62300c80afb2ce4925b804670c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 4 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r248858

commit ecd702eae857e8969dade9498e2bbb43cd6b3099
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 3 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248850

commit bc217046235cd3defd5d3ef64ad2aee2939ac2a8
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Jun 2 17:44:19 2017 +0000

    re PR fortran/80904 (Matmul result allocated to wrong size)
    
    2017-06-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/80904
            * frontend-passes.c (matmul_lhs_realloc):  Correct
            allocation size for case A1B2.
    
    2017-06-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/80904
            * gfortran.dg/matmul_bounds_12.f90:  New test.
    
    From-SVN: r248842

commit f278c49389895c935179b60d867aba049137bcec
Author: Prakhar Bahuguna <prakhar.bahuguna@arm.com>
Date:   Fri Jun 2 11:19:16 2017 +0000

    PR71607: Fix ICE when loading constant
    
    2017-06-02  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
            Backport from mainline
            2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>
                        Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
            gcc/
            PR target/71607
            * config/arm/arm.md (use_literal_pool): Remove.
            (64-bit immediate split): No longer takes cost into consideration
            if arm_disable_literal_pool is enabled.
            * config/arm/arm.c (arm_tls_referenced_p): Add diagnostic if TLS is
            used when arm_disable_literal_pool is enabled.
            (arm_max_const_double_inline_cost): Remove use of
            arm_disable_literal_pool.
            (push_minipool_fix): Add assert.
            (arm_reorg): Add return if arm_disable_literal_pool is enabled.
            * config/arm/vfp.md (no_literal_pool_df_immediate): New.
            (no_literal_pool_sf_immediate): New.
    
            2017-05-05  Andre Vieira  <andre.simoesdiasvieira@arm.com>
                        Thomas Preud'homme  <thomas.preudhomme@arm.com>
                        Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
            gcc/testsuite/
            PR target/71607
            * gcc.target/arm/thumb2-slow-flash-data.c: Renamed to ...
            * gcc.target/arm/thumb2-slow-flash-data-1.c: ... this.
            * gcc.target/arm/thumb2-slow-flash-data-2.c: New.
            * gcc.target/arm/thumb2-slow-flash-data-3.c: New.
            * gcc.target/arm/thumb2-slow-flash-data-4.c: New.
            * gcc.target/arm/thumb2-slow-flash-data-5.c: New.
            * gcc.target/arm/tls-disable-literal-pool.c: New.
    
    From-SVN: r248822

commit a2b8dde6f8b6fac5c7b291e06cee84491b62c62d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 2 10:12:33 2017 +0200

    re PR rtl-optimization/80903 (ICE: internal consistency failure (error: invalid rtl sharing found in the insn))
    
            PR rtl-optimization/80903
            * loop-doloop.c (add_test): Unshare sequence.
    
            * gcc.dg/pr80903.c: New test.
    
    From-SVN: r248817

commit 6484260ee8913e085cdcda08195b3f6a930f5eea
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 2 09:27:49 2017 +0200

    backport: re PR libgomp/80822 (libgomp incorrect affinity when OMP_PLACES=threads)
    
            Backported from mainline
            2017-05-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/80822
            * config/linux/affinity.c (gomp_affinity_init_level_1): New function.
            (gomp_affinity_init_level): Use it.  Always analyze the core and thread
            sibling lists, depending on level just pick up what CPUs to put
            together into a place vs. whether add multiple ordered places.
    
    From-SVN: r248814

commit f82924227324740320a5d483e1ca193603760957
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 2 09:10:10 2017 +0200

    re PR fortran/80918 (Assumed size whole array rejected in depend clause)
    
            PR fortran/80918
            * openmp.c (resolve_omp_clauses): Fix a typo.
    
            * gfortran.dg/gomp/pr80918.f90: New test.
    
    From-SVN: r248813

commit 7b574b39f14893b6298b3f0a53189947ffcf0438
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 2 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r248809

commit f898a5f385b8d6a86c1260b05ed384098554190e
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Jun 1 22:16:29 2017 +0100

    * es.po: Update.
    
    From-SVN: r248803

commit c54c3289d61aee9db555e16e2147db849b92bd8c
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Thu Jun 1 10:51:50 2017 +0000

    re PR ada/80921 (cross compiling fails to build Ada shared libraries)
    
            PR ada/80921
            * configure.ac (default_gnatlib_target): Remove bogus condition.
            (have_getipinfo): Tweak.
            * configure: Regenerate.
    
    From-SVN: r248786

commit 427fa6c204c22996c9fd35bf69621c81121f7760
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 1 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248769

commit 222a78553a1d79a2a267ae48cb8f57ea95ff1468
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 13:53:20 2017 -0400

    PR c++/80840 - ICE with constexpr and reference
    
            * pt.c (convert_nontype_argument): Don't test whether a decl is
            value-dependent when binding to a reference.
    
    From-SVN: r248755

commit 78578b7e04c3c9d3b375aa4bd465727726755e3b
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 13:53:12 2017 -0400

    PR c++/80856 - ICE with local extern in template
    
            * semantics.c (finish_call_expr): Replace a local extern overload
            set in a template with the IDENTIFIER_NODE.
    
    From-SVN: r248754

commit bb399e300fd47a0b4ee7ef075fdf22002a5d5b8b
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 13:53:06 2017 -0400

    PR c++/80605 - __is_standard_layout and empty base
    
            * class.c (check_bases): Ignore empty bases.
            * class.c (check_bases): Use DECL_FIELD_IS_BASE.
    
    From-SVN: r248753

commit 0634d9fe36e8ced1c6046759f9ce1d2655c8d731
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 13:52:58 2017 -0400

    PR c++/66297, DR 1684 - literal class and constexpr member fns
    
            * constexpr.c (is_valid_constexpr_fn): Only complain about
            non-literal enclosing class in C++11.
            * class.c (finalize_literal_type_property): Likewise.
    
    From-SVN: r248752

commit f0e95f2ca01fa757a2aaa1911d25c9baf3b6dc6c
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 13:52:44 2017 -0400

    PR c++/80179 - ICE with initialized flexible array member.
    
            * constexpr.c (verify_ctor_sanity): Handle flexible array members.
    
    From-SVN: r248751

commit 7a928bc1d72c73465788943f0a68abe8e23f49c1
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed May 31 10:45:23 2017 +0200

    [PR 80293] Dont totally-scalarize char arrays
    
    2017-05-31  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2017-04-24  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/80293
            * tree-sra.c (scalarizable_type_p): New parameter const_decl, make
            char arrays not totally scalarizable if it is false.
            (analyze_all_variable_accesses): Pass correct value in the new
            parameter.  Add a statistics counter.
    
    testsuite/
            * g++.dg/tree-ssa/pr80293.C: New test.
    
    From-SVN: r248724

commit 23558e4988a860ac2aedda2444e4b4bf22dced32
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed May 31 00:28:16 2017 +0000

    gcc: xtensa: fix fprintf format specifiers
    
    HOST_WIDE_INT may not be long as assumed in print_operand and
    xtensa_emit_call. Use HOST_WIDE_INT_PRINT_DEC/HOST_WIDE_INT_PRINT_HEX
    format strings instead of %ld/0x%lx. This fixes incorrect assembly code
    generation by the compiler running on armhf host.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2017-05-29  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_emit_call): Use
            HOST_WIDE_INT_PRINT_HEX instead of 0x%lx format string.
            (print_operand): Use HOST_WIDE_INT_PRINT_DEC instead of %ld
            format string.
    
    From-SVN: r248720

commit 72d003c3a359c3dad46e866bfabd8fcadd0315d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 31 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r248718

commit 3c92cc1a38e2b74f1634ed0117d5478586be5ff3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 30 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r248590

commit 1d7226694d91ef0f5971f97c891196a7fccb966a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon May 29 21:08:29 2017 +0000

    install.texi (Options specification): Restore entry of --enable-sjlj-exceptions.
    
            * doc/install.texi (Options specification): Restore entry of
            --enable-sjlj-exceptions.
    
    From-SVN: r248583

commit df01733f520e183f37c26446b3637939f6df77db
Author: Alexandre Oliva <aoliva@redhat.com>
Date:   Mon May 29 20:30:56 2017 +0000

    [libcc1] drop unused field from C++ lang_identifier
    
    for  gcc/cp/ChangeLog
    
            * cp-tree.h (lang_identifier): Drop oracle_looked_up, unused.
    
    From-SVN: r248581

commit 8de0f875d0155f6c2c623be12218435102d4c53b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Mon May 29 07:54:13 2017 +0000

    S/390: Fix PR80725.
    
    gcc/ChangeLog:
    
    2017-05-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/80725
            * config/s390/s390.c (s390_check_qrst_address): Check incoming
            address against address_operand predicate.
            * config/s390/s390.md ("*indirect_jump"): Swap alternatives.
    
    gcc/testsuite/ChangeLog:
    
    2017-05-29  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-24  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/pr80725.c: New test.
    
    From-SVN: r248557

commit a60c747f6d9329e920b2199855e0f5c11ff6e36a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 29 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r248551

commit 460f27038f3356917eaf5263d016d7153b2e37cc
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun May 28 13:45:48 2017 +0200

    backport: i386.md (*movdi_internal): Remove SSE4 alternative 18 (?r, *v).
    
            Backport from mainline
            2017-05-23  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.md (*movdi_internal): Remove SSE4
            alternative 18 (?r, *v).  Update insn attributes.
            (*movsi_internal): Remove SSE4 alternative 13 (?r, *v).
            Update insn attributes.
            (*zero_extendsidi2): Remove SSE4 alternative (?r, *x).
            Update insn attributes.
            * config/i386/sse.md (vec_extract<ssevecmodelower>_0): Remove SSE4
            alternative 1 (r, v). Remove isa attribute.
            * config/i386/i386.c (dimode_scalar_chain::make_vector_copies):
            Always move value through stack for !TARGET_INTER_UNIT_MOVES_TO_VEC
            and !TARGET_INTER_UNIT_MOVES_TO_VEC targets.
    
            2017-05-16  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.md (*movsi_internal): Split (?rm,*y) alternative
            to (?r,*Yn) and (?m,*y) alternatives, and (?*y,rm) to (?*Ym,r)
            and (?*y,m).  Update insn attributes.
    
    From-SVN: r248545

commit b247e3e55c7052cc3603832b5a1fa067fe17da83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 28 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r248543

commit 0ebcbbc1ffae0e70ab48f3bad73ee577885b815a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 27 00:16:27 2017 +0000

    Daily bump.
    
    From-SVN: r248531

commit b7a489b025cbbbbb2ab52191c7a523fc73d72e4b
Author: Richard Henderson <rth@redhat.com>
Date:   Fri May 26 12:29:46 2017 -0700

    re PR libgcc/80037 (Bad .eh_frame data in crtend.o)
    
    PR libgcc/80037
    
     Backport from mainline
     * config/alpha/t-alpha (CRTSTUFF_T_CFLAGS): New.
    
    From-SVN: r248525

commit 810113dfcab7e961a277fec15bdb4fdb51ddd7c8
Author: Sheldon Lobo <smlobo@sheldon.us.oracle.com>
Date:   Fri May 26 18:46:47 2017 +0000

    backport: sparc.md (length): Return the correct value for -mflat sibcalls to match output_sibcall.
    
            Backported from mainline
            2017-05-24  Sheldon Lobo  <smlobo@sheldon.us.oracle.com>
    
            * config/sparc/sparc.md (length): Return the correct value for -mflat
            sibcalls to match output_sibcall.
    
    From-SVN: r248523

commit 015cf5d1d1ea43b9ade4c58a365be11b02e10df3
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri May 26 11:17:34 2017 +0000

    re PR sanitizer/80659 (-fsanitize=address evokes ICE in in gimplify_switch_expr)
    
            PR sanitizer/80659
            * c-decl.c (build_compound_literal): Set DECL_ARTIFICIAL and
            DECL_IGNORED_P even for non-static compound literals.
    
            * gcc.dg/asan/pr80659.c: New test.
    
    From-SVN: r248491

commit 9e2248e6d31fcb697a83337438ef9509b19db7e5
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri May 26 11:15:37 2017 +0000

    re PR sanitizer/80875 (UBSAN: compile time crash in fold_binary_loc at fold-const.c:9817)
    
            PR sanitizer/80875
            * fold-const.c (fold_binary_loc) <case MULT_EXPR>: Check if OP1
            can be negated.
    
            * c-c++-common/ubsan/pr80875.c: New test.
    
    From-SVN: r248490

commit 9f67f1462df7f186635174995419591dd98860ca
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 26 12:14:37 2017 +0200

    backport: re PR middle-end/80809 (Multi-free error for variable size array used within OpenMP task)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80809
            * omp-low.c (finish_taskreg_remap): New function.
            (finish_taskreg_scan): If unit size of ctx->record_type
            is non-constant, unshare the size expression and replace
            decls in it with possible outer var refs.
    
            * testsuite/libgomp.c/pr80809-2.c: New test.
            * testsuite/libgomp.c/pr80809-3.c: New test.
    
    From-SVN: r248488

commit e8f1beb23173098613c11897ed34b160088e3e8f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 26 12:13:34 2017 +0200

    backport: re PR middle-end/80809 (Multi-free error for variable size array used within OpenMP task)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80809
            * gimplify.c (omp_add_variable): For GOVD_DEBUG_PRIVATE use
            GOVD_SHARED rather than GOVD_PRIVATE with it.
            (gimplify_adjust_omp_clauses_1, gimplify_adjust_omp_clauses): Expect
            GOVD_SHARED rather than GOVD_PRIVATE with GOVD_DEBUG_PRIVATE.
    
            * testsuite/libgomp.c/pr80809-1.c: New test.
    
    From-SVN: r248487

commit 3528deed9de23ae7f3a854735013dc81faf01272
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 26 12:05:39 2017 +0200

    backport: re PR middle-end/80853 (OpenMP ICE in build_outer_var_ref with array reduction)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80853
            * omp-low.c (lower_reduction_clauses): Pass OMP_CLAUSE_PRIVATE
            as last argument to build_outer_var_ref for pointer bases of array
            section reductions.
    
            * testsuite/libgomp.c/pr80853.c: New test.
    
    From-SVN: r248486

commit e722c0f728f2608225c3bb46ae6c74a639addc9e
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri May 26 01:52:24 2017 +0000

    backport: re PR target/80510 (Optimize Power7/power8 Altivec load/stores)
    
    [gcc]
    2017-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from trunk
            2017-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * config/rs6000/predicates.md (simple_offsettable_mem_operand):
            New predicate.
    
            * config/rs6000/rs6000.md (ALTIVEC_DFORM): New iterator.
            (define_peephole2 for Altivec d-form load): Add peepholes to catch
            cases where the register allocator uses a move and an offsettable
            memory operation to/from a FPR register on ISA 2.06/2.07.
            (define_peephole2 for Altivec d-form store): Likewise.
    
            Backport from trunk
            2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/68163
            * config/rs6000/rs6000.md (f32_lr): Delete mode attributes that
            are now unused after splitting mov{sf,sd}_hardfloat.
            (f32_lr2): Likewise.
            (f32_lm): Likewise.
            (f32_lm2): Likewise.
            (f32_li): Likewise.
            (f32_li2): Likewise.
            (f32_lv): Likewise.
            (f32_sr): Likewise.
            (f32_sr2): Likewise.
            (f32_sm): Likewise.
            (f32_sm2): Likewise.
            (f32_si): Likewise.
            (f32_si2): Likewise.
            (f32_sv): Likewise.
            (f32_dm): Likewise.
            (f32_vsx): Likewise.
            (f32_av): Likewise.
            (mov<mode>_hardfloat): Split into separate movsf and movsd pieces.
            For movsf, order stores so the VSX stores occur before the GPR
            store which encourages the register allocator to use a traditional
            FPR instead of a GPR.  For movsd, order the stores so that the GPR
            store comes before the VSX stores to allow the power6 to work.
            This is due to the power6 not having a 32-bit integer store
            instruction from a FPR.
            (movsf_hardfloat): Likewise.
            (movsd_hardfloat): Likewise.
    
    [gcc/testsuite]
    2017-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from trunk
            2017-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: New test.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
            Backport from trunk
            2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/68163
            * gcc.target/powerpc/pr68163.c: New test.
    
    From-SVN: r248480

commit d96e4338b2bc73ae4d4ce0e427128e668c465af4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 26 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248478

commit 4c4df91e9c229a55e71038d2b363c363286c8410
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Thu May 25 15:12:49 2017 +0000

    When lra-remat rematerializes an instruction with a clobber, it checks that the clobber does not kill live registers.
    
    When lra-remat rematerializes an instruction with a clobber, it checks
    that the clobber does not kill live registers.  However it fails to check
    that the clobber also doesn't overlap with the destination register of the
    final rematerialized instruction.  As a result it is possible to generate
    illegal instructions with the same hard register as the destination and a
    clobber.  Fix this by also checking for overlaps with the destination
    register.
    
            Backport from mainline
            PR rtl-optimization/80754
            * lra-remat.c (do_remat): Add overlap checks for dst_regno.
    
    From-SVN: r248463

commit d82c5a2230963512363d48d3138141d8b70620d4
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Thu May 25 15:10:01 2017 +0000

    Move an use-after-free access before the delete.
    
            Backport from mainline
            PR target/80671
            * config/aarch64/cortex-a57-fma-steering.c (merge_forest):
            Move member access before delete.
    
    From-SVN: r248461

commit 8a3d56f8cc8592cdc23ac85060aa8755af0c38c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 25 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248440

commit 34fa0b30340200927d1273cc08c17355cb7470a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 24 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r248397

commit 8cf4727e0273cab01091e14733139486245b8171
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue May 23 23:14:37 2017 +0000

    gcc_release (XZ): Default to xz --best.
    
    2017-05-23  Matthias Klose  <doko@ubuntu.com>
    
            * gcc_release (XZ): Default to xz --best.
    
    From-SVN: r248393

commit 90d2abbe745bbc03d0b678b24bf7fb39d95aae56
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue May 23 22:05:56 2017 +0000

    backport: re PR fortran/80741 ([Regression 7/8] DTIO wrong code causes incorrect behaviour of namelist READ)
    
    2017-05-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/80741
            * transfer.c (finalize_transfer): Reset last_char to 'empty'.
            * file_pos.c (formatted_backspace): Likewise.
            (st_endfile): Likewise.
            (st_rewind): Likewise.
            (st_flush): Likewise.
    
            * trans-io.c (transfer_namelist_element): Change check from
            NULL_TREE to null_pointer_node.
    
            * gfortran.dg/read_4.f90: New test.
    
    From-SVN: r248390

commit 70e971cc61f9a8e9e75c7904364bd8c5bc22223b
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Tue May 23 21:39:41 2017 +0000

    backport: re PR fortran/80333 (Namelist dtio write of array of class does not traverse the array)
    
    2017-05-23  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80333
            * trans-io.c (nml_get_addr_expr): If we are dealing with class
            type data set tmp tree to get that address.
            (transfer_namelist_element): Set the array spec to point to the
            the class data.
    
            * gfortran.dg/dtio_30.f03: New test.
    
            * list_read.c (nml_read_obj): Compute pointer into class/type
            arrays from the nl->dim information. Update it for each iteration
            of the loop for the given object.
    
    From-SVN: r248388

commit 112eba68adf1f77fab935bb1d9c99de90bf56898
Author: Sheldon Lobo <sheldon.lobo@oracle.com>
Date:   Tue May 23 18:39:44 2017 +0000

    backport: sparc.c (sparc_option_override): Set function alignment for -mcpu=niagara7 to 64 to match the I$ line.
    
            Backport from mainline
            2017-05-18  Sheldon Lobo  <sheldon.lobo@oracle.com>
    
            * config/sparc/sparc.c (sparc_option_override): Set function
            alignment for -mcpu=niagara7 to 64 to match the I$ line.
            * config/sparc/sparc.h (BRANCH_COST): Set the SPARC M7 branch
            latency to 1.
            * config/sparc/sparc.h (BRANCH_COST): Set the SPARC T4 branch
            latency to 2.
            * config/sparc/sol2.h: Fix a ASM_CPU32_DEFAULT_SPEC typo.
    
            Backport from mainline
            2017-05-18  Sheldon Lobo  <sheldon.lobo@oracle.com>
    
            * gcc.target/sparc/niagara7-align.c: New test.
    
    From-SVN: r248380

commit 283f2003797da38d9547e9bb21a669dc6820253f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 23 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248355

commit 69c3fc333a14370a12a55049efc3b217aae67805
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon May 22 19:47:43 2017 +0000

    backport: p8-vec-xl-xst.c: Fix target string to LE-only.
    
    2017-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p8-vec-xl-xst.c: Fix target string to
            LE-only.
    
    From-SVN: r248349

commit 965b0f52feeda35dc35e4ec16ee8c6eaa5f5c9a3
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 22 18:12:05 2017 +0100

    * da.po, es.po: Update.
    
    From-SVN: r248343

commit 3e193b8b8f6d31bc78e2b07b0abfef897a1389db
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Mon May 22 09:39:46 2017 +0000

    decl.c (gnat_to_gnu_entity): Skip regular processing for Itypes that are E_Access_Subtype.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity): Skip regular processing
            for Itypes that are E_Access_Subtype.
            <E_Access_Subtype>: Use the DECL of the base type directly.
    
    From-SVN: r248324

commit 4a4c83843227ab88e376e1c16fb64209fc0e2335
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 22 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r248316

commit 9165dfbd9a34ba44e299bf9e1c9cbff0542d7ee3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 21 00:16:30 2017 +0000

    Daily bump.
    
    From-SVN: r248311

commit f21201e1595bd3f644b908ee8e39d20c0772367d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 20 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r248306

commit f132a47f3991b0d16f620e7522352d93f97b0e49
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri May 19 20:38:22 2017 +0200

    backport: unwind-arm.h: Make _Unwind_GetIP...
    
    2017-05-19  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-17  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/arm/unwind-arm.h: Make _Unwind_GetIP, _Unwind_GetIPInfo and
        _Unwind_SetIP available as functions for arm*-*-freebsd*.
        * config/arm/unwind-arm.c: Implement the above.
    
    From-SVN: r248299

commit a40583fba8d0c5cc6ccb2b86814711481dcfa80b
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri May 19 16:09:45 2017 +0200

    backport: re PR target/80799 (x86-32 bits generates MMX without EMMS)
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * config/i386/mmx.md (*mov<mode>_internal): Enable
            alternatives 11, 12, 13 and 14 also for 32bit targets.
            Remove alternatives 15, 16, 17 and 18.
            * config/i386/sse.md (vec_concatv2di): Change
            alternative (!x, *y) to (x, ?!*Yn).
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * g++.dg/other/i386-11.C: New test.
    
    From-SVN: r248284

commit 563a18bc20f979db7511be8b71ad983733bf3a60
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Fri May 19 16:25:21 2017 +0300

    Don't assume __secure_getenv is available
    
    Glibc 2.17 made __secure_getenv an officially supported function, and
    renamed it secure_getenv. The libgfortran configure has checked for
    both of these, per
    https://sourceware.org/glibc/wiki/Tips_and_Tricks/secure_getenv.
    
    Unfortunately, while the dynamical library (libc.so) retains the
    __secure_getenv symbol for backwards compatibility, the static library
    (libc.a) does not. This means that a libgfortran.a compiled against an
    older glibc will not work if one tries to link against a newer
    libc.a. This creates problems for providing gfortran binary
    distributions that work on as many target systems as possible.
    
    Thus, retain the support for __secure_getenv but call it only via a
    weak reference.
    
    Backported from trunk.
    
    2017-05-19  Janne Blomqvist  <jb@gcc.gnu.org>
    
            * libgfortran.h: HAVE_SECURE_GETENV: Don't check
            HAVE___SECURE_GETENV.
            * environ/runtime.c (secure_getenv): Use __secure_getenv via a
            weak reference.
    
    From-SVN: r248273

commit ee791c3ab10c1663550527e3baaa66a6365a1cec
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri May 19 13:28:28 2017 +0100

    PR libstdc++/80796 Add new std::search overload for C++17
    
            PR libstdc++/80796
            * include/bits/stl_algo.h (search): Add new overload for C++17.
            * testsuite/25_algorithms/search/searcher.cc: New.
    
    From-SVN: r248267

commit 07276c2b61deaced0459c054bec14a29deed2a60
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 19 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r248259

commit 0fa276428084b73f40381d308be9d7a7d7172045
Author: Matthias Klose <doko@gcc.gnu.org>
Date:   Thu May 18 18:50:52 2017 +0000

    gcc_release (build_gzip): Build xz tarball instead of bz2 tarball.
    
    2017-05-18  Matthias Klose  <doko@ubuntu.com>
    
            * gcc_release (build_gzip): Build xz tarball instead of bz2 tarball.
            (build_diffs): Handle building diffs from either bz2 or xz tarballs,
            compress diffs using xz instead of bz2.
            (build_diff): Likewise.
            (upload_files): Check for *.xz files instead of *.bz2 files.
            (announce_snapshot): Announce xz tarball instead of bz2 tarball.
            (XZ): New definition.
            (<toplevel>): Look for both bz2 and xz compressed old tarballs.
    
    From-SVN: r248252

commit 8851d1ce68b021f2810275e5b4355ceccfb76117
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Thu May 18 18:04:51 2017 +0000

    compiler: ignore struct field tags for type conversion
    
        Go 1.8 includes a language change (https://golang.org/doc/go1.8#language):
        in an explicit conversion from one struct type to another, any field
        tags are ignored.
    
        This CL implements this language change in the gofrontend.  The tests
        for this are in the gc testsuite, which will be copied into the gccgo
        repository in due course.
    
        Updates golang/go#16085.
    
        Reviewed-on: https://go-review.googlesource.com/43614
    
    From-SVN: r248249

commit 3481dfbf17e9d96d976c9680460e21d46262f477
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 19:04:15 2017 +0100

    PR libstdc++/80478 make std::mem_fn work with noexcept functions
    
            PR libstdc++/80478
            * include/std/functional (_Mem_fn_traits_base): Add specializations
            for noexcept member function types.
            * testsuite/20_util/function_objects/mem_fn/80478.cc: New test.
    
    From-SVN: r248247

commit 5862bdfc53db5d889958e2ff16c3f75a62e9cba7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 11:28:38 2017 +0100

    Fix typos in libstdc++ manual
    
            * doc/xml/manual/policy_data_structures.xml: Fix typo.
            * doc/xml/manual/test_policy_data_structures.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r248190

commit d90d4ceea90922c85be13190984ac4cbd6afb8d0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 11:10:12 2017 +0100

    Update libstdc++ version info in manual
    
            * doc/xml/manual/abi.xml: Document latest library versions.
            * doc/xml/manual/build_hacking.xml: Document requirement to update
            abi.xml when bumping library versions.
            * doc/html/*: Regenerate.
    
    From-SVN: r248187

commit 68ef0b4c0b60d929953d1511f268aca12a3c0d03
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 18 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r248177

commit 041ef09e3446218011a65e497ac52678f1858e9d
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Wed May 17 20:16:42 2017 +0000

    libgo: add "vendor" to pkgpath for vendored standard packages
    
        Ensure that the packages vendored into the standard library do not
        have the same pkgpath as the actual packages.  If we don't, attempts
        to build and test the actual packages will get confused.  The specific
        error I was seeing was import loops, causing some of the packages to
        fail to get initialized, causing an obscure run time crash.
    
        Reviewed-on: https://go-review.googlesource.com/43610
    
    From-SVN: r248169

commit 6b8977c377c3b398ff8ebf4164b1b48cf1de3e86
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed May 17 20:00:53 2017 +0000

    backport: re PR libfortran/80727 (Crash of runtime gfortran library during integer transformation)
    
    2017-05-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/80727
            * transfer.c (read_sf_internal): Remove bogus code to detect EOR.
            (read_block_form): For internal units, generate EOR if no more
            bytes left in unit and we are trying to read with ADVANCE='NO'.
    
            * gfortran.dg/read_3.f90: New test.
    
    From-SVN: r248167

commit d96f3d3658c40c9a0bb23843043096d43dd2a6bd
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Wed May 17 18:09:48 2017 +0000

    backport: re PR fortran/78659 ([F03] Spurious "requires DTIO" reported against namelist statement)
    
    2017-05-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78659
            * io.c (dtio_procs_present): Add new function to check for DTIO
            procedures relative to I/O statement READ or WRITE.
            (gfc_resolve_dt): Add namelist checks using the new function.
            * resolve.c (dtio_procs_present): Remove function and related
            namelist checks. (resolve_fl_namelist): Add check specific to
            Fortran 95 restriction on namelist objects.
    
            * gfortran.dg/namelist_91.f90: New test.
            * gfortran.dg/namelist_92.f90: New test.
            * gfortran.dg/namelist_93.f90: New test.
            * gfortran.dg/namelist_94.f90: New test.
    
    From-SVN: r248166

commit 2c85805fa9af72fa667485fce366758813a65d0b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed May 17 12:51:00 2017 +0000

    re PR ada/80784 (compilation failure on ACATS c732b01)
    
            PR ada/80784
            Backport from mainline
    
            2017-05-02  Ed Schonberg  <schonberg@adacore.com>
    
            * exp_ch3.adb (Freeze_Type): Do not generate an invariant
            procedure body for a local (sub)type declaration within a
            predicate function. Invariant checks do not apply to these, and
            the expansion of the procedure will happen in the wrong scope,
            leading to misplaced freeze nodes.
    
    From-SVN: r248152

commit 438bd6f4718ccc2138229c5116a9ca624b38bbd9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 17 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r248134

commit a50a515d951be830c8c512864b1a6479caa91e8c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 16 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r248085

commit 4fc88affebd1ff66af004bb16b04597faffbff63
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon May 15 20:43:25 2017 +0000

    re PR fortran/80752 (ICE with wrong type initialization)
    
    2017-05-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80752
            * expr.c (gfc_generate_initializer):  If type conversion fails,
            check for error and return NULL.
    
    2017-05-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80752
            gfortran.dg/pr80752.f90: New test.
    
    From-SVN: r248076

commit beb24486d78c56118c9c40000492cfbc06df1b34
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 15 15:20:37 2017 +0100

    * sv.po: Update.
    
    From-SVN: r248065

commit 3e6a56a27c622387374fb5825416d9064141d64a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon May 15 15:01:38 2017 +0100

    Fix order and types of members in C++17 insert_return_type structs
    
            PR libstdc++/80761
            * include/bits/node_handle.h (_Node_insert_return): Reorder members.
            (tuple_size, tuple_element): Remove partial specializations.
            * include/bits/stl_tree.h (_Rb_tree::insert_return_type): Use
            const_iterator for std::set.
            * testsuite/23_containers/map/modifiers/extract.cc: New.
            * testsuite/23_containers/set/modifiers/extract.cc: New.
            * testsuite/23_containers/unordered_map/modifiers/extract.cc: New.
            * testsuite/23_containers/unordered_set/modifiers/extract.cc: New.
    
    From-SVN: r248063

commit 16fbcc168c2b0f07800306f977a0e25d0d7e73b1
Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
Date:   Mon May 15 07:36:33 2017 +0000

    lb1spc.S: Emit .note.GNU-stack section for a non-executable stack.
    
            * config/sparc/lb1spc.S [__ELF__ && __linux__]: Emit .note.GNU-stack
            section for a non-executable stack.
    
    From-SVN: r248044

commit d009a5cfb3ea02935afa62377632fe2b54dc924c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 15 00:16:26 2017 +0000

    Daily bump.
    
    From-SVN: r248040

commit 335659bcdde42e29494e3c0379c18db6d0dc3250
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Sun May 14 14:50:54 2017 +0200

    * ChangeLog: Fix date.
    
    From-SVN: r248033

commit 52e00e00b22d629c2ad1c579bda503806f76c896
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun May 14 14:49:55 2017 +0200

    backport: re PR target/80706 (peephole2 uses uninitialized stack variables on i686)
    
            Backport from mainline
            2017-05-11  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80706
            * config/i386/sync.md (UNSPEC_LDX_ATOMIC): New unspec.
            (UNSPEC_STX_ATOMIC): Ditto.
            (loaddi_via_sse): New insn.
            (storedi_via_sse): Ditto.
            (atomic_loaddi_fpu): Emit loaddi_via_sse and storedi_via_sse.
            Update corresponding peephole2 patterns.
            (atomic_storedi_fpu): Ditto.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-05-11  Uros Bizjak  <ubizjak@gmail.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/80706
            * gcc.target/i386/pr80706.c: New test.
    
            2017-05-11  Uros Bizjak  <ubizjak@gmail.com>
    
            * gcc.target/i386/pr22152.c: Fix undefined testcase.
            Remove unnecessary loop.  Run on 32-bit targets only.
    
    From-SVN: r248032

commit 7651f947257c583e0bd95a442bc1299e61740ce6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 14 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r248015

commit 7b5a39f0698b3044594abfcc2fa54ff2eca28427
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sat May 13 21:35:44 2017 +0000

    backport: rs6000.c (rs6000_vect_nonmem): New static var.
    
    [gcc]
    
    2017-05-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_vect_nonmem): New static var.
            (rs6000_init_cost): Initialize rs6000_vect_nonmem.
            (rs6000_add_stmt_cost): Update rs6000_vect_nonmem.
            (rs6000_finish_cost): Avoid vectorizing simple copy loops with
            VF=2 that require versioning.
    
    [gcc/testsuite]
    
    2017-05-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/versioned-copy-loop.c: New file.
    
    From-SVN: r248010

commit 80fb7eb063958236888ee177651e683c4c3fce98
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 13 00:16:29 2017 +0000

    Daily bump.
    
    From-SVN: r248002

commit 26c3c343d71ae54dfabea88cb270aea881e95057
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri May 12 21:50:51 2017 +0000

    backport: rs6000.c (altivec_init_builtins): Define POWER8 built-ins for vec_xl and vec_xst with short and char pointer...
    
    [gcc]
    
    2017-05-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (altivec_init_builtins): Define POWER8
            built-ins for vec_xl and vec_xst with short and char pointer
            arguments.
    
    [gcc/testsuite]
    
    2017-05-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p8-vec-xl-xst.c: New file.
    
    From-SVN: r247999

commit 762752c27c3331efdbefeaa3e70fd9a30e13407f
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri May 12 21:30:44 2017 +0100

    * sv.po: Update.
    
    From-SVN: r247997

commit a4d81c08e2aa1df8b084f5ea828881d3c6308ea5
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 12 15:58:34 2017 +0000

    re PR ada/80117 (Standard'Word_Size is wrong for aarch64 ILP32)
    
            * system-linux-arm.ads (Memory_Size): Use Long_Integer'Size
            instead of Word_Size.
    
            Revert
            2017-03-28  Andreas Schwab  <schwab@suse.de>
    
            PR ada/80117
            * system-linux-aarch64-ilp32.ads: New file.
            * gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS_COMMON): Rename
            from LIBGNAT_TARGET_PAIRS.
            (LIBGNAT_TARGET_PAIRS_32, LIBGNAT_TARGET_PAIRS_64): Define.
            (LIBGNAT_TARGET_PAIRS): Use LIBGNAT_TARGET_PAIRS_COMMON, and
            LIBGNAT_TARGET_PAIRS_64 or LIBGNAT_TARGET_PAIRS_32 for -mabi=lp64
            or -mabi=ilp32, resp.
    
    From-SVN: r247980

commit cf20ff6ff6d1706a1547841fba43a1da44b70282
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri May 12 16:53:19 2017 +0100

    PR libstdc++/78939 make tuple_size<cv T> depend on tuple_size<T>
    
            PR libstdc++/78939
            * include/std/utility (tuple_size<cv T>) [__cplusplus > 201402L]:
            Only define partial specializations when tuple_size<T>::value is
            valid.
            * testsuite/20_util/tuple/78939.cc: New.
    
    From-SVN: r247978

commit 012d90bd7426f7cac01522af050501c61f027e3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 12 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r247944

commit f6a7a2a27bd5e34c2390f289a06e3bda47651177
Author: Ian Lance Taylor <iant@google.com>
Date:   Thu May 11 23:53:13 2017 +0000

    re PR go/64238 (ICE in get_partitioning_class, at symtab.c:1775)
    
            PR go/64238
            * go-gcc.cc (Gcc_backend::implicit_variable_reference): Set
            DECL_EXTERNAL, clear TREE_STATIC.
    
    From-SVN: r247938

commit d6a47f47f0644a1d5818dc8ca6213d45579003a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 11 00:16:33 2017 +0000

    Daily bump.
    
    From-SVN: r247877

commit e6aed289f5887bae4cf208f2dd5b3ef761ad5998
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu May 11 00:13:00 2017 +0000

    re PR target/80090 (Incorrect assembler - output_addr_const may generate visibility output between op and address constant)
    
            PR target/80090
            * config/pa/pa.c (pa_assemble_integer): When outputting a SYMBOL_REF,
            handle calling assemble_external ourself.
    
    From-SVN: r247873

commit 3ad1ecbb89038355abf8bc062037b10bbd70bef4
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed May 10 23:08:32 2017 +0000

    re PR target/79027 (fold-const.c:11104:1: internal compiler error: Floating point exception)
    
            PR target/79027
            * config/pa/pa.c (pa_cannot_change_mode_class): Reject changes to/from
            modes with zero size.  Enhance comment.
    
    From-SVN: r247870

commit bd94ba42e83a81cff3dd203e9b5bbf8506d3b64b
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed May 10 22:42:58 2017 +0200

    backport: config.host: Use the generic FreeBSD t-slibgcc-elf-ver for arm*-*-freebsd* instead of the...
    
    2017-05-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.host: Use the generic FreeBSD t-slibgcc-elf-ver for
        arm*-*-freebsd* instead of the t-slibgcc-libgcc.
    
    From-SVN: r247859

commit 96764ede5649630f4aec7d8a1491427ed2bf6716
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Wed May 10 17:36:50 2017 +0000

    Ada/x32: PR ada/80626: Correct Memory_Size
    
    X32 uses 64 as word size instead of 32.  This must not affect the
    Address type definition which is based on Memory_Size.
    
            Back port from mainline
            PR ada/80626
            * system-linux-x86.ads (Memory_Size): Use Long_Integer'Size
            instead of Word_Size.
    
    From-SVN: r247850

commit 13de5a6a04009a62b29d90b0b643d66edbb7eb02
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 10 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r247824

commit 560e3ca7cd92b5f8ca97396f343c026b391a2766
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue May 9 23:49:37 2017 +0000

    backport: re PR target/79038 (Improve PowerPC ISA 3.0 conversion between integers and hardware _Float128)
    
    [gcc]
    2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2017-05-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79038
            PR target/79202
            PR target/79203
            * config/rs6000/rs6000.md (u code attribute): Add FIX and
            UNSIGNED_FIX.
            (extendsi<mode>2): Add support for doing sign extension via
            VUPKHSW and XXPERMDI if the value is in Altivec registers and we
            don't have ISA 3.0 instructions.
            (extendsi<mode>2 splitter): Likewise.
            (fix_trunc<mode>si2): If we are at ISA 2.07 (VSX small integer),
            generate the normal insns since SImode can now go in vector
            registers.  Disallow the special UNSPECs needed for previous
            machines to hide SImode being used.  Add new insns
            fctiw{,w}_<mode>_smallint if SImode can go in vector registers.
            (fix_trunc<mode>si2_stfiwx): Likewise.
            (fix_trunc<mode>si2_internal): Likewise.
            (fixuns_trunc<mode>si2): Likewise.
            (fixuns_trunc<mode>si2_stfiwx): Likewise.
            (fctiw<u>z_<mode>_smallint): Likewise.
            (fctiw<u>z_<mode>_mem): New combiner pattern to prevent conversion
            of floating point to 32-bit integer from doing a direct move to
            the GPR registers to do a store.
            (fctiwz_<mode>): Break long line.
    
    [gcc/testsuite]
    2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2017-05-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79038
            PR target/79202
            PR target/79203
            * gcc.target/powerpc/ppc-round3.c: New test.
            * gcc.target/powerpc/ppc-round2.c: Update expected code.
    
    From-SVN: r247820

commit 7627f79d6d1e2fce362fca0f437b7f796adde69d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 9 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247775

commit e08470ef04cc2604fb2af29b85878b3d2287a6c7
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 8 16:42:51 2017 +0100

    * es.po, sv.po: Update.
    
    From-SVN: r247744

commit 50bb67c7fea8463c973cea037c195e7114467d05
Author: Tamar Christina <tamar.christina@arm.com>
Date:   Mon May 8 09:45:46 2017 +0000

    re PR middle-end/79665 (gcc's signed (x*x)/200 is slower than clang's)
    
    2017-05-08  Tamar Christina  <tamar.christina@arm.com>
    
            PR middle-end/79665
            * expr.c (expand_expr_real_2): Move TRUNC_MOD_EXPR, FLOOR_MOD_EXPR,
            CEIL_MOD_EXPR, ROUND_MOD_EXPR cases.
    
    From-SVN: r247734

commit e92ec7dde0682f289194265a89d9d8b28cd4bd97
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 8 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r247732

commit 8da9a3b7aa5602cd529a632fa0412f020abc1718
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 7 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r247725

commit 7e1dffb12f678ef1184329037f35b093177a8019
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 6 00:16:40 2017 +0000

    Daily bump.
    
    From-SVN: r247708

commit 533a17774d878f9c5e7b497a6922c20e2e414842
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri May 5 23:00:53 2017 +0200

    backport: re PR fortran/80121 (Memory leak with derived-type intent(out) argument)
    
    2017-05-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80121
            * trans-expr.c (gfc_conv_procedure_call): Deallocate the components
            of allocatable intent(out) arguments.
    
    
    2017-05-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80121
            * gfortran.dg/intent_out_9.f90: New test case.
    
    From-SVN: r247662

commit 52637de8ccf506b38237fe0170801d81fadd1f9a
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri May 5 22:09:20 2017 +0200

    backport: re PR fortran/80392 ([OOP] ICE with allocatable polymorphic function result in a procedure pointer component)
    
    2017-05-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * trans-types.c (gfc_get_derived_type): Prevent an infinite loop when
            building a derived type that includes a procedure pointer component
            with a polymorphic result.
    
    2017-05-05  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * gfortran.dg/proc_ptr_comp_49.f90: New test case.
    
    From-SVN: r247655

commit 80a54139d9e32e2eb83c9f2e7ab6d344766d78bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 5 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r247626

commit 9bf7f4738509b682d66dcbb298fc4bbf61555d19
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Thu May 4 18:45:50 2017 +0000

    backport: re PR fortran/80484 (Three syntax errors involving derived-type I/O)
    
    2017-05-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/80484
            * io.c (format_lex): Check for '/' and set token to FMT_SLASH.
            (check_format): Move FMT_DT checking code to data_desc section.
            * module.c (gfc_match_use): Include the case of INTERFACE_DTIO.
            Backport from mainline
            PR fortran/80484
            * gfortran.dg/dtio_29.f03: New test.
    
    From-SVN: r247615

commit 7a1bde3e984579b68d45cb9bfade8098fe2fe323
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu May 4 16:54:38 2017 +0100

    Update .po files.
    
            * be.po, da.po, el.po, fi.po, hr.po, id.po, ja.po, nl.po, ru.po,
            sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po, zh_TW.po: Update.
    
    From-SVN: r247602

commit 2835960e74f8f855e65ac1fa6a855abd0592a85f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 4 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247574

commit b5cc24692260fb32e2fda9572bcba02a2ee4c312
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed May 3 23:25:04 2017 +0100

    * de.po: Update.
    
    From-SVN: r247571

commit 6dc0137e894f7ebb95f38e72e711c35f2cab78c7
Author: Jan Beulich <jbeulich@suse.com>
Date:   Wed May 3 15:36:29 2017 +0000

    x86: vpermil2p{s,d} have no commutative operands
    
    While either of the last two operands can be in memory, they can't be
    swapped.
    
    gcc/
    2017-05-03  Jan Beulich  <jbeulich@suse.com>
    
            * config/i386/sse.md (xop_vpermil2<mode>3): Do not allow operand
            swapping, add (x,x,m,x,n) alternative.
    
    From-SVN: r247554

commit 6987b50fcccc174f2854870353ee337f111e1ac4
Author: Richard Biener <rguenther@suse.de>
Date:   Wed May 3 11:22:34 2017 +0000

    backport: [multiple changes]
    
    2017-05-03  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-04-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80453
            * tree-ssa-sccvn.h (struct vn_phi_s): Add cclhs and ccrhs members.
            * tree-ssa-sccvn.c (cond_stmts_equal_p): Use recorded lhs and rhs
            from the conditions.
            (vn_phi_eq): Pass them down.
            (vn_phi_lookup): Record them.
            (vn_phi_insert): Likewise.
    
            2017-04-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80492
            * alias.c (compare_base_decls): Handle registers with asm
            specification conservatively.
    
            * gcc.dg/pr80492.c: New testcase.
    
            2017-04-27  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80539
            * tree-chrec.c (chrec_fold_plus_poly_poly): Deal with not
            being in loop-closed SSA form conservatively.
            (chrec_fold_multiply_poly_poly): Likewise.
    
            * gcc.dg/torture/pr80539.c: New testcase.
    
    From-SVN: r247545

commit 4041b42a3b146af00af167a486608c8da5febf55
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 3 08:45:29 2017 +0200

    backport: re PR c/80468 (ICE on invalid AVX512 code with -m32)
    
            Backported from mainline
            2017-04-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/80468
            * c-decl.c (finish_declspecs) <case cts_int_n>: If int_n_idx is not
            enabled, set specs->type to integer_type_node.
    
            * gcc.dg/pr80468.c: New test.
    
    From-SVN: r247534

commit 67fef366b039fcd7655c57a9bb098d31391fb3b9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 3 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247532

commit 6dd5eb866b46ae56acc2bbde4fc0a9ddb9d0281a
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue May 2 21:46:37 2017 +0100

    * es.po: Update.
    
    From-SVN: r247525

commit 114e5a84ae1988cbeed1b1c02000cfc1f8c41fbf
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue May 2 22:36:26 2017 +0200

    backport: re PR target/68491 (libgcc calls __get_cpuid with 0 level breaks on early 486)
    
            Backport from mainline
            2017-05-01  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68491
            * config/i386/cpuid.h (__get_cpuid): Always return 0 when
            __get_cpuid_max returns 0.
            (__get_cpuid_count): Ditto.
    
    From-SVN: r247523

commit a411c8bfb5b9c74d9b0d30563356a6813b312824
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue May 2 18:27:50 2017 +0100

    * fr.po: Update.
    
    From-SVN: r247521

commit 1f5e8060cdb441de75992c9ce9b890d688253877
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 2 18:12:40 2017 +0200

    backport: Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the environment.
    
            Backported from mainline
            2017-04-25 Jakub Jelinek <jakub@redhat.com>
    
            * Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the
            environment.
    
    From-SVN: r247513

commit 3c19ece1448b7040aa987cce57cda052daff09a2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 2 17:29:37 2017 +0200

    * BASE-VER: Set to 7.1.1.
    
    From-SVN: r247506

commit 303f81ad7e9f278d5ea5a8bd4193ed9da76bc251
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 2 12:42:24 2017 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r247493

commit 0f942c6aaf81e0c2e48a0741ece9c2603231faef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 2 14:38:31 2017 +0200

    * gennews (files): Add files for GCC 7.
    
    From-SVN: r247492

commit cdd7941640e8a988cf23ffb39b869137eb76e07f
Author: Richard Biener <rguenther@suse.de>
Date:   Tue May 2 11:26:25 2017 +0000

    re PR tree-optimization/80591 (AArch64 kernel miscompilation starting with r246809)
    
    2017-05-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80591
            Revert
            2017-04-10  Richard Biener  <rguenther@suse.de>
    
            * tree-ssa-structalias.c (find_func_aliases): Properly handle
            asm inputs.
    
            * gcc.dg/torture/pr80591.c: New testcase.
    
    From-SVN: r247487

commit 12bdf10b343c4d04dfda473e2087862ec4f1bab2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 2 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247458

commit 7bb5d3b9e421f4c5aee9be2f272af778475391f0
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 1 23:28:48 2017 +0100

    Regenerate .pot files.
    
    gcc/po:
            * gcc.pot: Regenerate.
    
    libcpp/po:
            * cpplib.pot: Regenerate.
    
    From-SVN: r247448

commit 38a50ebc56b7d22a4e4122aba3abb65f2ad967a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 1 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r247424

commit 63e838b127ec5bd8c41a08722d9506260ff3bfcc
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 1 00:21:04 2017 +0100

    * fr.po: Update.
    
    From-SVN: r247421

commit 90393627bc4cf9bb7e201e91cafd1d21769641f3
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 1 00:16:59 2017 +0100

    Update .po files.
    
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
    
    From-SVN: r247419

commit 21268e17c9690601ea8447ea6b744915fe9a60a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 30 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r247415

commit 934d79ae1a749524f7037277286b0649bfa251bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 29 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r247404

commit 82052c28220a57fd71c49fd7071dd2338ac13b0d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Apr 28 13:42:14 2017 +0200

    re PR bootstrap/80531 (RC1 bootstrap comparison failure)
    
            PR bootstrap/80531
            * cgraph.h (symtab_node::debug_symtab): No longer inline.
            * symtab.c (symtab_node::debug_symtab): Move definition here.
    
    From-SVN: r247368

commit 9a4ea63e40fbc0e72141d11ecf4d35760b59cde1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 28 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r247360

commit 4c41782be35ad75cf0f070a35d079e30de3e253c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 27 22:03:38 2017 +0200

    re PR bootstrap/80531 (RC1 bootstrap comparison failure)
    
            PR bootstrap/80531
            * configure.tgt (*-*-aix*): Add -frandom-seed=$@ to XCFLAGS to avoid
            bootstrap compare failures.
    
    From-SVN: r247351

commit c2f36c35da0c8df6ff895843861fb236dd1f7e64
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Thu Apr 27 14:11:47 2017 +0000

    [AArch64] Fix for gcc-7 regression PR 80530
    
    
    This patch fixes the regression caused by the changes to add square root
    estimation when compiling for xgene-1 or exynos-m1 targets.
    
    The issue is that the expand path for the reciprocal estimate square
    root pattern assumes that pattern cannot fail once it has been decided
    that this expansion path is available, but because the logic deep inside
    aarch64_emit_approx_sqrt() differs from use_rsqrt_p() the two disagree
    as to what is safe.
    
    This patch refactors the logic to ensure that we cannot unknowingly make
    different choices here.
    
            PR target/80530
            * config/aarch64/aarch64.c (aarch64_emit_approx_sqrt): Ensure
            that the logic for permitting reciprocal estimates matches that
            in use_rsqrt_p.
    
    From-SVN: r247341

commit a240da2d3ad78ad88e98ae006e0484b97f81eb83
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 27 15:47:54 2017 +0200

    re PR c++/80534 (7.1 RC - internal compiler error: in finish_member_declaration, at cp/semantics.c:2963)
    
            PR c++/80534
            * tree.c (type_cache_hasher::equal): Only compare
            TYPE_TYPELESS_STORAGE flag on non-aggregate element types.
            (build_array_type_1): Only hash TYPE_TYPELESS_STORAGE flag on
            non-aggregate element types.
            * tree.h (TYPE_TYPELESS_STORAGE): Fix comment typo, add more details
            about the flag on ARRAY_TYPEs in the comment, formatting fix.
    c-family/
            * c-common.c (complete_array_type): Only hash TYPE_TYPELESS_STORAGE
            flag on non-aggregate element types.
    testsuite/
            * g++.dg/other/pr80534-1.C: New test.
            * g++.dg/other/pr80534-2.C: New test.
    
    From-SVN: r247337

commit e469603e970db8f0491f5a45e256fb09d5a13d95
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 27 11:58:43 2017 +0200

    re PR target/79430 (action of statement incorrectly optimised away)
    
            PR target/79430
            * reg-stack.c (emit_swap_insn): If i1src mentions the stack pointer,
            punt if tmp contains autoinc of stack pointer.
    
    From-SVN: r247308

commit a22d92795b9c9bbbeb4dd658fb97355216a1d0fe
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 27 09:14:24 2017 +0200

    re PR target/77728 (Miscompilation multiple vector iteration on ARM)
    
            PR target/77728
            * config/aarch64/aarch64.c (struct aarch64_fn_arg_alignment): Remove.
            (aarch64_function_arg_alignment): Return unsigned int again, but still
            ignore TYPE_FIELDS chain decls other than FIELD_DECLs.
            (aarch64_layout_arg): Adjust aarch64_function_arg_alignment caller.
            Don't emit -Wpsabi note.
            (aarch64_function_arg_boundary): Likewise.
            (aarch64_gimplify_va_arg_expr): Adjust aarch64_function_arg_alignment
            caller.
    testsuite/
            * g++.dg/abi/pr77728-2.C: Don't expect -Wpsabi notes.
    
    From-SVN: r247293

commit 2879a3773df539cd39ae0a96bc76cee320190722
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 27 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r247290

commit 140360e969657595ea6fe1bee4155da2aadd4e5e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 26 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r247272

commit 8550e48ac40e974c11e130b9eceba333ef0c9405
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue Apr 25 17:58:32 2017 +0000

    PR tree-optimization/80497 - ICE at -O1 and above on valid code on x86_64-linux-gnu in tree_to_uhwi
    
    gcc/ChangeLog:
    
            PR tree-optimization/80497
            * gimple-ssa-sprintf.c (get_int_range): Avoid assuming all integer
            constants are representable in HOST_WIDE_INT.
            (parse_directive): Ditto.
    
    gcc/testsuite/ChangeLog:
    
            PR tree-optimization/80497
            * gcc.dg/tree-ssa/builtin-sprintf-warn-17.c: New test.
    
    From-SVN: r247264

commit 8ef2085d4c39d52e48c5f3114b500ada1ffcc61b
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Apr 25 17:02:27 2017 +0000

    re PR sanitizer/80349 (UBSAN: compile time crash with "type mismatch in binary expression" message)
    
            PR sanitizer/80349
            * fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's
            first argument to type.
    
            * g++.dg/ubsan/pr80349-2.C: New test.
    
    From-SVN: r247260

commit 6bcf239ec5de3b42af2b5ddc6a224b970dd84efb
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Tue Apr 25 16:47:32 2017 +0000

    re PR target/77728 (Miscompilation multiple vector iteration on ARM)
    
            PR target/77728
            * config/arm/arm.c: Include gimple.h.
            (aapcs_layout_arg): Emit -Wpsabi note if arm_needs_doubleword_align
            returns negative, increment ncrn only if it returned positive.
            (arm_needs_doubleword_align): Return int instead of bool,
            ignore DECL_ALIGN of non-FIELD_DECL TYPE_FIELDS chain
            members, but if there is any such non-FIELD_DECL
            > PARM_BOUNDARY aligned decl, return -1 instead of false.
            (arm_function_arg): Emit -Wpsabi note if arm_needs_doubleword_align
            returns negative, increment nregs only if it returned positive.
            (arm_setup_incoming_varargs): Likewise.
            (arm_function_arg_boundary): Emit -Wpsabi note if
            arm_needs_doubleword_align returns negative, return
            DOUBLEWORD_ALIGNMENT only if it returned positive.
    testsuite/
            * g++.dg/abi/pr77728-1.C: New test.
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    
    From-SVN: r247259

commit d3de3474fc14c1fa410e3822a01a4ab5f776c284
Author: Bill Seurer <seurer@linux.vnet.ibm.com>
Date:   Tue Apr 25 16:16:13 2017 +0000

    [PATCH, rs6000] pr80482 Relax vector builtin parameter checks
    
    PR target/80482
    Backport from mainline
    
    This patch changes the parameter testing for powerpc vector builtins to relax
    the existing requirement that the parameters be identical to instead that they
    be compatible.  This allows for mixing parameters with differing qualified
    (const, volatile, etc.) types.
    
    See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80482 for more information.
    
    Bootstrapped and tested on powerpc64le-unknown-linux-gnu and
    powerpc64be-unknown-linux-gnu with no regressions.  Is this ok for trunk?
    
    [gcc]
    
    2017-04-25  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            Backport from mainline
            PR target/80482
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Change
            type checks to test for compatibility instead of equality.
    
    [gcc/testsuite]
    
    2017-04-25  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            Backport from mainline
            PR target/80482
            * gcc.target/powerpc/vec-constvolatile.c: New test.
    
    From-SVN: r247256

commit fd8de490a7a951ebeea45ba66cf5d87dbb3b1453
Author: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
Date:   Tue Apr 25 13:56:10 2017 +0000

    re PR target/77728 (Miscompilation multiple vector iteration on ARM)
    
            PR target/77728
            * config/aarch64/aarch64.c (struct aarch64_fn_arg_alignment): New
            type.
            (aarch64_function_arg_alignment): Return aarch64_fn_arg_alignment
            struct.  Ignore DECL_ALIGN of decls other than FIELD_DECL for
            the alignment computation, but return their maximum in warn_alignment.
            (aarch64_layout_arg): Adjust aarch64_function_arg_alignment caller.
            Emit a -Wpsabi note if warn_alignment is 16 bytes, but alignment
            is smaller.
            (aarch64_function_arg_boundary): Likewise.  Simplify using MIN/MAX.
            (aarch64_gimplify_va_arg_expr): Adjust aarch64_function_arg_alignment
            caller.
    testsuite/
            * g++.dg/abi/pr77728-2.C: New test.
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    
    From-SVN: r247241

commit 1ab303de181775ea8e8f7df474ac165f8223300d
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Apr 25 11:18:52 2017 +0000

    S/390: PR80464: Split MEM->GPR vector moves
    
    We do this already for TImode values but it was missing for vector
    modes.
    
    gcc/ChangeLog:
    
    2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/80464
            * config/s390/vector.md: Split MEM->GPR vector moves for
            non-s_operand addresses.
    
    gcc/testsuite/ChangeLog:
    
    2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/80464
            * gfortran.fortran-torture/compile/pr80464.f90: New test.
    
    From-SVN: r247191

commit e898f963a686a97b92377458b39e315514ad45df
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue Apr 25 11:15:44 2017 +0000

    S/390: PR79895: Fix TImode constant handling
    
    The P constraint letter is supposed to match every constant which is
    acceptable during reload.  However, constraints do not appear to be
    able to handle const_wide_int yet.  It works with predicates so the
    alternative is modelled with a new predicate now.
    
    gcc/ChangeLog:
    
    2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/79895
            * config/s390/predicates.md (reload_const_wide_int_operand): New
            predicate.
            * config/s390/s390.md ("movti"): Remove d/P alternative.
            ("movti_bigconst"): New pattern definition.
    
    gcc/testsuite/ChangeLog:
    
    2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/79895
            * gcc.target/s390/pr79895.c: New test.
    
    From-SVN: r247190

commit d2780ff2706d71dad7ae0c69494c6c0ea6737be5
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Tue Apr 25 11:11:48 2017 +0000

    S/390: PR80080: Optimize atomic patterns.
    
    The attached patch optimizes the atomic_exchange and atomic_compare
    patterns on s390 and s390x (mostly limited to SImode and DImode).
    Among general optimizaation, the changes fix most of the problems
    reported in PR 80080:
    https://gcc.gnu.org/bugzilla/show_bug.cgi?id=80080
    
    gcc/ChangeLog:
    
    2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/80080
            * s390-protos.h (s390_expand_cs_hqi): Removed.
            (s390_expand_cs, s390_expand_atomic_exchange_tdsi): New prototypes.
            * config/s390/s390.c (s390_emit_compare_and_swap): Handle all integer
            modes as well as CCZ1mode and CCZmode.
            (s390_expand_atomic_exchange_tdsi, s390_expand_atomic): Adapt to new
            signature of s390_emit_compare_and_swap.
            (s390_expand_cs_hqi): Likewise, make static.
            (s390_expand_cs_tdsi): Generate an explicit compare before trying
            compare-and-swap, in some cases.
            (s390_expand_cs): Wrapper function.
            (s390_expand_atomic_exchange_tdsi): New backend specific expander for
            atomic_exchange.
            (s390_match_ccmode_set): Allow CCZmode <-> CCZ1 mode.
            * config/s390/s390.md ("atomic_compare_and_swap<mode>"): Merge the
            patterns for small and large integers.  Forbid symref memory operands.
            Move expander to s390.c.  Require cc register.
            ("atomic_compare_and_swap<DGPR:mode><CCZZ1:mode>_internal")
            ("*atomic_compare_and_swap<TDI:mode><CCZZ1:mode>_1")
            ("*atomic_compare_and_swapdi<CCZZ1:mode>_2")
            ("*atomic_compare_and_swapsi<CCZZ1:mode>_3"): Use s_operand to forbid
            symref memory operands.  Remove CC mode and call s390_match_ccmode
            instead.
            ("atomic_exchange<mode>"): Allow and implement all integer modes.
    
    gcc/testsuite/ChangeLog:
    
    2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/80080
            * gcc.target/s390/md/atomic_compare_exchange-1.c: New test.
            * gcc.target/s390/md/atomic_compare_exchange-1.inc: New test.
            * gcc.target/s390/md/atomic_exchange-1.inc: New test.
    
    From-SVN: r247189

commit 009c14599757eec830c0b3d21e3de0cf17156c67
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Tue Apr 25 11:08:06 2017 +0000

    S/390: Load and test peephole.
    
    gcc/ChangeLog:
    
    2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            * config/s390/s390.md (define_peephole2): New peephole to help
            combining the load-and-test pattern with volatile memory.
    
    From-SVN: r247188

commit 16fce46b1675fe83d1035a26cbcb5f02408ced56
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Tue Apr 25 11:04:42 2017 +0000

    S/390: Load and test peephole.
    
    gcc/ChangeLog:
    
    2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-25  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            * config/s390/s390.md (define_peephole2): New peephole to help
            combining the load-and-test pattern with volatile memory.
    
    From-SVN: r247187

commit 31a66be10f118d94cab8f345dc5d743224ec6ebb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Apr 25 09:29:21 2017 +0200

    re PR rtl-optimization/80501 (Wrong code w/ a signed char, a shift, and a conversion to int)
    
            PR rtl-optimization/80501
            * combine.c (make_compound_operation_int): Set subreg_code to SET
            even for AND with mask of the sign bit of mode.
    
            * gcc.c-torture/execute/pr80501.c: New test.
    
    From-SVN: r247129

commit 75092192da0059d05be8eb085d976d41aac3955c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Apr 25 09:27:47 2017 +0200

    re PR rtl-optimization/80500 (ICE: internal consistency failure (error: invalid rtl sharing found in the insn))
    
            PR rtl-optimization/80500
            * loop-unroll.c (combine_var_copies_in_loop_exit): Call copy_rtx on
            sum's initial value.
    
            * gcc.dg/pr80500.c: New test.
    
    From-SVN: r247127

commit a1f01860937395a3f5e74e7fd952c1a013d45229
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 25 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r247120

commit c77308d68c038c442157d049766269b53819920d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Apr 24 21:40:51 2017 +0100

    Regenerate .pot files.
    
    gcc/po:
            * gcc.pot: Regenerate.
    
    libcpp/po:
            * cpplib.pot: Regenerate.
    
    From-SVN: r247114

commit 84341de847199e0fb6fe3b0880b9206352a18d53
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Apr 24 16:48:43 2017 +0200

    Subject: Backport r247097
    
    2017-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Jan Hubicka  <hubicka@ucw.cz>
    
            PR middle-end/79931
            * ipa-devirt.c (dump_possible_polymorphic_call_targets): Fix ICE.
    2017-04-24  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79931
            * g++.dg/ipa/pr79931.C: New test.
    
    From-SVN: r247102

commit 5871268a1b7f6474b8bb876e64799211db2484da
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 24 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r247087

commit 77dfeb2356e47a621e9b0a6e212ec49354539a0e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 23 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r247080

commit e58b27933798e71a1cd5a9ad686f5b51df83337f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 22 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r247074

commit 722f47c6c0f2ceb5d4d20d77a64a05fa95d6265d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Apr 21 11:38:05 2017 +0100

    * es.po, fr.po: Update.
    
    From-SVN: r247060

commit 989ac84fcf168255bda5c4d10a2e576cbf26a8ff
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Apr 21 08:08:03 2017 +0000

    re PR tree-optimization/80426 (wrong manipulation of range based on INT_MIN)
    
            PR tree-optimization/80426
            * gcc.c-torture/execute/20170429-1.c: Rename into...
            * gcc.c-torture/execute/20170419-1.c: ...this.
    
    From-SVN: r247047

commit a90c12b85d5961473300a43dcfcf882d6dc65549
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 21 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r247044

commit e9dcea2ae31a170b7ff297fe54d81863998a4116
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Apr 20 19:36:27 2017 +0100

    PR c++/80473 allow suppressing notes about over-aligned new
    
    Backport from mainline r247033
    gcc/cp:
    
            PR c++/80473
            * init.c (build_new_1): Suppress notes about over-aligned new when
            the warning is suppressed.
    
    gcc/testsuite:
    
            PR c++/80473
            * g++.dg/diagnostic/pr80473.C: New test.
    
    From-SVN: r247035

commit 70cae6302aae22be60eeb7c78176a8be60f2b20e
Author: Alexander Monakov <amonakov@ispras.ru>
Date:   Thu Apr 20 20:59:25 2017 +0300

    omp-low: fix lastprivate/linear lowering for SIMT
    
    Backport from mainline r247029
    gcc/
            * omp-low.c (lower_lastprivate_clauses): Correct handling of linear and
            lastprivate clauses in SIMT case.
    
    libgomp/
            * testsuite/libgomp.c/target-36.c: New testcase.
    
    From-SVN: r247032

commit 120fbfd0eed031652edcdc98fb28ba2b4ef108ba
Author: Matthew Fortune <matthew.fortune@imgtec.com>
Date:   Thu Apr 20 13:39:50 2017 +0000

    MIPS: Prevent buffer overrun in uninitialised variable fix
    
    Backport from mainline
    2017-04-20  Matthew Fortune  <matthew.fortune@imgtec.com>
    
    gcc/
            * config/mips/mips.c (mips_expand_vec_perm_const): Re-fix
            uninitialized variable warning to avoid buffer overrun.
    
    From-SVN: r247023

commit 6eceeed7af3f1aa7cb8e32f5926f869884f24cd1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 20 12:48:41 2017 +0200

    * DEV-PHASE: Set to prerelease.
    
    From-SVN: r247019
