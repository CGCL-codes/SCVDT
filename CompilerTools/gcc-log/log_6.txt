commit 39a300fd08a80963ce13bd1598f9062935751e0f
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed Nov 7 20:52:55 2018 +0000

    gcc: xtensa: don't force PIC for uclinux target
    
    xtensa-uclinux uses bFLT executable file format that cannot relocate
    fields representing offsets from data to code. C++ objects built as PIC
    use offsets to encode FDE structures. As a result C++ exception handling
    doesn't work correctly on xtensa-uclinux. Don't use PIC by default on
    xtensa-uclinux.
    
    gcc/
    2018-11-07  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-11-05  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/uclinux.h (XTENSA_ALWAYS_PIC): Change to 0.
    
    From-SVN: r265890

commit e31ae982c446804d1b259554203401392b078364
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 26 09:54:34 2018 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r265524

commit 68f5087d661b3a6d6b8c201d01e8f7610af05564
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 26 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r265511

commit 931e7152b497626bd0dbb36f2e1ac86f226eac5b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 25 17:42:01 2018 +0100

    PR libstdc++/87749 fix (and optimize) string move construction
    
    The move constructor for the SSO string uses assign(const basic_string&)
    when either:
    
    (1) the source string is "local" and so the contents of the small string
    buffer need to be copied, or
    
    (2) the allocator does not propagate and is_always_equal is false.
    
    Case (1) is suboptimal, because the assign member is not noexcept and
    the compiler isn't smart enough to see it won't actually throw in this
    case. This causes extra code in the move assignment operator so that any
    exception will be turned into a call to std::terminate. This can be
    fixed by copying small strings inline instead of calling assign.
    
    Case (2) is a bug, because the specific instances of the allocators
    could be equal even if is_always_equal is false. This can result in an
    unnecessary deep copy (and potentially-throwing allocation) when the
    storage should be moved. This can be fixed by simply checking if the
    allocators are equal.
    
            PR libstdc++/87749
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI]
            (basic_string::operator=(basic_string&&)): For short strings copy the
            buffer inline. Only fall back to using assign(const basic_string&) to
            do a deep copy when reallocation is needed.
            * testsuite/21_strings/basic_string/modifiers/assign/char/87749.cc:
            New test.
            * testsuite/21_strings/basic_string/modifiers/assign/char/
            move_assign_optim.cc: New test.
            * testsuite/21_strings/basic_string/modifiers/assign/wchar_t/87749.cc:
            New test.
            * testsuite/21_strings/basic_string/modifiers/assign/wchar_t/
            move_assign_optim.cc: New test.
    
    From-SVN: r265500

commit 74875207d8d36c3b8a0952ccde6b5115a9744f5c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 25 17:41:54 2018 +0100

    PR libstdc++/87704 fix unique_ptr(nullptr_t) constructors
    
    Using a delegating constructor to implement these constructors means
    that they instantiate the destructor, which requires the element_type to
    be complete. In C++11 and C++14 they were specified to be delegating,
    but that was changed as part of LWG 2801 so in C++17 they don't require
    a complete type (as was intended all along).
    
    Backport from mainline
    2018-10-23  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/87704
            * include/bits/unique_ptr.h (unique_ptr::unique_ptr(nullptr_t)): Do
            not delegate to default constructor.
            (unique_ptr<T[], D>::unique_ptr(nullptr_t)): Likewise.
            * testsuite/20_util/unique_ptr/cons/incomplete.cc: New test.
    
    From-SVN: r265499

commit 7aec289640530c5e1cf9825ce91fc55d1483496d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 25 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r265475

commit 0970e3715275a23662206e645da17b235124f0a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 24 00:16:40 2018 +0000

    Daily bump.
    
    From-SVN: r265445

commit 5d72b28145d0f4f1d75518d33f77b68ada602184
Author: Tom de Vries <tdevries@suse.de>
Date:   Tue Oct 23 17:16:55 2018 +0000

    backport "[c++] Fix DECL_BY_REFERENCE of clone parms"
    
    Consider test.C compiled at -O0 -g:
    ...
    class string {
    public:
      string (const char *p) { this->p = p ; }
      string (const string &s) { this->p = s.p; }
    
    private:
      const char *p;
    };
    
    class foo {
    public:
      foo (string dir_hint) {}
    };
    
    int
    main (void)
    {
      std::string s = "This is just a string";
      foo bar(s);
      return 0;
    }
    ...
    
    When parsing foo::foo, the dir_hint parameter gets a DECL_ARG_TYPE of
    'struct string & restrict'.  Then during finish_struct, we call
    clone_constructors_and_destructors and create clones for foo::foo, and
    set the DECL_ARG_TYPE in the same way.
    
    Later on, during finish_function, cp_genericize is called for the original
    foo::foo, which sets the type of parm dir_hint to DECL_ARG_TYPE, and sets
    DECL_BY_REFERENCE of dir_hint to 1.
    
    After that, during maybe_clone_body update_cloned_parm is called with:
    ...
    (gdb) call debug_generic_expr (parm.typed.type)
    struct string & restrict
    (gdb) call debug_generic_expr (cloned_parm.typed.type)
    struct string
    ...
    The type of the cloned_parm is then set to the type of parm, but
    DECL_BY_REFERENCE is not set.
    
    When doing cp_genericize for the clone later on,
    TREE_ADDRESSABLE (TREE_TYPE ()) is no longer true for the updated type for
    the parm, so DECL_BY_REFERENCE is not set there either.
    
    The missing DECL_BY_REFERENCE on cloned_parm causes incorrect debug info to be
    generated.
    
    This patch fixes the problem by copying DECL_BY_REFERENCE in update_cloned_parm.
    
    Bootstrapped and reg-tested on x86_64.
    
    2018-10-23  Tom de Vries  <tdevries@suse.de>
    
            backport from trunk:
            2018-07-31  Tom de Vries  <tdevries@suse.de>
    
            PR debug/86687
            * optimize.c (update_cloned_parm): Copy DECL_BY_REFERENCE.
    
            * g++.dg/guality/pr86687.C: New test.
    
    From-SVN: r265431

commit f9da73194bdca8f5e084cad98ba005b970206db1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 23 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r265405

commit 4afedd99862d1cf999c3b148d6ef4d93338479ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 22 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r265363

commit ba8783c32366820074e6ff4f46e4948b02d0c80b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 21 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r265346

commit d331c056990cf9ba941d7614321c1ef34e235127
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 20 00:16:39 2018 +0000

    Daily bump.
    
    From-SVN: r265336

commit d243689ecc0aebabcc6acf67d2762d7481145ba6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 19 00:16:46 2018 +0000

    Daily bump.
    
    From-SVN: r265300

commit 4f9f5a0c05dbea06b650fed849798c44e52abd55
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 18 22:41:01 2018 +0100

    PR libstdc++/87641 correctly initialize accumulator in valarray::sum()
    
    Use the value of the first element as the initial value of the
    __valarray_sum accumulator. Value-initialization might not create the
    additive identity for the value type.
    
            PR libstdc++/87641
            * include/bits/valarray_array.h (__valarray_sum): Use first element
            to initialize accumulator instead of value-initializing it.
            * testsuite/26_numerics/valarray/87641.cc: New test.
    
    From-SVN: r265291

commit 9a34d8e8a878afb66784729f6e9afddb8a02b9b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 18 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r265252

commit d0419fc6c3188eecd71a9b93cf2542e60df86067
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Oct 17 17:54:26 2018 +0000

    re PR middle-end/87623 (bytes swapped in register when comparing cause fail when compiled with  -O1 or higher)
    
            PR middle-end/87623
            * fold-const.c (fold_truth_andor_1): If the right side is not constant,
            bail out if both sides do not have the same storage order.
    
    From-SVN: r265245

commit 8fb108b76c0d5f69d5a64a3ab5e59025d76b7f6f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 17 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r265225

commit 001521b8ee9a64b83296088f61db264b0c26f6c6
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Tue Oct 16 15:21:19 2018 +0000

    backport: close.c: Include <string.h>.
    
            Backport from trunk
            * io/close.c [!HAVE_UNLINK_OPEN_FILE]: Include <string.h>.
    
    From-SVN: r265198

commit 29813f1b2f264ed0c77b79473f204df2a46f3715
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 16 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r265180

commit a22584b16a3776a9f0d8b4db1a3397797ca2767d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 15 15:03:53 2018 +0100

    Adjust test to pass with latest glibc
    
    Glibc changed the it_IT locales to use thousands separators,
    invalidating this test. Use nl_NL instead, as Dutch only uses grouping
    for money not numbers.
    
            * testsuite/22_locale/numpunct/members/char/3.cc: Adjust test to
            account for change to glibc it_IT localedata (glibc bz#10797).
    
    From-SVN: r265168

commit 2a4e082120ddc44c91937a29697efccc97c8dc7a
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Oct 15 13:43:09 2018 +0000

    backport: re PR sanitizer/84761 (AddressSanitizer is not compatible with glibc 2.27 on x86)
    
    2018-10-15  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-03-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/84761
            * sanitizer_common/sanitizer_linux_libcdep.cc (__GLIBC_PREREQ):
            Define if not defined.
            (DL_INTERNAL_FUNCTION): Don't define.
            (InitTlsSize): For __i386__ if not compiled against glibc 2.27+
            determine at runtime whether to use regparm(3), stdcall calling
            convention for older glibcs or normal calling convention for
            newer glibcs for call to _dl_get_tls_static_info.
    
    From-SVN: r265164

commit 92eeabf115c7b12f2f15bd17fd167f99206e95fe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 15 12:52:48 2018 +0100

    PR libstdc++/86751 default assignment operators for std::pair
    
    The solution for PR 77537 causes ambiguities due to the extra copy
    assignment operator taking a __nonesuch_no_braces parameter. By making
    the base class non-assignable we don't need the extra deleted overload
    in std::pair. The copy assignment operator will be implicitly deleted
    (and the move assignment operator not declared) as needed. Without the
    additional user-provided operator in std::pair the ambiguity is avoided.
    
    Backport from mainline
    2018-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86751
            * include/bits/stl_pair.h (__pair_base): New class with deleted copy
            assignment operator.
            (pair): Derive from __pair_base.
            (pair::operator=): Remove deleted overload.
            * python/libstdcxx/v6/printers.py (StdPairPrinter): New pretty printer
            so that new base class isn't shown in GDB.
            * testsuite/20_util/pair/86751.cc: New test.
            * testsuite/20_util/pair/ref_assign.cc: New test.
    
    From-SVN: r265162

commit c35f091830307a2fe78a3d533142bda937b180a7
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Oct 15 10:50:57 2018 +0000

    backport: [multiple changes]
    
    2018-10-15  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-08-23  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/87024
            * tree-inline.c (copy_bb): Drop unused __builtin_va_arg_pack_len
            calls.
    
            * gcc.dg/pr87024.c: New testcase.
    
            2018-08-17  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/86505
            * tree-inline.c (copy_bb): When inlining __builtin_va_arg_pack_len ()
            across a va-arg-pack using call adjust its return value accordingly.
    
            * gcc.dg/torture/pr86505.c: New testcase.
    
    From-SVN: r265159

commit baa7a1dd283b60985a8ceb3ab53760e501715b35
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 15 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r265152

commit 0b6974a1ccf00789eab1b774c9fc691ac9305975
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 14 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r265143

commit c32acb1ec1123f4c707af67c90d785376cca76cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 13 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r265136

commit b979a5a601be9ee8c922ec7e3fdb94cd9746a10e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:34:07 2018 +0200

    backport: re PR target/87550 (Intrinsics for rdpmc (__rdpmc, __builtin_ia32_rdpmc) are interpreted as pure functions)
    
            Backported from mainline
            2018-10-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/87550
            * config/i386/i386.c (bdesc_args): Move IX86_BUILTIN_RDPMC
            from here to ...
            (bdesc_special_args): ... here.
    
            * gcc.target/i386/pr87550.c: New test.
    
    From-SVN: r265122

commit 3176632ecd20af3d433edb1da834b08bcf0e0e61
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:33:25 2018 +0200

    backport: re PR middle-end/87248 (Bad code for masked operations involving signed ints)
    
            Backported from mainline
            2018-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/87248
            * fold-const.c (fold_ternary_loc) <case COND_EXPR>: Verify also that
            BIT_AND_EXPR's second operand is a power of two.  Formatting fix.
    
            * c-c++-common/torture/pr87248.c: New test.
    
    From-SVN: r265121

commit 7685fb062cc50bad395f10d9e98084bbd21605f8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:32:38 2018 +0200

    backport: re PR rtl-optimization/87065 (combine causes ICE in trunc_int_for_mode)
    
            Backported from mainline
            2018-08-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/87065
            * combine.c (simplify_if_then_else): Formatting fix.
            (if_then_else_cond): Guard MULT optimization with SCALAR_INT_MODE_P
            check.
            (known_cond): Don't return const_true_rtx for vector modes.  Use
            CONST0_RTX instead of const0_rtx.  Formatting fixes.
    
            * gcc.target/i386/pr87065.c: New test.
    
    From-SVN: r265120

commit 6b30e838cd7f8dc66aa69b76c8622bf375220e95
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:31:33 2018 +0200

    backport: re PR middle-end/86627 (Signed 128-bit division by 2 no longer expanded to RTL)
    
            Backported from mainline
            2018-07-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86627
            * expmed.c (expand_divmod): Punt if d == HOST_WIDE_INT_MIN
            and size > HOST_BITS_PER_WIDE_INT.  For size > HOST_BITS_PER_WIDE_INT
            and abs_d == d, do the power of two handling if profitable.
    
            * gcc.target/i386/pr86627.c: New test.
    
    From-SVN: r265119

commit 1688485d3757ea2746e92d066c9f9041d6267350
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:30:45 2018 +0200

    backport: re PR middle-end/86542 (wrong-code for collapsed taskloop which needs omp_cpyfn)
    
            Backported from mainline
            2018-07-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86542
            * omp-low.c (create_task_copyfn): Copy over also fields corresponding
            to _looptemp_ clauses, other than the first two.
    
            * testsuite/libgomp.c++/pr86542.C: New test.
    
    From-SVN: r265118

commit 13d7c032ddb77ba0623d27dcedfb7d55751a83cb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:29:35 2018 +0200

    backport: re PR middle-end/86539 (OpenMP wrong-code with taskloop and references)
    
            Backported from mainline
            2018-07-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86539
            * gimplify.c (gimplify_omp_for): Ensure taskloop firstprivatized init
            and cond temporaries don't have reference type if iterator has
            pointer type.  For init use &for_pre_body instead of pre_p if
            for_pre_body is non-empty.
    
            * testsuite/libgomp.c++/pr86539.C: New test.
    
    From-SVN: r265117

commit 37bc00e7f05602ffbee267693a522b1fda7f5212
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:28:51 2018 +0200

    backport: re PR middle-end/86660 (libgomp.c++/for-15.C ICEs with nvptx offloading)
    
            Backported from mainline
            2018-07-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/86660
            * omp-low.c (scan_sharing_clauses): Don't ignore map clauses for
            declare target to variables if they have always,{to,from,tofrom} map
            kinds.
    
            * testsuite/libgomp.c/pr86660.c: New test.
    
    From-SVN: r265116

commit 30de465eef6d3ac3bd08638305ebc508a3243203
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 12 19:27:56 2018 +0200

    backport: re PR c++/3698 (improper handling of an extern declared inline function)
    
            Backported from mainline
            2018-07-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/3698
            PR c++/86208
            * cp-gimplify.c (cp_genericize_r): When using extern_decl_map, or
            in TREE_USED flag from stmt to h->to.
    
            * g++.dg/opt/pr3698.C: New test.
    
    From-SVN: r265115

commit 8a5b5b7a8a15cc81d91f0b9ae5320534d7c404d0
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Oct 12 13:44:35 2018 +0000

    backport: [multiple changes]
    
    2018-10-12  Richard Biener  <rguenther@suse.de>
    
            PR c++/54278
            Backport from mainline
            2017-03-23  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80032
            * gimplify.c (gimple_push_cleanup): Forced unconditional
            cleanups still have to go to the conditional_cleanups
            sequence.
    
            2017-03-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80032
            * gimplify.c (gimple_push_cleanup): Add force_uncond parameter,
            if set force the cleanup to happen unconditionally.
            (gimplify_target_expr): Push inserted clobbers with force_uncond
            to avoid them being removed by control-dependent DCE.
    
            * g++.dg/opt/pr80032.C: New testcase.
    
    From-SVN: r265101

commit 2d3a867807bedc27b0fbf2c6e8d4cf557d5e43c9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 14:04:44 2018 +0100

    Fix __gnu_cxx::_Pointer_adapter for long long arithmetic
    
    Backport from mainline
    2018-08-30  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/ext/pointer.h (_Pointer_adapter): Define operators for
            pointer arithmetic using long long offsets.
            * testsuite/ext/ext_pointer/1.cc: Test pointer arithmetic using
            long long values.
    
    From-SVN: r265099

commit f993eed162d0b0e7ff8740893ebb7802a51f71b1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 14:04:38 2018 +0100

    Fix experimental::pmr typedefs and add tests
    
    The typedefs in <experimental/regex> and <experimental/string> don't
    need to be in the __cxx11 namespace, because they are only aliases and
    so will have the same mangled name as the underlying types.
    
    Backport from mainline
    2018-08-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/87061
            * include/experimental/regex [!_GLIBCXX_USE_CXX11_ABI]
            (experimental::pmr::match_results, experimental::pmr::cmatch)
            (experimental::pmr::smatch, experimental::pmr::wcmatch)
            (experimental::pmr::wsmatch): Do not declare for gcc4-compatible ABI,
            because COW strings don't support C++11 allocator model.
            * include/experimental/string [!_GLIBCXX_USE_CXX11_ABI]
            (experimental::pmr::basic_string, experimental::pmr::string)
            (experimental::pmr::u16string, experimental::pmr::u32string)
            (experimental::pmr::wstring): Likewise.
    
    Backport from mainline
    2018-08-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/regex: Remove begin/end macros for namespace.
            * include/experimental/string: Likewise.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_deque.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_forward_list.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_list.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_map.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_match.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_multimap.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_multiset.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_set.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_string.cc:
            New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_map.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_multimap.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_multiset.cc: New test.
            * testsuite/experimental/polymorphic_allocator/
            pmr_typedefs_unordered_set.cc: New test.
            * testsuite/experimental/polymorphic_allocator/pmr_typedefs_vector.cc:
            New test.
    
    From-SVN: r265098

commit b860a6a1fbcb21f581d8dcc5c0073a6015fad1a0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 14:04:24 2018 +0100

    PR libstdc++/70966 make pmr::new_delete_resource() immortal
    
    Construct the program-wide resource objects using placement new. This
    means they have dynamic storage duration and won't be destroyed during
    termination.
    
    Backport from mainline
    2018-07-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70966
            * include/experimental/memory_resource (__get_default_resource): Use
            placement new to create an object with dynamic storage duration.
    
    Backport from mainline
    2018-06-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70966
            * include/experimental/memory_resource (__resource_adaptor_imp): Add
            static assertions to enforce requirements on pointer types.
            (__resource_adaptor_imp::get_allocator()): Add noexcept.
            (new_delete_resource, null_memory_resource): Return address of an
            object with dynamic storage duration.
            (__null_memory_resource): Remove.
            * testsuite/experimental/memory_resource/70966.cc: New.
    
    From-SVN: r265097

commit 3505d09c54761cc6a8236547105132c34f3f9100
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Oct 12 12:38:28 2018 +0000

    i386: Correct _mm512_mask3_fmaddsub_round_pd
    
    Define _mm512_mask3_fmaddsub_round_pd with
    __builtin_ia32_vfmaddsubpd512_mask, instead of
    __builtin_ia32_vfmaddpd512_mask.
    
            Backport from mainline
            PR target/87517
            * config/i386/avx512fintrin.h (_mm512_mask_fmaddsub_round_pd):
            Defined with __builtin_ia32_vfmaddsubpd512_mask.
    
    From-SVN: r265091

commit e0b0bc007cb21d0541dee0f80544884d5d74d06e
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Oct 12 12:34:36 2018 +0000

    i386: Don't pass -msse2avx to assembler for -mavx
    
    With
    
    gcc -O2 -fPIC -flto -g -c -o a.o a.c
    gcc -O2 -fPIC -flto -g -mavx   -c -o b.o b.c
    gcc -shared -O2 -fPIC -flto -g -o lib1.so a.o b.o
    
    LTO correctly generates AVX for b.o and SSE for a.o.  But the GCC driver
    passes -msse2avx to assembler, which encodes SSE instructions as AVX
    instructions.  We shouldn't pass -msse2avx to assembler for -mavx.
    
            Backport from mainline
            PR target/87522
            * config/i386/gnu-user.h (ASM_SPEC): Don't pass -msse2avx to
            assembler for -mavx.
            * config/i386/gnu-user64.h (ASM_SPEC): Likewise.
    
    From-SVN: r265090

commit a19a0829cab9c0358a90c73010104d421f43ead4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 12:37:51 2018 +0100

    PR libstdc++/77854 document size_type for containers
    
            PR libstdc++/77854
            * doc/xml/manual/status_cxx1998.xml: Document size_type and
            difference_type for containers.
            * doc/html/*: Regenerate.
    
    From-SVN: r265084

commit 2d75d90a3d8b2ed3952769ba4d37f8782ef5ff02
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Oct 12 12:37:46 2018 +0100

    PR libstdc++/85098 add missing definitions for static constants
    
    In C++11 and C++14 any odr-use of these constants requires a definition
    at namespace-scope.  In C++17 they are implicitly inline and so the
    namespace-scope redeclarations are redundant (and allowing them is
    deprecated).
    
    Backport from mainline
    2018-05-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85098
            * include/bits/regex.h [__cplusplus < 201703L] (basic_regex::icase)
            (basic_regex::nosubs, basic_regex::optimize, basic_regex::collate)
            (basic_regex::ECMAScript, basic_regex::basic, basic_regex::extended)
            (basic_regex::awk, basic_regex::grep, basic_regex::egrep): Add
            definitions.
            * include/bits/regex_automaton.h (_NFA::_M_insert_state): Adjust
            whitespace.
            * testsuite/28_regex/basic_regex/85098.cc: New
    
    From-SVN: r265083

commit 9f8c787dcc56877afc42199e50d16596b214a6b1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 12 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r265069

commit f817a2bafd5ada0086ba0a796289cb24c7d36217
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 11 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r265029

commit 46491ffd35c89e612ea80158fdcaa20dd9170083
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 10 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r265000

commit 475ac184f4760cacab39ae64fdaeaf883b740b32
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Oct 9 12:40:45 2018 +0100

    Use -fno-show-column in libstdc++ installed testing.
    
    <https://gcc.gnu.org/ml/libstdc++/2016-08/msg00006.html> arranged for
    libstdc++ tests to use -fno-show-column by default, but only for
    build-tree testing.  This patch adds it to the options used for
    installed testing as well.
    
    Tested with installed testing for a cross to x86_64-linux-gnu, where
    it fixes various test failures.
    
            Backport from mainline
            2018-10-02  Joseph Myers  <joseph@codesourcery.com>
    
            * testsuite/lib/libstdc++.exp (libstdc++_init): Use
            -fno-show-column in default cxxflags.
    
    From-SVN: r264955

commit e0bafadc1da6b6a9facf5d5a4e30d8f7ac198b96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 9 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r264945

commit 4f1d27e2e0f2d0f351608d3425b03794af94227d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 8 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r264907

commit 0c97ba0d4e43ac714c2e37c33f28b1b14acf7549
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 7 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r264903

commit 37e6b90abd9f963703cd71a6ddac3059dd039be2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 6 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r264893

commit d5d19bd8bfee9b34f018decb962889d0d27f8224
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 5 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r264857

commit a2b1c7a52cf3757136c25a83915d247c742fdabe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 4 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r264828

commit dda1995a92bf656b036134aff530c76559b851cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 3 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r264801

commit 579ac836bafa82de55622dc2786872e82fd85b0a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 2 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r264774

commit 293db3a9d4865d7fd26c87dcca825620270cae1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 1 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r264728

commit b52469a9000207843d843dc3328fb53bd7b72fd4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 30 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r264717

commit 0b3e4185951718fa132d4f578f1debdbda6907b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 29 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r264706

commit ed402805cd2cdf9d562fcb863865dd39048c1e7d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 28 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r264682

commit 4a6114478833cc96787329f43e24fb980141e861
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 27 00:16:38 2018 +0000

    Daily bump.
    
    From-SVN: r264658

commit 060740ebaac340384db75f4bd582940486e78476
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 26 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r264589

commit 5cd571c5d002b30f235d7704362135a1710d132d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 25 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r264549

commit 88c9c310f1c030d9600fbba58467d490b0a1ef6d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 24 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r264519

commit 4230708946741dfbfccaa5889c0076b5ca292e02
Author: Matthias Klose <doko@ubuntu.com>
Date:   Sun Sep 23 08:36:14 2018 +0000

    backport: re PR sanitizer/86012 (libsanitizer build failure on sparc64-linux-gnu)
    
    2017-09-23  Matthias Klose  <doko@ubuntu.com>
    
            Backported from the gcc-7-branch:
            2018-05-31  Matthias Klose  <doko@ubuntu.com>
    
            PR sanitizer/86012
            * sanitizer_common/sanitizer_platform_limits_posix.cc: Define
            SIZEOF_STRUCT_USTAT for 32bit sparc.
    
    From-SVN: r264511

commit e95d2f5458975a7746f8ae6861ef66b20215d369
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 23 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r264507

commit 8f7f07b13965d6e6208d11e34b9e1d3eb54e1bd6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 22 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r264497

commit 2cd244789bc75ecdf65824f831986969049a1647
Author: Matthias Klose <doko@ubuntu.com>
Date:   Fri Sep 21 07:18:26 2018 +0000

    backport: re PR sanitizer/85835 (libsanitizer includes <sys/ustat.h> unconditionally)
    
    2017-09-21  Matthias Klose  <doko@ubuntu.com>
    
            Backported from the gcc-7-branch:
            2018-05-24  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR sanitizer/85835
            * sanitizer_common/sanitizer_platform_limits_posix.cc: Don't
            include <sys/ustat.h> for Linux.
            (SIZEOF_STRUCT_USTAT): New.
            (struct_ustat_sz): Use SIZEOF_STRUCT_USTAT for Linux.
    
    From-SVN: r264457

commit 6376168efb4c45d621fbec6472f8c9e84a24e940
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 21 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r264453

commit 7419258f8cc6cda2b0bb8fb105bc2e9f4e7eefe9
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu Sep 20 01:13:58 2018 +0000

    pa.md (atomic_storeqi): Restore deleted expander.
    
            * config/pa/pa.md (atomic_storeqi): Restore deleted expander.
            (atomic_storehi): Likewise.
            (atomic_storesi): Likewise.
            (atomic_loaddi): Restore compare and swap exchange loop code.
    
    From-SVN: r264436

commit 30d9199c4f5898f4acfb5b442a83cbe6b771b9b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 20 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r264429

commit 528a7b5e6def4cc5abc7501a50449474ee2d8c52
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 19 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r264414

commit 574b325f261b30d4b2d09e8bc6d0cdba5a8055e6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 18 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r264377

commit f2e0f5ba968d6a306e3057fac8a2fbe6ee579c10
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 17 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r264352

commit 3ca74260ef1ecea32231af2d18d76598d49879b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 16 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r264343

commit d701959e6e4acd08ac35a075204c699e740c9f2b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 15 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r264338

commit a58cc650bc405390a2a6e49b2bdac50d1c8bf4f3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 14 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r264296

commit cbe82efee7ef416c006194b2e717511d147b7a24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 13 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r264255

commit 92c614d752fd47e9e0238f65f39d5edd61e7a6c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 12 00:16:30 2018 +0000

    Daily bump.
    
    From-SVN: r264223

commit dd22187289a4f2d0ffedfacd3e37809944922db4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 11 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r264197

commit 37058a691b34616377d485b4d128d128ff2d73c2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 10 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r264186

commit 5a87dc63911d637f51abd1ddb9519fc310b3c4c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 9 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r264173

commit 0f10068d50b0ca8184e6ded21a90bc9a5980d7ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 8 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r264164

commit e6a17dcfb8c7826d792a39b2b80add958dcd2c45
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Sep 7 20:01:23 2018 +0200

    backport: re PR fortran/86116 (Ambiguous generic interface not recognised)
    
    2018-09-07  Janus Weil  <janus@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/86116
            * interface.c (compare_type): Remove a CLASS/TYPE check.
            (compare_type_characteristics): New function that behaves like the old
            'compare_type'.
            (gfc_check_dummy_characteristics, gfc_check_result_characteristics):
            Call 'compare_type_characteristics' instead of 'compare_type'.
    
    2018-09-07  Janus Weil  <janus@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/86116
            * gfortran.dg/generic_34.f90: New test case.
    
    From-SVN: r264162

commit 9bfdd3476d3994438fb925a74be6261772b9f163
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 7 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r264152

commit ba9e405f1a0a8c34c459e83f5cb19b986565585b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 6 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r264135

commit 1d1e3879d73a79b0d5bbce33ddf8dc7cdc8e05a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 5 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r264097

commit 4e2fc0435b47abc45677c7ccc8097747adc8a08e
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Sep 4 18:03:57 2018 +0000

    gcc: xtensa: fix NAND code in xtensa_expand_atomic
    
    NAND is ~(a1 & a2), but xtensa_expand_atomic does ~a1 & a2.
    That fixes libatomic tests atomic-op-{1,2}.
    
    gcc/
    2018-09-04  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-09-04  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_expand_atomic): Reorder AND and
            XOR operations in NAND case.
    
    From-SVN: r264093

commit 4bf0c5af08d695755af8ea4c1941f20920404155
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 4 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r264071

commit 8026cd4783640171c0bbdbc23c8e275dddfc315d
Author: Tom de Vries <tdevries@suse.de>
Date:   Mon Sep 3 10:14:52 2018 +0000

    backport "[tail-merge] Fix side-effect test in stmt_local_def"
    
    2018-09-03  Tom de Vries  <tdevries@suse.de>
    
            backport from trunk:
            2018-06-21  Tom de Vries  <tdevries@suse.de>
    
            PR tree-optimization/85859
            * tree-ssa-tail-merge.c (stmt_local_def): Copy gimple_is_call
            test with comment from bb_no_side_effects_p.
    
            * gcc.dg/pr85859.c: New test.
    
    From-SVN: r264055

commit 3fd278eb0793a5cf513b1a99b36ea403c6266dd7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 3 00:16:35 2018 +0000

    Daily bump.
    
    From-SVN: r264046

commit b205af8ea3d443d13f645f912bcaae377993dbe6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 2 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r264034

commit a5c980fe813056683010799a703edab84b5c839b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 1 00:16:25 2018 +0000

    Daily bump.
    
    From-SVN: r264023

commit a5f1642a3c22ceb060fa9056d76afdfa4083e357
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 31 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r264003

commit a45e5e7444e1d96d76933a8b6bcc1adcba018dda
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 30 00:16:38 2018 +0000

    Daily bump.
    
    From-SVN: r263969

commit 22ee4d40d80c116d1f5f8ccc823252e342b26a4a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 29 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r263937

commit 46f5e962888dfa8f5d6e6b9c61006505da3a41fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 28 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r263901

commit c44374466a72146e7a307b2da18fbe83db05db96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 27 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r263864

commit e3dc03b22a6ae0b47598ff5f6a8d2056ab9d755f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 26 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r263857

commit 790ce29216b6e577eb34a7eff1ef9670b4c47c3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 25 00:16:39 2018 +0000

    Daily bump.
    
    From-SVN: r263846

commit 4445cbf1ed8ad08fa46909bd55300716be531e34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 24 00:16:36 2018 +0000

    Daily bump.
    
    From-SVN: r263824

commit bf084ed000ec3e51efc27a6dde79f8e5da0c0cda
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 23 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r263795

commit a01bc6249fc362cd55e84ce7637a526320bba6bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 22 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263755

commit eac2395346aec502e63562152d369f79eabceeaf
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Tue Aug 21 16:38:17 2018 +0000

    x86: Always update EH return address in word_mode
    
    On x86, return address is always popped in word_mode.  eh_return needs
    to put EH return address in word_mode on stack.
    
    gcc/
    
            Backport from mainline
            PR target/87014
            * config/i386/i386.md (eh_return): Always update EH return
            address in word_mode.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/87014
            * g++.dg/torture/pr87014.C: New file.
    
    From-SVN: r263745

commit c25fb40611be1884eead1829f6fde8421af3d6ba
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 21 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r263680

commit eeed12c317799f3b5787645494dc9becdfb72442
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 20 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r263653

commit c6efeca4ab159e7838bb08dd327da106167563ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 19 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263648

commit 5b45f7febbc53fd39c3d5d4cd14f907561a830be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 18 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r263641

commit 88526146189a2dddbbd413713ee315ea00be983a
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Fri Aug 17 23:00:34 2018 +0000

    backport: pa.md (UNSPEC_MEMORY_BARRIER): New unspec enum.
    
            Backport from mainline
            2018-08-11  John David Anglin  <danglin@gcc.gnu.org>
    
            gcc
            * config/pa/pa.md (UNSPEC_MEMORY_BARRIER): New unspec enum.
            Update comment for atomic instructions.
            (atomic_storeqi, atomic_storehi, atomic_storesi, atomic_storesf,
            atomic_loaddf, atomic_loaddf_1, atomic_storedf, atomic_storedf_1):
            Remove.
            (atomic_loaddi): Revise fence expansion to only emit fence prior to
            load for __ATOMIC_SEQ_CST model.
            (atomic_loaddi_1): Remove float register target.
            (atomic_storedi): Handle CONST_INT values.
            (atomic_storedi_1): Remove float register source.  Add special case
            for zero value.
            (memory_barrier): New expander and insn.
    
            libgcc
            * config/pa/linux-atomic.c: Update comment.
            (FETCH_AND_OP_2, OP_AND_FETCH_2, FETCH_AND_OP_WORD, OP_AND_FETCH_WORD,
            COMPARE_AND_SWAP_2, __sync_val_compare_and_swap_4,
            SYNC_LOCK_TEST_AND_SET_2, __sync_lock_test_and_set_4): Use
            __ATOMIC_RELAXED for atomic loads.
            (SYNC_LOCK_RELEASE_1): New define.  Use __sync_synchronize() and
            unordered store to release lock.
            (__sync_lock_release_8): Likewise.
            (SYNC_LOCK_RELEASE_2): Remove define.
    
    From-SVN: r263639

commit 0b3cacb1519ec61eeaeeadd2d195b19e3e8fc3e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 17 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r263608

commit 22348edf2c6048840f1e8dfdde8d18a663092c83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 16 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r263573

commit 37f31eec36a5ffff8576dab52bb5b1a8169d2c42
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 15 00:16:22 2018 +0000

    Daily bump.
    
    From-SVN: r263544

commit e31e485e7b453cd6cddf5a0a137b9c98bc797ea5
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue Aug 14 15:15:39 2018 +0000

    backport: re PR tree-optimization/86724 (Compilation error with new isl 0.20 (missing includes))
    
    2018-08-14  Matthias Klose  <doko@ubuntu.com>
    
            Backport from mainline
            2018-08-01  Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/86724
            * graphite.h: Include isl/id.h and isl/space.h to allow build
            with ISL 0.20.
    
    From-SVN: r263539

commit e82460cd284d350df3b7b1b0e0d55ddfc3fea4c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 14 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r263524

commit 84f2ad61a38e705c8d1c5744ae3706900795d06c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 13 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263500

commit 2a375022423305efc94a8d6b9ba46a81e1a893e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 12 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263489

commit e6d2f3c5a18c7e12bbda38e73b72fa8216ab7a83
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 11 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r263480

commit 8c63d458a39cb08bf8e2cc60d9fe3ffc8bfec8c0
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Aug 10 22:46:04 2018 +0200

    backport: re PR target/86197 (POWERPC: float128 parameter passing)
    
            Backport from mainline
            2018-06-19  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/86197
            * config/rs6000/rs6000.md (rs6000_discover_homogeneous_aggregate): An
            ieee128 argument takes up only one (vector) register, not two (floating
            point) registers.
    
    From-SVN: r263479

commit f99ce4842ab4c4f2ad3d80976340d6f8740af471
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 10 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r263457

commit 341e19e6a4c895c88d237a08c1c35ef9201cdf86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 9 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r263436

commit c4242debcd8f307b22a9ad0697247e7b84651230
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 17:31:55 2018 +0100

    PR libstdc++/83982 fix exception-safety guarantee of std::vector::resize
    
    Construct new elements before moving existing ones, so that if a default
    constructor throws, the existing elements are not left in a moved-from
    state.
    
    Backport from mainline
    2018-06-14  Daniel Trebbien <dtrebbien@gmail.com>
                Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83982
            * include/bits/vector.tcc (vector::_M_default_append(size_type)):
            Default-construct new elements before moving existing ones.
            * testsuite/23_containers/vector/capacity/resize/strong_guarantee.cc:
            New.
    
    From-SVN: r263427

commit ce46b1fe2800fb4fc7f8e6ac9b2e51880930c991
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:41:05 2018 +0100

    Add noexcept to std::integral_constant members
    
    Backport from mainline
    2017-12-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/type_traits (integral_constant): Make member functions
            noexcept (LWG 2346).
            * include/std/utility (integer_sequence): Likewise.
    
    From-SVN: r263424

commit 74568c77ef49b2ed2cbb03788aa4511222368db5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:57 2018 +0100

    LWG 3050 Fix cv-qualification of convertibility constraints
    
    Backport from mainline
    2018-06-18  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/chrono (duration, operator*, operator/, operator%): Use
            const-qualified type as source type in is_convertible constraints.
            * testsuite/20_util/duration/arithmetic/dr3050.cc: New.
            * testsuite/20_util/duration/cons/dr3050.cc: New.
            * testsuite/20_util/duration/literals/range.cc: Rename to...
            * testsuite/20_util/duration/literals/range_neg.cc: Here. Adjust
            dg-error lineno.
    
    From-SVN: r263423

commit 12dabb45c7315f02f2cad94bda1eaef8cb752bb0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:51 2018 +0100

    Add noexcept to std::shared_future copy operations (LWG DR 2799)
    
    Backport from mainline
    2017-11-16  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/future (shared_future): Add noexcept to copy constructor
            and copy-assignment operator (LWG 2799).
    
    From-SVN: r263422

commit fffabf109643193c1170758a0ae8147c8435fc7c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:47 2018 +0100

    PR libstdc++/80893 Fix null dereference in vector<bool>
    
    Backport from mainline
    2017-06-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80893
            * testsuite/23_containers/vector/bool/80893.cc: Add { target c++11 }.
    
    Backport from mainline
    2017-05-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80893
            * include/bits/stl_bvector.h (vector<bool>::_M_initialize): Avoid
            null pointer dereference when size is zero.
            * testsuite/23_containers/vector/bool/80893.cc: New.
            * testsuite/util/testsuite_allocator.h (PointerBase::PointerBase):
            Add non-explicit constructor from nullptr.
            (PointerBase::derived() const): Add const-qualified overload.
    
    From-SVN: r263421

commit 62ea33bbef023e14cace6c54487741b249429ed8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:41 2018 +0100

    PR libstdc++/68519 use native duration to avoid rounding errors
    
    Backport from mainline
    2017-12-14  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/68519
            * include/std/condition_variable (condition_variable::wait_for):
            Convert duration to native clock's duration before addition.
            * testsuite/30_threads/condition_variable/members/68519.cc: New test.
    
    From-SVN: r263420

commit 6a1d5393f029cedaed7ab31d1680119a7bae0d6d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:37 2018 +0100

    PR libstdc++/86292 fix exception safety of std::vector<InputIterator> constructor
    
    Backport from mainline
    2018-06-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86292
            * include/bits/stl_vector.h (vector::_M_range_initialize<InputIter>):
            Add try-catch block.
            * testsuite/23_containers/vector/cons/86292.cc: New.
    
    From-SVN: r263419

commit 096783e4fad09e74b943578efc84c67c3bdc0ded
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:32 2018 +0100

    Improve libstdc++ docs w.r.t newer C++ standards
    
    Instead of repeating all the old headers for every new standard I've
    changed the docs to only list the new headers for each standard.
    
    Backport from mainline
    2018-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/using.xml: Document all headers for C++11 and later.
            * doc/html/*: Regenerate.
    
    From-SVN: r263418

commit 0ae3126311c389850f73ed43705545d06d77b782
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:26 2018 +0100

    PR libstdc++/60555 std::system_category() should recognise POSIX errno values
    
    Backport from mainline
    2018-08-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * src/c++11/system_error.cc
            (system_error_category::default_error_condition): Add workaround for
            ENOTEMPTY and EEXIST having the same value on AIX.
            * testsuite/19_diagnostics/error_category/system_category.cc: Add
            extra testcases for EDOM, EILSEQ, ERANGE, EEXIST and ENOTEMPTY.
    
    Backport from mainline
    2018-08-01  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/60555
            * src/c++11/system_error.cc
            (system_error_category::default_error_condition): New override to
            check for POSIX errno values.
            * testsuite/19_diagnostics/error_category/generic_category.cc: New
            * testsuite/19_diagnostics/error_category/system_category.cc: New
            test.
    
    From-SVN: r263417

commit 2751aed2cf42d3a9922ca76029b653306a3b30d2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:21 2018 +0100

    PR libstdc++/86734 use addressof in reverse_iterator::operator->
    
    Backport from mainline
    2018-07-30  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/86734
            * include/bits/stl_iterator.h (reverse_iterator::operator->): Use
            addressof (LWG 2188).
            * testsuite/24_iterators/reverse_iterator/dr2188.cc: New test.
    
    From-SVN: r263416

commit a9b5db38b5b4a2f718c21d4573fefa2c0b4e4eb4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:17 2018 +0100

    Fix std::codecvt_utf8<wchar_t> for Mingw
    
    Backport from mainline
    2018-05-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * src/c++11/codecvt.cc (__codecvt_utf8_base<wchar_t>::do_in)
            [__SIZEOF_WCHAR_T__==2 && __BYTE_ORDER__!=__ORDER_BIG_ENDIAN__]: Set
            little_endian element in bitmask.
            * testsuite/22_locale/codecvt/codecvt_utf8/69703.cc: Run all tests.
            * testsuite/22_locale/codecvt/codecvt_utf8/wchar_t/1.cc: New.
    
    From-SVN: r263415

commit dfa5533a4f6aa06f4fa27e86698772ad43bc447a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Aug 8 16:40:11 2018 +0100

    PR libstdc++/66145 allow catching iostream errors as cxx11 ios::failure
    
    Define a new exception type derived from the gcc4-compatible ios::failure
    which also aggregates an object of the ios::failure[abi:cxx11] type.
    Make __throw_ios_failure throw this new type for iostream errors
    that raise exceptions. Provide custom type info for the new type so that
    it can be caught by handlers for ios::failure[abi:cxx11] type
    as well as handlers for the gcc4-compatible ios::failure and its bases.
    
    Backport from mainline
    2018-04-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/85222
            * src/c++11/cxx11-ios_failure.cc (__construct_ios_failure)
            (__destroy_ios_failure, is_ios_failure_handler): New functions.
            * src/c++11/ios.cc (__throw_ios_failure): Remove definition.
            (_GLIBCXX_USE_CXX11_ABI): Don't define here.
            * src/c++98/Makefile.am [ENABLE_DUAL_ABI]: Add special rules for
            ios_failure.cc to rewrite type info for __ios_failure.
            * src/c++98/Makefile.in: Regenerate.
            * src/c++98/ios_failure.cc [_GLIBCXX_USE_DUAL_ABI]
            (__iosfailure, __iosfailure_type_info): New types.
            (__throw_ios_failure): Define here.
            * testsuite/27_io/ios_base/failure/dual_abi.cc: New.
            * testsuite/27_io/basic_ios/copyfmt/char/1.cc: Revert changes to
            add -D_GLIBCXX_USE_CXX11_ABI=0 to dg-options.
            * testsuite/27_io/basic_ios/exceptions/char/1.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/char/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_arithmetic/wchar_t/
            exceptions_failbit.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/extractors_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/char/12297.cc: Likewise.
            * testsuite/27_io/basic_istream/sentry/wchar_t/12297.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/char/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/basic_ostream/inserters_other/wchar_t/
            exceptions_null.cc: Likewise.
            * testsuite/27_io/ios_base/storage/2.cc: Likewise.
    
    From-SVN: r263414

commit ebf513be8a79431d4d042a1921064078157f9c02
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 8 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r263384

commit cfd0c8c9e61e6e2adc0e9107a687806b81b952de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 7 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r263347

commit 9c0a3b0b6f20f59be07051e727148ddb958cf43d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 6 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263321

commit c7954b35cf0e7c0fe7f170ec88d108cb2003e516
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 5 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r263313

commit 7dd99851bee28bc98786f25fa5b8656c857c1e84
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 4 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r263302

commit a7df97fa2072b2d75809ae6cb18d26bf861670db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 3 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r263281

commit 444110207c5b6b08e59a65878b60e3c94877346d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 2 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r263240

commit fd9a8592c5f495ae23622d86b3935331d75baadf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 1 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r263187

commit a3c795efdd216bd52c17fbc98c59289da6718cb3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 31 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263077

commit f3e0aaad43041a829062df4ed9146ebfc70824e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 30 00:16:28 2018 +0000

    Daily bump.
    
    From-SVN: r263056

commit b6a016c7ab11bc401f682805a3b175d9c621f385
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Jul 29 16:11:34 2018 +0000

    pa.c (pa_output_addr_vec): Align address table.
    
            * config/pa/pa.c (pa_output_addr_vec): Align address table.
            * config/pa/pa.h (JUMP_TABLES_IN_TEXT_SECTION): Revise comment.
            * config/pa/pa32-linux.h (JUMP_TABLES_IN_TEXT_SECTION): Define.
    
    From-SVN: r263054

commit 9cfbedb8c1f02c8f2fe5c8b23b9e39c3a482b50e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 29 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r263047

commit 6fdbb6fb835104099018318d683261997bf8e3a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 28 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r263042

commit e953c904ca0197859ddb2e23176d7483e4dc8d8e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 27 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r263024

commit d058ed49d24e9347db14b651c0fe963556c00c37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 26 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r262985

commit 129dd7be4618002959dc5519ad50f2b4924821c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 25 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r262954

commit 6b10326eb36728ab3e89250015c6caa220417fe7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 24 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r262937

commit 0cd6902903f38f80d7a896ebe602ff9b98ddf8ac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 23 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262924

commit b19a07937a80b6c592b37ef2c6ca836534a6cc6a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 22 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262918

commit 706c45eb141ea74c75332968426c5fa5e2e8c350
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 21 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262914

commit 9b108964c41a72704d6cce61acc4c2067d746d96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 20 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r262894

commit 769c7cce2e2b9aedcef919d2a924b0f6cf5c336c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 19 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262867

commit e43d339c11b5305c18a4e77eadedbc617aa2e75a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 18 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r262843

commit 407a30151ab87d7bc5ac41bd819338bbff752bad
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Jul 17 12:53:42 2018 +0000

    Avoid assembler warnings from AArch64 constructor/destructor priorities.
    
    2018-07-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            Backport from mainline
            PR target/84168
            2017-09-28  Joseph Myers  <joseph@codesourcery.com>
    
            * config/aarch64/aarch64.c (aarch64_elf_asm_constructor)
            (aarch64_elf_asm_destructor): Pass SECTION_NOTYPE to get_section
            when creating .init_array and .fini_array sections with priority
            specified.
    
    From-SVN: r262822

commit 18911d404c71e86ac8f0f9bac10439b5aa974bbb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 17 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r262761

commit 104bc7bb97720bf3eb38a65e494a7a31e462f53e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 16 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r262672

commit 775088bded8eba7c2df9665fb5ed33c781ec9dbd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 15 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262662

commit 8136442f4fa3191d5ccd81d7f5bd5f14b842fb25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 14 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r262655

commit 58e6a05d06be1c53440a63222ef0c75f68db77cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 13 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262617

commit 401e454ea0c3efb87246303e488b22feb0373e1b
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 12 16:33:26 2018 +0000

    re PR target/84829 (-mieee-fp causes to link with -lieee but that is no longer available)
    
    2018-07-12  Richard Biener  <rguenther@suse.de>
    
            PR target/84829
            * config/gnu-user.h (GNU_USER_TARGET_NO_PTHREADS_LIB_SPEC):
            Remove -mieee-fp handling.
    
            * gcc.target/i386/pr84829.c: New testcase.
    
    From-SVN: r262598

commit cb827ed186535ebe710781d8c53f9be154772417
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 12 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r262568

commit 638c7a71e994f65eacf6a221d7c0bb50211a0053
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 11 00:16:44 2018 +0000

    Daily bump.
    
    From-SVN: r262546

commit 5e9ba6547c1f129c2e5e011b577412ea96fba467
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 10 00:16:33 2018 +0000

    Daily bump.
    
    From-SVN: r262529

commit f9653b46d20ebb398d8c504182abccb2950a5285
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 9 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r262506

commit 364835c7fd5f5c9f8fe9cc9775fe85d551c40d2f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 8 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262502

commit 45a73eabdd37a86aaa5b9ff0f0e42dc518ed9b02
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 7 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262489

commit 98e75418d7e0fc7df1864bf001ed53ce25849ecd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 6 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r262459

commit 5ec2d89d446bc1b0c3a70bc9e3846e3aeedfa702
Author: François Dumont <fdumont@gcc.gnu.org>
Date:   Thu Jul 5 20:51:27 2018 +0000

    backport: re PR libstdc++/86272 (__gnu_debug::string uses undefined __glibcxx_check_insert_range2)
    
    2018-07-05  François Dumont  <fdumont@gcc.gnu.org>
    
            Backport from mainline
            2018-07-04  François Dumont  <fdumont@gcc.gnu.org>
    
            PR libstdc++/86272
            * include/debug/string
            (__gnu_debug::basic_string<>::insert<_Ite>(const_iterator, _Ite, _Ite)):
            Use __glibcxx_check_insert_range.
    
    From-SVN: r262455

commit f1b82e131ce77194053b09ddd0bcd01a5c2e1823
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 5 00:16:32 2018 +0000

    Daily bump.
    
    From-SVN: r262425

commit 9fa35300918357b05204ea2c96a56f9adcb43c59
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 4 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r262361

commit 5b51bd4300624fb2d6b17cbc2f4cfb3a946763c7
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Jul 3 10:45:52 2018 +0000

    re PR fortran/82969 (ICE in gfc_class_vptr_get, at fortran/trans-expr.c:211)
    
    2018-07-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82969
            PR fortran/86242
            * trans-array.c (structure_alloc_comps): Do not explicitly copy
            procedure pointer components.
    
    2018-07-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82969
            PR fortran/86242
            * gfortran.dg/proc_ptr_50.f90: New test.
    
    From-SVN: r262339

commit b3db79dce9750128fc727a49de90f24ca7986ee8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 3 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r262323

commit 02837f9cedf6d15ab5982e20a92aa74828dfd6dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 2 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r262291

commit fd0c7d6ae14be9145415c0480e7346da5bdc9bf1
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Sun Jul 1 14:57:03 2018 +0000

    [multiple changes]
    
    2018-06-27  David Edelsohn  <dje.gcc@gmail.com>
    
            2018-06-19  Tony Reix  <tony.reix@atos.com>
                Damien Bergamini  <damien.bergamini@atos.com>
                David Edelsohn  <dje.gcc@gmail.com>
    
            * collect2.c (static_obj): New variable.
            (static_libs): New variable.
            (is_in_list): Uncomment declaration.
            (main): Track AIX libraries linked statically.
            (is_in_list): Uncomment definition.
            (scan_prog_file): Don't add AIX shared libraries initializer
            to constructor list if linking statically.
    
    From-SVN: r262285

commit bf8f56b9721dc92ec1ab90aa3597b9e565e1e1f8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 1 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r262279

commit 69182a2b303f5cbda3006c34b3628c634364b6cd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 30 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r262263

commit 869c3d4f92bdf084784c44b603925e5bf77bd1b1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 29 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r262237

commit 38a04d2bf3adaea1b8824db7646b9455113b527e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 28 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r262200

commit 364cb57c1297afa012c36a79535b677183d80976
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 27 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r262168

commit 780f8066d4c054e280bfc382d356ca764f266fdc
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Tue Jun 26 17:24:54 2018 +0000

    backport: rs6000-c.c (altivec_overloaded_builtins): Change behavior of vec_packsu (vector unsigned long long...
    
    gcc/ChangeLog:
    
    2018-06-26  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backported from mainline
            2018-06-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Change
            behavior of vec_packsu (vector unsigned long long, vector unsigned
            long long) to match behavior of vec_packs with same signature.
    
    gcc/testsuite/ChangeLog:
    
    2018-06-26  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backported from mainline
            2018-06-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/builtins-1.c: Add dg directive to scan
            for vpkudus.
    
    From-SVN: r262160

commit 21b121a877ada47ac2d0cfceea89db5c198258c5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 26 13:33:48 2018 +0200

    re PR c++/86291 (OpenMP incorrect for-loop collapsing with iterators and at least 5 nested loops)
    
            PR c++/86291
            * parser.c (cp_parser_omp_for_loop_init): Change for_block argument
            type from vec<tree, va_gc> * to vec<tree, va_gc> *&.
    
            * testsuite/libgomp.c++/pr86291.C: New test.
    
    From-SVN: r262140

commit 4109c5c8ef894f90d6ea81da8d51ac7b7f18034d
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Jun 26 04:44:49 2018 +0000

    syscall: remove Ustat
    
        glibc 2.28 removes ustat.h and the ustat function entirely, which
        breaks syscall.Ustat.
    
        Updates golang/go#25990
    
        Reviewed-on: https://go-review.googlesource.com/120535
    
    From-SVN: r262128

commit a52fe0d7a6e5308177de4be1c66a201a80cd881d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 26 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r262124

commit 88b72c5c8df354abd6b41631e510087ee95bbf5c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:55:15 2018 +0200

    re PR target/84786 ([miscompilation] vunpcklpd accessing xmm16-22 targeting KNL)
    
            PR target/84786
            * config/i386/sse.md (vshift_count): New mode attr.
            (<shift_insn><mode>3<mask_name>): Use <vshift_count>N instead of vN
            as last operand's constraint for VI2_AVX2_AVX512BW shifts.  Use YvN
            instead of vN as last operand's constraint for VI48_AVX2 shifts.
    
            * gcc.target/i386/avx512f-pr84786-3.c: New test.
    
    From-SVN: r262103

commit 96647616908a701d5f1c0b6637ea48cc8192d93b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:54:30 2018 +0200

    backport: re PR c++/86210 (Missing -Wnonnull warning for function defined in the same TU)
    
            Backported from mainline
            2018-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/86210
            * c-common.c (check_nonnull_arg): Use fold_for_warn.  Adjust obsolete
            comment.
    
            * g++.dg/warn/Wnonnull4.C: New test.
    
    From-SVN: r262102

commit 3015efe258c945e50d370efe6ca7c708c7ef438e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:53:50 2018 +0200

    backport: re PR tree-optimization/86231 (vrp_meet causes wrong-code)
    
            Backported from mainline
            2018-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/86231
            * tree-vrp.c (union_ranges): For (  [  )  ] or (   )[   ] range and
            anti-range don't overwrite *vr0min before using it to compute *vr0max.
    
            * gcc.dg/tree-ssa/vrp119.c: New test.
            * gcc.c-torture/execute/pr86231.c: New test.
    
    From-SVN: r262101

commit 4853ffddf92a3766de28110f38d98e71840edda0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:53:06 2018 +0200

    backport: re PR middle-end/85878 (ICE in convert_mode_scalar, at expr.c:287)
    
            Backported from mainline
            2018-06-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/85878
            * expr.c (expand_assignment): Only call store_expr for halves if the
            mode is the same.
    
            * gfortran.fortran-torture/compile/pr85878.f90: New test.
    
    From-SVN: r262100

commit 3889154853c1b57848af6b0d6f00e340aced696b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:52:28 2018 +0200

    backport: re PR target/85945 (ICE in resolve_subreg_use, at lower-subreg.c:751)
    
            Backported from mainline
            2018-06-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/85945
            * lower-subreg.c (find_decomposable_subregs): Don't decompose float
            subregs of multi-word pseudos unless the float mode has word size.
    
            * gcc.c-torture/compile/pr85945.c: New test.
    
    From-SVN: r262099

commit 5565ecd255f26a1ea126ef716b8c1712ec12825e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:51:44 2018 +0200

    backport: re PR c++/85659 (ICE with inline assembly inside virtual function)
    
            Backported from mainline
            2018-05-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85659
            * cfgexpand.c (expand_asm_stmt): Don't create a temporary if
            the type is addressable.  Don't force op into register if it has
            BLKmode.
    
            * g++.dg/ext/asm14.C: New test.
            * g++.dg/ext/asm15.C: New test.
            * g++.dg/ext/asm16.C: New test.
    
    From-SVN: r262098

commit eed2feb30e5072ce4e7f432fbbbf2f3175bbb21a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:48:47 2018 +0200

    backport: re PR rtl-optimization/85431 (UBSAN: ../../gcc/dse.c:303:15: runtime error: shift exponent 64 is too large for 64-bit type 'long unsigned int')
    
            Backported from mainline
            2018-04-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85431
            * dse.c (record_store): Ignore zero width stores.
    
    From-SVN: r262097

commit e313c255072ee6634d08f2983897d13f5f9b775d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:47:56 2018 +0200

    backport: re PR rtl-optimization/85300 (ICE in exact_int_to_float_conversion_p, at simplify-rtx.c:895)
    
            Backported from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85300
            * combine.c (subst): Handle subst of CONST_SCALAR_INT_P new_rtx also
            into FLOAT and UNSIGNED_FLOAT like ZERO_EXTEND, return a CLOBBER if
            simplify_unary_operation fails.
    
            * gcc.dg/pr85300.c: New test.
    
    From-SVN: r262096

commit 25c965a8d3ba014daabf2a8259adedf984791cd7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:47:12 2018 +0200

    backport: re PR fortran/85313 (gcc/fortran/openmp.c: 2 * confused logic ?)
    
            Backported from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/85313
            * openmp.c (resolve_omp_do): Remove bogus if (j < i) break;.
            (resolve_oacc_nested_loops): Likewise.  Formatting fix.
    
            * gfortran.dg/gomp/pr85313.f90: New test.
    
    From-SVN: r262095

commit f094d95dbc4698dbdfd4b3b0490679f547cf6d41
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:45:48 2018 +0200

    backport: re PR tree-optimization/85257 (wrong code with -O -fno-tree-ccp and reading zeroed vector member)
    
            Backported from mainline
            2018-04-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/85257
            * fold-const.c (native_encode_vector): If not all elts could fit
            and off is -1, return 0 rather than offset.
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Pass
            (offset - offset2) / BITS_PER_UNIT as 4th argument to
            native_encode_expr.  Verify len * BITS_PER_UNIT >= maxsizei.  Don't
            adjust buffer in native_interpret_expr call.
    
            * gcc.dg/pr85257.c: New test.
    
    From-SVN: r262094

commit e1740d0ea4d47a0bb9fa57d5189c81e0d5fd0420
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:44:31 2018 +0200

    backport: re PR debug/85252 (ICE with -g for static zero-length array initialization)
    
            Backported from mainline
            2018-04-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/85252
            * dwarf2out.c (rtl_for_decl_init): For STRING_CST initializer only
            build CONST_STRING if TYPE_MAX_VALUE is non-NULL and is INTEGER_CST.
    
            * gcc.dg/debug/pr85252.c: New test.
    
    From-SVN: r262093

commit 9c963e17286d8db193471b4b20e0de9ce45d5f8e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:43:41 2018 +0200

    backport: re PR rtl-optimization/85167 (shrink-wrap.c:333:15: runtime error with UBSAN)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/85167
            * shrink-wrap.c (move_insn_for_shrink_wrap): Don't set bb_uses and
            bb_defs if *split_p, instead preinitialize it to NULL.
    
            * gcc.dg/pr85167.c: New test.
    
    From-SVN: r262091

commit 1fe39e2895124dbd7dd05375c0dc6962f4be4e1e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:42:51 2018 +0200

    backport: re PR c++/85147 (ICE with invalid variadic template-template parameter)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85147
            * pt.c (fixed_parameter_pack_p_1): Punt if parm is error_mark_node.
    
            * g++.dg/cpp0x/pr85147.C: New test.
    
    From-SVN: r262090

commit 071a4e4ee8812eceb1e79d780d9add7d23175eef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:42:12 2018 +0200

    backport: re PR c++/85140 (ICE with invalid use of alignas)
    
            Backported from mainline
            2018-04-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85140
            * name-lookup.c (handle_namespace_attrs): Return early if attributes
            is error_mark_node.
    
            * g++.dg/cpp0x/gen-attrs-64.C: New test.
    
    From-SVN: r262089

commit 4390058a29b8e04840a51c791a304697b29bb7eb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:41:34 2018 +0200

    backport: re PR c++/84791 (ICE with broken OpenMP reduction clause)
    
            Backported from mainline
            2018-03-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84791
            * semantics.c (finish_omp_reduction_clause): If
            OMP_CLAUSE_REDUCTION_PLACEHOLDER is error_mark_node, return true
            even if processing_template_decl.
    
            * g++.dg/gomp/pr84791.C: New test.
    
    From-SVN: r262088

commit ee6322c8c7f65ca85e1235608ce1ba6bbfd18bd7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:40:52 2018 +0200

    backport: re PR c++/85076 (ICE with invalid template used as lambda argument)
    
            Backported from mainline
            2018-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85076
            * tree.c (cp_build_reference_type): If to_type is error_mark_node,
            return it right away.
    
            * g++.dg/cpp1y/pr85076.C: New test.
    
    From-SVN: r262087

commit 2a775eeb61c4fcee6859087625d0277fadc3baa9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:39:55 2018 +0200

    backport: re PR c++/85068 (ICE with invalid covariant return type hierarchy)
    
            Backported from mainline
            2018-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/85068
            * class.c (update_vtable_entry_for_fn): Don't ICE if base_binfo
            is NULL.  Assert if thunk_binfo is NULL then errorcount is non-zero.
    
            * g++.dg/inherit/covariant22.C: New test.
    
    From-SVN: r262086

commit d9e2eb23b4ae2ecad23f518c714ac877b07e511b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:39:11 2018 +0200

    backport: re PR inline-asm/85022 (internal compiler error: in write_dependence_p, at alias.c:3003)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85022
            * emit-rtl.c (init_emit_regs): Indicate that VOIDmode MEMs don't have
            known size by default.
    
    From-SVN: r262085

commit 16768199701fa509d4bf0c8602bcb3619ad169f9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:38:29 2018 +0200

    backport: re PR inline-asm/85034 (-O1 internal compiler error: in elimination_costs_in_insn, at reload1.c:3633)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85034
            * function.c (match_asm_constraints_1): Don't optimize if input
            doesn't satisfy general_operand predicate for output's mode.
    
            * gcc.target/i386/pr85034.c: New test.
    
    From-SVN: r262084

commit 6ccc2a321896d78dcdbe2876d5726a6644552a3a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:37:40 2018 +0200

    backport: re PR inline-asm/85022 (internal compiler error: in write_dependence_p, at alias.c:3003)
    
            Backported from mainline
            2018-03-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/85022
            * alias.c (write_dependence_p): Don't require for x_canonicalized
            non-VOIDmode if x has VOIDmode.
    
            * c-c++-common/torture/pr85022.c: New test.
    
    From-SVN: r262083

commit 17284edbe2e8cc16d5ffc7e54aa044952bf9c241
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:37:02 2018 +0200

    backport: re PR inline-asm/84941 (internal compiler error: in reg_overlap_mentioned_p, at rtlanal.c:1870 (reg_overlap_mentioned_p()/match_asm_constraints_1()))
    
            Backported from mainline
            2018-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/84941
            * function.c (match_asm_constraints_1): Don't do the optimization
            if input isn't a REG, SUBREG, MEM or constant.
    
            * gcc.dg/pr84941.c: New test.
    
    From-SVN: r262082

commit ced17f2e8080a4254cfeadd84b16e3eb0ce353c8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:36:14 2018 +0200

    backport: re PR debug/84875 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2348 on s390x)
    
            Backported from mainline
            2018-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/84875
            * dce.c (delete_unmarked_insns): Don't remove frame related noop moves
            holding REG_CFA_RESTORE notes, instead turn them into a USE.
    
            * gcc.dg/pr84875.c: New test.
    
    From-SVN: r262081

commit dca528cb0b1d4c2f70e22e174e06325a61ea64a8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:35:29 2018 +0200

    backport: re PR c/84953 (misleading warning from strpbrk(x,""))
    
            Backported from mainline
            2018-03-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/84953
            * builtins.c (fold_builtin_strpbrk): For strpbrk(x, "") use type
            instead of TREE_TYPE (s1) for the return value.
    
            * gcc.dg/pr84953.c: New test.
    
    From-SVN: r262080

commit bb6cf837aa20a456c72425a754853e3f7eed6a52
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:34:55 2018 +0200

    backport: re PR target/84899 (ICE: in final_scan_insn_1, at final.c:3139 (error: could not split insn))
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84899
            * postreload.c (reload_combine_recognize_pattern): Perform
            INTVAL addition in unsigned HOST_WIDE_INT type to avoid UB and
            truncate_int_for_mode the result for the destination's mode.
    
            * gcc.dg/pr84899.c: New test.
    
    From-SVN: r262079

commit a48ad3e4c72d06782ef8b8195aec1926809c5286
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:34:18 2018 +0200

    backport: re PR c++/84874 (internal compiler error: in reshape_init_class, at cp/decl.c:5800)
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84874
            * g++.dg/cpp1z/desig8.C: New test.
    
    From-SVN: r262078

commit 314ae10180b6e3348a11a4eb3392835f41e40521
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:33:40 2018 +0200

    backport: re PR c++/84874 (internal compiler error: in reshape_init_class, at cp/decl.c:5800)
    
            Backported from mainline
            2018-03-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84874
            * decl.c (reshape_init_class): Don't assert d->cur->index == field
            if d->cur->index is a FIELD_DECL, instead set field to d->cur->index.
    
            * g++.dg/cpp1z/desig7.C: New test.
    
    From-SVN: r262077

commit a4b178f3d6569620cb1c0422d4a867de455e9474
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:32:55 2018 +0200

    backport: re PR c++/79085 (ICE with placement new to unaligned location)
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79085
            * calls.c (expand_call): For TREE_ADDRESSABLE rettype ignore alignment
            check and use address of target always.
    
            * g++.dg/opt/pr79085.C: New test.
    
    From-SVN: r262076

commit 65c907acd7c17b26a407097676cd09d80ba59f5a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:32:10 2018 +0200

    backport: re PR c++/84222 ([[deprecated]] class complains about internal class usage)
    
            Backported from mainline
            2018-03-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84222
            * cp-tree.h (cp_warn_deprecated_use): Declare.
            * tree.c (cp_warn_deprecated_use): New function.
            * typeck2.c (build_functional_cast): Use it.
            * decl.c (grokparms): Likewise.
            (grokdeclarator): Likewise.  Temporarily push nested class scope
            around grokparms call for out of class member definitions.
    
            * g++.dg/warn/deprecated.C (T::member3): Change dg-warning to dg-bogus.
            * g++.dg/warn/deprecated-6.C (T::member3): Likewise.
            * g++.dg/warn/deprecated-13.C: New test.
    
    From-SVN: r262075

commit 767b067a3418e05d40591bc6c5366d352f49ea63
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:31:23 2018 +0200

    backport: re PR target/84772 (powerpc-spe: Spurious "is used uninitialized" warning, or possibly incorrect codegen for va_arg(long double))
    
            Backported from mainline
            2018-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84772
            * config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Mark va_arg_tmp
            temporary TREE_ADDRESSABLE before gimplification of BUILT_IN_MEMCPY.
    
            * gcc.dg/pr84772.c: New test.
    
    From-SVN: r262074

commit 26fc9ec3b3bf4d1c63dbc1b27d7c24515f794868
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:30:03 2018 +0200

    backport: re PR c++/84076 (Warning about objects through POD mistakenly claims the object is a pointer)
    
            Backported from mainline
            2018-03-09  Jason Merrill  <jason@redhat.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84076
            * call.c (convert_arg_to_ellipsis): Instead of cp_build_addr_expr
            build ADDR_EXPR with REFERENCE_TYPE.
            (build_over_call): For purposes of check_function_arguments, if
            argarray[j] is ADDR_EXPR with REFERENCE_TYPE created above, use
            its operand rather than the argument itself.
    
            * g++.dg/warn/Wformat-2.C: New test.
    
    From-SVN: r262073

commit dda2750c77f9133fe72d2f166afa14b5a0e93c27
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:29:17 2018 +0200

    backport: re PR c++/84767 (ICE with pointer to VLA)
    
            Backported from mainline
            2018-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84767
            * tree-inline.c (copy_tree_body_r): For INDIRECT_REF of a remapped
            decl, use remap_type if we want to use the type.
    
            * g++.dg/ext/vla18.C: New test.
    
    From-SVN: r262072

commit 764ded997f5a0fb5ba0f65a5d537b63ff140203c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:28:32 2018 +0200

    backport: re PR tree-optimization/84739 (ICE in get_value_for_expr, at tree-ssa-ccp.c:649)
    
            Backported from mainline
            2018-03-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/84739
            * tree-tailcall.c (find_tail_calls): Check call arguments against
            DECL_ARGUMENTS (current_function_decl) rather than
            DECL_ARGUMENTS (func) when checking for tail recursion.
    
            * gcc.dg/pr84739.c: New test.
    
    From-SVN: r262071

commit 6374236845ef64d1b986472e5adf41341ae6df92
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:27:47 2018 +0200

    backport: re PR target/84700 (ICE on 32-bit BE powerpc targets w/ -misel -O1)
    
            Backported from mainline
            2018-03-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/84700
            * combine.c (combine_simplify_rtx): Don't try to simplify if
            if_then_else_cond returned non-NULL, but either true_rtx or false_rtx
            are equal to x.
    
            * gcc.target/powerpc/pr84700.c: New test.
    
    From-SVN: r262070

commit e068b46f13d990d92791284b210ad6fd4fba8891
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:26:53 2018 +0200

    backport: re PR c++/84662 (internal compiler error: tree check: expected class 'type', have 'exceptional' (error_mark) in is_bitfield_expr_with_lowered_type, at cp/typeck.c:1944)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84662
            * pt.c (tsubst_copy_and_build) <case TEMPLATE_ID_EXPR>: Use
            RETURN instead of return.
            <case POINTER_PLUS_EXPR>: Likewise.
            <case CONVERT_EXPR>: If op0 is error_mark_node, just return
            it instead of wrapping it into CONVERT_EXPR.
    
            * g++.dg/cpp1y/pr84662.C: New test.
    
    From-SVN: r262069

commit e77692434eb8933bfd08a916454bca062f65f102
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:25:41 2018 +0200

    backport: re PR inline-asm/84625 (ICE with empty constraint and vector constant)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR inline-asm/84625
            * config/i386/i386.c (ix86_print_operand): Use conditional
            output_operand_lossage instead of gcc_assert if CONST_VECTOR is not
            zero vector.
    
            * gcc.target/i386/pr84625.c: New test.
    
    From-SVN: r262068

commit e4807a17c846b5b50802068bfd7cee9328fabffb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:24:42 2018 +0200

    backport: re PR sanitizer/70875 (ICE in get_ubsan_type_info_for_type with -fsanitize=undefined)
    
            Backported from mainline
            2018-03-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/70875
            * gcc.dg/ubsan/bounds-3.c: Add -fno-sanitize-recover=bounds to
            dg-options and dg-shouldfail "ubsan" directive.
    
    From-SVN: r262067

commit 6ce5c3312231b4d655efc26364515432e3a2c947
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:24:06 2018 +0200

    backport: re PR c++/84558 (ICE with invalid constexpr constructor)
    
            Backported from mainline
            2018-02-26  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84558
            * constexpr.c (cxx_eval_vec_init_1): For reuse, treat NULL eltinit like
            a valid constant initializer.  Formatting fixes.
    
            * g++.dg/cpp1y/pr84558.C: New test.
    
    From-SVN: r262066

commit 1e2097559d02aa4523d878e60b25b78ba99274c2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:23:21 2018 +0200

    backport: re PR c++/84448 (ICE with broken condition in parallel for loop)
    
            Backported from mainline
            2018-02-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84448
            * parser.c (cp_parser_binary_expression): For no_toplevel_fold_p, if
            either operand is error_mark_node, set current.lhs to that instead of
            creating a binary op with error_mark_node operands.
    
            * g++.dg/gomp/pr84448.C: New test.
    
    From-SVN: r262065

commit b8371008b80b548cf61be478498318ba0c1f96b8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:22:32 2018 +0200

    backport: re PR ipa/84425 (Hang in ipa-inline.c starting with r250048)
    
            Backported from mainline
            2018-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/84425
            * ipa-inline.c (inline_small_functions): Fix a typo.
    
            * gcc.c-torture/compile/pr84425.c: New test.
    
    From-SVN: r262064

commit 0c91f28eb08a571878b9390f17d0bd98765eb559
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:21:47 2018 +0200

    backport: re PR c/82210 (Having _Alignas in a struct with VLAs causes writing to one array to overwrite another)
    
            Backported from mainline
            2018-02-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/82210
            * stor-layout.c (place_field): For variable length fields, adjust
            offset_align afterwards not just based on the field's alignment,
            but also on the size.
    
            * gcc.c-torture/execute/pr82210.c: New test.
    
    From-SVN: r262063

commit 67475dbe5bf53be75b150d85a2e9d7001fe51c2b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:21:04 2018 +0200

    backport: re PR c++/84341 (ICE with #pragma omp atomic)
    
            Backported from mainline
            2018-02-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/84341
            * parser.c (cp_parser_binary_expression): Use build_min instead of
            build2_loc to build the no_toplevel_fold_p toplevel binary expression.
    
            * c-c++-common/gomp/pr84341.c: New test.
    
    From-SVN: r262062

commit c1d9be4a7ad307f387be28f2648c7c8c61d96840
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:20:18 2018 +0200

    backport: re PR sanitizer/83987 (ICE with OpenMP, sanitizer and virtual bases)
    
            Backported from mainline
            2018-02-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83987
            * omp-low.c (maybe_remove_omp_member_access_dummy_vars,
            remove_member_access_dummy_vars): New functions.
            (lower_omp_for, lower_omp_taskreg, lower_omp_target,
            lower_omp_1, execute_lower_omp): Use them.
    
            * tree.c (cp_free_lang_data): Revert 2018-01-23 change.
    
            * g++.dg/ubsan/pr83987-2.C: New test.
    
    From-SVN: r262061

commit 089adb5c12f03c4138aa482ba6f3db9cb0da235e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:19:13 2018 +0200

    backport: re PR target/83986 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2348)
    
            Backported from mainline
            2018-01-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/83986
            * sched-deps.c (sched_analyze_insn): For frame related insns, add anti
            dependence against last_pending_memory_flush in addition to
            pending_jump_insns.
    
            * gcc.dg/pr83986.c: New test.
    
    From-SVN: r262059

commit 0ccd607935a1d910aa54562444f274bcc178535d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:17:50 2018 +0200

    backport: re PR libgomp/84096 (Wrong prototype for omp_init_nest_lock_with_hint() in "omp.h.in")
    
            Backported from mainline
            2018-01-29  Christoph Spiel  <cspiel@freenet.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/84096
            * omp.h.in (omp_init_nest_lock_with_hint): Use omp_nest_lock_t
            instead of omp_lock_t.
    
    From-SVN: r262058

commit 48eb45f70f643edb15a4f34daddd364a2301dcca
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:14:30 2018 +0200

    backport: re PR middle-end/84040 (compilation time of gcc.c-torture/compile/limits-blockid.c is 50x slower)
    
            Backported from mainline
            2018-01-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/84040
            * sched-deps.c (sched_macro_fuse_insns): Return immediately if
            !insn_set.
    
    From-SVN: r262057

commit 1908522d090249aba71bc83caf2801b636dd8dbf
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:14:01 2018 +0200

    backport: re PR sanitizer/83987 (ICE with OpenMP, sanitizer and virtual bases)
    
            Backported from mainline
            2018-01-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83987
            * tree.c (cp_free_lang_data): Change DECL_VALUE_EXPR of
            DECL_OMP_PRIVATIZED_MEMBER vars to error_mark_node.
    
            * g++.dg/ubsan/pr83987.C: New test.
    
    From-SVN: r262056

commit 043f9c564cae173b8ba85f7f55a3b1c4a152e2c7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:13:04 2018 +0200

    backport: re PR target/83930 (ICE: RTL check: expected code 'const_int', have 'mem' in simplify_binary_operation_1, at simplify-rtx.c:3302)
    
            Backported from mainline
            2018-01-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/83930
            * simplify-rtx.c (simplify_binary_operation_1) <case UMOD>: Use
            UINTVAL (trueop1) instead of INTVAL (op1).
    
            * gcc.dg/pr83930.c: New test.
    
    From-SVN: r262055

commit 4f5e1f100a125886ddea40e7bc6ca10d18b04e99
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:12:28 2018 +0200

    backport: re PR c++/83824 (ICE on invalid C++ code with alignas: in chainon, at tree.c:3037)
    
            Backported from mainline
            2018-01-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83824
            * parser.c (attr_chainon): New function.
            (cp_parser_label_for_labeled_statement, cp_parser_decl_specifier_seq,
            cp_parser_namespace_definition, cp_parser_init_declarator,
            cp_parser_type_specifier_seq, cp_parser_parameter_declaration,
            cp_parser_gnu_attributes_opt): Use it.
            (cp_parser_member_declaration, cp_parser_objc_class_ivars,
            cp_parser_objc_struct_declaration): Likewise.  Don't reset
            prefix_attributes if attributes is error_mark_node.
    
            * g++.dg/cpp0x/pr83824.C: New test.
    
    From-SVN: r262054

commit 74c51b2a0cc25060fd941ce15fb3bf3a85facbbe
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:11:36 2018 +0200

    backport: re PR preprocessor/83722 (the ICE dumper doesn't comment-out some error messages)
    
            Backported from mainline
            2018-01-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR preprocessor/83722
            * gcc.c (try_generate_repro): Pass
            &temp_stderr_files[RETRY_ICE_ATTEMPTS - 1] rather than
            &temp_stdout_files[RETRY_ICE_ATTEMPTS - 1] as last argument to
            do_report_bug.
    
    From-SVN: r262053

commit 799b606a5a11512a593fd2f04ce0840ef0f510fc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:11:05 2018 +0200

    backport: re PR tree-optimization/83605 (ICE: verify_gimple failed (error: dead STMT in EH table))
    
            Backported from mainline
            2018-01-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83605
            * gimple-ssa-strength-reduction.c: Include tree-eh.h.
            (find_candidates_dom_walker::before_dom_children): Ignore stmts that
            can throw.
    
            * gcc.dg/pr83605.c: New test.
    
    From-SVN: r262052

commit 6ab4012d011f2b783dda63385dd2990a0ffa066c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:10:18 2018 +0200

    backport: re PR c++/83553 (compiler removes body of the for-loop, although there is a case label inside)
    
            Backported from mainline
            2017-12-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83553
            * fold-const.c (struct contains_label_data): New type.
            (contains_label_1): Return non-NULL even for CASE_LABEL_EXPR, unless
            inside of a SWITCH_BODY seen during the walk.
            (contains_label_p): Use walk_tree instead of
            walk_tree_without_duplicates, prepare data for contains_label_1 and
            provide own pset.
    
            * c-c++-common/torture/pr83553.c: New test.
    
    From-SVN: r262051

commit dd9f67425f27fe1db8e6a154dc4494bb67208301
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:08:02 2018 +0200

    backport: re PR debug/83550 (Bad location of DW_TAG_structure_type with forward declaration since r224161)
    
            Backported from mainline
            2017-12-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/83550
            * c-decl.c (finish_struct): Set DECL_SOURCE_LOCATION on
            TYPE_STUB_DECL and call rest_of_type_compilation before processing
            incomplete vars rather than after it.
    
            * c-c++-common/dwarf2/pr83550.c: New test.
    
    From-SVN: r262050

commit 87525ef7cdb6e6ab131b2034aa6b850fc53bf4bb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:05:01 2018 +0200

    backport: re PR rtl-optimization/80747 (gcc.dg/tree-ssa/tailrecursion-4.c fails with ICE when compiled with options "-fprofile-use -freorder-blocks-and-partition")
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80747
            PR rtl-optimization/83512
            * cfgrtl.c (force_nonfallthru_and_redirect): When splitting
            succ edge from ENTRY, copy partition from e->dest to the newly
            created bb.
            * bb-reorder.c (reorder_basic_blocks_simple): If last_tail is
            ENTRY, use BB_PARTITION of its successor block as current_partition.
            Don't copy partition when splitting succ edge from ENTRY.
    
            * gcc.dg/pr80747.c: New test.
            * gcc.dg/pr83512.c: New test.
    
    From-SVN: r262049

commit 41a10ba0de32db0c06276c1307464e06887b7b98
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:04:14 2018 +0200

    backport: re PR tree-optimization/83523 (ICE: verify_gimple failed (error: statement marked for throw, but doesn't))
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83523
            * tree-ssa-math-opts.c (is_widening_mult_p): Return false if
            for INTEGER_TYPE TYPE_OVERFLOW_TRAPS.
            (convert_mult_to_fma): Likewise.
    
            * g++.dg/tree-ssa/pr83523.C: New test.
    
    From-SVN: r262048

commit e0b181ebb24d0b413a44c4817a4e1f7398209fd9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:03:26 2018 +0200

    backport: re PR tree-optimization/83521 (ICE: verify_gimple failed (error: invalid operand in unary operation))
    
            Backported from mainline
            2017-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/83521
            * tree-ssa-phiopt.c (factor_out_conditional_conversion): Use
            gimple_build_assign without code on result of
            fold_build1 (VIEW_CONVERT_EXPR, ...), as it might not create
            a VIEW_CONVERT_EXPR.
    
            * gcc.dg/pr83521.c: New test.
    
    From-SVN: r262047

commit deea1e076b302f3134fe3c4f14f1439344b01d2c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:02:47 2018 +0200

    backport: re PR ipa/82801 (Internal compiler error with Eigen and __attribute__((always_inline, flatten)))
    
            Backported from mainline
            2017-12-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/82801
            PR ipa/83346
            * ipa-inline.c (flatten_remove_node_hook): New function.
            (ipa_inline): Keep only nodes with flatten attribute at the end of
            the array in the order from ipa_reverse_postorder, only walk that
            portion of array for flattening, if there is more than one such
            node, temporarily register a removal hook and ignore removed nodes.
    
            * g++.dg/ipa/pr82801.C: New test.
    
    From-SVN: r262046

commit c3598e1dc10f7b224e4154833d62c7427831dd1a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 19:01:10 2018 +0200

    backport: re PR c++/79650 (ICE on invalid c++ code with label arithmetic in convert_nontype_argument (pt.c:6515))
    
            Backported from mainline
            2017-12-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79650
            * pt.c (convert_nontype_argument): Diagnose
            reduced_constant_expression_p expressions that aren't INTEGER_CST.
    
            * g++.dg/template/pr79650.C: New test.
    
    From-SVN: r262045

commit 9fe5c0c86d13407e705be46ed70a239a62a91180
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:59:37 2018 +0200

    backport: re PR target/81906 (Calls to rint() wrongly optimized away starting in g++ 6)
    
            Backported from mainline
            2017-12-08  Joseph Myers  <joseph@codesourcery.com>
                        Alexander Monakov  <amonakov@ispras.ru>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81906
            * config/i386/i386.c (ix86_expand_rint): Handle flag_rounding_math.
    
            * gcc.target/i386/pr81906.c: New test.
    
    From-SVN: r262044

commit 25d508d1cae91b519ae0d12cd6e77e9805ad683f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:58:35 2018 +0200

    backport: re PR c++/80259 (ICE deleting friend function)
    
            Backported from mainline
            2017-12-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80259
            * decl2.c (grokfield): Diagnose = delete redefinition of a friend.
    
            * g++.dg/cpp0x/pr80259.C: New test.
    
    From-SVN: r262043

commit 6028f46a2fdfe5116aadb5fb8f68e56b9c1b6fbc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:57:59 2018 +0200

    backport: re PR sanitizer/81212 (-Wreturn-type is disabled when used together with -fsanitize=return)
    
            Backported from mainline
            2017-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81212
            * tree-cfg.c (pass_warn_function_return::execute): Handle
            __builtin_ubsan_handle_missing_return like __builtin_unreachable
            with BUILTINS_LOCATION.
    
            * g++.dg/ubsan/pr81212.C: New test.
    
    From-SVN: r262042

commit 9997947e483e03fd35eb9f9f5c0a737b43408ede
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:57:13 2018 +0200

    backport: re PR target/78643 (ICE in convert_move, at expr.c:230)
    
            Backported from mainline
            2017-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78643
            PR target/80583
            * expr.c (get_inner_reference): If DECL_MODE of a non-bitfield
            is BLKmode for vector field with vector raw mode, use TYPE_MODE
            instead of DECL_MODE.
    
            * gcc.target/i386/pr80583.c: New test.
    
    From-SVN: r262041

commit edd6f1fbbb68417a4d551b2baeeddfed872dbf4c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:56:33 2018 +0200

    backport: re PR target/80819 (Useless store to the stack  in _mm_set_epi64x with SSE4 -mno-avx)
    
            Backported from mainline
            2017-11-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/80819
            * config/i386/sse.md (vec_concatv2di): Remove * from (=Yr,0,*rm)
            alternative.
    
            * gcc.target/i386/pr80819-1.c: New test.
            * gcc.target/i386/pr80819-2.c: New test.
    
    From-SVN: r262040

commit b9410019c355ac9e86bb4d09125bdba89a8329e0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:55:44 2018 +0200

    backport: re PR fortran/81304 (Bogus warning with -Wsurprising and -fopenmp: Type specified for intrinsic function 'min' / 'max')
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/81304
            * trans-openmp.c (gfc_trans_omp_array_reduction_or_udr): Set
            attr.implicit_type in intrinsic_sym to avoid undesirable warning.
    
            * testsuite/libgomp.fortran/pr81304.f90: New test.
    
    From-SVN: r262039

commit c50b5e2484a347e493e7f59731e16a3a15e85474
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:54:49 2018 +0200

    backport: re PR sanitizer/83014 (ICE in pretty-print with -fsanitize=bounds)
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/83014
            * ubsan.c (ubsan_type_descriptor): Use pp_unsigned_wide_integer
            instead of pp_printf with HOST_WIDE_INT_PRINT_DEC.  Avoid calling
            tree_to_uhwi twice.
    
            * gcc.dg/ubsan/pr83014.c: New test.
    
    From-SVN: r262038

commit f1f64d7d51854b124141f9bf14e090aef6f3b8c1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:53:57 2018 +0200

    backport: tree-object-size.c (pass_through_call): Do not handle BUILT_IN_STPNCPY_CHK which is not a pass through call.
    
            Backported from mainline
            2017-11-24  Jakub Jelinek  <jakub@redhat.com>
    
            * tree-object-size.c (pass_through_call): Do not handle
            BUILT_IN_STPNCPY_CHK which is not a pass through call.
    
            * gcc.dg/builtin-object-size-18.c: New test.
    
    From-SVN: r262037

commit 76f00d8bd4ef2f9c1a7e731331fc1d5ee1c0c3c2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:53:11 2018 +0200

    backport: parser.c (cp_parser_omp_declare): Change return type to bool from void, return true for declare simd.
    
            Backported from mainline
            2017-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            * parser.c (cp_parser_omp_declare): Change return type to bool from
            void, return true for declare simd.
            (cp_parser_pragma): Return cp_parser_omp_declare returned value
            rather than always false.
    
    From-SVN: r262036

commit 0778300044e7934b06843daea034e57a0294fbab
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:52:31 2018 +0200

    backport: re PR fortran/81841 (THREADPRIVATE (OpenMP) wrongly rejected in BLOCK DATA)
    
            Backported from mainline
            2017-11-23  Dirk Broemmel  <d.broemmel@fz-juelich.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/81841
            * parse.c (parse_spec): Allow ST_OMP_THREADPRIVATE inside of
            BLOCK DATA.
    
            * libgomp.fortran/pr81841.f90: New test.
    
    From-SVN: r262035

commit 3dc92d5973cadab246920936a49dd2f4a30343a8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:51:38 2018 +0200

    backport: re PR middle-end/82253 (ICE in convert_move, at expr.c:604)
    
            Backported from mainline
            2017-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/82253
            * expr.c (expand_assignment): For CONCAT to_rtx, complex type from and
            bitpos/bitsize covering the whole destination, use store_expr only if
            the complex mode is the same.  Otherwise, use expand_normal and if
            it returns CONCAT, subreg each part separately instead of trying to
            subreg the whole result.
    
            * gfortran.dg/pr82253.f90: New test.
    
    From-SVN: r262034

commit 51ec4fe27e116c7f80b45386cdc6cee50d949893
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:50:58 2018 +0200

    backport: re PR target/82880 (gcc --help=target --help=optimizers hangs on mips)
    
            Backported from mainline
            2017-11-21  James Cowgill  <James.Cowgill@imgtec.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82880
            * config/mips/frame-header-opt.c (mips_register_frame_header_opt):
            Remove static keyword from f variable.
    
            * gcc.dg/opts-8.c: New test.
    
    From-SVN: r262033

commit cde1a31d5437de9e8dcf38feb81573f3cf7c2b39
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:48:43 2018 +0200

    backport: re PR c++/83059 (ICE on invalid C++ code: in tree_to_uhwi, at tree.c:6633)
    
            Backported from mainline
            2017-11-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/83059
            * c-common.c (get_atomic_generic_size): Use TREE_INT_CST_LOW
            instead of tree_to_uhwi, formatting fix.
    
            * c-c++-common/pr83059.c: New test.
    
    From-SVN: r262032

commit 4f408a9a24eeaec92bf6852b17d33b0b7a8db6fe
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:47:39 2018 +0200

    backport: re PR c++/82781 (Vector extension operators return wrong result in constexpr)
    
            Backported from mainline
            2017-11-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82781
            * constexpr.c (cxx_eval_vector_conditional_expression): New function.
            (cxx_eval_constant_expression) <case VEC_COND_EXPR>: Use it instead
            of cxx_eval_conditional_expression.
    
            * g++.dg/ext/constexpr-pr82781.C: New test.
    
    From-SVN: r262031

commit 55cafa8ea10c3379bc03642eb82b81e5a0fbf059
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:46:54 2018 +0200

    backport: re PR c++/82159 (ICE: in assign_temp, at function.c:961)
    
            Backported from mainline
            2017-10-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82159
            * expr.c (store_field): Don't optimize away bitsize == 0 store
            from CALL_EXPR with addressable return type.
    
            * g++.dg/opt/pr82159-2.C: New test.
    
    From-SVN: r262030

commit 2eec8c581c7146616cc23af98ba941e33c75be52
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:45:10 2018 +0200

    backport: re PR rtl-optimization/82192 (gcc produces incorrect code with -O2 and bit-field)
    
            Backported from mainline
            2017-09-15  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/82192
            * combine.c (make_extraction): Don't look through non-paradoxical
            SUBREGs or TRUNCATE if pos + len is or might be bigger than
            inner's mode.
    
            * gcc.c-torture/execute/pr82192.c: New test.
    
    From-SVN: r262028

commit 95e03a045bc9aa71b6ff5616fab4d6563c5a624f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:43:59 2018 +0200

    backport: re PR c/82340 (volatile ignored in compound literal)
    
            Backported from mainline
            2017-09-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/82340
            * c-decl.c (build_compound_literal): Use c_apply_type_quals_to_decl
            instead of trying to set just TREE_READONLY manually.
    
            * gcc.dg/tree-ssa/pr82340.c: New test.
    
    From-SVN: r262027

commit 3acfb0be47f1ee8d881d5ce5adf835b032ad53d8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 25 18:43:16 2018 +0200

    backport: re PR c++/82159 (ICE: in assign_temp, at function.c:961)
    
            Backported from mainline
            2017-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/82159
            * gimplify.c (gimplify_modify_expr): Don't optimize away zero sized
            lhs from calls if the lhs has addressable type.
    
            * g++.dg/opt/pr82159.C: New test.
    
    From-SVN: r262026

commit d94df909745d849f1cdacb19babd7d6cf73b9b55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 25 00:16:37 2018 +0000

    Daily bump.
    
    From-SVN: r261999

commit 7992433335269029c7f2dabd08bf9f4f33f995b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 24 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r261989

commit ea512211f873c42bd120b98b79f04b9612c9314b
Author: Richard Sandiford <richard.sandiford@linaro.org>
Date:   Sat Jun 23 16:18:36 2018 +0000

    Fix phi backedge detection in backprop (PR85989)
    
    Backport trunk r261064.
    
    2018-06-23  Richard Sandiford  <richard.sandiford@linaro.org>
    
    gcc/
            PR tree-optimization/85989
            * gimple-ssa-backprop.c (backprop::m_visited_phis): New member
            variable.
            (backprop::backprop): Initialize it.
            (backprop::~backprop): Free it.
            (backprop::intersect_uses): Check it when deciding whether this
            is a backedge reference.
            (backprop::process_block): Add each phi to m_visited_phis
            after visiting it, then clear it at the end.
    
    gcc/testsuite/
            PR tree-optimization/85989
            * gcc.dg/torture/pr85989.c: New test.
    
    From-SVN: r261985

commit 19cd7cb6224a5563adb72ceeb6decba5e7b84d1e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 23 00:16:42 2018 +0000

    Daily bump.
    
    From-SVN: r261976

commit 0954804dc17b9900fed9e65b996b651e4c39aa2d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 22 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r261874

commit fcaba42fe9139375327a1e74884ff6dbbb4a26c7
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 21 11:18:50 2018 +0000

    backport: [multiple changes]
    
    2018-06-21  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82108
            * tree-vect-stmts.c (vectorizable_load): Fix pointer adjustment
            for gap in the non-permutation SLP case.
    
            * gcc.dg/vect/pr82108.c: New testcase.
    
            2017-06-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81410
            * tree-vect-stmts.c (vectorizable_load): Properly adjust for
            the gap in the ! slp_perm SLP case after each group.
    
            * gcc.dg/vect/pr81410.c: New testcase.
    
            2017-03-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79920
            * tree-vect-slp.c (vect_create_mask_and_perm): Remove and inline
            with ncopies == 1 to ...
            (vect_transform_slp_perm_load): ... here.  Properly compute
            all element loads by iterating VF times over the group.  Do
            not handle ncopies (computed in a broken way) in
            vect_create_mask_and_perm.
    
            * gcc.dg/vect/pr79920.c: New testcase.
    
    From-SVN: r261842

commit 182a64f333cf8ad8c2515f6a44bc85876f67c430
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 21 09:50:36 2018 +0000

    backport: [multiple changes]
    
    2018-06-21  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-02-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/84607
            * genmatch.c (capture_info::walk_match): Do not mark
            captured expressions without operands as expr_p given
            they act more like predicates and should be subject to
            "lost tail" side-effect preserving.
    
            * gcc.dg/pr84607.c: New testcase.
    
            2018-05-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/85588
            * fold-const.c (negate_expr_p): Restrict negation of operand
            zero of a division to when we know that can happen without
            overflow.
            (fold_negate_expr_1): Likewise.
    
            * gcc.dg/torture/pr85588.c: New testcase.
            * gcc.dg/torture/pr57656.c: Use dg-additional-options.
    
    From-SVN: r261839

commit 7bc1b51043443440180870422f708dc43aa9c4a9
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 21 07:24:06 2018 +0000

    backport: [multiple changes]
    
    2018-06-21  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-08-21  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81884
            * tree-ssa-alias.c (stmt_kills_ref_p): Handle array accesses
            at struct end conservatively when comparing common bases.
    
            * g++.dg/torture/pr81884.C: New testcase.
    
            2017-05-04  Richard Biener  <rguenther@suse.de>
    
            * tree.c (array_at_struct_end_p): Handle arrays at struct
            end with flexarrays more conservatively.  Refactor and treat
            arrays of arrays or aggregates more strict.  Fix
            VIEW_CONVERT_EXPR handling.
    
            2018-04-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/85244
            * tree-dfa.c (get_ref_base_and_extent): Reset seen_variable_array_ref
            after seeing a component reference with an adjacent field.  Treat
            refs to arrays at struct end of external decls similar to
            refs to unconstrained commons.
    
            * gcc.dg/torture/pr85244-1.c: New testcase.
            * gcc.dg/torture/pr85244-2.c: Likewise.
    
            * gcc.dg/tree-prof/pr66295.c: Remove unsupported dg-error scanning.
    
    From-SVN: r261833

commit e3ba57c42614b2a868ff135d8183a6adf7345baf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 21 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r261827

commit d558f39716dab700855a5b757812ed80357f9999
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 20 13:16:58 2018 +0000

    tree-ssa-alias.c (stmt_kills_ref_p): Revert accidentially committed change.
    
    2018-06-20  Richard Biener  <rguenther@suse.de>
    
            * tree-ssa-alias.c (stmt_kills_ref_p): Revert accidentially
            committed change.
    
    From-SVN: r261801

commit bdde1e962e666387715a675df1e77cbbec94c357
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 20 13:10:21 2018 +0000

    backport: [multiple changes]
    
    2018-06-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-03-16  Richard Biener  <rguenther@suse.de>
    
            PR c/84873
            * c-gimplify.c (c_gimplify_expr): Revert previous change.  Instead
            unshare the possibly folded expression.
    
            2018-03-15  Richard Biener  <rguenther@suse.de>
    
            PR c/84873
            * c-gimplify.c (c_gimplify_expr): Do not fold expressions.
    
            * c-c++-common/pr84873.c: New testcase.
    
            2018-05-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/85597
            * tree-vect-stmts.c (vectorizable_operation): For ternary SLP
            do not use split vect_get_vec_defs call but call vect_get_slp_defs
            directly.
    
            * gcc.dg/vect/pr85597.c: New testcase.
    
    From-SVN: r261800

commit 031af5a7effa33eac7d5d5f0331dd3e8026446d3
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jun 20 11:09:28 2018 +0000

    Backport PRs 82264, 82285, 82402, 82697, 82765, 83623, 83713
    
    2018-06-20  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2018-01-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/83623
            * expmed.c (expand_shift_1): For 2-byte rotates by BITS_PER_UNIT,
            check for bswap in mode rather than HImode and use that in expand_unop
            too.
    
            * gcc.dg/pr83623.c: New test.
    
            2017-09-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-09-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82264
            * tree-ssa-sccvn.c (vn_phi_eq): Use safe_dyn_cast to check
            for GIMPLE_CONDs.
            (vn_phi_lookup): Likewise.
            (vn_phi_insert): Likewise.
            * is-a.h (safe_dyn_cast): New.
    
            * gcc.dg/torture/pr82264.c: New testcase.
    
            2017-09-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82285
            * tree-vect-patterns.c (vect_recog_bool_pattern): Also handle
            enumeral types.
    
            * gcc.dg/torture/pr82285.c: New testcase.
    
            2017-11-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82402
            * tree-vect-loop-manip.c (create_lcssa_for_virtual_phi): Properly
            set SSA_NAME_OCCURS_IN_ABNORMAL_PHI.
    
            * gcc.dg/torture/pr82402.c: New testcase.
    
            2017-10-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82697
            * tree-ssa-phiopt.c (cond_store_replacement): Use alias-set
            zero for conditional load and unconditional store.
    
            * gcc.dg/torture/pr82697.c: New testcase.
    
            2017-11-02  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/82765
            * varasm.c (decode_addr_const): Make offset HOST_WIDE_INT.
            Truncate ARRAY_REF index and element size.
    
            * gcc.dg/pr82765.c: New testcase.
    
            2018-01-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/83713
            * convert.c (do_narrow): Properly guard TYPE_OVERFLOW_WRAPS checks.
    
            * g++.dg/torture/pr83713.C: New testcase.
    
    From-SVN: r261799

commit 837e3b477ee87d5fde4d8751b1adeae088c0c11d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 20 00:16:21 2018 +0000

    Daily bump.
    
    From-SVN: r261776

commit 5ecc2aab1415ab4cb98ca0d901c8ee276043bd7a
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Jun 19 21:08:46 2018 +0000

    xtensa: fix PR target/65416
    
    The issue is caused by reordering of stack pointer update after stack
    space allocation with instructions that write to the allocated stack
    space. In windowed ABI register spill area for the previous call frame
    is located just below the stack pointer and may be reloaded back into
    the register file on movsp.
    Implement allocate_stack pattern for windowed ABI configuration and
    insert an instruction that prevents reordering of frame memory access
    and stack pointer update.
    
    gcc/
    2018-06-19  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-06-19  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.md (UNSPEC_FRAME_BLOCKAGE): New unspec
            constant.
            (allocate_stack, frame_blockage, *frame_blockage): New patterns.
    
    From-SVN: r261765

commit 6b148c7af959af87df2520fa818f8fc110cbd5c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 19 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r261721

commit 45aa998a544e5887618e5cbd7d23326e4383c554
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 18 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r261692

commit 2377195786c223b39c28bcca4ef6e8c55af84c55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 17 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r261683

commit dbaf757063249cebf612283e18c84453fc3ab24c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 16 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r261671

commit ee6c0081c03330045b3d4cde8421cd1d3a459609
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jun 15 10:51:28 2018 +0200

    Partial backport r256656
    
    2018-06-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-10  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * lex.c (search_line_fast): Remove illegal coercion of an
            unaligned pointer value to vector pointer type and replace with
            use of __builtin_vec_vsx_ld () built-in function, which operates
            on unaligned pointer values.
    
    From-SVN: r261621

commit 58c27d9e2d358f1bbb1981164f4b2d2aa2e62dce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 15 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r261614

commit e497b04e5434afeba653617b58b61221eb4700e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 14 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r261577

commit a62caa7cdb9b4baa62385b4144dd79e97a0c6f23
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 13 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r261532

commit 3e8642265ee87af1fac43c57e4131adad8edd6a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 12 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r261469

commit 846bc4e29a8ea4b268de07116fa7894b2c5ab92e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 11 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r261390

commit cb75e023aa3706a4a39b4eea4c493940043cdef2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 10 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r261378

commit 7369eb77a2e99f4c78126b6651c82e3e261a4a61
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jun 9 18:35:58 2018 +0000

    re PR fortran/85138 (ICE with generic function)
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85138
            PR fortran/85996
            PR fortran/86051
            * decl.c (gfc_match_char_spec): Use private namespace in attempt to
            reduce a charlen to a constant.
    
    2018-06-09  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85138
            PR fortran/85996
            PR fortran/86051
            * gfortran.dg/pr85138_1.f90: New test.
            * gfortran.dg/pr85138_2.f90: Ditto.
            * gfortran.dg/pr85996.f90: Ditto.
    
    From-SVN: r261372

commit 3f3cd21290d0857d00d1cbb615371f676804f125
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 9 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r261354

commit a7c3da4d4b7bc8d3562f867535552d515a1959de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 8 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r261300

commit 03c83acc7b1b53dd42a2b85e0b333f105d5b514a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Jun 7 09:03:35 2018 -0500

    backport: re PR target/63177 (Powerpc no-vfa-vect-depend-2.c and no-vfa-vect-depend-3.c failures)
    
            Backport from mainline
            2018-06-06  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/63177
            * /config/rs6000/rs6000.h (ASM_CPU_SPEC): Add support for -mpower9.
            Don't handle -mcpu=power8 if -mpower9-vector is also used.
    
    From-SVN: r261277

commit 9c9afc6313281c71cb034e83bb1524889e3df849
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 7 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r261256

commit 6bf90c2cdc5427b3a3e8ea97db5a87f22116bcad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 6 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r261223

commit 34228d731df404e3c19b30e7cd0336b2cf7fe49e
Author: Andreas Krebbel <krebbel@linux.ibm.com>
Date:   Tue Jun 5 14:08:59 2018 +0000

    S/390: Fix __builtin_tbeginc signature
    
    The builtin was accidentally defined to have an integer return value.
    Fixed with the attached patch.
    
    gcc/ChangeLog:
    
    2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * config/s390/s390-builtin-types.def: Add void function type.
            * config/s390/s390-builtins.def: Use the function type for the
            tbeginc builtin.
    
    gcc/testsuite/ChangeLog:
    
    2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            Backport from mainline
            2018-06-05  Andreas Krebbel  <krebbel@linux.ibm.com>
    
            * gcc.target/s390/htm-builtins-compile-4.c: New test.
    
    From-SVN: r261203

commit cfdaa5972ad97d88f9766042c3bde1791a275aa5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 5 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r261177

commit db2b7e18267f6f72f411e12fb698ed7386174496
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 4 00:16:27 2018 +0000

    Daily bump.
    
    From-SVN: r261133

commit b79e89b286666045f92a79b002e36f4ec446297f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 3 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r261117

commit 93a0049f748e997db75d4a4f45bc40c021853bab
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 2 09:58:46 2018 +0000

    backport: trans.c (Call_to_gnu): If this is a function call and there is no target...
    
            Backport from mainline
            2018-05-31  Eric Botcazou  <ebotcazou@adacore.com>
    
            * gcc-interface/trans.c (Call_to_gnu): If this is a function call and
            there is no target, also create a temporary for the return value for
            an allocator if the type is an unconstrained record type with default
            discriminant.
    
    From-SVN: r261105

commit cc92cf73b71d7f93fcc8a5a0dcf418602325e147
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 2 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r261093

commit f6f3beab9d27d8c066724496cc2a9fb91f2229aa
Author: Bill Schmidt <wschmidt@linux.ibm.com>
Date:   Fri Jun 1 13:00:57 2018 +0000

    backport: [multiple changes]
    
    2018-06-01  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            Backport from mainline:
            2018-05-23  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            * gimple-ssa-strength-reduction.c (struct slsr_cand_d): Add
            first_interp field.
            (alloc_cand_and_find_basis): Initialize first_interp field.
            (slsr_process_mul): Modify first_interp field.
            (slsr_process_add): Likewise.
            (slsr_process_cast): Modify first_interp field for each new
            interpretation.
            (slsr_process_copy): Likewise.
            (dump_candidate): Dump first_interp field.
            (replace_mult_candidate): Process all interpretations, not just
            subsequent ones.
            (replace_rhs_if_not_dup): Likewise.
            (replace_one_candidate): Likewise.
    
            Backport from mainline:
            2018-05-25  Bill Schmidt  <wschmidt@linux.ibm.com>
    
            PR tree-optimization/85712
            * gimple-ssa-strength-reduction.c (replace_one_candidate): Skip if
            this candidate has already been replaced in-situ by a copy.
    
    From-SVN: r261067

commit 3726ae60b73b50e9fe5cddbaa054eb8803de225f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 1 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r261047

commit 1fb21f04b138f41e2984527af12823acc2e91e5f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 31 00:16:31 2018 +0000

    Daily bump.
    
    From-SVN: r260985

commit 03c14f64e7895a5f304d7acae4e172099183dbed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 30 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r260909

commit dd299129f6ef004b4495d76717de084ff716e63d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 29 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r260853

commit fc1816186d5c549106c92325b4337c5baff9b527
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 28 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r260811

commit a57f722b224837a3f887c60c27928c841a2da6e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 27 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r260798

commit d01a4887ee2dd18375c9cc48f3fbb91e84c8a916
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 26 00:16:35 2018 +0000

    Daily bump.
    
    From-SVN: r260786

commit f4ffb5fbfcab3bfc62a54255687e3460d464b9a0
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 20:02:05 2018 +0000

    re PR fortran/85895 (ICE in gfc_conv_array_ref, at fortran/trans-array.c:3518)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85895
            Backport from trunk
            * resolve.c (resolve_sync): Resolve expression before checking for
            an error.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85895
            Backport from trunk
            * gfortran.dg/coarray_3.f90: Fix invalid testcase.
            * gfortran.dg/pr85895.f90: New test.
    
    From-SVN: r260778

commit 6e11cea4333ced567eae1592b485fcc67eb99b3c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:54:51 2018 +0000

    re PR fortran/85780 (ICE in resolve_fl_procedure, at fortran/resolve.c:12504)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85780
            Backport from trunk
            * resolve.c (resolve_fl_procedure): Avoid NULL dereference.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85780
            Backport from trunk
            * gfortran.dg/pr85780.f90: New test.
    
    From-SVN: r260777

commit ec2d7c500a71f4c9c28c43654556531726bea928
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:45:57 2018 +0000

    re PR fortran/85779 (ICE in gfc_typename, at fortran/misc.c:156)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85779
            Backport from trunk
            * decl.c (gfc_match_derived_decl): Fix NULL pointer dereference.
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85779
            Backport from trunk
            * gfortran.dg/pr85779_1.f90: New test.
            * gfortran.dg/pr85779_2.f90: Ditto.
            * gfortran.dg/pr85779_3.f90: Ditto.
    
    From-SVN: r260776

commit 7ca776a2a076f76db30182a3fff64c6c97ba795c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 25 19:38:11 2018 +0000

    re PR fortran/85543 (ICE in update_current_proc_array_outer_dependency, at fortran/resolve.c:3060)
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85543
            Backport from trunk
            * resolve.c (update_current_proc_array_outer_dependency): Avoid NULL
            pointer dereference.
    
    
    2018-05-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85543
            Backport from trunk
            * gfortran.dg/pr85543.f90: New test.
    
    From-SVN: r260775

commit e6eb990f325bdbdc03ece3725a3d7ff0a9f73c1d
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri May 25 15:39:55 2018 +0200

    re PR target/85903 (FAIL: gcc.target/i386/avx512dq-vcvtuqq2pd-2.c)
    
            * config/i386/sse.md (cvtusi2<ssescalarmodesuffix>64<round_name>):
            Add {q} suffix to insn mnemonic.
    
            PR target/85903
            * config/i386/sse.md (movdi_to_sse): Do not generate pseudo
            when memory input operand is handled.
    
    testsuite/ChangeLog:
    
            * gcc.target/i386/avx512f-vcvtusi2sd64-1.c: Update scan string.
            * gcc.target/i386/avx512f-vcvtusi2ss64-1.c: Ditto.
    
    From-SVN: r260759

commit a36d2335c45a2b1d5e1fc575ebd94e20ab07ad7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 25 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r260700

commit 123a4122e48a07d18aebf081e4a9e32b8156d8f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 24 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r260630

commit 3dd016244454a92e852a386ac14760ddb3447872
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 23 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r260558

commit 81061b330e4b4fbc2ee1d7ba98e12c08625cbc76
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 22 00:16:24 2018 +0000

    Daily bump.
    
    From-SVN: r260494

commit a5a338ec6223436ef3097a83f663d8f26c3bf2a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 21 00:16:14 2018 +0000

    Daily bump.
    
    From-SVN: r260428

commit c4b3831093ed410553f76f953f0833831f76d9ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 20 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r260405

commit e93501d1733a777072f089df42afb30a6d085567
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 19 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r260385

commit 971f8a4d286accaa617a04df7aea18766f913ea5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 18 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r260344

commit 54c729a5f693cfe111f2de9edecc361d915ff6b6
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu May 17 15:31:42 2018 +0000

    re PR fortran/82814 (ICE from submodule character function)
    
    2017-05-17  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/82814
            * gfortran.dg/submodule_31.f08: New test.
    
    From-SVN: r260325

commit 9e9604c154edf30ba288105626be397975f84073
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 17 14:18:06 2018 +0200

    Check is_single_const in intersect_with_plats
    
    2018-05-17  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2018-05-11  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/85655
            * ipa-cp.c (intersect_with_plats): Check that the lattice contains
            single const.
    
    From-SVN: r260319

commit 32cf03bc11b76acbf1453a257b9e542fee197f27
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 17 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r260301

commit c168a0b16d4971d106301de87375b5da83a187c8
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed May 16 11:42:47 2018 +0000

    re PR fortran/83149 ([6- and 7-branches] Missing test for sym->ns->proc_name: crash_signal in toplev.c:325)
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83149
            Backport from trunk
            * trans-decl.c (gfc_finish_var_decl): Test sym->ns->proc_name
            before accessing its components.
            * trans-types.c (gfc_sym_type): If a character result has null
            backend_decl, try the procedure symbol.
    
    2018-05-16  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83149
            Backport from trunk
            * gfortran.dg/pr83149_1.f90: New test.
            * gfortran.dg/pr83149.f90: Additional source for previous.
            * gfortran.dg/pr83149_b.f90: New test.
            * gfortran.dg/pr83149_a.f90: Additional source for previous.
    
    From-SVN: r260286

commit c785e2c364f4973080f70aab8f0511270e75afa6
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed May 16 10:41:48 2018 +0000

    re PR fortran/83898 (ICE in gfc_conv_expr_descriptor, at fortran/trans-array.c:7181)
    
    2018-16-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83898
            Backport from trunk
            * trans-stmt.c (trans_associate_var): Do not set cst_array_ctor
            for characters.
    
    2018-16-05  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/83898
            Backport from trunk
            * gfortran.dg/associate_33.f03 : New test.
    
    From-SVN: r260284

commit a844746097fe4f8149cb92dbf8d40d429da84828
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 16 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r260274

commit 67ec4dcc0cbada21f7ec481e88653df77f4082f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 15 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r260245

commit 0eaf27ec4888d5052a5cbf4ab33c487339dc8069
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon May 14 23:35:44 2018 +0100

    PR libstdc++/67554 Do not pass null pointers to memcpy
    
            PR libstdc++/67554
            * include/bits/valarray_array.h (_Array_copy_ctor<_Tp, true>)
            (_Array_copier<_Tp, true>): Do not pass null pointers to memcpy.
    
    From-SVN: r260244

commit 10a0e7f5f0f3aed16409bdcf29abd0512521baf0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 14 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r260218

commit 783858cab3a5ca85b9a12375b8e5c24071d9f03b
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun May 13 08:34:50 2018 +0000

    re PR fortran/68846 (Pointer function as LValue doesn't work when the assignment regards a dummy argument.)
    
    2018-05-13  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/68846
            PR fortran/70864
            Backport from trunk
            * resolve.c (get_temp_from_expr): The temporary must not have
            dummy or intent attributes.
    
    2018-05-13  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/68846
            Backport from trunk
            * gfortran.dg/temporary_3.f90 : New test.
    
            PR fortran/70864
            Backport from trunk
            * gfortran.dg/temporary_2.f90 : New test.
    
    From-SVN: r260208

commit 305d8b9b0e4f4630cf4eafd0bc4582845900c227
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 13 00:16:29 2018 +0000

    Daily bump.
    
    From-SVN: r260202

commit 8b4b5058d1d5fce068fbcf12e5c43acd800ebfe0
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat May 12 17:17:19 2018 +0000

    re PR fortran/85542 (ICE in check_inquiry, at fortran/expr.c:2426)
    
    2018-05-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85542
            Backport from trunk
            * expr.c (check_inquiry): Avoid NULL pointer dereference.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85542
            Backport from trunk
            * gfortran.dg/pr85542.f90: New test.
    
    From-SVN: r260198

commit fa15512723d9f601371f18222f7468e5c9d1ad04
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 12 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r260191

commit f1b0c33e64ac6a82517e00df8b4af5a7df9343d8
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 18:35:20 2018 +0000

    re PR fortran/70870 (Segmentation violation in gfc_assign_data_value)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/70870
            Backport from trunk
            * data.c (gfc_assign_data_value): Check that a data object does
            not also have default initialization.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/70870
            Backport from trunk
            * gfortran.dg/pr70870_1.f90: New test.
    
    From-SVN: r260181

commit e5b8100ca59c4b80e48334d43a633ca880217b3c
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 18:34:14 2018 +0000

    re PR fortran/85521 (ICE in gfc_resolve_character_array_constructor, at fortran/array.c:2049)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85521
            Backport from trunk
            * array.c (gfc_resolve_character_array_constructor): Substrings
            with upper bound smaller than lower bound are zero length strings.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85521
            Backport from trunk
            * gfortran.dg/pr85521_1.f90: New test.
            * gfortran.dg/pr85521_2.f90: New test.
    
    From-SVN: r260180

commit 0f8f0bf8d3dbb42a13572db049ee9f9f088c744d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri May 11 18:33:05 2018 +0000

    re PR fortran/85687 (ICE in gfc_sym_identifier, at fortran/trans-decl.c:351)
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85687
            Backport from trunk
            * check.c (gfc_check_rank): Check that the argument is a data object.
    
    2018-05-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85687
            Backport from trunk
            * gfortran.dg/pr85687.f90: new test.
    
    From-SVN: r260179

commit 335a276c27affc688360e726a8eca927bca3cbda
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Fri May 11 09:35:31 2018 +0000

    [arm] PR target/83687: Fix invalid combination of VSUB + VABS into VABD
    
            PR target/83687
            * config/arm/neon.md (neon_vabd<mode>_2): Use VCVTF mode iterator.
            Remove integer-related logic from pattern.
            (neon_vabd<mode>_3): Likewise.
    
            * gcc.target/arm/neon-combine-sub-abs-into-vabd.c: Delete integer
            tests.
            * gcc.target/arm/pr83687.c: New test.
    
    From-SVN: r260159

commit 1ee5f0d221d7040554d628c363deaecf372099a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 11 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r260144

commit e4b4908ded84973b0834b5624be25de31a8ad445
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 10 20:27:14 2018 +0100

    Document Dual ABI for std::ios_base::failure
    
            * doc/xml/manual/debug_mode.xml: Add array and forward_list to list
            of C++11 containers with Debug Mode support.
            * doc/xml/manual/using.xml: Document Dual ABI for ios_base::failure.
            * doc/html/*: Regenerate.
    
    From-SVN: r260132

commit 377b833ee7e5f032594dce9ea5b587bea91c6918
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 10 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r260101

commit 088ad0848abda32db4172a90700986cab2b4e72d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 9 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r260060

commit ba2a7cdfdd615589d1582a2d22b23c45e2ea0734
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 8 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r260018

commit e258ecde484bcafa255a7baac67de0d332806ab7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 7 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r259983

commit 296805c6a78720cb9c106b058624893e736d49d2
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun May 6 14:14:11 2018 +0200

    re PR fortran/85507 (ICE in gfc_dep_resolver, at fortran/dependency.c:2258)
    
    gcc/fortran/ChangeLog:
    
    2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/85507
            Backport from trunk.
            * dependency.c (gfc_dep_resolver): Revert looking at coarray dimension
            introduced by r259385.
            * trans-intrinsic.c (conv_caf_send): Always report a dependency for
            same variables in coarray assignments.
    
    gcc/testsuite/ChangeLog:
    
    2018-05-06  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/85507
            Backport from trunk.
            * gfortran.dg/coarray_dependency_1.f90: New test.
            * gfortran.dg/coarray_lib_comm_1.f90: Fix counting caf-expressions.
    
    From-SVN: r259978

commit b67eef6447bb1c0cd8684bdbab6312c03bc95dc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 6 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r259970

commit f740472b9cd7e1f8c40ba432752f1c3135798cd1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 5 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r259962

commit 0961bb15d8b3aaa922d8dd6ac8d94780a18da305
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 4 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r259914

commit 2bec01fac4828894c77e9417fcca4b211268ce66
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 3 21:39:31 2018 +0100

    PR libstdc++/85632 fix wraparound in filesystem::space
    
    On 32-bit targets any values over 4GB would wrap and produce the wrong
    result.
    
            PR libstdc++/85632 use uintmax_t for arithmetic
            * src/filesystem/ops.cc (experimental::filesystem::space): Perform
            arithmetic in result type.
            * testsuite/experimental/filesystem/operations/space.cc: New.
    
    From-SVN: r259911

commit 73618f3c74b7532b8edb8055b5f4644ea9d52ec3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 3 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r259871

commit 02bc4b581c9dc6f2464051cedc179027ac791f9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 2 00:16:20 2018 +0000

    Daily bump.
    
    From-SVN: r259815

commit 8d8ed28e8d8b829c43bcc8358037fdbaa9e99bca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 1 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r259784

commit e0e2c700963879a03a82682cc1e5f7b0e4dc55cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 30 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r259750

commit da8792de0ed19120a4a29cacbf7a544dbc693b63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 29 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r259744

commit fcb4e1d58db3f0eafecbe1d1206b5eb30c05a85d
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sat Apr 28 16:54:09 2018 +0200

    re PR fortran/81773 ([Coarray] Get with vector index on lhs leads to incorrect caf_get_by_ref() call.)
    
    gcc/fortran/ChangeLog:
    
    2018-04-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/81773
            PR fortran/83606
            Backport from trunk
            * dependency.c (gfc_dep_resolver): Coarray indexes are to be ignored
            during dependency computation.  They define no data dependency.
            * trans-array.c (conv_array_index_offset): The stride can not be set
            here, prevent fail.
            * trans-intrinsic.c (conv_caf_send): Add creation of temporary array
            for caf_get's result and copying to the array with vectorial
            indexing.
    
    gcc/testsuite/ChangeLog:
    
    2018-04-28  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/81773
            PR fortran/83606
            Backport from trunk
            * gfortran.dg/coarray/get_to_indexed_array_1.f90: New test.
            * gfortran.dg/coarray/get_to_indirect_array.f90: New test.
    
    From-SVN: r259741

commit 5b258b4970383b585a10f92d5b5efcdef7d616d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 28 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r259734

commit b814ac45a79d6f2a35f9a9d56a19f631d71b96aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 27 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r259692

commit 7219f9d0c92f6816cf6531057466da5948cb18ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 26 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r259659

commit 559044c16565d071f75b175c8a92378eddd40d2a
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Apr 25 09:41:44 2018 +0200

    Backport r259431
    
    2018-04-25  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-17  Martin Liska  <mliska@suse.cz>
    
            PR lto/85405
            * ipa-devirt.c (odr_types_equivalent_p): Remove trailing
            in message, remote space in between '_G' and '('.
    
    From-SVN: r259634

commit 8ba54b29af99a3b068a9e5f3dd6b7bb0ce3d03e9
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Apr 25 09:41:25 2018 +0200

    Backport r259429
    
    2018-04-25  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-17  Jan Hubicka  <jh@suse.cz>
    
            PR lto/85405
            * ipa-devirt.c (odr_types_equivalent_p): Handle bit fields.
    
    From-SVN: r259633

commit 7286e40aba6819e3b93035aadc0fc0078f8209af
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Apr 25 09:40:46 2018 +0200

    Backport r259274
    
    2018-04-25  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Martin Liska  <mliska@suse.cz>
    
            PR lto/85248
            * lto-symtab.c (lto_symtab_merge_p): Do not check for
            TREE_VALUES of error attributes.
    
    From-SVN: r259632

commit 6ba0955f109f289be2f26445d3e81a10396f3ec0
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Apr 25 09:40:27 2018 +0200

    Backport r259265
    
    2018-04-25  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Richard Biener  <rguenther@suse.de>
                        Martin Liska  <mliska@suse.cz>
    
            PR lto/85248
            * lto-symtab.c (lto_symtab_merge_p): Handle noreturn attribute.
    2018-04-25  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR lto/85248
            * gcc.dg/lto/pr85248_0.c: New test.
            * gcc.dg/lto/pr85248_1.c: New test.
    
    From-SVN: r259631

commit 6b7a92a8f2c30ac86863a9abadf675744cfd8028
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 25 00:16:23 2018 +0000

    Daily bump.
    
    From-SVN: r259626

commit be1f04f75c6a926659b932ef02169844a74bec76
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Apr 25 00:12:58 2018 +0000

    re PR fortran/85520 (Out of memory when declaring a character with len << 0)
    
    2018-04-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85520
            * decl.c (gfc_match_char_spec): Check for negative length and set to 0.
    
    2018-04-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85520
            * gfortran.dg/pr85520.f90: New test.
    
    From-SVN: r259625

commit 840992f0c1645989e7ab5ac25954948a27bd58b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 24 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r259587

commit 3154f46fb16eaaa06fc309b55227ba2485a0694d
Author: Aaron Sawdey <acsawdey@linux.ibm.com>
Date:   Tue Apr 24 00:14:21 2018 +0000

    backport: re PR target/83660 (ICE with vec_extract inside expression statement)
    
    
    2018-04-23  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            Backport from mainline
            2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            PR target/83660
            * config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Mark
            vec_extract expression as having side effects to make sure it gets
            a cleanup point.
    
    2018-04-23  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            Backport from mainline
            2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>
    
            PR target/83660
            * gcc.target/powerpc/pr83660.C: New test.
    
    From-SVN: r259586

commit 30a633dfcdb599166e80b74d20e4b8c7e03a7cc1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Apr 23 20:31:17 2018 +0000

    re PR middle-end/85496 (internal compiler error: in emit_move_insn, at expr.c:3722)
    
            PR middle-end/85496
            * expr.c (store_field): In the bitfield case, if the value comes from
            a function call and is returned in registers by means of a PARALLEL,
            do not change the mode of the temporary unless BLKmode and VOIDmode.
    
    From-SVN: r259577

commit 35d76bdc6a2af9c1f4f5c390d53b1cd385a0d936
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 23 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259554

commit cb92f66c0f0975e1a66ad086dd280775e16d646a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 22 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r259542

commit 56ae2d4b11b38d7d6549b8ba6b0aa534244c1151
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 21 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r259537

commit 73ea66bfd03439ce48540543177be3aa11c493e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 20 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259513

commit 868840d845abda9232cea0f5aa837552cd620fd3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 19 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r259481

commit fac908cfe0e145bf85fa396125c7c382ba3a9fcd
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Apr 18 13:17:30 2018 +0000

    [ARM] Fix PR85261: ICE with FPSCR setter builtin
    
    Instruction pattern for setting the FPSCR expects the input value to be
    in a register. However, __builtin_arm_set_fpscr expander does not ensure
    that this is the case and as a result GCC ICEs when the builtin is
    called with a constant literal.
    
    This commit fixes the builtin to force the input value into a register.
    It also remove the unneeded volatile in the existing fpscr test and
    fixes the function prototype.
    
    2018-04-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2018-04-11  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/85261
        * config/arm/arm-builtins.c (arm_expand_builtin): Force input operand
        into register.
    
        gcc/testsuite/
        PR target/85261
        * gcc.target/arm/fpscr.c: Add call to __builtin_arm_set_fpscr with
        literal value.  Expect 2 MCR instruction.  Fix function prototype.
        Remove volatile keyword.
    
    From-SVN: r259469

commit 19e18bab1a814df697d8041557979867e804bd24
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 18 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259453

commit 1a78ff7dfdd101038fdd2b02fec484c4b328b22b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 17 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259424

commit 2d78160e62e69d5c9225af6cdf83fa53598bfef5
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:11:13 2018 +0000

    i386: Don't generate alias for function return thunk
    
    Function return thunks shouldn't be aliased to indirect branch thunks
    since indirect branch thunks are placed in COMDAT section and a COMDAT
    section with indirect branch may not have function return thunk.  This
    patch generates function return thunks directly.
    
    gcc/
    
            Backport from mainline
            PR target/84574
            * config/i386/i386.c (indirect_thunk_needed): Update comments.
            (indirect_thunk_bnd_needed): Likewise.
            (indirect_thunks_used): Likewise.
            (indirect_thunks_bnd_used): Likewise.
            (indirect_return_needed): New.
            (indirect_return_bnd_needed): Likewise.
            (output_indirect_thunk_function): Add a bool argument for
            function return.
            (output_indirect_thunk_function): Don't generate alias for
            function return thunk.
            (ix86_code_end): Call output_indirect_thunk_function to generate
            function return thunks.
            (ix86_output_function_return): Set indirect_return_bnd_needed
            and indirect_return_needed instead of indirect_thunk_bnd_needed
            and indirect_thunk_needed.
    
    gcc/testsuite/
    
            Backport from mainline
            PR target/84574
            * gcc.target/i386/ret-thunk-9.c: Expect __x86_return_thunk
            label instead of __x86_indirect_thunk label.
    
    From-SVN: r259422

commit 2672b5faa7de60caa6962fdbd87e28b06ae0f361
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:08:14 2018 +0000

    i386: Add TARGET_INDIRECT_BRANCH_REGISTER
    
    For
    
    ---
    struct C {
      virtual ~C();
      virtual void f();
    };
    
    void
    f (C *p)
    {
      p->f();
      p->f();
    }
    ---
    
    -mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:
    
    _Z1fP1C:
    .LFB0:
            .cfi_startproc
            pushq   %rbx
            .cfi_def_cfa_offset 16
            .cfi_offset 3, -16
            movq    (%rdi), %rax
            movq    %rdi, %rbx
            jmp     .LIND1
    .LIND0:
            pushq   16(%rax)
            jmp     __x86_indirect_thunk
    .LIND1:
            call    .LIND0
            movq    (%rbx), %rax
            movq    %rbx, %rdi
            popq    %rbx
            .cfi_def_cfa_offset 8
            movq    16(%rax), %rax
            jmp     __x86_indirect_thunk_rax
            .cfi_endproc
    
    x86-64 is supposed to have asynchronous unwind tables by default, but
    there is nothing that reflects the change in the (relative) frame
    address after .LIND0.  That region really has to be moved outside of
    the .cfi_startproc/.cfi_endproc bracket.
    
    This patch adds TARGET_INDIRECT_BRANCH_REGISTER to force indirect
    branch via register whenever -mindirect-branch= is used.  Now,
    -mindirect-branch=thunk-extern -O2 on x86-64 GNU/Linux generates:
    
    _Z1fP1C:
    .LFB0:
            .cfi_startproc
            pushq   %rbx
            .cfi_def_cfa_offset 16
            .cfi_offset 3, -16
            movq    (%rdi), %rax
            movq    %rdi, %rbx
            movq    16(%rax), %rax
            call    __x86_indirect_thunk_rax
            movq    (%rbx), %rax
            movq    %rbx, %rdi
            popq    %rbx
            .cfi_def_cfa_offset 8
            movq    16(%rax), %rax
            jmp     __x86_indirect_thunk_rax
            .cfi_endproc
    
    so that "-mindirect-branch=thunk-extern" is equivalent to
    "-mindirect-branch=thunk-extern -mindirect-branch-register", which is
    used by Linux kernel.
    
    gcc/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84039
            * config/i386/constraints.md (Bs): Replace
            ix86_indirect_branch_register with
            TARGET_INDIRECT_BRANCH_REGISTER.
            (Bw): Likewise.
            * config/i386/i386.md (indirect_jump): Likewise.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Peepholes of indirect call and jump via memory: Likewise.
            (*sibcall_GOT_32): Disallowed for TARGET_INDIRECT_BRANCH_REGISTER.
            (*sibcall_value_GOT_32): Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
            * config/i386/i386.h (TARGET_INDIRECT_BRANCH_REGISTER): New.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84039
            * gcc.target/i386/indirect-thunk-1.c: Updated.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
    
    From-SVN: r259421

commit 5ddbdc6595d48dc2ea2a75d03b7b729c10da2aab
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:06:32 2018 +0000

    i386: Update -mfunction-return= for return with pop
    
    When -mfunction-return= is used, simple_return_pop_internal should pop
    return address into ECX register, adjust stack by bytes to pop from stack
    and jump to the return thunk via ECX register.
    
    Revision 257992 removed the bool argument from ix86_output_indirect_jmp.
    Update comments to reflect it.
    
    Tested on i686 and x86-64.
    
    gcc/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_output_indirect_jmp): Update comments.
    
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84530
            * config/i386/i386-protos.h (ix86_output_indirect_jmp): Remove
            the bool argument.
            (ix86_output_indirect_function_return): New prototype.
            (ix86_split_simple_return_pop_internal): Likewise.
            * config/i386/i386.c (indirect_return_via_cx): New.
            (indirect_return_via_cx_bnd): Likewise.
            (indirect_thunk_name): Handle return va CX_REG.
            (output_indirect_thunk_function): Create alias for
            __x86_return_thunk_[re]cx and __x86_return_thunk_[re]cx_bnd.
            (ix86_output_indirect_jmp): Remove the bool argument.
            (ix86_output_indirect_function_return): New function.
            (ix86_split_simple_return_pop_internal): Likewise.
            * config/i386/i386.md (*indirect_jump): Don't pass false
            to ix86_output_indirect_jmp.
            (*tablejump_1): Likewise.
            (simple_return_pop_internal): Change it to define_insn_and_split.
            Call ix86_split_simple_return_pop_internal to split it for
            -mfunction-return=.
            (simple_return_indirect_internal): Call
            ix86_output_indirect_function_return instead of
            ix86_output_indirect_jmp.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-02-26  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/84530
            * gcc.target/i386/ret-thunk-22.c: New test.
            * gcc.target/i386/ret-thunk-23.c: Likewise.
            * gcc.target/i386/ret-thunk-24.c: Likewise.
            * gcc.target/i386/ret-thunk-25.c: Likewise.
            * gcc.target/i386/ret-thunk-26.c: Likewise.
    
    From-SVN: r259420

commit acbfebfbb30807964cec09cd2942c992bc106be0
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:05:09 2018 +0000

    i386: Pass INVALID_REGNUM as invalid register number
    
            Backport from mainline
            * config/i386/i386.c (ix86_output_function_return): Pass
            INVALID_REGNUM, instead of -1, as invalid register number to
            indirect_thunk_name and output_indirect_thunk.
    
    From-SVN: r259419

commit 9cfa2558f6cc78d197fdf9202030645879d9d7ec
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:03:51 2018 +0000

    Use INVALID_REGNUM in indirect thunk processing
    
            Backport from mainline
            2018-01-17  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/i386.c (indirect_thunk_name): Declare regno
            as unsigned int.  Compare regno with INVALID_REGNUM.
            (output_indirect_thunk): Ditto.
            (output_indirect_thunk_function): Ditto.
            (ix86_code_end): Declare regno as unsigned int.  Use INVALID_REGNUM
            in the call to output_indirect_thunk_function.
    
    From-SVN: r259418

commit 6851d1aba159338ca2ff523edc93a14255430b1f
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:03:00 2018 +0000

    x86: Disallow -mindirect-branch=/-mfunction-return= with -mcmodel=large
    
    Since the thunk function may not be reachable in large code model,
    -mcmodel=large is incompatible with -mindirect-branch=thunk,
    -mindirect-branch=thunk-extern, -mfunction-return=thunk and
    -mfunction-return=thunk-extern.  Issue an error when they are used with
    -mcmodel=large.
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_set_indirect_branch_type): Disallow
            -mcmodel=large with -mindirect-branch=thunk,
            -mindirect-branch=thunk-extern, -mfunction-return=thunk and
            -mfunction-return=thunk-extern.
            * doc/invoke.texi: Document -mcmodel=large is incompatible with
            -mindirect-branch=thunk, -mindirect-branch=thunk-extern,
            -mfunction-return=thunk and -mfunction-return=thunk-extern.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-10.c: New test.
            * gcc.target/i386/indirect-thunk-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-9.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-10.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-11.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-9.c: Likewise.
            * gcc.target/i386/ret-thunk-17.c: Likewise.
            * gcc.target/i386/ret-thunk-18.c: Likewise.
            * gcc.target/i386/ret-thunk-19.c: Likewise.
            * gcc.target/i386/ret-thunk-20.c: Likewise.
            * gcc.target/i386/ret-thunk-21.c: Likewise.
    
    From-SVN: r259417

commit 6dee904e56f503f86bbdd989b5f9ed2b2a0faa59
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 19:00:53 2018 +0000

    x86: Add 'V' register operand modifier
    
    Add 'V', a special modifier which prints the name of the full integer
    register without '%'.  For
    
    extern void (*func_p) (void);
    
    void
    foo (void)
    {
      asm ("call __x86_indirect_thunk_%V0" : : "a" (func_p));
    }
    
    it generates:
    
    foo:
            movq    func_p(%rip), %rax
            call    __x86_indirect_thunk_rax
            ret
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (print_reg): Print the name of the full
            integer register without '%'.
            (ix86_print_operand): Handle 'V'.
             * doc/extend.texi: Document 'V' modifier.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-register-4.c: New test.
    
    From-SVN: r259416

commit de09196a8c0f9ac138f18705a5713c277f3c8a90
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 18:59:22 2018 +0000

    x86: Add -mindirect-branch-register
    
    Add -mindirect-branch-register to force indirect branch via register.
    This is implemented by disabling patterns of indirect branch via memory,
    similar to TARGET_X32.
    
    -mindirect-branch= and -mfunction-return= tests are updated with
    -mno-indirect-branch-register to avoid false test failures when
    -mindirect-branch-register is added to RUNTESTFLAGS for "make check".
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Disallow memory operand for
            -mindirect-branch-register.
            (Bw): Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
            * config/i386/i386.md (indirect_jump): Call convert_memory_address
            for -mindirect-branch-register.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Disallow peepholes of indirect call and jump via memory for
            -mindirect-branch-register.
            (*call_pop): Replace m with Bw.
            (*call_value_pop): Likewise.
            (*sibcall_pop_memory): Replace m with Bs.
            * config/i386/i386.opt (mindirect-branch-register): New option.
            * doc/invoke.texi: Document -mindirect-branch-register option.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-1.c (dg-options): Add
            -mno-indirect-branch-register.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-1.c: New test.
            * gcc.target/i386/indirect-thunk-register-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-3.c: Likewise.
    
    i386: Rename to ix86_indirect_branch_register
    
    Rename the variable for -mindirect-branch-register to
    ix86_indirect_branch_register to match the command-line option name.
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Replace
            ix86_indirect_branch_thunk_register with
            ix86_indirect_branch_register.
            (Bw): Likewise.
            * config/i386/i386.md (indirect_jump): Likewise.
            (tablejump): Likewise.
            (*sibcall_memory): Likewise.
            (*sibcall_value_memory): Likewise.
            Peepholes of indirect call and jump via memory: Likewise.
            * config/i386/i386.opt: Likewise.
            * config/i386/predicates.md (indirect_branch_operand): Likewise.
            (GOT_memory_operand): Likewise.
            (call_insn_operand): Likewise.
            (sibcall_insn_operand): Likewise.
            (GOT32_symbol_operand): Likewise.
    
    x86: Rewrite ix86_indirect_branch_register logic
    
    Rewrite ix86_indirect_branch_register logic with
    
    (and (not (match_test "ix86_indirect_branch_register"))
         (original condition before r256662))
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/predicates.md (constant_call_address_operand):
            Rewrite ix86_indirect_branch_register logic.
            (sibcall_insn_operand): Likewise.
    
    Don't check ix86_indirect_branch_register for GOT operand
    
    Since GOT_memory_operand and GOT32_symbol_operand are simple pattern
    matches, don't check ix86_indirect_branch_register here.  If needed,
    -mindirect-branch= will convert indirect branch via GOT slot to a call
    and return thunk.
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/constraints.md (Bs): Update
            ix86_indirect_branch_register check.  Don't check
            ix86_indirect_branch_register with GOT_memory_operand.
            (Bw): Likewise.
            * config/i386/predicates.md (GOT_memory_operand): Don't check
            ix86_indirect_branch_register here.
            (GOT32_symbol_operand): Likewise.
    
    i386: Rewrite indirect_branch_operand logic
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/predicates.md (indirect_branch_operand): Rewrite
            ix86_indirect_branch_register logic.
    
    From-SVN: r259415

commit 0ab44e75ed435cbc918b094b4802bb1af0902e05
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 18:55:04 2018 +0000

    x86: Add -mfunction-return=
    
    Add -mfunction-return= option to convert function return to call and
    return thunks.  The default is 'keep', which keeps function return
    unmodified.  'thunk' converts function return to call and return thunk.
    'thunk-inline' converts function return to inlined call and return thunk.
    'thunk-extern' converts function return to external call and return
    thunk provided in a separate object file.  You can control this behavior
    for a specific function by using the function attribute function_return.
    
    Function return thunk is the same as memory thunk for -mindirect-branch=
    where the return address is at the top of the stack:
    
    __x86_return_thunk:
            call L2
    L1:
            pause
            lfence
            jmp L1
    L2:
            lea 8(%rsp), %rsp|lea 4(%esp), %esp
            ret
    
    and function return becomes
    
            jmp __x86_return_thunk
    
    -mindirect-branch= tests are updated with -mfunction-return=keep to
    avoid false test failures when -mfunction-return=thunk is added to
    RUNTESTFLAGS for "make check".
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386-protos.h (ix86_output_function_return): New.
            * config/i386/i386.c (ix86_set_indirect_branch_type): Also
            set function_return_type.
            (indirect_thunk_name): Add ret_p to indicate thunk for function
            return.
            (output_indirect_thunk_function): Pass false to
            indirect_thunk_name.
            (ix86_output_indirect_branch_via_reg): Likewise.
            (ix86_output_indirect_branch_via_push): Likewise.
            (output_indirect_thunk_function): Create alias for function
            return thunk if regno < 0.
            (ix86_output_function_return): New function.
            (ix86_handle_fndecl_attribute): Handle function_return.
            (ix86_attribute_table): Add function_return.
            * config/i386/i386.h (machine_function): Add
            function_return_type.
            * config/i386/i386.md (simple_return_internal): Use
            ix86_output_function_return.
            (simple_return_internal_long): Likewise.
            * config/i386/i386.opt (mfunction-return=): New option.
            (indirect_branch): Mention -mfunction-return=.
            * doc/extend.texi: Document function_return function attribute.
            * doc/invoke.texi: Document -mfunction-return= option.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-1.c (dg-options): Add
            -mfunction-return=keep.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
            * gcc.target/i386/ret-thunk-1.c: New test.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-16.c: Likewise.
            * gcc.target/i386/ret-thunk-2.c: Likewise.
            * gcc.target/i386/ret-thunk-3.c: Likewise.
            * gcc.target/i386/ret-thunk-4.c: Likewise.
            * gcc.target/i386/ret-thunk-5.c: Likewise.
            * gcc.target/i386/ret-thunk-6.c: Likewise.
            * gcc.target/i386/ret-thunk-7.c: Likewise.
            * gcc.target/i386/ret-thunk-8.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Likewise.
    
    i386: Don't use ASM_OUTPUT_DEF for TARGET_MACHO
    
    ASM_OUTPUT_DEF isn't defined for TARGET_MACHO.  Use ASM_OUTPUT_LABEL to
    generate the __x86_return_thunk label, instead of the set directive.
    Update testcase to remove the __x86_return_thunk label check.  Since
    -fno-pic is ignored on Darwin, update testcases to sscan or "push"
    only on Linux.
    
    gcc/
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/83839
            * config/i386/i386.c (output_indirect_thunk_function): Use
            ASM_OUTPUT_LABEL, instead of ASM_OUTPUT_DEF, for TARGET_MACHO
            for  __x86.return_thunk.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-15  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/83839
            * gcc.target/i386/indirect-thunk-1.c: Scan for "push" only on
            Linux.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-register-4.c: Likewise.
            * gcc.target/i386/ret-thunk-10.c: Likewise.
            * gcc.target/i386/ret-thunk-11.c: Likewise.
            * gcc.target/i386/ret-thunk-12.c: Likewise.
            * gcc.target/i386/ret-thunk-13.c: Likewise.
            * gcc.target/i386/ret-thunk-14.c: Likewise.
            * gcc.target/i386/ret-thunk-15.c: Likewise.
            * gcc.target/i386/ret-thunk-9.c: Don't check the
            __x86_return_thunk label.
            Scan for "push" only for Linux.
    
    From-SVN: r259414

commit cc1f39cbee77d6b6bbc739f11142d1e4b4cfd92a
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 18:50:52 2018 +0000

    x86: Add -mindirect-branch=
    
    Add -mindirect-branch= option to convert indirect call and jump to call
    and return thunks.  The default is 'keep', which keeps indirect call and
    jump unmodified.  'thunk' converts indirect call and jump to call and
    return thunk.  'thunk-inline' converts indirect call and jump to inlined
    call and return thunk.  'thunk-extern' converts indirect call and jump to
    external call and return thunk provided in a separate object file.  You
    can control this behavior for a specific function by using the function
    attribute indirect_branch.
    
    2 kinds of thunks are geneated.  Memory thunk where the function address
    is at the top of the stack:
    
    __x86_indirect_thunk:
            call L2
    L1:
            pause
            lfence
            jmp L1
    L2:
            lea 8(%rsp), %rsp|lea 4(%esp), %esp
            ret
    
    Indirect jmp via memory, "jmp mem", is converted to
    
            push memory
            jmp __x86_indirect_thunk
    
    Indirect call via memory, "call mem", is converted to
    
            jmp L2
    L1:
            push [mem]
            jmp __x86_indirect_thunk
    L2:
            call L1
    
    Register thunk where the function address is in a register, reg:
    
    __x86_indirect_thunk_reg:
            call    L2
    L1:
            pause
            lfence
            jmp     L1
    L2:
            movq    %reg, (%rsp)|movl    %reg, (%esp)
            ret
    
    where reg is one of (r|e)ax, (r|e)dx, (r|e)cx, (r|e)bx, (r|e)si, (r|e)di,
    (r|e)bp, r8, r9, r10, r11, r12, r13, r14 and r15.
    
    Indirect jmp via register, "jmp reg", is converted to
    
            jmp __x86_indirect_thunk_reg
    
    Indirect call via register, "call reg", is converted to
    
            call __x86_indirect_thunk_reg
    
    gcc/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386-opts.h (indirect_branch): New.
            * config/i386/i386-protos.h (ix86_output_indirect_jmp): Likewise.
            * config/i386/i386.c (ix86_using_red_zone): Disallow red-zone
            with local indirect jump when converting indirect call and jump.
            (ix86_set_indirect_branch_type): New.
            (ix86_set_current_function): Call ix86_set_indirect_branch_type.
            (indirectlabelno): New.
            (indirect_thunk_needed): Likewise.
            (indirect_thunk_bnd_needed): Likewise.
            (indirect_thunks_used): Likewise.
            (indirect_thunks_bnd_used): Likewise.
            (INDIRECT_LABEL): Likewise.
            (indirect_thunk_name): Likewise.
            (output_indirect_thunk): Likewise.
            (output_indirect_thunk_function): Likewise.
            (ix86_output_indirect_branch_via_reg): Likewise.
            (ix86_output_indirect_branch_via_push): Likewise.
            (ix86_output_indirect_branch): Likewise.
            (ix86_output_indirect_jmp): Likewise.
            (ix86_code_end): Call output_indirect_thunk_function if needed.
            (ix86_output_call_insn): Call ix86_output_indirect_branch if
            needed.
            (ix86_handle_fndecl_attribute): Handle indirect_branch.
            (ix86_attribute_table): Add indirect_branch.
            * config/i386/i386.h (machine_function): Add indirect_branch_type
            and has_local_indirect_jump.
            * config/i386/i386.md (indirect_jump): Set has_local_indirect_jump
            to true.
            (tablejump): Likewise.
            (*indirect_jump): Use ix86_output_indirect_jmp.
            (*tablejump_1): Likewise.
            (simple_return_indirect_internal): Likewise.
            * config/i386/i386.opt (mindirect-branch=): New option.
            (indirect_branch): New.
            (keep): Likewise.
            (thunk): Likewise.
            (thunk-inline): Likewise.
            (thunk-extern): Likewise.
            * doc/extend.texi: Document indirect_branch function attribute.
            * doc/invoke.texi: Document -mindirect-branch= option.
    
    gcc/testsuite/
    
            Backport from mainline
            2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>
    
            * gcc.target/i386/indirect-thunk-1.c: New test.
            * gcc.target/i386/indirect-thunk-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-attr-8.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-extern-7.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-1.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-2.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-3.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-4.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-5.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-6.c: Likewise.
            * gcc.target/i386/indirect-thunk-inline-7.c: Likewise.
    
    From-SVN: r259413

commit 410757ff5fbde3ec744297d5fa5448ae37954c22
Author: H.J. Lu <hjl@gcc.gnu.org>
Date:   Mon Apr 16 11:47:16 2018 -0700

    Check in the missing change
    
    From-SVN: r259412

commit ef8588efb65f09eb6c54cb805b8563a70e82c5cf
Author: H.J. Lu <hjl@gcc.gnu.org>
Date:   Mon Apr 16 11:44:43 2018 -0700

    i386: Use const reference of struct ix86_frame to avoid copy
    
    We can use const reference of struct ix86_frame to avoid making a local
    copy of ix86_frame.  ix86_expand_epilogue makes a local copy of struct
    ix86_frame and uses the reg_save_offset field as a local variable.  This
    patch uses a separate local variable for reg_save_offset.
    
    Tested on x86-64 with ada.
    
            Backport from mainline
            PR target/83905
            * config/i386/i386.c (ix86_expand_prologue): Use cost reference
            of struct ix86_frame.
            (ix86_expand_epilogue): Likewise.  Add a local variable for
            the reg_save_offset field in struct ix86_frame.
    
    From-SVN: r259411

commit 349b230466904f419b5206554ad53a05f902b278
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 18:43:57 2018 +0000

    i386: Use reference of struct ix86_frame to avoid copy
    
    When there is no need to make a copy of ix86_frame, we can use reference
    of struct ix86_frame to avoid copy.
    
            Backport from mainline
            2017-11-06  H.J. Lu  <hongjiu.lu@intel.com>
    
            * config/i386/i386.c (ix86_can_use_return_insn_p): Use reference
            of struct ix86_frame.
            (ix86_initial_elimination_offset): Likewise.
            (ix86_expand_split_stack_prologue): Likewise.
    
    From-SVN: r259410

commit e3312fdf9bf1e73314eb517d825761ff42d958e0
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 16 18:42:57 2018 +0000

    i386: Move struct ix86_frame to machine_function
    
    Make ix86_frame available to i386 code generation.  This is needed to
    backport the patch set of -mindirect-branch= to mitigate variant #2 of
    the speculative execution vulnerabilities on x86 processors identified
    by CVE-2017-5715, aka Spectre.
    
            Backport from mainline
            2017-10-13  H.J. Lu  <hongjiu.lu@intel.com>
    
            PR target/82499
            * config/i386/i386.h (ix86_red_zone_size): New.
    
            2017-06-01  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            * config/i386/i386.c (ix86_frame): Moved to ...
            * config/i386/i386.h (ix86_frame): Here.
            (machine_function): Add frame.
            * config/i386/i386.c (ix86_compute_frame_layout): Repace the
            frame argument with &cfun->machine->frame.
            (ix86_can_use_return_insn_p): Don't pass &frame to
            ix86_compute_frame_layout.  Copy frame from cfun->machine->frame.
            (ix86_can_eliminate): Likewise.
            (ix86_expand_prologue): Likewise.
            (ix86_expand_epilogue): Likewise.
            (ix86_expand_split_stack_prologue): Likewise.
    
    From-SVN: r259408

commit 1f19a2db8babf49717fea5e109a05238e7369f34
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 16 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r259390

commit f4abb2844f68260a3a15756f20ab020be189ffec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 15 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259387

commit fc6122369629a23411ff3337344a54457aa8e258
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 14 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259381

commit 5d11aad6978f0310e2b484f425cbf9e9ee7767fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 13 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r259361

commit 20542cd054b8eb3f86c6a9b6a531c1a32e08a583
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Apr 12 10:22:35 2018 +0000

    IBM Z: Spectre: Prevent thunk cfi to be emitted with -fno-dwarf2-cfi-asm
    
    The CFI magic we emit as part of the indirect branch thunks in order to
    have somewhat sane unwind information must not be emitted with
    -fno-dwarf2-cfi-asm.
    
    gcc/ChangeLog:
    
    2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_output_indirect_thunk_function): Check
            also for flag_dwarf2_cfi_asm.
    
    gcc/testsuite/ChangeLog:
    
    2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-04-12  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/nobp-no-dwarf2-cfi.c: New test.
    
    From-SVN: r259342

commit 2e4f123aecc253dba198e6bcd33ba170a3dabba9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 12 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259334

commit 483b61ad5b73e0ee3dc46b85d55d966c950d8d8a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Apr 11 21:03:51 2018 +0200

    alpha.md (stack_probe_internal): Rename from "probe_stack".
    
            * config/alpha/alpha.md (stack_probe_internal): Rename
            from "probe_stack".  Update all callers.
    
    From-SVN: r259330

commit 0128fb778528b508014537aa64913fd8710663f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 11 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259305

commit 56237495fdbeb7da282c29798839a3455837e36c
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Tue Apr 10 18:55:55 2018 +0200

    [PR target/85056] Address -Wmaybe-uninitialized diagnostic
    
            gcc/testsuite/
            * gcc.target/nvptx/pr85056.c (main): Initialize "sum".
    
    trunk r259288
    
    From-SVN: r259290

commit 68d980fc30076a1bd9a4e631fd226c020a95c142
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Apr 10 13:05:24 2018 +0000

    [AArch64] PR target/84748: Mark *compare_cstore<mode>_insn as clobbering CC reg
    
            Backport from mainline
            2018-03-08  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/84748
            * config/aarch64/aarch64.md (*compare_cstore<mode>_insn): Mark pattern
            as clobbering CC_REGNUM.
    
            * gcc.c-torture/execute/pr84748.c: New test.
    
    From-SVN: r259271

commit 8cda4309bbcd9e64da9ac7a6cb409aa986572971
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 10 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r259261

commit c2d610e424fd680fae02a15d2541612c87f83640
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 9 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r259225

commit 6a0b8752d8b1cd48c090b56efa8420780a306d74
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 8 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r259213

commit 5b454f642c2b3797d79a488dc63f3d3351e232a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 7 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259198

commit 6dd85d69ed7c4c4cec950526e1289ff2b3b12ec0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Apr 6 22:33:55 2018 +0000

    re PR middle-end/85196 (ICE in extract_insn, at recog.c:2311: unrecognizable insn)
    
            PR target/85196
            * config/sparc/sparc.c (sparc_expand_move): Deal with symbolic operands
            based on LABEL_REF.  Remove useless assertion.
            (pic_address_needs_scratch): Fix formatting.
            (sparc_legitimize_pic_address): Minor tweaks.
            (sparc_delegitimize_address): Adjust assertion accordingly.
            * config/sparc/sparc.md (movsi_pic_label_ref): Change label_ref_operand
            into symbolic_operand.
            (movsi_high_pic_label_ref): Likewise.
            (movsi_lo_sum_pic_label_ref): Likewise.
            (movdi_pic_label_ref): Likewise.
            (movdi_high_pic_label_ref): Likewise.
            (movdi_lo_sum_pic_label_ref): Likewise.
    
    From-SVN: r259196

commit bce985bf580224e9e901cf8aa1ded5f31bcec101
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 6 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r259157

commit f5eb946329afb173c15e6755f8101cb56680e645
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Apr 5 22:32:18 2018 +0200

    re PR target/85193 (ICE: SIGSEGV in memory_operand at recog.c:1361 with -O2 -fno-tree-ccp -fno-tree-fre -mno-sse)
    
            PR target/85193
            * config/i386/i386.md (define_attr "memory"): Handle rotate1 type.
    
    testsuite/ChangeLog:
    
            PR target/85193
            * gcc.target/i386/pr85193.c: New test.
    
    From-SVN: r259153

commit 6cbd3954255f8d6ea9aa725e52942d46401b908a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 5 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259109

commit 888e7f1049203f0c5b0b0bae7cdd76b80439c498
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 4 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r259062

commit 0ef40c67e61ce788713b722c14f6b2247bd4b767
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 3 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r259022

commit 2d3c8e7343b25620fd2762c95769824502a4d3ea
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 2 18:54:20 2018 -0500

    backport: re PR target/84912 (__builtin_divde* produce Internal Compiler Error when compiled -m32)
    
    gcc/
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * config/rs6000/rs6000.h: Update copyright date.
            (RS6000_BTM_POWERPC64): New define.
            (RS6000_BTM_COMMON): Add RS6000_BTM_POWERPC64.
            * config/rs6000/rs6000.c: Update copyright date.
            (rs6000_builtin_mask_calculate): Add support for RS6000_BTM_POWERPC64.
            (rs6000_invalid_builtin): Add handling for RS6000_BTM_POWERPC64
            (rs6000_builtin_mask_names): Add RS6000_BTM_POWERPC64.
            * config/rs6000/rs6000-builtin.def: Update copyright date.
            (BU_P7_POWERPC64_MISC_2): New macro definition.
            (DIVDE): Use it.
            (DIVDEU): Likewise.
    
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * config/rs6000/rs6000-builtin.def (DIVWEO): Delete macro expansion.
            (DIVWEUO): Likewise.
            (DIVDEO): Likewise.
            (DIVDEUO): Likewise.
            * config/rs6000/rs6000.c (builtin_function_type): Remove support for
            DIVWEUO and DIVDEUO.
            * config/rs6000/rs6000.md: Update copyright date.
            (UNSPEC_DIVEO, UNSPEC_DIVEUO): Delete unspecs.
            (UNSPEC_DIV_EXTEND): Remove deleted unspecs.
            (div_extend): Likewise.
            * doc/extend.texi: Update copyright date.
            (__builtin_divweo): Remove documentation for deleted builtin function.
            (__builtin_divweuo): Likewise.
            (__builtin_divdeo): Likewise.
            (__builtin_divdeuo): Likewise.
    
    gcc/testsuite/
            Backport from mainline
            2018-03-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84912
            * gcc.target/powerpc/extend-divide-1.c (div_weo): Remove test for
            deleted builtin function.
            (div_weuo): Likewise.
            * gcc.target/powerpc/extend-divide-2.c (div_deo): Likewise.
            (div_deuo): Likewise.
    
    From-SVN: r259021

commit 7c05c7f7c39a01d91e4e0112fcff43f29a2110a3
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Mon Apr 2 12:09:48 2018 +0000

    i386: Enable AVX/AVX512 features only if supported by OSXSAVE
    
    Enable AVX and AVX512 features only if their states are supported by
    OSXSAVE.
    
            Backport from mainline
            PR target/85100
            * config/i386/cpuinfo.c (XCR_XFEATURE_ENABLED_MASK): New.
            (XSTATE_FP): Likewise.
            (XSTATE_SSE): Likewise.
            (XSTATE_YMM): Likewise.
            (XSTATE_OPMASK): Likewise.
            (XSTATE_ZMM): Likewise.
            (XSTATE_HI_ZMM): Likewise.
            (XCR_AVX_ENABLED_MASK): Likewise.
            (XCR_AVX512F_ENABLED_MASK): Likewise.
            (get_available_features): Enable AVX and AVX512 features only
            if their states are supported by OSXSAVE.
    
    From-SVN: r259007

commit ad96bffb19f077b01343dd2f1a4df0511c67c414
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 2 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r259000

commit 0703e463fd1a57853559f8d038a65daf14a568ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 1 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r258991

commit ae264aae88f26e5d46f7565034a74d97ee4d2955
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 31 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r258984

commit 6db42a1dee0ef03bd55ac8654fcdce64c5e3446f
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Fri Mar 30 08:47:23 2018 -0700

    re PR target/85056 ([nvptx] wrong declaration of external arrays)
    
    PR target/85056
    
            Backport from mainline
            2018-03-27  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/85056
    
            gcc/
            * config/nvptx/nvptx.c (nvptx_assemble_decl_begin): Add '[]' to
            extern array declarations.
    
            gcc/testsuite/
            * testsuite/gcc.target/nvptx/pr85056.c: New test.
            * testsuite/gcc.target/nvptx/pr85056a.c: New test.
    
    From-SVN: r258978

commit 886730c68d6a992cda255df1909723253346f298
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 30 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258968

commit 19e4b85acec8579c50185d780d5e9fb3d00c3a8a
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Thu Mar 29 17:10:22 2018 +0300

    Implement P0962
    
    Backport from mainline
    2018-03-23  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            Implement P0962
            * parser.c (cp_parser_perform_range_for_lookup): Change
            the condition for deciding whether to use members.
    
    From-SVN: r258956

commit 539aec374ed13fc7ff0e61a01874c7b24350b6af
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Thu Mar 29 09:27:53 2018 +0000

    [ARM][PR target/84826] Fix ICE in extract_insn, at recog.c:2304 on
    arm-linux-gnueabihf
    
    This patch backports r258777 and r258805 to gcc-7-branch
    and gcc-6-branch. The same ICE occurs in both the branches with
    -fstack-check. Thus the test case directive has been changed.
    
    The discussion on the patch that went into trunk is:
    https://gcc.gnu.org/ml/gcc-patches/2018-03/msg01120.html
    
    ChangeLog entries:
    
    *** gcc/ChangeLog ***
    
    2018-03-29  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline
            2018-03-22  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * config/arm/arm.h (machine_function): Add static_chain_stack_bytes.
            * config/arm/arm.c (arm_compute_static_chain_stack_bytes): Avoid
            re-computing once computed.
            (arm_expand_prologue): Compute machine->static_chain_stack_bytes.
            (arm_init_machine_status): Initialize
            machine->static_chain_stack_bytes.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-03-29  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.target/arm/pr84826.c: Change dg-option to -fstack-check.
    
            Backport from mainline
            2018-03-23  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * gcc.target/arm/pr84826.c: Add dg directive.
    
            Backport from mainline
            2018-03-22  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/84826
            * gcc.target/arm/pr84826.c: New test.
    
    From-SVN: r258949

commit f61c05f51cead1e90c19dbc4a7080b67f6419e13
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 29 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258944

commit 6a4af2bed61a320c5b720611e59288090f9bea11
Author: Carl Love <cel@us.ibm.com>
Date:   Wed Mar 28 21:04:55 2018 +0000

    crypto-builtin-1-runnable: Add p8vector_hw to dg-do run.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-28  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-1-runnable:  Add
            p8vector_hw to dg-do run.
    
    From-SVN: r258938

commit f23c4ba80aa3f1031fdf622d6096ff291139b94c
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Mar 28 17:41:51 2018 +0000

    re PR fortran/85084 (ICE: out of memory allocating 18446744073709551600 bytes ...)
    
    2018-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85084
            Backport from trunk.
            * frontend-passes.c (gfc_run_passes): Do not run front-end
            optimizations if a previous error occurred.
    
    2018-03-28  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/85084
            Backport from trunk.
            * gfortran.dg/matmul_rank_1.f90: New test.
    
    From-SVN: r258927

commit b10d4e2f653f0acfc7af9d57361fb1a370ec90f7
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Wed Mar 28 10:38:36 2018 +0000

    [arm] PR target/85026: Fix ldrsh length estimate in Thumb state
    
            Backport from mainline
            2018-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/85026
            * config/arm/arm.md (unaligned_loadhis): Remove first alternative.
            Clean up attributes.
    
            * g++.dg/pr85026.C: New test.
    
    From-SVN: r258918

commit 51c844767cc91ed3d89b8fdbe97e81d257953077
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 28 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258910

commit afeb7f8c118fe20c18ce846b12e0ce66f10890c0
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Mar 28 01:28:25 2018 +0200

    rs6000: -mreadonly-in-sdata (PR82411)
    
    This adds a new option -mreadonly-in-sdata (on by default) that
    controls whether readonly data can be put in sdata.  (For EABI this
    does nothing, readonly data is put in sdata2 as usual).
    
    
            Backport from mainline
            2018-03-08  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/82411
            * config/rs6000/rs6000.c (rs6000_elf_in_small_data_p): Don't put
            readonly data in sdata, if that is disabled.
            * config/rs6000/sysv4.opt (mreadonly-in-sdata): New option.
            * doc/invoke.texi (RS/6000 and PowerPC Options): Document
            -mreadonly-in-sdata option.
    
    
    gcc/testsuite/
            Backport from mainline
            2018-03-08  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/82411
            * gcc.target/powerpc/ppc-sdata-2.c: Skip if -mno-readonly-in-sdata.
    
    From-SVN: r258909

commit f1d23df3da72fcb33b3a505c92d97974f0253e2d
Author: Carl Love <cel@us.ibm.com>
Date:   Tue Mar 27 15:04:27 2018 +0000

    backport: r6000.c (rtx_is_swappable_p): Add case UNSPEC_VPERMXOR.
    
    gcc/ChangeLog:
    
    2018-03-27  Carl Love  <cel@us.ibm.com>
    
            Backport from mainline
            2018-03-14  Carl Love  <cel@us.ibm.com>
    
            * config/rs6000/r6000.c (rtx_is_swappable_p): Add case UNSPEC_VPERMXOR.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-27  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/crypto-builtin-1-runnable.c: New test file.
    
    From-SVN: r258887

commit ddd042ed4c27c9c73039004d20ccffa1f67f0393
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Tue Mar 27 13:40:56 2018 +0000

    [ARM][PR82989] Fix unexpected use of NEON instructions for shifts
    
    This is a backport of r258677 and r258723 of trunk.
    
    *** gcc/ChangeLog ***
    
    2018-03-27  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline:
            2018-03-20  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * config/arm/neon.md (ashldi3_neon): Update ?s for constraints
            to favor GPR over NEON registers.
            (<shift>di3_neon): Likewise.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-03-27  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from mainline:
            2018-03-20  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * gcc.target/arm/pr82989.c: New test.
    
            Backport from mainline:
            2018-03-21  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82989
            * gcc.target/arm/pr82989.c: Change dg scan-assembly directives.
    
    From-SVN: r258884

commit 938cc4178ba06cd704310099379d18d225eeb348
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Mar 27 13:07:22 2018 +0000

    [arm] PR target/82518: Return false in ARRAY_MODE_SUPPORTED_P for BYTES_BIG_ENDIAN
    
            Backport from mainline
            2018-03-20  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/82518
            * config/arm/arm.c (arm_array_mode_supported_p): Return false for
            BYTES_BIG_ENDIAN.
    
            * lib/target-supports.exp (check_effective_target_vect_load_lanes):
            Disable for armeb targets.
            * gcc.target/arm/pr82518.c: New test.
    
    From-SVN: r258879

commit 7dd02cdf00b9727301622cd27374a04bd88a791e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 27 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258867

commit ab81e2423834f20a7df45c084f9aee23350cb09c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 26 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258847

commit de2c6a7c30eede2cc7544643393f93ce0c06d8ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 25 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258836

commit 48a139230da67c5b8ec32158d29d1965a2edc174
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 24 00:16:09 2018 +0000

    Daily bump.
    
    From-SVN: r258829

commit 554add142ef75ff6f032040ea4743f05ccfb442a
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 23 08:57:09 2018 -0400

    PR c++/78489 - Substitution in wrong order
    
            PR c++/84489
            * pt.c (type_unification_real): Revert last two changes.
    
    From-SVN: r258802

commit 99101f0127bd06f5e8dacb5d4c3f0ef67449b52b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 23 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r258787

commit 724d06dd030aaa271e1583dfc9c6ecc541ddba48
Author: Tom de Vries <tom@codesourcery.com>
Date:   Thu Mar 22 11:01:15 2018 +0000

    backport "[tail-merge] Don't merge bbs with bb_has_abnormal_pred"
    
    2018-03-22  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2018-03-22  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/84956
            * tree-ssa-tail-merge.c (find_clusters_1): Skip bbs with
            bb_has_abnormal_pred.
    
            * gcc.dg/pr84956.c: New test.
    
    From-SVN: r258762

commit ad9439a232a20172f6d8d1066182f7267d309676
Author: Tom de Vries <vries@gcc.gnu.org>
Date:   Thu Mar 22 11:01:03 2018 +0000

    Undo commit r258760
    
    From-SVN: r258761

commit add53eac3dda7fb2dc973ceac00afe7dbb458fe0
Author: Tom de Vries <vries@gcc.gnu.org>
Date:   Thu Mar 22 10:44:51 2018 +0000

    Backport "Require effective target global_constructor for two testcases"
    
    2017-03-27  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2017-03-24  Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/80092
            * gcc.dg/tls/emutls-2.c:  Add dg-require-effective-target
            global_constructor.
    
    From-SVN: r258760

commit f8df44cc5a64feb255976b1af1d1749d723fc54a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 22 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r258752

commit 514d7d598cc01cc653500b8749e733f76a5ef9f4
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Mar 21 01:34:01 2018 +0000

    2018-03-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            ChangeLog entries for r258700.
    
    From-SVN: r258701

commit 6d36ad9ba5d2e03b79039f4479d256526bd12d44
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Mar 21 01:27:42 2018 +0000

    re PR fortran/85001 (ICE in gfc_build_array_type, at fortran/trans-types.c:1420)
    
    2018-03-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85001
            * interface.c (symbol_rank): Remove bogus null pointer check that
            crept in when translating a ternary operator into an if-else
            constructor.
    
    2018-03-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/85001
            * gfortran.dg/interface_41.f90: New test.
    
    From-SVN: r258700

commit c34a93b0e3da325cc144801ebcc03f7e12cdf250
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 21 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258695

commit d08335d9715e6676a4980adb1191df7b82120b18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 20 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258668

commit b4d6b8900121e09eb836d0f481a22ccbafd1c9e1
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Mar 19 22:49:33 2018 +0000

    re PR fortran/84931 (Expansion of array constructor with constant implied-do-object goes sideways)
    
    2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84931
            Backport from trunk
            * simplify.c (gfc_convert_constant): Correctly handle iterators
            for type conversion.
    
    2018-03-19  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/84931
            Backport from trunk
            * gfortran.dg/array_constructor_52.f90: New test.
    
    From-SVN: r258667

commit 1047bde38413e3d04dbe9aa44559b3ad111d363f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Mar 19 19:14:06 2018 +0000

    re PR fortran/65453 (ICE in build_function_decl, at fortran/trans-decl.c:2001)
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65453
            * decl.c (get_proc_name): Catch clash between a procedure statement
            and a contained subprogram
    
    2018-03-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/65453
            * gfortran.dg/pr65453.f90: New test.
    
    From-SVN: r258657

commit 3709cdd3e3158c5911552d9e609d785570cea9eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 19 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r258638

commit d1d266a4bb7e5983e459325e8dd20f4469121532
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 18 22:13:04 2018 +0000

    backport: pa.c (pa_callee_copies): New function.
    
            Backport from mainline
            2016-12-11  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.c (pa_callee_copies): New function.
            * config/pa/pa.opt (mcaller-copies): New option.
            * doc/invoke.texi (mcaller-copies): Document option.
    
    From-SVN: r258635

commit f04066f9ca7bbebfcf0b49fa2114111d1f0122b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 18 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258624

commit ac740293791610120ed5bc644d41ec3d72d4af2e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 17 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r258615

commit 8519b52c1861201fa1481113fc97b4816316c89f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 16 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r258577

commit 3d1b2fc743167499c873ad0f4b2df54fcc630427
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 15 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258544

commit 3b696e6c9cb3b7c506bc3b79b9f981d1b811e68e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Mar 14 23:55:02 2018 +0000

    re PR target/83451 (FAIL: gfortran.dg/matmul_10.f90   -O3 -fomit-frame-pointer -funroll-loops -fpeel-loops -ftracer -finline-functions (ICE))
    
            PR target/83451
            * config/pa/pa.c (pa_emit_move_sequence):  Always emit secondary reload
            insn for floating-point loads and stores.
    
    From-SVN: r258543

commit a7d2b3c7c2c9ce22fe514f759f1ae07966145c1e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 14 00:16:18 2018 +0000

    Daily bump.
    
    From-SVN: r258506

commit bac559078d3f96786fa027e1f8e4cdbdedcdfd32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 13 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r258472

commit c4d9764ba8a77c4094ae7ed0b41039eac2fc2eb7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Mar 12 22:35:12 2018 +0000

    Fix spelling of -mclflushopt in manual
    
            * doc/invoke.texi (-mclflushopt): Fix spelling of option.
    
    From-SVN: r258465

commit 851b57408b2d08f734eec70a988be5e5da6fbfee
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Mar 12 18:26:28 2018 +0000

    re PR fortran/83939 (Constraint C1290 (elemental function cannot be allocatable) not enforced)
    
    2018-03-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83939
            * resolve.c (resolve_fl_procedure): Enforce F2018:C15100.
    
    2018-03-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83939
            * gfortran.dg/pr83939.f90
    
    From-SVN: r258457

commit 14b0aceb8a8999741401b64d64b4a7998ec66c21
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 12 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r258439

commit c61d8aca7c7042d7ad4fc9fa45ceb4097d3d8c1e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:44:48 2018 +0000

    backport: re PR target/83984 (ld: The value 0x8000000000005 does not fit when applying the relocation DIR21L)
    
            Backport from mainline
            2018-02-14  John David Anglin  <danglin@gcc.gnu.org>
    
            PR target/83984
            * config/pa/pa.md: Load address of PIC label using the linkage table
            if the label is nonlocal.
    
    From-SVN: r258433

commit 5da1312cf939a803b9fa358f2edd2427a02b4499
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:38:50 2018 +0000

    backport: fptr.c (_dl_read_access_allowed): New.
    
            Backport from mainline
            2018-03-06  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/fptr.c (_dl_read_access_allowed): New.
            (__canonicalize_funcptr_for_compare): Use it.
    
    From-SVN: r258431

commit 7c1711d0ae3a0c5225a512fb0fba9f5f7b47a768
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Mar 11 14:33:56 2018 +0000

    backport: pa.h (ASM_GENERATE_INTERNAL_LABEL): Revise to use sprint_ul.
    
            Backport from mainline
            2018-03-06  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.h (ASM_GENERATE_INTERNAL_LABEL): Revise to use
            sprint_ul.
            (ASM_OUTPUT_ADDR_VEC_ELT): Revise for above change.
            (ASM_OUTPUT_ADDR_DIFF_ELT): Likewise.
            * config/pa/pa64-hpux.h (ASM_GENERATE_INTERNAL_LABEL): Revise as above.
    
    From-SVN: r258429

commit 42df20a73e29889814273f6b0bc7bfd8a74aa3a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 11 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258421

commit 57b474bc42dcab6cacaa34ef1fa2e945a65fd90f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Mar 10 19:00:49 2018 +0000

    re PR fortran/84734 (Compiling codes with insane array dimensions gives an ICE after r257971)
    
    2018-03-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84734
            * arith.c (check_result, eval_intrinsic):  If result overflows, pass
            the expression up the chain instead of a NULL pointer.
    
    2018-03-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84734
            * gfortran.dg/pr84734.f90: New test.
    
    From-SVN: r258419

commit 42f30c8eae5e8ce19e83c8cf7a9a982c6f370e6a
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Sat Mar 10 18:45:55 2018 +0000

    backport: re PR other/82352 (comdat-local function called by void h::i() outside its comdat)
    
    Backport r256266 from mainline
    
            Backport from mainline
            2018-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/82352
            * g++.dg/ipa/pr82352.C (size_t): Define to __SIZE_TYPE__ instead of
            long unsigned int.
    
    From-SVN: r258418

commit 947bbe11df57c70085578f381d952e84347dd286
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 9 22:35:25 2018 -0500

    PR c++/84785 - ICE with alias template and default targs.
    
            * pt.c (type_unification_real): Set processing_template_decl if
            saw_undeduced == 1.
    
    From-SVN: r258410

commit d0225a5d011febd6a708adedce78bdccb4262966
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 10 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258403

commit b916fbb01ee90c400dc59d94029128bd66ac45c2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 9 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258372

commit 031d441b5ac5658fe54e40c12dcbf9580f4a4398
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Mar 8 19:06:57 2018 +0000

    [multiple changes]
    
    2018-03-08 Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64124
            PR fortran/70409
            * decl.c (gfc_match_char_spec): Try to reduce a charlen to a constant.
    
    2018-03-08  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/64124
            PR fortran/70409
            * gfortran.dg/pr64124.f90: New tests.
            * gfortran.dg/pr70409.f90: New tests.
    
    From-SVN: r258368

commit e2c056a0e5d22c3ecb89393dd1e750c090234177
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Mar 8 09:56:45 2018 +0100

    Backport r243662
    
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/77844
            * valtrack.c: Include rtl-iter.h.
            (struct rtx_subst_pair): Add insn field.
            (propagate_for_debug_subst): If pair->to contains at least 2
            regs, create a DEBUG_INSN with a debug temp before pair->insn
            and replace from with the debug temp instead of pair->to.
            (propagate_for_debug): Initialize p.insn.
            * combine.c (insn_uid_check): New inline function.
            (INSN_COST, LOG_LINKS): Use it instead of INSN_UID.
            (find_single_use, combine_instructions,
            cant_combine_insn_p, try_combine): Use NONDEBUG_INSN_P instead of
            INSN_P.
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/77844
            * g++.dg/opt/pr77844.C: New test.
    
    From-SVN: r258359

commit 32aefe59bfc5c2f40e45b446bc2ddb40b23bdd9d
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Mar 8 09:56:20 2018 +0100

    Backport r256226
    
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-04  Martin Liska  <mliska@suse.cz>
    
            PR ipa/82352
            * ipa-icf.c (sem_function::merge): Do not cross comdat boundary.
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-04  Martin Liska  <mliska@suse.cz>
    
            PR ipa/82352
            * g++.dg/ipa/pr82352.C: New test.
    
    From-SVN: r258358

commit 36dfe5f1e5aa0b278e18a0cd603a3040b464b5b6
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Mar 8 09:55:59 2018 +0100

    Backport r254257
    
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-31  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/82633
            * doc/gcov.texi: Document -fkeep-{static,inline}-functions and
            their interaction with GCOV infrastructure.
            * configure.ac: Add -fkeep-{inline,static}-functions to
            coverage_flags.
            * configure: Regenerate.
    
    From-SVN: r258357

commit 1d95effe9cbb853fa2e8586606531367199b8420
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Mar 8 09:52:39 2018 +0100

    Backport r254137
    
    2018-03-08  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-27  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/82457
            * doc/invoke.texi: Document that one needs a non-strict ISO mode
            for fork-like functions to be properly instrumented.
    
    From-SVN: r258356

commit 0a551b46cafff249546d0b1ff06908945593ff5a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 8 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258343

commit 68a67459957bfdeda55088b32bb90447cfdcff52
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Wed Mar 7 13:10:35 2018 +0000

    S/390: Disable branch prediction
    
    gcc/ChangeLog:
    
    2018-03-07  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-opts.h (enum indirect_branch): Define.
            * config/s390/s390-protos.h (s390_return_addr_from_memory)
            (s390_indirect_branch_via_thunk)
            (s390_indirect_branch_via_inline_thunk): Add function prototypes.
            (enum s390_indirect_branch_type): Define.
            * config/s390/s390.c (struct s390_frame_layout, struct
            machine_function): Remove.
            (indirect_branch_prez10thunk_mask, indirect_branch_z10thunk_mask)
            (indirect_branch_table_label_no, indirect_branch_table_name):
            Define variables.
            (INDIRECT_BRANCH_NUM_OPTIONS): Define macro.
            (enum s390_indirect_branch_option): Define.
            (s390_return_addr_from_memory): New function.
            (s390_handle_string_attribute): New function.
            (s390_attribute_table): Add new attribute handler.
            (s390_execute_label): Handle UNSPEC_EXECUTE_JUMP patterns.
            (s390_indirect_branch_via_thunk): New function.
            (s390_indirect_branch_via_inline_thunk): New function.
            (s390_function_ok_for_sibcall): When jumping via thunk disallow
            sibling call optimization for non z10 compiles.
            (s390_emit_call): Force indirect branch target to be a single
            register.  Add r1 clobber for non-z10 compiles.
            (s390_emit_epilogue): Emit return jump via return_use expander.
            (s390_reorg): Handle JUMP_INSNs as execute targets.
            (s390_option_override_internal): Perform validity checks for the
            new command line options.
            (s390_indirect_branch_attrvalue): New function.
            (s390_indirect_branch_settings): New function.
            (s390_set_current_function): Invoke s390_indirect_branch_settings.
            (s390_output_indirect_thunk_function):  New function.
            (s390_code_end): Implement target hook.
            (s390_case_values_threshold): Implement target hook.
            (TARGET_ASM_CODE_END, TARGET_CASE_VALUES_THRESHOLD): Define target
            macros.
            * config/s390/s390.h (struct s390_frame_layout)
            (struct machine_function): Move here from s390.c.
            (TARGET_INDIRECT_BRANCH_NOBP_RET)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP_THUNK)
            (TARGET_INDIRECT_BRANCH_NOBP_JUMP_INLINE_THUNK)
            (TARGET_INDIRECT_BRANCH_NOBP_CALL)
            (TARGET_DEFAULT_INDIRECT_BRANCH_TABLE)
            (TARGET_INDIRECT_BRANCH_THUNK_NAME_EXRL)
            (TARGET_INDIRECT_BRANCH_THUNK_NAME_EX)
            (TARGET_INDIRECT_BRANCH_TABLE): Define macros.
            * config/s390/s390.md (UNSPEC_EXECUTE_JUMP)
            (INDIRECT_BRANCH_THUNK_REGNUM): Define constants.
            (mnemonic attribute): Add values which aren't recognized
            automatically.
            ("*cjump_long", "*icjump_long", "*basr", "*basr_r"): Disable
            pattern for branch conversion.  Fix mnemonic attribute.
            ("*c<code>", "*sibcall_br", "*sibcall_value_br", "*return"): Emit
            indirect branch via thunk if requested.
            ("indirect_jump", "<code>"): Expand patterns for branch conversion.
            ("*indirect_jump"): Disable for branch conversion using out of
            line thunks.
            ("indirect_jump_via_thunk<mode>_z10")
            ("indirect_jump_via_thunk<mode>")
    
    2018-03-07  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/PR84295
            * config/s390/s390.c (s390_set_current_function): Invoke
            s390_indirect_branch_settings also if fndecl didn't change.
    
    gcc/testsuite/ChangeLog:
    
    2018-03-07  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-08  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/nobp-function-pointer-attr.c: New test.
            * gcc.target/s390/nobp-function-pointer-nothunk.c: New test.
            * gcc.target/s390/nobp-function-pointer-z10.c: New test.
            * gcc.target/s390/nobp-function-pointer-z900.c: New test.
            * gcc.target/s390/nobp-indirect-jump-attr.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-attr.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-z10.c: New test.
            * gcc.target/s390/nobp-indirect-jump-inline-z900.c: New test.
            * gcc.target/s390/nobp-indirect-jump-nothunk.c: New test.
            * gcc.target/s390/nobp-indirect-jump-z10.c: New test.
            * gcc.target/s390/nobp-indirect-jump-z900.c: New test.
            * gcc.target/s390/nobp-return-attr-all.c: New test.
            * gcc.target/s390/nobp-return-attr-neg.c: New test.
            * gcc.target/s390/nobp-return-mem-attr.c: New test.
            * gcc.target/s390/nobp-return-mem-nothunk.c: New test.
            * gcc.target/s390/nobp-return-mem-z10.c: New test.
            * gcc.target/s390/nobp-return-mem-z900.c: New test.
            * gcc.target/s390/nobp-return-reg-attr.c: New test.
            * gcc.target/s390/nobp-return-reg-mixed.c: New test.
            * gcc.target/s390/nobp-return-reg-nothunk.c: New test.
            * gcc.target/s390/nobp-return-reg-z10.c: New test.
            * gcc.target/s390/nobp-return-reg-z900.c: New test.
            * gcc.target/s390/nobp-table-jump-inline-z10.c: New test.
            * gcc.target/s390/nobp-table-jump-inline-z900.c: New test.
            * gcc.target/s390/nobp-table-jump-z10.c: New test.
            * gcc.target/s390/nobp-table-jump-z900.c: New test.
    
    2018-03-07  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-02-09  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/PR84295
            * gcc.target/s390/pr84295.c: New test.
    
    From-SVN: r258335

commit 40f66f29e17ee05ec5dd2e48b1eb74e38fa76ee9
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:49:47 2018 +0100

    Backport r257842
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-20  Martin Liska  <mliska@suse.cz>
    
            PR c/84310
            PR target/79747
            * final.c (shorten_branches): Build align_tab array with one
            more element.
            * opts.c (finish_options): Add alignment option limit check.
            (MAX_CODE_ALIGN): Likewise.
            (MAX_CODE_ALIGN_VALUE): Likewise.
            * doc/invoke.texi: Document maximum allowed option value for
            all -falign-* options.
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-20  Martin Liska  <mliska@suse.cz>
    
            PR c/84310
            PR target/79747
            * gcc.target/i386/pr84310.c: New test.
            * gcc.target/i386/pr84310-2.c: Likewise.
    
    From-SVN: r258332

commit 6044d85ce26047bc2a32fbae479b1768baf69dfc
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:49:11 2018 +0100

    Backport r257803
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-19  Martin Liska  <mliska@suse.cz>
    
            PR other/80589
            * doc/invoke.texi: Fix typo.
            * params.def (PARAM_MAX_LOOP_HEADER_INSNS): Likewise.
    
    From-SVN: r258331

commit c0c453c9dbbc6bd1f25b15d052aef4a8fd4d354f
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:48:44 2018 +0100

    Backport r257384
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-05  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/84137
            * doc/gcov.texi: Fix typo in documentation.
    
    From-SVN: r258330

commit 8d7e972aaa64d69c6af4daa08fa968fb6dc006e0
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:48:02 2018 +0100

    Backport r257383
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-05  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/83879
            * doc/gcov.texi: Document necessity of --dynamic-list-data when
            using dlopen functionality.
    
    From-SVN: r258329

commit 7fefe0141dc81d1c2bae33015133a061bda5ea9b
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:47:46 2018 +0100

    Backport r256989
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-23  Martin Liska  <mliska@suse.cz>
    
            PR lto/81440
            * lto-symtab.c (lto_symtab_merge): Handle and do not warn about
            trailing arrays at the end of a struct.
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-23  Martin Liska  <mliska@suse.cz>
    
            PR lto/81440
            * gcc.dg/lto/pr81440.h: New test.
            * gcc.dg/lto/pr81440_0.c: New test.
            * gcc.dg/lto/pr81440_1.c: New test.
    
    From-SVN: r258328

commit 662f0539e91e3ef32518a5e3300a1a9c69074f2f
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:47:11 2018 +0100

    Backport r255818
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-12-19  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/82675
            * loop-unroll.c (unroll_loop_constant_iterations): Allocate one
            more element in sbitmap.
    
    From-SVN: r258327

commit d44d45d7b3ecee2fbec1a0e64ea71fcaa7466e45
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:46:50 2018 +0100

    Fix IPA profile merging, fixed in trunk with r253910.
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-03-05  Martin Liska  <mliska@suse.cz>
    
            * ipa-utils.c (ipa_merge_profiles): Do not merge alias or
            a function without profile.
    
    From-SVN: r258326

commit 409b5381b4b1d6dab4edc41da4539c757e863c3e
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:46:21 2018 +0100

    Backport r257939
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto-partition.c (lto_balanced_map): Watch overflow.
    
    From-SVN: r258325

commit 05df2a0032aeea2badbf71c292a297f09c0834b2
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:46:01 2018 +0100

    Backport r257877
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-21  Jan Hubicka  <hubicka@ucw.cz>
    
            PR c/84229
            * ipa-cp.c (determine_versionability): Do not version functions caling
            va_arg_pack.
    
    From-SVN: r258324

commit c9fdaa4c15ce6db05b4647b0785a4de3d9e4a1e0
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:45:44 2018 +0100

    Backport r257490
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/81360
            * cgraph.h (symtab_node::output_to_lto_symbol_table_p): Declare
            * symtab.c: Include builtins.h
            (symtab_node::output_to_lto_symbol_table_p): Move here
            from lto-streamer-out.c:output_symbol_p.
            * lto-streamer-out.c (write_symbol): Turn early exit to assert.
            (output_symbol_p): Move all logic to symtab.c
            (produce_symtab): Update.
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-08  Jan Hubicka  <hubicka@ucw.cz>
    
            PR ipa/81360
            * lto.c (unify_scc): Register prevailing trees, not trees to be freed.
            (read_cgraph_and_symbols): Use
            symtab_node::output_to_lto_symbol_table_p.
    
    From-SVN: r258323

commit 4fb75a7a671ac10132e413ad766b1ce5921ffd15
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:44:36 2018 +0100

    Backport r257442
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto.c (register_resolution): Remove forgotten sanity check.
    
    From-SVN: r258322

commit 15970872b5f1fdc0a187762162a317426fdd342b
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:44:03 2018 +0100

    Backport r257412
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/81004
            * lto.c: Include builtins.h
            (register_resolution): Merge resolutions in case trees was
            merged across units.
            (lto_maybe_register_decl): Break out from ...
            (lto_read_decls): ... here.
            (unify_scc): Also register decls here.
            (read_cgraph_and_symbols): Sanity check that all resolutions was
            read.
    
    From-SVN: r258321

commit 7f7a5e0ba7b68c565abf9136b973cb3293ef6735
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:43:49 2018 +0100

    Backport r257343
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-02-02  Eric Botcazou  <ebotcazou@adacore.com>
    
            PR lto/83954
            * lto-symtab.c (warn_type_compatibility_p): Do not recurse into the
            component type of array types with non-aliased component.
    
    From-SVN: r258320

commit 04971ccc95566b206a1b87645cbb8435a0bd8037
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:43:23 2018 +0100

    Backport r257183
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/83954
            * lto-symtab.c (warn_type_compatibility_p): Silence false positive
            for type match warning on arrays of pointers.
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2018-01-30  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/83954
            * gcc.dg/lto/pr83954.h: New testcase.
            * gcc.dg/lto/pr83954_0.c: New testcase.
            * gcc.dg/lto/pr83954_1.c: New testcase.
    
    From-SVN: r258319

commit 78e766def613a6f8992213e1eea0b0742e49ca50
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 7 10:42:53 2018 +0100

    Backport r253729
    
    2018-03-07  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-10-13  Jan Hubicka  <hubicka@ucw.cz>
    
            * lto-lang.c (lto_post_options): Clean shlib flag when not doing PIC.
    
    From-SVN: r258318

commit 32a1f824d94ee6e482fe576f23acf22588ed1a22
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 7 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r258307

commit 0e73562555d20f659907370750f0c3b0715ff08d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Mar 6 19:30:41 2018 +0000

    re PR fortran/56667 (Syntax error causes misleading message: "Expected PARAMETER symbol in complex constant")
    
    2018-03-06  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56667
            * primary.c (match_sym_complex_part): Give the matcher for an implied
            do-loop a chance to run.
    
    2018-03-06  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/56667
            * gfortran.dg/implied_do_2.f90: New test.
            * gfortran.dg/coarray_8.f90: Update for new error message.
    
    From-SVN: r258283

commit c2eb303f884db168a3da5407b7dc31a9996f9faa
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Mar 6 12:21:50 2018 +0000

    trans.c (convert_with_check): Fix typo in the condition guarding the overflow check emitted for the upper...
    
            * gcc-interface/trans.c (convert_with_check): Fix typo in the condition
            guarding the overflow check emitted for the upper bound of a floating-
            point conversion.
    
    From-SVN: r258279

commit 47c23d20c56295628ea62a5b10d1ac9aab5a2e36
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 6 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r258265

commit 06381d0ac641d7644c90f75fddebc151acaed8c2
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Mar 5 09:28:15 2018 -0500

    PR c++/84686 - missing volatile loads.
    
            * cvt.c (convert_to_void): Call maybe_undo_parenthesized_ref.
    
    From-SVN: r258246

commit d42d8b73f3c8b09ca412746bce13914e8e9deb59
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 5 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258236

commit b56aa3378a35ea8bdd4f4e9bde7db7df244aa405
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Mar 4 05:11:31 2018 +0000

    re PR fortran/71085 (ICE with some intrinsic functions specifying array function result dimension)
    
    2018-03-03  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/71085
            * trans-expr.c (gfc_apply_interface_mapping_to_expr): Do not
            dereference NULL pointer.
    
    
    2018-03-03  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/71085
            * gfortran.dg/pr71085.f90: New test.
    
    From-SVN: r258230

commit 4951e3d1a70d33c97ac3c3ba803c5a8face8967f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 4 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r258225

commit 777f3ab8b874add3ba7db62629da396787bbdc53
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Mar 3 18:00:39 2018 +0000

    re PR fortran/78990 (ICE when assigning polymorphic array function result)
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78990
            * expr.c (gfc_is_class_array_function): Renamed from
            'gfc_is_alloc_class_array_function' and modified to return true
            for pointers as well as allocatable results.
            * gfortran.h : Change of name for prototype of above function.
            * trans-array.c (gfc_add_loop_ss_code): Force finalization of
            class array results.
            (build_class_array_ref): Change assertion into a condition.
            (build_class_array_ref): Set the se class_vptr for class array
            function results.
            (gfc_walk_function_expr): Reference gfc_is_class_array_function
            as above.
            * trans-decl.c (get_proc_result): Move it up before
            gfc_trans_deferred_vars.
            (gfc_trans_deferred_vars): Nullify explicit return class arrays
            on entry.
            * trans-expr.c (gfc_conv_class_to_class): Allow conversion of
            class array functions that have an se class_vptr and use it
            for the result vptr.
            (gfc_conv_subref_array_arg): Rename reference to the above
            function.
            (gfc_conv_procedure_call): Ditto. Add the se pre block to the
            loop pre block before the function is evaluated. Do not
            finalize class pointer results.
            (arrayfunc_assign_needs_temporary, gfc_trans_assignment_1) More
            renamed references.
            * trans-intrinsic.c (gfc_conv_intrinsic_size): Ditto.
    
    2018-03-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78990
            * gfortran.dg/class_67.f90: New test.
    
    From-SVN: r258217

commit 191fd139ce813674e99d99a4fb86625f506fe4b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 3 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258161

commit fc6e428fd1fcd7511e583952b3bd3656b468592e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Mar 2 23:52:06 2018 +0000

    PR libstdc++/84671 handle digit separators in duration literals
    
    Backport from mainline
    2018-03-02  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/84671
            * include/bits/parse_numbers.h (_Number_help): Add partial
            specialization to handle digit separators. Adjust partial
            specialization for recursion temrination to require _Pow == 1ULL.
            * testsuite/20_util/duration/literals/84671.cc: New
    
    From-SVN: r258159

commit 27664bbdeab6f5ced2c0fa58555da5ae060feeb6
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Mar 2 13:24:40 2018 -0500

    PR c++/84489 - dependent default template argument
    
            * pt.c (type_unification_real): Handle early substitution failure.
    
    From-SVN: r258152

commit 05ee440e2052158c474261e8be29aacb77f5b34a
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Fri Mar 2 09:40:04 2018 +0100

    [nvptx] Add support for CUDA 9
    
    Backport trunk r256891:
    
            gcc/
            2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/83790
            * config/nvptx/nvptx.c (output_init_frag): Don't use generic address
            spaces for function labels.
    
            gcc/testsuite/
            2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>
    
            PR target/83790
            * gcc.target/nvptx/indirect_call.c: New test.
    
    From-SVN: r258127

commit 272c32ef807c6cc7fe5d5028e999be9ef09eca44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 2 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r258118

commit e9412d10f8abda5712ecfb1f8b2387637591439f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 1 00:16:13 2018 +0000

    Daily bump.
    
    From-SVN: r258090

commit 7f0f8c372556275df873e859bb114a611505d01b
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Feb 28 16:34:56 2018 -0500

    PR c++/71784 - ICE with ref-qualifier and explicit specialization.
    
            * pt.c (determine_specialization): Check ref-qualifier.
    
    From-SVN: r258087

commit b90b3061fcfa83560ddbd5214470ef36f34de755
Author: Alan Modra <amodra@gmail.com>
Date:   Wed Feb 28 18:37:35 2018 +1030

    gcc testsuite changes for new linker messages
    
    GNU ld error messages have changed to comply with the GNU coding
    standards.
    
            * lib/prune.exp (prune_gcc_output): Match lower case "in function"
            GNU ld message.
            * g++.dg/other/anon5.C: Match lower case "bad value" GNU ld message.
    
    From-SVN: r258056

commit e6840f58cbbe20225734acf18e328689ae7d400b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 28 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258048

commit 6bf8026b3328985b91d4610323730a1145a2fae3
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 23:22:31 2018 -0500

    PR c++/84441 - ICE with base initialized from ?:
    
            * call.c (unsafe_copy_elision_p): Handle COND_EXPR.
    
    From-SVN: r258028

commit f0cbb20fd3322d3810b6f7bcef0f1dddf54a7830
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Feb 26 23:22:24 2018 -0500

    PR c++/84520 - ICE with generic lambda in NSDMI.
    
            * lambda.c (lambda_expr_this_capture): Don't look for fake NSDMI
            'this' in a generic lambda instantiation.
    
    From-SVN: r258027

commit 59f743ec77bb561668ddb7053859d85a514fabae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 27 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r258018

commit 886dfa728580732bc27fa931246970147e921d70
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 26 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r257976

commit 4c8e3a1097f98febe91afe8afcfdf1bd6b637f48
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Feb 25 17:32:36 2018 +0000

    re PR fortran/83633 (gfortran internal compiler error for explicit-shape array with non-constant bounds)
    
    2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83633
            * decl.c (variable_decl): Check that an explicit-shape-array with
            nonconstant bounds is allowed.
    
    2018-02-25  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83633
            * gfortran.dg/explicit_shape_1.f90: New test.
            * gfortran.dg/automatic_module_variable.f90: Update regex.
            * gfortran.dg/bad_automatic_objects_1.f90: Ditto.
    
    From-SVN: r257974

commit 4e55d7be87aa76ee586189c7e542a4ed9ba57556
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 25 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257965

commit e27fe0709d00ea1ce15c838b35547f0e48476939
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Feb 24 20:24:27 2018 +0000

    re PR fortran/30792 (DATA implied-do substring allowed with -std=f95/f2003)
    
    2018-02-24  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/30792
            * decl.c (gfc_match_data): Check for invalid substring in
            data-implied-do
    
    2018-02-24  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/30792
            * gfortran.dg/data_substring.f90: New test.
    
    From-SVN: r257964

commit 92b497bcc883784031464651e10be25642a61fec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 24 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257958

commit 6864b9f8bd204129b7c8939b9c800cf10eee3ab5
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri Feb 23 19:53:04 2018 +0000

    backport: re PR fortran/84506 (INQUIRE(pos=) always sets pos=0 with -fdefault-integer-8)
    
    2018-02-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/84506
            * trans-io.c (set_parameter_value_inquire): Adjust range check of
            negative unit values for kind=8 units to the kind=4 negative limit.
    
            * gfortran.dg/inquire_19.f90: New test.
    
    From-SVN: r257951

commit 3414ac756adff4fd0a59b4e6c3312510c6aaab37
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Feb 23 19:42:43 2018 +0000

    re PR fortran/84511 (Internal compiler error from directly printing return of C_LOC)
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84511
            * trans-io.c (transfer_expr): Deal with C_LOC in transfer statement.
    
    From-SVN: r257950

commit 09d92ba2e7a0ab6690e275b502c9d2bf349f4c56
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Feb 23 19:41:27 2018 +0000

    re PR fortran/84346 (Statement functions should not accept keywords)
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84346
            * interface.c (compare_actual_formal): Issue error if keyword is
            used in a statement function.
    
    2018-02-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/84346
            * gfortran.dg/statement_function_1.f90: Update test.
    
    From-SVN: r257949

commit 572e36f65e1f56bc53393d2bfc216df8b1592de3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 23 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257925

commit ed8ee37caded7962a326345be7744891c3ef05ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 22 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257885

commit 5d33e9c7ac81d7ace853d824b9dcb055be8e76e0
Author: Sudakshina Das <sudi.das@arm.com>
Date:   Wed Feb 21 12:50:31 2018 +0000

    Fix emit_store_flag_force () function to fix ICE in int_mode_for_mode,
    
    at stor-layout.c:403 with arm-linux-gnueabi.
    
    *** gcc/ChangeLog ***
    
    2018-02-21  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from trunk
            2018-01-10  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82096
            * expmed.c (emit_store_flag_force): Swap if const op0
            and change VOIDmode to mode of op0.
    
    *** gcc/testsuite/ChangeLog ***
    
    2018-02-21  Sudakshina Das  <sudi.das@arm.com>
    
            Backport from trunk
            2018-01-12  Sudakshina Das  <sudi.das@arm.com>
    
            * gcc.c-torture/compile/pr82096.c: Add dg-skip-if
            directive.
    
            Backport from trunk
            2018-01-10  Sudakshina Das  <sudi.das@arm.com>
    
            PR target/82096
            * gcc.c-torture/compile/pr82096.c: New test.
    
    From-SVN: r257871

commit a2edeca800407006413094116316a8cf757981a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 21 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r257866

commit 0fc817ebfcb8abdc2bed352fbee3c02190909365
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Feb 20 21:13:03 2018 +0000

    libgcc: xtensa: fix build with -mtext-section-literals
    
    libgcc/
    2018-02-20  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-02-20  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/ieee754-df.S (__adddf3_aux): Add
            .literal_position directive.
            * config/xtensa/ieee754-sf.S (__addsf3_aux): Likewise.
    
    From-SVN: r257864

commit c66ac2187f64c246e875c1e2e0d924b12304a551
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 20 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257833

commit 3e23bb29e29220f0c6d1c00e76ebac43568502c6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Feb 19 17:02:38 2018 +0000

    PR libstdc++/81797 Add .NOTPARALLEL to include/Makefile for darwin
    
    Backport from mainline
    2018-02-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81797
            * configure.ac (INCLUDE_DIR_NOTPARALLEL): Define.
            * configure: Regenerate.
            * include/Makefile.am (INCLUDE_DIR_NOTPARALLEL): Add .NOTPARALLEL when
            defined.
            * include/Makefile.in: Regenerate.
    
    From-SVN: r257811

commit 4d709fd5408b1562e40799efa7f2e8922f5ca59a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 19 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257798

commit 1f78359c1f5173dd739eb6b917f56547096ac416
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 18 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257785

commit 690e4f35daa268afaac1909fae82972395a10e4c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 17 00:16:11 2018 +0000

    Daily bump.
    
    From-SVN: r257776

commit 05b4a2f2200b766f5277e491135e24dc7e86916f
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 16 23:27:21 2018 +0000

    re PR target/84277 (A lot of new acats testsuite failures)
    
            PR ada/84277
            * gnat.dg/array11.adb (Array11): Tweak index and remove warning.
            * gnat.dg/dispatch1.adb: Rename into...
            * gnat.dg/disp1.adb: ...this.
            * gnat.dg/dispatch1_p.ads: Rename into...
            * gnat.dg/disp1_pkg.ads: ...this.
            * gnat.dg/disp2.adb: Rename into...
            * gnat.dg/dispatch2.adb: ...this.
            * gnat.dg/dispatch2_p.ads: Rename into...
            * gnat.dg/disp2_pkg.ads: ...this.
            * gnat.dg/dispatch2_p.adb: Rename into...
            * gnat.dg/disp2_pkg.adb: this.
            * gnat.dg/generic_dispatch.adb: Rename into...
            * gnat.dg/generic_disp.adb: this.
            * gnat.dg/generic_dispatch_p.ads: Rename into...
            * gnat.dg/generic_disp_pkg.ads: ...this.
            * gnat.dg/generic_dispatch_p.adb: Rename into...
            * gnat.dg/generic_disp_pkg.adb: ...this.
            * gnat.dg/null_pointer_deref1.adb (Null_Pointer_Deref1): Robustify.
            * gnat.dg/null_pointer_deref2.adb (Null_Pointer_Deref2): Likewise.
            * gnat.dg/object_overflow1.adb: Tweak index.
            * gnat.dg/object_overflow2.adb: Likewise.
            * gnat.dg/object_overflow3.adb: Likewise.
            * gnat.dg/object_overflow4.adb: Likewise.
            * gnat.dg/object_overflow5.adb: Likewise.
    
    From-SVN: r257775

commit c58d0290217b12c6a5e775e9f5103cdd3e73ccf6
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 16 16:34:57 2018 -0500

    PR c++/84151 - unnecessary volatile load with static member.
    
            * call.c (build_new_method_call_1): Avoid loading from a volatile
            lvalue used as the object argument for a static member function.
    
    From-SVN: r257768

commit a4df1e1c13babda1372b5b6ee3cc1bbc01c478a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 16 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257716

commit 2d67389e600aa34f8f7111d8b30d450f45500500
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Feb 15 19:57:46 2018 +0000

    backport: re PR target/84154 (PowerPC GCC 7 and 8 have regression in converting fp to short/char and returning it)
    
    2018-02-15  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-02-06  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/84154
            * config/rs6000/rs6000.md (su code attribute): Use "u" for
            unsigned_fix, not "s".
    
    From-SVN: r257707

commit bd5b0971f2434de4eb4794eb00f8f26b3e816987
Author: Aaron Sawdey <acsawdey@linux.vnet.ibm.com>
Date:   Thu Feb 15 18:36:20 2018 +0000

    backport: re PR debug/83758 (ICE building gccgo on powerpc64le --with-cpu=power8)
    
    2018-02-15  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            Back port from mainline
            2018-01-30  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            PR target/83758
            * config/rs6000/rs6000.c (rs6000_internal_arg_pointer): Only return
            a reg rtx.
    
    From-SVN: r257701

commit b6ee9d7d0b4f1486ea50a23ff6888d74379d4d81
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 15 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r257677

commit 5c0a40aec5ceeeb05e0efbf5cb35fdac04228225
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Wed Feb 14 14:03:21 2018 -0600

    backport: re PR target/84390 (test case gcc.target/powerpc/vsxcopy.c fails for gcc 7 and gcc 6 on power9)
    
            Backport from GCC 7 branch
            2018-02-14  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/84390
            * gcc.target/powerpc/vsxcopy.c: Also match lxv when compiling
            with -mcpu=power9.
    
    From-SVN: r257671

commit de1bc61caa2245ed2dacc834b9b5a35f74ed5018
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 14 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257649

commit 6e232404879a50974beeb2182780a81156cc753b
Author: Alastair McKinstry <alastair.mckinstry@sceal.ie>
Date:   Tue Feb 13 08:06:02 2018 +0000

    Make module files reproducible
    
    Using lbasename ensures that the build path does not end up in the
    module file.
    
    Regtested on x86_64-pc-linux-gnu. Backport from trunk.
    
    2018-02-13  Alastair McKinstry  <alastair.mckinstry@sceal.ie>
                Janne Blomqvist  <jb@gcc.gnu.org>
    
            * module.c (dump_module): Use lbasename to ensure that module
            files are reproducible.
    
    Co-Authored-By: Janne Blomqvist <jb@gcc.gnu.org>
    
    From-SVN: r257615

commit f5bb471339d83fa45d5ce3e8d1f7a090705012eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 13 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r257608

commit e38f293bec375d94eaefb3a43883f802d7b103f0
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Feb 12 20:27:11 2018 +0000

    re PR fortran/68560 (The test gfortran.dg/shape_8.f90 now fails when compiled with -flto)
    
    2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/68560
            * trans-intrinsic.c (gfc_conv_intrinsic_shape): New function.
            (gfc_conv_intrinsic_function): Call it.
    
    2018-02-12  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/68560
            * gfortran.dg/shape_9.f90: New test.
    
    From-SVN: r257603

commit 893698225b714ee0a9bdf28084fa1f7b0d45aa4e
Author: Francois-Xavier Coudert <fxcoudert@gcc.gnu.org>
Date:   Mon Feb 12 18:26:44 2018 +0000

    re PR fortran/35299 (scope of variables in statement function do not acquire rank from host)
    
    2018-02-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
    
            PR fortran/35299
            ChangeLog for r257566
            * gfortran.dg/statement_function_3.f: New test.
    
    2018-02-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>
    
            PR fortran/35299
            ChangeLog for r257566
            * resolve.c (resolve_formal_arglist): Update error message.
    
    From-SVN: r257597

commit 4b4977eef94db5e71c9beeb27eca8503c09afb30
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Feb 12 18:25:41 2018 +0000

    re PR fortran/54223 (Statement function statement with dummy arguments that are also OPTIONAL may crash in wrong calls)
    
    2018-02-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/54223
            PR fortran/84276
            * interface.c (compare_actual_formal): Add in_statement_function
            bool parameter.  Skip check of INTENT attribute for statement
            functions.  Arguments to a statement function cannot be optional,
            issue error for missing argument.
            (gfc_procedure_use, gfc_ppc_use, gfc_arglist_matches_symbol): Use
            in_statement_function.
    
    2018-02-12  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/54223
            PR fortran/84276
            * gfortran.dg/statement_function_1.f90: New test.
            * gfortran.dg/statement_function_2.f90: New test.
    
    From-SVN: r257596

commit 7dd5107c861206b7b3799cbce830d64ba658f65f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 12 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r257572

commit cc1fdae8b3f000fce669fc5554434fd61ecda144
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 11 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257557

commit 02129b54376bc8e0f7d45c3e69129d3e02580de0
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Feb 10 23:38:37 2018 +0000

    pa.c (hppa_profile_hook): Mark SYMBOL_REF for _mcount as function label.
    
            * config/pa/pa.c (hppa_profile_hook): Mark SYMBOL_REF for _mcount as
            function label.
    
    From-SVN: r257556

commit a5ac28769d0ee4ea18208a5f6374c11e538fc5ec
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Feb 10 20:04:59 2018 +0000

    backport: re PR middle-end/84089 (FAIL: g++.dg/cpp1y/lambda-generic-x.C  -std=gnu++14 (internal compiler error))
    
            Backport from mainline
            2018-02-01  Aldy Hernandez  <aldyh@redhat.com>
    
            PR target/84089
            * config/pa/predicates.md (base14_operand): Handle VOIDmode.
    
    From-SVN: r257553

commit c75b758409fc103595fb3110d0b023299b57661c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 10 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r257546

commit 81601a0dea4e71c2a763c1df1bfe4cc7e995b053
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 9 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257506

commit 4d5f6409e22cb1f3e5119b4e8eef70431ef54d71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 8 00:16:12 2018 +0000

    Daily bump.
    
    From-SVN: r257475

commit b957ec24e4566f84b17618216a54bab571fba33f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Feb 7 22:41:59 2018 +0000

    re PR fortran/82994 (ICE in gfc_match_deallocate, at fortran/match.c:4478)
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82994
            * match.c (gfc_match_deallocate): Check for NULL pointer.
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82994
            * gfortran.dg/deallocate_error_3.f90: New test.
            * gfortran.dg/deallocate_error_4.f90: New test.
    
    From-SVN: r257468

commit 8722e85489d26900dd3ff89535e4aa8ae6181731
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Feb 7 21:01:00 2018 +0000

    re PR fortran/82049 (ICE with character(*),parameter array constructor)
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82049
            * match.c (gfc_match_type_spec): If the charlen is non-NULL, then
            try to resolve it.  While here return early if possible.
    
    2018-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82049
            * gfortran.dg/assumed_charlen_parameter.f90: New test.
    
    From-SVN: r257461

commit f6beab3a994692a3bc57f3bf5b78be03d658dac9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 7 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r257433

commit 27da27a29effc405fa16c4ed1ef15cfb8144916e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 6 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257402

commit 7fe2eb5cd9d7531f0f57223ac1aaecb38f8dbbb2
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Feb 5 22:37:13 2018 +0000

    Disable SHF_MERGE on Solaris 10/x86 (PR bootstrap/84017)
    
            Backport from mainline
            2018-01-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR bootstrap/84017
            * configure.ac (gcc_cv_as_shf_merge): Disable on Solaris 10/x86.
            * configure: Regenerate.
    
    From-SVN: r257399

commit 9a29ea9325f0a8f00ac378ae0397e45edf2006d3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 5 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r257370

commit 936acd88b80e77d6fbae16c225793880a84656ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 4 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257360

commit f27bf29410def908e6074091d861fcbbd226ecbf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 3 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257353

commit aecc38641d08ff11999e1ffd40b13c0e6cbeee89
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 2 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r257320

commit f2c7c39542ae491bc364e3bdb7bfa4ef0cb601c0
Author: Renlin Li <renlin.li@arm.com>
Date:   Thu Feb 1 21:33:05 2018 +0000

    [PR83370][AARCH64]Use tighter register constraint for sibcall patterns.
    
    gcc/
    
            backport from mainline
            2018-02-01  Renlin Li  <renlin.li@arm.com>
    
            PR target/83370
            * config/aarch64/aarch64.c (aarch64_class_max_nregs): Handle
            TAILCALL_ADDR_REGS.
            (aarch64_register_move_cost): Likewise.
            * config/aarch64/aarch64.h (reg_class): Rename CALLER_SAVE_REGS to
            TAILCALL_ADDR_REGS.
            (REG_CLASS_NAMES): Likewise.
            (REG_CLASS_CONTENTS): Rename CALLER_SAVE_REGS to
            TAILCALL_ADDR_REGS. Remove IP registers.
            * config/aarch64/aarch64.md (Ucs): Update register constraint.
    
    gcc/testsuite/
    
            backport from mainline
            2018-02-01  Richard Sandiford  <richard.sandiford@linaro.org>
    
            PR target/83370
            * gcc.target/aarch64/pr83370.c: New.
    
    From-SVN: r257315

commit 4e0d4b6c25fc1ab7e1eb616ebbe3f2b87256a1e1
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Thu Feb 1 12:00:57 2018 +0000

    backport: re PR tree-optimization/82726 (ICE in verify_ssa during GIMPLE pass: pcom)
    
            Backport from mainline
            2017-11-15  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/82726
            PR tree-optimization/70754
            * tree-predcom.c (order_drefs_by_pos): New function.
            (combine_chains): Move code setting has_max_use_after to...
            (try_combine_chains): ...here.  New parameter.  Sort combined chains
            according to position information.
            (tree_predictive_commoning_loop): Update call to above function.
            (update_pos_for_combined_chains, pcom_stmt_dominates_stmt_p): New.
    
            testsuite
    
            Backport from mainline
            2017-11-15  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/82726
            * gcc.dg/tree-ssa/pr82726.c: New test.
    
            Backport from mainline
            2017-01-23  Bin Cheng  <bin.cheng@arm.com>
    
            PR tree-optimization/70754
            * gfortran.dg/pr70754.f90: New test.
    
    From-SVN: r257291

commit 4e6beb918b97a5e88ece846a922d0895f5ff93c8
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Feb 1 08:09:03 2018 +0000

    Guard against incomplete AVX512F support in Solaris as
    
            Backport from mainline
            2018-01-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * lib/target-supports.exp (check_effective_target_avx512f): Also
            check for __builtin_ia32_addsd_round,
            __builtin_ia32_getmantsd_round.
            * gcc.target/i386/i386.exp (check_effective_target_avx512f):
            Remove.
    
    From-SVN: r257283

commit f7b7ab6c7988f8da14bf31b53dd1759e3f0aa656
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 1 00:16:15 2018 +0000

    Daily bump.
    
    From-SVN: r257277

commit b1407a2475a7fb0970637724ce1a700930db51cb
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jan 31 18:56:11 2018 +0000

    backport: re PR bootstrap/80867 (gnat bootstrap broken on powerpc64le-linux-gnu with -O3)
    
    gcc/ChangeLog:
    
    2018-01-31  Richard Biener <rguenther@suse.de>
                Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline
            2018-01-29  Richard Biener <rguenther@suse.de>
                        Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            PR bootstrap/80867
            * tree-vect-stmts.c (vectorizable_call): Don't call
            targetm.vectorize_builtin_md_vectorized_function if callee is
            NULL.
    
    
    Co-Authored-By: Kelvin Nilsen <kelvin@gcc.gnu.org>
    
    From-SVN: r257252

commit 21b32e12246c229187e9789d13db33bcc2d95f93
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 31 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257213

commit dec5364bdf886698cd3cef0047e9144924cbe09a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 30 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r257168

commit 62a0b5d14cef0dda4433076be2995881f7a5ce3d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 29 14:44:48 2018 +0000

    PR libstdc++/83833 fix chi_squared_distribution::param(const param&)
    
    Backport from mainline
    2018-01-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83833
            * include/bits/random.h (chi_squared_distribution::param): Update
            gamma distribution parameter.
            * testsuite/26_numerics/random/chi_squared_distribution/83833.cc: New
            test.
    
    From-SVN: r257149

commit 294283102bda8fc1fd6bcb1e3203e9c349a18835
Author: Alan Modra <amodra@gmail.com>
Date:   Mon Jan 29 15:01:18 2018 +1030

    [PATCH] PR84033, powerpc64le -moptimize-swaps bad code with vec_vbpermq
    
    vbpermq produces its output in bits 48..63 of the target vector reg,
    so the output cannot be lane swapped.
    
    gcc/
            PR target/84033
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Exclude
            UNSPEC_VBPERMQ.
    gcc/testsuite/
            PR target/84033
            * gcc.target/powerpc/swaps-p8-46.c: New.
    
    Backport svn r257070
    
    From-SVN: r257137

commit d44be750d737e3d56f6310e240512f2c1d447758
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 29 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257132

commit 347ad14b44da286acbecdca16f2d8fea7c26724a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 28 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r257128

commit 97017e5b8a5207bb4da425d3351447a361b78a44
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 27 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257115

commit 8aef1e9a0bbef4ea92dbeff18e17069ff4944167
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 26 00:16:07 2018 +0000

    Daily bump.
    
    From-SVN: r257071

commit 16b5501a1337bf1b9819cb3d15ea16fcef5edeb0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 25 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257034

commit 3cc017d815042da573b9c8722b13d333274371c3
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Jan 24 21:12:55 2018 +0000

    backport: rs6000-p8swap.c (swap_feeds_both_load_and_store): New function.
    
    2018-01-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-p8swap.c (swap_feeds_both_load_and_store):
            New function.
            (rs6000_analyze_swaps): Mark a web unoptimizable if it contains a
            swap associated with both a load and a store.
    
    From-SVN: r257030

commit 460be8ba37969d26a808dabe6cacca26fb6342dd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 24 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r257006

commit cfa7d019375f9aba266ff5b7388039fc9896450b
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Tue Jan 23 21:54:09 2018 +0000

    libgcc: xtensa: fix NaN return from add/sub/mul/div helpers
    
    libgcc/
    2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>
    
            Backport from mainline
            2018-01-23  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/ieee754-df.S (__addsf3, __subsf3, __mulsf3)
            (__divsf3): Make NaN return value quiet.
            * config/xtensa/ieee754-sf.S (__adddf3, __subdf3, __muldf3)
            (__divdf3): Make NaN return value quiet.
    
    From-SVN: r257004

commit a5014b7479293a0a8d451f90fa63251f8bdd7c61
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Jan 23 12:18:25 2018 -0600

    backport: re PR target/83399 (Power8 ICE During LRA with 2-op rtl pattern for lvx instruction)
    
    gcc/
            Back port from mainline
            2018-01-10  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83399
            * config/rs6000/rs6000.c (print_operand) <'y'>: Use
            VECTOR_MEM_ALTIVEC_OR_VSX_P.
            * config/rs6000/vsx.md (*vsx_le_perm_load_<mode> for VSX_D): Use
            indexed_or_indirect_operand predicate.
            (*vsx_le_perm_load_<mode> for VSX_W): Likewise.
            (*vsx_le_perm_load_v8hi): Likewise.
            (*vsx_le_perm_load_v16qi): Likewise.
            (*vsx_le_perm_store_<mode> for VSX_D): Likewise.
            (*vsx_le_perm_store_<mode> for VSX_W): Likewise.
            (*vsx_le_perm_store_v8hi): Likewise.
            (*vsx_le_perm_store_v16qi): Likewise.
            (eight unnamed splitters): Likewise.
    
    gcc/testsuite/
            Back port from mainline
            2018-01-10  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/83399
            * gcc.target/powerpc/pr83399.c: New test.
    
    From-SVN: r256993

commit 9e647cbd90072ea075abff11801f505933c56eb1
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jan 23 15:07:00 2018 +0000

    backport: re PR target/83862 (powerpc: ICE in signbit testcase)
    
    [gcc]
    2018-01-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-01-22  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/83862
            * config/rs6000/rs6000-protos.h (rs6000_split_signbit): Delete,
            no longer used.
            * config/rs6000/rs6000.c (rs6000_split_signbit): Likewise.
            * config/rs6000/rs6000.md (signbit<mode>2): Change code for IEEE
            128-bit to produce an UNSPEC move to get the double word with the
            signbit and then a shift directly to do signbit.
            (signbit<mode>2_dm): Replace old IEEE 128-bit signbit
            implementation with a new version that just does either a direct
            move or a regular move.  Move memory interface to separate insns.
            Move insns so they are next to the expander.
            (signbit<mode>2_dm_mem_be): New combiner insns to combine load
            with signbit move.  Split big and little endian case.
            (signbit<mode>2_dm_mem_le): Likewise.
            (signbit<mode>2_dm_<su>ext): Delete, no longer used.
            (signbit<mode>2_dm2): Likewise.
    
    [gcc/testsuite]
    2018-01-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2018-01-22  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/83862
            * gcc.target/powerpc/pr83862.c: New test.
    
    From-SVN: r256987

commit 81ae57f6ca7d62faa1dd4b16ef45789eb3fd3ca5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 23 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256968

commit db2690d20776477b44e436348bd8783c2ee156f4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 22 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256936

commit b9a3520deb15ae5ba9b2cfa8dd9ac183561363af
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sun Jan 21 13:00:51 2018 +0000

    re PR target/81485 ([SH] ICE: in sh_find_set_of_reg, at config/sh/sh-protos.h:232)
    
            PR target/81485
            * config/sh/sh-protos.h (sh_find_set_of_reg): Remove assert.
    
    From-SVN: r256930

commit 325c83752c93e5f29f8ba233373710ae4464e223
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Sun Jan 21 05:15:59 2018 +0000

    backport: re PR target/80870 (ICE building 7.1.0 sh-elf crosscompiler on macOS)
    
            Backport from mainline
            2018-01-21  Oleg Endo  <olegendo@gcc.gnu.org>
    
            PR target/80870
            * config/sh/sh_optimize_sett_clrt.cc:
            Use INCLUDE_ALGORITHM and INCLUDE_VECTOR instead of direct includes.
    
    From-SVN: r256929

commit 3144580b6e3aba087741914e2cb1c071df3615c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 21 00:16:19 2018 +0000

    Daily bump.
    
    From-SVN: r256922

commit 0281c422208e639d8f0fc084dcedf7114039fd26
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 20 20:56:45 2018 +0000

    re PR fortran/83900 (ICE in gfc_simplify_matmul, at fortran/simplify.c:4593)
    
    2018-01-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
        * simplify.c (gfc_simplify_matmul): Set return type correctly.
    
    2018-01-20  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * gfortran.dg/matmul_18.f90: New test.
    
    From-SVN: r256921

commit 4e034ea3eb9db4b6695e789cd91b664ca47662fc
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 20 08:29:23 2018 +0000

    re PR fortran/83900 (ICE in gfc_simplify_matmul, at fortran/simplify.c:4593)
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * simplify.c (gfc_simplify_matmul): Delete bogus assertion.
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/83900
            * gfortran.dg/matmul_17.f90: New test.
    
    From-SVN: r256914

commit b23589118affa244529414bc2bc4842e997398cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 20 00:16:26 2018 +0000

    Daily bump.
    
    From-SVN: r256909

commit fd35ec75640ec5be43d9b3c7e49c96230bcaa839
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Jan 19 23:51:18 2018 +0000

    backport: re PR fortran/80768 (NULL pointer dereferenced in gfc_check_num_images at fortran/check.c)
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport of r250734 from mainline
            PR fortran/80768
            * check.c (gfc_check_num_images): Fix typo.
    
    2018-01-19  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80768
            * gfortran.dg/num_images_1.f90:  New test that tests fix in r250734.
    
    From-SVN: r256908

commit b5e5d1fd4c142156d9a76d1f43b7d6726804289c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 19 11:25:33 2018 +0000

    PR libstdc++/83834 replace wildcard pattern in linker script
    
    Backport from mainline
    2018-01-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83834
            * config/abi/pre/gnu.ver (GLIBCXX_3.4): Replace std::c[a-g]* wildcard
            pattern with exact match for std::cerr.
    
    From-SVN: r256883

commit 5f236fbeb27c6267ed849949e7507a4950fb4b45
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 19 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r256868

commit 993fbff336b042c7606dcc4de776a8c4b0712a10
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Thu Jan 18 01:04:36 2018 +0000

    Back from mainline PR fortran/83874
    
    2018-01-17  Harald Anlauf  <anlauf@gmx.de>
    
            Back from mainline
            PR fortran/83874
            * decl.c (add_init_expr_to_sym): Do not dereference NULL pointer.
    
    2018-01-17  Harald Anlauf  <anlauf@gmx.de>
    
            Back from mainline
            PR fortran/83874
            * gfortran.dg/pr83874.f90: New test.
    
    From-SVN: r256830

commit 7671fc40c12f8ef8e595a3ce37dd4abe4aca2b56
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 18 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r256825

commit 8498e39a97b9db4be25d05367308e31525efee43
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 17 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256770

commit 9d363713df0450d5bdd36dc506f991642eb47764
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jan 16 17:30:43 2018 +0100

    rtlanal: dead_or_set_regno_p should handle CLOBBER (PR83424)
    
    In PR83424 combine's move_deaths puts a REG_DEAD note in the wrong place
    because dead_or_set_regno_p does not account for CLOBBER insns.  This
    fixes it.
    
    
            PR rtl-optimization/83424
            * rtlanal.c (dead_or_set_regno_p): Handle CLOBBER just like SET.
    
    gcc/testsuite/
            PR rtl-optimization/83424
            * gcc.dg/pr83424.c: New testsuite.
    
    From-SVN: r256752

commit 2334524616971b7353232508d1b39ce41b0c5b15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 16 00:16:16 2018 +0000

    Daily bump.
    
    From-SVN: r256717

commit b46ed6f65e01aa5b7f5aba08fed879da289c5ba5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 15 12:38:56 2018 +0000

    Fix type printers for Library Fundamentals types
    
            * python/libstdcxx/v6/printers.py (register_type_printers): Remove
            printer for experimental::any. Fix printers for experimental::optional
            and experimental::basic_string_view.
    
    From-SVN: r256699

commit cfd19cd038e3dbcfeaef20f353d1483a7748a8c8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jan 15 12:38:52 2018 +0000

    PR libstdc++/83626 Don't throw for remove("") and remove_all("")
    
    Backport from mainline
    2018-01-04  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83626
            * src/filesystem/ops.cc (remove(const path&, error_code&))): Do not
            return an error for non-existent paths. Remove unnecessary
            symlink_status call.
            (remove_all(const path&)): Fix type of result variable.
            (remove_all(const path&, error_code&))): Use non-throwing increment
            for directory iterator. Do not return an error for non-existent paths.
            * testsuite/experimental/filesystem/operations/remove.cc: New test.
            * testsuite/experimental/filesystem/operations/remove_all.cc: Fix
            expected results for non-existent paths.
    
    From-SVN: r256697

commit 1bb0558a69ffdf4d7487097f7d642f2157745650
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 15 00:16:17 2018 +0000

    Daily bump.
    
    From-SVN: r256678

commit f2a01ac00505437d5a87abe652086a520bfd831d
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun Jan 14 17:49:39 2018 +0000

    backport: re PR target/83677 (PPC: The xxpermr instruction is not generated correctly)
    
    [gcc]
    
    2018-01-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/83677
            * config/rs6000/altivec.md (*altivec_vpermr_<mode>_internal):
            Reverse order of second and third operands in first alternative.
            * config/rs6000/rs6000.c (rs6000_expand_vector_set): Reverse order
            of first and second elements in UNSPEC_VPERMR vector.
            (altivec_expand_vec_perm_le): Likewise.
    
    [gcc/testsuite]
    
    2018-01-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2018-01-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/83677
            * gcc.target/powerpc/pr83677.c: New file.
    
    From-SVN: r256671

commit 74fa10085c22e485b47e86983a4f5b47eb39022f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 14 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r256651

commit 0d697510dafa424fea0159859924732f9d50ff51
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Jan 13 19:12:32 2018 +0000

    backport: re PR fortran/78814 (ICE in symbol_rank, at fortran/interface.c:1265)
    
    2012-01-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/78814
            * interface.c (symbol_rank): Check for NULL pointer.
    
    2012-01-13  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from mainline
            PR fortran/78814
            * gfortran.dg/interface_40.f90: New testcase.
    
    From-SVN: r256647

commit c8cb91dd2e014ef969b508c018067bd4ec57d4f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 13 00:16:06 2018 +0000

    Daily bump.
    
    From-SVN: r256600

commit 9d3e9cb3b4ad21cc99549faa0635443c8a633574
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 12 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256559

commit addc7b60866b2c20ed2f3f0740f539a1500a1bbe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 11 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256470

commit 3917c91a5bf9c29fb5f4cba9356f85a13b550d1f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 23:55:00 2018 +0000

    re PR fortran/82367 (ICE with deferred length string allocate on non-deferred length argument)
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82367
            * resolve.c (resolve_allocate_expr): Check for NULL pointer.
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82367
            * gfortran.dg/deferred_character_18.f90: New test.
    
    From-SVN: r256467

commit 450a221f2a1410b0eae0c56647dce73fe9391de2
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 22:50:28 2018 +0000

    backport: re PR fortran/83093 (ICE in fold_convert_loc, at fold-const.c:2266)
    
    2018-01-10 Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/83093
            * resolve.c (resolve_charlen): Check the type of cl->length
            after resolution.
    
    2018-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/83093
            * gfortran.dg/allocate_with_typespec_7.f90: New test.
    
    From-SVN: r256461

commit e4e35c54839078858a1007f12442d8c574449cc2
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Jan 10 18:44:12 2018 +0000

    backport: re PR fortran/82841 (Segfault in gfc_simplify_transfer)
    
    2018-01-10  Steven G. Kargl  <kargl@kgcc.gnu.org>
    
            Backport r254555 from trunk
            PR Fortran/82841
            * gfortran.dg/transfer_simplify_11.f90: New test.
    
    
    2018-01-10  Steven G. Kargl  <kargl@kgcc.gnu.org>
    
            Backport r254555 from trunk
            PR Fortran/82841
            * simplify.c(gfc_simplify_transfer): Do not dereference a NULL pointer.
            Unwrap a short line.
    
    From-SVN: r256444

commit b4a6f0b2e7ad095887ca4eaf8fe49e8f9cd9ea7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 10 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r256413

commit bae9ea06d7e465b60c8301e5f05c49b9ecdcbc5f
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Jan 9 11:38:04 2018 +0000

    [arm] PR target/82975: Guard against reg_renumber being NULL in arm.h
    
            Backport from mainline
            2017-12-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/82975
            * config/arm/arm.h (TEST_REGNO): Check reg_renumber is set before
            accessing it.  Adjust comment.
    
            * gcc.dg/pr82975.c: New test.
    
    From-SVN: r256377

commit 549ae63e511cf7b151cdc736cc6f03b68ec41bcf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 9 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r256359

commit bacab561f8a19e0f8e9865cdf70598763bf4ec20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 8 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r256325

commit 1bce6075e77e4e27832834fba425365ae9d357c5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 7 00:16:08 2018 +0000

    Daily bump.
    
    From-SVN: r256315

commit 82a647c1b7fc05151ff42b4a297b88173e045d2d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 6 00:16:10 2018 +0000

    Daily bump.
    
    From-SVN: r256302

commit 26204b8faad96b6020fec0f956feebf6fb73a2c2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:48:45 2018 +0000

    Fix typo in std::wbuffer_convert
    
    Backport from mainline
    2017-11-14  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/locale_conv.h (wbuffer_convert::_M_conv_get): Fix typo.
            * testsuite/22_locale/conversions/buffer/3.cc: New test.
    
    From-SVN: r256300

commit 2cc2286e99065dd8e4e80ccfd3a553d423f8e99d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:48:28 2018 +0000

    Improve tests for error reporting in Filesystem TS
    
    Backport from mainline
    2017-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Ensure that error_code arguments are
            cleared when required.
            * testsuite/experimental/filesystem/operations/create_directory.cc:
            Remove redundant check.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            Ensure that error_code argument is cleared when required.
    
    From-SVN: r256299

commit 920d0653706deb2ecf5ecdbc26556f529310e069
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:48:00 2018 +0000

    PR libstdc++/83600 fix end iterator for unready std::match_results
    
    Backport from mainline
    2017-12-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83600
            * include/bits/regex.h (match_results::end()): Return valid iterator
            when not ready.
            * testsuite/28_regex/match_results/ctors/char/default.cc: Check that
            unready objects are empty and have equal begin and end iterators.
            * testsuite/28_regex/match_results/ctors/wchar_t/default.cc: Likewise.
    
    From-SVN: r256298

commit 9678ffbe29a0b8db3d79126dc733509ee1f58546
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:47:54 2018 +0000

    PR libstdc++/83598 don't modify flags passed to std::basic_regex constructors
    
    Backport from mainline
    2017-12-27  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83598
            * include/bits/regex.h (basic_regex): Don't modify flags passed to
            constructors.
            * testsuite/28_regex/basic_regex/ctors/83598.cc: New test.
    
    From-SVN: r256297

commit 6328ad09a7907fe32baa987f684ca32fa0bc99cc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:47:50 2018 +0000

    PR libstdc++/83279 handle sendfile not copying entire file
    
    Backport from mainline
    2017-12-14  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/83279
            * src/filesystem/std-ops.cc (do_copy_file): Handle sendfile not
            copying entire file.
    
    From-SVN: r256296

commit 3a6cba958afbaa72bbb452ba934a3e9111b5ad7e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:47:46 2018 +0000

    Avoid redundant calls to filesystem::status_known
    
    Backport from mainline
    2018-01-04  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/fs_ops.h (exists(const path&, error_code&))):
            Only check status_known once.
    
    From-SVN: r256295

commit df165a2e1bd9aabf326d85dedff885caf6930d5a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 5 22:47:42 2018 +0000

    PR libstdc++/79283 fix filesystem::read_symlink for /proc
    
    Backport from mainline
    2017-10-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79283
            * src/filesystem/ops.cc (read_symlink): Handle st_size being zero.
    
    From-SVN: r256294

commit 3cd27da9f315c4cddc96852df69f53fc4371bf4a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 5 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256270

commit d98a8ffa8c8b33414e5095c0bb8afed97c6b1524
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Jan 4 20:18:58 2018 +0000

    re PR fortran/83679 (r256113 causes regression on pr77942.f90)
    
    2018-01-04  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR Fortran/83679
            * simplify.c (gfc_simplify_cshift): Restore early return for zero-sized
            array.  Update Copyright year while here.
    
    From-SVN: r256264

commit c4e200e8319b858623f6b81dfd41d69ea5ac68ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 4 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r256220

commit 7408aebbccb3321f47b559d606ef0ec644f298d9
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Wed Jan 3 14:08:05 2018 +0200

    PR libgfortran/83649 Chunk large reads and writes
    
    Backport from trunk.
    
    It turns out that Linux never reads or writes more than 2147479552
    bytes in a single syscall. For writes this is not a problem as
    libgfortran already contains a loop around write() to handle short
    writes. But for reads we cannot do this, since then read will hang if
    we have a short read when reading from the terminal.  Also, there are
    reports that macOS fails I/O's larger than 2 GB.  Thus, to work around
    these issues do large reads/writes in chunks.
    
    The testcase from the PR
    
    program largewr
      integer(kind=1) :: a(2_8**31+1)
      a = 0
      a(size(a, kind=8)) = 1
      open(10, file="largewr.dat", access="stream", form="unformatted")
      write (10) a
      close(10)
      a(size(a, kind=8)) = 2
      open(10, file="largewr.dat", access="stream", form="unformatted")
      read (10) a
      if (a(size(a, kind=8)) == 1) then
        print *, "All is well"
      else
        print *, "Oh no"
      end if
    end program largewr
    
    fails on trunk but works with the patch.
    
    Regtested on x86_64-pc-linux-gnu, committed to trunk.
    
    libgfortran/ChangeLog:
    
    2018-01-03  Janne Blomqvist  <jb@gcc.gnu.org>
    
            PR libgfortran/83649
            * io/unix.c (MAX_CHUNK): New define.
            (raw_read): For reads larger than MAX_CHUNK, loop.
            (raw_write): Write no more than MAX_CHUNK bytes per iteration.
    
    From-SVN: r256173

commit 051bb48d8f1d901cee9b37e21a042523b90c4ee0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 3 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256114

commit d72b97244038dffad86df70281bd4e23c2b21d0c
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Jan 2 23:03:11 2018 +0000

    backport: re PR fortran/83650 (Wrong simplification in cshift with negative shifts)
    
    2018-01-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from 7-branch
            PR fortran/83650
            * simplify.c (gfc_simplify_cshift): Correct contition for
            negative shifts.
    
    2018-01-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from 7-branch
            PR fortran/83650
            * gfortran.dg/simplify_cshift_1.f90: Correct condition.
    
    From-SVN: r256113

commit dd252dce59519d41f95ef39a80c24fe8fad2f099
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 2 00:16:05 2018 +0000

    Daily bump.
    
    From-SVN: r256066

commit 5d65c5bc446a358cf2cb80e960de72b70fec1263
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 1 00:16:04 2018 +0000

    Daily bump.
    
    From-SVN: r256056

commit c6499d594cd783c7203fe06f6caa2dc22d2d81f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 31 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r256046

commit 4ac58c33ba463b2200989edfdc680a95c80df61c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 30 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r256037

commit de349a68b5e6560851b7e234fffdac75730ce35d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r256028

commit 89910d2df627792e9858263ff66c2a0bb708ea32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 28 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r256015

commit 254e648b158638c5b67cf77f2f0ee1205af0fefd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 27 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r256004

commit c0f497595539c9dc103d54d0b89e54b689826b96
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 26 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r255998

commit 4b2a502f9a3d8c4c26096e70e4f451378f9b2c3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 25 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255994

commit 309db98a342434bcc21789fdbed2544de43a28ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 24 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255989

commit 214f022dcc1366930572acef3b9e0e6a638e99e9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255984

commit 27196ffd316eb069227c1d264c376254dfc2cb3c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 22 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255963

commit 239ca90b4a58d62450c239b6617074511411ad33
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 21 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r255907

commit 93e8ddcf80494d47ba42a2bf0a1b012969d18c30
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 20 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255846

commit d8bc8a7ac555c371bb94546296ae84f098eb36a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 19 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255793

commit b009164f1c018474f1eb6bc3a621649fb515454b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 18 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r255769

commit f6aed9cb9c8b21e439f914567851fed51751b2f9
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sun Dec 17 17:05:15 2017 +0000

    backport: pa.c (pa_legitimate_address_p): For scaled indexing...
    
            Backport from mainline
            2017-12-03  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.c (pa_legitimate_address_p): For scaled indexing,
            require base operand is a REG_POINTER prior to reload on targets
            with non-equivalent space registers.
    
    From-SVN: r255763

commit 5d4182aeb41a19d24cb293c0b75d822ceeb9d96c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 17 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r255756

commit 925b07ce5504da36ef0bb840ceed43c8a6a5a855
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Dec 16 22:41:13 2017 +0000

    backport: re PR libfortran/81937 (stack-buffer-overflow on memcpy in libgfortran/io/unix.c on character(kind=4))
    
    2017-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/81937
            * io/list_read.c (next_char_internal): Don't attempt to read
            from the internal unit stream if no bytes are left. Decrement
            bytes_left in the right place.
    
    From-SVN: r255754

commit 70dec649d0e4400b52bd7a534a478142290436b3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 16 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r255732

commit 8811fc8b49d2737d04540ecf18ab54ed0e358901
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Dec 15 11:32:27 2017 +0000

    re PR target/66488 (segfault on sizeof(long) < sizeof(void*) and large GCC memory usage)
    
            PR target/66488
            * ggc-page.c (HOST_BITS_PER_PTR): Do not define here...
            * hwint.h (HOST_BITS_PER_PTR): ...but here instead.
    
    From-SVN: r255689

commit bf20e896100f803f256bdf4fdeb50573218cf36a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Dec 14 21:44:16 2017 -0600

    backport: ppc-auxv.h (PPC_FEATURE2_HTM_NO_SUSPEND): New define.
    
    gcc/
            Backport from mainline
            2017-12-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/ppc-auxv.h (PPC_FEATURE2_HTM_NO_SUSPEND): New define.
            * config/rs6000/rs6000.c (cpu_supports_info): Use it.
    
    gcc/testsuite/
            Backport from mainline
            2017-12-13  Peter Bergner  <bergner@vnet.ibm.com>
    
            * gcc.target/powerpc/cpu-builtin-1.c (htm-no-suspend): Add test.
    
    From-SVN: r255672

commit 544bcf5216d18696321cf17d965db17467395eae
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Dec 14 21:41:16 2017 -0600

    backport: re PR target/80210 (ICE in in extract_insn, at recog.c:2311 on ppc64 for with __builtin_pow)
    
    gcc/
            Backport from mainline
            2017-10-02  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Rewrite
            function to not use the have_cpu variable.  Do not set cpu_index,
            rs6000_cpu_index or rs6000_tune_index if we end up using TARGET_DEFAULT
            or the default cpu.
            (rs6000_valid_attribute_p): Remove duplicate initializations of
            old_optimize and func_optimize.
            (rs6000_pragma_target_parse): Call rs6000_activate_target_options ().
            (rs6000_activate_target_options): Make global.
            * config/rs6000/rs6000-protos.h (rs6000_activate_target_options): Add
            prototype.
    
    gcc/testsuite/
            Backport from mainline
            2017-10-02  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * gcc.target/powerpc/pr80210-2.c: New test.
    
    From-SVN: r255671

commit c370b9eaa16378be9044ceeaaf4d4c35687feb4b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 15 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255668

commit a3c71fce7a5464b8122c9aa80f4e3cc229eefdba
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Dec 14 17:07:28 2017 +0000

    decl.c (gnat_to_gnu_field): Do not set the alignment of the enclosing record type if it is not already set.
    
            * gcc-interface/decl.c (gnat_to_gnu_field): Do not set the alignment
            of the enclosing record type if it is not already set.
    
    From-SVN: r255647

commit cf59c50492077744cb4bb31b60e6060d94692016
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Dec 14 12:01:40 2017 +0000

    PR libstdc++/59568 don't use putback or update value when extraction fails
    
            PR libstdc++/59568
            * include/std/complex (operator>>): Only use putback if a character
            was successfully extracted and only set the value if a number was
            successfully extracted.
            * testsuite/26_numerics/complex/inserters_extractors/char/59568.cc:
            New test.
    
    From-SVN: r255634

commit 1d858a86b857ef934cbb55b7f47740ca1657329e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255618

commit 655bb8734df75d6162b9ac5f4db8d8d25b2a8c64
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 13 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r255594

commit 4077038aada68a394e1f37b0d2544b9f3fa10f65
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 12 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255560

commit 9a2985f85248de65a7b9a9fd3a64721ea72389aa
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon Dec 11 10:49:25 2017 +0100

    [PR c++/83301] cgraph.c segfault
    
    Backport trunk r243377:
    
            gcc/
            2016-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78692
            * cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Set lhs
            var to lhs of new_stmt right before noreturn handling rather than to
            lhs of e->call_stmt early.
    
            gcc/testsuite/
            2016-12-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78692
            * g++.dg/torture/pr78692.C: New test.
    
    From-SVN: r255538

commit 4f822c28d9f6fe265dbe5399f9e196f448713da2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 11 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255535

commit 195d9ffdf243d912e67cd978112243f4d1cd337d
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sun Dec 10 21:37:08 2017 +0000

    Backport "Fix condition folding in c_parser_omp_for_loop"
    
    2017-12-10  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2017-09-16  Tom de Vries  <tom@codesourcery.com>
    
            PR c/81875
            * c-parser.c (c_parser_omp_for_loop): Fold only operands of cond, not
            cond itself.
    
            * testsuite/libgomp.c/pr81875.c: New test.
    
    From-SVN: r255532

commit e85461a2eb4aa1ddf1ee49c99afebcfc5c753dc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255525

commit fe7b316cd112c4f6641e6bc37b8f3cce126d9591
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 9 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255518

commit a3931c372860e917a15bb38b93d8d131d34224b9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 8 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255488

commit e1dfbf41de988caf0b895a3a1733d471eae9a875
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255458

commit 16d49a38101cf2eebab4c0afbdd293e0d820dfcf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 6 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r255435

commit 9c35c8c9dce29705cc8eb0472cde53a150c510f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 5 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255396

commit a530ac2e871f357cb02ca7cdfa83a9d3e854abb0
Author: Sebastian Peryt <sebastian.peryt@intel.com>
Date:   Mon Dec 4 12:40:44 2017 +0100

    Fix PR82941 and PR82942 by adding proper vzeroupper generation on SKX.
    
    Add X86_TUNE_EMIT_VZEROUPPER to indicate if vzeroupper instruction should
    be inserted before a transfer of control flow out of the function.  It is
    turned on by default unless we are tuning for KNL.  Users can always use
    -mzeroupper or -mno-zeroupper to override X86_TUNE_EMIT_VZEROUPPER.
    
    2017-12-04  Sebastian Peryt  <sebastian.peryt@intel.com>
            H.J. Lu  <hongjiu.lu@intel.com>
    
    gcc/
            Bakcported from trunk
            PR target/82941
            PR target/82942
            PR target/82990
            * config/i386/i386.c (pass_insert_vzeroupper): Remove
            TARGET_AVX512F check from gate condition.
            (ix86_check_avx256_register): Changed to ...
            (ix86_check_avx_upper_register): ... this. Add extra check for
            VALID_AVX512F_REG_OR_XI_MODE.
            (ix86_avx_u128_mode_needed): Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_check_avx256_stores): Changed to ...
            (ix86_check_avx_upper_stores): ... this. Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_avx_u128_mode_after): Changed
            avx_reg256_found to avx_upper_reg_found. Changed
            ix86_check_avx256_stores to ix86_check_avx_upper_stores.
            (ix86_avx_u128_mode_entry): Changed
            ix86_check_avx256_register to ix86_check_avx_upper_register.
            (ix86_avx_u128_mode_exit): Ditto.
            (ix86_option_override_internal): Set MASK_VZEROUPPER if
            neither -mzeroupper nor -mno-zeroupper is used and
            TARGET_EMIT_VZEROUPPER is set.
            * config/i386/i386.h: (host_detect_local_cpu): New define.
            (TARGET_EMIT_VZEROUPPER): New.
            * config/i386/x86-tune.def: Add X86_TUNE_EMIT_VZEROUPPER.
    
    gcc/testsuite/
            Backported from trunk
            PR target/82941
            PR target/82942
            PR target/82990
            * gcc.target/i386/pr82941-1.c: New test.
            * gcc.target/i386/pr82941-2.c: Likewise.
            * gcc.target/i386/pr82942-1.c: Likewise.
            * gcc.target/i386/pr82942-2.c: Likewise.
            * gcc.target/i386/pr82990-1.c: Likewise.
            * gcc.target/i386/pr82990-2.c: Likewise.
            * gcc.target/i386/pr82990-3.c: Likewise.
            * gcc.target/i386/pr82990-4.c: Likewise.
            * gcc.target/i386/pr82990-5.c: Likewise.
            * gcc.target/i386/pr82990-6.c: Likewise.
            * gcc.target/i386/pr82990-7.c: Likewise.
    
    Co-Authored-By: H.J. Lu <hongjiu.lu@intel.com>
    
    From-SVN: r255379

commit d489f5592603c9c952be5bf0b33f9d25c7aba2a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 4 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255370

commit 0e8a81edd59c12729f8c61597cbb17f3facc7bfa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 3 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255359

commit 1c48f91827566944ed9a62af4965034bfd42eccd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 2 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r255342

commit 14371acdeaf86cda16f014653d5e490de450728e
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Dec 1 21:37:33 2017 +0100

    rs6000: Improve comparison rtx_cost (PR81288)
    
    The current rs6000 rtx_cost for comparisons against 0 is very high if
    TARGET_ISEL && !TARGET_MFCRF, much higher than for reg-reg comparisons,
    much higher than a load of 0 and such a reg-reg-comparison.  This leads
    to infinite recursion in CSE (see PR81288).
    
    This patch removes the too-high cost, also simplifying this code.
    
    
            PR 81288/target
            * config/rs6000/rs6000.c (rs6000_rtx_costs): Do not handle
            TARGET_ISEL && !TARGET_MFCRF differently.  Simplify code.
    
    From-SVN: r255338

commit b9d3f06249a60c611b0b475a60024d33f61483dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 1 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r255286

commit 5df32ed2915965580b737c47b4596729ada19fee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 30 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255262

commit 84bc583e2e9f16cff59e282985da23da3cc0730a
Author: Daniel Cederman <cederman@gaisler.com>
Date:   Wed Nov 29 17:14:36 2017 +0000

    [SPARC] Recognize the load when accessing the GOT
    
    Needed for the UT699 errata workaround to function correctly when
    compiling with -fPIC.
    
    Backport from mainline
    2017-11-29  Daniel Cederman  <cederman@gaisler.com>
    
    gcc/
            * config/sparc/sparc.c (sparc_do_work_around_errata): Treat the
            movsi_pic_gotdata_op instruction as a load for the UT699 errata
            workaround.
    
    From-SVN: r255246

commit fe68a056b3dee24c6a8e78f7cddaac75e1c4628e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255222

commit febc79c49b6644ed589fded1a7a9e7dbb839d0a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 28 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r255183

commit 452faede052fe6589dc55873baad65c0a32fe002
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 27 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r255156

commit c31e572aff94a101c457031ee326cbc451d7f4a2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255151

commit 4dba3aafeb01b325ba001688c90aa09f536a635c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 25 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r255145

commit 269af9105524e4c5a8af43e3e4750c16f742a0db
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Fri Nov 24 18:03:04 2017 +0100

    combine: Don't split insns if half is unused (PR82621)
    
    If we have a PARALLEL of two SETs, and one half is unused, we currently
    happily split that into two instructions (albeit the unused one is
    useless).  Worse, as PR82621 shows, combine will happily merge this
    insn into I3 even if some intervening insn sets the same register
    again, which is wrong.
    
    This fixes it by not splitting PARALLELs with REG_UNUSED notes.  It
    all is handled fine by combine in that case; just the "single set
    that is unused" case isn't handled properly.
    
    This also results in better code: combine will now actually throw
    away the unused SET.  (It still won't do that in an I3).
    
    
            PR rtl-optimization/82621
            * combine.c (try_combine): Do not split PARALLELs of two SETs if the
            dest of one of those SETs is unused.
    
    From-SVN: r255143

commit 44a0038eb241a9f23c672cd094b4a3ba1681bbba
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r255128

commit 149586b96cf4562b8dae9d35fb0e84755934c2ae
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 23 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r255087

commit 92c0e68c24948f9f3d1498b4fccb0c81328615fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 22 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r255039

commit 2699c56309031bae3125e1fc995404727e0a7058
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Nov 21 19:03:10 2017 +0000

    ppc-asm.h (f50, vs50): Fix values.
    
            * config/rs6000/ppc-asm.h (f50, vs50): Fix values.
    
    From-SVN: r255027

commit 0021c4bbc6c9f746cf2a643cc1ae170d95932393
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Tue Nov 21 09:41:34 2017 +0000

    Adapt Solaris 12 references
    
            libgo:
            Backport from mainline
    
    libgo: adapt Solaris 12 references
    
        With the change in the Solaris release model (no more major releases
        like Solaris 12 but only minor ones like 11.4), the Solaris 12
        references in GCC need to be adapted.
    
        Patch by Rainer Orth.
    
        Reviewed-on: https://go-review.googlesource.com/77490
    
            libgcc:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.host (*-*-solaris2*): Adapt comment for Solaris 12
            renaming.
            * config/sol2/crtpg.c (__start_crt_compiler): Likewise.
            * configure.ac (libgcc_cv_solaris_crts): Likewise.
            * configure: Regenerate.
    
            gcc:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config.gcc (*-*-solaris2*): Enable default_use_cxa_atexit since
            Solaris 11.  Update comment.
            * configure.ac (gcc_cv_ld_pid): Adapt comment for Solaris 12
            renaming.
            * config/sol2.h (STARTFILE_SPEC): Likewise.
            * configure: Regenerate.
    
            gcc/testsuite:
            Backport from mainline
            2017-11-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * lib/target-supports.exp (check_effective_target_pie): Adapt
            comment for Solaris 12 renaming.
    
            * gcc.dg/torture/pr60092.c: Remove *-*-solaris2.11* dg-xfail-run-if.
    
    From-SVN: r254995

commit baecb6b0f3aa8f12473ca2422170a47ddd5409d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 21 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r254974

commit 601c3b47efa6607fb0bd56cb0af6da84fe026282
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 20 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r254941

commit 207c57085379726653033cb2323209683ce2663c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 19 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254921

commit 729f493e46e4e9aba0ecea463f64eeffd8ceb6e5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 18 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r254910

commit 61a19e5f1aca1de5f335c698a2faa5ee7b760f2a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 17 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r254850

commit 404e211e6f5e0c4810bfe87152582bae24c12da1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Nov 16 20:22:17 2017 +0100

    i386.c (x86_print_call_or_nop): Emit 5 byte nop explicitly as a stream of bytes.
    
            * config/i386/i386.c (x86_print_call_or_nop): Emit 5 byte nop
            explicitly as a stream of bytes.
    
    From-SVN: r254842

commit 03d5206ebbd564d040b9874ca6391ad0d2b5ab7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 16 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254791

commit 0e95b616047e6860c0ae7aafd77276faa80ea4e7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 15 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r254744

commit 04a58d29c44977a21090692d3ddeeaf3e92fabff
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Nov 14 17:38:38 2017 +0000

    backport: re PR fortran/82934 (Segfault on assumed character length in allocate)
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/82934
            * trans-stmt.c (gfc_trans_allocate): Remove the gcc_assert on
            null string length for assumed length typespec and set
            expr3_esize to NULL_TREE;
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/82934
            * gfortran.dg/allocate_assumed_charlen_1.f90: New test.
    
    From-SVN: r254733

commit a85ec91501aa54de239c5ba990135113f218acc1
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Tue Nov 14 08:15:52 2017 +0000

    backport: re PR fortran/78619 (ICE in copy_reference_ops_from_ref, at tree-ssa-sccvn.c:889)
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78619
            * check.c (same_type_check): Introduce a new argument 'assoc'
            with default value false. If this is true, use the symbol type
            spec of BT_PROCEDURE expressions.
            (gfc_check_associated): Set 'assoc' true in the call to
            'same_type_check'.
    
    2017-11-13  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78619
            * gfortran.dg/pr78619.f90: New test.
    
    From-SVN: r254719

commit b0ec0737d8b66aa6547082bb36275826bfdca83f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 14 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254715

commit e2e195c8f1ab0909f212c6c51eba7aa39d8ed3df
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Nov 13 12:54:00 2017 +0000

    Use -xbrace_comment=no with recent Solaris/x86 as
    
            Backport from mainline
            2017-10-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * configure.ac (gcc_cv_as_ix86_xbrace_comment): Check if assembler
            supports -xbrace_comment option.
            * configure: Regenerate.
            * config.in: Regenerate.
            * config/i386/sol2.h (ASM_XBRACE_COMMENT_SPEC): Define.
            (ASM_CPU_SPEC): Use it.
    
    From-SVN: r254682

commit 27f72b61d6768cb06436730cbba1e4b752cd720a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 13 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254667

commit 1a6f81475170f22a6611de9e404f2173aa6e6be9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 12 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r254661

commit 225ee1c9d2c58ce8c214289da144921a6bb2884b
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Nov 11 16:42:36 2017 +0000

    backport: Wunused-var-16.c: Add -fno-common additional option on hppa*-*-hpux*
    
            Backport from mainline
            2017-02-03  John David Anglin  <danglin@gcc.gnu.org>
    
            * c-c++-common/Wunused-var-16.c: Add -fno-common additional option on
            hppa*-*-hpux*
            * c-c++-common/builtin-shuffle-1.c: Likewise.
    
            2017-02-15  David Edelsohn  <dje.gcc@gmail.com>
    
            * g++.dg/cpp0x/pr79296.C: Move dg-do compile directive first.
    
            2017-02-24  David Edelsohn  <dje.gcc@gmail.com>
    
            * g++.dg/ext/complit15.C: Require LTO.
    
            2017-01-26  David Edelsohn  <dje.gcc@gmail.com>
    
            * g++.dg/opt/declone3.C: Require LTO.
    
            2017-03-26  John David Anglin  <danglin@gcc.gnu.org>
    
            * gcc.dg/torture/pr79732.c: Require alias support.
    
            2017-02-03  John David Anglin  <danglin@gcc.gnu.org>
    
            * gfortran.dg/coarray_43.f90: Add "-latomic" option if
            libatomic_available.
    
    From-SVN: r254656

commit 8d8dbcf783c30202ef42eda8b7492d1245c0de3e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Nov 11 16:11:50 2017 +0000

    backport: re PR testsuite/81056 (FAIL: 17_intro/names.cc (test for excess errors))
    
            Backport from mainline
            2017-08-20  John David Anglin  <danglin@gcc.gnu.org>
    
            PR testsuite/81056
            * testsuite/17_intro/names.cc: Undef 'd' and 'r' on __hpux__.
    
    From-SVN: r254655

commit 7ded83ac6524698c8ba2b703c1c0864b6fbcc129
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Nov 11 15:53:18 2017 +0000

    backport: re PR target/68739 (FAIL: 30_threads/call_once/constexpr.cc (test for excess errors))
    
            Backport from mainline
            2017-02-25  John David Anglin  <danglin@gcc.gnu.org>
    
            PR target/68739
            * inclhack.def (hpux11_pthread_pointer): New fix.
            (hpux11_pthread_const): Adjust to remove void * cast from define.
            * fixincl.x: Regenerate.
            * tests/base/sys/pthread.h [HPUX11_PTHREAD_CONST_CHECK]: Update tests.
    
    From-SVN: r254654

commit 2cfd0d01903602af48d15a840ada662df68f2d37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 11 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254645

commit 2da244eb81a9ec693788fa70831a8d59d7b48f61
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Nov 10 08:24:40 2017 +0000

    utils.c (convert): Add comment and do not fall through to the next case.
    
            * gcc-interface/utils.c (convert) <RECORD_TYPE>: Add comment and do
            not fall through to the next case.
            <ARRAY_TYPE>: Deal specially with a dereference from another array
            type with the same element type.
    
    From-SVN: r254620

commit f8ab2bceb38ce587d19c41f0e4972b51d1413399
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 10 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254615

commit 96699bb59e4f258592426181eda1d35709322738
Author: Andre McCurdy <armccurdy@gmail.com>
Date:   Thu Nov 9 14:34:28 2017 +0000

    [ARM][PATCH v2] enable FL_LPAE flag for armv7ve cores
    
    The following commit added the FL_LPAE flag to FL_FOR_ARCH7VE, but
    neglected to also add it to the armv7ve compatible cores defined in
    arm-cores.def.
    
      https://github.com/gcc-mirror/gcc/commit/af2d9b9e58e8be576c53d94f30c48c68146b0c98
    
    The result is that gcc 6.4 now refuses to allow -march=armv7ve and
    -mcpu=XXX to be used together, even when -mcpu is set to an armv7ve
    compatible core:
    
      arm-linux-gnueabi-gcc -march=armv7ve -mcpu=cortex-a7 -Werror ...
      error: switch -mcpu=cortex-a7 conflicts with -march=armv7ve switch [-Werror]
    
    This is a regression relative to gcc 6.3.
    
    Fix by defining flags for armv7ve compatible cores directly from
    FL_FOR_ARCH7VE, rather than re-creating the armv7ve flags
    independently by combining FL_FOR_ARCH7A with the armv7ve specific
    FL_THUMB_DIV and FL_ARM_DIV flags.
    
    Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
    
    2017-11-09  Andre McCurdy  <armccurdy@gmail.com>
    
            * config/arm/arm-cores.def: Fix missing FL_LPAE flag for armv7ve
            compatible cores.
    
    From-SVN: r254584

commit 462f33cb6d596caaec0182a4a98ffd02b07aa890
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Nov 9 11:23:30 2017 +0100

    Backport PRs 64682, 69567, 69737, 82683
    
            Backport from mainline
            2017-11-01  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR rtl-optimization/64682
            PR rtl-optimization/69567
            PR rtl-optimization/69737
            PR rtl-optimization/82683
            * combine.c (distribute_notes) <REG_DEAD>: If the new I2 sets the same
            register mentioned in the note, drop the note, unless it came from I3,
            in which case it should go to I3 again.
    
    From-SVN: r254565

commit 0d532b5f87ec2be9155ea0bc97f27cf257a8f34b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 9 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r254557

commit 944e05803556f66fa3dfeb647b38ebaca1681555
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 8 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r254514

commit 688fc495ae501c31406112e1f197a8c4fbc4f5c1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 7 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254481

commit c079880e339f140d33e95264c1fef6d18cafb68a
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 6 11:50:53 2017 +0000

    backport: re PR fortran/78641 ([OOP] ICE on polymorphic allocatable function in array constructor)
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/78641
            * resolve.c (resolve_ordinary_assign): Do not add the _data
            component for class valued array constructors being assigned
            to derived type arrays.
            * trans-array.c (gfc_trans_array_ctor_element): Take the _data
            of class valued elements for assignment to derived type arrays.
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/78641
            * gfortran.dg/class_66.f90: New test.
    
    From-SVN: r254449

commit 566fe453f5a044875b4868083b6148a2382bcd03
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Nov 6 11:48:32 2017 +0000

    backport: re PR fortran/69739 (ICE during array result, allocatable assignment)
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/69739
            * trans-expr.c (gfc_map_intrinsic_function): Return false for
            bounds without the DIM argument instead of ICEing.
    
    2017-11-06  Paul Thomas  <pault@gcc.gnu.org>
    
            Backported from trunk
            PR fortran/69739
            * gfortran.dg/pr69739.f90: New test.
    
    From-SVN: r254448

commit 3809ab5f68c1b48c98aeec2c744e631982154a13
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 6 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254433

commit 40ea9a83454f2d0dba6a0b81884b34074ad7e584
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Sun Nov 5 20:33:44 2017 +0100

    backport: re PR libgcc/82635 (std::thread's join broken on FreeBSD with all GCCs >= 5)
    
    2017-11-05  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-11-04  Andreas Tobler  <andreast@gcc.gnu.org>
    
        PR libgcc/82635
        * config/i386/freebsd-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Use a
        sysctl to determine whether we're in a trampoline.
        Keep the pattern matching method for systems without
        KERN_PROC_SIGTRAMP sysctl.
    
    From-SVN: r254432

commit 20cab6b409c40ad59721c9a3c7950113a85d23d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 5 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254413

commit cc03ebf4ea203c701e961bb17bc50df079b5ff6e
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sat Nov 4 17:16:39 2017 +0000

    re PR fortran/82796 (Private+equivalence in used module breaks compilation of pure function)
    
    2017-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82796
            * resolve.c (resolve_equivalence): An entity in a common block within
            a module cannot appear in an equivalence statement if the entity is
            with a pure procedure.
    
    2017-11-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/82796
            * gfortran.dg/equiv_pure.f90: New test.
    
    From-SVN: r254410

commit 594a70c85e1d2e4da7fc8b5bafcdb6790af495a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 4 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r254400

commit 042e464099e4230198034617ffe03953727b5321
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Fri Nov 3 19:17:19 2017 +0000

    re PR fortran/81735 (double free or corruption (fasttop) error (SIGABRT) with character(:) and custom return type with allocatable)
    
    2017-11-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81735
            * trans-decl.c (gfc_trans_deferred_vars): Correct case where
            'tmp' can be used unititialized.
    
    2017-11-03  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81735
            * gfortran.dg/pr81735.f90: New test.
    
    From-SVN: r254393

commit 25d176f0ba7b146170f65cfee110442631e7766a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 3 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r254362

commit fa0b77ef5b63cf3e446e873232f18a1d6b22a4ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 2 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254332

commit 62d9e9d35b5d30e997cc8ecbbe2bc4f76fee7bee
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Nov 1 17:24:35 2017 +0000

    [multiple changes]
    
    2017-11-01  Andre Vehreschild  <vehre@gcc.gnu.org>
            Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78293
            * trans-expr.c (gfc_conv_procedure_call): Prepend deallocation
            of alloctable components to post, rather than adding to
            se->post.
            * trans-stmt.c (gfc_trans_allocate): Move deallocation of expr3
            allocatable components so that all expr3s are visited.
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78293
            * gfortran.dg/allocatable_function_10.f90: New test.
            * gfortran.dg/class_array_15.f03: Increase builtin_free count
            from 11 to 12.
    
    From-SVN: r254319

commit ebbfe064e7b646d09462c5c5c5d0446b0e3601e9
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Nov 1 12:39:48 2017 +0000

    re PR fortran/80554 ([f08] variable redefinition in submodule)
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80554
            * decl.c (build_sym): In a submodule allow overriding of host
            associated symbols from the ancestor module with a new
            declaration.
    
    2017-11-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/80554
            * gfortran.dg/submodule_29.f08: New test.
    
    From-SVN: r254303

commit 000bff7f8dae8bd55171fc184b14b3af479b65b7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 1 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254285

commit faade7770bf02bec56acd8f19ccec64b0cd3c3bb
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Oct 31 11:36:33 2017 +0100

    re PR target/82772 (GCC crashes as compiling ags_thread.c source file on alpha architecture)
    
            PR target/82772
            * config/alpha/sync.md (fetchop_constr) <and>: Change to "rINM".
    
    From-SVN: r254255

commit 5e181e59788c82e0118119861e3c1d6ac493f524
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 31 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254247

commit 2628ec745c57f2ab18acc2692998437bb24c9d86
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 30 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r254208

commit 3bb936cf0d23f0f2bae9bac57c692fb880b2fe8e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 29 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254201

commit 5df31c7942ccee934bfe4bf17a08ab3b19c96ea4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 28 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254190

commit 32375c9c044777163709ee8c8d9fc739fbb52bb6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 27 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r254129

commit ac8ff1ad7b5ee4ac4d331c8e488bbffba03b7b0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 26 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254094

commit b512a0162e216edfcce0d2d52eddb25c551c8624
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 25 15:16:26 2017 +0100

    Corrections to C++ library status docs
    
            * doc/xml/manual/status_cxx1998.xml: Correct statement about
            what the doc covers.
            * doc/xml/manual/status_cxxtr1.xml: Likewise.
            * doc/xml/manual/status_cxxtr24733.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r254079

commit 1571d2e12f9f78ecbaaba6c313c176c02a904856
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 25 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254064

commit b0774a2a61df9ca8eb09d7d744f00ab3baa533cf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 24 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r254028

commit 132cbde24aac4ccb0d2a5c4581b32828ebea41a2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 23 18:47:10 2017 +0100

    PR libstdc++/81395 fix crash when write follows large read
    
    Backport from mainline
    2017-07-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81395
            * include/bits/fstream.tcc (basic_filebuf::xsgetn): Don't set buffer
            pointers for write mode after reading.
            * testsuite/27_io/basic_filebuf/sgetn/char/81395.cc: New.
    
    From-SVN: r254018

commit f2cd34d401db20648e123e2489a4675bce9794e1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 23 18:47:05 2017 +0100

    Fix path::iterator post-increment and post-decrement
    
    Backport from mainline
    2017-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_path.h (path::iterator++(int))
            (path::iterator--(int)): Fix for paths with only one component.
            * testsuite/experimental/filesystem/path/itr/traversal.cc: Test
            post-increment and post-decrement.
    
    From-SVN: r254017

commit babc8cc42a2dec573efa0ba787672e5bb7efd0dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 23 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r253994

commit 9dc3f2c80df4046070508cabbc72da92ad63fd76
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Oct 22 14:21:16 2017 +0000

    backport: re PR libfortran/82233 (execute_command_line causes program to stop when command fails (or does not exist))
    
    2017-10-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR libfortran/82233
            * intrinsics/execute_command_line.c (execute_command_line):
            No call to runtime_error if cmdstat is present.
    
    2017-10-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR libfortran/82233
            * gfortran.dg/execute_command_line_3.f90: New test.
    
    From-SVN: r253983

commit 0fba455e4092abf20aca6b7801f2979c8496934a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 22 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r253980

commit 7b7267bfbad17157b7f1cfec1a0ec369484669c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 21 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253964

commit 5cc5a804cb3f24e5aea918c353c5dad11bb28937
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Oct 20 21:35:41 2017 +0000

    backport: rs6000.c (rs6000_gen_le_vsx_permute): Use rotate instead of vec_select for V1TImode.
    
    2017-10-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-03-09  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_gen_le_vsx_permute): Use rotate
            instead of vec_select for V1TImode.
            * conifg/rs6000/vsx.md (VSX_LE): Remove mode iterator that is no
            longer needed.
            (VSX_LE_128): Add V1TI to this mode iterator.
            (*vsx_le_perm_load_<mode>): Change to use VSX_D mode iterator.
            (*vsx_le_perm_store_<mode>): Likewise.
            (pre-reload splitter for VSX stores): Likewise.
            (post-reload splitter for VSX stores): Likewise.
            (*vsx_xxpermdi2_le_<mode>): Likewise.
            (*vsx_lxvd2x2_le_<mode>): Likewise.
            (*vsx_stxvd2x2_le_<mode>): Likewise.
    
    From-SVN: r253961

commit 18d502a30fd691028b8993dfc220e398fbce4480
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Oct 20 19:26:35 2017 +0000

    backport: re PR fortran/79795 (Fortran ICE in resolve_symbol starting with r163221)
    
    2017-10-20  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79795
            * resolve.c (resovle_symbol): Change gcc_assert to
            sensible error message.
    
    2017-10-20  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79795
            * gfortran.dg/assumed_size_2.f90: New test.
    
    From-SVN: r253956

commit 5056ec3eca15ce0d1382bb54d9aee9df44872b17
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 20 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253917

commit 39090fadd494473634b55d50c29acd636ccf6303
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Oct 19 17:54:58 2017 +0000

    re PR fortran/79402 (ICE with submodules: module procedure interface defined in parent module)
    
    2017-10-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/79402
            * resolve.c (fixup_unique_dummy): New function.
            (gfc_resolve_expr): Call it for dummy variables with a unique
            symtree name.
    
    2017-10-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/79402
            * gfortran.dg/submodule_23.f90: New test.
    
    From-SVN: r253908

commit 767ac7b0bb637b33c794d74a0b63cafaaaa9e9e6
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Thu Oct 19 13:16:42 2017 +0000

    [ARM] PR 82445 - suppress 32-bit aligned ldrd/strd peepholing with -mno-unaligned-access
    
    Peephole patterns exist in the arm backend to spot load/store
    operations to adjacent memory operations in order to convert them into
    ldrd/strd instructions.  However, when we have strict alignment
    enforced, then we can only do this if the accesses are known to be
    64-bit aligned; this is unlikely to be the case for most loads.  The
    patch adds some alignment checking to the code that validates the
    addresses for use in the peephole patterns.  This should also fix
    incorrect generation of ldrd/strd with unaligned accesses that could
    previously have occurred on ARMv5e where all such operations must be
    64-bit aligned.
    
    I've added some new tests as well.  In doing so I discovered that the
    ldrd/strd peephole tests could never fail since they would match the
    source file name in the scanned assembly as well as any instructions
    of the intended type.  I've fixed those by tightening the scan results
    slightly.
    
    gcc:
    
    * config/arm/arm.c (align_ok_ldrd_strd): New function.
    (mem_ok_for_ldrd_strd): New parameter align.  Extract the alignment of the
    mem into it.
    (gen_operands_ldrd_strd): Validate the alignment of the accesses.
    
    testsuite:
    
    * gcc.target/arm/peep-ldrd-1.c: Tighten test scan pattern.
    * gcc.target/arm/peep-strd-1.c: Likewise.
    * gcc.target/arm/peep-ldrd-2.c: New test.
    * gcc.target/arm/peep-strd-2.c: New test.
    
    From-SVN: r253892

commit 8360d12c08a583dbc8dfb827fbc5fb1614963116
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Oct 19 12:16:41 2017 +0000

    re PR fortran/81048 (incorrect derived type initialization)
    
    2017-10-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81048
            * resolve.c (resolve_symbol): Ensure that derived type array
            results get default initialization.
    
    2017-10-19  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/81048
            * gfortran.dg/derived_init_4.f90 : New test.
    
    From-SVN: r253889

commit 2eebc5aa312ad108fc57315e297823645713f483
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 19 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253874

commit 6fb89e62a88e66d35b0114e653ebbef44fecaa42
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Oct 18 23:15:24 2017 +0200

    ira: volatile asm's are not moveable (PR82602)
    
    A volatile asm statement can not be moved (relative to other volatile
    asm, etc.), but IRA would do it nevertheless.  This patch fixes it.
    
    
            PR rtl-optimization/82602
            * ira.c (rtx_moveable_p): Return false for volatile asm.
    
    From-SVN: r253871

commit 2988c3096c3e0fcd9dfc08f37b61c509a7c0162f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 18 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r253838

commit 55518cbfd1d456e42b0ec5b3e9f528b8bf6672df
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Tue Oct 17 16:53:13 2017 +0200

    re PR tree-optimization/82549 (ICE at -O1 and above: verify_gimple failed)
    
            PR tree-optimization/82549
            * fold-const.c (optimize_bit_field_compare, fold_truth_andor_1):
            Formatting fixes.  Instead of calling make_bit_field_ref with negative
            bitpos return 0.
    
            * gcc.c-torture/compile/pr82549.c: New test.
    
    From-SVN: r253818

commit 1be2b17d7f9c25269ae010708580285194a4c00a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 17 00:16:06 2017 +0000

    Daily bump.
    
    From-SVN: r253799

commit d30d9d3fde84c65a8a9ae564b3b924c9ef05011d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 16 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253773

commit f4de2ac9dde8d4527682b621cb7eb7011923941a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 15 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253765

commit fbe22d3ee9ea399127752b1ea611cfc6ba1269bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 14 00:16:07 2017 +0000

    Daily bump.
    
    From-SVN: r253745

commit 3133a20b90846c7d6bd69f4771a565574a189553
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Oct 13 22:14:34 2017 +0200

    re PR target/82274 (__builtin_mul_overflow fails to detect overflow for int64_t when compiled with -m32)
    
            PR target/82274
            * internal-fn.c (expand_mul_overflow): If both operands have
            the same highpart of -1 or 0 and the topmost bit of lowpart
            is different, overflow is if res <= 0 rather than res < 0.
    
            * libgcc2.c (__mulvDI3): If both operands have
            the same highpart of -1 and the topmost bit of lowpart is 0,
            multiplication overflows even if both lowparts are 0.
    
            * gcc.dg/pr82274-1.c: New test.
            * gcc.dg/pr82274-2.c: New test.
    
    From-SVN: r253743

commit 7f2c289df5b6cf7973708b360fc81ae96a6c8969
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 13 00:16:05 2017 +0000

    Daily bump.
    
    From-SVN: r253702

commit df56d3820e26ce4298c160f2d7a66f6d1cac42b2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 12 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253668

commit 6379e187130754b867534c2a1bb2209f876d6808
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 11 00:16:04 2017 +0000

    Daily bump.
    
    From-SVN: r253625

commit f629d94fadc8b72b342e70679756842ad262131b
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Tue Oct 10 20:47:57 2017 +0200

    config.gcc: (armv7*-*-freebsd*): New target.
    
    2017-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: (armv7*-*-freebsd*): New target.
        Define TARGET_FREEBSD_ARMv7
        * config/arm/freebsd.h: Use TARGET_FREEBSD_ARMv7 to define the
        default cpu for armv7*-*-freebsd*.
    
    From-SVN: r253604

commit e6dd8b0e201390706db8d49abdf4da8b9cea22ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 10 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r253572

commit 3bafe6407a0f9e226982a188d446ea68082a99a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 9 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253534

commit 38effcb050dd7b31d863eb107e23ccc20b78f1c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 8 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253517

commit cdb80bf3aea52c784bc478014eab9b83bad56613
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 7 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r253504

commit ac36cdb1648e83ffe2f2de9a453d2f9bb2dccb05
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Oct 6 18:15:26 2017 +0000

    backport: re PR fortran/80118 (ICE with zero size parameter array)
    
    2017-10-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80118
            * expr.c (gfc_get_full_arrayspec_from_expr): If there is
            no symtree, set array spec to NULL.
    
    2017-10-06  Thomas Koenig  <tkoenig@gcc.gnu.org>
                Steven G. Kargl  <kargl@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80118
            * gfortran.dg/zero_sized_7.f90: New test.
    
    
    Co-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>
    
    From-SVN: r253500

commit ef1c165820961aeed427bfa74da4a182fa3ac55a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 6 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r253470

commit 09389af04d4bd2f55ca4f08bbc880a74b2fdb280
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 5 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253434

commit d1d18f3da4d13b1a1612ca2eea4ea6c47b6c7070
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 4 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253391

commit 2ff140e872e7feeee7ce6461e8fe7c0e785c48a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 3 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253374

commit 8d92b1002bdfeaf3b86a4b2f02cd5adb910f69e5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Oct 2 20:42:08 2017 +0200

    backport: i386.c (ix86_split_idivmod): Use mode instead of always SImode for DIV and MOD in REG_EQUAL notes.
    
            Backported from mainline
            2017-09-30  Jakub Jelinek  <jakub@redhat.com>
    
            * config/i386/i386.c (ix86_split_idivmod): Use mode instead of
            always SImode for DIV and MOD in REG_EQUAL notes.
    
    From-SVN: r253363

commit da941065873ded99cdaf68f2187ee71752c23097
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 2 18:09:20 2017 +0000

    backport: re PR tree-optimization/82337 (ICE: SSA corruption at tree-ssa-coalesce.c:1010)
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gimple-ssa-strength-reduction.c (find_phi_def): Don't record a
            phi definition if the PHI result appears in an abnormal PHI.
            (find_basis_for_base_expr): Don't record a basis if the LHS of the
            basis appears in an abnormal PHI.
    
    [gcc]
    
    2017-10-02  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/82337
            * gcc.c-torture/compile/pr82337.c: New file.
    
    From-SVN: r253360

commit 0e3317bd2bd8f93545895d7df544c625205bd286
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 2 14:04:33 2017 +0000

    opt55.ad[sb]: Move to...
    
            * opt55.ad[sb]: Move to...
            * gnat.dg/opt55.ad[sb]: ...here.
    
    From-SVN: r253352

commit b3b11bed6b41d9d4be105f863781ec68a40332b1
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon Oct 2 13:58:32 2017 +0200

    Handle libbacktrace in contrib/gcc_update
    
            contrib/
            * gcc_update (files_and_dependencies): Handle libbacktrace.
    
    trunk r253346
    
    From-SVN: r253348

commit 4a77fac921fa32db495ff0691b0b6f2a4db723ba
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 2 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r253332

commit b6d0c659f95d412838506656197616d67f9b318e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 1 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r253325

commit d1da586bc1fbf79a4b154623df284bd868483eca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 30 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253313

commit ec37f987462da49bcd1cefb162bf7abc9a92c8f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 29 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r253272

commit 3d7a1ba5bcf25cdea8c92baa86c14eb64bb3f325
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 28 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253246

commit 6790abebd56b3d84ca518c3f958c98bdabade508
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 27 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r253220

commit 4e317b22dba1d7edf686d3c667cf8ba65d74ba04
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 26 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253183

commit 297529f4ef2383c2e429d8048a7858fd8bcd9a97
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 25 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r253129

commit 008e4ef60a03c586b4b50b57ce431737c06acd84
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 24 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253120

commit 949cfd6c0e21cba235aa8f5359f8b8fff79a2a41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 23 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253112

commit e506df7f95f25b6f42c1dfc83a31802a352f23ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 22 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r253086

commit da26021242f03a270552c8db7632f3df90f3410d
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Sep 21 22:27:24 2017 +0930

    PR81996, __builtin_return_address(0) fails
    
    rs6000_return_addr assumes that the stack link is at frame+0, which is
    true for count>0.  For count==0, rs6000_return_addr is called with
    frame==frame_pointer_rtx and the stack link is *not* at frame+0 if
    -fstack-protector-all or -fsanitize=address because rs6000.h sets
    FRAME_GROWS_DOWNWARD for those options.
    
            PR target/81996
            * gcc/config/rs6000/rs6000.c (rs6000_return_addr): Use
            stack_pointer_rtx for count 0.  Update comments.  Break up
            large rtl expression.
    
    From-SVN: r253068

commit 36ba74d3dbd39778e6d4b6a0877e03e929bd2713
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Thu Sep 21 12:21:18 2017 +0000

    PR71951: Fix unwinding with -fomit-frame-pointer
    
    As described in PR71951, if libgcc is built with -fomit-frame-pointer,
    unwinding crashes, for example while doing a backtrace.  The underlying
    reason is the Dwarf unwinder does not setup the frame pointer register
    in the initialization code.  When later unwinding a function that uses
    the frame pointer, it tries to read FP using _Unwind_GetGR, and this
    crashes if has never restored FP.  To unwind correctly the first frame
    must save and restore FP (it is unwound in a special way so that it
    uses SP instead of FP).  This is done by adding -fno-omit-frame-pointer.
    
        gcc/
            PR target/71951
            * config/aarch64/aarch64.h (LIBGCC2_UNWIND_ATTRIBUTE): Define.
    
    From-SVN: r253064

commit ee58ccc740f07448eac2d6fa87434fc10088914c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 21 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r253044

commit 075223648e884b11781dd69f7f73db57fba3b6f6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 20 13:01:44 2017 +0100

    PR libstdc++/60936 fix length calculation
    
    Backport from mainline
    2017-02-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/60936
            * src/c++11/snprintf_lite.cc (__concat_size_t): Calculate length
            written to buffer, not length remaining in buffer.
    
    Backport from mainline
    2017-02-08  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * src/c++11/snprintf_lite.cc (__err): Update bug reporting URL.
    
    From-SVN: r253007

commit db06ecc2055b0909a98a99b5e9befe194018c567
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 20 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r252988

commit 204ea3d729c871a858cfad3477c1816b1dbb2efb
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Sep 19 18:21:03 2017 +0200

    i386.c (fold_builtin_cpu): Add M_AMDFAM17H to processor_model and "amdfam17h" to arch_names_table.
    
            * config/i386/i386.c (fold_builtin_cpu): Add M_AMDFAM17H
            to processor_model and "amdfam17h" to arch_names_table.
            * doc/extend.texi (__builtin_cpu_is): Document amdfam17h CPU name.
    
    From-SVN: r252980

commit 064b0dc2c91c8e23fa40c43ada218633415b38f1
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 10:18:02 2017 +0200

    Ignore empty string in target attribute (PR c++/81355).
    
    2017-09-19  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * config/i386/i386.c (sorted_attr_string): Skip empty strings.
    
    From-SVN: r252967

commit 5f26b8e1839ad02994582217d703ead5180885de
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Sep 19 10:17:20 2017 +0200

    Revert backport revision.
    
    From-SVN: r252966

commit 2eb53d2648347f292de6f854ae5cfcd60f9b449a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 19 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r252959

commit e734790a81433b5cb967ed30476c87c3bbe0129e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 18 13:57:05 2017 +0100

    PR libstdc++/60936 reduce coupling between objects in libstdc++.a
    
    Backport from mainline
    2017-02-03  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/60936
            * src/c++11/Makefile.am: Add new files.
            * src/c++11/Makefile.in: Regenerate.
            * src/c++11/cow-string-inst.cc [!_GLIBCXX_USE_CXX11_ABI]
            (operator<<, operator>>, getline): Move explicit instantiations to ...
            * src/c++11/cow-string-io-inst.cc: ... new file.
            * src/c++11/cow-wstring-inst.cc [!_GLIBCXX_USE_CXX11_ABI]
            (operator<<, operator>>, getline): Move explicit instantiations to ...
            * src/c++11/cow-wstring-io-inst.cc: ... new file.
            * src/c++11/functexcept.cc (__throw_ios_failure, __throw_system_error)
            (__throw_future_error, __throw_bad_function_call):
            (__throw_regex_error): Move functions for C++11 exceptions to the
            files that define the exception types.
            * src/c++11/functional.cc (__throw_bad_function_call): Move here.
            * src/c++11/future.cc (__throw_future_error): Likewise.
            * src/c++11/ios.cc (__throw_ios_failure): Likewise.
            * src/c++11/regex.cc (__throw_regex_error): Likewise.
            * src/c++11/snprintf_lite.cc (__concat_size_t): Print decimal
            representation directly instead of calling __int_to_char.
            * src/c++11/sso_string.cc (__sso_string): New file for definition
            of __sso_string type.
            * src/c++11/string-io-inst.cc [_GLIBCXX_USE_CXX11_ABI]: New file for
            explicit instantiations of narrow string I/O functions.
            * src/c++11/system_error.cc (__throw_system_error): Move here.
            (__sso_string): Move to new file.
            * src/c++11/wstring-io-inst.cc [_GLIBCXX_USE_CXX11_ABI]: New file for
            explicit instantiations of wide string I/O functions.
            * src/c++98/misc-inst.cc [_GLIBCXX_USE_CXX11_ABI] (operator<<)
            (operator>>, getline): Remove explicit instantiations from here.
    
    From-SVN: r252925

commit 73ac28aa258d9461d2834b302876d771acffca63
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 18 11:10:06 2017 +0000

    backport: [multiple changes]
    
    2017-09-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-04-07  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80341
            * gcc.dg/torture/pr80341.c: New testcase.
    
            2017-04-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80281
            * gcc.dg/torture/pr80281.c: New testcase.
    
    From-SVN: r252920

commit 8737eda550ff0c6b64028aa755a88d003b0ce266
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Sep 18 11:07:50 2017 +0000

    backport: [multiple changes]
    
    2017-09-18  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-08-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81977
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Fix look through
            memcpy.
    
            * g++.dg/torture/pr81977.C: New testcase.
    
            2017-09-04  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/82084
            * fold-const.h (can_native_encode_string_p): Declare.
            * fold-const.c (can_native_encode_string_p): Factor out from ...
            (native_encode_string): ... here.
            * tree-vect-stmts.c (vectorizable_store): Call it to avoid
            vectorizing stores from constants we later cannot handle.
    
            * g++.dg/torture/pr82084.C: New testcase.
    
            2017-07-25  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81505
            * fold-const.c (fold_negate_const): TREE_OVERFLOW should be
            sticky.
    
            * gcc.dg/ubsan/pr81505.c: New testcase.
    
    From-SVN: r252919

commit 3e7a69a51d2ff22dd370f3dcd21be442436c6057
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Sep 18 11:08:21 2017 +0200

    Remove test failing on the branch.
    
    2017-09-18  Martin Liska  <mliska@suse.cz>
    
            * gcc.dg/asan/pr81224.c: Remove.
    
    From-SVN: r252911

commit b082efe1ddfd4b173002a7cebc11d7599a054543
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 18 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r252898

commit 92b1294521d4c7515928fb482a781c3b1a17eb43
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 17 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r252890

commit b8a3405d21c2d12625444ad03ca158e266291dbb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 16 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r252868

commit 78a69f6248bf721ea5674bbdeecbe525699db9cd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:42:20 2017 +0200

    backport: re PR c++/81314 (Undefined reference to a function with -fopenmp)
    
            Backported from mainline
            2017-09-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81314
            * cp-gimplify.c (omp_var_to_track): Look through references.
            (omp_cxx_notice_variable): Likewise.
    
            * testsuite/libgomp.c++/pr81314.C: New test.
    
    From-SVN: r252864

commit 45136c2db85dedb48751491ec4391b48b2f629af
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:41:29 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * gcc.target/powerpc/pr82112.c: New test.
            * g++.dg/ext/altivec-18.C: New test.
    
    From-SVN: r252863

commit f235843187f5a7061b819267fd145126ce68dea6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:40:51 2017 +0200

    backport: re PR target/82112 (internal compiler error: in fold_convert_loc, at fold-const.c:2262)
    
            Backported from mainline
            2017-09-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/82112
            * c-common.c (sync_resolve_size): Instead of c_dialect_cxx ()
            assertion check that in the condition.
            (get_atomic_generic_size): Likewise.  Before testing if parameter
            has pointer type, if it has array type, call for C++
            default_conversion to perform array-to-pointer conversion.
    
            * c-c++-common/pr82112.c: New test.
            * gcc.dg/pr82112.c: New test.
    
    From-SVN: r252862

commit 7ba78027d837b38a3a98f52ab497617799821c69
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:39:36 2017 +0200

    backport: re PR middle-end/81768 (error: control flow in the middle of basic block)
    
            Backported from mainline
            2017-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81768
            * omp-low.c (lower_omp_for): Recompute tree invariant if
            gimple_omp_for_initial/final is ADDR_EXPR.
    
            * gcc.dg/gomp/pr81768-2.c: New test.
    
    From-SVN: r252861

commit cf4cb9b3d6bbd7a33739a28d11e6a79bbd41ccd3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:38:43 2017 +0200

    backport: re PR middle-end/81768 (error: control flow in the middle of basic block)
    
            Backported from mainline
            2017-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81768
            * omp-low.c (expand_omp_simd): Force second operands of COND_EXPR
            into gimple val before gimplification fo the COND_EXPR.
    
            * gcc.dg/gomp/pr81768-1.c: New test.
    
    From-SVN: r252860

commit 674116540c1d0b8bb531bcdf36380e40815b4cb6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:37:58 2017 +0200

    backport: lra-remat.c (reg_overlap_for_remat_p): Fix a pasto.
    
            Backported from mainline
            2017-09-04  Jakub Jelinek  <jakub@redhat.com>
    
            * lra-remat.c (reg_overlap_for_remat_p): Fix a pasto.
    
    From-SVN: r252859

commit 2f702d5bc36b7b78747728139babe0ff4995b040
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:37:16 2017 +0200

    backport: re PR c/81687 (Compiler drops label in OpenMP region)
    
            Backported from mainline
            2017-08-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/81687
            * omp-low.c (omp_copy_decl): Don't remap FORCED_LABEL or DECL_NONLOCAL
            LABEL_DECLs.
            * tree-cfg.c (move_stmt_op): Don't adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels.
            (move_stmt_r) <case GIMPLE_LABEL>: Adjust DECL_CONTEXT of FORCED_LABEL
            or DECL_NONLOCAL labels here.
    
            * testsuite/libgomp.c/pr81687-1.c: New test.
            * testsuite/libgomp.c/pr81687-2.c: New test.
    
    From-SVN: r252858

commit 40e90247138350ed9cbc4a811f198ee518216ac7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:35:48 2017 +0200

    backport: re PR target/81621 (ICE in delete_insn, at cfgrtl.c:167 with s390x cross compiler)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81621
            * bb-reorder.c (pass_partition_blocks::execute): Return TODO_df_finish
            after setting changeable df flags.
    
            * gcc.dg/pr81621.c: New test.
    
    From-SVN: r252857

commit b119515b708b2a8ef36806f43142e41f131f8e2a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:34:10 2017 +0200

    backport: re PR middle-end/81052 (ICE in verify_dominators, at dominance.c:1184)
    
            Backported from mainline
            2017-08-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/81052
            * omp-low.c (diagnose_sb_0): Handle flag_openmp_simd like flag_openmp.
            (pass_diagnose_omp_blocks::gate): Enable also for flag_openmp_simd.
    
            * c-c++-common/pr81052.c: New test.
    
    From-SVN: r252856

commit ab6f816a7a0152b1027510e207d642a8a7186b31
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:33:08 2017 +0200

    backport: re PR c/45784 (gcc OpenMP - error: invalid controlling predicate)
    
            Backported from mainline
            2017-07-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/45784
            * c-omp.c (c_finish_omp_for): If the condition is wrapped in
            rhs of COMPOUND_EXPR(s), skip them and readd their lhs into
            new COMPOUND_EXPRs around the rhs of the comparison.
    
            * testsuite/libgomp.c/pr45784.c: New test.
            * testsuite/libgomp.c++/pr45784.C: New test.
    
    From-SVN: r252855

commit 46c9024eccf8064477f7d72ff98d31c21a9be0d0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:32:05 2017 +0200

    backport: re PR target/81766 (ICE in maybe_add_or_update_dep_1, at sched-deps.c:924 caused by r250815)
    
            Backported from mainline
            2017-08-08  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/81766
            * function.c (thread_prologue_and_epilogue_insns): Restore
            behavior of always calling find_many_sub_basic_blocks on
            the inserted prologue.
    
            * gcc.target/i386/pr81766.c: New testcase.
    
            2017-08-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/79499
            * function.c (thread_prologue_and_epilogue_insns): Determine blocks
            for find_many_sub_basic_blocks bitmap by looking up BLOCK_FOR_INSN
            of first NONDEBUG_INSN_P in each of the split_prologue_seq and
            prologue_seq sequences - if any.
    
            * gcc.dg/pr79499.c: New test.
    
    From-SVN: r252854

commit 5be796af28de69adcc4cfb2052bbcfc77a125302
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:30:40 2017 +0200

    re PR libquadmath/65757 (gfortran gives incorrect result for anint with real*16 argument)
    
            PR libquadmath/65757
            * math/roundq.c: Cherry-pick upstream glibc 2015-04-28 change.
    
    From-SVN: r252853

commit 88e8edf090ff8645113d836b2cf9a11ed9533887
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 15 23:30:04 2017 +0200

    backport: re PR target/81225 (ICE with -mavx512ifma -O3 -ffloat-store)
    
            Backported from mainline
            2017-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/81225
            * config/i386/sse.md (vec_extract_lo_<mode><mask_name>): For
            V8FI, V16FI and VI8F_256 iterators, use <store_mask_predicate> instead
            of nonimmediate_operand and <store_mask_constraint> instead of m for
            the input operand.  For V8FI iterator, always split if input is a MEM.
            For V16FI and V8SF_256 iterators, don't test if both operands are MEM
            if <mask_applied>.  For VI4F_256 iterator, use <store_mask_predicate>
            instead of register_operand and <store_mask_constraint> instead of v for
            the input operand.  Make sure both operands aren't MEMs for if not
            <mask_applied>.
    
            * gcc.target/i386/pr81225.c: New test.
    
    From-SVN: r252852

commit ebd0bf70063fb0fbf18ec5163504fbe09b00dba6
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 16:11:57 2017 +0200

    Backport r251049
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-11  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/79987
            * tree-chkp.c (chkp_get_bounds_for_decl_addr): Do not instrument
            variables of void type.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-11  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/79987
            * gcc.target/i386/mpx/pr79987.c: New test.
    
    From-SVN: r252820

commit ee93466e26460d07f13cff19860539e398034f41
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 14:15:52 2017 +0200

    Backport r249728
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * asan.c (instrument_derefs): Bail out inner references
            that are hard register variables.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/81224
            * gcc.dg/asan/pr81224.c: New test.
    
    From-SVN: r252814

commit f67627b9e663ce465730c004cfba518ed1944d95
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:21:42 2017 +0200

    Backport r251530
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * ipa-icf-gimple.c (func_checker::compare_tree_list_operand):
            Rename to ...
            (func_checker::compare_asm_inputs_outputs): ... this function.
            (func_checker::compare_gimple_asm): Use the function to compare
            also ASM constrains.
            * ipa-icf-gimple.h: Rename the function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-30  Martin Liska  <mliska@suse.cz>
    
            PR inline-asm/82001
            * gcc.dg/ipa/pr82001.c: New test.
    
    From-SVN: r252799

commit a9d25edcc2ffeef54a47037553a7490cea681e62
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:20:37 2017 +0200

    Backport r251406
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * gcc-interface/trans.c (Pragma_to_gnu): Set argument to NULL.
    
    From-SVN: r252798

commit 3f15e62ebe5145029cb73fcd4fb523ec2b27c01a
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:19:36 2017 +0200

    Backport r251400
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * gcc.c (driver_handle_option): Add new argument.
            * opts-common.c (handle_option): Pass
            target_option_override_hook.
            * opts-global.c (lang_handle_option): Add new option.
            (set_default_handlers):  Add new argument.
            (decode_options): Likewise.
            * opts.c (target_handle_option): Likewise.
            (common_handle_option): Call target_option_override_hook.
            * opts.h (struct cl_option_handler_func): Add hook for
            target option override.
            (struct cl_option_handlers): Likewise.
            (set_default_handlers): Add new argument.
            (decode_options): Likewise.
            (common_handle_option): Likewise.
            (target_handle_option): Likewise.
            * toplev.c (toplev::main): Pass targetm.target_option.override
            hook.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-29  Martin Liska  <mliska@suse.cz>
    
            PR other/39851
            * c-common.c (parse_optimize_options): Add argument to function
            call.
            * c-pragma.c (handle_pragma_diagnostic): Likewise.
    
    From-SVN: r252797

commit 4beac31dbab03d62e86cfd53f200dce2b00cff4f
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:17:18 2017 +0200

    Backport r251020
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * c-attribs.c (handle_target_attribute):
            Report warning for an empty string argument of target attribute.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-10  Martin Liska  <mliska@suse.cz>
    
            PR c++/81355
            * g++.dg/other/pr81355.C: New test.
    
    From-SVN: r252795

commit 0d33556fb438e2580a07cec18175ca314217b8ee
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:15:32 2017 +0200

    Backport r250951
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * ipa-icf-gimple.c (func_checker::compare_cst_or_decl): Consider
            LABEL_DECLs that can be from a different function.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-08-08  Martin Liska  <mliska@suse.cz>
    
            PR tree-opt/81696
            * gcc.dg/ipa/pr81696.c: New test.
    
    From-SVN: r252794

commit 3c0980462c997075dbadb8c7d01967658e9d73b9
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:13:57 2017 +0200

    Backport r250336
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-07-19  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/63361
            * c-c++-common/ubsan/float-cast-overflow-1.c: Add either
            -ffloat-store or -mieee for targets that need it.
    
    From-SVN: r252793

commit 29bd81b046318a058b54747a45fdeab373b81b93
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Sep 15 11:13:29 2017 +0200

    Backport r249735
    
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * ipa-visibility.c (non_local_p): Handle visibility.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * c-attribs.c (handle_alias_ifunc_attribute): Append ifunc alias
            to a function declaration.
    2017-09-15  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-06-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/81128
            * gcc.target/i386/pr81128.c: New test.
    
    From-SVN: r252792

commit 518e6d3f151ac14ce38a6b835e77c6865b81a8e1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 15 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r252777

commit 4d25283fd50e549e051303eca94936dba28b5b71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 14 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r252742

commit 74755f55a3b0149b4b2ae80ef9e2cef5c2a35bfe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 16:20:34 2017 +0100

    PR libstdc++/81468 constrain std::chrono::time_point constructor
    
            PR libstdc++/81468
            * include/std/chrono (time_point(const time_point<_Dur2>&)): Add
            missing constraint from LWG DR 1177.
            * testsuite/20_util/duration/cons/dr1177.cc: New.
            * testsuite/20_util/time_point/cons/81468.cc: New.
            * testsuite/20_util/duration/literals/range.cc: Update dg-error line.
    
    From-SVN: r252091

commit bfeb71e14686dec35d1a4c3ad055f0a3e24785e8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:22:45 2017 +0100

    Fix broken URLs in libstdc++ API docs
    
            * doc/doxygen/mainpage.html: Fix broken URLs.
    
    From-SVN: r252072

commit 6488a1af2277715f0992937d4ea61b5f8d4a14c3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 13 11:10:04 2017 +0100

    PR libstdc++/81835 fix broken URLs in libstdc++ docs
    
            PR libstdc++/81835
            * doc/xml/manual/extensions.xml: Replace unstable URL.
            * doc/html/manual/ext_demangling.html: Regenerate.
            * libsupc++/cxxabi.h (__cxa_demangle): Fix broken URL.
    
    From-SVN: r252068

commit 80eeb3b1c9996ec05b5fbe5e601737bd4aa9acb4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 13 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r252049

commit 813645411328e019d60601c35d010d98792a1a34
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 12 21:03:42 2017 +0000

    backport: re PR target/81833 (PowerPC: VSX: Miscompiles ffmpeg's scalarproduct_int16_vsx at -O1)
    
    [gcc]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * config/rs6000/altivec.md (altivec_vsum2sws): Convert from a
            define_insn to a define_expand.
            (altivec_vsum2sws_direct): New define_insn.
            (altivec_vsumsws): Convert from a define_insn to a define_expand.
    
    [gcc/testsuite]
    
    2017-09-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/81833
            * gcc.target/powerpc/pr81833-1.c: New file.
            * gcc.target/powerpc/pr81833-2.c: New file.
    
    From-SVN: r252043

commit 4464fedf28771cc64209bfc91c4a2ca4107b0ce3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 12 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251994

commit 1de44fb4a38a197f95da5318f5ec9c2ca5d7ef00
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Mon Sep 11 21:49:34 2017 +0000

    xtensa: fix PR target/82181
    
    2017-09-11  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            * config/xtensa/xtensa.c (xtensa_mem_offset): Check that both
            words of DImode object are reachable by xtensa_uimm8x4 access.
    
    From-SVN: r251989

commit 38f0cf74ccc32ed868b1419eb65065ee28578809
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 11 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r251954

commit 0afd58a5b85f54cce58c5f1da3a80a67fe64a30c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sun Sep 10 10:05:31 2017 +0100

    PR c++/81852 define feature-test macro for -fthreadsafe-statics
    
    gcc/c-family:
    
            PR c++/81852
            * c-cppbuiltin.c (c_cpp_builtins): Define __cpp_threadsafe_static_init.
    
    gcc/testsuite:
    
            PR c++/81852
            * g++.dg/cpp1y/feat-cxx11.C: Check __cpp_threadsafe_static_init.
            * g++.dg/cpp1y/feat-cxx14.C: Likewise.
            * g++.dg/cpp1y/feat-cxx98.C: Likewise.
            * g++.dg/cpp1y/feat-neg.C: Likewise.
            * g++.dg/cpp1z/feat-cxx1z.C: Likewise.
    
    From-SVN: r251947

commit 8b2d1f48e25cc570acff20341e6160ad6bcc707a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 10 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r251943

commit 9fa6ae75e2eab3f6fe1bba0f09e89b3a28fe759a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251915

commit 264d54942cd07c746649d6022d7531aca469e478
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 8 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251859

commit e4ed8f3100893753746f14027f43c8be30d0fe3c
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Sep 7 07:20:51 2017 +0000

    x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Replace 'struct ucontext' with ucontext_t.
    
    2017-09-07  Matthias Klose  <doko@ubuntu.com>
    
            * include/x86_64-signal.h (HANDLE_DIVIDE_OVERFLOW): Replace
            'struct ucontext' with ucontext_t.
            * include/i386-signal.h (HANDLE_DIVIDE_OVERFLOW): Likewise.
            * include/s390-signal.h (HANDLE_DIVIDE_OVERFLOW): Likewise.
    
    From-SVN: r251831

commit cf35756c0ec1b30734faedd6a307a1d32ca19d1f
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Sep 7 07:15:24 2017 +0000

    backport: re PR sanitizer/81066 (sanitizer_stoptheworld_linux_libcdep.cc:276:22: error: aggregate ‘sigaltstack handler_stack’ has incomplete type and cannot be defined)
    
    2017-09-07  Matthias Klose  <doko@ubuntu.com>
    
            Backported from mainline
            2017-07-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/81066
            * sanitizer_common/sanitizer_linux.h: Cherry-pick upstream r307969.
            * sanitizer_common/sanitizer_linux.cc: Likewise.
            * sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc: Likewise.
            * tsan/tsan_platform_linux.cc: Likewise.
    
    From-SVN: r251828

commit 3d31ccc86d4ac113632f0b1f6c385adc43ade834
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 7 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r251823

commit 3e4bce0605228ca8219bf821854f4206af65c2dd
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Sep 6 18:44:51 2017 +0000

    backport: re PR tree-optimization/81987 (ICE in verify_ssa with -O3 -march=skylake-avx512)
    
    [gcc]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * gimple-ssa-strength-reduction.c (insert_initializers): Don't
            insert an initializer in a location not dominated by the stride
            definition.
    
    [gcc/testsuite]
    
    2017-09-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline:
            2017-08-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81987
            * g++.dg/torture/pr81987.C: New file.
    
    From-SVN: r251816

commit 35cd965eb515d2f72d4b0d3e0c44d40c59735d37
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 6 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251748

commit e8708c2fa99ad2ff0410b350db9a9aea5ae6c985
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Sep 5 21:50:38 2017 +0000

    backport: re PR tree-optimization/81503 (Wrong code at -O2)
    
    [gcc]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Ensure
            folded constant fits in the target type; reorder tests for clarity.
    
    [gcc/testsuite]
    
    2017-09-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/81503
            * gcc.c-torture/execute/pr81503.c: New file.
    
    From-SVN: r251744

commit 3a99ed55e172795d2f88f18e2d694c9cfec78133
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 5 11:30:54 2017 +0100

    Remove owner_less<void> test that fails on gcc-6-branch
    
            * testsuite/20_util/owner_less/noexcept.cc: Remove owner_less<void>
            tests.
    
    From-SVN: r251708

commit fa0705724a2eb71f1bfc1a77121bcacd0108f137
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 09:16:52 2017 +0000

    utils.c (unchecked_convert): When the result type is a non-biased integral type with size 0...
    
            * gcc-interface/utils.c (unchecked_convert): When the result type is a
            non-biased integral type with size 0, set the result to 0 directly.
    
    From-SVN: r251703

commit f5ad6819790b5f00859892039b247526268f243a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 08:31:50 2017 +0000

    trans.c (Call_to_gnu): If this is a function call and there is no target...
    
            * gcc-interface/trans.c (Call_to_gnu): If this is a function call and
            there is no target, do not create a temporary for the return value for
            an allocator either.
    
    From-SVN: r251697

commit 0812c16f58a281eadcfe5630d433ec906d1e93f1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Sep 5 08:21:14 2017 +0000

    trans.c (pos_to_constructor): Skip conversions to an unconstrained array type.
    
            * gcc-interface/trans.c (pos_to_constructor): Skip conversions to an
            unconstrained array type.
    
    From-SVN: r251694

commit 3e29f12d124681ddd3ad0d7c4256ba8e1f703ff6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 5 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251687

commit 8e6bee784d0737b2a13b8f23f223fc3df37bc3ad
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Sep 4 20:48:36 2017 +0200

    mpx-os-support.h: New file.
    
            * gcc.target/i386/mpx/mpx-os-support.h: New file.
            * gcc.target/i386/mpx/mpx-check.h: Include mpx-os-support.h.
            (check_osxsave): New function.
            (main): Use __get_cpuid_count and return NORUNRES on failure.
            Use check_osxsave.
            * gcc.target/i386/mpx/va-arg-pack-1-lbv.c (foo1): Use
            __builtin_va_arg_pack instead of __va_arg_pack.
            * gcc.target/i386/mpx/va-arg-pack-1-nov.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-1-ubv.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-lbv.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-nov.c (foo1): Ditto.
            * gcc.target/i386/mpx/va-arg-pack-2-ubv.c (foo1): Ditto.
    
    From-SVN: r251685

commit 1cc486601816676779db6f2f30499227881fe9ed
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:52:30 2017 +0100

    PR libstdc++/81751 don't call fflush(NULL)
    
    Backport from mainline
    2017-08-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79820
            PR libstdc++/81751
            * config/io/basic_file_stdio.cc (sys_open(FILE*, ios_base::openmode)):
            Call fflush on the stream instead of calling sync() while _M_cfile is
            null. Restore original value of errno.
            * testsuite/ext/stdio_filebuf/char/79820.cc: New.
            * testsuite/ext/stdio_filebuf/char/81751.cc: New.
    
    From-SVN: r251676

commit 9663671db25f8157ffbf8f937ae7491e91ec2c0a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:52:25 2017 +0100

    PR libstdc++/53984 handle exceptions in basic_istream::sentry
    
    Backport from mainline
    2017-07-25  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/53984
            * include/bits/basic_ios.h (basic_ios::_M_setstate): Adjust comment.
            * include/bits/istream.tcc (basic_istream::sentry): Handle exceptions
            during construction.
            * include/std/istream: Adjust comments for formatted input functions
            and unformatted input functions.
            * testsuite/27_io/basic_fstream/53984.cc: New.
            * testsuite/27_io/basic_istream/sentry/char/53984.cc: New.
    
    From-SVN: r251675

commit f3aca8e0d9f74bdfeeba5cbe0d8673a8ef98fdeb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:52:20 2017 +0100

    PR libstdc++/81017 add noexcept to std::function move operations
    
    Backport from mainline
    2017-06-08  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81017
            * include/std/functional (function::function(function&&))
            (function::operator=(function&&)): Add noexcept.
            * testsuite/20_util/function/assign/move.cc: Check for noexcept.
            * testsuite/20_util/function/cons/move.cc: Likewise.
    
    From-SVN: r251674

commit ed17fb7f1fc104a16fb5bd966f6db2b82470b716
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:52:15 2017 +0100

    Add noexcept to shared_ptr owner comparisons (LWG 2873)
    
    Backport from mainline
    2017-06-05  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/shared_ptr_base.h (__shared_ptr::owner_before)
            (__weak_ptr::owner_before, _Sp_owner_less::operator()): Add noexcept
            specifiers as per LWG 2873 and LWG 2942.
            * testsuite/20_util/owner_less/noexcept.cc: New.
            * testsuite/20_util/shared_ptr/observers/owner_before.cc: Test
            noexcept guarantees.
            * testsuite/20_util/weak_ptr/observers/owner_before.cc: Likewise.
    
    From-SVN: r251673

commit 363d50800142757114eeed37bb52613803a1e5b1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:17:11 2017 +0100

    PR c++/82039 suppress -Wzero-as-null-pointer-constant warning
    
    Backport from mainline
    2017-08-31  Jonathan Wakely  <jwakely@redhat.com>
    
            PR c++/82039
            * include/ext/new_allocator.h (__gnu_cxx::new_allocator::allocate):
            Adjust null pointer constant to avoid warning.
    
    From-SVN: r251668

commit ec7b8e341e55351262f26844f3b8ecb92a54c339
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:17:07 2017 +0100

    PR libstdc++/81891 fix double-free in hashtable constructor
    
    Backport from mainline
    2017-08-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81891
            * include/bits/hashtable.h (_Hashtable(_InputIterator, _InputIterator,
            size_type, const _H1&, const _H2&, const _Hash&, const _Equal&,
            const _ExtractKey&, const allocator_type&)): Let destructor do clean
            up if an exception is thrown.
            * testsuite/23_containers/unordered_map/cons/81891.cc: New.
    
    From-SVN: r251667

commit 10d971cb3fc75d79d9e4732662473559bc4f1a82
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:17:03 2017 +0100

    PR libstdc++/81599 fix typo in Doxygen comments
    
    Backport from mainline
    2017-07-31  Marek Polacek  <polacek@redhat.com>
    
            PR libstdc++/81599
            * include/bits/stl_stack.h: Fix typo.
    
    From-SVN: r251666

commit 2044a00d7b86d88caa71351a88bc176bdb1e939a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 4 17:16:58 2017 +0100

    PR libstdc++/81338 correctly manage string capacity
    
    Backport from mainline
    2017-07-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/81338
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI] (basic_string):
            Declare basic_stringbuf to be a friend.
            * include/bits/sstream.tcc (basic_stringbuf::overflow)
            [_GLIBCXX_USE_CXX11_ABI]: Use unused capacity before reallocating.
            * include/std/sstream (basic_stringbuf::__xfer_bufptrs): Update string
            length to buffer length.
            * testsuite/27_io/basic_stringstream/assign/81338.cc: New.
    
    From-SVN: r251665

commit 8f1d57f3a30bb9da0f302cd51196464fe7830b72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 4 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r251631

commit 098887e37def5abe3f5315cdbd7cac6d2d7096a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 3 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r251622

commit 89817f8640533478a8d7d0755f32951f58d8d977
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Sat Sep 2 21:31:44 2017 +0200

    backport: re PR fortran/81770 (Bogus warning: Pointer in pointer assignment might outlive the pointer target)
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * expr.c (gfc_check_pointer_assign): Improve the check whether pointer
            may outlive pointer target.
    
    
    2017-09-02  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/81770
            * gfortran.dg/warn_target_lifetime_3.f90: Fix a typo.
            * gfortran.dg/warn_target_lifetime_4.f90: New testcase.
    
    From-SVN: r251619

commit 0f1977c198931c7e48ebbf69fffb93a78d8700ce
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 2 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251615

commit 42a877be211f4f46d975ff2c7d69c50db21df5bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 1 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r251578

commit 5ed6ff351439c62229fff770dfa967b796970960
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 31 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r251551

commit 01ee9cb649a99322f2b4a33bde77800b92f3dd7a
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Aug 30 13:38:27 2017 +0000

    backport: re PR target/81593 (Optimize PowerPC vector set from vector extract)
    
    [gcc]
    2017-08-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-08-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81593
            * config/rs6000/vsx.md (vsx_concat_<mode>_1): New combiner insns
            to recognize inserting into a vector from a double word element
            that was extracted from another vector, and eliminate extra
            XXPERMDI instructions.
            (vsx_concat_<mode>_2): Likewise.
            (vsx_concat_<mode>_3): Likewise.
            (vsx_set_<mode>, VSX_D): Rewrite vector set in terms of vector
            concat to allow optimizing inserts from previous extracts.
    
    [gcc/testsuite]
    2017-08-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-08-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81593
            * gcc.target/powerpc/vec-setup.h: New tests to test various
            combinations of setting up vectors of 2 double word elements.
            * gcc.target/powerpc/vec-setup-long.c: Likewise.
            * gcc.target/powerpc/vec-setup-double.c: Likewise.
            * gcc.target/powerpc/vec-setup-be-long.c: Likewise.
            * gcc.target/powerpc/vec-setup-be-double.c: Likewise.
            * gcc.target/powerpc/vsx-extract-6.c: New tests for optimzing
            vector inserts from vector extracts.
            * gcc.target/powerpc/vsx-extract-7.c: Likewise.
    
    From-SVN: r251532

commit 06b02ed08f90ef3da716adb3689fae5d474e60b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 30 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251442

commit 20b3683e12724ae655267c307ae657d731aa3dc1
Author: Michael Meissner <meissner@gcc.gnu.org>
Date:   Tue Aug 29 21:06:21 2017 +0000

    <add missing ChangeLogs>
    
    [gcc]
    2017-07-13  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If GLIBC
            provides the hardware capability bits, define the macro
            __BUILTIN_CPU_SUPPORTS__.
            * config/rs6000/rs6000.c (cpu_expand_builtin): Generate a warning
            if GLIBC does not provide the hardware capability bits.  Add a
            gcc_unreachable call if the built-in cpu function is neither
            __builtin_cpu_is nor __builtin_cpu_supports.
            * doc/extend.texi (PowerPC built-in functions): Document that
            GLIBC 2.23 or newer is needed by __builtin_cpu_is and
            __builtin_cpu_supports.  Document the macros defined by GCC if the
            newer GLIBC is available.
    
    [gcc/testsuite]
    2017-07-13  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * lib/target-supports.exp
            (check_ppc_cpu_supports_hw_available): New test to make sure
            __builtin_cpu_supports works on power7 and newer.
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * gcc.target/powerpc/cpu-builtin-1.c: Add guard against using
            __builtin_cpu_supports with old GLIBC's.
    
    From-SVN: r251437

commit 7cc9fbc381ffb2f3d17119e8eb3c6b6eb1c3f672
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 29 17:57:02 2017 +0930

    [RS6000] linux startfile/endfile
    
    These need to match the gnu-user.h definitions to support
    --enable-default-pie.  Otherwise we end up linking the wrong startup
    files when defaulting to PIE.
    
            PR target/81170
            PR target/81295
            * config/rs6000/sysv4.h (STARTFILE_LINUX_SPEC): Upgrade to
            match gnu-user.h startfile.
            (ENDFILE_LINUX_SPEC): Similarly.
    
    From-SVN: r251405

commit 6ec4e31622fbdcaf5a2babcca81698837a89724f
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 29 17:55:17 2017 +0930

    PR driver/81523: Make -static override -pie
    
    -static and -pie together behave differently depending on whether GCC is
    configured with --enable-default-pie.  On x86, "-static -pie" fails to
    create executable when --enable-default-pie isn't used, but creates a
    static executable when --enable-default-pie is used.  This patch makes
    -static completely override -pie to create a static executable, regardless
    if --enable-default-pie is used to configure GCC.
    
            PR target/81170
            PR target/81295
            PR driver/81523
            * gcc.c (NO_PIE_SPEC): Delete.
            (PIE_SPEC): Define as !no-pie/pie.  Move static|shared|r
            exclusion..
            (LINK_PIE_SPEC): ..to here.
            (LINK_COMMAND_SPEC): Support -no-pie.
            * config/gnu-user.h (GNU_USER_TARGET_STARTFILE_SPEC): Correct
            chain of crtbegin*.o selection, update for PIE_SPEC changes and
            format.
            (GNU_USER_TARGET_ENDFILE_SPEC): Similarly.
            * config/sol2.h (STARTFILE_CRTBEGIN_SPEC): Similarly.
            (ENDFILE_CRTEND_SPEC): Similarly.
    
    From-SVN: r251404

commit 9c1607ee9675c3ea237d3d9d38e757927c8db3cb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 29 00:16:30 2017 +0000

    Daily bump.
    
    From-SVN: r251393

commit 1b0d2bdb67b95548b1da7ecb58be013fbeb37921
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 28 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r251371

commit 8fc049ae93549154394c8406109c61251ba878ac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 27 00:16:33 2017 +0000

    Daily bump.
    
    From-SVN: r251365

commit 1baa7e58afc5114fbc5b5411a48e452739499879
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 26 00:16:37 2017 +0000

    Daily bump.
    
    From-SVN: r251360

commit 8bee54f3897ec87deca7bc966dba6256f3be9ff7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 25 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r251344

commit 4683cd1ceaf764debdbff3630964f3ebf93155be
Author: Yvan Roux <yvan.roux@linaro.org>
Date:   Thu Aug 24 13:20:22 2017 +0000

    PR c++/80287 C++ crash with __attribute((may_alias))
    
    gcc/
    2017-08-24  Yvan Roux  <yvan.roux@linaro.org>
    
            Backport from mainline
            2017-04-17  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR c++/80287
            * class.c (fixup_may_alias): Fix all type variants.
    
    gcc/testsuite
    2017-08-24  Yvan Roux  <yvan.roux@linaro.org>
    
            Backport from mainline
            2017-08-22  Yvan Roux  <yvan.roux@linaro.org>
    
            PR c++/80287
            * g++.dg/pr8028.C: New test.
    
    From-SVN: r251331

commit 3db1544da0dee0d031ebd7869ac8a88eb7fe5568
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 24 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251323

commit f120941cb1fd9df8e064ff1be5a589245425c556
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 23 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251298

commit 8e714fb8a6afa7fbcc4be349fbcb3a7be718a971
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Aug 22 15:10:58 2017 -0500

    backport: re PR target/80210 (ICE in in extract_insn, at recog.c:2311 on ppc64 for with __builtin_pow)
    
    gcc/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * config/rs6000/rs6000.c (rs6000_activate_target_options): New function.
            (rs6000_set_current_function): Rewrite function to use it.
    
    gcc/testsuite/
            Backport from mainline
            2017-08-17  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80210
            * gcc.target/powerpc/pr80210.c: New test.
    
    From-SVN: r251292

commit 79e53bbb7045b39da64833add393c4e6b1807166
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Aug 22 07:57:40 2017 +0000

    backport: re PR target/81910 ([avr] ICE with "address" attribute on type)
    
            Backport from 2017-08-22 trunk r251256.
            PR target/81910
            * config/avr/avr.c (avr_handle_addr_attribute): Early return if
            not VAR_P. Filter attribute warnings with OPT_Wattributes.
            (avr_attribute_table) <io, io_low, address>: Initialize
            .decl_required with true.
    
    From-SVN: r251258

commit 911f135f8e3e7420c0c56a201526873e0f8e4ca5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 22 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r251251

commit b3de47f17b98a4ba50426922eadc30c6ad50324a
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 21 12:44:23 2017 +0000

    re PR target/79883 (avr i18n: untranslated "interrupt" or "signal")
    
            PR target/79883
            * config/avr/avr.c (avr_set_current_function): Typo in diagnostic.
    
    From-SVN: r251225

commit 10d8c8b0c16ad7141ebaff1257ee72ae3106627d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 21 00:16:41 2017 +0000

    Daily bump.
    
    From-SVN: r251213

commit 931e9fc48856133d5ba4836989d6bceb287b4d41
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 20 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r251203

commit de96f5e4b7225dc8cbcd312847177640cc8ffb70
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Aug 19 10:23:56 2017 +0200

    re PR target/81894 (Typo in x86 built-in function list)
    
            PR target/81894
            * doc/extend.texi (x86 Built-in Functions): Correct the name of
            __builtin_ia32_lzcnt_u16.
    
    From-SVN: r251199

commit 4fc5b1c7a503ed472560adbb358f63ad099862c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 19 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r251194

commit a82ae6e8bb38fdd3d7342ada4cff54656dc41900
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 18 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r251176

commit b5dc1b4e1ecbe5d3242293716dcfb8797f8748b7
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Aug 17 21:38:20 2017 +0200

    backport: re PR target/81861 (ASan pr64820.c testcase segfaults with LTO and -fstack-protector-strong)
    
    2017-08-17  Uros Bizjak  <ubizjak@gmail.com>
    
            Backport from mainline
            2017-08-17  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR target/81861
            * config/i386/i386.c (ix86_option_override_internal): Save target
            specific options after ix86_stack_protector_guard_reg was changed.
    
    From-SVN: r251163

commit eab59d7a46d6a56f294d0887a5a59c989586ef16
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 17 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r251137

commit 5b80bee559d9db035a6f30fbcac360cf6acd07a4
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Aug 16 14:11:26 2017 +0000

    backport: re PR tree-optimization/81354 (Segmentation fault in SSA Strength Reduction using -O3)
    
    [gcc]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Insert on edges rather than explicitly creating landing pads.
            (analyze_candidates_and_replace): Commit edge inserts.
    
    
    [gcc/testsuite]
    
    2017-08-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81354
            * g++.dg/torture/pr81354.C: New file.
    
    From-SVN: r251121

commit 6d31b2aea7f66796093a47cd2c68c831b99f4ea3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 16 00:18:19 2017 +0000

    Daily bump.
    
    From-SVN: r251111

commit 6c5756922d0a0cd276d3bab223683effc4d698f7
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon Aug 14 12:23:03 2017 +0000

    re PR c++/71570 (ICE on invalid variable capture in cxx_incomplete_type_diagnostic, at cp/typeck2.c:55)
    
    /cp
    2017-08-14  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71570
            * lambda.c (add_capture): Early return if we cannot capture by
            reference.
    
    /testsuite
    2017-08-14  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71570
            * g++.dg/cpp0x/lambda/lambda-ice17.C: New.
    
    From-SVN: r251091

commit 858b16f210bf899936706d2df2dc381633277b5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 14 00:17:08 2017 +0000

    Daily bump.
    
    From-SVN: r251078

commit 7a6b1ec8732f809b6d7c1a3f80a4cce1e5d417b0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 13 00:16:47 2017 +0000

    Daily bump.
    
    From-SVN: r251070

commit 9d70792987d7176c67a0f082f2f90b76bb8c8e90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 12 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r251062

commit 30be44148029719f900febb19587410055f50779
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 11 00:17:11 2017 +0000

    Daily bump.
    
    From-SVN: r251043

commit 06bb6cdf1897751f0f30a80cb2723e41105d9edf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 10 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r251015

commit 0bc826123d0b3b83e209acd2cf218ae37084662d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 9 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r250981

commit 5523c1922b0564222c63673288262b843521f40e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 8 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r250938

commit 8b261cd3d8a4eff9aab3b8b4d78ebd3f4c8d16ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 7 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250906

commit 8dd4418af20be2474af5483ee9bde1519cb85466
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 6 00:16:44 2017 +0000

    Daily bump.
    
    From-SVN: r250892

commit 4fc492b3d09f113a317f7e9b17e301b9fb4e4701
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 5 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r250887

commit 9675fb94c854d96b967371908bed8b26e8677e1d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 4 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r250862

commit 1d867cd6ac7ab7359aef86c1c12be8a282289008
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 3 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r250839

commit ee8133e7970b16767ec3c3db1c5a5bf771a2c44c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Aug 2 09:37:15 2017 +0200

    re PR target/81641 (Assemble failure with named address spaces and -masm=intel)
    
            PR target/81641
            * config/i386/i386.c (ix86_print_operand_address_as): For -masm=intel
            print "ds:" only for immediates in generic address space.
    
    testsuite/ChangeLog:
    
            PR target/81641
            * gcc.target/i386/pr81641.c: New test.
    
    From-SVN: r250817

commit a1be52786e900cc6413b0fcdbbdcab254595ce7c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 2 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r250808

commit 301ce676e79476b00b76880cc6d36146434ce836
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 1 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250754

commit 24b631b9877b65f644c644793bb72fe7d55c677e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 31 10:56:03 2017 +0200

    re PR sanitizer/81604 (Ubsan type reporting can be bogus in some cases)
    
            PR sanitizer/81604
            * ubsan.c (ubsan_type_descriptor): For UBSAN_PRINT_ARRAY don't
            change type to the element type, instead add eltype variable and
            use it where we are interested in the element type.
    
            * c-c++-common/ubsan/pr81604.c: New test.
    
    From-SVN: r250732

commit 7ceaa8493eb0fa27ac963795b16c17b3b759c35d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 31 00:16:27 2017 +0000

    Daily bump.
    
    From-SVN: r250723

commit 1f19a508a809a4fef82beca4de45c14e120d3de7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 30 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250716

commit 142ec5a59ada57d7200a41c8933afdf2e69e6b73
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 29 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r250691

commit c2dc4d4a65a49b1f475e23e9473cd14f66222b55
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Fri Jul 28 17:31:22 2017 -0500

    backport: ppc-auxv.h (PPC_FEATURE2_DARN): New define.
    
    gcc/
            Backport from mainline
            2017-07-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/ppc-auxv.h (PPC_FEATURE2_DARN): New define.
            (PPC_FEATURE2_SCV): Likewise.
            * config/rs6000/rs6000.c (cpu_supports_info): Use them.
    
    gcc/testsuite/
            Backport from mainline
            2017-07-28  Peter Bergner  <bergner@vnet.ibm.com>
    
            * gcc.target/powerpc/cpu-builtin-1.c (darn, scv): Add tests.
    
    From-SVN: r250689

commit 17cab3ac578dcf4597e77a112b5475637b900051
Author: Bin Cheng <bin.cheng@arm.com>
Date:   Fri Jul 28 11:25:08 2017 +0000

    backport: re PR target/81414 (ICE in fma steering on AArch64/cortex-a57)
    
            Backport from mainline r250496
            2017-07-25  Bin Cheng  <bin.cheng@arm.com>
    
            PR target/81414
            * config/aarch64/cortex-a57-fma-steering.c (analyze): Skip fmul/fmac
            instructions if no du chain is found.
    
            2017-07-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/81414
            * gcc.target/aarch64/pr81414.C: New.
    
    From-SVN: r250658

commit 14ea1f7edc6ad67af5200a33e1bf472724f11ea5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 28 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r250645

commit 55d7a529e42b32bd0503e4eabc5a369c8227274d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 27 11:32:33 2017 +0200

    re PR tree-optimization/81555 (Wrong code at -O1)
    
            PR tree-optimization/81555
            PR tree-optimization/81556
            * tree-ssa-reassoc.c (rewrite_expr_tree): Add NEXT_CHANGED argument,
            if true, force CHANGED for the recursive invocation.
            (reassociate_bb): Remember original length of ops array, pass
            len != orig_len as NEXT_CHANGED in rewrite_expr_tree call.
    
            * gcc.c-torture/execute/pr81555.c: New test.
            * gcc.c-torture/execute/pr81556.c: New test.
    
    From-SVN: r250612

commit 090ab9bcecaaf3ba9bda190854d3107cbb8a0849
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 27 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250599

commit 2ffa5c2abe6957a42bb5cf4fbd0d0233096819f2
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Jul 26 15:54:16 2017 +0000

    backport: rs6000.c (rs6000_elf_output_toc_section_asm_op): Align .toc.
    
    2017-07-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline r235874
            2016-05-04  Alan Modra  <amodra@gmail.com>
    
            * config/rs6000/rs6000.c (rs6000_elf_output_toc_section_asm_op):
            Align .toc.
    
    From-SVN: r250579

commit 0cd8e912b6865f16b6d29742a2e12a2fb218db86
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Jul 26 14:58:42 2017 +0000

    backport: re PR target/79883 (avr i18n: untranslated "interrupt" or "signal")
    
    gcc/
            Backport from 2016-06-15 trunk r237486.
            Backport from 2017-07-12 trunk r250156.
            PR target/79883
            PR target/67353
            * config/avr/avr.c (avr_set_current_function): Warn misspelled ISR
            only if -Wmisspelled-isr is on.  In diagnostic messages: Quote
            keywords and (parts of) identifiers.
            [WITH_AVRLIBC]: Warn functions named "ISR", "SIGNAL" or "INTERUPT".
            * doc/invoke.texi (AVR Options) <-Wmisspelled-isr>: Decument.
    
    From-SVN: r250577

commit 483f7c461705c74eee62859c680ffa18c2fa7bba
Author: Georg-Johann Lay <gjl@gcc.gnu.org>
Date:   Wed Jul 26 14:22:31 2017 +0000

    backport: re PR target/81305 ([avr] avrtiny uses LDS for SREG in ISR routines which is out of range of LDS.)
    
    gcc/
            Backport from 2017-07-05 trunk r249995.
            PR target/81305
            * config/avr/avr.c (avr_out_movhi_mr_r_xmega) [CONSTANT_ADDRESS_P]:
            Don't depend on "optimize > 0".
            (out_movhi_r_mr, out_movqi_mr_r): Same.
            (out_movhi_mr_r, out_movqi_r_mr): Same.
            (avr_address_cost) [CONSTANT_ADDRESS_P]: Don't depend cost for
            io_address_operand on "optimize > 0".
    gcc/testsuite/
            Backport from 2017-07-05 trunk r249995, r249996.
            PR target/81305
            * gcc.target/avr/isr-test.h: New file.
            * gcc.target/avr/torture/isr-01-simple.c: New test.
            * gcc.target/avr/torture/isr-02-call.c: New test.
            * gcc.target/avr/torture/isr-03-fixed.c: New test.
    
    From-SVN: r250576

commit dc704f40fc38112c0e9ff1c316a642f1b8b6774a
Author: Georg-Johann Lay <gjl@gcc.gnu.org>
Date:   Wed Jul 26 14:08:56 2017 +0000

    backport: re PR target/81407 ([avr] Diagnose if a variable in progmem needs constructing.)
    
    gcc/
            Backport from 2017-07-12 trunk r250151.
            PR target/81407
            * config/avr/avr.c (avr_encode_section_info)
            [progmem && !TREE_READONLY]: Error if progmem object needs
            constructing.
    
    From-SVN: r250574

commit 14e626646d657b7001540c21f4d8d338506a570b
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Jul 26 13:59:54 2017 +0000

    backport: re PR lto/81487 ([mingw32] ld.exe: error: asprintf failed)
    
    lto-plugin/
            Backport from 2017-07-26 gcc-7-branch r250562.
            PR lto/81487
            * lto-plugin.c (claim_file_handler): Use xasprintf instead of
            asprintf.
            [hi!=0]: Swap hi and lo arguments supplied to xasprintf.
    gcc/
            Backport from 2017-07-26 gcc-7-branch r250562.
            PR 81487
            * hsa-brig.c (brig_init): Use xasprintf instead of asprintf.
            * tree-ssa-structalias.c (alias_get_name): Same.
    
    From-SVN: r250573

commit 06fe70d6b39bd420aa533ad0545df5872cae6c9b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 26 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r250552

commit bbe46b25278df1017f19adc78e73a85a65f52df6
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jul 25 19:42:36 2017 +0000

    backport: re PR tree-optimization/81162 (UBSAN switch triggers incorrect optimization in SLSR)
    
    [gcc]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gimple-ssa-strength-reduction.c (replace_mult_candidate): Don't
            replace a negate with an add.
    
    [gcc/testsuite]
    
    2016-07-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/81162
            * gcc.dg/ubsan/pr81162.c: New file.
    
    From-SVN: r250543

commit 6a5a1368a8da4beddd187812ee93955b0ae7ab86
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jul 25 11:55:44 2017 +0000

    backport: re PR rtl-optimization/75964 (insn combiner removes comparison after ABS)
    
    gcc/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * simplify-rtx.c (simplify_const_relational_operation): Remove
            invalid handling of comparisons of integer ABS.
    gcc/testsuite/
            Backport from 2017-05-06 trunk r247719.
            PR rtl-optimization/75964
            * gcc.dg/torture/pr75964.c: New test.
    
    From-SVN: r250511

commit 6895d4beeb31be3d7f91f47a450a54eafcbb71fc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 25 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r250491

commit d0701763279d7bdadbae4f9d4b0b9c27057d24d1
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Jul 24 20:59:21 2017 +0200

    re PR target/80569 (i686: "shrx" instruction generated in 16-bit mode)
    
            PR target/80569
            * config/i386/i386.c (ix86_option_override_internal): Disable
            BMI, BMI2 and TBM instructions for -m16.
    
    testsuite/ChangeLog:
    
            PR target/80569
            * gcc.target/i386/pr80569.c: New test.
    
    From-SVN: r250479

commit 732759de17264337b708e2b432c5a8c7f5e15841
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 24 00:16:32 2017 +0000

    Daily bump.
    
    From-SVN: r250468

commit 077c0c12715b08728c8df6c706e438743b950a71
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 23 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r250455

commit a1804c525bfbab1bed4702cd18d14cb245285f85
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 22 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r250448

commit 41fc5032b634f4704d48a3e8ff2031a933970a74
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 21 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r250410

commit d01b43c2439135f6f3cf564e7391d495cfbd6520
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Thu Jul 20 22:03:48 2017 +0000

    re PR go/81393 (Bootstrap failure on s390x-linux while building libgo against recent glibc)
    
            PR go/81393
    syscall: don't use GETREGS/SETREGS on s390
    
    They were removed in recent glibc.
    
    This is a backport of https://golang.org/cl/48231 to earlier branches.
    Define required type and constants in syscall package directly, don't
    try to pull them from the system header files.
    
    From-SVN: r250403

commit 1a2f050b7e684f0403d1e22369f58535caf46714
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Jul 20 09:34:01 2017 -0500

    backport: float128-ifunc.c: Don't include auxv.h.
    
    libgcc/
            Backport from mainline
            2017-07-07  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config/rs6000/float128-ifunc.c: Don't include auxv.h.
            (have_ieee_hw_p): Delete function.
            (SW_OR_HW) Use __builtin_cpu_supports().
    
    From-SVN: r250392

commit 17e6cb6c8fb057add0f5aa5ade0dec5a9e1a9375
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 20 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r250374

commit d815411442b49c1131757fb94571e1cc3d55a376
Author: Michael Meissner <meissner@gcc.gnu.org>
Date:   Wed Jul 19 22:05:20 2017 +0000

    backport: re PR target/81193 (PowerPC GCC __builtin_cpu_is and __builtin_cpu_supports should warn about old libraries)
    
    [gcc]
    2017-07-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If GLIBC
            provides the hardware capability bits, define the macro
            __BUILTIN_CPU_SUPPORTS__.
            * config/rs6000/rs6000.c (cpu_expand_builtin): Generate a warning
            if GLIBC does not provide the hardware capability bits.  Add a
            gcc_unreachable call if the built-in cpu function is neither
            __builtin_cpu_is nor __builtin_cpu_supports.
            * doc/extend.texi (PowerPC built-in functions): Document that
            GLIBC 2.23 or newer is needed by __builtin_cpu_is and
            __builtin_cpu_supports.  Document the macros defined by GCC if the
            newer GLIBC is available.
    
    [gcc/testsuite]
    2017-07-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/81193
            * gcc.target/powerpc/cpu-builtin-1.c: Change test to use #ifdef
            __BUILTIN_CPU_SUPPORTS to see if the GLIBC is new enough that
            __builtin_cpu_is and __builtin_cpu_supports are supported.
    
    From-SVN: r250371

commit 8b0e70af882970d5aedaac0f7414a98e24f4bcf6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 19 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r250330

commit fe2abbbe582e8d0f6b28a373004706c3cd1b31f3
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Jul 18 22:16:47 2017 +0200

    re PR target/81471 (internal compiler error: in curr_insn_transform, at lra-constraints.c:3495)
    
            PR target/81471
            * config/i386/i386.md (rorx_immediate_operand): New mode attribute.
            (*bmi2_rorx<mode>3_1): Use rorx_immediate_operand as
            operand 2 predicate.
            (*bmi2_rorxsi3_1_zext): Use const_0_to_31_operand as
            operand 2 predicate.
            (ror,rol -> rorx splitters): Use const_int_operand as
            operand 2 predicate.
    
    testsuite/ChangeLog:
    
            PR target/81471
            * gcc.target/i386/pr81471.c: New test.
    
    From-SVN: r250319

commit 69808f86a1ed7dab2dd3bca7eba338072a866dcd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 18 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250292

commit d6e0b469e4930aea6b7839157927a6171f545977
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Jul 17 09:09:42 2017 +0000

    backport: re PR middle-end/80929 (Division with constant no more optimized to mult highpart)
    
            Backport from 2017-07-17 trunk r250258.
            PR 80929
            * config/avr/avr.c (avr_mul_highpart_cost): New static function.
            (avr_rtx_costs_1) [TRUNCATE]: Use it to compute mul_highpart cost.
            [LSHIFTRT, outer_code = TRUNCATE]: Same.
    
    From-SVN: r250260

commit 6f5c8d2ad8bde9ded426ffd76dbda6d5a9c2784a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 17 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250249

commit 892245478313fcd380fe22ca5fbd9c0d67fa4739
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 16 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r250228

commit 5efca3afa2fe002faf528e7625a5423cdaca86e9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 15 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r250219

commit 2c51b77e5a6a5ae4dbb372173c9672cfafc8acba
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jul 14 16:58:00 2017 +0000

    Backport PRs 66669, 68972, 80101, 80103
    
    gcc/ChangeLog:
    
    2017-07-14  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backports from trunk
    
            2017-03-23  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Change
            handling of certain combinations of target options, including the
            combinations -mpower8-vector vs. -mno-vsx, -mpower8-vector vs.
            -mno-power8-vector, and -mpower9_dform vs. -mno-power9-vector.
    
            2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/80103
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Add
            special handling for target option conflicts between dform options
            (-mpower9-dform, -mpower9-dform-vector, -mpower9-dform-scalar) and
            -mno-direct-move.
    
            2017-05-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/80101
            * config/rs6000/power6.md: Replace store_data_bypass_p calls with
            rs6000_store_data_bypass_p in seven define_bypass directives and
            in several comments.
            * config/rs6000/rs6000-protos.h: Add prototype for
            rs6000_store_data_bypass_p function.
            * config/rs6000/rs6000.c (rs6000_store_data_bypass_p): New
            function implements slightly different (rs6000-specific) semantics
            than store_data_bypass_p, returning false rather than aborting
            with assertion error when arguments do not satisfy the
            requirements of store data bypass.
            (rs6000_adjust_cost): Replace six calls of store_data_bypass_p with
            rs6000_store_data_bypass_p.
    
    gcc/testsuite/ChangeLog:
    
    2017-07-14  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backports from trunk:
    
            2017-01-23  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/66669
            * gcc.dg/loop-8.c: Modify dg-skip-if directive to exclude this
            test on powerpc targets.
    
            2017-02-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/68972
            * g++.dg/cpp1y/vla-initlist1.C: Add dg-skip-if directive to
            disable this test on power architecture.
    
            2017-03-23  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            * gcc.target/powerpc/p9-options-1.c: New test.
    
            2017-03-27  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/80103
            * gcc.target/powerpc/pr80103-1.c: New test.
    
            2017-05-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/80101
            * gcc.target/powerpc/pr80101-1.c: New test.
    
            2017-07-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            PR target/80103
            * gcc.target/powerpc/pr80103-1.c (b): Correct spelling of
            __attribute__.
    
    From-SVN: r250210

commit e48a1311adf18d6c3b5761630fbf40ee8865c1e5
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Jul 14 07:30:58 2017 +0200

    backport: re PR target/81375 (unrecognizable insn)
    
            Backport from mainline
            2017-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81375
            * config/i386/i386.md (divsf3): Add TARGET_SSE to TARGET_SSE_MATH.
            (rcpps): Ditto.
            (*rsqrtsf2_sse): Ditto.
            (rsqrtsf2): Ditto.
            (div<mode>3): Macroize insn from divdf3 and divsf3
            using MODEF mode iterator.
    
            Backport from mainline
            2017-07-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81300
            * config/i386/i386.md (setcc + movzbl/and to xor + setcc peepholes):
            Require dead FLAGS_REG at the beginning of a peephole.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-07-10  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81375
            * gcc.target/i386/pr81375.c: New test.
    
            Backport from mainline
            2017-07-04  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/81300
            * gcc.target/i386/pr81300.c: New test.
    
    From-SVN: r250196

commit 8852ab281a72c194cc0940375895f85469937b61
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r250193

commit 9200a939b137a1272ddd4d70209b633329d7f7e7
Author: Tom de Vries <tom@codesourcery.com>
Date:   Thu Jul 13 05:42:15 2017 +0000

    Backport "Fix sigsegv in find_same_succ_bb"
    
    2017-07-13  Tom de Vries  <tom@codesourcery.com>
    
            backport from mainline:
            2017-07-03  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/81192
            * tree-ssa-tail-merge.c (same_succ_flush_bb): Handle
            BB_SAME_SUCC (bb) == NULL.
    
            * gcc.dg/pr81192.c: New test.
    
    From-SVN: r250175

commit 63cfeaa869f72f51a484c240adc48b2d340e4fad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 13 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r250171

commit 42d8baca2e7553f37b628f9003408b7e9dcdf6e3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jul 12 11:15:53 2017 +0100

    Only run new test on targets that support std::promise
    
            * testsuite/30_threads/promise/members/at_thread_exit2.cc: Require
            atomic builtins.
    
    From-SVN: r250150

commit 295ccc21ff1decd32f541a18afbc2d73eb88bd0a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 12 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r250145

commit c688a67fdc81a7336f1a6f78654bd0631f8fc6f8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 11 13:38:35 2017 +0100

    PR libstdc++/80316 make promise::set_value throw no_state error
    
    Backport from mainline
    2017-04-21  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80316
            * include/std/future (_State_baseV2::_Setter::operator()): Remove
            _S_check calls that are done after the pointer to the shared state is
            already dereferenced.
            (_State_baseV2::_Setter<_Res, void>): Define specialization for void
            as partial specialization so it can be defined within the definition
            of _State_baseV2.
            (_State_baseV2::__setter): Call _S_check.
            (_State_baseV2::__setter(promise<void>*)): Add overload for use by
            promise<void>::set_value and promise<void>::set_value_at_thread_exit.
            (promise<T>, promise<T&>, promise<void>): Make _State a friend.
            (_State_baseV2::_Setter<void, void>): Remove explicit specialization.
            (promise<void>::set_value, promise<void>::set_value_at_thread_exit):
            Use new __setter overload.
            * testsuite/30_threads/promise/members/at_thread_exit2.cc: New test.
            * testsuite/30_threads/promise/members/set_exception.cc: Test
            promise<T&> and promise<void> specializations.
            * testsuite/30_threads/promise/members/set_exception2.cc: Likewise.
            Test for no_state error condition.
            * testsuite/30_threads/promise/members/set_value2.cc: Likewise.
    
    From-SVN: r250131

commit 3883dbc2ccd2398d96c65abfcb56a9182ab4987c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 11 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r250109

commit 2d6da28c59559ba6999f40df5c929b3b95fd51a5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 10 00:16:34 2017 +0000

    Daily bump.
    
    From-SVN: r250088

commit e6897127f83d3000bf8fc087eb17f9870fe0c5cc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r250077

commit af1e8f8c484c00b4029609b8fadc9acd0e61e201
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 8 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r250070

commit 296844c23d4d91fcbe52e86a9f44dfc3adf63765
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 7 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r250045

commit 9ec44561bafe1bf085091cb015fb2e4fe4b8ddea
Author: Andrew Pinski <apinski@cavium.com>
Date:   Thu Jul 6 09:31:25 2017 +0000

    aarch64.c (aarch64_load_symref_appropriately): Access the lower part of RTX appropriately.
    
    gcc
            * config/aarch64/aarch64.c (aarch64_load_symref_appropriately):
            Access the lower part of RTX appropriately.
    
    gcc/testsuite
            * gcc.target/aarch64/pr71112.c : New Testcase.
    
    From-SVN: r250014

commit e28ede6e118efc70bbb498608e2393c77a17aa26
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 6 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r250010

commit f84eb06b49479b1579fcd50abfabac2387b80a69
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 5 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r249980

commit f41ce2a4fa6161a69f836454109a5fb7c90509fe
Author: Thomas Preud'homme <thopre01@gcc.gnu.org>
Date:   Tue Jul 4 13:45:57 2017 +0000

    Fix ChangeLog format in r249597
    
    This patch fixes relative pathnames in gcc/ChangeLog for r249597.
    
    From-SVN: r249968

commit 8774a9cf3435d41cd6a89e93c9d8c34b1c5edbcf
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Jul 4 11:23:57 2017 +0100

    Use ucontext_t not struct ucontext in linux-unwind.h files.
    
    Current glibc no longer gives the ucontext_t type the tag struct
    ucontext, to conform with POSIX namespace rules.  This requires
    various linux-unwind.h files in libgcc, that were previously using
    struct ucontext, to be fixed to use ucontext_t instead.  This is
    similar to the removal of the struct siginfo tag from siginfo_t some
    years ago.
    
    This patch changes those files to use ucontext_t instead.  As the
    standard name that should be unconditionally safe, so this is not
    restricted to architectures supported by glibc, or conditioned on the
    glibc version.
    
    Tested compilation together with current glibc with glibc's
    build-many-glibcs.py.
    
            * config/aarch64/linux-unwind.h (aarch64_fallback_frame_state),
            config/alpha/linux-unwind.h (alpha_fallback_frame_state),
            config/bfin/linux-unwind.h (bfin_fallback_frame_state),
            config/i386/linux-unwind.h (x86_64_fallback_frame_state,
            x86_fallback_frame_state), config/m68k/linux-unwind.h (struct
            uw_ucontext), config/nios2/linux-unwind.h (struct nios2_ucontext),
            config/pa/linux-unwind.h (pa32_fallback_frame_state),
            config/sh/linux-unwind.h (sh_fallback_frame_state),
            config/tilepro/linux-unwind.h (tile_fallback_frame_state),
            config/xtensa/linux-unwind.h (xtensa_fallback_frame_state): Use
            ucontext_t instead of struct ucontext.
    
    From-SVN: r249957

commit d3d0373eb91d8d15669980ac95e31af46c2c5120
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Jul 4 10:15:56 2017 +0000

    BASE-VER: Bump to 6.4.1.
    
    2017-07-04  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Bump to 6.4.1.
    
    From-SVN: r249955

commit abaef5489e27672c45aa05f41ea7ed52f3fa2748
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Tue Jul 4 07:22:46 2017 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r249945

commit 8006f30a12a9082921949d700053d2f220997e68
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Tue Jul 4 07:15:57 2017 +0000

    2017-07-04  Richard Biener  <rguenther@suse.de>
    
            Update displayed copyright years to include 2017.
    
    From-SVN: r249944

commit e53b2fb82cd237668b1f66de6522b903e9f9b5db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 4 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r249940

commit 60b55661c98adb4e6e2db818b71778ed456ac7c2
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Jul 3 14:33:00 2017 +0200

    backport: rs6000.md (add<mode>3): Use reg_or_subregno instead of REGNO.
    
    Backport from trunk:
    
    2017-06-15  Segher Boessenkool  <segher@kernel.crashing.org>
    
    * config/rs6000/rs6000.md (add<mode>3): Use reg_or_subregno instead
    of REGNO.
    
    From-SVN: r249906

commit 99cb9899be59598161efa61b606862971adf4c0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 3 00:16:33 2017 +0000

    Daily bump.
    
    From-SVN: r249890

commit 6a4c1f16ac78212e3a7928643ae6959df8286fc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 2 00:16:25 2017 +0000

    Daily bump.
    
    From-SVN: r249874

commit 1fe4c75bd971a47b26727fb8b2e35969e9dcf33b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 1 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249859

commit 4d8622aff99c14ff0dfde457b3001068860adbbe
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Jun 30 12:09:12 2017 +0000

    backport: re PR target/80510 (Optimize Power7/power8 Altivec load/stores)
    
    [gcc]
    2017-06-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * config/rs6000/rs6000.md (ALTIVEC_DFORM): Do not allow DImode in
            32-bit, since indexed is not valid for DImode.
            (mov<mode>_hardfloat32): Reorder ISA 2.07 load/stores before ISA
            3.0 d-form load/stores to be the same as mov<mode>_hardfloat64.
            (define_peephole2 for Altivec d-form load): Add 32-bit support.
            (define_peephole2 for Altivec d-form store): Likewise.
    
    [gcc/testsuite]
    2017-06-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: Allow test to run on 32-bit.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
    From-SVN: r249836

commit 35a9bad7e60fe4db9c47a28666d51625cd40719d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 30 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r249824

commit a07e22361c621128cf8eac691b9cdd4a9bb67e52
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 29 18:26:45 2017 +0000

    backport: re PR sanitizer/78992 (Incorrect sigaction definition on 32-bit sparc)
    
            Backport from mainline
            2017-01-10  James Clarke  <jrtc27@jrtc27.com>
    
            PR sanitizer/78992
            * sanitizer_common/sanitizer_platform_limits_posix.h
            (struct __sanitizer_sigaction): Cherry-pick upstream r291561.
    
            2016-11-30  Maxim Ostapenko  <m.ostapenko@samsung.com>
    
            PR sanitizer/78532
            * sanitizer_common/sanitizer_platform_limits_posix.h
            (__sanitizer_sigaction): Adjust for sparc targets and various Glibc
            versions.
    
    From-SVN: r249807

commit 91517bdf8b8200f87c694fa25410fd09e7050594
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 29 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249767

commit 119582583fc584ba5d5dc739b7281ba23a37bccf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 28 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249715

commit f42c93a4fc3a9f0511ce352110e4e3663a49c0c9
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jun 27 19:11:01 2017 +0200

    Backport PRs 60818, 61729, 73650, 77850, 80382, 80429, 80618, 80692, 80902, 80966
    
            Backports from trunk:
    
            2016-08-15  Segher Boessenkool  <segher@kernel.crashing.org>
            PR rtl-optimization/73650
            * lra-constraints.c (simple_move_p): If the insn is multiple_sets
            it is not a simple move.
    
            2017-01-20  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/61729
            PR target/77850
            * config/rs6000/rs6000.c (rs6000_gimplify_va_arg): Adjust address to
            read from, for big endian.
    
            2017-04-04  Segher Boessenkool  <segher@kernel.crashing.org>
            PR rtl-optimization/60818
            * simplify-rtx.c (simplify_binary_operation_1): Do not replace
            a compare of comparisons with the thing compared if this results
            in a different machine mode.
    
            2017-04-12  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80382
            * config/rs6000/sync.md (atomic_load<mode>, atomic_store<mode): Test
            for quad_address_p for TImode, instead of just not indexed_address.
    
            2017-04-19  Segher Boessenkool  <segher@kernel.crashing.org>
            PR rtl-optimization/80429
            * ira.c (split_live_ranges_for_shrink_wrap): Don't split regs that
            are only used in debug insns.
    
            2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80692
            * real.c (do_compare): Give decimal_do_compare preference over
            comparing just the signs.
    
            2017-05-31  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80618
            * config/rs6000/vector.md (*vector_uneq<mode>): Write the nor in the
            splitter result in the canonical way.
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * config/rs6000/rs6000.c (rs6000_emit_allocate_stack): Assert that
            gen_add3_insn did not fail.
            * config/rs6000/rs6000.md (add<mode>3): If asked to add a constant to
            r0, construct that number in a temporary reg and add that reg to r0.
            If asked to put the result in r0 as well, fail.
    
            2017-06-23  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80902
            * builtins.c (expand_builtin_atomic_fetch_op): If emitting code after
            a call, force the call to not be a tail call.
    
    gcc/testsuite/
            Backports from trunk:
    
            2017-04-04  Segher Boessenkool  <segher@kernel.crashing.org>
            PR rtl-optimization/60818
            * gcc.c-torture/compile/pr60818.c: New testcase.
    
            2017-05-17  Segher Boessenkool  <segher@kernel.crashing.org>
            PR middle-end/80692
            * gcc.c-torture/execute/pr80692.c: New testcase.
    
            2017-06-09  Segher Boessenkool  <segher@kernel.crashing.org>
            PR target/80966
            * gcc.target/powerpc/stack-limit.c: New testcase.
    
    From-SVN: r249700

commit 577fbb0218853ee2e97810f7d7d32063c8962d56
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 27 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r249671

commit 8869c43e30b5fb63dcd1036aa25552c9f65eba81
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 26 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r249635

commit 3179d17ba053ccb184caa6087360409a4544d17b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 25 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r249630

commit 130e5b8e1d483840e1755a6d5e1485cece5c41b1
Author: Marek Polacek <polacek@redhat.com>
Date:   Sat Jun 24 10:59:00 2017 +0000

    re PR sanitizer/80348 (UBSAN: compile time crash in ubsan_instrument_division)
    
            PR sanitizer/80348
            * typeck.c (cp_build_binary_op): Use NULL_TREE instead of NULL.  Set
            ORIG_TYPE earlier and not only when shortening.
    
            * g++.dg/ubsan/div-by-zero-3.C: New test.
    
    From-SVN: r249624

commit 89bc03793615b5c50bd7a2ca0de0b36e36e1710a
Author: Marek Polacek <polacek@redhat.com>
Date:   Sat Jun 24 10:57:01 2017 +0000

    re PR sanitizer/80348 (UBSAN: compile time crash in ubsan_instrument_division)
    
            PR sanitizer/80348
            * typeck.c (cp_build_binary_op): Convert COP[01] to ORIG_TYPE.
    
            * g++.dg/ubsan/div-by-zero-2.C: New test.
    
    From-SVN: r249623

commit e85521918416a740cd538fa5ec185516d1c9ea04
Author: Marek Polacek <polacek@redhat.com>
Date:   Sat Jun 24 10:53:48 2017 +0000

    PR c++/80244 - ICE with attribute in template alias.
    
            * tree.c (strip_typedefs): Handle UNDERLYING_TYPE.
    
            * g++.dg/cpp0x/alias-decl-59.C: New test.
    
    From-SVN: r249622

commit 67b762d7c0bb25117c09a3dd9fd48ea1603ed264
Author: Marek Polacek <polacek@redhat.com>
Date:   Sat Jun 24 10:50:08 2017 +0000

    PR c++/80241 - ICE with alignas pack expansion.
    
            * error.c (dump_expr): Handle TREE_LIST.
            * parser.c (cp_parser_std_attribute_list): Return error_mark if
            make_pack_expansion returns an error.
    
            * g++.dg/cpp0x/alignas11.C: New test.
    
    From-SVN: r249621

commit fc87258917ef55c3f09d4ef7442308c39b24d9b8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249617

commit ebbb5dda0ba824e8485a51e2c85d8eae2ef4d3d3
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Fri Jun 23 16:13:02 2017 +0000

    [ARM] Rename FPSCR builtins to correct names
    
    2017-06-23  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2017-05-04  Prakhar Bahuguna  <prakhar.bahuguna@arm.com>
    
        gcc/
        * gcc/config/arm/arm-builtins.c (arm_init_builtins): Rename
        __builtin_arm_ldfscr to __builtin_arm_get_fpscr, and rename
        __builtin_arm_stfscr to __builtin_arm_set_fpscr.
    
        gcc/testsuite/
        * gcc.target/arm/fpscr.c: New file.
    
    From-SVN: r249597

commit c5f4feec1b2ceec3725570d92f8716f0454f5ec9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 23 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r249581

commit 896b9985f0dc944bce58878b65816d09e8e7dd04
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 22 11:46:45 2017 +0000

    backport: [multiple changes]
    
    2017-06-22  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-02-17  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79552
            * tree-ssa-structalias.c (visit_loadstore): Properly verify
            default defs.
    
            2016-04-18  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/43434
            * tree-ssa-structalias.c (struct vls_data): New.
            (visit_loadstore): Handle all pointer-based accesses.
            (compute_dependence_clique): Compute a bitmap of restrict tags
            assigned bases and pass it to visit_loadstore.
    
            * gcc.dg/vect/pr43434.c: New testcase.
            * c-c++-common/goacc/kernels-alias-3.c: Adjust.
            * c-c++-common/goacc/kernels-alias-4.c: Likewise.
            * c-c++-common/goacc/kernels-alias-5.c: Likewise.
            * c-c++-common/goacc/kernels-alias-6.c: Likewise.
            * c-c++-common/goacc/kernels-alias-7.c: Likewise.
            * c-c++-common/goacc/kernels-alias-8.c: Likewise.
            * gcc.dg/gomp/pr68640.c: Likewise.
            * gfortran.dg/goacc/kernels-alias-3.f95: Likewise.
            * gfortran.dg/goacc/kernels-alias-4.f95: Likewise.
    
    From-SVN: r249552

commit 56fbae912a088e769b17c4da41ed342ae03d131f
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Thu Jun 22 13:34:39 2017 +0200

    backport: re PR c++/81154 (OpenMP with shared variable in a template class crash)
    
            Backported from mainline
            2017-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81154
            * semantics.c (handle_omp_array_sections_1, finish_omp_clauses):
            Complain about t not being a variable if t is OVERLOAD even
            when processing_template_decl.
    
            * g++.dg/gomp/pr81154.C: New test.
    
    From-SVN: r249539

commit e2aceef0a44bdb0e2d6531705f57651155615227
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:24:43 2017 +0200

    backport: re PR c++/81130 (ICE OpenMP shared clause in gimplify_var_or_parm_decl, at gimplify.c:2584)
    
            Backported from mainline
            2017-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81130
            * gimplify.c (omp_add_variable): Don't force GOVD_SEEN for types
            with ctors/dtors if GOVD_SHARED is set.
    
            * testsuite/libgomp.c++/pr81130.C: New test.
    
    From-SVN: r249527

commit 0b8031bf19087f87eaf01c047f4fb633ec1b1349
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:23:19 2017 +0200

    backport: re PR c++/81130 (ICE OpenMP shared clause in gimplify_var_or_parm_decl, at gimplify.c:2584)
    
            Backported from mainline
            2017-06-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/81130
            * gimplify.c (omp_add_variable): Don't force GOVD_SEEN for types
            with ctors/dtors if GOVD_SHARED is set.
    
            * testsuite/libgomp.c++/pr81130.C: New test.
    
    From-SVN: r249526

commit b30282f09692403604c8c0d4018c30cfcead8898
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:20:29 2017 +0200

    Backport r248729
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-31  Martin Liska  <mliska@suse.cz>
    
            PR target/79155
            * config/i386/cpuid.h: Fix typo in a comment in cpuid.h.
    
    From-SVN: r249525

commit a99cf1bf38c46d05d07f4ee0cd53768f1d812009
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:20:15 2017 +0200

    Backport r248647
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-30  Martin Liska  <mliska@suse.cz>
    
            PR other/80909
            * auto-profile.c (get_function_decl_from_block): Fix
            parenthesis.
    
    From-SVN: r249524

commit 96c8a24e618066c7e45acb2722f4b93c5df889a8
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:19:55 2017 +0200

    Backport r248489
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * params.def: Bound partial-inlining-entry-probability param.
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-26  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80663
            * g++.dg/ipa/pr80212.C: Remove the test as it does not longer
            split at the problematic spot.
            * gcc.dg/ipa/pr48195.c: Change 101 to 100 as 101 is no longer
            a valid value of the param.
    
    From-SVN: r249523

commit c9f88d6b1ef010ebb6aeb6339917adaaafa130b3
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:18:57 2017 +0200

    Backport r248089
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-16  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79849.
            PR ipa/79850.
            * ipa-devirt.c (warn_types_mismatch): Fix typo.
            (odr_types_equivalent_p): Likewise.
    
    From-SVN: r249522

commit bc7238badde6a5a1f64c5d2957a7acea38f08ba9
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:18:36 2017 +0200

    Backport r248060
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-15  Martin Liska  <mliska@suse.cz>
    
            PR driver/31468
            * gcc.c (process_command): Do not allow empty argument of -o option.
    
    From-SVN: r249521

commit 7bfd1e0028f664fd7ec29f6e69f5a62a0eddfd15
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:18:22 2017 +0200

    Backport r247507
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Add missing preposition.
            * gcov.c (function_info::function_info): Properly fill up
            all member variables.
    
    From-SVN: r249520

commit dbe39e42f23ab7b267c6bfda6b65a0cd8a4211f6
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:17:56 2017 +0200

    Backport r247485
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-05-02  Martin Liska  <mliska@suse.cz>
    
            PR other/80589
            * common.opt: Fix typo.
            * doc/invoke.texi: Likewise.
    
    From-SVN: r249519

commit 5c118edfc4b96ba952f6d2293e70702cf8f5e46b
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:17:38 2017 +0200

    Backport r247377
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Enhance documentation of gcov.
    
    From-SVN: r249518

commit 587df726ce71dedbc3dd06d64c82421e3ac576d6
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:17:15 2017 +0200

    Backport r247376
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            * doc/gcov.texi: Sort options in alphabetic order.
            * doc/gcov-dump.texi: Likewise.
            * doc/gcov-tool.texi: Likewise.
            * gcov.c (print_usage): Likewise.
            * gcov-dump.c (print_usage): Likewise.
            * gcov-tool.c (print_merge_usage_message): Likewise.
            (print_rewrite_usage_message): Likewise.
            (print_overlap_usage_message): Likewise.
    
    From-SVN: r249517

commit 2d8c384f9976c2ad18e6a12e77b2dfaa5a2b2264
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:16:56 2017 +0200

    Backport r247375
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/53915
            * gcov.c (format_gcov): Print 'NAN %' when top > bottom.
    
    From-SVN: r249516

commit 1c59b1d8b050d9772c96a09b146552d2a484fc91
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:16:39 2017 +0200

    Backport r247371
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-28  Martin Liska  <mliska@suse.cz>
    
            PR driver/56469
            * coverage.c (coverage_remove_note_file): New function.
            * coverage.h: Declare the function.
            * toplev.c (finalize): Clean if an error has been seen.
    
    From-SVN: r249515

commit 3672e3358f9f72a7c316d0c86767a5c71db69b3e
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:16:16 2017 +0200

    Backport r246899
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-12  Jan Hubicka  <hubicka@ucw.cz>
    
            PR lto/69953
            * ipa-visibility.c (non_local_p): Fix typos.
            (localize_node): When localizing symbol in same comdat group,
            dissolve the group only when we know external symbols are going
            to be privatized.
            (function_and_variable_visibility): Do not localize DECL_EXTERNAL.
    
    From-SVN: r249514

commit ff7816385476972eaf17a583e3584c6006f07205
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:15:42 2017 +0200

    Backport r244529
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-17  Nathan Sidwell  <nathan@acm.org>
    
            * ipa-visibility.c (localize_node): New function, broken out of ...
            (function_and_variable_visibility): ... here. Call it.
    
    From-SVN: r249513

commit 54ce2dbba11ad297b2812bde883330b342ef4610
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:14:49 2017 +0200

    Backport r244156
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-06  Nathan Sidwell  <nathan@acm.org>
    
            * ipa-visibility.c (function_and_variable_visibility): Reformat
            comments and long lines.  Remove extrneous if.
            * symtab.c (symtab_node::make_decl_local): Fix code format.
            (symtab_node::set_section_for_node): Fix comment typo.
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-06  Nathan Sidwell  <nathan@acm.org>
    
            * lto-partition.c (lto_balanced_map): Reformat/respell comment.
            (may_need_named_section_p): Likewise.
            (rename_statics): Likewise.
            (lto_promote_cross_file_statics): Likewise.
    
    From-SVN: r249512

commit 574705a3a4c8ca4e9368e4d8149b92a1f1e45709
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 22 13:14:13 2017 +0200

    Backport r241380
    
    2017-06-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-10-20  Martin Liska  <mliska@suse.cz>
    
            PR lto/78049
            * lto-streamer-in.c (fixup_call_stmt_edges_1): Replace value
            comparison with STMT_UID_NOT_IN_RANGE.
            (fixup_call_stmt_edges): Do not fixup edges of a thunk in
            LTRANS.
    
    From-SVN: r249511

commit db4f9614b3fcc3dafc84cee83ec54d9afe32f40a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:13:29 2017 +0200

    backport: re PR sanitizer/80973 (ICE with lambda and -fsanitize=undefined)
    
            Backported from mainline
            2017-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80973
            * cp-gimplify.c (cp_genericize_r): Don't instrument MEM_REF second
            argument even if it has REFERENCE_TYPE.
    
            * g++.dg/ubsan/pr80973.C: New test.
    
    From-SVN: r249510

commit e38441b65ada3d4423cbd0a2d0fcf89e67591d65
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:12:43 2017 +0200

    backport: re PR c++/80984 (ICE with label/variable ambiguity)
    
            Backported from mainline
            2017-06-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80984
            * cp-gimplify.c (cp_genericize): Only look for VAR_DECLs in
            BLOCK_VARS (outer) chain.
            (cxx_omp_const_qual_no_mutable): Likewise.
    
            * g++.dg/opt/nrv18.C: New test.
    
    From-SVN: r249509

commit f7d6c4c549e258cbd63fbb490e1424d4eaa24967
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:11:43 2017 +0200

    backport: re PR libgomp/80822 (libgomp incorrect affinity when OMP_PLACES=threads)
    
            Backported from mainline
            2017-05-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/80822
            * config/linux/affinity.c (gomp_affinity_init_level_1): New function.
            (gomp_affinity_init_level): Use it.  Always analyze the core and thread
            sibling lists, depending on level just pick up what CPUs to put
            together into a place vs. whether add multiple ordered places.
    
    From-SVN: r249508

commit 59419aac5c9c9503f4cca74b1311fa2cc1e2978c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:09:58 2017 +0200

    backport: re PR fortran/80918 (Assumed size whole array rejected in depend clause)
    
            Backported from mainline
            2017-06-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/80918
            * openmp.c (resolve_omp_clauses): Fix a typo.
    
            * gfortran.dg/gomp/pr80918.f90: New test.
    
    From-SVN: r249507

commit db04eb089cfe6eb0f77a99b0d26adfb0409ddd87
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:09:08 2017 +0200

    backport: re PR middle-end/80809 (Multi-free error for variable size array used within OpenMP task)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80809
            * omp-low.c (finish_taskreg_remap): New function.
            (finish_taskreg_scan): If unit size of ctx->record_type
            is non-constant, unshare the size expression and replace
            decls in it with possible outer var refs.
    
            * testsuite/libgomp.c/pr80809-2.c: New test.
            * testsuite/libgomp.c/pr80809-3.c: New test.
    
    From-SVN: r249506

commit c453ecbbb10405da296e2dad5ba826075841c2be
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:08:25 2017 +0200

    backport: re PR middle-end/80809 (Multi-free error for variable size array used within OpenMP task)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80809
            * gimplify.c (omp_add_variable): For GOVD_DEBUG_PRIVATE use
            GOVD_SHARED rather than GOVD_PRIVATE with it.
            (gimplify_adjust_omp_clauses_1, gimplify_adjust_omp_clauses): Expect
            GOVD_SHARED rather than GOVD_PRIVATE with GOVD_DEBUG_PRIVATE.
    
            * testsuite/libgomp.c/pr80809-1.c: New test.
    
    From-SVN: r249505

commit 9b990978c8dc560a95a6b77d9e1c5f8766f2a3a3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 22 13:07:44 2017 +0200

    backport: re PR middle-end/80853 (OpenMP ICE in build_outer_var_ref with array reduction)
    
            Backported from mainline
            2017-05-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80853
            * omp-low.c (lower_reduction_clauses): Pass OMP_CLAUSE_PRIVATE
            as last argument to build_outer_var_ref for pointer bases of array
            section reductions.
    
            * testsuite/libgomp.c/pr80853.c: New test.
    
    From-SVN: r249504

commit d32a8ad0fc618a9e6d2f04a2961b625bd236f847
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 22 07:30:03 2017 +0000

    backport: [multiple changes]
    
    2017-06-22  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-04-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80453
            * tree-ssa-sccvn.h (struct vn_phi_s): Add cclhs and ccrhs members.
            * tree-ssa-sccvn.c (cond_stmts_equal_p): Use recorded lhs and rhs
            from the conditions.
            (vn_phi_eq): Pass them down.
            (vn_phi_lookup): Record them.
            (vn_phi_insert): Likewise.
    
            2017-04-07  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80341
            * tree.c (get_unwidened): Also handle ! for_type case for
            INTEGER_CSTs.
            * convert.c (do_narrow): Split out from ...
            (convert_to_integer_1): ... here.  Do not pass final truncation
            type to get_unwidened for TRUNC_DIV_EXPR.
    
            * gcc.dg/torture/pr80341.c: New testcase.
    
            2017-04-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80281
            * match.pd (A + (-B) -> A - B): Make sure to preserve unsigned
            arithmetic done for the negate or the plus.  Simplify.
            (A - (-B) -> A + B): Likewise.
            * fold-const.c (split_tree): Make sure to not negate pointers.
    
            * gcc.dg/torture/pr80281.c: New testcase.
    
    From-SVN: r249499

commit fcf36953abbffe3374827a4c441e7e024c6edb24
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jun 22 07:22:13 2017 +0000

    backport: [multiple changes]
    
    2017-06-22  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-01-30  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79256
            * targhooks.c (default_builtin_vector_alignment_reachable): Honor
            BIGGEST_FIELD_ALIGNMENT and ADJUST_FIELD_ALIGN to fix up bogus
            alignment on TYPE.
            * tree.c (build_aligned_type): Set TYPE_USER_ALIGN.
    
            2017-01-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69264
            * target.def (vector_alignment_reachable): Improve documentation.
            * doc/tm.texi: Regenerate.
            * targhooks.c (default_builtin_vector_alignment_reachable): Simplify
            and add a comment.
            * tree-vect-data-refs.c (vect_supportable_dr_alignment): Revert
            earlier changes with respect to TYPE_USER_ALIGN.
            (vector_alignment_reachable_p): Likewise.  Improve dumping.
    
            * g++.dg/torture/pr69264.C: New testcase.
    
            2017-02-09  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/69823
            * graphite-scop-detection.c (scop_detection::harmful_loop_in_region):
            Properly enumerate all BBs in the region.  Use auto_vec.
    
            * gcc.dg/graphite/pr69823.c: New testcase.
    
    From-SVN: r249498

commit 3f132db766d0182863aa3903ec756f8937a4314d
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jun 22 00:56:55 2017 +0000

    backport: re PR target/80510 (Optimize Power7/power8 Altivec load/stores)
    
    2017-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: Restrict test to 64-bit until
            32-bit support is added.  Change ITYPE size to 64-bit integer.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
    From-SVN: r249493

commit 34f87ade2c5860ad819a139cb1a3abfece715bee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 22 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249490

commit 81288a9a9e04cdfef882b97f0d025d6d17390d0b
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jun 21 18:02:37 2017 +0000

    backport: re PR target/80718 (GCC generates slow code for offsettable vec_duplicate)
    
    [gcc]
    2017-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2017-05-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80718
            * config/rs6000/vsx.md (vsx_splat_<mode>, VSX_D iterator): Prefer
            VSX registers over GPRs, particularly on ISA 2.07 which does not
            have the MTVSRDD instruction.
    
            Back port from mainline
            2017-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * config/rs6000/predicates.md (simple_offsettable_mem_operand):
            New predicate.
    
            * config/rs6000/rs6000.md (ALTIVEC_DFORM): New iterator.
            (define_peephole2 for Altivec d-form load): Add peepholes to catch
            cases where the register allocator uses a move and an offsettable
            memory operation to/from a FPR register on ISA 2.06/2.07.
            (define_peephole2 for Altivec d-form store): Likewise.
    
            Back port from mainline
            2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/68163
            * config/rs6000/rs6000.md (f32_lr): Delete mode attributes that
            are now unused after splitting mov{sf,sd}_hardfloat.
            (f32_lr2): Likewise.
            (f32_lm): Likewise.
            (f32_lm2): Likewise.
            (f32_li): Likewise.
            (f32_li2): Likewise.
            (f32_lv): Likewise.
            (f32_sr): Likewise.
            (f32_sr2): Likewise.
            (f32_sm): Likewise.
            (f32_sm2): Likewise.
            (f32_si): Likewise.
            (f32_si2): Likewise.
            (f32_sv): Likewise.
            (f32_dm): Likewise.
            (f32_vsx): Likewise.
            (f32_av): Likewise.
            (mov<mode>_hardfloat): Split into separate movsf and movsd pieces.
            For movsf, order stores so the VSX stores occur before the GPR
            store which encourages the register allocator to use a traditional
            FPR instead of a GPR.  For movsd, order the stores so that the GPR
            store comes before the VSX stores to allow the power6 to work.
            This is due to the power6 not having a 32-bit integer store
            instruction from a FPR.
            (movsf_hardfloat): Likewise.
            (movsd_hardfloat): Likewise.
    
    [gcc/testsuite]
    2017-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2017-05-19  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80718
            * gcc.target/powerpc/pr80718.c: New test.
    
            Back port from mainline
            2017-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/80510
            * gcc.target/powerpc/pr80510-1.c: New test.
            * gcc.target/powerpc/pr80510-2.c: Likewise.
    
            Back port from mainline
            2017-05-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/68163
            * gcc.target/powerpc/pr68163.c: New test.
    
    From-SVN: r249466

commit c09fdb675851bc928ddc7b741320c0be5080a8fc
Author: Jeff Law <law@redhat.com>
Date:   Wed Jun 21 10:03:07 2017 -0600

    darwin-driver.c (darwin_driver_init): Const-correctness fixes for first_period and second_period variables.
    
    2017-06-21  Jeff Law  <law@redhat.com>
    
            * config/darwin-driver.c (darwin_driver_init): Const-correctness
            fixes for first_period and second_period variables.
    
    From-SVN: r249460

commit d0df6884fd6975789e56ff7a828ee038b0c2f62b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 21 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r249430

commit 55c8e4c7ee796f06f6f35377ab673cbc5224fdf8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 20 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249392

commit e26e284d175f2b4cea0dea4d8b569c20edc1fd02
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Mon Jun 19 17:12:12 2017 +0000

    Backport: [Patch ARM] Fix PR71778
    
    gcc/
    
            PR target/71778
            * config/arm/arm-builtins.c (arm_expand_builtin_args): Return TARGET
            if given a non-constant argument for an intrinsic which requires a
            constant.
    
    gcc/testsuite/
    
            PR target/71778
            * gcc.target/arm/pr71778.c: New.
    
    From-SVN: r249380

commit 46256c8304f69f35aef34fd96d8afe9c4922bea9
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jun 19 12:21:40 2017 -0400

    PR c++/70844 - -Wuseless-cast and inheriting constructor.
    
            * method.c (forward_parm): Suppress warn_useless_cast.
    
    From-SVN: r249378

commit 58c2cb998cac364b8faab2b59dc28d86a31512ed
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 19 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r249354

commit 46cf9e901548807c291d0d5e003959a1498fd703
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 18 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r249341

commit 0c33ecdb9319477adc65bce6e3812a02d5425092
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 17 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249314

commit bc6da644707a8ab4272a4c662431e5e2edeba34c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 15:09:36 2017 +0100

    Fix std::wbuffer_convert::sync()
    
            * include/bits/locale_conv.h (wbuffer_convert::sync): Fix condition.
            * testsuite/22_locale/conversions/buffer/2.cc: New.
    
    From-SVN: r249257

commit c5aa9af35ba4d9d16bd45234504c91ba5b6eee70
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:41:51 2017 +0100

    Backport libstdc++ doc improvements from mainline
    
            * doc/xml/manual/appendix_contributing.xml: Link to the list of bad
            names, and link to the test docs and note higher DejaGnu version
            requirement.
            * doc/xml/manual/allocator.xml: Fix ViewCVS URLs.
            * doc/xml/manual/mt_allocator.xml: Likewise.
            * doc/html/*: Regenerate.
    
    From-SVN: r249252

commit 348ec38b96726b021854e3e5df5948cd7ee0a3f9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 16 13:41:45 2017 +0100

    Fix missing returns in libstdc++ header and tests
    
            * include/bits/locale_conv.h (wbuffer_convert::_M_put): Add missing
            return statement.
            * testsuite/23_containers/map/modifiers/insert_or_assign/1.cc: Add
            missing return statements.
            * testsuite/23_containers/unordered_map/modifiers/insert_or_assign.cc:
            Likewise.
    
    From-SVN: r249251

commit 9a23cf3ab03745cb12cef0bb2532227eeccc8c25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 16 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249231

commit 74e251a296283185ba9a9afddf696fba03adb3ab
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 15 13:25:56 2017 +0000

    re PR rtl-optimization/80474 (ipa-cp wrongly adding LO(symbol) twice)
    
            PR rtl-optimization/80474
            * reorg.c (update_block): Do not ignore instructions in a delay slot.
    
    From-SVN: r249221

commit 39d4a93ee36e70a84602935ac6d5aeee83425aad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 15 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249210

commit c9db60c684ab52c50ea32ef6cc489fab20da77ac
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 14 07:46:03 2017 +0000

    * config/sparc/driver-sparc.c (cpu_names): Add SPARC-T5 entry.
    
    From-SVN: r249185

commit daab837fc2ae39679d052df495091c986f118cb8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r249177

commit 554c56d7f8fc554dfac3aad3741e1f569baad3c3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 13 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r249140

commit 3b483a6d65596ec92cd22d06ea80caa01e3db2a7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 12 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r249108

commit 67a58e7366fa29223a4ad23d16af1334904e9aa7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 11 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r249100

commit b223e4d99706c0852862ddb8e43378b9615b0c25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 10 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r249085

commit 2dcec49780dd5d5ebacb64decc2ae60c78e2eda0
Author: David S. Miller <davem@davemloft.net>
Date:   Fri Jun 9 19:24:51 2017 +0000

    sparc: Further adjustments for alloca epilogue blockage.
    
    gcc/
    
            PR target/80968
            * config/sparc/sparc.c (sparc_flat_expand_epilogue): Don't
            emit frame blockage here.
            (sparc_expand_epilogue): Do it here.
            * config/sparc/sparc.md (return expander): Emit frame blockage
            for alloca here too.
    
    From-SVN: r249074

commit 197f80d31b6c6055a12ec0982e61cfb76afc6d84
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Jun 9 20:10:48 2017 +0200

    backport: re PR fortran/70601 ([OOP] ICE on procedure pointer component call)
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * trans-expr.c (gfc_conv_procedure_call): Fix detection of allocatable
            function results.
    
    
    2017-06-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70601
            * gfortran.dg/proc_ptr_comp_50.f90: New test.
    
    From-SVN: r249067

commit 0d33d7b8605b689662ae1e20a4a532e13f6c5c42
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 9 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r249043

commit 402fb8f492ec0d6e8d63eed59d0a0a59a402ff2d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 8 21:13:51 2017 +0200

    re PR c/81006 (ICE with zero-size array and #pragma omp task depend)
    
            PR c/81006
            * c-typeck.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * semantics.c (handle_omp_array_sections_1): Convert TYPE_MAX_VALUE
            to sizetype before size_binop.
    
            * c-c++-common/gomp/pr81006.c: New test.
    
    From-SVN: r249037

commit 153490bbd66573c933b301acb5066104e79f2f44
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 8 21:04:40 2017 +0200

    re PR c++/81011 (ICE with #pragma omp task and inaccessible copy-constructor)
    
            PR c++/81011
            * cp-gimplify.c (cxx_omp_finish_clause): When changing clause
            to OMP_CLAUSE_SHARED, also clear OMP_CLAUSE_SHARED_FIRSTPRIVATE
            and OMP_CLAUSE_SHARED_READONLY flags.
    
            * g++.dg/gomp/pr81011.C: New test.
    
    From-SVN: r249034

commit aaa1c46a465623fe81f97311862d1cc800bf2956
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 8 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r249001

commit cbbc7f9bbde1df088467ff42886541da0e066de8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Jun 7 17:51:00 2017 +0100

    PR libstdc++/81002 fix std::basic_regex range constructor
    
            PR libstdc++/81002
            * include/bits/regex_compiler.h (__compile_nfa): Add template argument
            list to specify traits type.
            * testsuite/28_regex/basic_regex/ctors/basic/iter.cc: New.
    
    From-SVN: r248992

commit 9e6e1a3b33e6cd8f85d2617375c468f907f2f5a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 7 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r248940

commit d177f6321bd6733fa295b5d2f251fbe11e3f2d2d
Author: David S. Miller <davem@davemloft.net>
Date:   Tue Jun 6 18:52:22 2017 +0000

    re PR target/80968 (stack frame reference allowed in delay slot of return instruction)
    
    gcc/
    
            PR target/80968
            * config/sparc/sparc.c (sparc_expand_prologue): Emit frame
            blockage if function uses alloca.
    
    gcc/testsuite/
    
            * gcc.target/sparc/sparc-ret-3.c: New test.
    
    From-SVN: r248930

commit 4f8184d6a4290a5469e60675d335738e0b77fa96
Author: Toma Tabacu <toma.tabacu@imgtec.com>
Date:   Tue Jun 6 11:50:48 2017 +0000

    Backport to gcc-6-branch of r246004.
    
    gcc/
    
      Backported from mainline
      2017-03-09  Toma Tabacu  <toma.tabacu@imgtec.com>
    
      * doc/sourcebuild.texi (Effective-Target Keywords, Other attributes):
      Document rdynamic.
    
    gcc/testsuite/
    
      Backported from mainline
      2017-03-09  Toma Tabacu  <toma.tabacu@imgtec.com>
    
      * g++.dg/lto/pr69589_0.C: Add dg-require-effective-target for
      rdynamic.
      * lib/target-supports.exp (check_effective_target_rdynamic):
      New proc.
    
    From-SVN: r248916

commit e594ed4effa43c77c52a1b9e02cd7fa6a0b78060
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 6 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248906

commit 317ef2617bd15ac235b81967474f094919fa1cbe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 5 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248865

commit 8803f295d472e5c0b150b5e37ded5e39f77fa183
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 4 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248857

commit 7407935743df8cb10e239440c946cb1b6be43370
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sat Jun 3 11:26:38 2017 +0000

    re PR fortran/65542 (SPREAD intrinsic incorrectly accepted in initialization expressions with -std=f95)
    
    2017-05-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/65542
            Backport from trunk
            * intrinsic.c (gfc_intrinsic_func_interface):  Return an error
            for -std=f95 for disallowed transformational functions in
            initialization expressions.
    
    2017-05-03  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/65542
            Backport from trunk
            * gfortran.dg/spread_init_expr_2.f90:  New test case.
    
    From-SVN: r248855

commit b7832593bec4564a950dea1783feb3be2dce4311
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 3 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248849

commit af95a72d1381ccf9cfa7a6f57467108ae66bde6a
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Fri Jun 2 19:29:29 2017 +0000

    re PR fortran/80904 (Matmul result allocated to wrong size)
    
    2017-06-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/80904
            Backport from trunk
            * frontend-passes.c (matmul_lhs_realloc):  Correct
            allocation size for case A1B2.
    
    2017-06-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/80904
            Backport from trunk
            * gfortran.dg/matmul_bounds_12.f90:  New test.
    
    From-SVN: r248845

commit 2eccdaccd070be2eeda951b3dd634b79880fa720
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 2 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r248808

commit ec434f449ddead7da2248b6fe1018e76b71145aa
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 1 21:38:29 2017 +0200

    backport: rdseedintrin.h (_rdseed16_step, [...]): Uglify argument names and/or local variable names in inline functions.
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            * config/i386/rdseedintrin.h (_rdseed16_step, _rdseed32_step,
            _rdseed64_step): Uglify argument names and/or local variable names
            in inline functions.
            * config/i386/rtmintrin.h (_xabort): Likewise.
            * config/i386/avx512vlintrin.h (_mm256_ternarylogic_epi64,
            _mm256_mask_ternarylogic_epi64, _mm256_maskz_ternarylogic_epi64,
            _mm256_ternarylogic_epi32, _mm256_mask_ternarylogic_epi32,
            _mm256_maskz_ternarylogic_epi32, _mm_ternarylogic_epi64,
            _mm_mask_ternarylogic_epi64, _mm_maskz_ternarylogic_epi64,
            _mm_ternarylogic_epi32, _mm_mask_ternarylogic_epi32,
            _mm_maskz_ternarylogic_epi32): Likewise.
            * config/i386/lwpintrin.h (__llwpcb, __lwpval32, __lwpval64,
            __lwpins32, __lwpins64): Likewise.
            * config/i386/avx2intrin.h (_mm_i32gather_pd, _mm_mask_i32gather_pd,
            _mm256_i32gather_pd, _mm256_mask_i32gather_pd, _mm_i64gather_pd,
            _mm_mask_i64gather_pd, _mm256_i64gather_pd, _mm256_mask_i64gather_pd,
            _mm_i32gather_ps, _mm_mask_i32gather_ps, _mm256_i32gather_ps,
            _mm256_mask_i32gather_ps, _mm_i64gather_ps, _mm_mask_i64gather_ps,
            _mm256_i64gather_ps, _mm256_mask_i64gather_ps, _mm_i32gather_epi64,
            _mm_mask_i32gather_epi64, _mm256_i32gather_epi64,
            _mm256_mask_i32gather_epi64, _mm_i64gather_epi64,
            _mm_mask_i64gather_epi64, _mm256_i64gather_epi64,
            _mm256_mask_i64gather_epi64, _mm_i32gather_epi32,
            _mm_mask_i32gather_epi32, _mm256_i32gather_epi32,
            _mm256_mask_i32gather_epi32, _mm_i64gather_epi32,
            _mm_mask_i64gather_epi32, _mm256_i64gather_epi32,
            _mm256_mask_i64gather_epi32): Likewise.
            * config/i386/pmm_malloc.h (_mm_malloc, _mm_free): Likewise.
            * config/i386/ia32intrin.h (__writeeflags): Likewise.
            * config/i386/pkuintrin.h (_wrpkru): Likewise.
            * config/i386/avx512pfintrin.h (_mm512_mask_prefetch_i32gather_pd,
            _mm512_mask_prefetch_i32gather_ps, _mm512_mask_prefetch_i64gather_pd,
            _mm512_mask_prefetch_i64gather_ps, _mm512_prefetch_i32scatter_pd,
            _mm512_prefetch_i32scatter_ps, _mm512_mask_prefetch_i32scatter_pd,
            _mm512_mask_prefetch_i32scatter_ps, _mm512_prefetch_i64scatter_pd,
            _mm512_prefetch_i64scatter_ps, _mm512_mask_prefetch_i64scatter_pd,
            _mm512_mask_prefetch_i64scatter_ps): Likewise.
            * config/i386/gmm_malloc.h (_mm_malloc, _mm_free): Likewise.
            * config/i386/avx512fintrin.h (_mm512_ternarylogic_epi64,
            _mm512_mask_ternarylogic_epi64, _mm512_maskz_ternarylogic_epi64,
            _mm512_ternarylogic_epi32, _mm512_mask_ternarylogic_epi32,
            _mm512_maskz_ternarylogic_epi32, _mm512_i32gather_ps,
            _mm512_mask_i32gather_ps, _mm512_i32gather_pd, _mm512_i64gather_ps,
            _mm512_i64gather_pd, _mm512_i32gather_epi32, _mm512_i32gather_epi64,
            _mm512_i64gather_epi32, _mm512_i64gather_epi64): Likewise.
    
    From-SVN: r248799

commit 9defb907f6026e68bf3a68a90464b15ffa79d348
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jun 1 10:52:29 2017 +0000

    re PR ada/80921 (cross compiling fails to build Ada shared libraries)
    
            PR ada/80921
            * configure.ac (default_gnatlib_target): Remove bogus condition.
            (have_getipinfo): Tweak.
            * configure: Regenerate.
    
    From-SVN: r248787

commit 01a62b6d5c179bb8d240be2c1595d4f9385f78f7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 1 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r248768

commit f463f21a1b7785ef3af6448898a8e3eeeb9b41c7
Author: Jason Merrill <jason@redhat.com>
Date:   Wed May 31 14:53:57 2017 -0400

    PR c++/80179 - ICE with initialized flexible array member.
    
            * constexpr.c (verify_ctor_sanity): Handle flexible array members.
    
    From-SVN: r248758

commit ff7e5a2181c6c67f94aa074d30a51e3cd3e953c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 31 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r248717

commit 124890107e37883f410aecc8fc3126780185e8a6
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed May 31 00:06:11 2017 +0000

    gcc: xtensa: fix fprintf format specifiers
    
    HOST_WIDE_INT may not be long as assumed in print_operand and
    xtensa_emit_call. Use HOST_WIDE_INT_PRINT_DEC/HOST_WIDE_INT_PRINT_HEX
    format strings instead of %ld/0x%lx. This fixes incorrect assembly code
    generation by the compiler running on armhf host.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2017-05-29  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (xtensa_emit_call): Use
            HOST_WIDE_INT_PRINT_HEX instead of 0x%lx format string.
            (print_operand): Use HOST_WIDE_INT_PRINT_DEC instead of %ld
            format string.
    
    From-SVN: r248715

commit ab3684cbcc910766a0169166089fb5d86862707f
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed May 31 00:05:38 2017 +0000

    xtensa: Fix PR target/78603
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2016-11-29  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa.c (hwloop_optimize): Don't emit zero
            overhead loop start between a call and its CALL_ARG_LOCATION
            note.
    
    From-SVN: r248714

commit 63942fb672066cb8772f4c83cb82093d00455b21
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed May 31 00:05:01 2017 +0000

    xtensa: Fix PR target/78118
    
    It started failing after the following commit: 32e90dc6a0cda45 ("PR
    rtl-optimization/61047").
    
    The change that made xtensa backend go ICE looks completely unrelated,
    and indeed, the issue is caused by the side effect of
    compute_frame_size() function call hidden in the
    INITIAL_ELIMINATION_OFFSET macro. This call updates the value of the
    xtensa_current_frame_size static variable, used in "return" instruction
    predicate. Prior to the change the value of xtensa_current_frame_size was
    set to 0 after the end of epilogue generation, which enabled the "return"
    instruction for the CALL0 ABI, but after the change the additional
    INITIAL_ELIMINATION_OFFSET calls make xtensa_current_frame_size non-zero
    and "return" pattern unavailable.
    
    Get rid of the global xtensa_current_frame_size and
    xtensa_callee_save_size variables by moving them into the
    machine_function structure. Implement predicate for the "return" pattern
    as a function. Don't communicate completion of epilogue generation
    through zeroing of xtensa_current_frame_size, add explicit epilogue_done
    variable to the machine_function structure. Don't update stack frame
    layout after the completion of reload.
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    gcc/
            Backport from mainline
            2016-11-01  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/xtensa-protos.h
            (xtensa_use_return_instruction_p): New prototype.
            * config/xtensa/xtensa.c (xtensa_current_frame_size,
            xtensa_callee_save_size): Remove.
            (struct machine_function): Add new fields: current_frame_size,
            callee_save_size, frame_laid_out and epilogue_done.
            (compute_frame_size, xtensa_expand_prologue,
            xtensa_expand_epilogue): Replace xtensa_callee_save_size with
            cfun->machine->callee_save_size and xtensa_current_frame_size
            with cfun->machine->current_frame_size.
            (compute_frame_size): Update cfun->machine->frame_laid_out and
            don't update frame layout after reload completion.
            (xtensa_expand_epilogue): Set cfun->machine->epilogue_done
            instead of zeroing xtensa_current_frame_size.
            (xtensa_use_return_instruction_p): New function.
            * config/xtensa/xtensa.h (xtensa_current_frame_size): Remove
            declaration.
            (INITIAL_ELIMINATION_OFFSET): Use return value of
            compute_frame_size instead of xtensa_current_frame_size value.
            * config/xtensa/xtensa.md ("return" pattern): Use new predicate
            function xtensa_use_return_instruction_p instead of inline code.
    
    From-SVN: r248713

commit 9f607a558acf86ee156f8fa167c768f4c1f53f61
Author: Max Filippov <jcmvbkbc@gmail.com>
Date:   Wed May 31 00:04:08 2017 +0000

    xtensa: don't use unwind-dw2-fde-dip with elf targets
    
    Define LIB2ADDEH_XTENSA_UNWIND_DW2_FDE to unwind-dw2-fde.c in
    xtensa/t-elf and to unwind-dw2-fde-dip.c in xtensa/t-linux and use
    LIB2ADDEH_XTENSA_UNWIND_DW2_FDE in LIB2ADDEH definition.
    
    This fixes build for elf target with windowed xtensa core that currently
    breaks with the following error message:
    
      unwind-dw2-fde-dip.c:36:40: fatal error: elf.h: No such file or directory
    
    2017-05-30  Max Filippov  <jcmvbkbc@gmail.com>
    libgcc/
            Backport from mainline
            2016-10-18  Max Filippov  <jcmvbkbc@gmail.com>
    
            * config/xtensa/t-elf (LIB2ADDEH_XTENSA_UNWIND_DW2_FDE): New
            definition.
            * config/xtensa/t-linux (LIB2ADDEH_XTENSA_UNWIND_DW2_FDE): New
            definition.
            * config/xtensa/t-windowed (LIB2ADDEH): Use
            LIB2ADDEH_XTENSA_UNWIND_DW2_FDE defined by either xtensa/t-elf
            or xtensa/t-linux.
    
    From-SVN: r248712

commit 16f5a9e0c90efce8bc768cf1d5e03f95baa2ffe1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 30 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r248589

commit 76d4ae2f9c73206538d0a2f2f3019c1a60174c8e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon May 29 21:09:14 2017 +0000

    install.texi (Options specification): Move entry of --enable-sjlj-exceptions.
    
            * doc/install.texi (Options specification): Move entry of
            --enable-sjlj-exceptions.
    
    From-SVN: r248584

commit e9bf0ad3b3d9948f7e7e17ae4ecaabdbd15909e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 29 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248550

commit 06bab9bd508633bc3b5b14485f0c733ffcec64ac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 28 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r248542

commit 11b7e1ac7db25f29748ef3b3615cf2259acdff03
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 27 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r248530

commit ad2edaec438e104f6b91ae6924c680fad502ea7e
Author: Richard Henderson <rth@redhat.com>
Date:   Fri May 26 12:33:19 2017 -0700

    re PR libgcc/80037 (Bad .eh_frame data in crtend.o)
    
    PR libgcc/80037
    
     Backport from mainline
     * config/alpha/t-alpha (CRTSTUFF_T_CFLAGS): New.
    
    From-SVN: r248526

commit 89ae741299d71ae5e5714516886415699cdcf7db
Author: Sheldon Lobo <smlobo@sheldon.us.oracle.com>
Date:   Fri May 26 19:12:24 2017 +0000

    backport: sparc.md (length): Return the correct value for -mflat sibcalls to match output_sibcall.
    
            Backported from mainline
            2017-05-24  Sheldon Lobo  <smlobo@sheldon.us.oracle.com>
    
            * config/sparc/sparc.md (length): Return the correct value for -mflat
            sibcalls to match output_sibcall.
    
    From-SVN: r248524

commit 1ce3821f23adfb16c5a5be8c80e74c56a6257ae2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri May 26 13:01:06 2017 +0100

    Support unsigned __int20 in checks for size_t mangling
    
    Backport from mainline
    2017-01-20  Joe Seymour  <joe.s@somniumtech.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_SIZE_T_MANGLING): Support uint20_t.
            * configure: Regenerate.
    
    From-SVN: r248508

commit b467c3df2004f50ce8291880b017131a20f248c8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri May 26 13:00:49 2017 +0100

    Add #ifdef case for 16 bits in cow-stdexcept.cc
    
    Backport from mainline
    2016-12-06  Felipe Magno de Almeida  <felipe@expertisesolutions.com.br>
    
            * src/c++11/cow-stdexcept.cc: Add special case for 16 bit pointers.
    
    From-SVN: r248507

commit cdbcd657961e7aa6e110ddd8367a0fcd7af2ad4b
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:32:26 2017 +0200

    Backport r247097
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Jan Hubicka  <hubicka@ucw.cz>
    
            PR middle-end/79931
            * ipa-devirt.c (dump_possible_polymorphic_call_targets): Fix ICE.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-24  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79931
            * g++.dg/ipa/pr79931.C: New test.
    
    From-SVN: r248504

commit 660d903f06129efa0f5243f496949b3b4e68aaeb
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:31:52 2017 +0200

    Backport r246996
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-19  Richard Biener  <rguenther@suse.de>
    
            PR ipa/65972
            * auto-profile.c (afdo_vpt_for_early_inline): Update SSA
            when needed by AutoPGO.
    
    From-SVN: r248503

commit 071bf2d303daf0e926fca073f0c9ab3fa4936963
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:31:33 2017 +0200

    Backport r246995
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-19  Paulo J. Matos  <paulo@matos-sorge.com>
    
            PR lto/50345
            * doc/lto.texi: Remove an extra 'that'.
    
    From-SVN: r248502

commit e1941c5c8b4ecbcf6d9989c086a79dfd34441164
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:31:15 2017 +0200

    Backport r246961
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-18  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/78783
            * gcov-tool.c (gcov_output_files): Validate that destination
            file is either removed by the tool or by a user.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-18  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/78783
            * libgcov-driver.c (gcov_get_filename): New function.
    
    From-SVN: r248501

commit a8de95c114c1f452f4323491e97576c29a2fb51d
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:30:54 2017 +0200

    Backport r246903
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-13  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80413
            * gcov-io.c (gcov_write_string): Copy to buffer just when
            allocated size is greater than zero.
    
    From-SVN: r248500

commit e66c940e5799da79f2d93c61f4b54776900446cf
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:29:35 2017 +0200

    Backport r246848
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * cgraph.c (cgraph_node::dump): Dump calls_comdat_local.
            * ipa-split.c (split_function): Create a local comdat symbol
            if caller is in a comdat group.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * g++.dg/ipa/pr80212.C: New test.
    
    From-SVN: r248499

commit ce1a7ee3771f60b22bb2eb71c3c79299d6fe0555
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:28:44 2017 +0200

    Backport r246847
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80212
            * ipa-cp.c (determine_versionability): Handle calls_comdat_local
            flags.
    
    From-SVN: r248498

commit 56cb253556b631951f52f7955fe777cb13f115d6
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:28:07 2017 +0200

    Backport r246837
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/70878
            * ubsan.c (instrument_object_size): Do not instrument register
            variables.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-11  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/70878
            * gcc.dg/ubsan/pr70878.c: New test.
    
    From-SVN: r248497

commit 485ca953194671f28ef00468a0c006c7acad28fd
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:27:25 2017 +0200

    Backport r246804
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-10  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80224
            * gcov.c (print_usage): Fix usage string.
            (get_gcov_intermediate_filename): Remove.
            (output_gcov_file): Use both for normal and intermediate format.
            (generate_results): Do not initialize special file for
            intermediate format.
    
    From-SVN: r248496

commit 77599e38f54db297adb5a591668d7b25e7e52ebc
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:26:45 2017 +0200

    Backport r246799
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-10  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80350
            * c-ubsan.c (ubsan_instrument_shift): Evaluate RHS before
            doing an UBSAN check.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-10  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80350
            * c-c++-common/ubsan/pr80350.c: New test.
    
    From-SVN: r248495

commit d0a210d9d83b4cb278dc039b00320a786946cb92
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:26:04 2017 +0200

    Backport r246730
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-06  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80166
            * gcc.dg/asan/pr80166.c: New test.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-04-06  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/80166
            * sanitizer_common/sanitizer_common_interceptors.inc (INTERCEPTOR):
            Cherry-pick upstream r299036.
    
    From-SVN: r248494

commit 4d8e330f016057ca2dbff584dac911b8d8e6d6e2
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:25:34 2017 +0200

    Backport r246530
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Richard Biener  <rguenther@suse.de>
    
            PR ipa/80205
            * tree-inline.c (copy_phis_for_bb): Do not create PHI node
            without arguments, generate default definition of a SSA name.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80205
            * g++.dg/ipa/pr80205.C: New test.
    
    From-SVN: r248493

commit 835b7a8b04dd74312aff05cf7a3cf176978850e0
Author: Martin Liska <mliska@suse.cz>
Date:   Fri May 26 13:24:49 2017 +0200

    Backport r246525
    
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80104
            * cgraphunit.c (cgraph_node::expand_thunk): Mark argument of a
            thunk call as DECL_GIMPLE_REG_P when vector or complex type.
    2017-05-26  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-28  Martin Liska  <mliska@suse.cz>
    
            PR ipa/80104
            * gcc.dg/ipa/pr80104.c: New test.
    
    From-SVN: r248492

commit a3636529f11ba991668c00c7e6cc3aa31c0f353c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 26 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248477

commit 613c2654340b75d051855a83536b78c706de7f46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 25 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r248439

commit 2352b1efabfeb710eb86f8b687393976498ed455
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248396

commit eb8010751293fa8a0bf99578b7f0be76b955a057
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 23 16:51:33 2017 -0400

    PR c++/80267 - ICE with nested capture of reference
    
            PR c++/60992
            * pt.c (tsubst_copy): Handle lookup finding a capture proxy.
    
    From-SVN: r248386

commit 13f23c8e34421635e8ed8fd4a874343b1cda0530
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 23 16:48:58 2017 -0400

    PR c++/80294 - ICE with constexpr and inheritance.
    
            * constexpr.c (reduced_constant_expression_p):
            A null constructor element is non-constant.
            (cxx_eval_indirect_ref): Don't VERIFY_CONSTANT before
            returning an empty base.
    
    From-SVN: r248385

commit 3ab11fc8339397b9f192815724bad21eb08efa1e
Author: Sheldon Lobo <sheldon.lobo@oracle.com>
Date:   Tue May 23 18:54:17 2017 +0000

    backport: sparc.c (sparc_option_override): Set function alignment for -mcpu=niagara7 to 64 to match the I$ line.
    
            Backport from mainline
            2017-05-18  Sheldon Lobo  <sheldon.lobo@oracle.com>
    
            * config/sparc/sparc.c (sparc_option_override): Set function
            alignment for -mcpu=niagara7 to 64 to match the I$ line.
            * config/sparc/sparc.h (BRANCH_COST): Set the SPARC M7 branch
            latency to 1.
            * config/sparc/sparc.h (BRANCH_COST): Set the SPARC T4 branch
            latency to 2.
            * config/sparc/sol2.h: Fix a ASM_CPU32_DEFAULT_SPEC typo.
    
            Backport from mainline
            2017-05-18  Sheldon Lobo  <sheldon.lobo@oracle.com>
    
            * gcc.target/sparc/niagara7-align.c: New test.
    
    From-SVN: r248381

commit aea0a620679541812d9a2112429fa4ef3318e410
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 23 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248354

commit 4ad9914a8ad4627b9f0e609de3dff32e11efdaec
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon May 22 19:50:05 2017 +0000

    backport: p8-vec-xl-xst.c: Fix target string to LE-only.
    
    2017-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p8-vec-xl-xst.c: Fix target string to
            LE-only.
    
    From-SVN: r248350

commit 70b12b8ea933d4fb39c81407dace7a766cbc34dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 22 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r248315

commit 3da2bc2d3a8848c8d24209505f1740b68974a42a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 21 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r248310

commit bb0f53725f8c556549117997774b179e562954c7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 20 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r248305

commit f786f36ba4612de5c3d7ee97efae629608587edf
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri May 19 20:39:10 2017 +0200

    backport: unwind-arm.h: Make _Unwind_GetIP...
    
    2017-05-19  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-17  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/arm/unwind-arm.h: Make _Unwind_GetIP, _Unwind_GetIPInfo and
        _Unwind_SetIP available as functions for arm*-*-freebsd*.
        * config/arm/unwind-arm.c: Implement the above.
    
    From-SVN: r248300

commit bf152cdbef898fa12f2a2bf7024e966666279ad1
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri May 19 17:51:10 2017 +0200

    backport: re PR target/80799 (x86-32 bits generates MMX without EMMS)
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * config/i386/mmx.md (*mov<mode>_internal): Enable
            alternatives 11, 12, 13 and 14 also for 32bit targets.
            Remove alternatives 15, 16, 17 and 18.
            * config/i386/sse.md (vec_concatv2di): Change
            alternative (!x, *y) to (x, ?!*Yn).
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-05-18  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80799
            * g++.dg/other/i386-11.C: New test.
    
    From-SVN: r248294

commit a8d147f74e9be7ff9ec12e982f3b086e327869ae
Author: Janne Blomqvist <jb@gcc.gnu.org>
Date:   Fri May 19 16:27:26 2017 +0300

    Don't assume __secure_getenv is available
    
    Glibc 2.17 made __secure_getenv an officially supported function, and
    renamed it secure_getenv. The libgfortran configure has checked for
    both of these, per
    https://sourceware.org/glibc/wiki/Tips_and_Tricks/secure_getenv.
    
    Unfortunately, while the dynamical library (libc.so) retains the
    __secure_getenv symbol for backwards compatibility, the static library
    (libc.a) does not. This means that a libgfortran.a compiled against an
    older glibc will not work if one tries to link against a newer
    libc.a. This creates problems for providing gfortran binary
    distributions that work on as many target systems as possible.
    
    Thus, retain the support for __secure_getenv but call it only via a
    weak reference.
    
    Backported from trunk.
    
    2017-05-19  Janne Blomqvist  <jb@gcc.gnu.org>
    
            * libgfortran.h: HAVE_SECURE_GETENV: Don't check
            HAVE___SECURE_GETENV.
            * environ/runtime.c (secure_getenv): Use __secure_getenv via a
            weak reference.
    
    From-SVN: r248274

commit 3d282f23ec8efedd262ea1836abc482c5286d9fa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 19 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r248258

commit d22eaa594b7df4677007f44af7c52f6c46b71be6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:37:16 2017 +0100

    Test TR1 special functions without adding them to std
    
    Backport from mainline
    2016-08-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/tr1/5_numerical_facilities/special_functions/16_hermite/
            check_value.cc: Do not add special functions to namespace std in TR1
            test.
    
    From-SVN: r248228

commit 361aac16722fadcfdf00a92bd2778ae6002c53bf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:37:09 2017 +0100

    Only run math special function tests for C++11 and later
    
    Backport from mainline
    2016-08-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/ext/special_functions/conf_hyperg/check_nan.cc: Only
            run for C++11 and later.
            * testsuite/ext/special_functions/conf_hyperg/check_value.cc:
            Likewise.
            * testsuite/ext/special_functions/conf_hyperg/compile.cc: Likewise.
            * testsuite/ext/special_functions/hyperg/check_nan.cc: Likewise.
            * testsuite/ext/special_functions/hyperg/check_value.cc: Likewise.
            * testsuite/ext/special_functions/hyperg/compile.cc: Likewise.
            * testsuite/special_functions/01_assoc_laguerre/check_nan.cc:
            Likewise.
            * testsuite/special_functions/01_assoc_laguerre/check_value.cc:
            Likewise.
            * testsuite/special_functions/01_assoc_laguerre/compile.cc: Likewise.
            * testsuite/special_functions/01_assoc_laguerre/compile_2.cc:
            Likewise.
            * testsuite/special_functions/02_assoc_legendre/check_nan.cc:
            Likewise.
            * testsuite/special_functions/02_assoc_legendre/check_value.cc:
            Likewise.
            * testsuite/special_functions/02_assoc_legendre/compile.cc: Likewise.
            * testsuite/special_functions/02_assoc_legendre/compile_2.cc:
            * testsuite/special_functions/03_beta/check_nan.cc: Likewise.
            * testsuite/special_functions/03_beta/check_value.cc: Likewise.
            * testsuite/special_functions/03_beta/compile.cc: Likewise.
            * testsuite/special_functions/03_beta/compile_2.cc: Likewise.
            * testsuite/special_functions/04_comp_ellint_1/check_nan.cc: Likewise.
            * testsuite/special_functions/04_comp_ellint_1/check_value.cc:
            Likewise.
            * testsuite/special_functions/04_comp_ellint_1/compile.cc: Likewise.
            * testsuite/special_functions/04_comp_ellint_1/compile_2.cc: Likewise.
            * testsuite/special_functions/05_comp_ellint_2/check_nan.cc: Likewise.
            * testsuite/special_functions/05_comp_ellint_2/check_value.cc:
            Likewise.
            * testsuite/special_functions/05_comp_ellint_2/compile.cc: Likewise.
            * testsuite/special_functions/05_comp_ellint_2/compile_2.cc: Likewise.
            * testsuite/special_functions/06_comp_ellint_3/check_nan.cc: Likewise.
            * testsuite/special_functions/06_comp_ellint_3/check_value.cc:
            Likewise.
            * testsuite/special_functions/06_comp_ellint_3/compile.cc: Likewise.
            * testsuite/special_functions/06_comp_ellint_3/compile_2.cc: Likewise.
            * testsuite/special_functions/07_cyl_bessel_i/check_nan.cc: Likewise.
            * testsuite/special_functions/07_cyl_bessel_i/check_value.cc:
            Likewise.
            * testsuite/special_functions/07_cyl_bessel_i/compile.cc: Likewise.
            * testsuite/special_functions/07_cyl_bessel_i/compile_2.cc: Likewise.
            * testsuite/special_functions/07_cyl_bessel_i/pr56216.cc: Likewise.
            * testsuite/special_functions/08_cyl_bessel_j/check_nan.cc: Likewise.
            * testsuite/special_functions/08_cyl_bessel_j/check_value.cc:
            Likewise.
            * testsuite/special_functions/08_cyl_bessel_j/compile.cc: Likewise.
            * testsuite/special_functions/08_cyl_bessel_j/compile_2.cc: Likewise.
            * testsuite/special_functions/09_cyl_bessel_k/check_nan.cc: Likewise.
            * testsuite/special_functions/09_cyl_bessel_k/check_value.cc:
            Likewise.
            * testsuite/special_functions/09_cyl_bessel_k/compile.cc: Likewise.
            * testsuite/special_functions/09_cyl_bessel_k/compile_2.cc: Likewise.
            * testsuite/special_functions/10_cyl_neumann/check_nan.cc: Likewise.
            * testsuite/special_functions/10_cyl_neumann/check_value.cc: Likewise.
            * testsuite/special_functions/10_cyl_neumann/compile.cc: Likewise.
            * testsuite/special_functions/10_cyl_neumann/compile_2.cc: Likewise.
            * testsuite/special_functions/11_ellint_1/check_nan.cc: Likewise.
            * testsuite/special_functions/11_ellint_1/check_value.cc: Likewise.
            * testsuite/special_functions/11_ellint_1/compile.cc: Likewise.
            * testsuite/special_functions/11_ellint_1/compile_2.cc: Likewise.
            * testsuite/special_functions/12_ellint_2/check_nan.cc: Likewise.
            * testsuite/special_functions/12_ellint_2/check_value.cc: Likewise.
            * testsuite/special_functions/12_ellint_2/compile.cc: Likewise.
            * testsuite/special_functions/12_ellint_2/compile_2.cc: Likewise.
            * testsuite/special_functions/13_ellint_3/check_nan.cc: Likewise.
            * testsuite/special_functions/13_ellint_3/check_value.cc: Likewise.
            * testsuite/special_functions/13_ellint_3/compile.cc: Likewise.
            * testsuite/special_functions/13_ellint_3/compile_2.cc: Likewise.
            * testsuite/special_functions/14_expint/check_nan.cc: Likewise.
            * testsuite/special_functions/14_expint/check_value.cc: Likewise.
            * testsuite/special_functions/14_expint/compile.cc: Likewise.
            * testsuite/special_functions/14_expint/compile_2.cc: Likewise.
            * testsuite/special_functions/15_hermite/check_nan.cc: Likewise.
            * testsuite/special_functions/15_hermite/check_value.cc: Likewise.
            * testsuite/special_functions/15_hermite/compile.cc: Likewise.
            * testsuite/special_functions/15_hermite/compile_2.cc: Likewise.
            * testsuite/special_functions/16_laguerre/check_nan.cc: Likewise.
            * testsuite/special_functions/16_laguerre/check_value.cc: Likewise.
            * testsuite/special_functions/16_laguerre/compile.cc: Likewise.
            * testsuite/special_functions/16_laguerre/compile_2.cc: Likewise.
            * testsuite/special_functions/17_legendre/check_nan.cc: Likewise.
            * testsuite/special_functions/17_legendre/check_value.cc: Likewise.
            * testsuite/special_functions/17_legendre/compile.cc: Likewise.
            * testsuite/special_functions/17_legendre/compile_2.cc: Likewise.
            * testsuite/special_functions/18_riemann_zeta/check_nan.cc: Likewise.
            * testsuite/special_functions/18_riemann_zeta/check_value.cc:
            Likewise.
            * testsuite/special_functions/18_riemann_zeta/compile.cc: Likewise.
            * testsuite/special_functions/18_riemann_zeta/compile_2.cc: Likewise.
            * testsuite/special_functions/19_sph_bessel/check_nan.cc: Likewise.
            * testsuite/special_functions/19_sph_bessel/check_value.cc: Likewise.
            * testsuite/special_functions/19_sph_bessel/compile.cc: Likewise.
            * testsuite/special_functions/19_sph_bessel/compile_2.cc: Likewise.
            * testsuite/special_functions/20_sph_legendre/check_nan.cc: Likewise.
            * testsuite/special_functions/20_sph_legendre/check_value.cc:
            Likewise.
            * testsuite/special_functions/20_sph_legendre/compile.cc: Likewise.
            * testsuite/special_functions/20_sph_legendre/compile_2.cc: Likewise.
            * testsuite/special_functions/21_sph_neumann/check_nan.cc: Likewise.
            * testsuite/special_functions/21_sph_neumann/check_value.cc: Likewise.
            * testsuite/special_functions/21_sph_neumann/compile.cc: Likewise.
            * testsuite/special_functions/21_sph_neumann/compile_2.cc: Likewise.
    
    From-SVN: r248227

commit 4d3fb82702003e559b898e4e9139d28cb8df65e9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:57 2017 +0100

    Fix DR 438 std::list test to pass in C++98 mode
    
    Backport from mainline
    2016-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
            Adjust dg-prune-output pattern for error in C++98 mode.
    
    From-SVN: r248226

commit 34ecbd3eb7de900e94db967c44114b3d16ca66ee
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:49 2017 +0100

    Fix DR 438 container tests to pass in C++98 mode
    
    Backport from mainline
    2016-07-28  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/23_containers/deque/requirements/dr438/assign_neg.cc:
            Adjust dg-prune-output pattern for error in C++98 mode.
            * testsuite/23_containers/deque/requirements/dr438/
            constructor_1_neg.cc: Likewise.
            * testsuite/23_containers/deque/requirements/dr438/
            constructor_2_neg.cc: Likewise.
            * testsuite/23_containers/deque/requirements/dr438/insert_neg.cc:
            Likewise.
            * testsuite/23_containers/list/requirements/dr438/assign_neg.cc:
            Likewise.
            * testsuite/23_containers/list/requirements/dr438/
            constructor_1_neg.cc: Likewise.
            * testsuite/23_containers/list/requirements/dr438/insert_neg.cc:
            Likewise.
            * testsuite/23_containers/vector/requirements/dr438/assign_neg.cc:
            Likewise.
            * testsuite/23_containers/vector/requirements/dr438/
            constructor_1_neg.cc: Likewise.
            * testsuite/23_containers/vector/requirements/dr438/
            constructor_2_neg.cc: Likewise.
            * testsuite/23_containers/vector/requirements/dr438/insert_neg.cc:
            Likewise.
    
    From-SVN: r248225

commit d982c00b9d336ec2f1c348b20af8fc4c6629fa05
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:41 2017 +0100

    Make libstdc++ debug mode test valid for C++98
    
    Backport from mainline
    2016-08-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/25_algorithms/lower_bound/debug/irreflexive.cc: Use
            C++98-compatible initialization for array.
    
    From-SVN: r248224

commit a4d523cd2c1c3b58c3e1fe8a025f2f4e7d95e3f4
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:36 2017 +0100

    Limit std::tuple tests to run for C++11 and later
    
    Backport from mainline
    2016-08-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/tuple/cons/element_accepts_anything_byval.cc:
            Limit test to C++11 and later.
    
    From-SVN: r248223

commit 214c0fe930511530e899e02ba14658544d498c4f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:29 2017 +0100

    Add c++11 effective target to tests for C++11 features
    
    Backport from mainline
    2016-08-17  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/tuple/67844.cc: Require c++11 effective target.
            * testsuite/20_util/tuple/cons/nested_tuple_construct.cc: Likewise.
            * testsuite/27_io/rvalue_streams.cc: Likewise.
    
    From-SVN: r248222

commit 375d51b87d636d002fb273e65793e5affa10a4e1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:22 2017 +0100

    Skip C tests if test flags include C++ options
    
    Backport from mainline
    2016-08-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/18_support/bad_exception/23591_thread-1.c: Skip test if
            options are present that aren't valid for C.
            * testsuite/abi/header_cxxabi.c: Likewise.
    
    From-SVN: r248221

commit 8a44a4366ebb9472f2a09a5899d43868027b4947
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:15 2017 +0100

    Don't include internal header in libstdc++ tests
    
    Backport from mainline
    2016-04-18  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/experimental/memory_resource/null_memory_resource.cc:
            Don't include internal header.
            * testsuite/experimental/type_erased_allocator/2.cc: Likewise.
            * testsuite/experimental/type_erased_allocator/uses_allocator.cc:
            Likewise. Add licence and change to compile-only test.
    
    From-SVN: r248220

commit 3bed500d5a0e040bb18f8a872a9c05e1ec052c3c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:09 2017 +0100

    Run std::ios_base enum tests for C++11 and up
    
    Backport from mainline
    2016-08-01  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/27_io/ios_base/types/fmtflags/case_label.cc: Make test
            supported for C++11 and later.
            * testsuite/27_io/ios_base/types/iostate/case_label.cc: Likewise.
            * testsuite/27_io/ios_base/types/openmode/case_label.cc: Likewise.
    
    From-SVN: r248219

commit 76a43d7900ed57bd1199b36d18ecec5382a6a779
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:36:03 2017 +0100

    Fix libstdc++ testsuite failure in C++11 and Debug mode
    
    Backport from mainline
    2017-03-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/23_containers/list/operations/78389.cc: Fix for C++11
            mode. Fix less-than to define a valid strict weak ordering.
    
    From-SVN: r248218

commit b73cd4e1d0cb8f950314b0889eacafff17d17582
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:54 2017 +0100

    PR libstdc++/80504 qualify calls to avoid ADL
    
    Backport from mainline
    2017-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80504
            * include/std/functional (ref, cref): Qualify calls.
            * testsuite/20_util/reference_wrapper/80504.cc: New test.
    
    From-SVN: r248217

commit 291bb13633fd98354d7c6999356c1ef6141b5af0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:45 2017 +0100

    PR libstdc++/80493 fix invalid exception specification
    
    Backport from mainline
    2017-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80493
            * include/experimental/optional (optional::swap): Fix exception
            specification.
    
    From-SVN: r248216

commit f0c798163d56459cd1425932e10d4f1e6cfd79d8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:40 2017 +0100

    PR libstdc++/80448 remove noexcept from defaulted functions
    
    Backport from mainline
    2017-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80448
            * include/experimental/bits/fs_dir.h (directory_iterator)
            (recursive_directory_iterator): Remove noexcept from defaulted
            constructors.
    
    From-SVN: r248215

commit 286a8730ab5b9755d5c12f17addf2df22fd488fa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:35 2017 +0100

    Uncomment std::reference_wrapper tests that no longer fail
    
    Backport from mainline
    2017-04-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/reference_wrapper/invoke.cc: Uncomment tests
            that no longer fail.
    
    From-SVN: r248214

commit c48d3ee19ee641bab7f425974e6ca6b6bd6efe42
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:28 2017 +0100

    Fix comments in libstdc++ header and test
    
    Backport from mainline
    2017-04-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/ios_base.h: Correct comment.
            * testsuite/util/testsuite_hooks.h: Likewise.
    
    From-SVN: r248213

commit a8143e991e63c1d7d7060ec3bd70c2c834cc9ddb
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Thu May 18 15:35:23 2017 +0100

    PR libstdc++/80137 use std::nextafter instead of looping
    
    Backport from mainline
    2017-03-28  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/80137
            * include/bits/random.tcc (generate_canonical): Use std::nextafter
            or numeric_limits::epsilon() to reduce out-of-range values.
            * testsuite/26_numerics/random/uniform_real_distribution/operators/
            64351.cc: Verify complexity requirement is met.
    
    From-SVN: r248212

commit ef073432ff14853d3516b343f08bdbabcae9c397
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:18 2017 +0100

    PR libstdc++/67440 make pretty printers work with GDB 7.6 again
    
    Backport from mainline
    2017-03-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/67440
            * python/libstdcxx/v6/printers.py (find_type): Avoid gdb.Type.name
            for GDB 7.6 compatibility, use gdb.Type.unqualified instead.
    
    From-SVN: r248211

commit 99f135262073aedff3d57fa7c05cff5a2f7170ca
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:12 2017 +0100

    PR69699 document why __GLIBCXX__ macro is useless
    
    Backport from mainline
    2017-01-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69699
            * doc/xml/manual/abi.xml (abi.versioning.history): Explain why the
            _GLIBCXX__ macro is not useful. Remove redundant date information
            and link to the GCC release timeline.
            (abi.versioning.active): Move partial sentence into the previous
            paragraph.
            * doc/html/*: Regenerate.
    
    From-SVN: r248210

commit 7b12f44169e6bbf8f50253abefe60c03c21163d8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:35:01 2017 +0100

    Add libstdc++.so.6.0.22 to history of library versions
    
            * doc/xml/manual/abi.xml: Document libstdc++.so.6.0.22 version.
    
    From-SVN: r248209

commit c7db403d562e9e18c8ad60ff667bf6f7713bb638
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 15:34:56 2017 +0100

    PR 71444 define more error constants for mingw-w64
    
    Backport from mainline
    2016-12-21  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71444
            * config/os/mingw32-w64/error_constants.h
            (address_family_not_supported, address_in_use, address_not_available)
            (already_connected, connection_aborted, connection_already_in_progress)
            connection_refused, connection_reset, cross_device_link)
            (destination_address_required, host_unreachable, message_size)
            (network_down, network_reset, network_unreachable, no_buffer_space)
            (no_protocol_option, not_a_socket, not_connected, operation_canceled)
            (operation_in_progress, operation_not_supported, protocol_error)
            (protocol_not_supported, too_many_links, too_many_symbolic_link_levels)
            (value_too_large, wrong_protocol_type): Define.
            (bad_message, identifier_removed, no_link, no_message_available)
            (no_message, no_stream_resources, not_a_stream, owner_dead)
            (state_not_recoverable, stream_timeout, text_file_busy): Define
            conditionally.
            * testsuite/19_diagnostics/headers/system_error/errc_std_c++0x.cc:
            Guard test for no_message with _GLIBCXX_HAVE_ENOMSG.
    
    From-SVN: r248208

commit 8a56c37c845b78a7a336bdaea7e696938aec8154
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Thu May 18 15:34:50 2017 +0100

    libstdc++/78236 fix past-the-end std::regex_iterator
    
    Backport from mainline
    2016-11-09  Tim Shen  <timshen@google.com>
    
            PR libstdc++/78236
            * libstdc++-v3/include/bits/regex.h (regex_iterator::regex_iterator()):
            Define end() as _M_pregex == nullptr.
            * libstdc++-v3/include/bits/regex.tcc (regex_iterator::operator==(),
            regex_iterator::operator++()): Fix operator==() and operator++() to
            look at null-ness of _M_pregex on both sides.
            * testsuite/28_regex/regression.cc: New testcase.
    
    From-SVN: r248207

commit ee7581bd1713d87fffc027ac507f756b00bbc3ea
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 18 10:14:45 2017 +0100

    Fix test to compile in C++98 mode
    
            * testsuite/libstdc++-prettyprinters/59161.cc: Fix for C++98 mode.
    
    From-SVN: r248180

commit 6d42f6d7a3f797ae35b9803e7af157f159314b35
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 18 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248176

commit 646ada349fed76a2a2f9ccb7056bccdae18e8ee8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 17 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r248133

commit 9c44c7cc04f02ffc349a689e7ae0233e0c18560a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 16 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r248084

commit a7235b0f1aad569030ae3ac30b2a8f3aa588eeac
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon May 15 23:02:42 2017 +0000

    re PR fortran/80752 (ICE with wrong type initialization)
    
    2017-05-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80752
            * expr.c (gfc_generate_initializer):  If type conversion fails,
            check for error and return NULL.
    
    2017-05-15  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/80752
            gfortran.dg/pr80752.f90: New test.
    
    From-SVN: r248078

commit 498be49f83ee306dccff810e77b79b4076c3fbd3
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 15 07:53:37 2017 +0000

    Revert backport of PR middle-end/80222
    
    2017-05-15  Richard Biener  <rguenther@suse.de>
    
            Revert backport of
            PR middle-end/80222
            * gimple-fold.c (gimple_fold_indirect_ref): Do not touch
            TYPE_REF_CAN_ALIAS_ALL references.
            * fold-const.c (fold_indirect_ref_1): Likewise.
    
            * g++.dg/pr80222.C: New testcase.
    
    From-SVN: r248047

commit 98048935480c621ffab804b2a32e3cc39dc18a82
Author: Adhemerval Zanella <adhemerval.zanella@linaro.org>
Date:   Mon May 15 07:36:49 2017 +0000

    lb1spc.S: Emit .note.GNU-stack section for a non-executable stack.
    
            * config/sparc/lb1spc.S [__ELF__ && __linux__]: Emit .note.GNU-stack
            section for a non-executable stack.
    
    From-SVN: r248045

commit 7a56915b7746fd916ce24129c33e4a937394250c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 15 00:16:22 2017 +0000

    Daily bump.
    
    From-SVN: r248039

commit c411e56bc7f5b08c7149493adbf73e21a4bb14a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 14 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r248014

commit 3991513abd4a3c9042826221fc99c05722025514
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sat May 13 21:40:41 2017 +0000

    backport: rs6000.c (rs6000_vect_nonmem): New static var.
    
    [gcc]
    
    2017-05-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_vect_nonmem): New static var.
            (rs6000_init_cost): Initialize rs6000_vect_nonmem.
            (rs6000_add_stmt_cost): Update rs6000_vect_nonmem.
            (rs6000_finish_cost): Avoid vectorizing simple copy loops with
            VF=2 that require versioning.
    
    [gcc/testsuite]
    
    2017-05-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/versioned-copy-loop.c: New file.
    
    From-SVN: r248011

commit e07101f49bcfeac9d14554ccac86476ce90c03cc
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sat May 13 02:16:27 2017 +0000

    backport: rs6000.c (altivec_init_builtins): Define POWER8 built-ins for vec_xl and vec_xst with short and char pointer...
    
    [gcc]
    
    2017-05-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (altivec_init_builtins): Define POWER8
            built-ins for vec_xl and vec_xst with short and char pointer
            arguments.
    
    [gcc/testsuite]
    
    2017-05-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p8-vec-xl-xst.c: New file.
    
    From-SVN: r248005

commit 9e1c6013d2187ef970798a2d810a25e70e1cff4a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 13 00:16:24 2017 +0000

    Daily bump.
    
    From-SVN: r248001

commit 050bba422eeb2910518f1d4f150d88ca74c11aa6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 12 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r247943

commit 0752fe9344ac8a53a5ad0e61871f87af843b54e5
Author: Ian Lance Taylor <iant@google.com>
Date:   Thu May 11 23:53:29 2017 +0000

    re PR go/64238 (ICE in get_partitioning_class, at symtab.c:1775)
    
            PR go/64238
            * go-gcc.cc (Gcc_backend::implicit_variable_reference): Set
            DECL_EXTERNAL, clear TREE_STATIC.
    
    From-SVN: r247939

commit 19c613d1a5d6a132e731d716a93f9de6709f7435
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 11 00:16:28 2017 +0000

    Daily bump.
    
    From-SVN: r247876

commit 078847def9c2897655fe02853c0af1e70594c142
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Thu May 11 00:15:04 2017 +0000

    re PR target/80090 (Incorrect assembler - output_addr_const may generate visibility output between op and address constant)
    
            PR target/80090
            * config/pa/pa.c (pa_assemble_integer): When outputting a SYMBOL_REF,
            handle calling assemble_external ourself.
    
    From-SVN: r247874

commit cbb9fd58d1348037d4ca7f3f9ef945a5fc042c20
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed May 10 23:09:54 2017 +0000

    re PR target/79027 (fold-const.c:11104:1: internal compiler error: Floating point exception)
    
            PR target/79027
            * config/pa/pa.c (pa_cannot_change_mode_class): Reject changes to/from
            modes with zero size.  Enhance comment.
    
    From-SVN: r247871

commit 665951a3567b456323e822055c50b2da37714d3f
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed May 10 22:44:08 2017 +0200

    backport: config.host: Use the generic FreeBSD t-slibgcc-elf-ver for arm*-*-freebsd* instead of the...
    
    2017-05-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-05-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.host: Use the generic FreeBSD t-slibgcc-elf-ver for
        arm*-*-freebsd* instead of the t-slibgcc-libgcc.
    
    From-SVN: r247861

commit 55cd80bd5c283058749194ed17f872dd1bcfbad1
Author: Richard Biener <rguenther@suse.de>
Date:   Wed May 10 07:44:41 2017 +0000

    Backport PRs 80075, 80094, 80113, 80122, 80167, 80170, 80171
    
    2017-05-10  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-03-17  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80075
            * tree-eh.c (stmt_could_throw_1_p): Only handle gimple assigns.
            Properly verify the LHS before the RHS possibly claims to be
            handled.
            (stmt_could_throw_p): Hande gimple conds fully here.  Clobbers
            do not throw.
    
            * g++.dg/torture/pr80075.C: New testcase.
    
            2017-03-21  Brad Spengler <spender@grsecurity.net>
    
            PR plugin/80094
            * plugin.c (htab_hash_plugin): New function.
            (add_new_plugin): Use it and adjust.
            (parse_plugin_arg_opt): Adjust.
            (init_one_plugin): Likewise.
    
            2017-03-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80113
            * graphite-isl-ast-to-gimple.c (copy_loop_phi_nodes): Do not
            allocate extra SSA name for PHI def.
            (add_close_phis_to_outer_loops): Likewise.
            (add_close_phis_to_merge_points): Likewise.
            (copy_loop_close_phi_args): Likewise.
            (copy_cond_phi_nodes): Likewise.
    
            2017-03-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80122
            * tree-inline.c (copy_bb): Do not expans va-arg packs or
            va_arg_pack_len when the inlined call stmt requires pack
            expansion itself.
            * tree-inline.h (struct copy_body_data): Make call_stmt a gcall *.
    
            * gcc.dg/torture/pr80122.c: New testcase.
    
            2017-03-24  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80167
            * graphite-isl-ast-to-gimple.c
            (translate_isl_ast_to_gimple::is_valid_rename): Handle default-defs
            properly.
            (translate_isl_ast_to_gimple::get_rename): Likewise.
    
            * gcc.dg/graphite/pr80167.c: New testcase.
    
            2017-03-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80170
            * tree-vect-data-refs.c (vect_compute_data_ref_alignment): Make
            sure DR/SCEV didnt fold in constants we do not see when looking
            at the reference base alignment.
    
            2017-03-27  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80171
            * gimple-fold.c (fold_ctor_reference): Properly guard against
            NULL return value from canonicalize_constructor_val.
    
            * g++.dg/torture/pr80171.C: New testcase.
    
    From-SVN: r247826

commit af22b83b95c2fc53555619cb0efb29cd84f0c678
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 10 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r247823

commit bbfce8aead7fdfeb0a4a55bb6b73481016557bb8
Author: Richard Biener <rguenther@suse.de>
Date:   Tue May 9 12:27:24 2017 +0000

    Backport PRs 80222, 80262, 80275, 80334, 80362, 80492, 80539
    
    2017-05-09  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-03-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80222
            * gimple-fold.c (gimple_fold_indirect_ref): Do not touch
            TYPE_REF_CAN_ALIAS_ALL references.
            * fold-const.c (fold_indirect_ref_1): Likewise.
    
            * g++.dg/pr80222.C: New testcase.
    
            2017-04-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80262
            * tree-sra.c (build_ref_for_offset): Preserve address-space
            information.
            * tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address):
            Drop useless address-space information on MEM_REF offsets.
    
            * gcc.target/i386/pr80262.c: New testcase.
    
            2017-04-03  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80275
            * fold-const.c (split_address_to_core_and_offset): Handle
            POINTER_PLUS_EXPR.
    
            * g++.dg/opt/pr80275.C: New testcase.
    
            2017-04-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80334
            * tree-ssa-loop-ivopts.c (rewrite_use_address): Properly
            preserve alignment of accesses.
    
            * g++.dg/torture/pr80334.C: New testcase.
    
            2017-04-10  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80362
            * fold-const.c (fold_binary_loc): Look at unstripped ops when
            looking for NEGATE_EXPR in -A / -B to A / B folding.
    
            * gcc.dg/torture/pr80362.c: New testcase.
    
            2017-04-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80492
            * alias.c (compare_base_decls): Handle registers with asm
            specification conservatively.
    
            * gcc.dg/pr80492.c: New testcase.
    
            2017-04-27  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/80539
            * tree-chrec.c (chrec_fold_plus_poly_poly): Deal with not
            being in loop-closed SSA form conservatively.
            (chrec_fold_multiply_poly_poly): Likewise.
    
            * gcc.dg/torture/pr80539.c: New testcase.
    
    From-SVN: r247790

commit 548cd5c9ff75478a976d2fdb311a1fca423d795a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 9 14:24:53 2017 +0200

    re PR testsuite/80678 (g++.dg/cpp1y/constexpr-79681-2.C fails with ICE starting with r247678)
    
            PR testsuite/80678
            2016-06-14  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/71310
            PR bootstrap/71510
            * expr.h (get_bit_range): Declare.
            * expr.c (get_bit_range): Export.
            * fold-const.c (optimize_bit_field_compare): Use get_bit_range and
            word_mode again to constrain the bitfield access.
    
            2016-06-11  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR middle-end/71310
            * fold-const.c (optimize_bit_field_compare): Don't try to use
            word_mode unconditionally for reading the bit field, look at
            DECL_BIT_FIELD_REPRESENTATIVE instead.
    
            * gcc.target/powerpc/pr71310.c: New testcase.
    
    From-SVN: r247789

commit d81c7d7bdadcbbf57b185d9f9d3f1813060ff869
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r247774

commit 4935d9bded9dea6be5697d9b02ea784412db4baa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 8 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247731

commit 3bbe30945c23176c592ff23b72c4caa99d9ba98e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 7 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r247724

commit 3ea20f8d8e548d82902140f7f359cbbb69886917
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 6 00:16:35 2017 +0000

    Daily bump.
    
    From-SVN: r247707

commit daf9769bda4e34647f31e7b66a1a8fd00c57a9b7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:56:33 2017 +0200

    backport: Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the environment.
    
            Backported from mainline
            2017-04-25  Jakub Jelinek  <jakub@redhat.com>
    
            * Makefile.in (s-options): Invoke opt-gather.awk with LC_ALL=C in the
            environment.
    
    From-SVN: r247704

commit e5f98c0ec32b822e6531a9365e40a640b4d2ed73
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:56:08 2017 +0200

    backport: re PR rtl-optimization/80501 (Wrong code w/ a signed char, a shift, and a conversion to int)
    
            Backported from mainline
            2017-04-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80501
            * combine.c (make_compound_operation_int): Set subreg_code to SET
            even for AND with mask of the sign bit of mode.
    
            * gcc.c-torture/execute/pr80501.c: New test.
    
    From-SVN: r247703

commit 36373b4e5aa5d73d6e84c1762d4786fcd5e2217c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:55:29 2017 +0200

    backport: re PR sanitizer/80349 (UBSAN: compile time crash with "type mismatch in binary expression" message)
    
            Backported from mainline
            2017-04-12  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/80349
            * fold-const.c (fold_binary_loc) <case BIT_IOR_EXPR>: Convert arg0's
            first argument to type.
    
            * g++.dg/ubsan/pr80349.C: New test.
    
    From-SVN: r247702

commit 747c77e576bb26e35726e9f6e31939a9291cb56e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:54:52 2017 +0200

    backport: re PR rtl-optimization/80385 (Segfault in commutative_operand_precedence() rtlanal.c:3373)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80385
            * simplify-rtx.c (simplify_unary_operation_1): Don't transform
            (not (neg X)) into (plus X -1) for complex or non-integral modes.
    
            * g++.dg/opt/pr80385.C: New test.
    
    From-SVN: r247701

commit 8d0ccab5e3a9ac8b065b088dacfa9af42734e02f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:54:06 2017 +0200

    backport: re PR libgomp/80394 (Empty OpenMP task is wrongly removed when optimizing)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR libgomp/80394
            * omp-low.c (scan_omp_task): Don't optimize away empty tasks
            if they have any depend clauses.
    
            * testsuite/libgomp.c/pr80394.c: New test.
    
    From-SVN: r247700

commit 53fa8f54c9d82a76a6e4e2d511937b04cda107d6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:53:18 2017 +0200

    backport: re PR c++/80363 (#'vec_cond_expr' not supported by dump_expr#<expression error>)
    
            Backported from mainline
            2017-04-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80363
            * error.c (dump_expr): Handle VEC_COND_EXPR like COND_EXPR.
    
            * g++.dg/ext/pr80363.C: New test.
    
    From-SVN: r247699

commit 43400bf87a739e6074086dd4c17416e406a94422
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:52:40 2017 +0200

    backport: re PR c++/80176 (cannot bind reference to static member function using object access expression)
    
            Backported from mainline
            2017-04-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80176
            * tree.c (lvalue_kind): For COMPONENT_REF with BASELINK second
            operand, if it is a static member function, recurse on the
            BASELINK.
    
            * g++.dg/init/ref23.C: New test.
    
    From-SVN: r247698

commit c5ee1dcd448fc05918c7af3fd1349e49c0cfd7d6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:52:00 2017 +0200

    backport: re PR c++/80297 (Compiler time crash: type mismatch in binary expression)
    
            Backported from mainline
            2017-04-04  Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR c++/80297
            * genmatch.c (capture::gen_transform): For GENERIC unshare_expr
            captures used multiple times, except for the last use.
            * generic-match-head.c: Include gimplify.h.
    
            * g++.dg/torture/pr80297.C: New test.
    
    From-SVN: r247697

commit 451131ebe27a03642273857bf09d6fb7f6853f8b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:51:14 2017 +0200

    backport: re PR target/80286 (AVX2 _mm_cvtsi128_si32 doesn't return a proper 32bits int)
    
            Backported from mainline
            2017-04-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/80286
            * config/i386/i386.c (ix86_expand_args_builtin): If op has scalar
            int mode, convert_modes it to mode as unsigned, otherwise use
            lowpart_subreg to mode rather than SImode.
            * config/i386/sse.md (<mask_codefor>ashr<mode>3<mask_name>,
            ashr<mode>3, ashr<mode>3<mask_name>, <shift_insn><mode>3<mask_name>):
            Use DImode instead of SImode for the shift count operand.
            * config/i386/mmx.md (mmx_ashr<mode>3, mmx_<shift_insn><mode>3):
            Likewise.
    
            * gcc.target/i386/avx-pr80286.c: New test.
            * gcc.dg/pr80286.c: New test.
    
    From-SVN: r247696

commit c94f793988e42a87e1e35bd8be3b0813781fd9e3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:50:27 2017 +0200

    backport: re PR debug/80321 (infinite recursion with inlining of nested function and debug info)
    
            Backported from mainline
            2017-04-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/80321
            * dwarf2out.c (decls_for_scope): Ignore declarations of
            current_function_decl in BLOCK_NONLOCALIZED_VARS.
    
            * gcc.dg/debug/pr80321.c: New test.
    
            2017-03-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/79255
            * dwarf2out.c (decls_for_scope): If BLOCK_NONLOCALIZED_VAR is
            a FUNCTION_DECL, pass it as decl instead of origin to
            process_scope_var.
    
            * gcc.dg/pr79255.c: New test.
    
    From-SVN: r247695

commit 63f898219525d0be137ea25959add9ba915ac911
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:49:20 2017 +0200

    backport: re PR sanitizer/79572 (reference binding to null pointer not reported with -fsanitize=undefined)
    
            Backported from mainline
            2017-03-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79572
            * c-ubsan.h (ubsan_maybe_instrument_reference): Change argument to
            tree *.
            * c-ubsan.c (ubsan_maybe_instrument_reference): Likewise.  Handle
            not just NOP_EXPR to REFERENCE_TYPE, but also INTEGER_CST with
            REFERENCE_TYPE.
    
            * cp-gimplify.c (cp_genericize_r): Sanitize INTEGER_CSTs with
            REFERENCE_TYPE.  Adjust ubsan_maybe_instrument_reference caller
            for NOP_EXPR to REFERENCE_TYPE.
    
            * g++.dg/ubsan/null-8.C: New test.
    
    From-SVN: r247694

commit f4e4c82f29ebd9781f7a0e776d21f3fff6b162b4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:48:02 2017 +0200

    backport: re PR debug/80025 (ICE w/ -O2 (-O3, -Ofast) -g -ftracer (infinite recursion in rtx_equal_for_cselib_1))
    
            Backported from mainline
            2017-03-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/80025
            * cselib.c (cselib_hasher::equal): Pass 0 to rtx_equal_for_cselib_1.
            (rtx_equal_for_cselib_1): Add depth argument.  If depth
            is 128, don't look up VALUE locs and punt.  Increment
            depth in recursive calls when walking VALUE locs.
    
            * gcc.dg/torture/pr80025.c: New test.
    
    From-SVN: r247693

commit 4cb347d3dbe041bfd9aa8d85add02bf21eb566bb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:47:20 2017 +0200

    backport: env.c (initialize_env): Initialize stacksize to 0.
    
            Backported from mainline
            2017-03-30  Jakub Jelinek  <jakub@redhat.com>
    
            * env.c (initialize_env): Initialize stacksize to 0.
    
    From-SVN: r247692

commit 6bed388dd1a759906f7e91eb57d839c45db68ae1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:45:42 2017 +0200

    backport: re PR sanitizer/80168 (ICE in make_decl_rtl, at varasm.c:1311 w/ VLA and -fsanitize=address)
    
            Backported from mainline
            2017-03-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/80168
            * asan.c (instrument_derefs): Copy over last operand from
            original COMPONENT_REF to the new COMPONENT_REF with
            DECL_BIT_FIELD_REPRESENTATIVE.
            * ubsan.c (instrument_object_size): Likewise.
    
            * gcc.dg/asan/pr80168.c: New test.
    
    From-SVN: r247691

commit 38767d8ed772d2575cbfc4fa05f360fad0ca9b21
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:44:21 2017 +0200

    backport: re PR rtl-optimization/80112 (ICE in doloop_condition_get at loop-doloop.c:158)
    
            Backported from mainline
            2017-03-24  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/80112
            * loop-doloop.c (doloop_condition_get): Don't check condition
            if cmp isn't SET with IF_THEN_ELSE src.
    
            * gcc.dg/pr80112.c: New test.
    
    From-SVN: r247690

commit f87a82b60ce45b52dafe7e63e95c204738af1793
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:43:38 2017 +0200

    backport: re PR c++/80141 (ICE with pragma omp declare)
    
            Backported from mainline
            2017-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80141
            * semantics.c (finish_omp_clause) <case OMP_CLAUSE_SIMDLEN,
            case OMP_CLAUSE_ALIGNED>: Call maybe_constant_value only when not
            processing_template_decl.
    
            * g++.dg/gomp/pr80141.C: New test.
    
    From-SVN: r247689

commit e88573340c583bcb1ff5cb6e24cb2ce26943c705
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:42:51 2017 +0200

    backport: re PR c++/80129 (wrong code with ternary struct assignment to const)
    
            Backported from mainline
            2017-03-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/80129
            * gimplify.c (gimplify_modify_expr_rhs) <case COND_EXPR>: Clear
            TREE_READONLY on result if writing it more than once.
    
            * g++.dg/torture/pr80129.C: New test.
    
    From-SVN: r247688

commit d13708fa45b5f7c74fb787bcb56d88c27c88ac2d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:42:05 2017 +0200

    backport: re PR c/80097 (internal compiler error in c_fully_fold_internal with std=c89 and -fsanitize=float-divide-by-zero)
    
            Backported from mainline
            2017-03-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/80097
            * c-typeck.c (build_binary_op): Add EXCESS_PRECISION_EXPR only around
            optional COMPOUND_EXPR with ubsan instrumentation.
    
            * gcc.dg/ubsan/pr80097.c: New test.
    
    From-SVN: r247687

commit 4b3edc2abd8561d61a7aba883d966617a3331cd8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:41:16 2017 +0200

    backport: re PR c++/79896 (ICE in gimplify_expr, at gimplify.c:11950 on non-int128 target)
    
            Backported from mainline
            2017-03-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79896
            * decl.c (finish_enum_value_list): If value is error_mark_node,
            don't copy it and change its type.
            * init.c (constant_value_1): Return error_mark_node if DECL_INITIAL
            of CONST_DECL is error_mark_node.
    
            * g++.dg/ext/int128-5.C: New test.
    
    From-SVN: r247686

commit f9b8d1a1a92b094c0ba272abf77241de10b16806
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:40:10 2017 +0200

    backport: re PR sanitizer/79944 (asan: incorrect instrumentation of atomic operations)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/79944
            * asan.c (get_mem_refs_of_builtin_call): For BUILT_IN_ATOMIC* and
            BUILT_IN_SYNC*, determine the access type from the size suffix and
            always build a MEM_REF with that type.  Handle forgotten
            BUILT_IN_SYNC_FETCH_AND_NAND_16 and BUILT_IN_SYNC_NAND_AND_FETCH_16.
    
            * c-c++-common/asan/pr79944.c: New test.
    
    From-SVN: r247685

commit ec77483c6451d8a589e55c47abde7c68f812a077
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:39:18 2017 +0200

    backport: re PR target/79932 (_mm512_packus_epi32 does not compile under -O0)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79932
            * config/i386/avx512vlintrin.h (_mm256_cmpge_epi32_mask,
            _mm256_cmpge_epi64_mask, _mm256_cmpge_epu32_mask,
            _mm256_cmpge_epu64_mask, _mm256_cmple_epi32_mask,
            _mm256_cmple_epi64_mask, _mm256_cmple_epu32_mask,
            _mm256_cmple_epu64_mask, _mm256_cmplt_epi32_mask,
            _mm256_cmplt_epi64_mask, _mm256_cmplt_epu32_mask,
            _mm256_cmplt_epu64_mask, _mm256_cmpneq_epi32_mask,
            _mm256_cmpneq_epi64_mask, _mm256_cmpneq_epu32_mask,
            _mm256_cmpneq_epu64_mask, _mm256_mask_cmpge_epi32_mask,
            _mm256_mask_cmpge_epi64_mask, _mm256_mask_cmpge_epu32_mask,
            _mm256_mask_cmpge_epu64_mask, _mm256_mask_cmple_epi32_mask,
            _mm256_mask_cmple_epi64_mask, _mm256_mask_cmple_epu32_mask,
            _mm256_mask_cmple_epu64_mask, _mm256_mask_cmplt_epi32_mask,
            _mm256_mask_cmplt_epi64_mask, _mm256_mask_cmplt_epu32_mask,
            _mm256_mask_cmplt_epu64_mask, _mm256_mask_cmpneq_epi32_mask,
            _mm256_mask_cmpneq_epi64_mask, _mm256_mask_cmpneq_epu32_mask,
            _mm256_mask_cmpneq_epu64_mask, _mm_cmpge_epi32_mask,
            _mm_cmpge_epi64_mask, _mm_cmpge_epu32_mask, _mm_cmpge_epu64_mask,
            _mm_cmple_epi32_mask, _mm_cmple_epi64_mask, _mm_cmple_epu32_mask,
            _mm_cmple_epu64_mask, _mm_cmplt_epi32_mask, _mm_cmplt_epi64_mask,
            _mm_cmplt_epu32_mask, _mm_cmplt_epu64_mask, _mm_cmpneq_epi32_mask,
            _mm_cmpneq_epi64_mask, _mm_cmpneq_epu32_mask, _mm_cmpneq_epu64_mask,
            _mm_mask_cmpge_epi32_mask, _mm_mask_cmpge_epi64_mask,
            _mm_mask_cmpge_epu32_mask, _mm_mask_cmpge_epu64_mask,
            _mm_mask_cmple_epi32_mask, _mm_mask_cmple_epi64_mask,
            _mm_mask_cmple_epu32_mask, _mm_mask_cmple_epu64_mask,
            _mm_mask_cmplt_epi32_mask, _mm_mask_cmplt_epi64_mask,
            _mm_mask_cmplt_epu32_mask, _mm_mask_cmplt_epu64_mask,
            _mm_mask_cmpneq_epi32_mask, _mm_mask_cmpneq_epi64_mask,
            _mm_mask_cmpneq_epu32_mask, _mm_mask_cmpneq_epu64_mask): Move
            definitions outside of __OPTIMIZE__ guarded section.
    
            * gcc.target/i386/pr79932-2.c: New test.
    
    From-SVN: r247684

commit e0e334011109ca4d21ce151d513a67da5cac1548
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:38:35 2017 +0200

    backport: re PR target/79932 (_mm512_packus_epi32 does not compile under -O0)
    
            Backported from mainline
            2017-03-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79932
            * config/i386/avx512bwintrin.h (_mm512_packs_epi32,
            _mm512_maskz_packs_epi32, _mm512_mask_packs_epi32,
            _mm512_packus_epi32, _mm512_maskz_packus_epi32,
            _mm512_mask_packus_epi32): Move definitions outside of __OPTIMIZE__
            guarded section.
    
            * gcc.target/i386/pr79932-1.c: New test.
    
    From-SVN: r247683

commit c169099b67ed2d820217ddc5f6ec70a48e811f61
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:37:47 2017 +0200

    backport: re PR c/79940 (OpenMP pragma - internal compiler error with taskloop)
    
            Backported from mainline
            2017-03-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/79940
            * gimplify.c (gimplify_omp_for): Replace index var in outer
            taskloop statement with an artificial variable and add
            OMP_CLAUSE_PRIVATE clause for it.
    
            * testsuite/libgomp.c/pr79940.c: New test.
    
    From-SVN: r247682

commit 8756efbf3075352c00702ef66b4d7de13d6f40c5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:36:54 2017 +0200

    backport: re PR rtl-optimization/79901 (ICE in prepare_cmp_insn, at optabs.c:3904)
    
            Backported from mainline
            2017-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/79901
            * config/i386/sse.md (*avx512bw_<code><mode>3<mask_name>): Renamed to
            ...
            (*avx512f_<code><mode>3<mask_name>): ... this.
            (<code><mode>3 with maxmin code iterator): Use VI8_AVX2_AVX512F
            iterator instead of VI8_AVX2_AVX512BW.
    
            * gcc.target/i386/pr79901.c: New test.
    
    From-SVN: r247681

commit 35df5aac8c37df4b97f83b9a62b4b2d2f4efdf5b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:35:58 2017 +0200

    backport: re PR rtl-optimization/79901 (ICE in prepare_cmp_insn, at optabs.c:3904)
    
            Backported from mainline
            2017-03-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/79901
            * expr.c (expand_expr_real_2): For vector MIN/MAX, if there is no
            min/max expander, expand it using expand_vec_cond_expr.
    
    From-SVN: r247680

commit 83c199f9329eadb4106e6660903ff21f51b59099
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:35:28 2017 +0200

    backport: re PR target/79807 (ICE in extract_insn, at recog.c:2311 (error: unrecognizable insn))
    
            Backported from mainline
            2017-03-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79807
            * config/i386/i386.c (ix86_expand_multi_arg_builtin): If target
            is a memory operand, increase num_memory.
            (ix86_expand_args_builtin): Likewise.
    
            * gcc.target/i386/pr79807.c: New test.
    
    From-SVN: r247679

commit 0168b18f7b73b9acdefb8842eef9f1009ff2ddb2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:34:36 2017 +0200

    backport: re PR c++/79681 (ICE with constexpr and bitfield)
    
            Backported from mainline
            2017-03-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79681
            * fold-const.c (make_bit_field_ref): If orig_inner is COMPONENT_REF,
            attempt to use its first operand as BIT_FIELD_REF base.
    
            * g++.dg/cpp1y/constexpr-79681-1.C: New test.
            * g++.dg/cpp1y/constexpr-79681-2.C: New test.
    
    From-SVN: r247678

commit 17d86976dc49bda62c9dd357d684b72e83d533c9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:33:43 2017 +0200

    backport: re PR target/79729 (ICE in ix86_print_operand, at config/i386/i386.c:18231)
    
            Backported from mainline
            2017-02-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79729
            * config/i386/i386.c (ix86_print_operand) <case 'R'>: Replace
            gcc_unreachable with output_operand_lossage.
    
            * gcc.target/i386/pr79729.c: New test.
    
    From-SVN: r247677

commit 010b9f2b82107d1174d0aa5bd718a9b9fb5d9587
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:32:50 2017 +0200

    backport: re PR middle-end/79396 (ICE (verify_flow_info failed) with -fnon-call-exceptions -O2 -march=haswell)
    
            Backported from mainline
            2017-02-25  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/79396
            * tree-eh.c (operation_could_trap_p, stmt_could_throw_1_p): Handle
            FMA_EXPR like tcc_binary or tcc_unary.
    
            * g++.dg/opt/pr79396.C: New test.
    
    From-SVN: r247676

commit ed3c098d35d9829be4099ab4415ab11315fd5e7f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:31:37 2017 +0200

    backport: re PR c++/79664 (ICE with #pragma omp parallel in constexpr function)
    
            Backported from mainline
            2017-02-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79664
            * parser.c (cp_parser_omp_teams, cp_parser_omp_target): Use
            SET_EXPR_LOCATION on OMP_TARGET/OMP_TEAMS tree.
            * constexpr.c (potential_constant_expression_1): Handle
            OMP_*, OACC_* and CILK_* trees.
    
            * g++.dg/cpp1y/constexpr-throw.C: Adjust expected diagnostic location.
            * g++.dg/gomp/pr79664.C: New test.
    
    From-SVN: r247675

commit 4b2cd09fa3762ec5c717f33c9cdc946d36893ec4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:30:03 2017 +0200

    backport: re PR c++/79639 (ICE with -O and constexpr)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79639
            * constexpr.c (cxx_eval_store_expression): If *valp is a PTRMEM_CST,
            call cplus_expand_constant on it first.
    
            * g++.dg/cpp1y/constexpr-79639.C: New test.
    
    From-SVN: r247674

commit 95fda2b9d692f15b9c364b87f022b5c4282e7ae2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:29:10 2017 +0200

    backport: re PR target/79570 (ICE in sel-sched-ir.c:4534 in pr69956.c)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79570
            * sel-sched.c (moveup_expr_cached): Don't call sel_bb_head
            on temporarily removed DEBUG_INSNs.
    
            * gcc.dg/pr79570.c: New test.
    
    From-SVN: r247673

commit e5d84729b990140e4142e03a8aaf74e704086856
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:28:09 2017 +0200

    backport: re PR c++/79641 (ICE with const variable and attribute)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79641
            * c-common.c (handle_mode_attribute): Use build_qualified_type to
            preserve quals.
    
            * c-c++-common/pr79641.c: New test.
    
    From-SVN: r247672

commit be2f8d47de031fd3d128bd75c34f70391b6b040e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:27:17 2017 +0200

    backport: re PR target/79494 (ICE in maybe_record_trace_start, at dwarf2cfi.c:2330)
    
            Backported from mainline
            2017-02-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79494
            * config/i386/i386.c (ix86_expand_split_stack_prologue): Call
            make_reg_eh_region_note_nothrow_nononlocal on call_insn.
            * config/rs6000/rs6000.c: Include except.h.
            (rs6000_expand_split_stack_prologue): Call
            make_reg_eh_region_note_nothrow_nononlocal on the call insn.
    
            * gcc.dg/pr79494.c: New test.
    
    From-SVN: r247670

commit 920a3cba7a10f18c75ea44ef2e3d18e5fc527008
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:25:59 2017 +0200

    backport: re PR target/79568 (ICE in extract_insn, at recog.c:2311 for pr70325.c (with -mavx512bw))
    
            Backported from mainline
            2017-02-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79568
            * config/i386/i386.c (ix86_expand_builtin): Handle
            OPTION_MASK_ISA_AVX512VL and OPTION_MASK_ISA_64BIT in
            ix86_builtins_isa[fcode].isa as a requirement of those
            flags and any other flag in the bitmask.
            (ix86_init_mmx_sse_builtins): Use 0 instead of
            ~OPTION_MASK_ISA_64BIT as mask.
            * config/i386/i386-builtin.def (bdesc_special_args,
            bdesc_args): Likewise.
    
            * gcc.target/i386/pr79568-1.c: New test.
            * gcc.target/i386/pr79568-2.c: New test.
            * gcc.target/i386/pr79568-3.c: New test.
    
    From-SVN: r247669

commit d703f9e577e0dee5c8fa05f4bc07abdec3e58d7b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:24:50 2017 +0200

    backport: re PR target/79559 (ICE in ix86_print_operand, at config/i386/i386.c:18189)
    
            Backported from mainline
            2017-02-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79559
            * config/i386/i386.c (ix86_print_operand): Use output_operand_lossage
            instead of gcc_assert for K, r and R code checks.  Formatting fixes.
    
            * gcc.target/i386/pr79559.c: New test.
    
    From-SVN: r247668

commit 32b5b6d7551e258312a191205470918c6277056d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 5 23:23:09 2017 +0200

    backport: re PR c++/79512 (ICE: Segfault in gimple_build_call_1, at gimple.c:218)
    
            Backported from mainline
            2017-02-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79512
            * c-parser.c (c_parser_omp_target): For -fopenmp-simd
            ignore #pragma omp target even when not followed by identifier.
    
            * parser.c (cp_parser_omp_target): For -fopenmp-simd
            ignore #pragma omp target even when not followed by identifier.
    
            * c-c++-common/gomp/pr79512.c: New test.
    
    From-SVN: r247667

commit e05ab9227963a1fd56aca0d9f169e1cacbc49293
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri May 5 15:38:04 2017 +0000

    re PR target/77728 (Miscompilation multiple vector iteration on ARM)
    
            PR target/77728
            * config/arm/arm.c: Include gimple.h.
            (aapcs_layout_arg): Emit -Wpsabi note if arm_needs_doubleword_align
            returns negative, increment ncrn if it returned non-zero.
            (arm_needs_doubleword_align): Return int instead of bool,
            ignore DECL_ALIGN of non-FIELD_DECL TYPE_FIELDS chain
            members, but if there is any such non-FIELD_DECL
            > PARM_BOUNDARY aligned decl, return -1 instead of false.
            (arm_function_arg): Emit -Wpsabi note if arm_needs_doubleword_align
            returns negative, increment nregs if it returned non-zero.
            (arm_setup_incoming_varargs): Likewise.
            (arm_function_arg_boundary): Emit -Wpsabi note if
            arm_needs_doubleword_align returns negative, return
            DOUBLEWORD_ALIGNMENT if it returned non-zero.
    
            * g++.dg/abi/pr77728-1.C: New test.
    
    Co-Authored-By: Jakub Jelinek <jakub@redhat.com>
    Co-Authored-By: Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>
    
    From-SVN: r247639

commit 0ace2cdc7ec4f0fd2f687c3ec17f28d7d5f8adc8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 5 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r247625

commit f8c3fda042dafedecccd0a41f4a830690a087d3e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 4 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r247573

commit 27fc5e33a56a7ca0c692e5f34b84d2f982be169b
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 3 20:19:28 2017 +0200

    backport: re PR target/68491 (libgcc calls __get_cpuid with 0 level breaks on early 486)
    
            Backport from mainline
            2017-05-01  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/68491
            * config/i386/cpuid.h (__get_cpuid): Always return 0 when
            __get_cpuid_max returns 0.
            (__get_cpuid_count): Ditto.
    
    From-SVN: r247561

commit c43c2d026c0fe9dcfbb6b9d90e272d4034e1b848
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 3 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r247531

commit 4ddf27898b69a2ede1e35dc5bad36489b0d32e09
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 2 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r247457

commit 4b7c23fb6c0c2d1fa060a8bbc3f6b912c4df900d
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Mon May 1 11:56:52 2017 +0200

    backport: re PR fortran/80392 ([OOP] ICE with allocatable polymorphic function result in a procedure pointer component)
    
    2017-05-01  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * trans-types.c (gfc_get_derived_type): Prevent an infinite loop when
            building a derived type that includes a procedure pointer component
            with a polymorphic result.
    
    2017-05-01  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80392
            * gfortran.dg/proc_ptr_comp_49.f90: New test case.
    
    From-SVN: r247430

commit 5de25a114400df509cca53d4341f6cc9e8b3e7eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 1 00:16:23 2017 +0000

    Daily bump.
    
    From-SVN: r247423

commit 283b0489c381dcc12a40bf0de936793d621b57ff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 30 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247414

commit 453330fff0562a5cd540856c09a8a291ab51edcd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 29 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r247403

commit 8c36cc2871516eac9760e1821053efaa4860940d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 28 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r247359

commit c69cbf7a0296c221968a753387985a71b996035a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 27 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r247289

commit 807c65aa84d640e6582c70458229d672afc634bb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 26 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r247271

commit e2d369fffe9fc126a0b36c4036a87a79ad191af5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 25 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r247119

commit 65f53d7242e81587ce55b0e4840d337cea244710
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 24 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r247086

commit 2dec8e73aac6e6a951f4a1cb3cbc8343745e16d1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 23 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r247079

commit fd35dd4da9eb69d25c42d353189739889d95a12d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 22 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r247073

commit 6ad173433402fb0491ca888414ce1646762c4f80
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Apr 21 23:11:22 2017 +0200

    backport: re PR fortran/80361 ([OOP] bogus  recursive call to nonrecursive procedure with -fcheck=recursion)
    
    2017-04-21  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80361
            * class.c (generate_finalization_wrapper): Give the finalization wrapper
            the recursive attribute.
    
    2017-04-21  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/80361
            * gfortran.dg/class_62.f90: New test case.
    
    From-SVN: r247070

commit a910f9be08a4123de90951a3b236ba5c1cfcb77e
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Apr 21 08:37:13 2017 +0000

    backport: re PR tree-optimization/80426 (wrong manipulation of range based on INT_MIN)
    
            Backport from mainline
            2017-04-19  Eric Botcazou  <ebotcazou@adacore.com>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/80426
            * tree-vrp.c (extract_range_from_binary_expr_1): For an additive
            operation on symbolic operands, also compute the overflow for the
            invariant part when the operation degenerates into a negation.
    
    From-SVN: r247050

commit 5795b7019b19c5448aeb66de3f068f3662f50e66
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 21 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r247043

commit bef8f1b6d4c259fc1e63fac5d1adc89c654e94dd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 20 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r247009

commit a78f0f2500cafaddfd18908ed340e0e6a8a5cbdd
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Apr 19 12:22:59 2017 +0000

    backport: re PR target/80462 ([avr] Incorrect "warning: uninitialized variable 'xxx' put into program memory area" for identical strings)
    
            Backport from 2017-04-19 trunk r246997.
            PR target/80462
            * config/avr/avr.c (tree.h): Include it.
            (cgraph.h): Include it.
            (avr_encode_section_info): Don't warn for uninitialized progmem
            variable if it's just an alias.
    
    From-SVN: r246998

commit ffeff2bd1d5b083e85301fddd17afd35c55e8281
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 19 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r246985

commit 4f9894465df44127f6241688b15d98f02094ba54
Author: Georg-Johann Lay <gjl@gcc.gnu.org>
Date:   Tue Apr 18 13:25:03 2017 +0000

    Typo.
    
    From-SVN: r246968

commit 4ed87c8872a081babc1abe95f4e018528cf91879
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Apr 18 13:23:01 2017 +0000

    backport: re PR c++/79435 (ICE on invalid C++ code (with member access into an incomplete type) on x86_64-linux-gnu: Segmentation fault)
    
    gcc/
            Backport from 2017-04-18 trunk r246966.
            PR target/79435
            * config/avr/avr.c (intl.h): Include it.
            (avr_pgm_check_var_decl) [reason]: Wrap diagnostic snippets into _().
    
    From-SVN: r246967

commit 2458a9f38f8d883d460e1e0b11cd95f77870708b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 18 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r246959

commit b35da107383dd13953cb381e85a74eac06c0c352
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 17 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r246947

commit e924870dd564d81ef8c04c3a7606281597a4de1b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 16 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r246943

commit 9fd260b53acd030df0281e95ef2671b6247ff3aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 15 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r246936

commit 7e76c818da1ddbb3669b9fc8688f1d9ef613f31a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246922

commit 7e0cde4482666f0eb7493e3b1f54e5e022422a88
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 13 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246897

commit 51dd53882c58aede3e452eefeca8a4ad34993217
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:37 2017 -0400

    PR c++/80150 - ICE with overloaded variadic deduction.
    
            * pt.c (try_one_overload): Remove asserts.
    
    From-SVN: r246894

commit 391996f956fecfa6116b39be356c0c32e4bc8594
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:30 2017 -0400

    PR c++/77563 - missing ambiguous conversion error.
    
            * call.c (convert_like_real): Use LOOKUP_IMPLICIT.
    
    From-SVN: r246893

commit 5edb6ac4bb08b0cf6f82ff2fe3ccd24132d735d9
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:23 2017 -0400

    PR c++/79519 - ICE with deleted template friend.
    
            * decl.c (grokdeclarator): Complain about misplaced function
            definition using =, as well.
    
    From-SVN: r246892

commit 71f08323e35495efa80650e09a4310b7553dd71c
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:15 2017 -0400

    PR c++/79640 - infinite recursion with generic lambda.
    
            * pt.c (tsubst_copy) [VAR_DECL]: Register the dummy instantiation
            before substituting its initializer.
    
    From-SVN: r246891

commit f3d700934fbaa6168e0cc7cd05f64d1ded090622
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:09 2017 -0400

    PR c++/80043 - ICE with -fpermissive
    
            * typeck.c (convert_for_assignment): Handle instantiate_type
            not giving an error.
    
    From-SVN: r246890

commit 664c7339547ce8b5aeecf97b1237acec065fd60f
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:23:02 2017 -0400

    PR c++/78282 - auto template and pack expansion
    
            * pt.c (find_parameter_packs_r): Don't walk into the type of
            templates other than template template-parameters.
    
    From-SVN: r246889

commit a248f75ef012ace69e9fb70ea8baa8b697e88de9
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:56 2017 -0400

    PR c++/79607 - ICE with T{} initializer
    
            * decl.c (type_dependent_init_p): Check the type of a CONSTRUCTOR.
    
    From-SVN: r246888

commit 8586ae7283b11a4fcad8b2a2d19ac8801729a749
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:50 2017 -0400

    PR c++/79566 - elaborated-type-specifier in range for
    
            * parser.c (cp_parser_simple_declaration): Fix check for type
            definition.
    
    From-SVN: r246887

commit 0c5b0e1dcf49b99dfef35a95bdaa327b523756dd
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:44 2017 -0400

    PR c++/79580 - ICE with compound literal
    
            * parser.c (cp_parser_class_head): If we're in the middle of an
            expression, use ts_within_enclosing_non_class.
    
    From-SVN: r246886

commit 6a497cc7da788f7bf37c7a366e6418cfb34722a1
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:38 2017 -0400

    PR c++/79508 - lookup error with member template
    
            * parser.c (cp_parser_template_name): Clear
            parser->context->object_type if we aren't doing lookup.
    
    From-SVN: r246885

commit 3897149daaa377ef17523ec12a3aad34d2c5034d
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:32 2017 -0400

    PR c++/79050 - ICE with undeduced auto and LTO
    
            * decl.c (poplevel): Remove undeduced auto decls.
    
    From-SVN: r246884

commit 79f5c74c8ba8790e9b9ff987a9a7b0a0b0ff9115
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 12 15:22:25 2017 -0400

    PR c++/79461 - ICE with lambda in constexpr constructor
    
            * constexpr.c (build_data_member_initialization): Ignore
            initialization of a local variable.
    
    From-SVN: r246883

commit fa5209eb88791d67b46b8bc9a8cce48f18e67136
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Apr 12 13:37:30 2017 +0000

    backport: re PR target/80376 (Some vec_xxpermdi usage lead to ICE)
    
    2017-04-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-04-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/80376
            PR target/80315
            * config/rs6000/rs6000.c (rs6000_expand_unop_builtin): Return
            CONST0_RTX (mode) rather than const0_rtx where appropriate.
            (rs6000_expand_binop_builtin): Likewise.
            (rs6000_expand_ternop_builtin): Likewise; also add missing
            vsx_xxpermdi_* variants; also fix typo (arg1 => arg2) for
            vshasigma built-ins.
            * doc/extend.texi: Document that vec_xxpermdi's third argument
            must be a constant.
    
    From-SVN: r246873

commit 88cfb8f1a52e3e1f3ac044728788fd8d806c5a66
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 12 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246862

commit e8ac20e1b64da7c38202c51e2f6ec6b0658c9f2e
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Apr 11 20:05:03 2017 +0000

    rs6000.c (vec_load_pendulum): Rename...
    
            * rs6000/rs6000.c (vec_load_pendulum): Rename...
            (vec_pairing): ...to this.
            (power9_sched_reorder2): Rewrite code for pairing vector/vecload insns.
            (rs6000_sched_init): Adjust for name change.
            (struct rs6000_sched_context): Likewise.
            (rs6000_init_sched_context): Likewise.
            (rs6000_set_sched_context): Likewise.
    
    From-SVN: r246855

commit 8aa18620d0105c8015cbe709f2afe65a4b226d44
Author: Martin Jambor <mjambor@suse.cz>
Date:   Tue Apr 11 15:23:48 2017 +0200

    [PR 77333] Fixup fntypes of gimple calls of clones
    
    2017-04-11  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2017-03-30  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/77333
            * cgraph.h (cgraph_build_function_type_skip_args): Declare.
            * cgraph.c (redirect_call_stmt_to_callee): Set gimple fntype so that
            it reflects the signature changes performed at the callee side.
            * cgraphclones.c (build_function_type_skip_args): Make public, renamed
            to cgraph_build_function_type_skip_args.
            (build_function_decl_skip_args): Adjust call to the above function.
    
    testsuite/
            * g++.dg/ipa/pr77333.C: New test.
    
    From-SVN: r246838

commit ec8f9cc42f369a63a08957a7ea19ef7a680578a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 11 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246829

commit f3529195e6f1ac8844b62ae0659c207d4a23c546
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 10 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r246796

commit dccf7a10437eb134ec717fbf2b5584e27ec978af
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246791

commit ad2b29a4e3b8dabb99c6cb65923e19a3ea99eefe
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Sat Apr 8 21:16:17 2017 +0200

    backport: aarch64-freebsd.h: Define MCOUNT_NAME.
    
    2017-04-08  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-04-08  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/aarch64/aarch64-freebsd.h: Define MCOUNT_NAME.
        Add comment for WCHAR_T.
    
    From-SVN: r246787

commit 779f2594008ed37ff68c26a905fbdf2826b4a8d9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 8 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246782

commit f91dd8f7e0a65d260c30e5946c762c7d79077f27
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Apr 7 21:36:09 2017 +0200

    backport: aarch64-freebsd.h: Define WCHAR_T.
    
    2017-04-07  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2017-04-07  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/aarch64/aarch64-freebsd.h: Define WCHAR_T.
    
    From-SVN: r246777

commit 55a431dbdc86528c8c6df07cf8d2e730ecf79ed8
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Fri Apr 7 16:27:14 2017 +0000

    Fix typo
    
    From-SVN: r246768

commit e14aa8714e998c7d30e9f9ef524ea68587fb4f9d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Apr 7 16:26:52 2017 +0000

    backport: re PR target/78002 (gcc.target/aarch64/stack-checking.c ICEs with -mabi=ilp32)
    
            Backport from mainline
            2017-04-05  Eric Botcazou  <ebotcazou@adacore.com>
    
            PR target/78002
            * config/aarch64/aarch64.c (aarch64_emit_probe_stack_range): Replace
            ptr_mode with Pmode throughout.
            * config/aarch64/aarch64.md (probe_stack_range_<PTR:mode): Rename
            into probe_stack_range and use DImode.
    
    From-SVN: r246767

commit 1a3fd08b2b45a01bbb5814b7c9d7a9a236e88b3b
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Fri Apr 7 07:06:01 2017 +0000

    ARM: Introduce ARM_DEFAULT_SHORT_ENUMS
    
    Allow targets to define the default for the short enums option.
    
    gcc/
    
            * config/arm/arm.h (ARM_DEFAULT_SHORT_ENUMS): Provide default
            definition.
            * config/arm/arm.c (arm_default_short_enums): Use
            ARM_DEFAULT_SHORT_ENUMS.
            * config/arm/rtems.h (ARM_DEFAULT_SHORT_ENUMS): Define.
    
    From-SVN: r246754

commit fcf6b70f061c84d532f9fd6a94b406c71cf82a45
Author: Alan Modra <amodra@gmail.com>
Date:   Fri Apr 7 11:48:34 2017 +0930

    [RS6000] Out-of-line register save functions can't be used from crtend.o
    
            PR target/45053
            * config/rs6000/t-crtstuff (CRTSTUFF_T_CFLAGS): Add -O2.
    
    From-SVN: r246750

commit 251b0841df433fae3a7bff1652fbc9bbc661f249
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 7 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246747

commit 66b4c79f0c9621960384108bcfe6788e7fe3c753
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Apr 6 23:15:50 2017 +0200

    * ChangeLog: Fix my last entry.
    
    From-SVN: r246745

commit 0a48562ebd44d571c7720b372946753682aac01c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Apr 6 23:06:08 2017 +0200

    backport: re PR target/79733 (ICE in int_mode_for_mode, at stor-layout.c:406)
    
            Backport from mainline
            2017-04-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/79733
            * config/i386/i386.c (ix86_expand_builtin)
            <case IX86_BUILTIN_KORTEST{C,Z}16>: Determine insn operand
            mode from insn data. Convert operands to insn operand mode.
            Copy operands that don't satisfy insn predicate to a register.
    
            2017-04-05  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80298
            * config/i386/mmintrin.h: Add -msse target option when __SSE__ is
            not defined for x86_64 target.  Add -mmmx target option when __SSE2__
            is not defined.
            * config/i386/mm3dnow.h: Add -msse target when __SSE__ is not defined
            for x86_64 target.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2017-04-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/79733
            * gcc.target/i386/pr79733.c: New test.
    
            2017-04-06  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/80298
            * gcc.target/i386/pr80298-1.c: New test.
            * gcc.target/i386/pr80298-2.c: Ditto.
    
    From-SVN: r246744

commit 4d32d5729ad8563f2059a1aea2bbf193099bd70b
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Thu Apr 6 16:26:39 2017 +0000

    re PR target/80082 (GCC incorrectly assumes Cortex-r[578] have 64-bit single-copy atomic LDRD)
    
    2017-04-06  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/80082
        * config/arm/arm-protos.h (FL_LPAE): Define macro.
        (FL_FOR_ARCH7VE): Add FL_LPAE.
        (arm_arch_lpae): Declare extern.
        * config/arm/arm.c (arm_arch_lpae): Declare.
        (arm_option_override): Define arm_arch_lpae.
        * config/arm/arm.h (TARGET_HAVE_LPAE): Redefine in term of
        arm_arch_lpae.
    
        gcc/testsuite/
        PR target/80082
        * gcc.target/arm/atomic_loaddi_10.c: New testcase.
        * gcc.target/arm/atomic_loaddi_11.c: Likewise.
    
    From-SVN: r246734

commit b24c1540f5533ed5960b0b2989483113f863a23b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 6 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246723

commit 0f630edbe6a8cccd71fdbd883b6f71600dde851f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 5 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r246697

commit 4ceb7d304f5fb25bac2e1847d07d451caf683589
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 4 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r246668

commit ccc87a0411e27847238cbca5406dd439cb3838f4
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Apr 3 22:57:32 2017 +0000

    backport: re PR target/79947 (ICE in rs6000_emit_swsqrt at gcc/config/rs6000/rs6000.c:37570)
    
    [gcc]
    2017-04-03  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from the trunk
            2017-03-14  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79947
            * config/rs6000/rs6000.h (TARGET_FRSQRTES): Add check for
            -mpowerpc-gfxopt.
    
    [gcc/testsuite]
    2017-04-03  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from the trunk
            2017-03-14  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79947
            * gcc.target/powerpc/pr79947.c: New test.
    
    From-SVN: r246665

commit 3ce8f7a095303e7ebcf21c5bc1faa1d92158274d
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Tue Apr 4 00:20:23 2017 +0300

    re PR libstdc++/79141 (std::pair<int,int> p = {}; fails to compile due to ambiguous overload)
    
    PR libstdc++/79141
    
    Backport from mainline
    2017-04-03  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            PR libstdc++/79141
            * include/bits/stl_pair.h (__nonesuch_no_braces): New.
            (operator=(typename conditional<
            __and_<is_copy_assignable<_T1>,
            is_copy_assignable<_T2>>::value,
            const pair&, const __nonesuch&>::type)): Change __nonesuch
            to __nonesuch_no_braces.
            (operator=(typename conditional<
            __not_<__and_<is_copy_assignable<_T1>,
            is_copy_assignable<_T2>>>::value,
            const pair&, const __nonesuch&>::type)): Likewise.
            (operator=(typename conditional<
            __and_<is_move_assignable<_T1>,
            is_move_assignable<_T2>>::value,
            pair&&, __nonesuch&&>::type)): Likewise.
            * testsuite/20_util/pair/79141.cc: New.
    
    From-SVN: r246663

commit 6738acec6f96503fa781465ca0c3cb5df30206eb
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Apr 3 12:40:53 2017 -0500

    backport: re PR target/80246 (Builtin's for POWER's dxex[q] and diex[q] use the wrong types)
    
            Backport from mainline
            2017-04-03  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * gcc.target/powerpc/dfp-builtin-1.c: Require hard_dfp, not
            powerpc_vsx_ok.
            (std, ld): Limit scan-assembler-times check to lp64.
            (stwu, stw, lwz): Add scan-assembler-times check for ilp32.
            * gcc.target/powerpc/dfp-builtin-2.c: Require hard_dfp, not
            powerpc_vsx_ok.
    
            PR target/80246
            * gcc.target/powerpc/pr80246.c: Require hard_dfp.
    
    From-SVN: r246659

commit 1d77337e616b9d60d74925c58fec6f0894276d3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 3 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r246641

commit 629508fc7e247769c8e1a07bc26d2122792ca1e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 2 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r246634

commit e92299006cd24eebdee85e7bcbcf6f6cba1e4fd9
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Apr 1 11:35:14 2017 +0000

    backport: re PR fortran/71838 (ICE with OpenCoarrays on submodule)
    
    2017-04-01  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71838
            * symbol.c (check_conflict): A dummy procedure in a submodule,
            module procedure is not an error.
            (gfc_add_flavor): Ditto.
    
    2017-04-01  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71838
            * gfortran.dg/submodule_26.f08 : New test.
            * gfortran.dg/submodule_27.f08 : New test.
    
    From-SVN: r246632

commit 951d24b45c415420b57def7664aeea39d6257eb8
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Apr 1 09:35:52 2017 +0000

    backport: re PR fortran/79676 ([submodules] Compilation/linking error when module procedures PRIVATE)
    
    2017-04-01  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79676
            * module.c (mio_symbol_attribute): Remove reset of the flag
            'no_module_procedures'.
            (check_for_module_procedures): New function. Move declaration
            of 'no_module_procedures' to above it.
            (gfc_dump_module): Traverse namespace calling new function.
    
    2017-04-01  Paul Thomas  <pault@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/79676
            * gfortran.dg/submodule_28.f08 : New test.
    
    From-SVN: r246631

commit 0cc81b623b64697f89cc51beb98852ad79aaa17a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 1 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r246629

commit 30bbc5e4a3aa9fa12e413d2151d274c424145258
Author: Richard Sandiford <richard.sandiford@arm.com>
Date:   Fri Mar 31 11:51:32 2017 +0000

    PR80218: Call CDCE fails to update the block profile
    
    tree-call-cdce.c was updating the edge probabilities and counts but
    it wasn't updating the corresponding block information.  Among other
    things, this tricked the register allocator into thinking that the
    libm call was relatively hot and that it wasn't worth assigning
    call-clobbered registers to values that were live across the call.
    With correct frequency information, the RA instead keeps x in the
    first argument register and spills it only around the call.
    
    Although the problem has been around for a long time, it became more
    acute (and would only trigger for the first function in the testcase)
    after r230488.  Until that patch, the code was specific to calls that
    had no lhs, but that we still had to keep for their effect on errno.
    After the patch we also used the code for calls with an lhs, provided
    that the hardware could calculate the lhs directly.
    
    gcc/
            PR tree-optimization/80218
            * tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):
            Update block frequencies and counts.
    
    gcc/testsuite/
            PR tree-optimization/80218
            * gcc.dg/pr80218.c: New test.
    
    From-SVN: r246614

commit 6e88b65a07dd04626df01a6ef2a31b24e76c7c3d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 31 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r246603

commit 96584d0caee803ad534c5d81a8145e32990dd10a
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Thu Mar 30 15:06:06 2017 -0500

    backport: re PR target/80246 (Builtin's for POWER's dxex[q] and diex[q] use the wrong types)
    
    gcc/
            Backport from mainline
            2017-03-30  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * config/rs6000/dfp.md (dfp_dxex_<mode>): Update mode of operand 0.
            (dfp_diex_<mode>): Update mode of operand 1.
            * doc/extend.texi (dxex, dxexq): Document change to return type.
            (diex, diexq): Document change to argument type.
    
    gcc/testsuite/
            Backport from mainline
            2017-03-30  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/80246
            * gcc.target/powerpc/dfp-builtin-1.c: Remove unneeded dg-skip-if for
            Darwin and SPE.
            (dxex, dxexq): Update return type.
            (diex, diexq): Update argument type.
            * gcc.target/powerpc/pr80246.c: New test.
    
    From-SVN: r246595

commit 99fe83ee1cc2d0072537ad5086f6a0ee33851848
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 30 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r246580

commit 6724f7284738fec6a80f6e7c9c687e46b1256943
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Mar 29 23:15:51 2017 +0000

    backport: re PR target/80123 (libgomp tests pr66199-2.c and pr66199-5.c fail with -mcpu=power9)
    
    [gcc]
    2017-03-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-21  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            PR target/80123
            * doc/md.texi (Constraints): Document wA constraint.
            * config/rs6000/constraints.md (wA): New.
            * config/rs6000/rs6000.c (rs6000_debug_reg_global): Add wA reg_class.
            (rs6000_init_hard_regno_mode_ok): Init wA constraint.
            * config/rs6000/rs6000.h (RS6000_CONSTRAINT_wA): New.
            * config/rs6000/vsx.md (vsx_splat_<mode>): Use wA constraint.
    
            2017-03-16  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71294
            * config/rs6000/vsx.md (vsx_splat_<mode>, VSX_D iterator): Allow a
            SPLAT operation on ISA 2.07 64-bit systems that have direct move,
            but no MTVSRDD support, by doing MTVSRD and XXPERMDI.
    
    [gcc/testsuite]
    2017-03-29  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-16  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71294
            * g++.dg/pr71294.C: New test.
    
    From-SVN: r246577

commit 1e59cfa8af7e290fbc1f2dac176d48a73e3c0321
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Mar 29 09:28:46 2017 +0000

    backport: [multiple changes]
    
    2017-03-29  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-03-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78644
            * tree-ssa-ccp.c (evaluate_stmt): When we may not use the value
            of a simplification result we may not use it at all.
    
            * gcc.dg/pr78644-1.c: New testcase.
            * gcc.dg/pr78644-2.c: Likewise.
    
            2017-03-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/80181
            * tree-ssa-ccp.c (likely_value): UNDEFINED ^ X is UNDEFINED.
    
            * gcc.dg/torture/pr80181.c: New testcase.
    
    From-SVN: r246561

commit 02a9b25498430ab90d772b54d634e7f1a0ced9e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 29 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r246559

commit 2afe88c52fd70068b6e24bc56d81060eec8a6d9d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 28 18:18:42 2017 +0100

    PR libstdc++/80137 use std::nextafter instead of looping
    
            PR libstdc++/80137
            * include/bits/random.tcc (generate_canonical): Use std::nextafter
            or numeric_limits::epsilon() to reduce out-of-range values.
            * testsuite/26_numerics/random/uniform_real_distribution/operators/
            64351.cc: Verify complexity requirement is met.
    
    From-SVN: r246549

commit 1f6d12a554b938b10ffcf31ec80d39641bd46d91
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 28 18:18:37 2017 +0100

    PR libstdc++/62045 fix O(N) insertion in pd_ds binary heap
    
    Backport from mainline
    2017-03-15  Xi Ruoyao  <ryxi@stu.xidian.edu.cn>
    
            PR libstdc++/62045
            * include/ext/pb_ds/qdetail/binary_heap_/binary_heap_.hpp
            (is_heap): Remove.
            (push_heap): Remove the wrong checking using is_heap.
            (make_heap): Remove the assertion using is_heap.
            * include/ext/pb_ds/detail/binary_heap_/insert_fn_imps.hpp
            (modify): Ditto.
            (resize_for_insert_if_needed): Add PB_DS_ASSERT_VALID after
            calling make_heap.
    
    Backport from mainline
    2017-03-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/62045
            * testsuite/ext/pb_ds/regression/priority_queue_binary_heap-62045.cc:
            New test.
            * testsuite/ext/pb_ds/regression/priority_queues.cc: Fix copy&paste
            error in comment.
    
    From-SVN: r246548

commit 35bbca3c751ac00977f176c37e10c37fae103625
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 28 18:18:31 2017 +0100

    Ensure <experimental/iterator> includes <iterator>
    
    Backport from mainline
    2017-02-23  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/iterator: Include <iterator>.
            * testsuite/experimental/iterator/requirements.cc: Check for contents
            of <iterator>.
    
    From-SVN: r246547

commit ba51534e73811244f43e9efffc2d9e5c4f513821
Author: Andreas Schwab <schwab@suse.de>
Date:   Tue Mar 28 14:22:29 2017 +0000

    Backport "Support for Ada on aarch64 with -mabi=ilp32" from trunk
    
            PR ada/80117
            * system-linux-aarch64-ilp32.ads: New file.
            * gcc-interface/Makefile.in (LIBGNAT_TARGET_PAIRS_COMMON): Rename
            from LIBGNAT_TARGET_PAIRS.
            (LIBGNAT_TARGET_PAIRS_32, LIBGNAT_TARGET_PAIRS_64): Define.
            (LIBGNAT_TARGET_PAIRS): Use LIBGNAT_TARGET_PAIRS_COMMON, and
            LIBGNAT_TARGET_PAIRS_64 or LIBGNAT_TARGET_PAIRS_32 for -mabi=lp64
            or -mabi=ilp32, resp.
    
    From-SVN: r246536

commit e5a47be14e5c120e23bc921cf957e3db75265787
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 28 08:16:27 2017 +0000

    re PR sanitizer/80067 (ICE in fold_comparison with -fsanitize=undefined)
    
            PR sanitizer/80067
            * fold-const.c (fold_comparison): Use protected_set_expr_location
            instead of SET_EXPR_LOCATION.
    
            * c-c++-common/ubsan/shift-10.c: New test.
    
    From-SVN: r246522

commit c07a28169955cf8d945237c647eb22bc4811c87f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 28 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r246515

commit f55fcf340d18ebf2a43c96df493d6cacf7952626
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Mar 27 19:35:35 2017 +0000

    backport: re PR target/78543 (ICE in push_reload, at reload.c:1349 on powerpc64le-linux-gnu)
    
    [gcc]
    2017-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/78543
            * config/rs6000/rs6000.md (bswaphi2_extenddi): Combine bswap
            HImode and SImode with zero extend to DImode to one insn.
            (bswap<mode>2_extenddi): Likewise.
            (bswapsi2_extenddi): Likewise.
            (bswaphi2_extendsi): Likewise.
            (bswaphi2): Combine bswap HImode and SImode into one insn.
            Separate memory insns from swapping register.
            (bswapsi2): Likewise.
            (bswap<mode>2): Likewise.
            (bswaphi2_internal): Delete, no longer used.
            (bswapsi2_internal): Likewise.
            (bswap<mode>2_load): Split bswap HImode/SImode into separate load,
            store, and gpr<-gpr swap insns.
            (bswap<mode>2_store): Likewise.
            (bswaphi2_reg): Register only splitter, combine with the splitter.
            (bswaphi2 splitter): Likewise.
            (bswapsi2_reg): Likewise.
            (bswapsi2 splitter): Likewise.
            (bswapdi2): If we have the LDBRX and STDBRX instructions, split
            the insns into load, store, and register/register insns.
            (bswapdi2_ldbrx): Likewise.
            (bswapdi2_load): Likewise.
            (bswapdi2_store): Likewise.
            (bswapdi2_reg): Likewise.
    
    [gcc/testsuite]
    2017-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/78543
            * gcc.target/powerpc/pr78543.c: New test.
    
    From-SVN: r246509

commit fa5bc7314e6551839ab1e5bd6c112a1fb12eccec
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon Mar 27 15:02:21 2017 +0000

    Backport "Require effective target global_constructor for two testcases"
    
    2017-03-27  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2017-03-24  Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/80092
            * gcc.dg/tls/emutls-2.c:  Add dg-require-effective-target
            global_constructor.
    
    From-SVN: r246503

commit a60e292d78bc5300308443eca68f6c0d5cecca80
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 27 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r246488

commit bdc015b2a1d6c2870f6522273a7f1bc86d679327
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Mar 26 20:01:07 2017 +0000

    re PR fortran/79434 ([submodules] separate module procedure breaks encapsulation)
    
    2017-03-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/79434
            * parse.c (check_component, parse_union): Whitespace.
            (set_syms_host_assoc): For a derived type, check if the module
            in which it was declared is one of the submodule ancestors. If
            it is, make the components public. Otherwise, reset attribute
            'host_assoc' and set 'use-assoc' so that encapsulation is
            preserved.
    
    2017-03-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/79434
            * gfortran.dg/submodule_25.f08 : New test.
    
    From-SVN: r246486

commit 568eadc15fc97f06b4629339425afe0bbcbafc5b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 26 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246481

commit 77a6d0cc0db9b7c613d39ef39b9d09c15ed76d94
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat Mar 25 19:10:37 2017 +0100

    re PR target/80180 (Incorrect codegen from rdseed intrinsic use (CVE-2017-11671))
    
            PR target/80180
            * config/i386/i386.c (ix86_expand_builtin)
            <IX86_BUILTIN_RDSEED{16,32,64}_STEP>: Do not expand arg0 between
            flags reg setting and flags reg using instructions.
            <IX86_BUILTIN_RDRAND{16,32,64}_STEP>: Ditto.  Use non-flags reg
            clobbering instructions to zero extend op2.
    
    From-SVN: r246477

commit 88f4ace90b3fea9a45be2460f5d0b0f804e2b4bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 25 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r246471

commit 6aca7e25d2f6fef2ce4c5fd07eb105756bef96aa
Author: Tom de Vries <tom@codesourcery.com>
Date:   Fri Mar 24 06:46:05 2017 +0000

    Backport "Add missing dg-require-effective-target alloca in gcc testsuite"
    
    2017-03-24  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2017-03-24  Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/80092
            * gcc.dg/torture/pr71881.c: Add dg-require-effective-target alloca.
            * gcc.dg/torture/pr78742.c: Same.
    
    From-SVN: r246437

commit 918276aacae9862c96cf45eca2e6ad626a6c28f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r246430

commit 90dc39977c2ff752b6352ca803db5c1c9ba0784e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 23 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246412

commit b67a2000c4bc7f3f6308c5f6d4934e87bc2e87c8
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 15:32:56 2017 +0100

    Backport r246206
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-16  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * gcc.dg/tree-prof/pr66295.c: Skip unless on an x86 target.
    
    From-SVN: r246386

commit 75374aa2a162a42b113e1085b912904c2815cf97
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 15:32:42 2017 +0100

    Backport r246119
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            PR lto/66295
            * multiple_target.c (expand_target_clones): Drop local.local
            flag for default implementation.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            PR lto/66295
            * gcc.dg/tree-prof/pr66295.c: New test.
    
    From-SVN: r246385

commit 87a643c4fd753d34d9a0155d0fa1f15a66d85bdd
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 15:32:24 2017 +0100

    Backport r245647
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-22  Martin Liska  <mliska@suse.cz>
    
            PR lto/79587
            * data-streamer-in.c (streamer_read_gcov_count): Remove assert.
            * data-streamer-out.c (streamer_write_gcov_count_stream):
            Likewise.
            * value-prof.c (stream_out_histogram_value): Make assert more
            precise based on type of counter.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-22  Martin Liska  <mliska@suse.cz>
    
            PR lto/79587
            * gcc.dg/tree-prof/pr79587.c: New test.
    
    From-SVN: r246384

commit f33bf81f6ed31057e2fc0a25b8714ad729c2c44f
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 15:31:55 2017 +0100

    Backport r245155
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-03  Martin Liska  <mliska@suse.cz>
    
            PR lto/66295
            * multiple_target.c (create_dispatcher_calls): Redirect edge
            from a caller of a dispatcher.
            (expand_target_clones): Make the clones local.
            (ipa_target_clone): Do both target clones and resolvers.
            (ipa_dispatcher_calls): Remove the pass.
            (pass_dispatcher_calls::gate): Likewise.
            (make_pass_dispatcher_calls): Likewise.
            * passes.def (pass_target_clone): Put as very first IPA early
            pass.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-03  Martin Liska  <mliska@suse.cz>
    
            PR lto/66295
            * gcc.target/i386/mvc9.c: New test.
    
    From-SVN: r246383

commit 23829c5f89b89dd37f6b558eb0fb61b0e00c076c
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:49:49 2017 +0100

    Backport r246345
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-22  Martin Liska  <mliska@suse.cz>
    
            PR target/79906
            * config/rs6000/rs6000.c (rs6000_inner_target_options): Show
            error message instead of an ICE.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-22  Martin Liska  <mliska@suse.cz>
    
            PR target/79906
            * g++.dg/ext/mv8.C: Add power* targets.
    
    From-SVN: r246364

commit 856b44b75918c5f66fa667aa3045fde832b9f77d
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:49:24 2017 +0100

    Backport r246321
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-21  Martin Liska  <mliska@suse.cz>
    
            PR gcov-profile/80081
            * Makefile.in: Add gcov-dump and fix installation of gcov-tool.
            * doc/gcc.texi: Include gcov-dump stuff.
            * doc/gcov-dump.texi: New file.
    
    From-SVN: r246363

commit 57c7387f91d0f626085cf53879144174f98bd5f5
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:49:03 2017 +0100

    Backport r246316
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-21  Martin Liska  <mliska@suse.cz>
    
            * gcc.target/i386/pr65044.c: Add '.' in order to catch
            apostrophes.
    
    From-SVN: r246362

commit 30a4eb4e6c7d182688706e0bca7ba3b089e6bc05
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:47:52 2017 +0100

    Backport r246276
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79753
            * tree-chkp.c (chkp_build_returned_bound): Do not build
            returned bounds for a LHS that's not a BOUNDED_P type.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79753
            * gcc.target/i386/mpx/pr79753.c: New test.
    
    From-SVN: r246361

commit 9fd38534e9d9ef0e64a3e23c1e14e7385bb24793
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:47:26 2017 +0100

    Backport r246275
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR target/79769
            PR target/79770
            * tree-chkp.c (chkp_find_bounds_1): Handle REAL_CST,
            COMPLEX_CST and VECTOR_CST.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-20  Martin Liska  <mliska@suse.cz>
    
            PR target/79769
            PR target/79770
            * g++.dg/pr79769.C: New test.
            * gcc.target/i386/mpx/pr79770.c: New test.
    
    From-SVN: r246360

commit 753135fd0db98090bf9ceb3fbebe18897521daf8
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:47:06 2017 +0100

    Backport r246129
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/79831
            * doc/invoke.texi (-Wchkp): Document the option.
    
    From-SVN: r246359

commit 0bd65bbf8bea062cf93680c65a7853859c592a14
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:46:44 2017 +0100

    Backport r246120
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            PR target/79892
            * multiple_target.c (create_dispatcher_calls): Check that
            a target can create a function dispatcher.
    
    From-SVN: r246358

commit ab648bb376f4b6965ec1cd9d9bec5828e5e224e3
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:46:27 2017 +0100

    Backport r246098
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-13  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/78339
            * ipa-pure-const.c (warn_function_noreturn): If the declarations
            is a CHKP clone, use original declaration.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-13  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/78339
            * gcc.target/i386/mpx/pr78339.c: New test.
    
    From-SVN: r246357

commit 0e05ad122d5dd54b6f44751ce6b952aa9cf275aa
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:45:42 2017 +0100

    Backport r246027
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-10  Martin Liska  <mliska@suse.cz>
    
            PR target/65705
            PR target/69804
            * toplev.c (process_options): Enable MPX with LSAN and UBSAN.
            * tree-chkp.c (chkp_walk_pointer_assignments): Verify that
            FIELD != NULL.
    
    From-SVN: r246356

commit cb18ee9acd1d6852667efcb17bc15758127775e3
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:44:58 2017 +0100

    Backport r245998
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79631
            * tree-chkp-opt.c (chkp_is_constant_addr): Call
            tree_int_cst_sign_bit just for INTEGER constants.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79631
            * gcc.target/i386/mpx/pr79631.c: New test.
    
    From-SVN: r246355

commit 856871102ca945809c98eaacb2194f6dc3486ab6
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:43:59 2017 +0100

    Backport r245997
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR target/65705
            PR target/69804
            * toplev.c (process_options): Disable -fcheck-pointer-bounds with
            sanitizers.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR target/65705
            PR target/69804
            * gcc.target/i386/pr71458.c: Update scanned pattern.
    
    From-SVN: r246354

commit 59f9a9fc6e91195d842d9fbacd31fad13ad0fe18
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:43:31 2017 +0100

    Backport r245993
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79761
            * tree-chkp.c (chkp_get_bound_for_parm): Get bounds for a param.
            (chkp_find_bounds_1): Remove gcc_unreachable.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79761
            * g++.dg/pr79761.C: New test.
    
    From-SVN: r246353

commit a72310e7c1902e1043b1b405b41cbe4ccdd55dba
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:43:10 2017 +0100

    Backport r245992
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-09  Martin Liska  <mliska@suse.cz>
    
            * c-ada-spec.c (macro_length): Increment value instead of a pointer.
    
    From-SVN: r246352

commit fd77c7159be385ad5f8295020d148fee52dd1495
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:42:58 2017 +0100

    Backport r245870
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Jan Hubicka  <jh@suse.cz>
    
            PR lto/79760
            * ipa-devirt.c (maybe_record_node): Properly handle
            __cxa_pure_virtual visibility.
    
    From-SVN: r246351

commit 340ea1a4416be1853213d2cf9aa330067c2e83d2
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:42:33 2017 +0100

    Backport r245869
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79803
            * tree-ssa-loop-prefetch.c (tree_ssa_prefetch_arrays): Remove
            assert.
            (pass_loop_prefetch::execute): Disabled optimization if an
            assumption about L1 cache size is not met.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/79803
            * gcc.dg/tree-ssa/pr79803.c: New test.
    
    From-SVN: r246350

commit 8a831acf7a88219cdb288b3adf869cae40f3faef
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:41:18 2017 +0100

    Backport r245868
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcse.c (struct gcse_expr): Use HOST_WIDE_INT instead of int.
            (hash_scan_set): Likewise.
            (dump_hash_table): Likewise.
            (hoist_code): Likewise.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-03-03  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcc.dg/pr79574-2.c: New test.
    
    From-SVN: r246349

commit 39ee8e5430839aadc642b35a98c48ce137fb0d18
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:39:31 2017 +0100

    Backport r245531
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcse.c (want_to_gcse_p): Prevent integer overflow.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79574
            * gcc.dg/pr79574.c: New test.
    
    From-SVN: r246348

commit 4bee4360d58ac2a82d16eb2aa2767924d55c777a
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:38:15 2017 +0100

    Backport r245532
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-17  Martin Liska  <mliska@suse.cz>
    
            PR rtl-optimization/79577
            * params.def (selsched-max-sched-times): Increase minimum to 1.
    
    From-SVN: r246347

commit e59394f98e2980bad3a7386a687f50266ee19ec5
Author: Martin Liska <mliska@suse.cz>
Date:   Wed Mar 22 11:33:49 2017 +0100

    Backport r237353
    
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-06-13  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/71458
            * toplev.c (process_options): Do not enable -fcheck-pointer-bounds
            w/ -fsanitize=bounds.
    2017-03-22  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-06-13  Martin Liska  <mliska@suse.cz>
    
            PR sanitizer/71458
            * gcc.target/i386/pr71458.c: New test.
    
    From-SVN: r246346

commit 217b63eb02f60ee5355ca48b24525d359d2962ca
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 22 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246341

commit 3687bf36ad754282fd3f7b21a68caa8fadf45bdb
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue Mar 21 23:39:12 2017 +0000

    PR c++/79548 - missing -Wunused-variable on a typedef'd variable in a function template
    
    gcc/c-family/ChangeLog:
    
            PR c++/79548
            * c-common.c (set_underlying_type): Mark type used only when
            original del is declared unused.
    
    gcc/testsuite/ChangeLog:
    
            PR c++/79548
            * g++.dg/warn/Wunused-var-26.C: New test.
    
    From-SVN: r246336

commit f93b431c56d328c7498a67fffe29af6646543d56
Author: Nathan Sidwell <nathan@acm.org>
Date:   Tue Mar 21 17:40:40 2017 +0000

    re PR c++/80091 (gcc-6 branch segfaults while compiling firefox)
    
            PR c++/80091
            * lambda.c (maybe_generic_this_capture): Capture when fn
            is an identifier node.
    
    From-SVN: r246329

commit e20debb7310e741c595b215dbae06c49cdfe9b90
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Mar 21 16:32:46 2017 +0000

    re PR target/79951 (ICE in extract_insn, at recog.c:2311 on ppc64le with -mno-cmpb)
    
            PR target/79951
            * config/rs6000/rs6000.md (copysign<mode>3_fcpsgn): Test
            for VECTOR_UNIT_VSX_P (<MODE>mode) too.
            * gcc.target/powerpc/pr79951.c: New.
    
    From-SVN: r246327

commit 241db34c25a33450e36f745507325f4cb370a7d0
Author: Tamar Christina <tamar.christina@arm.com>
Date:   Tue Mar 21 09:14:05 2017 +0000

    [PATCH][GCC][AArch64] Fix incorrect INS in SIMD mov pattern
    
    2017-03-21  Tamar Christina  <tamar.christina@arm.com>
    
            * config/aarch64/aarch64-simd.md (*aarch64_simd_mov<mode>)
            Change ins into fmov.
    
    From-SVN: r246307

commit 1737f21abe51edb82609d220848405d67253d22e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 21 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246299

commit e0b472d207182341f19dd258b8e0e6cf54ce39d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 20 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246270

commit 18a325b10e233624f4c9948d7c3b658e78be0b13
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Mar 19 10:54:41 2017 +0100

    re PR target/71017 (libgcc/config/i386/cpuinfo.c:346:17: runtime error: left shift of 1 by 31 places cannot be represented in type 'int')
    
    2017-03-19  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR target/71017
            * config/i386/cpuid.h: Fix another undefined behavior.
    
    From-SVN: r246267

commit e86984baeeb7147fa557bc78eef38a9fac73ed4a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 19 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r246263

commit 80c17845935eebf9cad28d8fe22fb9e3007f235e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 18 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246251

commit b9d4381ea08d8c9b7d770725ddee7b3cbb873295
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Mar 17 19:28:29 2017 +0000

    Backport <codecvt> fixes from trunk
    
    Fix alignment bugs in std::codecvt_utf16
    
            * src/c++11/codecvt.cc (range): Add non-type template parameter and
            define oerloaded operators for reading and writing code units.
            (range<Elem, false>): Define partial specialization for accessing
            wide characters in potentially unaligned byte ranges.
            (ucs2_span(const char16_t*, const char16_t*, ...))
            (ucs4_span(const char16_t*, const char16_t*, ...)): Change parameters
            to range<const char16_t, false> in order to avoid unaligned reads.
            (__codecvt_utf16_base<char16_t>::do_out)
            (__codecvt_utf16_base<char32_t>::do_out)
            (__codecvt_utf16_base<wchar_t>::do_out): Use range specialization for
            unaligned data to avoid unaligned writes.
            (__codecvt_utf16_base<char16_t>::do_in)
            (__codecvt_utf16_base<char32_t>::do_in)
            (__codecvt_utf16_base<wchar_t>::do_in): Likewise for writes. Return
            error if there are unprocessable trailing bytes.
            (__codecvt_utf16_base<char16_t>::do_length)
            (__codecvt_utf16_base<char32_t>::do_length)
            (__codecvt_utf16_base<wchar_t>::do_length): Pass arguments of type
            range<const char16_t, false> to span functions.
            * testsuite/22_locale/codecvt/codecvt_utf16/misaligned.cc: New test.
    
    PR libstdc++/79980 fix target type of cast
    
            PR libstdc++/79980
            * src/c++11/codecvt.cc (to_integer(codecvt_mode)): Fix target type.
    
    PR libstdc++/80041 fix codecvt_utf16<wchar_t> to use UTF-16 not UTF-8
    
            PR libstdc++/80041
            * src/c++11/codecvt.cc (__codecvt_utf16_base<wchar_t>::do_out)
            (__codecvt_utf16_base<wchar_t>::do_in): Convert char arguments to
            char16_t to work with UTF-16 instead of UTF-8.
            * testsuite/22_locale/codecvt/codecvt_utf16/80041.cc: New test.
    
    Fix encoding() and max_length() values for codecvt facets
    
            * src/c++11/codecvt.cc (codecvt<char16_t, char, mbstate_t>)
            (codecvt<char32_t, char, mbstate_t>, __codecvt_utf8_base<char16_t>)
            (__codecvt_utf8_base<char32_t>, __codecvt_utf8_base<wchar_t>)
            (__codecvt_utf16_base<char16_t>, __codecvt_utf16_base<char32_t>)
            (__codecvt_utf16_base<wchar_t>, __codecvt_utf8_utf16_base<char16_t>)
            (__codecvt_utf8_utf16_base<char32_t>)
            (__codecvt_utf8_utf16_base<wchar_t>): Fix do_encoding() and
            do_max_length() return values.
            * testsuite/22_locale/codecvt/codecvt_utf16/members.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8/members.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/members.cc: New test.
    
    PR libstdc++/79980 fix BOM detection, maxcode checks, UCS2 handling
    
            PR libstdc++/79980
            * include/bits/locale_conv.h (__do_str_codecvt): Set __count on
            error path.
            * src/c++11/codecvt.cc (operator&=, operator|=, operator~): Overloads
            for manipulating codecvt_mode values.
            (read_utf16_bom): Compare input to BOM constants instead of integral
            constants that depend on endianness.  Take mode parameter by
            reference and adjust it, to distinguish between no BOM present and
            UTF-16BE BOM present.
            (ucs4_in, ucs2_span, ucs4_span): Adjust calls to read_utf16_bom.
            (surrogates): New enumeration type.
            (utf16_in, utf16_out): Add surrogates parameter to choose between
            UTF-16 and UCS2 behaviour.
            (utf16_span, ucs2_span): Use std::min not std::max.
            (ucs2_out): Use std::min not std::max.  Disallow surrogate pairs.
            (ucs2_in): Likewise. Adjust calls to read_utf16_bom.
            * testsuite/22_locale/codecvt/codecvt_utf16/79980.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8/79980.cc: New test.
    
    PR libstdc++/79511 fix endianness of UTF-16 data
    
            PR libstdc++/79511
            * src/c++11/codecvt.cc (write_utf16_code_point): Don't write 0xffff
            as a surrogate pair.
            (__codecvt_utf8_utf16_base<char32_t>::do_in): Use native endianness
            for internal representation.
            (__codecvt_utf8_utf16_base<wchar_t>::do_in): Likewise.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/79511.cc: New test.
    
    From-SVN: r246246

commit 5511b819c4590f3dac6d8c00fc4fbbda2dc35b45
Author: Tom de Vries <tom@codesourcery.com>
Date:   Fri Mar 17 12:31:49 2017 +0000

    Backport "Print bug url for gcov-dump --help"
    
    2017-03-17  Tom de Vries  <tom@codesourcery.com>
    
            * gcov-dump.c (print_usage): Print bug_report_url.
    
    From-SVN: r246220

commit 3caf5492d03d16293dbf54ead9225eed4c32bf40
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 17 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r246215

commit 5b2471ae4f2e34ff9162416186e721139f34cf65
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Mar 16 08:07:29 2017 +0000

    backport: re PR middle-end/79732 (ICE in set_ssa_default_def, at tree-dfa.c:327)
    
    2017-03-16  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-02-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79732
            * tree-inline.c (expand_call_inline): Handle anonymous
            SSA lhs properly when inlining a function without return
            value.
    
            * gcc.dg/torture/pr79732.c: New testcase.
    
    From-SVN: r246188

commit a09d382c05d692387e9431182c899d737568cbf8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 16 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246184

commit d752d82d3c05c076b488d1e60a8243d99a562084
Author: Matthias Klose <doko@ubuntu.com>
Date:   Wed Mar 15 20:52:43 2017 +0000

    backport: Makefile.in: Install gcov-dump.
    
    2017-03-15  Matthias Klose  <doko@ubuntu.com>
    
            Backport from mainline
            2017-03-14  Martin Liska  <mliska@suse.cz>
    
            * Makefile.in: Install gcov-dump.
    
    From-SVN: r246175

commit 25c3743853a3f781628b55670057155fc01c63e0
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Mar 15 16:27:28 2017 +0100

    re PR target/80019 (ICE in ix86_vector_duplicate_value, at config/i386/i386.c:42584)
    
            PR target/80019
            * config/i386/i386.c (ix86_vector_duplicate_value): Create
            subreg of inner mode for values already in registers.
    
    testsuite/ChangeLog:
    
            PR target/80019
            * gcc.target/i386/pr80019.c: New test.
    
    From-SVN: r246166

commit 36c377717adad3ceb7eab2e98709084d79aa035b
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Mar 15 10:22:19 2017 +0000

    re PR c++/72775 (internal compiler error: in finish_expr_stmt, at cp/semantics.c:677)
    
            PR c++/72775
            * init.c (perform_member_init): Diagnose member initializer for
            flexible array member.
    
            * g++.dg/ext/flexary12.C: Adjust dg-error.
            * g++.dg/ext/flexary20.C: New.
            * g++.dg/ext/flexary21.C: New.
    
    From-SVN: r246155

commit 1527bacf37630df79f52acf2a849c527a4a37ee2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 15 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r246148

commit 028ac166d6c10f7e18e522e049b68f6a3d7d218c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Mar 14 20:48:31 2017 +0000

    Fix libstdc++ reserved names test to pass on AIX
    
            * testsuite/17_intro/names.cc: Undefine macros that clash with
            identifiers in AIX system headers.
    
    From-SVN: r246142

commit d06f8f52c2d8debe60626999e4d986dd42b58fe9
Author: Marek Polacek <mpolacek@gcc.gnu.org>
Date:   Tue Mar 14 16:11:23 2017 +0000

    * g++.dg/warn/Wpadded-1.C: Fix for 32-bit target.
    
    From-SVN: r246135

commit 6eb54767648e01308f509f68b0de33354f2a5c0b
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 14 16:03:10 2017 +0000

    re PR c++/79264 (ICE verify_type failed)
    
            PR c++/79264
            * lambda.c (maybe_generic_this_capture): Deal with template-id-exprs.
            * semantics.c (finish_member_declaration): Assert class is being
            defined.
    
            * g++.dg/cpp1y/pr61636-1.C: Augment.
    
            PR c++/61636
            * cp-tree.h (maybe_generic_this_capture): Declare.
            * lambda.c (resolvable_dummy_lambda): New, broken out of ...
            (maybe_resolve_dummy): ... here.  Call it.
            (maybe_generic_this_capture): New.
            * parser.c (cp_parser_postfix_expression): Speculatively capture
            this in generic lambda in unresolved member function call.
            * pt.c (tsubst_copy_and_build): Force hard error from failed
            member function lookup in generic lambda.
    
            * g++.dg/cpp1y/pr61636-1.C: New.
            * g++.dg/cpp1y/pr61636-2.C: New.
            * g++.dg/cpp1y/pr61636-3.C: New.
    
    From-SVN: r246134

commit e8f166d4e7fd6be637b9a5c3e40bc9d7b60724b3
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 14 15:58:39 2017 +0000

    re PR c++/79687 (Wrong code with pointer-to-member)
    
            PR c++/79687
            * init.c (constant_value_1): Break if the variable has a dynamic
            initializer.
    
            * g++.dg/expr/ptrmem8.C: New test.
            * g++.dg/expr/ptrmem9.C: New test.
    
    From-SVN: r246133

commit 2b5549af5f1113b7c6395be04f444864c28eb79e
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 14 15:55:53 2017 +0000

    PR c++/79900 - ICE in strip_typedefs
    
            PR c++/79900 - ICE in strip_typedefs
            * tree.c (strip_typedefs): Skip the attribute handling if T is
            a variant type which hasn't been updated yet.
    
            * g++.dg/warn/Wpadded-1.C: New test.
    
    From-SVN: r246132

commit 7b2b118add5d52e2654145883aafa88e558bd607
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 14 15:53:23 2017 +0000

    re PR c++/79962 (ICE nonnull_check_p on a function template with a type-dependent attribute nonnull)
    
            PR c++/79962
            PR c++/79984
            * c-common.c (handle_nonnull_attribute): Save the result of default
            conversion to the attribute list.
    
            * c-c++-common/nonnull-3.c: New test.
            * g++.dg/warn/Wnonnull3.C: New test.
    
    From-SVN: r246131

commit c86135dec7521ca3a877fa455b449dd8aa068a9c
Author: Aaron Sawdey <acsawdey@linux.vnet.ibm.com>
Date:   Tue Mar 14 14:43:03 2017 +0000

    This showed up in power9 code for __divkf3 software float support and caused a...
    
    This showed up in power9 code for __divkf3 software float support and
    caused a divd to be emitted where we needed a divdu.
    
    Index: gcc/config/rs6000/rs6000.md
    ===================================================================
    --- gcc/config/rs6000/rs6000.md (revision 246123)
    +++ gcc/config/rs6000/rs6000.md (working copy)
    @@ -3063,8 +3063,8 @@
        && ! reg_mentioned_p (operands[3], operands[1])
        && ! reg_mentioned_p (operands[3], operands[2])"
       [(set (match_dup 0)
    -       (div:GPR (match_dup 1)
    -                (match_dup 2)))
    +       (udiv:GPR (match_dup 1)
    +                 (match_dup 2)))
        (set (match_dup 3)
            (mult:GPR (match_dup 0)
                      (match_dup 2)))
    
    2017-03-14  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-02-28  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>
    
            PR target/79752
            * config/rs6000/rs6000.md (peephole2 for udiv/umod): Should emit
            udiv rather than div since input pattern is unsigned.
    
    From-SVN: r246127

commit a944f18380428d7ff371128a653d10ba284f0e0c
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Mar 14 12:57:08 2017 +0000

    Backport PRs 49244, 79576, 79666, 79756, 79894, 79971, 79977, 80004
    
    2017-03-14  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-05-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/80004
            PR target/49244
            * gimple.c (gimple_builtin_call_types_compatible_p): Allow
            char/short arguments promoted to int because of promote_prototypes.
    
            2017-03-09  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79977
            * graphite-scop-detection.c (scop_detection::merge_sese):
            Handle the case of extra exits to blocks dominating the entry.
    
            * gcc.dg/graphite/pr79977.c: New testcase.
    
            2017-03-09  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/79971
            * gimple-expr.c (useless_type_conversion_p): Preserve
            TYPE_SATURATING for fixed-point types.
    
            * gcc.dg/fixed-point/pr79971.c: New testcase.
    
            2017-03-06  Richard Biener  <rguenther@suse.de>
    
            PR fortran/79894
            * trans.c (gfc_add_modify_loc): Weaken assert.
    
            2017-03-02  Richard Biener  <rguenther@suse.de>
    
            PR c/79756
            * c-common.c (c_common_mark_addressable_vec): Look through
            C_MAYBE_CONST_EXPR.
    
            * gcc.dg/vector-1.c: New testcase.
    
            2017-02-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79666
            * tree-vrp.c (extract_range_from_binary_expr_1): Make sure
            to not symbolically negate if that may introduce undefined
            overflow.
    
            * gcc.dg/torture/pr79666.c: New testcase.
    
            2017-02-17  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/79576
            * params.def (max-ssa-name-query-depth): Limit to 10.
    
    From-SVN: r246122

commit f760558af73858a3d1c3e584e03a3387545fefa6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 14 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246114

commit 7b4e4c5a9b868955f4888110fea970b1eba99856
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Mar 13 21:43:27 2017 +0200

    re PR libstdc++/80034 (unqualified calls to std::distance in std::list::sort)
    
    PR libstdc++/80034
    * include/bits/list.tcc (merge(list&&)): Use const for the size_t
    in the function and in the catch-block, qualify uses of std::distance.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/80034.cc: New.
    
    From-SVN: r246108

commit b5eeb9291839c6b113647f377143cded99ef8820
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 13 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r246081

commit 3ab85ebe7da3cc6cf82eb639038ad61f5d75dd9c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 12 00:16:18 2017 +0000

    Daily bump.
    
    From-SVN: r246074

commit 23c58631fd15db3dc993c6ca3f5a19177f7af9de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 11 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r246061

commit aa0e30557832c0d289cf88baeb73620536dd7f54
Author: George Lander <george.lander@arm.com>
Date:   Fri Mar 10 12:24:45 2017 +0000

    [libstdc++-v3] Fix detection of obsolete isnan
    
    libstdc++-v3 configure checks whether old glibc inline definitions
    of isnan would conflict with the libstdc++-v3 definitions and
    works around them if so.  But if g++ 6.x build A is used to build
    another g++ 6.x B, the configure step for B will pick up the math.h
    installed alongside A instead of the glibc version.  configure will
    then assume that the workaround isn't necessary, leaving B with a
    broken cmath.
    
    isinf already worked around this.  This patch extends the same fix
    to isnan.  (Thanks to George for the fix.)
    
    libstdc++-v3/
    2017-03-10  George Lander  <george.lander@arm.com>
    
            * acinclude.m4 (glibcxx_cv_obsolete_isnan): Define
            _GLIBCXX_INCLUDE_NEXT_C_HEADERS before including math.h.
            * configure: Regenerate.
    
    From-SVN: r246026

commit 1494bca098f7231fdbc3042e6a476b1a80aa166b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 10 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r246018

commit 92bece30cd6ccea7a16bb0d4d5c35b45152bac57
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 9 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245984

commit a6808722272a379086c6b5f9cb2958b6a548a717
Author: Thanassis Tsiodras <ttsiodras@gmail.com>
Date:   Wed Mar 8 09:20:35 2017 +0000

    re PR ada/79903 (When building GCC-cross compiler for  RTEMS/SPARC with Ada support, the build fails because of missing #ifdef)
    
            PR ada/79903
            * socket.c (__gnat_gethostbyaddr): Add missing test for __rtems__.
    
    From-SVN: r245973

commit 9913265510998a3614e20202e7433b164a54559d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Mar 8 09:09:11 2017 +0000

    re PR ada/79945 (ppc64le Default_Bit_Order in Ada)
    
            PR ada/79945
            * system-linux-ppc.ads (Default_Bit_Order): Use Standard's setting.
    
    From-SVN: r245971

commit d5d1b8ca8887244620f602ff5934e8865e3d42dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 8 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245965

commit 643509d73896517d82fb6456593b00030d1b7e4d
Author: Marek Polacek <polacek@redhat.com>
Date:   Tue Mar 7 17:42:30 2017 +0000

    PR c++/79796 - ICE with NSDMI and this pointer
    
            PR c++/79796 - ICE with NSDMI and this pointer
            * call.c (build_over_call): Handle NSDMI with a 'this' by calling
            replace_placeholders.
    
            * g++.dg/cpp0x/nsdmi13.C: New test.
    
    From-SVN: r245957

commit d9363c4e3940bf089619061e4ba180d6a27d5641
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Mar 7 18:31:22 2017 +0100

    backport: i386.c (ix86_local_alignment): Align most aggregates of 16 bytes and more to 16 bytes...
    
            Backport from mainline
            2017-03-07  Segher Boessenkool  <segher@kernel.crashing.org>
    
            * config/i386/i386.c (ix86_local_alignment): Align most aggregates
            of 16 bytes and more to 16 bytes, not those of 16 bits and more.
    
    From-SVN: r245956

commit 95a675c83ebce5153827ee08aab3c6245e659bf8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Mar 7 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245942

commit d3ac50b9845a7bb399d19aafb89870b7ce56c4c6
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Mar 6 23:11:26 2017 +0000

    Fix typo.
    
    From-SVN: r245936

commit 2db94adc30feefe7b80a2f47a849ca9f57e30088
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Mon Mar 6 22:52:46 2017 +0000

    PR target 77850
    
            PR target 77850
            * config/pa/pa-64.h (PAD_VARARGS_DOWN): Don't pad down complex and
            vector types.
    
    From-SVN: r245933

commit 16fd6880a14ffa1a1c27d10b85a9c1d8630931e0
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Mar 6 22:47:03 2017 +0000

    backport: re PR target/79439 (Missing nop instruction after recursive call corrupts TOC register)
    
    [gcc]
    2017-03-06  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79439
            * config/rs6000/predicates.md (current_file_function_operand): Do
            not allow self calls to be local if the function is replaceable.
    
    [gcc/testsuite]
    2017-03-06  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2017-03-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/79439
            * gcc.target/powerpc/pr79439.c: New test.
    
    From-SVN: r245930

commit 3624cc17dc122031195dd6a15cf17066f43d12f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Mar 6 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r245906

commit 595f3288e8d3cd2042bd12488a78bae0bd587ae7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Mar 5 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245896

commit fef76555b9a3aa343621c217e99e690057db0931
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Mar 4 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r245889

commit 21227f7ac856fb0de44a7db715900597fcbc8222
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Fri Mar 3 10:34:14 2017 +0100

    i386.md (*pushxf_rounded): Use Pmode instead of DImode.
    
            * config/i386/i386.md (*pushxf_rounded): Use Pmode instead of DImode.
    
    From-SVN: r245862

commit 6d04a7cea32d566b5a48f91272f50940d3090148
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Mar 3 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r245856

commit 84f5bc4a9c18f907c880abb31ab802eaa2326673
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Mar 2 21:42:33 2017 +0100

    re PR target/79514 (ICE in curr_insn_transform, at lra-constraints.c:3773)
    
            PR target/79514
            * config/i386/i386.md (*pushxf_rounded): New insn_and_split pattern.
    
    testsuite/ChangeLog:
    
            PR target/79514
            * gcc.target/i386/pr79514.c: New test.
    
    From-SVN: r245851

commit a1f430942161ea3bbdb895d2cff601de4f76ff74
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Mar 2 18:58:07 2017 +0000

    PR libstdc++/79789 fix non-reserved names in headers
    
            PR libstdc++/79789
            * include/bits/ios_base.h (make_error_code, make_error_condition):
            Likewise.
            * include/bits/mask_array.h (mask_array): Likewise.
            * include/bits/regex.h (regex_token_iterator): Likewise.
            * include/bits/slice_array.h (slice_array): Likewise.
            * include/std/memory (undeclare_no_pointers): Likewise.
            * testsuite/17_intro/names.cc: New test.
    
    From-SVN: r245846

commit 40f2830b019c3f24b714b62c19b4030331862e94
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Mar 2 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245824

commit f2e524ae8f85bafc4612de2384913b5c1786df64
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Wed Mar 1 21:18:18 2017 +0000

    re PR target/79544 (vec_sra (unsigned long long,foo) generating vsrd instead of vsrad)
    
            PR target/79544
            * rs6000/rs6000-c.c (struct altivec_builtin_types): Use VSRAD for
            arithmetic shift of unsigned V2DI.
    
            * gcc.target/powerpc/pr79544.c: New.
    
    From-SVN: r245819

commit 2db55784a95c9955587c0fd913d37a082bda9717
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Mar 1 14:53:33 2017 +0100

    [PR 79579] Avoid segfault on NULL ipa_edge_args_vector
    
    2017-03-01  Martin Jambor  <mjambor@suse.cz>
    
            Backport from mainline
            2017-02-21  Martin Jambor  <mjambor@suse.cz>
    
            PR lto/79579
            * ipa-prop.c (ipa_prop_write_jump_functions): Bail out if no edges
            have been analyzed.
    
    From-SVN: r245809

commit 0b75ff0cf2b6eef6cb4b34b6f636f4affdebda79
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Mar 1 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245798

commit ace2143bd27c56709ec1224545041aee1c0b27cd
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Feb 28 22:18:59 2017 +0000

    re PR target/79749 (Many sparc testcases FAIL at -O0 with -fomit-frame-pointer)
    
            PR target/79749
            * config/sparc/sparc.c (sparc_frame_pointer_required): Add missing
            condition on optimize for the leaf function test.
    
    From-SVN: r245792

commit 8e07b8ec4216e315e9ac6b89e4cc5cefe97d7c1f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 28 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245766

commit 271300a660410761d7fd6cbbec479c9fdc6bd736
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 27 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r245749

commit 10589f34445b5e60d43a92aada984ed79e551af8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 26 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r245743

commit c412f02780a4a7ceec98f855d391ac3b30f4957f
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sat Feb 25 11:36:45 2017 +0000

    re PR fortran/78474 ([F08] gfortran accepts invalid submodule syntax)
    
    2017-02-25  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78474
            * module.c (gfc_match_submodule): If there is more than one
            colon, it is a syntax error.
    
            PR fortran/78331
            * module.c (gfc_use_module): If an smod file does not exist it
            is either because the module does not have a module procedure
            interface or there is an error in the module.
    
    2017-02-25  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78474
            * gfortran.dg/submodule_22.f08: New test.
    
            PR fortran/78331
            * gfortran.dg/submodule_21.f08: New test.
    
    From-SVN: r245737

commit cd99511340358002f1178c943821b6f841935adf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 25 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r245731

commit e9ec85ed5a351ccf7089db4dbd33809fb5d4d772
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 11:03:17 2017 +0000

    decl.c (gnat_to_gnu_field): Do not remove the wrapper around a justified modular type if...
    
            * gcc-interface/decl.c (gnat_to_gnu_field): Do not remove the wrapper
            around a justified modular type if it doesn't have the same scalar
            storage order as the enclosing record type.
    
    From-SVN: r245712

commit fd98bd11b83c956c7f00ba15a6fe74d2193b608a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 10:54:09 2017 +0000

    trans.c (gnat_to_gnu): Do not apply special handling of boolean rvalues to function calls.
    
            * gcc-interface/trans.c (gnat_to_gnu): Do not apply special handling
            of boolean rvalues to function calls.
    
    From-SVN: r245707

commit eb4e6db2e97f68400c03b0289a4139e709136c38
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 10:49:05 2017 +0000

    utils.c (fold_bit_position): New function.
    
            * gcc-interface/utils.c (fold_bit_position): New function.
            (rest_of_record_type_compilation): Call it instead of bit_position to
            compute the field position and remove the call to remove_conversions.
            (compute_related_constant): Factor out the multiplication in both
            operands, if any, and streamline the final test.
    
    From-SVN: r245705

commit c840f801360ab84cf90d70d274475f2f3281f89a
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Feb 24 10:37:45 2017 +0000

    * gcc-interface/trans.c (return_value_ok_for_nrv_p): Add sanity check.
    
    From-SVN: r245702

commit 48d92aea2a69aca7de76b08cc95acf43df6f74dd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 24 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r245694

commit 10ba57230f5d91a8bced76561af4a5f815b935f0
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Feb 23 19:29:40 2017 +0000

    re PR target/79268 (Wrong code generation for vec_xl and vec_xst intrinsics)
    
    2017-02-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79268
            * gcc.target/powerpc/pr79268.c: Enable for BE targets also.
    
    From-SVN: r245687

commit 59ef092fe9c30218c04598aab80aa5311a37e371
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 23 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r245670

commit dcea71518fdf224572ffb7d0b7b2971a1217da0e
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Feb 22 22:52:36 2017 +0000

    backport: re PR target/79261 (vec_xxpermdi appears to have endian issues)
    
    [gcc]
    
    2017-02-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79261
            * config/rs6000/rs6000.c (rs6000_expand_ternop_builtin): Add
            support for CODE_FOR_vsx_xxpermdi_v2d[fi]_be.
            * config/rs6000/rs6000.md (reload_gpr_from_vsx<mode>): Call
            generator for vsx_xxpermdi_<mode>_be.
            * config/rs6000/vsx.md (vsx_xxpermdi_<mode>): Remove logic to
            force big-endian semantics.
            (vsx_xxpermdi_<mode>_be): New define_expand with same
            implementation as previous version of vsx_xxpermdi_<mode>.
    
    [gcc/testsuite]
    
    2017-02-22  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-02-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79261
            * gcc.target/powerpc/vec-xxpermdi.c: New file.
    
    From-SVN: r245663

commit c754aab9775eef51fd0269369809e9fcb6171b72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 22 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r245645

commit 59ed9cc89cb2ba4d10614d41e9bf43c5900f4b3b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 21 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245617

commit a581d5f8f49abe0533d685b7485ca759e33212b9
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Feb 20 17:38:57 2017 +0000

    re PR sanitizer/79558 (ICE: Segfault in ubsan_type_descriptor, at ubsan.c:412)
    
            PR sanitizer/79558
            * ubsan.c (ubsan_type_descriptor): Check if TYPE_MAX_VALUE is null.
    
            * c-c++-common/ubsan/bounds-14.c: New test.
    
    From-SVN: r245611

commit 0f452736289b497d48bbd414f91999d9ec997276
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Feb 20 17:37:20 2017 +0000

    re PR middle-end/79537 (ICE in gimplify_expr, at gimplify.c:12009)
    
            PR middle-end/79537
            * gimplify.c (gimplify_expr): Handle unused *&&L;.
    
            * gcc.dg/comp-goto-4.c: New.
    
    From-SVN: r245610

commit 5925809bcb7e4b393dfe6278caa42e4dc7be6584
Author: Marek Polacek <polacek@redhat.com>
Date:   Mon Feb 20 17:35:21 2017 +0000

    re PR middle-end/79536 (ICE in fold_binary_loc, at fold-const.c:9060)
    
            PR middle-end/79536
            * fold-const.c (fold_negate_expr_1): Renamed from fold_negate_expr.
            (fold_negate_expr): New wrapper.
    
            * gcc.dg/torture/pr79536.c: New test.
    
    From-SVN: r245609

commit a3a0a4f3d6274b2ced0f1f6c6f8c4d6feb03f201
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 20 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r245584

commit e5da3c96dab398e568754644a0ae9319cc2ad76a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 19 00:16:19 2017 +0000

    Daily bump.
    
    From-SVN: r245568

commit a46840e641c7f4b12451788d7e639055d75a61a0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 18 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r245557

commit 9357e6be5842cbb42b1dc5ce6b9e134f8ad41794
Author: Carl Love <cel@us.ibm.com>
Date:   Fri Feb 17 21:04:49 2017 +0000

    backport: re PR target/79545 (gcc[5/6]: RS6000, xvcvuxdsp and xvcvsxdsp RTL defines have wrong type)
    
    gcc/ChangeLog:
    
    2017-02-17  Carl Love  <cel@us.ibm.com>
    
       Backport from mainline commit r245460 on 2017-02-14
    
       PR 79545
       * config/rs6000/rs6000.c: Add case statement entry to make the xvcvuxdsp
       built-in argument unsigned.
       * config/rs6000/vsx.md: Fix the source and return operand types so they
       match the instruction definitions from the ISA document.  Fix typo
       in the instruction generation for the (define_insn "vsx_xvcvuxdsp"
       statement.
    
    gcc/testsuite/ChangeLog:
    
    2017-01-17  Carl Love  <cel@us.ibm.com>
    
       Backport from mainline commit r245460 on 2017-02-14
    
       PR 79545
       * gcc.target/powerpc/vsx-builtin-3.c: Add missing test case for the
       xvcvsxdsp and xvcvuxdsp instructions.
    
    From-SVN: r245552

commit 38b613375ef6d57acaf84e83728f24025588168d
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Fri Feb 17 20:21:39 2017 +0100

    backport: re PR sanitizer/79562 (sanitizer breaks bootstrap of x86_64-*-freebsd)
    
    2017-02-17  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backported from mainline
        2017-02-16  Andreas Tobler  <andreast@gcc.gnu.org>
    
        PR sanitizer/79562
        * sanitizer_common/sanitizer_platform_limits_posix.cc: Cherry-pick
        upstream r294806.
    
    From-SVN: r245546

commit 611f7ca81879a6fa8e3b1262ce0025746fe3fc42
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 17 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r245523

commit 1992881bde049433d2585b3fe6f25b80420cd296
Author: Julia Koval <julia.koval@intel.com>
Date:   Thu Feb 16 17:41:36 2017 +0100

    re PR target/76731 ([AVX512] _mm512_i32gather_epi32 and other scatter/gather routines have incorrect signature)
    
            PR target/76731
            * config/i386/avx512fintrin.h
            (_mm512_i32gather_ps): Change __addr type to void const*.
            (_mm512_mask_i32gather_ps): Ditto.
            (_mm512_i32gather_pd): Ditto.
            (_mm512_mask_i32gather_pd): Ditto.
            (_mm512_i64gather_ps): Ditto.
            (_mm512_mask_i64gather_ps): Ditto.
            (_mm512_i64gather_pd): Ditto.
            (_mm512_mask_i64gather_pd): Ditto.
            (_mm512_i32gather_epi32): Ditto.
            (_mm512_mask_i32gather_epi32): Ditto.
            (_mm512_i32gather_epi64): Ditto.
            (_mm512_mask_i32gather_epi64): Ditto.
            (_mm512_i64gather_epi32): Ditto.
            (_mm512_mask_i64gather_epi32): Ditto.
            (_mm512_i64gather_epi64): Ditto.
            (_mm512_mask_i64gather_epi64): Ditto.
            (_mm512_i32scatter_ps): Change __addr type to void*.
            (_mm512_mask_i32scatter_ps): Ditto.
            (_mm512_i32scatter_pd): Ditto.
            (_mm512_mask_i32scatter_pd): Ditto.
            (_mm512_i64scatter_ps): Ditto.
            (_mm512_mask_i64scatter_ps): Ditto.
            (_mm512_i64scatter_pd): Ditto.
            (_mm512_mask_i64scatter_pd): Ditto.
            (_mm512_i32scatter_epi32): Ditto.
            (_mm512_mask_i32scatter_epi32): Ditto.
            (_mm512_i32scatter_epi64): Ditto.
            (_mm512_mask_i32scatter_epi64): Ditto.
            (_mm512_i64scatter_epi32): Ditto.
            (_mm512_mask_i64scatter_epi32): Ditto.
            (_mm512_i64scatter_epi64): Ditto.
            (_mm512_mask_i64scatter_epi64): Ditto.
            * config/i386/avx512pfintrin.h
            (_mm512_mask_prefetch_i32gather_pd): Change addr type to void const*.
            (_mm512_mask_prefetch_i32gather_ps): Ditto.
            (_mm512_mask_prefetch_i64gather_pd): Ditto.
            (_mm512_mask_prefetch_i64gather_ps): Ditto.
            (_mm512_prefetch_i32scatter_pd): Change addr type to void*.
            (_mm512_prefetch_i32scatter_ps): Ditto.
            (_mm512_mask_prefetch_i32scatter_pd): Ditto.
            (_mm512_mask_prefetch_i32scatter_ps): Ditto.
            (_mm512_prefetch_i64scatter_pd): Ditto.
            (_mm512_prefetch_i64scatter_ps): Ditto.
            (_mm512_mask_prefetch_i64scatter_pd): Ditto.
            (_mm512_mask_prefetch_i64scatter_ps): Ditto.
            * config/i386/avx512vlintrin.h
            (_mm256_mmask_i32gather_ps): Change __addr type to void const*.
            (_mm_mmask_i32gather_ps): Ditto.
            (_mm256_mmask_i32gather_pd): Ditto.
            (_mm_mmask_i32gather_pd): Ditto.
            (_mm256_mmask_i64gather_ps): Ditto.
            (_mm_mmask_i64gather_ps): Ditto.
            (_mm256_mmask_i64gather_pd): Ditto.
            (_mm_mmask_i64gather_pd): Ditto.
            (_mm256_mmask_i32gather_epi32): Ditto.
            (_mm_mmask_i32gather_epi32): Ditto.
            (_mm256_mmask_i32gather_epi64): Ditto.
            (_mm_mmask_i32gather_epi64): Ditto.
            (_mm256_mmask_i64gather_epi32): Ditto.
            (_mm_mmask_i64gather_epi32): Ditto.
            (_mm256_mmask_i64gather_epi64): Ditto.
            (_mm_mmask_i64gather_epi64): Ditto.
            (_mm256_i32scatter_ps): Change __addr type to void*.
            (_mm256_mask_i32scatter_ps): Ditto.
            (_mm_i32scatter_ps): Ditto.
            (_mm_mask_i32scatter_ps): Ditto.
            (_mm256_i32scatter_pd): Ditto.
            (_mm256_mask_i32scatter_pd): Ditto.
            (_mm_i32scatter_pd): Ditto.
            (_mm_mask_i32scatter_pd): Ditto.
            (_mm256_i64scatter_ps): Ditto.
            (_mm256_mask_i64scatter_ps): Ditto.
            (_mm_i64scatter_ps): Ditto.
            (_mm_mask_i64scatter_ps): Ditto.
            (_mm256_i64scatter_pd): Ditto.
            (_mm256_mask_i64scatter_pd): Ditto.
            (_mm_i64scatter_pd): Ditto.
            (_mm_mask_i64scatter_pd): Ditto.
            (_mm256_i32scatter_epi32): Ditto.
            (_mm256_mask_i32scatter_epi32): Ditto.
            (_mm_i32scatter_epi32): Ditto.
            (_mm_mask_i32scatter_epi32): Ditto.
            (_mm256_i32scatter_epi64): Ditto.
            (_mm256_mask_i32scatter_epi64): Ditto.
            (_mm_i32scatter_epi64): Ditto.
            (_mm_mask_i32scatter_epi64): Ditto.
            (_mm256_i64scatter_epi32): Ditto.
            (_mm256_mask_i64scatter_epi32): Ditto.
            (_mm_i64scatter_epi32): Ditto.
            (_mm_mask_i64scatter_epi32): Ditto.
            (_mm256_i64scatter_epi64): Ditto.
            (_mm256_mask_i64scatter_epi64): Ditto.
            (_mm_i64scatter_epi64): Ditto.
            (_mm_mask_i64scatter_epi64): Ditto.
            * config/i386/i386-builtin-types.def (V16SF_V16SF_PCFLOAT_V16SI_HI_INT)
            (V8DF_V8DF_PCDOUBLE_V8SI_QI_INT, V8SF_V8SF_PCFLOAT_V8DI_QI_INT)
            (V8DF_V8DF_PCDOUBLE_V8DI_QI_INT, V16SI_V16SI_PCINT_V16SI_HI_INT)
            (V8DI_V8DI_PCINT64_V8SI_QI_INT, V8SI_V8SI_PCINT_V8DI_QI_INT)
            (V8DI_V8DI_PCINT64_V8DI_QI_INT, V2DF_V2DF_PCDOUBLE_V4SI_QI_INT)
            (V4DF_V4DF_PCDOUBLE_V4SI_QI_INT, V2DF_V2DF_PCDOUBLE_V2DI_QI_INT)
            (V4DF_V4DF_PCDOUBLE_V4DI_QI_INT, V4SF_V4SF_PCFLOAT_V4SI_QI_INT)
            (V8SF_V8SF_PCFLOAT_V8SI_QI_INT, V4SF_V4SF_PCFLOAT_V2DI_QI_INT)
            (V4SF_V4SF_PCFLOAT_V4DI_QI_INT, V2DI_V2DI_PCINT64_V4SI_QI_INT)
            (V4DI_V4DI_PCINT64_V4SI_QI_INT, V2DI_V2DI_PCINT64_V2DI_QI_INT)
            (V4DI_V4DI_PCINT64_V4DI_QI_INT, V4SI_V4SI_PCINT_V4SI_QI_INT)
            (V8SI_V8SI_PCINT_V8SI_QI_INT, V4SI_V4SI_PCINT_V2DI_QI_INT)
            (V4SI_V4SI_PCINT_V4DI_QI_INT, VOID_PFLOAT_HI_V16SI_V16SF_INT)
            (VOID_PFLOAT_QI_V8SI_V8SF_INT, VOID_PFLOAT_QI_V4SI_V4SF_INT)
            (VOID_PDOUBLE_QI_V8SI_V8DF_INT, VOID_PDOUBLE_QI_V4SI_V4DF_INT)
            (VOID_PDOUBLE_QI_V4SI_V2DF_INT, VOID_PFLOAT_QI_V8DI_V8SF_INT)
            (VOID_PFLOAT_QI_V4DI_V4SF_INT, VOID_PFLOAT_QI_V2DI_V4SF_INT)
            (VOID_PDOUBLE_QI_V8DI_V8DF_INT, VOID_PDOUBLE_QI_V4DI_V4DF_INT)
            (VOID_PDOUBLE_QI_V2DI_V2DF_INT, VOID_PINT_HI_V16SI_V16SI_INT)
            (VOID_PINT_QI_V8SI_V8SI_INT, VOID_PINT_QI_V4SI_V4SI_INT)
            (VOID_PLONGLONG_QI_V8SI_V8DI_INT, VOID_PLONGLONG_QI_V4SI_V4DI_INT)
            (VOID_PLONGLONG_QI_V4SI_V2DI_INT, VOID_PINT_QI_V8DI_V8SI_INT)
            (VOID_PINT_QI_V4DI_V4SI_INT, VOID_PINT_QI_V2DI_V4SI_INT)
            (VOID_PLONGLONG_QI_V8DI_V8DI_INT, VOID_QI_V8SI_PCINT64_INT_INT)
            (VOID_PLONGLONG_QI_V4DI_V4DI_INT, VOID_PLONGLONG_QI_V2DI_V2DI_INT)
            (VOID_HI_V16SI_PCINT_INT_INT, VOID_QI_V8DI_PCINT64_INT_INT)
            (VOID_QI_V8DI_PCINT_INT_INT): Remove.
            (V16SF_V16SF_PCVOID_V16SI_HI_INT,  V8DF_V8DF_PCVOID_V8SI_QI_INT)
            (V8SF_V8SF_PCVOID_V8DI_QI_INT, V8DF_V8DF_PCVOID_V8DI_QI_INT)
            (V16SI_V16SI_PCVOID_V16SI_HI_INT, V8DI_V8DI_PCVOID_V8SI_QI_INT)
            (V8SI_V8SI_PCVOID_V8DI_QI_INT, V8DI_V8DI_PCVOID_V8DI_QI_INT)
            (VOID_PVOID_HI_V16SI_V16SF_INT, VOID_PVOID_QI_V8SI_V8DF_INT)
            (VOID_PVOID_QI_V8DI_V8SF_INT, VOID_PVOID_QI_V8DI_V8DF_INT)
            (VOID_PVOID_HI_V16SI_V16SI_INT, VOID_PVOID_QI_V8SI_V8DI_INT)
            (VOID_PVOID_QI_V8DI_V8SI_INT, VOID_PVOID_QI_V8DI_V8DI_INT)
            (V2DF_V2DF_PCVOID_V4SI_QI_INT, V4DF_V4DF_PCVOID_V4SI_QI_INT)
            (V2DF_V2DF_PCVOID_V2DI_QI_INT, V4DF_V4DF_PCVOID_V4DI_QI_INT
            (V4SF_V4SF_PCVOID_V4SI_QI_INT, V8SF_V8SF_PCVOID_V8SI_QI_INT)
            (V4SF_V4SF_PCVOID_V2DI_QI_INT, V4SF_V4SF_PCVOID_V4DI_QI_INT)
            (V2DI_V2DI_PCVOID_V4SI_QI_INT, V4DI_V4DI_PCVOID_V4SI_QI_INT)
            (V2DI_V2DI_PCVOID_V2DI_QI_INT, V4DI_V4DI_PCVOID_V4DI_QI_INT)
            (V4SI_V4SI_PCVOID_V4SI_QI_INT, V8SI_V8SI_PCVOID_V8SI_QI_INT)
            (V4SI_V4SI_PCVOID_V2DI_QI_INT, V4SI_V4SI_PCVOID_V4DI_QI_INT)
            (VOID_PVOID_QI_V8SI_V8SF_INT, VOID_PVOID_QI_V4SI_V4SF_INT)
            (VOID_PVOID_QI_V4SI_V4DF_INT, VOID_PVOID_QI_V4SI_V2DF_INT)
            (VOID_PVOID_QI_V4DI_V4SF_INT, VOID_PVOID_QI_V2DI_V4SF_INT)
            (VOID_PVOID_QI_V4DI_V4DF_INT, VOID_PVOID_QI_V2DI_V2DF_INT)
            (VOID_PVOID_QI_V8SI_V8SI_INT, VOID_PVOID_QI_V4SI_V4SI_INT)
            (VOID_PVOID_QI_V4SI_V4DI_INT, VOID_PVOID_QI_V4SI_V2DI_INT)
            (VOID_PVOID_QI_V4DI_V4SI_INT, VOID_PVOID_QI_V2DI_V4SI_INT)
            (VOID_PVOID_QI_V4DI_V4DI_INT, VOID_PVOID_QI_V2DI_V2DI_INT)
            (VOID_QI_V8SI_PCVOID_INT_INT, VOID_HI_V16SI_PCVOID_INT_INT)
            (VOID_QI_V8DI_PCVOID_INT_INT): Add.
            * config/i386/i386.c (ix86_init_mmx_sse_builtins): Adjust builtin
            definitions accordingly.
    
    From-SVN: r245509

commit ae669bc304abfd0a13aebc0c3056f645734c9ac8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Feb 16 09:57:30 2017 +0100

    backport: re PR c/79428 (ICE in c_parser_consume_token, at c/c-parser.c:770)
    
            Backported from mainline
            2017-02-09  Marek Polacek  <polacek@redhat.com>
    
            PR c/79428
            * c-parser.c (c_parser_omp_ordered): Call c_parser_skip_to_pragma_eol
            instead of c_parser_skip_until_found.
    
            * c-c++-common/cilk-plus/CK/pr79428-4.c: New test.
            * c-c++-common/cilk-plus/CK/pr79428-7.c: New test.
            * c-c++-common/goacc/pr79428-1.c: New test.
            * c-c++-common/gomp/pr79428-2.c: New test.
            * c-c++-common/gomp/pr79428-5.c: New test.
            * c-c++-common/gomp/pr79428-6.c: New test.
            * c-c++-common/pr79428-3.c: New test.
    
    From-SVN: r245502

commit 5b656eb41068d1d439621bc55b8fe53bcea4fd00
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 16 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245498

commit fdbd12404c173aec40c1d81381a08ebf435dc70e
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Wed Feb 15 19:10:43 2017 +0000

    PR libstdc++/79114 use dg-require-atomic-builtins for new test
    
            PR libstdc++/79114
            * testsuite/18_support/nested_exception/79114.cc: Add dg-require.
    
    From-SVN: r245492

commit aabe2e944df1cbdea0828f64e98da678ac0518e5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 15 19:10:38 2017 +0000

    * testsuite/18_support/nested_exception/79114.cc: Add dg-require.
    
    From-SVN: r245491

commit 570a46ebbe6d65bf1b9c1cac2204f99b71c685d9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 15 13:38:48 2017 +0000

    PR59170 make pretty printers check for singular iterators
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/59170
            * python/libstdcxx/v6/printers.py (StdListIteratorPrinter.to_string)
            (StdSlistIteratorPrinter.to_string, StdVectorIteratorPrinter.to_string)
            (StdRbtreeIteratorPrinter.to_string)
            (StdDequeIteratorPrinter.to_string): Add check for value-initialized
            iterators.
            * testsuite/libstdc++-prettyprinters/simple.cc: Test them.
            * testsuite/libstdc++-prettyprinters/simple11.cc: Likewise.
    
    From-SVN: r245481

commit 3cff32b237497502262401d711d1f749e16a5285
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 15 13:38:42 2017 +0000

    PR59161 make pretty printers always return strings
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/59161
            * python/libstdcxx/v6/printers.py (StdListIteratorPrinter.to_string)
            (StdSlistIteratorPrinter.to_string, StdVectorIteratorPrinter.to_string)
            (StdRbtreeIteratorPrinter.to_string, StdDequeIteratorPrinter.to_string)
            (StdDebugIteratorPrinter.to_string): Return string instead of
            gdb.Value.
            * testsuite/libstdc++-prettyprinters/59161.cc: New test.
    
    From-SVN: r245480

commit 1d6fbeb478aec886ab76928a1976731c43cf21bd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 15 13:38:37 2017 +0000

    Tweak formatting and docs for pretty printers
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * python/libstdcxx/v6/printers.py (UniquePointerPrinter.to_string):
            Remove redundant parentheses.
            (RbtreeIterator, StdRbtreeIteratorPrinter): Add docstrings.
            (StdForwardListPrinter.to_string): Remove redundant parentheses.
            (StdExpOptionalPrinter.to_string): Use string formatting instead of
            concatenation.
            (TemplateTypePrinter): Adjust whitespace.
    
    From-SVN: r245479

commit e1182749772187979c1a50aefeadc286c84de8dd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 15 13:38:32 2017 +0000

    Add GDB XMethods for shared_ptr and unique_ptr<T[]>
    
    Backport from mainline
    2016-12-15  Jonathan Wakely  <jwakely@redhat.com>
    
            * python/libstdcxx/v6/xmethods.py (UniquePtrGetWorker.__init__): Use
            correct element type for unique_ptr<T[]>.
            (UniquePtrGetWorker._supports, UniquePtrDerefWorker._supports): New
            functions to disable unsupported operators for unique_ptr<T[]>.
            (UniquePtrSubscriptWorker): New worker for operator[].
            (UniquePtrMethodsMatcher.__init__): Register UniquePtrSubscriptWorker.
            (UniquePtrMethodsMatcher.match): Call _supports on the chosen worker.
            (SharedPtrGetWorker, SharedPtrDerefWorker, SharedPtrSubscriptWorker)
            (SharedPtrUseCountWorker, SharedPtrUniqueWorker): New workers.
            (SharedPtrMethodsMatcher): New matcher for shared_ptr.
            (register_libstdcxx_xmethods): Register SharedPtrMethodsMatcher.
            * testsuite/libstdc++-xmethods/unique_ptr.cc: Test arrays.
            * testsuite/libstdc++-xmethods/shared_ptr.cc: New test.
    
    From-SVN: r245478

commit 3344c97a2dea60e58ab2386628e68e7079f285b5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:21:42 2017 +0100

    backport: re PR tree-optimization/79411 (ICE: SSA corruption (fail_abnormal_edge_coalesce))
    
            Backported from mainline
            2017-02-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/79411
            * tree-ssa-reassoc.c (is_reassociable_op): Return false if
            stmt operands are SSA_NAMEs used in abnormal phis.
            (can_reassociate_p): Return false if op is SSA_NAME used in abnormal
            phis.
    
            * gcc.c-torture/compile/pr79411.c: New test.
    
    From-SVN: r245473

commit 73bf10fe4ac9de7d0734fc7de8a510ca172f74d4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:06:29 2017 +0100

    backport: re PR c++/79429 (ICE in add_stmt, at cp/semantics.c:385)
    
            Backported from mainline
            2017-02-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79429
            * parser.c (cp_parser_omp_ordered): Don't check for non-pragma_stmt
            non-pragma_compound context here.
            (cp_parser_omp_target): Likewise.
            (cp_parser_pragma): Don't call push_omp_privatization_clauses and
            parsing for ordered and target omp pragmas in non-pragma_stmt
            non-pragma_compound contexts.
    
            * c-c++-common/gomp/pr79429.c: New test.
            * g++.dg/gomp/pr79429.C: New test.
    
    From-SVN: r245472

commit 0120aff52d2bb275b995e48679628b2527bb0773
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:05:39 2017 +0100

    backport: re PR c/79431 (ICE in get, at cgraph.h:397)
    
            Backported from mainline
            2017-02-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/79431
            * gimplify.c (gimplify_adjust_omp_clauses): Ignore
            "omp declare target link" attribute unless is_global_var.
            * omp-low.c (find_link_var_op): Likewise.
    
            * c-parser.c (c_parser_omp_declare_target): Don't invoke
            symtab_node::get on automatic variables.
    
            * parser.c (cp_parser_oacc_declare): Formatting fix.
            (cp_parser_omp_declare_target): Don't invoke symtab_node::get on
            automatic variables.
    
            * c-c++-common/gomp/pr79431.c: New test.
    
    From-SVN: r245471

commit 7d1775dfde29b7c012d36b98be1cd34eb2472adb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:04:05 2017 +0100

    backport: re PR middle-end/79399 (GCC fails to compile big source at -O0)
    
            Backported from mainline
            2017-02-07  Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR middle-end/79399
            * ira-int.h (struct target_ira_int): Change x_max_struct_costs_size
            type from int to size_t.
            * ira-costs.c (struct_costs_size): Change type from int to size_t.
    
    From-SVN: r245470

commit 31587b23fe9ae49cf79741339feb5e9a5d983ce8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:03:30 2017 +0100

    backport: re PR c++/79377 (ICE with increment operator in -fpermissive mode)
    
            Backported from mainline
            2017-02-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/79377
            * tree.c (build_min_non_dep_op_overload): For POST{INC,DEC}REMENT_EXPR
            allow one fewer than expected arguments if flag_permissive.
    
            * g++.dg/lookup/pr79377.C: New test.
    
    From-SVN: r245469

commit d84cc1e5d38b99a1f4ecea35336876f6e35329c2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:02:45 2017 +0100

    backport: re PR tree-optimization/79338 (Memory leak in tree-parloops.c)
    
            Backported from mainline
            2017-02-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/79338
            * tree-parloops.c (gather_scalar_reductions): Don't call
            vect_analyze_loop_form for loop->inner before destroying loop's
            loop_vinfo.
    
    From-SVN: r245468

commit 2ea89129ef7a7ff0b31fe8c1828054c46601393b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:02:15 2017 +0100

    backport: re PR target/79197 (ICE in extract_insn in gcc/recog.c:2311)
    
            Backported from mainline
            2017-02-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/79197
            * config/rs6000/rs6000.md (*fixuns_trunc<mode>di2_fctiduz): Rename to ...
            (fixuns_trunc<mode>di2): ... this, remove previous expander.  Put all
            conditions on a single line.
    
            * gcc.target/powerpc/pr79197.c: New test.
            * gcc.c-torture/compile/pr79197.c: New test.
    
    From-SVN: r245467

commit 776ccd53c30cec9093944560396d5fd790617621
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 08:01:14 2017 +0100

    backport: re PR c++/79267 (internal compiler error with -O3 or -O2 -finline-functions)
    
            Backported from mainline
            2017-01-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/79267
            * value-prof.c (gimple_ic): Only drop lhs for noreturn calls
            if should_remove_lhs_p is true.
    
            * g++.dg/opt/pr79267.C: New test.
    
    From-SVN: r245466

commit 1bf71d7c69671a31efe2ba40c6334d61a183b3b0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Feb 15 07:59:34 2017 +0100

    backport: re PR target/79079 ([6] Wrong code gen for __builtin_mul_overflow when TRULY_NOOP_TRUNCATION (32, 64) == false)
    
            Backported from mainline
            2017-01-17  Kito Cheng  <kito.cheng@gmail.com>
                        Kuan-Lin Chen  <kuanlinchentw@gmail.com>
    
            PR target/79079
            * internal-fn.c (expand_mul_overflow): Use convert_modes instead of
            gen_lowpart.
    
    From-SVN: r245465

commit f82a16486c6c1343a6f9156551686c7739037fbc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 15 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r245463

commit b9558dd60ea12b192a33633e866b8ba04f86779c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:08:12 2017 +0000

    PR72792 PR72793 relax requirements on rebind members
    
    Backport from mainline
    2017-01-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/72792
            * include/bits/alloc_traits.h (__allocator_traits_base::__diff_type)
            (__allocator_traits_base::__size_type): Remove.
            (allocator_traits::_Ptr): New class template to detect const and void
            pointer types without instantiating pointer_traits::rebind
            unnecessarily.
            (allocator_traits::_Diff): Likewise for detecting difference_type.
            (allocator_traits::_Size): New class template to detect size_type
            without instantiating make_unsigned unnecessarily.
            * include/bits/ptr_traits.h (pointer_traits::element_type): Use
            __detected_or_t instead of __detected_or_t_.
            * include/std/type_traits (__detected_or_t_): Remove.
            * testsuite/20_util/allocator_traits/members/pointers.cc: New test.
    
            PR libstdc++/72792
            PR libstdc++/72793
            * include/bits/alloc_traits.h (__allocator_traits_base::__rebind):
            Replace with class template using void_t.
            (__alloc_rebind): Define in terms of
            __allocator_traits_base::__rebind.
            (allocator_traits): Remove unconditional static_assert for
            rebind_alloc.
            * include/bits/ptr_traits.h (__replace_first_arg): Remove type member.
            (pointer_traits::__rebind): Replace with class template using void_t.
            (pointer_traits::rebind): Define in terms of __rebind.
            (pointer_traits): Remove unconditional static_assert for rebind.
            * testsuite/20_util/allocator_traits/members/rebind_alloc.cc: New test.
            * testsuite/20_util/pointer_traits/rebind.cc: New test.
    
    From-SVN: r245452

commit 58868f8e89636148754e0e315874f5993b3dcd5b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:08:04 2017 +0000

    PR69321 fix any_cast<T>(any*) for non-copyable T
    
    Backport from mainline
    2017-01-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69321
            * include/experimental/any (__any_caster): Avoid instantiating
            manager function for types that can't be stored in any.
            * testsuite/experimental/any/misc/any_cast.cc: Likewise.
    
    From-SVN: r245451

commit 059f7e17cb8e2e314ac635016b58015f18d283e2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:07:54 2017 +0000

    PR69301 don't assume atomic<T> can default construct T
    
    Backport from mainline
    2017-01-18  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69301
            * include/std/atomic (atomic<T>::load, atomic<T>::exchange): Use
            aligned buffer instead of default-initialized variable.
            * testsuite/29_atomics/atomic/69301.cc: New test.
            * include/experimental/memory (observer_ptr::release): Use reserved
            name.
            * include/ext/pointer.h (_Pointer_adapter::operator++(int))
            (_Pointer_adapter::operator--(int)): Likewise.
    
    From-SVN: r245450

commit 8e4dc7a0cd25fff1c60d41f2c0abd40f55fd1017
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:07:48 2017 +0000

    PR79114 use decayed type in std::throw_with_nested assertion
    
    Backport from mainline
    2017-01-17  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/79114
            * libsupc++/nested_exception.h (throw_with_nested): Use decay instead
            of remove_reference.
            * testsuite/18_support/nested_exception/79114.cc: New test.
    
    From-SVN: r245449

commit ee0e4a572fff0cb4de2e527a21ec711be3310ef8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:07:42 2017 +0000

    PR78702 fix accessibility of locale::facet::__shim
    
    Backport from mainline
    2017-01-16  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78702
            * include/bits/locale_classes.h (locale::facet::__shim): Change from
            private to protected.
            * src/c++11/cxx11-shim_facets.cc (__shim_accessor): Define helper to
            make locale::facet::__shim accessible.
    
    From-SVN: r245448

commit 83a3f0455fa2e569b87f8c9de1edd1e9e5d0a15f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:07:37 2017 +0000

    PR78134 fix return types of heterogeneous lookup functions
    
    Backport from mainline
    2017-01-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78134
            * include/bits/stl_map.h (map::lower_bound, map::upper_bound)
            (map::equal_range): Fix return type of heterogeneous overloads.
            * include/bits/stl_multimap.h (multimap::lower_bound)
            (multimap::upper_bound, multimap::equal_range): Likewise.
            * include/bits/stl_multiset.h (multiset::lower_bound)
            (multiset::upper_bound, multiset::equal_range): Likewise.
            * include/bits/stl_set.h (set::lower_bound, set::upper_bound)
            (set::equal_range): Likewise.
            * testsuite/23_containers/map/operations/2.cc: Check return types.
            * testsuite/23_containers/multimap/operations/2.cc: Likewise.
            * testsuite/23_containers/multiset/operations/2.cc: Likewise.
            * testsuite/23_containers/set/operations/2.cc: Likewise.
    
    From-SVN: r245447

commit c5b01ec472abbad08fe5d074f6748daff7bacd77
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Feb 14 20:07:26 2017 +0000

    PR78273 fix count to work with partitioning function
    
    Backport from mainline
    2017-01-11  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78273
            * include/bits/stl_map.h (map::count<_Kt>(const _Kt&)): Don't assume
            the heterogeneous comparison can only find one match.
            * include/bits/stl_set.h (set::count<_Kt>(const _Kt&)): Likewise.
            * testsuite/23_containers/map/operations/2.cc: Test count works with
            comparison function that just partitions rather than sorting.
            * testsuite/23_containers/set/operations/2.cc: Likewise.
    
    From-SVN: r245446

commit ca6702949ac2b0767880e69b824b5d3c83b31808
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Feb 14 20:25:42 2017 +0100

    re PR target/79495 (ICE in extract_constrain_insn, at recog.c:2213)
    
            PR target/79495
            * config/i386/i386.md (*movxf_internal): Add (o,rC) alternative.
    
    testsuite/ChangeLog:
    
            PR target/79495
            * gcc.target/i386/pr79495.c: New test.
    
            PR middle-end/61225
            * gcc.target/i386/pr49095.c: Add -fno-shrink-wrap to dg-options.
            Use dg-additional-options for ia32 target.  Remove XFAIL.
    
    From-SVN: r245443

commit 69a637d007d13d6e52ed5127d7097fc580ec43ba
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Feb 14 09:05:38 2017 +0100

    Replace XALLOCAVEC with XCNEWVEC (PR c/79471).
    
    2017-02-14  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-02-13  Martin Liska  <mliska@suse.cz>
    
            PR c/79471
            * calls.c (expand_call): Replace XALLOCAVEC with XCNEWVEC.
    
    From-SVN: r245419

commit b01788ddfa41387c453f1d80236df8e3402b3c7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 14 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245413

commit 43582592f43c76e2a6c48ea59ce02be0563a6bb7
Author: Nathan Sidwell <nathan@acm.org>
Date:   Mon Feb 13 18:12:17 2017 +0000

    PR c++/79296 - ICE mangling localized template instantiation
    
            PR c++/79296 - ICE mangling localized template instantiation
            * decl2.c (determine_visibility): Use template fn context for
            local class instantiations.
    
            PR c++/79296
            * g++.dg/cpp0x/pr79296.C: New.
    
    From-SVN: r245400

commit 0a159aa778bc71b14f79cbb9ac7d009fa79d9f7c
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Mon Feb 13 12:35:20 2017 +0000

    backport: x86-64.h: Append --32 to the assembler options when -m16 is used on non-glibc systems as well.
    
            Backport from mainline
            2016-12-11  Roger Pau Monné  <roger.pau@citrix.com>
    
            * config/i386/x86-64.h: Append --32 to the assembler options when
            -m16 is used on non-glibc systems as well.
    
    From-SVN: r245384

commit 910f4a7967ca6898708732fd9d89bee10a7324d4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 13 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r245380

commit d92d57d9bfd5c48b79e691d754a6eb230d73452d
Author: John Marino <gnugcc@marino.st>
Date:   Sun Feb 12 21:36:02 2017 +0000

    * gcc-interface/Makefile.in: Support aarch64-freebsd.
    
    From-SVN: r245378

commit 2e70b4c5e9c743d0b4b00607760790a31569dd06
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Feb 11 22:34:11 2017 -0500

    PR c++/78908 - template ops and bitfields
    
            * tree.c (build_min_non_dep): Use unlowered_expr_type.
    
    From-SVN: r245373

commit 81ff6e271e763aa5f5839dd1046ba88cfa4f1f7c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 12 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r245369

commit 80d928770e011fca44e83278c5f0eca517eaea65
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 11 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245352

commit dba7398484d3bef990dbe0889ac43c04d80d485b
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Feb 10 15:08:39 2017 -0500

    PR c++/78897 - constexpr union
    
            * constexpr.c (cxx_eval_store_expression): A store to a union member
            erases a previous store to another member.
    
    From-SVN: r245342

commit ba7769013e64ab498132308a17522e55113b0606
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 10 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245319

commit 972b17720cade3f099d21a21b328947bd2ca9e5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 9 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245290

commit d2099c094c673e16f58f4981708a15310a092cf5
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Feb 8 22:41:31 2017 +0100

    rs6000: Fix spelling of AltiVec in rs6000.opt (PR79397)
    
    It was spelled Altivec in two user-facing messages in rs6000.opt; let's
    be consistent.
    
    
            PR translation/79397
            * config/rs6000/rs6000.opt (maltivec=le, maltivec=be): Fix spelling
            of AltiVec.
    
    From-SVN: r245286

commit 61ca92a73ae40a95b13afa7634ba5aa58fbd4d48
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Feb 8 13:13:53 2017 +0000

    backport: [multiple changes]
    
    2017-02-08  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2017-02-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71824
            PR tree-optimization/79409
            * gcc.dg/graphite/pr71824-3.c: New testcase.
    
            2017-02-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71824
            * graphite-scop-detection.c (scop_detection::build_scop_breadth):
            Check all loops contained in the merged region.
    
            * gcc.dg/graphite/pr71824-2.c: New testcase.
    
            2017-02-01  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71824
            * graphite-scop-detection.c (scop_detection::build_scop_breadth):
            Verify the loops are valid in the merged SESE region.
            (scop_detection::can_represent_loop_1): Check analyzing the
            evolution of the number of iterations in the region succeeds.
    
            * gcc.dg/graphite/pr71824.c: New testcase.
    
            2017-01-31  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77318
            * graphite-sese-to-poly.c (extract_affine): Fix assert.
            (create_pw_aff_from_tree): Take loop parameter.
            (add_condition_to_pbb): Pass loop of the condition to
            create_pw_aff_from_tree.
    
    From-SVN: r245278

commit 1a7893592dfea0aa5d49a4561bcdbe3803beb32b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 8 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245263

commit fac851f5550e86dc335225fac01c7aa49f86c0cc
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Feb 7 23:05:47 2017 +0000

    trans-types.c (gfc_get_int_kind_from_width_isofortranen): Choose REAL type with the widest precision if...
    
    2017-02-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            * trans-types.c (gfc_get_int_kind_from_width_isofortranen):  Choose
            REAL type with the widest precision if two (or more) have the same
            storage size.
    
    From-SVN: r245259

commit 93db019f0f83ff5ba4172a8c5b23403bf45da2e9
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Tue Feb 7 12:47:51 2017 +0000

    [ARM][PR target/78945] Fix libatomic on armv7-m
    
    libatomic/
    
            Backport from mainline:
            2017-01-30  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            PR target/78945
            * config/arm/exch_n.c (libat_exchange): Check __ARM_FEATURE_SIMD32.
    
    From-SVN: r245246

commit f9226dd817cef091d45f089014bc5d797e8c7854
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Feb 7 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245236

commit ed83818105de8a9407516b6feadbb00e178b6171
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Mon Feb 6 12:54:10 2017 +0100

    re PR target/71017 (libgcc/config/i386/cpuinfo.c:346:17: runtime error: left shift of 1 by 31 places cannot be represented in type 'int')
    
    2017-02-06  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR target/71017
            * config/i386/cpuid.h: Fix undefined behavior.
    
    From-SVN: r245208

commit 9aafa0135269f0eac5c2606b6c7646926002e2a1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Feb 6 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r245201

commit b2153824e663ee782929aa62d8edeeab8c95c002
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Feb 5 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r245186

commit 7cfdfa76ed93318733b6b08b33ac749e1de2e04b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Feb 4 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r245176

commit e31285368ebde6ef5b701bfca9ab6c569c86fc95
Author: Carl Love <cel@us.ibm.com>
Date:   Fri Feb 3 22:12:36 2017 +0000

    backport: dated 017-01-26 and 2017-01-25 respectively
    
    gcc/ChangeLog:
    
    2017-02-03  Carl Love  <cel@us.ibm.com>
    
            Backport of two commits from mainline, r244943 and r244904,
            dated 017-01-26 and 2017-01-25 respectively
    
            * config/rs6000/rs6000-c (altivec_overloaded_builtins): Fix order
            of entries for ALTIVEC_BUILTIN_VEC_PACKS.  Remove bogus entries
            for P8V_BUILTIN_VEC_VGBBD.
    
    gcc/testsuite/ChangeLog:
    
    2017-02-03  Carl Love  <cel@us.ibm.com>
    
            * gcc.target/powerpc/builtins-3-p8.c:  Add new testfile for missing
            vec_packs built-in tests.
    
    From-SVN: r245170

commit ae7ce7574d269bea720d2b400059d1e634fb7aa9
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Feb 3 19:08:10 2017 +0000

    backport: re PR testsuite/65484 (FAIL: g++.dg/vect/pr36648.cc on powerpc64)
    
    2017-02-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/65484
            * g++.dg/vect/pr36648.cc: Modify to reflect that the loop is not
            vectorized on POWER unless hardware misaligned loads are
            available.
    
    From-SVN: r245165

commit 02ae9140d63692f780ecae093f15f5a3e4113c5a
Author: Walter Lee <walt@tilera.com>
Date:   Fri Feb 3 18:46:57 2017 +0000

    re PR target/78862 (tile*: ICE with -fstack-protetor-strong)
    
    PR target/78862
    * config/tilegx/tilegx.md (tilegx_expand_prologue): Add blockage
    after initial stackframe link reg save.
    * config/tilepro/tilepro.md (tilepro_expand_prologue): Likewise.
    
    From-SVN: r245160

commit d171b2281e9a505afd21154b1cbea326f216b62c
Author: Maxim Ostapenko <m.ostapenko@samsung.com>
Date:   Fri Feb 3 07:17:38 2017 +0000

    re PR lto/79061 ([LTO][ASAN] LTO plus ASAN fails with "AddressSanitizer: initialization-order-fiasco")
    
            PR lto/79061
            * asan.c (asan_add_global): Force has_dynamic_init to zero in LTO mode.
    
    From-SVN: r245144

commit 2f2528a1171e0db1fae94dfa7413068cd78dd137
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Feb 3 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245140

commit 391ab32ba62baa6d6865df09d822d2293d863d80
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Feb 2 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245113

commit ec22aa1bf698639cf907f1073c9d93224273e0ba
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Wed Feb 1 23:35:59 2017 +0000

    re PR go/79037 (gccgo: Binaries crash with parforsetup: pos is not aligned on m68k)
    
            PR go/79037
        Backport from mainline:
    
        compiler, runtime: align gc data for m68k
    
        The current GC requires that the gc data be aligned to at least a 4
        byte boundary, because it uses the lower two bits of the address for
        flags (see LOOP and PRECISE in runtime/mgc0.c).  As the gc data is
        stored as a [...]uintptr, that is normally always true.  However, on
        m68k, that only guarantees 2 byte alignment.  Fix it by forcing the
        alignment.
    
        The parfor code used by the current GC requires that the parfor data
        be aligned to at least an 8 byte boundary.  The code in parfor.c
        verifies this.  This is normally true, as the data uses uint64_t
        values, but, again, this must be enforced explicitly on m68k.
    
        Fixes GCC PR 79037.
    
        Change-Id: Ifdf422db7b37e88f490e54c2f6d249117d359dd6
    
    From-SVN: r245110

commit 2ee946a010887209c9d9b1a5264abad0f142339d
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Wed Feb 1 22:58:43 2017 +0000

    re PR go/79281 (gccgo: Binaries using goroutines crash on m68k)
    
            PR go/79281
    
    Force Lock and Note to be aligned to a 4 byte boundary.  This is
    required by the kernel but is not enforced on m68k.
    
    Patch by John Paul Adrian Glaubitz.
    
    From-SVN: r245109

commit accd3d79452ba4550c342289b0e6a912264b3d85
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 1 12:57:46 2017 +0000

    PR78346 make <bits/predefined_ops.h> handle stashing iterators
    
            PR libstdc++/78346
            * include/bits/predefined_ops.h (_Iter_equals_iter): Store iterator
            not its referent.
            (_Iter_comp_to_iter): Likewise.
            * testsuite/25_algorithms/search/78346.cc: New test.
    
    From-SVN: r245091

commit 12aab40da5c5b7b5a75548d35a134b03aaa33249
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 1 12:12:34 2017 +0000

    PR libstdc++/79195 fix make_array type deduction
    
            PR libstdc++/79195
            * include/experimental/array (make_array): Use common_type<_Dest>
            and delay instantiation of common_type until after conditional_t.
            Qualify std::forward call.
            (to_array): Add exception specification.
            * testsuite/experimental/array/make_array.cc: Test argument types
            without a common type.
    
    From-SVN: r245087

commit f195a2444e2f4310b3842de0683a299d721fa338
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Feb 1 12:12:28 2017 +0000

    PR libstdc++/79254 fix exception-safety of std::string copy assignment
    
            PR libstdc++/79254
            * include/bits/basic_string.h [_GLIBCXX_USE_CXX11_ABI]
            (basic_string::operator=(const basic_string&)): If source object is
            small just deallocate, otherwise perform new allocation before
            making any changes.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:
            Test exception-safety of copy assignment when allocator propagates.
            * testsuite/21_strings/basic_string/allocator/char/copy_assign.cc:
            Likewise.
            * testsuite/util/testsuite_allocator.h (uneq_allocator::swap): Make
            std::swap visible.
    
    From-SVN: r245086

commit da939175cdc819cba2c9fa34fedf7a3793a3c7be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Feb 1 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r245078

commit 71f7a06790382422ee2b6bd242f9dec047ef8e0f
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jan 31 22:57:55 2017 +0000

    backport: re PR target/79268 (Wrong code generation for vec_xl and vec_xst intrinsics)
    
    [gcc]
    
    2017-01-31  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79268
            * config/rs6000/altivec.h (vec_xl): Revise #define.
            (vec_xst): Likewise.
    
    [gcc/testsuite]
    
    2017-01-31  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79268
            * gcc.target/powerpc/pr79268.c: New file.
            * gcc.target/powerpc/vsx-elemrev-1.c: Delete file.
            * gcc.target/powerpc/vsx-elemrev-2.c: Likewise.
            * gcc.target/powerpc/vsx-elemrev-3.c: Likewise.
            * gcc.target/powerpc/vsx-elemrev-4.c: Likewise.
    
    From-SVN: r245075

commit 172894672fba016721aa5dcec85b1b837a6ee840
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Jan 31 21:20:10 2017 +0000

    re PR fortran/79305 (real128 - undefined reference to cexpl)
    
    2017-01-31  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/79305
            * c99_protos.h: Spell HAVE_EXPL correctly.
            * intrinsics/c99_functions.c: Ditto.
    
    From-SVN: r245071

commit 3ff15bbe842fa0f786e27bc66342966334e06733
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 31 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r245043

commit b8a8362f085c5a11c43dd2cc2e7863c909313ccd
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Jan 30 16:01:11 2017 +0000

    Only declare gets for C++ < 2014 on Solaris (PR libstdc++/78979)
    
            Backport from mainline
            2017-01-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR libstdc++/78979
            * inclhack.def (solaris_gets_c11, solaris_gets_cxx14)
            (solaris_std_gets_cxx14, solaris_stdlib_noreturn): New fixes.
            * fixincl.x: Regenerate.
            * tests/base/iso/stdio_iso.h [SOLARIS_GETS_C11_CHECK,
            SOLARIS_GETS_CXX14_CHECK, SOLARIS_STD_GETS_CXX14_CHECK,
            SOLARIS_STDLIB_NORETURN_CHECK]: New tests.
    
    From-SVN: r245032

commit 25f31d2e915c0c1daea4180ac0ec8eef061a6321
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 30 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r245019

commit e5b81e1ec6f53f741240672935c3bc2a26980c11
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun Jan 29 16:14:41 2017 +0100

    backport: re PR fortran/68887 (gfortran.dg/coarray/event_[12].f90 -fcoarray=lib  -O2  -lcaf_single -latomic fails)
    
    libgfortran/ChangeLog:
    
    2017-01-29  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/68887
            PR fortran/70696
            * caf/single.c (_gfortran_caf_register): Allocate enough memory for
            the event counter.
    
    From-SVN: r245016

commit a2c4443cf29c49795cd8f25d17448c3ee741a335
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun Jan 29 15:47:28 2017 +0100

    backport: re PR fortran/70697 ([Coarray] ICE on EVENT WAIT with array element UNTIL_COUNT argument)
    
    gcc/testsuite/ChangeLog:
    
    2017-01-29  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70697
            * gfortran.dg/coarray/event_4.f08: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2017-01-29  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70697
            * resolve.c (resolve_lock_unlock_event): Resolve the expression for
            event's until_count.
    
    From-SVN: r245015

commit 0dc8ee053d29262c9a843f75833d64718c268073
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun Jan 29 14:50:23 2017 +0100

    backport: [multiple changes]
    
    2017-01-29  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/70696
            * trans-expr.c (gfc_get_tree_for_caf_expr): Ensure the backend_decl
            is valid before accessing it.  Remove unnecessary assert.
            * trans-decl.c (gfc_build_qualified_array): Add static tokens to the
            parent function's scope only, when the decl-context is not the
            translation unit.
    
    2017-01-29  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            2017-01-19  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70696
            * gfortran.dg/coarray_43.f90: New test.
    
            2017-01-18  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70696
            * gfortran.dg/coarray_event_1.f08: New test.
    
            2017-01-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/70696
            * gfortran.dg/coarray/event_3.f08: New test.
    
    From-SVN: r245014

commit 64dabd074fe06822b59a4dcdb780a152400f01d8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 29 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r245012

commit 0b217b2530d9e10478daa1db8ebaf036c1d0301e
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Jan 28 18:08:22 2017 +0000

    re PR testsuite/70583 (FAIL: g++.old-deja/g++.abi/vtable2.C  -std=gnu++98 execution test)
    
            PR testsuite/70583
            * g++.old-deja/g++.abi/vtable2.C: Adjust CMP_VPTR define on hppa.
    
    From-SVN: r245008

commit 4807c7af37f531ce7f83d79943521a5ff09ec6e8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 28 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r245001

commit 0ec37b61b7cb74e440f8e9fb35352a4456ec3d20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 27 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r244959

commit f84117d772f3ae2fd578d8ffb790c96b4d77f5b3
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Jan 26 17:49:16 2017 +0100

    ChangeLog: Move my last entry ...
    
            * ChangeLog: Move my last entry ...
            * config/ChangeLog: ... here.
    
    From-SVN: r244939

commit 13bb921ed6e87022d2de196e986d72ddc36efa10
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jan 26 11:34:03 2017 -0500

    PR c++/79176 - lambda ICE with -flto -Os
    
            * decl2.c (vague_linkage_p): Handle decloned 'tors.
            * tree.c (decl_linkage): Likewise.
    
    From-SVN: r244937

commit 8e01b502284a973182d4a180abee68266a77af76
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Jan 26 13:50:27 2017 +0000

    backport: expr.c (store_field): In the bitfield case...
    
            Backport from mainline
            2017-01-10  Eric Botcazou  <ebotcazou@adacore.com>
    
            * expr.c (store_field): In the bitfield case, fetch the return value
            from the registers before applying a single big-endian adjustment.
            Always do a final load for a BLKmode value not larger than a word.
    
            2017-01-09  Eric Botcazou  <ebotcazou@adacore.com>
    
            * expr.c (store_field): In the bitfield case, if the value comes from
            a function call and is of an aggregate type returned in registers, do
            not modify the field mode; extract the value in all cases if the mode
            is BLKmode and the size is not larger than a word.
    
    From-SVN: r244931

commit 07ace8d12e54eee0f3c1ef23f9ecf9dd594b1a07
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 26 11:16:49 2017 +0000

    backport: [multiple changes]
    
    2017-01-26  Richard Biener  <rguenther@suse.de>
    
            * tree-vrp.c (vrp_visit_assignment_or_call): Use set_defs_to_varying.
    
            Backport from mainline
            2016-01-10  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/79034
            * tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):
            Propagate out degenerate PHIs in the joiner.
    
            * g++.dg/torture/pr79034.C: New testcase.
    
            2016-12-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78742
            * tree.c (cst_and_fits_in_hwi): Look if the actual value fits.
            * tree-object-size.c (compute_builtin_object_size): Use
            tree_fits_shwi_p.
            * tree-data-ref.c (initialize_matrix_A): Remove excess assert.
    
            * gcc.dg/torture/pr78742.c: New testcase.
    
    From-SVN: r244926

commit 29d62edb394377df6ff1e9ab598039c1a84827ef
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 26 10:46:01 2017 +0000

    backport: ubsan.c (ubsan_use_new_style_p): Fix check for empty string.
    
    2017-01-26  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-03  Kirill Yukhin  <kirill.yukhin@intel.com>
    
            * ubsan.c (ubsan_use_new_style_p): Fix check for empty string.
    
    From-SVN: r244923

commit c1f306227b0d98d58ca6f5478965a3844128a329
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 26 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r244914

commit e84f6eaf251370f69dcff8b5b4a0f3efaf504581
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 25 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244887

commit f4721bdd963cc88815fe8c273d0f0dfe507d1467
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Jan 24 17:18:02 2017 +0000

    re PR target/77439 (wrong code for sibcall with longcall, APCS frame and VFP)
    
            PR target/77439
            * config/arm/arm.c (arm_function_ok_for_sibcall): Add back restriction
            for long calls with APCS frame and VFP.
    
    From-SVN: r244880

commit 2acd062d28ad6ffd0e7530880496d02b1aa7f5c9
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Jan 24 11:54:56 2017 +0100

    re PR target/78478 (Compile Error for i386-rtems)
    
            PR target/78478
            * config/ax_check_define.m4: New file.
    
    libgfortran/ChangeLog:
    
            PR target/78478
            * acinclude.m4: Include ../config/ax_check_define.m4
            * configure.ac: Check if _SOFT_FLOAT is defined.
            * configure.host (i?86 | x86_64): Use fpu-generic when
            have_soft_float is set.
            * configure: Regenerate.
    
    gcc/ChangeLog:
    
            PR target/78478
            Revert:
            2013-11-05  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/rtemself.h (LONG_DOUBLE_TYPE_SIZE): New define.
    
    From-SVN: r244862

commit ee19da6ff3f3e759ca9bd33ad36d327b8e77cd94
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Tue Jan 24 03:34:14 2017 +0000

    re PR go/78763 (go1: internal compiler error: in do_get_backend, at go/gofrontend/expressions.cc:8352)
    
            PR go/78763
    
        Backported from mainline:
    
        compiler: call determine_types even for constant expressions
    
        We need to call determine_types even for constant expressions, since a
        constant expression may include code like unsafe.Sizeof(0).  Something
        needs to determine the type of the untyped 0, and that should be the
        determine_types pass.
    
        Implementing that triggered a compiler crash on test/const1.go because
        it permitted some erroneous constants to make it all the way to the
        backend.  Catch that case by checking whether we get a constant
        overflow error, and marking the expression invalid if we do.  This is
        a good change in any case, as previously we reported the same constant
        overflow error multiple times, and now we only report it once.
    
        Fixes GCC PR 78763.
    
        Reviewed-on: https://go-review.googlesource.com/34496
    
    From-SVN: r244852

commit 90f89a325ea331c34adfe3edfce1492a95ba7ab5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 24 00:16:15 2017 +0000

    Daily bump.
    
    From-SVN: r244842

commit a2622a26ffb639ee94d4d378a7c53d6e3a6f7f23
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jan 23 13:26:24 2017 +0100

    Fix FAIL: gcc.dg/lto/pr69188 on bare-metal targets
    
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-01-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            * gcc.dg/lto/pr69188_0.c: Require profiling support for testcase.
    
    From-SVN: r244800

commit 46ed15351da553e811df72156bfd742e14740d8d
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jan 23 13:26:05 2017 +0100

    Do not declare artificial variables in tree-profile.c to have a definition (PR lto/69188).
    
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-20  Martin Liska  <mliska@suse.cz>
    
            PR lto/69188
            * tree-profile.c (init_ic_make_global_vars): Do not call
            finalize_decl.
            (gimple_init_gcov_profiler): Likewise.
    2017-01-23  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-20  Martin Liska  <mliska@suse.cz>
    
            PR lto/69188
            * gcc.dg/lto/pr69188_0.c: New test.
            * gcc.dg/lto/pr69188_1.c: New test.
    
    From-SVN: r244799

commit 7dec34c4110334730db6579eb8629d81a811884d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 23 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244768

commit bb2d12b5bbe7e521a04e0a951ac393db81e68484
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sun Jan 22 16:00:58 2017 +0000

    backport: faq.xml: Update address of C++ ABI link.
    
            Backport from mainline
            2017-01-01  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * doc/xml/faq.xml: Update address of C++ ABI link.
            * doc/xml/manual/abi.xml: Ditto.
    
    From-SVN: r244760

commit 9f24047e6888de3f6f6f10d3bc769bedaddc4432
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 22 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r244755

commit b0bc38cfd47cafac72c56f8dbd3466789a6914e5
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Sat Jan 21 22:02:25 2017 +0000

    backport: extend.texi (Cilk Plus Builtins): cilkplus.org now uses https by default.
    
            Backport from mainline
            2016-12-29  Gerald Pfeifer  <gerald@pfeifer.com>
    
            * doc/extend.texi (Cilk Plus Builtins): cilkplus.org now uses
            https by default.
            * doc/passes.texi (Cilk Plus Transformation): Ditto.
            * doc/generic.texi (Statements for C++): Ditto, and use @uref.
    
    From-SVN: r244752

commit 8ac2069084c4c1e5b6a830aab899dc6701429293
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 21 00:16:20 2017 +0000

    Daily bump.
    
    From-SVN: r244738

commit c374891cd6b9db1aacd5fdd33de986d896fd5989
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jan 20 22:32:48 2017 +0000

    backport: rs6000.c (rtx_is_swappable_p): Change UNSPEC_VSX__XXSPLTD to require special splat handling.
    
    [gcc]
    
    2017-01-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rtx_is_swappable_p): Change
            UNSPEC_VSX__XXSPLTD to require special splat handling.
    
    [gcc/testsuite]
    
    2017-01-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2017-01-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/swaps-p8-27.c: New.
    
    From-SVN: r244736

commit a0fe036c3f78cd5ccd286943565b7e86bf097dbd
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Fri Jan 20 15:34:41 2017 +0000

    This patch simplifies the handling of EH return.
    
    This patch simplifies the handling of EH return.  We force the use of the
    frame pointer so the return location is always at FP + 8.  This means we
    can emit a simple volatile access in EH_RETURN_HANDLER_RTX without needing md
    patterns, splitters and frame offset calculations.  The new implementation also
    fixes various bugs in aarch64_final_eh_return_addr, which does not work with
    -fomit-frame-pointer, alloca or outgoing arguments.
    
            Backport from mainline
        gcc/
            PR target/77455
            * config/aarch64/aarch64.md (eh_return): Remove pattern and splitter.
            * config/aarch64/aarch64.h (AARCH64_EH_STACKADJ_REGNUM): Remove.
            (EH_RETURN_HANDLER_RTX): New define.
            * config/aarch64/aarch64.c (aarch64_frame_pointer_required):
            Force frame pointer in EH return functions.
            (aarch64_expand_epilogue): Add barrier for eh_return.
            (aarch64_final_eh_return_addr): Remove.
            (aarch64_eh_return_handler_rtx): New function.
            * config/aarch64/aarch64-protos.h (aarch64_final_eh_return_addr):
            Remove.
            (aarch64_eh_return_handler_rtx): New prototype.
    
        testsuite/
            PR target/77455
            * gcc.target/aarch64/eh_return.c: New test.
    
    From-SVN: r244724

commit 6474b9243d7fb16c4b56c1768028ea6194e13893
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jan 20 15:12:26 2017 +0000

    re PR c++/77545 (ICE on valid C++11 code: in potential_constant_expression_1, at cp/constexpr.c:5480)
    
            PR c++/77545
            PR c++/77284
            * constexpr.c (potential_constant_expression_1): Handle CLEANUP_STMT.
    
            * g++.dg/cpp0x/range-for32.C: New test.
            * g++.dg/cpp0x/range-for33.C: New test.
    
    From-SVN: r244721

commit b42c1c422bfd8063bb7af966b011c5df78c107d8
Author: Richard Earnshaw <rearnsha@arm.com>
Date:   Fri Jan 20 11:43:58 2017 +0000

    [expand] Fix for PR rtl-optimization/79121 incorrect expansion of extend plus left shift
    
        When generating a shift from an extended value moving from one to two
        machine registers, the type of the right shift is for the most
        significant word should be determined by the signedness of the inner
        type, not the signedness of the result type.
    
        gcc:
            PR rtl-optimization/79121
            * expr.c (expand_expr_real_2, case LSHIFT_EXPR): Look at the signedness
            of the inner type when shifting an extended value.
    
        gcc/testsuite:
            * gcc.c-torture/execute/pr79121.c: New test.
    
    From-SVN: r244702

commit 1f15b16d152ee660f5d67481dd14b67e4ffced9a
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 10:33:15 2017 +0100

    Reload global options when strict aliasing is dropped (PR ipa/79043).
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79043
            * function.c (set_cfun): Add new argument force.
            * function.h (set_cfun): Likewise.
            * ipa-inline-transform.c (inline_call): Use the function when
            strict alising from is dropped for function we inline to.
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-13  Martin Liska  <mliska@suse.cz>
    
            PR ipa/79043
            * gcc.c-torture/execute/pr79043.c: New test.
    
    From-SVN: r244691

commit 99366970e6f85819fba31e880fa7f4fb5dcef8ad
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jan 20 09:49:16 2017 +0100

    Fix wrong assumption in contains_type_p (PR ipa/71207).
    
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-17  Martin Liska  <mliska@suse.cz>
    
            PR ipa/71207
            * ipa-polymorphic-call.c (contains_type_p): Fix wrong
            assumption and add comment.
    2017-01-20  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-17  Martin Liska  <mliska@suse.cz>
    
            PR ipa/71207
            * g++.dg/ipa/pr71207.C: New test.
    
    From-SVN: r244689

commit 3eae5c7dd536519899305946d8840771f76c5593
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 20 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r244671

commit 88e5884232678444bca35c65e315ce4889924a6d
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jan 19 12:02:43 2017 +0000

    re PR rtl-optimization/72488 (wrong code (SIGFPE) at -Os and above on x86_64-linux-gnu (in the 64-bit mode))
    
    2017-01-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/72488
            * tree-ssa-sccvn.c (run_scc_vn): When we abort the VN make
            sure to restore SSA info.
    
    From-SVN: r244625

commit 73faef1ac5ed3f9d1281cf68623f933ac9e3ac77
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 19 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244607

commit b5c69d4522f096ac36eda388c87f8076043b67a6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 18 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r244559

commit 358443bb009ca6c04a5b205ed338a3f7029a9716
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Tue Jan 17 21:34:58 2017 +0100

    re PR debug/78839 (DWARF output different between GCC 5 and 6)
    
            PR debug/78839
            * dwarf2out.c (field_byte_offset): Restore the
            PCC_BITFIELD_TYPE_MATTERS behavior for INTEGER_CST DECL_FIELD_OFFSET
            and DECL_FIELD_BIT_OFFSET.  Use fold_build2 instead of build2 + fold.
            (analyze_variants_discr, gen_variant_part): Use fold_build2 instead
            of build2 + fold.
    
    From-SVN: r244555

commit 0d2266151ecb668675f137857f2f0a701bc84573
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 17 21:34:17 2017 +0100

    backport: re PR c++/78341 (ICE on invalid C++ code on x86_64-linux-gnu  (internal compiler error: in cp_parser_std_attribute_spec, at cp/parser.c:24597))
    
            Backported from mainline
            2017-01-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78341
            * parser.c (cp_parser_std_attribute_spec): Remove over-eager
            assertion.  Formatting fix.
    
            * g++.dg/cpp0x/pr78341.C: New test.
    
    From-SVN: r244554

commit 52333edaf91775ab5d4fd826f88e545970fb7203
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 17 21:33:16 2017 +0100

    backport: re PR middle-end/50199 (wrong code with -flto -fno-merge-constants)
    
            Backported from mainline
            2017-01-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/50199
            * lto-lang.c (lto_post_options): Force flag_merge_constants = 1
            if it was 0.
    
            * gcc.dg/lto/pr50199_0.c: New test.
    
    From-SVN: r244553

commit 21f426567c8d18d83ec8622b1c51b8d2665daf16
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 17 21:32:27 2017 +0100

    backport: re PR c++/78949 (incorrect "unused variable" warning with SSE2)
    
            Backported from mainline
            2017-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78949
            * typeck.c (cp_build_unary_op): Call mark_rvalue_use on arg if it has
            vector type.
    
            * c-c++-common/Wunused-var-16.c: New test.
    
    From-SVN: r244552

commit 8f8056787ce3aee61e258e30f5571861324b2061
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 17 21:31:40 2017 +0100

    backport: re PR c++/78693 (Bogus 'inconsistent deduction for ‘auto’' error when having a dependent initializer and a nondependent one in the same declaration)
    
            Backported from mainline
            2017-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78693
            * parser.c (cp_parser_simple_declaration): Only complain about
            inconsistent auto deduction if auto_result doesn't use auto.
    
            * g++.dg/cpp0x/pr78693.C: New test.
    
    From-SVN: r244551

commit ba5203e9968ece12e0c6d92321157260a2de3521
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jan 17 21:30:25 2017 +0100

    backport: re PR c++/71182 (parser.c cp_lexer_previous_token sanitizer detects member call on null pointer)
    
            Backported from mainline
            2017-01-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71182
            * parser.c (cp_lexer_previous_token): Use vec_safe_address in the
            assertion, as lexer->buffer may be NULL.
    
            * g++.dg/cpp0x/pr71182.C: New test.
    
    From-SVN: r244550

commit 654215f6aa9770f53a6adb5401c8992f3dccd116
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Tue Jan 17 21:29:19 2017 +0100

    backport: re PR fortran/78866 (ICE in gimplify_adjust_omp_clauses_1, at gimplify.c:8721)
    
            Backported from mainline
            2016-12-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/78866
            * openmp.c (resolve_omp_clauses): Diagnose assumed size arrays in
            OpenMP map, to and from clauses.
            * trans-openmp.c: Include diagnostic-core.h, temporarily redefining
            GCC_DIAG_STYLE to __gcc_tdiag__.
            (gfc_omp_finish_clause): Diagnose implicitly mapped assumed size
            arrays.
    
            * gfortran.dg/gomp/map-1.f90: Add expected error.
            * gfortran.dg/gomp/pr78866-1.f90: New test.
            * gfortran.dg/gomp/pr78866-2.f90: New test.
    
    From-SVN: r244549

commit ecd7cc381ae949f5a743ae4ae2e1424ac9dc0a98
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Jan 17 10:09:47 2017 +0000

    backport: re PR rtl-optimization/78617 (LRA clobbers live register during rematerialization)
    
    2017-01-17 Thomas Preud'homme <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-12-07 Thomas Preud'homme <thomas.preudhomme@arm.com>
    
        gcc/
        PR rtl-optimization/78617
        * lra-remat.c (do_remat): Initialize live_hard_regs from live in
        registers, also setting hard registers mapped to pseudo registers.
    
        gcc/testsuite/
        PR rtl-optimization/78617
        * gcc.c-torture/execute/pr78617.c: New test.
    
    From-SVN: r244525

commit edacb39acac2d6a3bd8df6cd19ba871076c81fec
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 17 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r244513

commit c2188b4555de2a2d93eb558cd162766419e5315b
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Jan 16 15:30:58 2017 +0200

    PR libstdc++/78389 fix backwards size adjustments
    
    Backport from mainline
    2017-01-16  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/78389
    * include/bits/list.tcc (merge(list&&)): Fix backwards size adjustments.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/78389.cc: Add
    better test for the sizes.
    
    From-SVN: r244492

commit 2c361c6777155c244f37063845cb0a112df459de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 16 00:16:16 2017 +0000

    Daily bump.
    
    From-SVN: r244481

commit 346b5e123b023d3b6df379d3f82ba50f46bdff38
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Sun Jan 15 18:11:46 2017 +0200

    backport: re PR libstdc++/78389 (list::merge and list::sort are not exception safe)
    
    Backport from mainline
    2017-01-13  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/78389
    * include/bits/list.tcc (merge(list&&)):
    Adjust list sizes if the comparator throws.
    (merge(list&&, _StrictWeakOrdering)): Likewise.
    * testsuite/23_containers/list/operations/78389.cc: New.
    
    From-SVN: r244474

commit 8f2b17cc52c290750ef569f93c9b0038bc3f576e
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Sun Jan 15 18:03:16 2017 +0200

    backport: Make the perfect-forwarding constructor of a two-element tuple sfinae away when the first argument is an allocator_arg.
    
    Backport from mainline
    2016-12-19  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    Make the perfect-forwarding constructor of a two-element tuple
    sfinae away when the first argument is an allocator_arg.
    * include/std/tuple (tuple(_U1&&, _U2&&)): Constrain.
    * testsuite/20_util/tuple/cons/allocator_with_any.cc: New.
    
    From-SVN: r244473

commit 7b4e1cc2f8acf9bdb54c8403b5507ea68e71ff69
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 15 00:16:17 2017 +0000

    Daily bump.
    
    From-SVN: r244470

commit db5d34b6ac14d0a942d9bb86e8504ede81f57fc9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 14 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r244458

commit 2b04f0f333799a9848dd5f85b9bc1cdfd1374a19
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Fri Jan 13 13:09:30 2017 +0000

    backport: re PR target/78253 ([ARM] call weak function instead of strong when called through pointer)
    
    2017-01-13  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline r244320.
            2017-01-11  Christophe Lyon  <christophe.lyon@linaro.org>
    
            PR target/78253
            * config/arm/arm.c (legitimize_pic_address): Handle reference to
            weak symbol.
            (arm_assemble_integer): Likewise.
    
    From-SVN: r244437

commit 596f997bc749a5b643cab425ed24d3f58244b89a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 13 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244390

commit 1f97b6f7e89342360d03f3befe23a0efdf214a5c
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Jan 12 17:19:17 2017 +0000

    re PR target/79044 (ICE in insn_is_swappable_p, at config/rs6000/rs6000.c:41191)
    
    [gcc]
    
    2017-01-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79044
            * config/rs6000/rs6000.c (insn_is_swappable_p): Mark
            element-reversing loads and stores as not swappable.
    
    [gcc/testsuite]
    
    2017-01-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/79044
            * gcc.target/powerpc/swaps-p8-26.c: New.
    
    From-SVN: r244373

commit f2796b429337ae559c71fd50d7e2207d7bdbd7a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 12 00:16:10 2017 +0000

    Daily bump.
    
    From-SVN: r244345

commit 7c1f165cd2ae702fcd6c4892df25585894e045fe
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Jan 11 23:00:59 2017 +0100

    i386.c (memory_address_length): Increase len only when rip_relative_addr_p returns false.
    
            * config/i386/i386.c (memory_address_length): Increase len
            only when rip_relative_addr_p returns false.
    
    From-SVN: r244342

commit 6207d224120c15a20d831e009bf177321da89a5b
Author: Nathan Sidwell <nathan@acm.org>
Date:   Wed Jan 11 20:49:50 2017 +0000

    re PR c++/77812 (incorrectly rejects valid C++ code that uses enum in template instantiation)
    
            cp/
            PR c++/77812
            * name-lookup.c (set_namespace_binding_1): An overload of 1 decl
            is a new overload.
    
            testsuite/
            PR c++/77812
            * g++.dg/pr77812.C: New.
    
    From-SVN: r244336

commit ecedfe272540ad22ee5b1348afc4df3d92374383
Author: Maxim Ostapenko <m.ostapenko@samsung.com>
Date:   Wed Jan 11 16:53:52 2017 +0000

    re PR lto/79042 (LTO doesn't propagate node->dynamically_initialized bit for varpool nodes.)
    
            PR lto/79042
            * lto-cgraph.c (lto_output_varpool_node): Pack dynamically_initialized
            bit.
            (input_varpool_node): Unpack dynamically_initialized bit.
            * lto-streamer.h (LTO_minor_version): Bump version.
    
    From-SVN: r244324

commit 5eeb5987eea3c79b491f482a5fa52a642f2d498d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 11 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r244301

commit e5bf708098e75b4f4249b2e6a57268f6ce2db476
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jan 10 20:03:00 2017 +0000

    backport: re PR target/78900 (ICE in gcc.target/powerpc/signbit-3.c)
    
    2017-01-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/78900
            * config/rs6000/rs6000.c (rs6000_split_signbit): Change some
            assertions.  Add support for doing the signbit if the IEEE 128-bit
            floating point value is in a GPR.
            * config/rs6000/rs6000.md (Fsignbit): Delete.
            (signbit<mode>2_dm): Delete using <Fsignbit> and just use "wa".
            Update the length attribute if the value is in a GPR.
            (signbit<mode>2_dm_<su>ext): Add combiner pattern to eliminate
            the sign or zero extension instruction, since the value is always
            0/1.
            (signbit<mode>2_dm2): Delete using <Fsignbit>.
    
    From-SVN: r244285

commit d780d008fef21ef71ca88a5b8cc29e6172552602
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 10 15:10:15 2017 +0100

    Do not error when -E provided (PR pch/78970).
    
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-09  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * gcc.c (driver_handle_option): Handle OPT_E and set
            have_E.
            (lookup_compiler): Do not show error message with have_E.
    
    From-SVN: r244270

commit 2cb26363f7fd58c147ba57564f58f4ab80bef0de
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 10 15:09:43 2017 +0100

    Error for '-' as filename of a precompiled header (PR pch/78970)
    
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-05  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * gcc.c (lookup_compiler): Reject '-' filename for a precompiled
            header.
    2017-01-10  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2017-01-05  Martin Liska  <mliska@suse.cz>
    
            PR pch/78970
            * c-opts.c (c_common_post_options): Reject '-' filename for a precompiled
            header.
    
    From-SVN: r244269

commit 818c74cc4f738aec794333a0ddc3bbe7e6b7ccb3
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Tue Jan 10 14:00:31 2017 +0100

    [PR tree-optimization/78024] Clear basic block flags before using BB_VISITED for OpenACC loops processing
    
            gcc/
            PR tree-optimization/78024
            * omp-low.c (oacc_loop_discovery): Call clear_bb_flags.
    
    Backport from trunk r241334:
    
            gcc/testsuite/
            2016-10-19  Thomas Schwinge  <thomas@codesourcery.com>
    
            PR tree-optimization/78024
            * gcc.dg/goacc/loop-processing-1.c: New file.
    
    From-SVN: r244264

commit c10e984780faa4a900b99415877ff45893cf7f95
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Tue Jan 10 13:07:13 2017 +0100

    [PTX] fix worker propagation ICE
    
    Backport trunk r239086:
    
            gcc/
            2016-08-03  Nathan Sidwell  <nathan@codesourcery.com>
    
            * config/nvptx/nvptx.c (nvptx_declare_function_name): Round frame
            size to DImode boundary.
            (nvptx_propagate): Likewise.
    
            libgomp/
            2016-08-03  Nathan Sidwell  <nathan@codesourcery.com>
    
            * testsuite/libgomp.oacc-c-c++-common/crash-1.c: New.
    
    Backport trunk r239125 'Make libgomp.oacc-c-c++-common/crash-1.c a "link" test,
    and don't hardcode -O0':
    
            libgomp/
            2016-08-04  Thomas Schwinge  <thomas@codesourcery.com>
    
            * testsuite/libgomp.oacc-c-c++-common/crash-1.c: Make it a "link"
            test, and don't hardcode -O0.
    
    From-SVN: r244261

commit 44d375f23b70617c5f794cf0618e01940c511a84
Author: Chung-Ju Wu <jasonwucj@gmail.com>
Date:   Tue Jan 10 04:18:11 2017 +0000

    re PR target/70668 (nds32-elf toolchain fails to compile on OSX)
    
    Fix PR70668.
    
            Backport from mainline
            2016-04-28  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70668
            * config/nds32/nds32.md (casesi): Don't access the operands array
            out of bounds.
    
    From-SVN: r244257

commit ec5fe90c4c1fcca049552386b80b12bc0870b402
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 10 00:16:21 2017 +0000

    Daily bump.
    
    From-SVN: r244254

commit 31a035b1da58821c905a458db8696afc54bd85d8
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Mon Jan 9 22:01:26 2017 +0100

    backport: [multiple changes]
    
    2017-01-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
    toplevel:
        Backport from mainline
        2016-10-10  Andreas Tobler <andreast@gcc.gnu.org>
    
        * configure.ac: Add aarch64-*-freebsd*.
        * configure: Regenerate.
    
    gcc:
        Backport from mainline
        2016-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: Add aarch64-*-freebsd* support.
        * config.host: Likewise.
        * config/aarch64/aarch64-freebsd.h: New file.
        * config/aarch64/t-aarch64-freebsd: Ditto.
    
    libgcc:
        Backport from mainline
        2016-10-10  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.host: Add support for aarch64-*-freebsd*.
    
    From-SVN: r244242

commit f0b93d7c2037eff6c1f13a016bcd4d712eee91b0
Author: Bill Seurer <seurer@linux.vnet.ibm.com>
Date:   Mon Jan 9 20:45:59 2017 +0000

    backport: re PR sanitizer/65479 (sanitizer stack trace missing frames past #0 on powerpc64)
    
    2017-01-09  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-21  Bill Seurer  <seurer@linux.vnet.ibm.com>
    
            PR sanitizer/65479
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Add
            -fasynchronous-unwind-tables option when -fsanitize=address is
            specified.
    
    From-SVN: r244241

commit c17b0b7d8df786f052dfdc259e9df4cebcaa61eb
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Mon Jan 9 21:36:00 2017 +0100

    backport: [multiple changes]
    
    2017-01-09  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2016-09-19  Richard Biener  <rguenther@suse.de>
    
        * dwarf2out.c (dwarf2out_late_global_decl): When being during the
        early debug phase do not add locations but only const value
        attributes.
    
        Backport from mainline
        2016-10-20  Richard Biener  <rguenther@suse.de>
    
        * cgraphunit.c (analyze_functions): Set node->definition to
        false to signal symbol removal to debug_hooks->late_global_decl.
    
    From-SVN: r244240

commit b9f62ec37b1ffac81fff7307c142023fadaee894
Author: Andre Vieira <andre.simoesdiasvieira@arm.com>
Date:   Mon Jan 9 09:58:54 2017 +0000

    PR78255: Make postreload aware of NO_FUNCTION_CSE
    
    gcc/ChangeLog:
    2017-01-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            PR rtl-optimization/78255
            * gcc/postreload.c (reload_cse_simplify): Do not CSE a function if
            NO_FUNCTION_CSE is true.
    
    gcc/testsuite/ChangeLog:
    2017-01-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-20  Andre Vieira  <andre.simoesdiasvieira@arm.com>
    
            * gcc.target/arm/pr78255-2.c: Fix to work for targets
            that do not optimize for tailcall.
    
    2017-01-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            Backport from mainline
            2016-12-09  Andre Vieira <andre.simoesdiasvieira@arm.com>
    
            PR rtl-optimization/78255
            * gcc.target/aarch64/pr78255.c: New.
            * gcc.target/arm/pr78255-1.c: New.
            * gcc.target/arm/pr78255-2.c: New.
    
    From-SVN: r244220

commit 0384f3261ddb325367e4bf905478d7cd70958dc7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 9 00:16:13 2017 +0000

    Daily bump.
    
    From-SVN: r244212

commit 7e172965a3f451bdce170dd19a5b913f9b2b192b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 8 00:16:11 2017 +0000

    Daily bump.
    
    From-SVN: r244203

commit 4f27756f62cb87972fd2af30cd48130338c6ed72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jan 7 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r244190

commit 6e2367931eacff79c558224e48c8f210c7baa988
Author: Wilco Dijkstra <wdijkstr@arm.com>
Date:   Fri Jan 6 14:26:06 2017 +0000

    With -fpu=neon DI mode shifts are expanded after reload.
    
    With -fpu=neon DI mode shifts are expanded after reload.  DI mode registers can
    either fully or partially overlap on both ARM and Thumb-2.  However the shift
    expansion code can only deal with the full overlap case, and generates incorrect
    code for partial overlaps.  The fix is to add new variants that support either
    full overlap or no overlap.
    
            Backport from mainline
            2016-10-25  Wilco Dijkstra  <wdijkstr@arm.com>
    
        gcc/
            PR target/78041
            * config/arm/neon.md (ashldi3_neon): Add "r 0 i" and "&r r i" variants.
            Remove partial overlap check for shift by 1.
            (ashldi3_neon): Likewise.
        testsuite/
            * gcc.target/arm/pr78041.c: New test.
    
    From-SVN: r244161

commit 9572e340a58419872293b77973c5111ebf67b487
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 6 13:20:10 2017 +0000

    Add deleted std::thread(const thread&&) constructor
    
    Backport from mainline
    2017-01-03  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78956
            * include/std/thread (thread(const thread&&)): Add deleted
            constructor.
            * testsuite/30_threads/thread/cons/lwg2097.cc: New test.
    
    From-SVN: r244153

commit ec44d2f3047b8a9af771074309d593291bbfa904
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jan 6 13:20:05 2017 +0000

    PR78991 make __gnu_cxx::__ops constructors explicit
    
            PR libstdc++/78991
            * include/bits/predefined_ops.h (_Iter_comp_iter, _Iter_comp_val)
            (_Val_comp_iter, _Iter_equals_val, _Iter_pred, _Iter_comp_to_val)
            (_Iter_comp_to_iter, _Iter_negate): Make constructors explicit.
            * testsuite/25_algorithms/sort/78991.cc: New test.
    
    From-SVN: r244152

commit 9a9b62cba025b1b5edb5ac06f2a2e212970463b4
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jan 6 03:36:38 2017 +0000

    backport: rs6000.c (rs6000_option_override_internal): Add comments to explain why certain error messages make mention of undocumented...
    
    gcc/ChangeLog:
    
    2017-01-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline
            2016-07-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Add
            comments to explain why certain error messages make mention of
            undocumented options.
            (rs6000_invalid_builtin): Change error messages to replace mention
            of undocumented options with mention of the -mcpu=power9 option
            that enables those undocumented options.
            * config/rs6000/rs6000.h: Add macro definition of MASK_FLOAT128
            and change the macro definition of RS6000_BTM_FLOAT128 to correct
            an error that was discovered during the development of this patch.
            * config/rs6000/rs6000.opt: Add the Undocumented qualifier to the
            mpower9-fusion, mpower9-vector, mpower9-dform, and mmodulo entries.
            * doc/extend.texi (PowerPC AltiVec Built-in Functions): Modify
            descriptions of built-in functions so that they depend on
            -mcpu=power9 instead of on the corresponding undocumented flags.
            * doc/invoke.texi (Option Summary):  Remove all mention of newly
            undocumented flags.
            (IBM RS/6000 and PowerPC Options): Likewise.
            * doc/md.texi (Constraints for Particuliar Machines): Remove all
            mention of newly undocumented flags.
    
    From-SVN: r244123

commit 53a53f9ad7559ebd3b59057092e6c22bb53d3284
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jan 6 00:16:08 2017 +0000

    Daily bump.
    
    From-SVN: r244118

commit fb7e968ff4115c96cc773724c99c8dbbc1b9d373
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Jan 5 10:11:28 2017 +0000

    varasm: Propagate litpool decl alignment to generated RTX.
    
    When pushing a value into the literal pool the resulting decl might
    get a higher alignment than the original expression depending on how a
    target defines CONSTANT_ALIGNMENT.  Generating an RTX for the constant
    pool access we currently use the alignment from the original
    expression.  Changed with the attached patch.
    
    This fixes a GCC 6 regression for S/390.  For arrays of string
    constants as in the attached testcase encode_section_info is not able
    to figure out that the constant pool slot is already properly aligned
    since the mem_align field in the rtx is not set properly.
    
    gcc/ChangeLog:
    
    2017-01-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * varasm.c (build_constant_desc): Use the alignment of the var
            decl instead of the original expression.
    
    gcc/testsuite/ChangeLog:
    
    2017-01-05  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-22  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/litpool-str-1.c: New test.
    
    From-SVN: r244100

commit 040d93fad7adbf64cc2d76ed51ee57f91235f7a3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jan 5 00:16:14 2017 +0000

    Daily bump.
    
    From-SVN: r244082

commit 650a7590daddf4ff1d8edaccc426b98e2df9596c
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Jan 4 12:35:32 2017 +0000

    backport: re PR tree-optimization/71055 (FAIL: gcc.dg/torture/pr53663-1.c   -Os  execution test)
    
    2017-01-04  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-05-11  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71055
            * tree-ssa-sccvn.c (vn_reference_lookup_3): When native-interpreting
            sth with precision not equal to access size verify we don't chop
            off bits.
    
            * gcc.dg/torture/pr71055.c: New testcase.
    
    From-SVN: r244053

commit 516f21b1f2f71a4d7e570d5f192282ecfd94f9d2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jan 4 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r244039

commit e113820328b4557fe1ccffe7207c256271b22227
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 3 13:15:32 2017 +0100

    Do not suggest -fsanitize=all (PR driver/78863).
    
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-21  Jakub Jelinek  <jakub@redhat.com>
                        Martin Liska  <mliska@suse.cz>
    
            PR driver/78863
            * gcc.c (driver::build_option_suggestions): Do not add
            -fsanitize=all as a suggestion candidate.
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-21  Martin Liska  <mliska@suse.cz>
    
            PR driver/78863
            * gcc.dg/spellcheck-options-13.c: New test.
    
    From-SVN: r244021

commit 1bd768b6610dfc48276241517f6dbaa443b59ad5
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 3 13:09:05 2017 +0100

    Fix tree-optimization/78886.
    
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-22  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78886
            * tree-ssa-strlen.c (handle_builtin_malloc): Return when LHS
            is equal to NULL.
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-22  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78886
            * gcc.dg/tree-ssa/pr78886.c: New test.
    
    From-SVN: r244020

commit b0ce8fb7e21cb4039067539bd2badf0c524f5270
Author: Martin Liska <mliska@suse.cz>
Date:   Tue Jan 3 13:04:05 2017 +0100

    Fill bitregion_{start,end} in store_constructor (PR tree-optimization/78428)
    
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78428
            * expr.c (store_constructor_field): Add new arguments to the
            function.
            (store_constructor): Set up bitregion_end and add
            gcc_unreachable to fields that have either non-constant size
            or (and) offset.
    2017-01-03  Martin Liska  <mliska@suse.cz>
    
            Backport from mainline
            2016-12-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/78428
            * gcc.dg/tree-ssa/pr78428.c: New test.
    
    From-SVN: r244018

commit 5db3bd7fc756bc793ed07596749b01f5e531990c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jan 3 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r244008

commit a19825e833d44101984f5204ae1d4954d0c81a2b
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jan 2 20:21:45 2017 +0000

    * es.po: Update.
    
    From-SVN: r244005

commit c058c14fdee237b321734dbb2e5022554aa58656
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jan 2 00:16:09 2017 +0000

    Daily bump.
    
    From-SVN: r243999

commit f5ca578b5a7df10a58e570b4cc282645d364604f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jan 1 00:16:12 2017 +0000

    Daily bump.
    
    From-SVN: r243989

commit 54eaa677e589dd4d688ac460f09c830bd300ed95
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 31 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r243986

commit c01de8d3275c05c7f3945c9bcfeaf09e2ac2831e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Dec 30 20:18:25 2016 +0100

    re PR translation/78745 (Truncated messages in po file)
    
            PR translation/78745
            * exgettext: Handle multi-line help texts in *.opt files.
            * gcc.pot: Regenerate.
    
    From-SVN: r243982

commit 9d2865ed92a12e21676e5a73e63836c648b4f323
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Dec 30 18:47:07 2016 +0000

    * es.po, fr.po: Update.
    
    From-SVN: r243980

commit e6fce0ad11f69690e674b223f2db010b77fe8b3c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 30 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r243971

commit ed84553200e6f99efc8d46f8cb671637fe66856d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 29 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r243958

commit c5065d6afaef5876ca1f7e875e4bf6d8fbcdbb55
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r243951

commit 88d658ec52d0f92117e1953abc85573907e72d88
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Dec 27 15:45:24 2016 +0100

    re PR translation/78922 (Comment submitted for translation in stringop.opt)
    
    2016-12-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR translation/78922
            * config/i386/stringop.opt: Remove.
    
            * gcc.pot: Regenerate.
    
    From-SVN: r243939

commit a469aa88a1e8473471d2a4d1d9e81d6bcbfa0561
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 27 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r243931

commit 3dcbd5c3221d2da47534820ef28aafd4d0e479e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 26 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r243921

commit 2dc8c3e338332e602e9a36a9268be84ccc28d1d5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 25 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r243918

commit 8c35bdda3c28fbf95bc1b2cf1ed5696c16f3a612
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 24 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r243912

commit 01f802723d9db7d74a17c03839a0c01cf9120ae5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 23 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r243903

commit ffbe1a15b99f7d80b9760f3cedf40fa6f0573a74
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 22 23:55:50 2016 +0000

    * es.po: Update.
    
    From-SVN: r243901

commit e4f35acc2f4a077308fd4b3042a1f9e01d814534
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Thu Dec 22 17:05:13 2016 +0000

    backport: re PR fortran/78239 (ICE in char_len_param_value, at fortran/decl.c:926, with -fimplicit-none)
    
    2016-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78239
            * decl.c (char_len_param_value): Also check for -fimplicit-none
            when determining if implicit none is in force.
    
    2016-12-22  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78239
            * gfortran.dg/fimplicit_none_1.f90:  New test.
            * gfortran.dg/fimplicit_none_2.f90:  New test.
    
    From-SVN: r243891

commit b2a8a98e32a01cc2d5cc1947def496b5380f77e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 22 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243881

commit a95c09b297334c1096d753d99063e96cf477108e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 21 13:52:06 2016 +0100

    re PR c/77767 (Side-effect from VLA array parameters lost)
    
            PR c/77767
            * c-decl.c (grokdeclarator): If *expr is non-NULL, append expression
            to *expr instead of overwriting it.
    
            * gcc.c-torture/execute/pr77767.c: New test.
    
    From-SVN: r243851

commit 25298171d373109ee9ce8e8f3bcd1b68c367ffad
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 21 13:49:44 2016 +0100

    backport: re PR ipa/77905 (ICE at -Os and above in both 32-bit and 64-bit modes on x86_64-linux-gnu (internal compiler error: in ipa_comdats, at ipa-comdats.c:352))
    
            Backported from mainline
            2016-12-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR ipa/77905
            * ipa-pure-const.c (cdtor_p): Return true for
            DECL_STATIC_{CON,DE}STRUCTOR even when it is
            DECL_LOOPING_CONST_OR_PURE_P.
    
            * g++.dg/ipa/pr77905.C: New test.
    
    From-SVN: r243850

commit 79add50562ba925ae488af12f845fb925baa319b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 21 11:33:49 2016 +0100

    * BASE-VER: Set to 6.3.1.
    
    From-SVN: r243845

commit 91c632c88994dca583bcd94e39cd3eba1506ecfe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 21 07:51:43 2016 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r243836

commit a48323ff520827d38b0ca4b6af4dc87fe9e26b50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 21 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r243834

commit f8177cc20277cdb0837cee2c0b9b6cdcb6da271d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 20 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r243816

commit 79f80616ab68bd0b40bf837639cf08d062350074
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 19 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r243787

commit b4a4863adf6cf4e9c109e0e3350765400cf18fdb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 18 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243780

commit 256c269e0182006284f57f078c809eefb4d318a0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 17 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r243768

commit 9b6e88ed6f3fd54752ad15a502a3224d16808599
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Dec 16 19:02:13 2016 +0000

    * fr.po: Update.
    
    From-SVN: r243760

commit 9cc9e2a36035800e3a5f42ec3df2201b400f7f35
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 16 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243733

commit 93a6c49f56f0577c32ba90a25ea25b69f67394fc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Dec 15 16:11:05 2016 +0100

    re PR middle-end/78540 (ICE: in df_refs_verify, at df-scan.c:4062 with -O -march=core2)
    
            PR middle-end/78540
            * gcc.dg/pr78540.c: Add -w to dg-options.
    
            PR target/77834
            * gcc.dg/pr77834.c: Add -w to dg-options.
    
    From-SVN: r243693

commit 31d3e9c03a5f07e8a3e785138eda83384c2baeae
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 15 01:20:49 2016 +0000

    * es.po: Update.
    
    From-SVN: r243680

commit a11888f4d921cf4f586db6d23987b3f780594a40
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 15 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243677

commit 7373f20409bef86bc0a471f1cfc599fcf0b05f94
Author: Nathan Sidwell <nathan@acm.org>
Date:   Wed Dec 14 17:23:06 2016 +0000

    re PR c++/78701 (ICE: unexpected expression N of kind template_parm_index)
    
            PR c++/78701
            * pt.c (type_unification_real): Check tsubst arg doesn't have
            remaining template parms before converting it.
    
            PR c++/78701
            * g++.dg/cpp0x/pr78701.C: New.
    
    From-SVN: r243660

commit 2a5c20fea90412ecc547d8399039ff61b0882ec4
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Dec 14 16:44:07 2016 +0100

    re PR target/59874 (Missing builtin (__builtin_clzs) when compiling with g++)
    
            PR target/59874
            * config/i386/i386.c (enum ix86_builtins): Add IX86_BUILTIN_CLZS
            and IX86_BUILTIN_CTZS.
            (bdesc_args): Add __builtin_clzs and __builtin_ctzs.
            (ix86_fold_builtin): Handle IX86_BUILTIN_CTZS and IX86_BUILTIN_CLZS.
    
    From-SVN: r243651

commit b150535f529be53a8e199531e9dfb8403fd160f5
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Wed Dec 14 11:50:46 2016 +0100

    re PR target/78796 (TLS fails to link on aarch64 with -mcmodel=large)
    
            PR target/78796
            * config/aarch64/aarch64.c (aarch64_classify_symbol): Merge large
            model checks into switch.
    
            * gcc.dg/tls/pr78796.c: New test.
    
    From-SVN: r243646

commit e2574ed33378026101e2b0a7e1a9e2dd876a6a60
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Dec 14 10:32:56 2016 +0000

    re PR tree-optimization/78731 (Possible bug with switch when optimization is turned on.)
    
    2016-12-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78731
            * gcc.dg/torture/pr78731.c: New testcase.
    
    From-SVN: r243642

commit 105ef8df55ab0c810dd083ad98dc5829d25e4a52
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 14 09:58:31 2016 +0000

    Improve comment for struct symbolic_number in bswap pass
    
    2016-12-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-25  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * tree-ssa-math-opts.c (struct symbolic_number): Improve comment.
    
    From-SVN: r243636

commit 39b05e20efb43eebc1018f5b0ee1a2ce2486125b
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 14 09:58:23 2016 +0000

    Fix PR77673: bswap loads passed end of object
    
    2016-12-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-25  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR tree-optimization/77673
        * tree-ssa-math-opts.c (struct symbolic_number): Add new src field.
        (init_symbolic_number): Initialize src field from src parameter.
        (perform_symbolic_merge): Select most dominated statement as the
        source statement.  Set src field of resulting n structure from the
        input src with the lowest address.
        (find_bswap_or_nop): Rename source_stmt into ins_stmt.
        (bswap_replace): Rename src_stmt into ins_stmt.  Initially get source
        of load from src field rather than insertion statement.  Cancel
        optimization if statement analyzed is not dominated by the insertion
        statement.
        (pass_optimize_bswap::execute): Rename src_stmt to ins_stmt.  Compute
        dominance information.
    
        gcc/testsuite/
        PR tree-optimization/77673
        * gcc.dg/pr77673.c: New test.
    
    From-SVN: r243635

commit 16781eb7250580ff409d14e73a5954c14940083a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 14 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r243628

commit 86c5a6eb3f5598453ca352b202f5efcf3c9e4e75
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Dec 13 23:56:17 2016 +0000

    backport: re PR target/72717 (ICE: in emit_move_insn, at expr.c:3693 with vector shift @ powerpc64le)
    
    [gcc]
    2016-12-13  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/72717
            * config/rs6000/rs6000.c (rs6000_expand_vector_init): If the
            V2DImode elements are SUBREG's convert the result into DImode
            rather than failing in emit_move_insn.
    
    [gcc/testsuite]
    2016-12-13  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-07  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/72717
            * gcc.target/powerpc/pr72717.c: New test.
    
    From-SVN: r243626

commit 54d36ec556bb03aec71ddd72ca47de1fcd9a64b1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Dec 13 07:20:44 2016 +0100

    re PR c++/78761 (C++14, compiler generate mangled name that can not be demangled)
    
            PR c++/78761
            * cp-demangle.c (cplus_demangle_type): Demangle Dc as decltype(auto).
            * testsuite/demangle-expected: Add test for decltype(auto).
    
    From-SVN: r243594

commit 3dd7ea46f931aa1de715ca680918ba21ad6458a7
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Tue Dec 13 01:10:33 2016 +0000

    [Darwin,PPC] Back-port fix for PR71496.
    
    gcc/
    
    2016-12-13  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            PR rtl-optimization/71496
            * config/rs6000/darwin.md (load_macho_picbase_si): Mark as non-
            copyable.  (load_macho_picbase_di, reload_macho_picbase_si,
            reload_macho_picbase_di): Likewise.
    
    From-SVN: r243590

commit f0b33ae7c0a44082ebc0e62db94aa936f71377be
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 13 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r243587

commit c629e659d215a7772bb14310078aa31e8ac33b3a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 18:03:30 2016 +0000

    Add missing header in Filesystem TS configure tests
    
    Backport from mainline
    2016-10-26  Uros Bizjak  <ubizjak@gmail.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Include <limits.h>
            for PATH_MAX in realpath test.
            * configure: Regenerate.
    
    From-SVN: r243577

commit c3e169de43bae6d22c65faf2ebd20b26a83e8356
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 18:02:55 2016 +0000

    Remove bogus ChangeLog entries from r243569 to r243574
    
    For some reason git-svn created a number of duplicate ChangeLog entries
    and committed them.
    
    From-SVN: r243576

commit bc1564883d884a094e9c668238f3d14195caa223
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 17:47:01 2016 +0000

    Fix configure test for sendfile()
    
            Backport from mainline
            2016-05-25  Jonathan Wakely  <jwakely@redhat.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Fix test for sendfile.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
    From-SVN: r243574

commit 8a26eb21ede68c41d79ddf5577ed19fc429eda82
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 17:46:57 2016 +0000

    Improve tests for contents of <new> header
    
            Backport from mainline
            2016-12-07  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/18_support/headers/new/synopsis.cc: Add C++14 declarations
            and use effective-target to do test for C++11 and later.
            * testsuite/18_support/headers/new/synopsis_cxx98.cc: New test.
    
    From-SVN: r243573

commit afa5dd9866b615f5761e5d49821adcf27ce050cf
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 17:46:53 2016 +0000

    PR78465 Remove runtime tests for <atomic> macros
    
            PR libstdc++/78465
            * testsuite/29_atomics/headers/atomic/macros.cc: Replace runtime tests
            with preprocessor conditions.
    
    From-SVN: r243572

commit f70c36d1661aeddd393e62c6594610c1e19d3204
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 17:46:48 2016 +0000

    Enable experimental::enable_shared_from_this explicitly
    
    Backport from mainline
    2016-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/shared_ptr.h (experimental::shared_ptr):
            Change relevant constructors to call _M_enable_shared_from_this_with.
            (experimental::shared_ptr::__efst_base_t)
            (experimental::shared_ptr::__has_efst_base): Helpers to detect
            accessible and unambiguous enable_shared_from_this bases.
            (experimental::shared_ptr::_M_enable_shared_from_this_with): Define.
            (experimental::__enable_shared_from_this_helper): Remove overload for
            std::experimental::enable_shared_from_this.
            (experimental::__expt_enable_shared_from_this_base): Define friend
            function to select a std::experimental::enable_shared_from_this base.
            * testsuite/experimental/memory/shared_ptr/cons/
            enable_shared_from_this.cc: New test.
            * testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:
            Adjust expected behaviour for shared_ptr<A[]>.
    
    From-SVN: r243571

commit 4f0f0f1e00e25268767fb346319f81acbbf2e506
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Dec 12 17:46:42 2016 +0000

    Remove stray character at end of dg-do directive
    
            * testsuite/experimental/filesystem/operations/is_empty.cc:
            Remove stray character at end of dg-do directive.
    
    From-SVN: r243570

commit 2c85f9174f64c9d9e18f4a0b56bbe02779cee8a2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 17:44:08 2016 +0000

    Fix configure test for sendfile()
    
            Backport from mainline
            2016-05-25  Jonathan Wakely  <jwakely@redhat.com>
    
            * acinclude.m4 (GLIBCXX_CHECK_FILESYSTEM_DEPS): Fix test for sendfile.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
    From-SVN: r243569

commit 0e40fe8457c029d01e999589610b7be18a7a4d7a
Author: Nathan Sidwell <nathan@acm.org>
Date:   Mon Dec 12 17:38:53 2016 +0000

    re PR other/78252 (C++ demangler crashes with infinite recursion with lambda (auto))
    
            PR c++/78252
            * cp-demangle.c (struct d_print_info): Add is_lambda_arg field.
            (d_print_init): Initialize it.
            (d_print_comp_inner) <DEMANGLE_COMPONENT_TEMPLATE_PARAM>: Check
            is_lambda_arg for auto.
            <DEMANGLE_COMPONENT_REFERENCE,
            DEMANGLE_COMPONENT_RVALUE_REFERENCE>: Skip smashing check when
            is_lambda_arg.
            <DEMANGLE_COMPONENT_LAMBDA>: Increment is_lambda_arg around arg
            printing.
            * testsuite/demangle-expected: Add lambda auto mangling cases.
    
    From-SVN: r243568

commit f3362389960d3b27bd8ae830fd4c65b6fc8d19ef
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 16:35:54 2016 +0000

    Improve tests for contents of <new> header
    
            Backport from mainline
            2016-12-07  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/18_support/headers/new/synopsis.cc: Add C++14 declarations
            and use effective-target to do test for C++11 and later.
            * testsuite/18_support/headers/new/synopsis_cxx98.cc: New test.
    
    From-SVN: r243563

commit eb5054743ba44ed49b894c58cd77b1b812a6c5fd
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 16:20:49 2016 +0000

    PR78465 Remove runtime tests for <atomic> macros
    
            PR libstdc++/78465
            * testsuite/29_atomics/headers/atomic/macros.cc: Replace runtime tests
            with preprocessor conditions.
    
    From-SVN: r243561

commit 7cbb51996f802f9499ec57f6d9d0b289c67efe08
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 16:11:45 2016 +0000

    Enable experimental::enable_shared_from_this explicitly
    
    Backport from mainline
    2016-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/shared_ptr.h (experimental::shared_ptr):
            Change relevant constructors to call _M_enable_shared_from_this_with.
            (experimental::shared_ptr::__efst_base_t)
            (experimental::shared_ptr::__has_efst_base): Helpers to detect
            accessible and unambiguous enable_shared_from_this bases.
            (experimental::shared_ptr::_M_enable_shared_from_this_with): Define.
            (experimental::__enable_shared_from_this_helper): Remove overload for
            std::experimental::enable_shared_from_this.
            (experimental::__expt_enable_shared_from_this_base): Define friend
            function to select a std::experimental::enable_shared_from_this base.
            * testsuite/experimental/memory/shared_ptr/cons/
            enable_shared_from_this.cc: New test.
            * testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:
            Adjust expected behaviour for shared_ptr<A[]>.
    
    From-SVN: r243560

commit e0e2d3087fc6c127bcb3928bcf316e7abd1b7689
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 14:48:11 2016 +0000

    Remove stray character at end of dg-do directive
    
            * testsuite/experimental/filesystem/operations/is_empty.cc:
            Remove stray character at end of dg-do directive.
    
    From-SVN: r243556

commit 7d4631e21bd9b761042b8073dd9eefd57a8c8933
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Dec 12 14:09:39 2016 +0000

    Backport all Filesystem library fixes from trunk
    
    This implements the following LWG DRs:
    2681 2682 2683 2706 2707 2712 2720 2723
    
            Backport from mainline
            PR libstdc++/70975
            PR libstdc++/71337
            PR libstdc++/78111
            * include/experimental/bits/fs_dir.h (recursive_directory_iterator):
            Overload pop (LWG 2706).
            * include/experimental/bits/fs_fwd.h (perms::resolve_symlinks):
            Replace with symlink_nofollow (LWG 2720).
            * include/experimental/bits/fs_ops.h
            (exists(const path&, error_code&)): Clear error if status is known
            (LWG 2725).
            * include/experimental/bits/fs_path.h (__is_path_src)
            (_S_range_begin, _S_range_end): Overload to treat string_view as a
            Source object.
            (path::operator+=, path::compare): Overload for basic_string_view.
            (path::path(string_type&&))
            (path::operator=(string&&), path::assign(string_type&&)): Define
            construction and assignment from string_type rvalues (LWG 2707).
            (path::_S_convert<_Iter>(_Iter, _Iter)): Remove cv-qualifiers from
            iterator's value_type.
            (path::_S_convert<_Iter>(_Iter __first, __null_terminated)): Likewise.
            Do not use operation not supported by input iterators.
            (path::__is_path_iter_src): Add partial specialization for const
            encoded character types.
            * src/filesystem/dir.cc (open_dir): Return same value for errors
            whether ignored or not.
            (_Dir::advance(error_code*, directory_options)): Return false on
            error.
            (directory_iterator(const path&, directory_options, error_code*)):
            Create end iterator on error (LWG 2723).
            (recursive_directory_iterator(const path&, directory_options,
            error_code*)): Likewise.
            (recursive_directory_iterator::increment): Reset state on error.
            (recursive_directory_iterator::pop): Define new overload.
            * src/filesystem/ops.cc (canonical): Set error for non-existent path.
            (file_time): Take error_code parameter and check for overflow.
            (close_fd): Remove.
            (do_copy_file): Report an error if source or destination is not a
            regular file (LWG 2712). Pass error_code in file_time calls.  Just
            use close(3) instead of close_fd, to prevent retrying on error.
            Check if _GLIBCXX_USE_FCHMODAT is defined.
            [_GLIBCXX_USE_SENDFILE]: Fallback to read/write operations in case
            sendfile fails with ENOSYS or EINVAL. Pass non-null pointer to
            sendfile for offset argument.
            (copy): Update comment to refer to LWG 2681. Implement 2682 and 2683
            resolutions.
            (equivalent): Fix error handling and result when only one file exists.
            (is_empty): Fix error handling.
            (last_write_time(const path&, error_code&)): Pass error_code in
            file_time calls.
            (last_write_time(const path&, file_time_type, error_code&)): Handle
            negative times correctly.
            (permissions(const path&, perms, error_code&)): Handle
            symlink_nofollow.
            (read_symlink): Add missing ec.clear().
            (status(const path&, error_code&)): Handle EOVERFLOW.
            (temp_directory_path): Pass error_code argument to other filesystem
            operations.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Update expected behaviour on error.
            * testsuite/experimental/filesystem/iterators/pop.cc: New.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Update expected behaviour on error.
            * testsuite/experimental/filesystem/operations/copy.cc: Update
            expected behaviour for copying directories with create_symlinks.
            Verify that error_code arguments are cleared if there's no error.
            Remove files created by tests. Test copying directories.
            * testsuite/experimental/filesystem/operations/copy_file.cc: Remove
            files created by tests.
            * testsuite/experimental/filesystem/operations/create_symlink.cc: New.
            * testsuite/experimental/filesystem/operations/equivalent.cc: New.
            * testsuite/experimental/filesystem/operations/exists.cc: Test
            overload taking an error_code.
            * testsuite/experimental/filesystem/operations/is_empty.cc: New.
            * testsuite/experimental/filesystem/operations/last_write_time.cc:
            New.
            * testsuite/experimental/filesystem/operations/permissions.cc: Test
            overload taking error_code. Test symlink_nofollow on non-symlinks.
            * testsuite/experimental/filesystem/operations/read_symlink.cc: New.
            * testsuite/experimental/filesystem/operations/remove_all.cc: New.
            * testsuite/experimental/filesystem/operations/temp_directory_path.cc:
            Add testcase for inaccessible directory.
            * testsuite/experimental/filesystem/path/construct/range.cc: Test
            construction from input iterators with const value types.
            * testsuite/experimental/filesystem/path/construct/string_view.cc:
            New.
            * testsuite/util/testsuite_fs.h (scoped_file): Define RAII helper.
    
    From-SVN: r243554

commit 23cb12de3820273defa5340974c9b41e775b31ea
Author: Bernd Schmidt <bernds@redhat.com>
Date:   Mon Dec 12 13:00:53 2016 +0000

    backport: re PR tree-optimization/77309 (wrong code at -Os and above on x86_64-linux-gnu (in the 64-bit mode))
    
            Backport from mainline
            2016-11-07  Bernd Schmidt  <bschmidt@redhat.com>
    
            PR rtl-optimization/77309
            * combine.c (make_compound_operation): Allow EQ for IN_CODE, and
            don't assume an equality comparison for plain COMPARE.
            (simplify_comparison): Pass a more accurate code to
            make_compound_operation.
    
            PR rtl-optimization/77309
            * gcc.dg/torture/pr77309.c: New test.
    
    From-SVN: r243549

commit 392853cdcffe47724cbb80c0996bb7e52651b3e9
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Mon Dec 12 10:58:17 2016 +0000

    Fix PR77904: callee-saved register trashed when clobbering sp
    
    2016-12-12 Thomas Preud'homme <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-22  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/77904
        * config/arm/arm.c (thumb1_compute_save_reg_mask): Mark frame pointer
        in save register mask if it is needed.
    
        gcc/testsuite/
        PR target/77904
        * gcc.target/arm/pr77904.c: New test.
    
    From-SVN: r243543

commit 1e9238a16315cf4a5d12c38d5491e4b12da38baf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 12 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r243536

commit a9a8a7b1d0be673805bc4961fe780118553835b6
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Sun Dec 11 16:23:04 2016 +0000

    [Darwin] Back-port fix for PR67710.
    
    gcc/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
                        Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/67710
            * config.in: Regenerate
            * config/darwin-driver.c (darwin_driver_init): Emit a version string
            for the assembler.
            * config/darwin.h(ASM_MMACOSX_VERSION_MIN_SPEC): New, new tests.
            * config/darwin.opt(asm_macosx_version_min): New.
            * config/i386/darwin.h: Handle ASM_MMACOSX_VERSION_MIN_SPEC.
            * configure: Regenerate
            * configure.ac: Check for mmacosx-version-min handling.
    
    gcc/testsuite/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
                        Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
                        Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR target/67710
            *  gcc.dg/darwin-minversion-1.c: Update min version check.
            *  gcc.dg/darwin-minversion-2.c: Likewise.
            *  gcc.dg/darwin-minversion-3.c: Likewise.
    
    libgcc/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
                        Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/67710
            *  config/t-darwin: Default builds to 10.5 codegen.
    
    From-SVN: r243526

commit 2a859b9a9a96ac4b7609598fcbbf5d938d1350a8
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Sun Dec 11 16:10:48 2016 +0000

    [Darwin] Back-port fix for PR57438.
    
    gcc/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/57438
            * config/i386/i386.c (ix86_code_end): Note that we emitted code
            where the function might otherwise appear empty for picbase thunks.
            (ix86_output_function_epilogue): If we find a zero-sized function
            assume that reaching it is UB and trap.  If we find a trailing label
            append a nop.
            * config/rs6000/rs6000.c (rs6000_output_function_epilogue): If we
            find a zero-sized function assume that reaching it is UB and trap.
            If we find a trailing label, append a nop.
    
    gcc/testsuite/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/57438
            * gcc.dg/pr57438-1.c: New Test.
            * gcc.dg/pr57438-2.c: New Test.
    
    From-SVN: r243525

commit d36690d6e135da6423a127a4343e8085554c5d45
Author: Iain Sandoe <iain@codesourcery.com>
Date:   Sun Dec 11 16:01:35 2016 +0000

    [Darwin] Back-port fix for PR71767.
    
    gcc/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/71767
            * config/darwin-sections.def (picbase_thunk_section): New.
            * config/darwin.c (darwin_init_sections): Set up picbase thunk
            section. (darwin_rodata_section, darwin_objc2_section,
            machopic_select_section, darwin_asm_declare_constant_name,
            darwin_emit_weak_or_comdat, darwin_function_section): Don’t use
            coalesced with newer linkers.
            (darwin_override_options): Decide on usage of coalesed sections
            on the basis of the target linker version.
            * config/darwin.h (MIN_LD64_NO_COAL_SECTS): New.
            * config/darwin.opt  (mtarget-linker): New.
            * config/i386/i386.c (ix86_code_end): Do not force the thunks into
            a coalesced section, instead use a thunks section.
    
            Backport from mainline
            2016-11-28  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/71767
            * configure.ac (with_ld64): Use portable method to extract the
            major part of the version number.
            * configure: Regenerated.
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/71767
            * configure.ac (with-ld64): New var, set for Darwin, set on
            detection of ld64, gcc_cv_ld64_export_dynamic: New, New test.
            * config/darwin.h: Use LD64_HAS_DYNAMIC export. DEF_LD64: New,
            define.
            * config/darwin10.h(DEF_LD64): Update for this target version.
            * config/darwin12.h(LINK_GCC_C_SEQUENCE_SPEC): Remove rdynamic
            test.  (DEF_LD64): Update for this target version.
            * configure: Regenerated.
            * config.in: Regenerated.
    
            Backport from mainline
            2016-11-27  Iain Sandoe  <iain@codesourcery.com>
    
            PR target/71767
            * config/darwin.c (imachopic_indirection_name): Make data
            section indirections linker-visible.
            * config/darwin.h (ASM_GENERATE_INTERNAL_LABEL): Make local
            constant labels linker-visible.
    
    gcc/testsuite/
    
    2016-12-11  Iain Sandoe  <iain@codesourcery.com>
    
            Backport from mainline
            2016-11-27  Dominique d'Humieres  <dominiq@lps.ens.fr>
                        Iain Sandoe  <iain@codesourcery.com>
    
            PR target/71767
            * g++.dg/abi/key2.C: Adjust for changed Darwin sections and
            linker-visible symbols.
            * g++.dg/torture/darwin-cfstring-3.C: Likewise.
            * gcc.dg/const-uniq-1.c: Likewise.
            * gcc.dg/torture/darwin-cfstring-3.c: Likewise.
            * gcc.target/i386/pr70799-1.c: Likewise.
    
    From-SVN: r243524

commit c692432cbf1fd5fb8caafbb424f7b4c3ea11c948
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 11 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r243522

commit 7170c2f18f475e28443de20406dfc79ea0406480
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 10 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r243512

commit c70c6e954062325ca5359c03f81bdddb7921a984
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Dec 9 15:46:33 2016 +0000

    Fix failing test due to order of dg-directives
    
    Backport from mainline
    2016-12-08  David Edelsohn  <dje.gcc@gmail.com>
    
            * testsuite/25_algorithms/headers/algorithm/
            parallel_algorithm_assert2.cc: Move dg-do run first.
    
    From-SVN: r243491

commit 27538d4794ecbee94dd36dc9aecf22b58a60a743
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Fri Dec 9 15:26:17 2016 +0000

    backport: re PR target/77933 (Stack corruption on ARM when using high registers and __builtin_return_address)
    
    2016-12-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-17  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        PR target/77933
        * config/arm/arm.c (thumb1_expand_prologue): Distinguish between lr
        being live in the function and lr needing to be saved.  Distinguish
        between already saved pushable registers and registers to push.
        Check for LR being an available pushable register.
    
        gcc/testsuite/
        PR target/77933
        * gcc.target/arm/pr77933-1.c: New test.
        * gcc.target/arm/pr77933-2.c: Likewise.
    
    From-SVN: r243490

commit 39b55a0545e16ba5bf967731756cf524d10c9df2
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Fri Dec 9 15:06:47 2016 +0100

    backport: re PR fortran/78593 (ICE in gfc_match_varspec, at fortran/primary.c:2053)
    
    2016-12-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78593
            * primary.c (gfc_match_varspec): Check if sym is non-null to avoid ICE.
    
    2016-12-09  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78593
            * gfortran.dg/derived_result.f90: New test case.
    
    From-SVN: r243485

commit 9bba3b172dca48ef8e1ee21ee11cf8f2f2fc16fe
Author: Nathan Sidwell <nathan@acm.org>
Date:   Fri Dec 9 14:04:53 2016 +0000

    re PR c++/78550 (bit field and std::initializer_list)
    
            PR c++/78550
            * convert.c (convert_to_integer_1): Maybe fold conversions to
            integral types with fewer bits than its mode.
    
            testsuite/
            PR c++/78550
            * g++.dg/cpp1y/pr78550.C: New.
    
    From-SVN: r243484

commit 6e485868ef3f0c09e8f7f4a6adf98ffd3a7d4e50
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 9 12:35:56 2016 +0000

    backport: [multiple changes]
    
    2016-12-09  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-11-09  Richard Biener  <rguenther@suse.de>
    
            * tree-vect-data-refs.c (vect_compute_data_ref_alignment):
            Look at the DR_BASE_ADDRESS object for forcing alignment.
    
            2016-11-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78189
            * tree-vect-data-refs.c (vect_compute_data_ref_alignment): Fix
            alignment computation.
    
            * g++.dg/torture/pr78189.C: New testcase.
    
    From-SVN: r243481

commit 3bbe52374ab5badbf8f1d3fbc07588239a358133
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Dec 9 08:43:50 2016 +0000

    Backport PRs 71575, 71762, 71848, 77646, 78188, 78224, 78482, 78542
    
    2016-12-09  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-11-28  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78542
            * tree-ssa-ccp.c (evaluate_stmt): Only valueize simplification
            if allowed.
    
            * gcc.dg/torture/pr78542.c: New testcase.
    
            2016-11-23  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78482
            * tree-cfgcleanup.c: Include tree-ssa-loop-niter.h.
            (remove_forwarder_block_with_phi): When merging with a loop
            header creates a new latch reset number of iteration information
            of the loop.
    
            * gcc.dg/torture/pr78482.c: New testcase.
    
            2016-11-23  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/71762
            * match.pd ((~X & Y) -> X < Y, (X & ~Y) -> Y < X,
            (~X | Y) -> X <= Y, (X | ~Y) -> Y <= X): Remove.
    
            * gcc.dg/torture/pr71762-1.c: New testcase.
            * gcc.dg/torture/pr71762-2.c: Likewise.
            * gcc.dg/torture/pr71762-3.c: Likewise.
            * gcc.dg/tree-ssa/forwprop-28.c: XFAIL.
    
            2016-11-11  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71575
            * graphite-isl-ast-to-gimple.c (copy_cond_phi_nodes): Remove
            bogus assert.
    
            * gcc.dg/graphite/pr71575-1.c: New testcase.
            * gcc.dg/graphite/pr71575-2.c: Likewise.
    
            2016-11-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78224
            * tree-call-cdce.c (shrink_wrap_one_built_in_call_with_conds):
            Split the fallthru edge in case its successor may have PHIs.
    
            * g++.dg/torture/pr78224.C: New testcase.
    
            2016-11-05  David Edelsohn  <dje.gcc@gmail.com>
                    Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/78188
            PR c++/71848
            * ipa-comdats.c (pass_ipa_comdats::gate): Require HAVE_COMDAT_GROUP.
    
            * g++.dg/ipa/pr78188.C: New test.
    
            2016-09-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77646
            * tree-ssa-sccvn.c (visit_reference_op_call): Always value-number
            a VDEF.
    
            * gcc.dg/torture/pr77646.c: New testcase.
    
    From-SVN: r243475

commit 213f70a27d030472cc633a59a2352b7eb121dcc5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 9 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r243472

commit b83c9068cc9b2494a3b172aacc93e609738a79fc
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 8 19:04:13 2016 +0000

    * es.po: Update.
    
    From-SVN: r243454

commit 51d21f276cf2cdd6b55ba2f3a2f6575087c02c42
Author: Nathan Sidwell <nathan@acm.org>
Date:   Thu Dec 8 18:37:03 2016 +0000

    re PR c++/78551 (Internal compiler error with constexpr initialization of union)
    
            PR c++/78551
            * constexpr.c (extract_string_elt): New.  Broken out of ...
            (cxx_eval_array_reference): ... here.  Call it.
            (cxx_eval_store_expression): Convert init by STRING_CST into
            CONSTRUCTOR, if needed.
    
            PR c++/78551
            * g++.dg/cpp1y/pr78551.C: New.
    
    From-SVN: r243451

commit cf5f8975ad1a417e83971f6f45a2844d72e690b1
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 8 14:13:10 2016 +0000

    * es.po: Update.
    
    From-SVN: r243440

commit d528f6e8fd50a42c928fbe4a896629e249bca570
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Dec 8 12:41:07 2016 +0000

    PR71856 try to fix Parallel Mode assertions again
    
            PR libstdc++/71856
            * doc/xml/manual/using.xml: Document macro.
            * include/bits/c++config [_GLIBCXX_DEBUG || _GLIBCXX_PARALLEL]
            (__glibcxx_assert): Rename to __glibcxx_assert_impl.
            [_GLIBCXX_DEBUG] (__glibcxx_assert): Expand to __glibcxx_assert_impl.
            * include/parallel/base.h [_GLIBCXX_PARALLEL_ASSERTIONS]
            (_GLIBCXX_PARALLEL_ASSERT): Expand to __glibcxx_assert_impl.
            [!_GLIBCXX_PARALLEL_ASSERTIONS] (_GLIBCXX_PARALLEL_ASSERT): Define as
            empty.
            * testsuite/25_algorithms/headers/algorithm/
            parallel_algorithm_assert2.cc: New test.
    
    From-SVN: r243436

commit 798c55245f7093d21ec0f86d5aeafb2c85c12f10
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Dec 8 12:40:58 2016 +0000

    PR77459 avoid snprintf for debug mode diagnostics
    
    Backport from mainline
    2016-11-10  François Dumont  <fdumont@gcc.gnu.org>
    
            PR libstdc++/77459
            * src/c++11/debug.cc (format_word): Delete.
            (print_literal): New. Replace call to print_word for literals.
    
    From-SVN: r243435

commit 94f0163101ca2b7fdb0d6938c3261cf001312f10
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 8 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r243422

commit 1b4387638338a25e03ff8588c456c2270d87972b
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Thu Dec 8 00:07:58 2016 +0100

    rs6000: Don't forget to initialize the TOC (PR77957)
    
    The code generating traceback tables mistakenly does an early return
    if !optional_tbtab, which causes it to miss the code generating the TOC
    section.  This only matters if the TOC will be empty since otherwise
    the section is created elsewhere.
    
    This patch fixes it.
    
    
            PR target/77957
            * config/rs6000/rs6000.c (rs6000_output_function_epilogue): Don't
            return early if !optional_tbtab.
    
    From-SVN: r243415

commit 9db8bfea7746e19afea924f1f701b37148546eec
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Dec 8 00:01:24 2016 +0100

    backport: re PR c++/78649 (ICE on invalid C++ code on x86_64-linux-gnu (internal compiler error: tree check: expected class ‘type’, have ‘exceptional’ (error_mark) in build_value_init_noctor, at cp/init.c:380))
    
            Backported from mainline
            2016-12-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78649
            * pt.c (tsubst_init): Don't call build_value_init if decl's type
            is error_mark_node.
    
            * g++.dg/cpp0x/pr78649.C: New test.
    
    From-SVN: r243414

commit 5b51449f3e540018bd265bd1ddec443ca91552d2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Dec 8 00:00:40 2016 +0100

    backport: re PR middle-end/78540 (ICE: in df_refs_verify, at df-scan.c:4062 with -O -march=core2)
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78540
            * rtl.h (remove_reg_equal_equiv_notes): Return bool instead of void.
            * rtlanal.c (remove_reg_equal_equiv_notes): Return true if any
            note has been removed.
            * postreload.c (reload_combine_recognize_pattern): If
            remove_reg_equal_equiv_notes returns true, call df_notes_rescan.
    
            * gcc.dg/pr78540.c: New test.
    
    From-SVN: r243413

commit 4a77c3d8ccfb2a5e8d205054aa283d9ada556ef3
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:59:28 2016 +0100

    backport: re PR c++/72808 (ICE on valid c++ code in verify_type (gcc/tree.c:14047))
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
                        Jason Merrill  <jason@redhat.com>
    
            PR c++/72808
            * decl.c (finish_enum_value_list): Call fixup_type_variants on
            current_class_type after
            insert_late_enum_def_into_classtype_sorted_fields.
    
            * g++.dg/debug/pr72808.C: New test.
    
    From-SVN: r243412

commit 663daefdddbd2e0177fae3b26bcd5d985e2c89a9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:58:33 2016 +0100

    backport: re PR rtl-optimization/78546 (wrong code at -O2 and above)
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/78546
            * simplify-rtx.c (neg_const_int): When negating most negative
            number in mode wider than HOST_BITS_PER_WIDE_INT, use
            simplify_const_unary_operation to produce CONST_DOUBLE or
            CONST_WIDE_INT.
            (simplify_plus_minus): Hanlde the case where neg_const_int
            doesn't return a CONST_INT.
    
            * gcc.dg/torture/pr78546-1.c: New test.
            * gcc.dg/torture/pr78546-2.c: New test.
    
    From-SVN: r243411

commit 5c71b353ab125b298356987d64a5293ed807eca4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:57:39 2016 +0100

    backport: re PR fortran/78298 (ICE in lookup_decl_in_outer_ctx, bei omp-low.c:4115)
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/78298
            * tree-nested.c (convert_local_reference_stmt): After adding
            shared (FRAME.NN) clause to omp parallel, task or target,
            add it also to all outer omp parallel, task or target constructs.
    
            * gfortran.dg/gomp/pr78298.f90: New test.
    
    From-SVN: r243410

commit fa88d53746080414bd20e3c919e124abfc9bf005
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:56:45 2016 +0100

    backport: re PR c++/77591 (decltype(auto) and ternary operator allow returning local reference without a warning)
    
            Backported from mainline
            2016-11-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77591
            * typeck.c (maybe_warn_about_returning_address_of_local): Optimize
            whats_returned through fold_for_warn.
    
            * g++.dg/cpp1y/pr77591.C: New test.
    
    From-SVN: r243409

commit 6052825d0c565fe583294ee58c9841f60855bd1b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:55:55 2016 +0100

    backport: re PR middle-end/69183 (ICE when using OpenMP PRIVATE keyword in OMP DO loop not explicitly encapsulated in OMP PARALLEL region)
    
            Backported from mainline
            2016-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/69183
            * omp-low.c (build_outer_var_ref): Change lastprivate argument
            to code, pass it recursively, adjust uses.  For OMP_CLAUSE_PRIVATE
            on worksharing constructs, treat it like clauses on simd construct.
            Formatting fix.
            (lower_rec_input_clauses): For OMP_CLAUSE_PRIVATE_OUTER_REF pass
            OMP_CLAUSE_PRIVATE as last argument to build_outer_var_ref.
            (lower_lastprivate_clauses): Pass OMP_CLAUSE_LASTPRIVATE instead
            of true as last argument to build_outer_var_ref.
    
            * gfortran.dg/gomp/pr69183.f90: New test.
    
    From-SVN: r243408

commit 758c6b813f94e4df21e5c76a9e812e8b27068fe7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:55:04 2016 +0100

    backport: re PR c++/77739 (internal compiler error: in create_tmp_var, at gimple-expr.c:524)
    
            Backported from mainline
            2016-11-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77739
            * cp-gimplify.c (cp_gimplify_tree) <case VEC_INIT_EXPR>: Pass
            false as handle_invisiref_parm_p to cp_genericize_tree.
            (struct cp_genericize_data): Add handle_invisiref_parm_p field.
            (cp_genericize_r): Don't wrap is_invisiref_parm into references
            if !wtd->handle_invisiref_parm_p.
            (cp_genericize_tree): Add handle_invisiref_parm_p argument,
            set wtd.handle_invisiref_parm_p to it.
            (cp_genericize): Pass true as handle_invisiref_parm_p to
            cp_genericize_tree.  Formatting fix.
    
            * g++.dg/cpp1y/pr77739.C: New test.
    
    From-SVN: r243407

commit cfa4d2bc27416b7dd0c7fb7ba4d2a454c168f508
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:54:14 2016 +0100

    backport: re PR middle-end/78416 (wrong code for division by (u128)~INT64_MAX at -O0)
    
            Backported from mainline
            2016-11-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78416
            * expmed.c (expand_divmod): Use wide_int for computation of
            op1_is_pow2.  Don't set it if op1 is 0.  Formatting fixes.
            Use size <= HOST_BITS_PER_WIDE_INT instead of
            HOST_BITS_PER_WIDE_INT >= size.
    
            * gcc.dg/torture/pr78416.c: New test.
    
    From-SVN: r243406

commit c016f8fd6e1c361c0474c4c1074fd141897608e1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:53:28 2016 +0100

    backport: re PR middle-end/67335 (ICE in compiling omp simd function with unused argument)
    
            Backported from mainline
            2016-11-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/67335
            * omp-simd-clone.c (simd_clone_adjust_argument_types): Use NULL prefix
            for tmp simd array if DECL_NAME (parm) is NULL.
    
            * g++.dg/vect/simd-clone-7.cc: New test.
    
    From-SVN: r243405

commit 3ebf93cb38b0dcffee1824cfd30d3bd8f8ccd535
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:52:39 2016 +0100

    backport: re PR middle-end/78419 (ICE with target_clone on invalid target)
    
            Backported from mainline
            2016-11-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78419
            * multiple_target.c (get_attr_len): Start with argnum and increment
            argnum on every arg.  Use strchr in a loop instead of counting commas
            manually.
            (get_attr_str): Increment argnum for every comma in the string.
            (separate_attrs): Use for instead of while loop, simplify.
            (expand_target_clones): Rename defenition argument to definition.
            Free attrs and attr_str even when diagnosing errors.  Temporarily
            change input_location around targetm.target_option.valid_attribute_p
            calls.  Don't emit warning or errors if that function fails.
    
            * gcc.target/i386/pr78419.c: New test.
    
    From-SVN: r243404

commit f54ff495113e5dcc92fc12171fadbbb22cef2246
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:51:48 2016 +0100

    backport: re PR c++/77285 (extern thread_local linkage)
    
            Backported from mainline
            2016-11-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77285
            * mangle.c (mangle_tls_init_fn, mangle_tls_wrapper_fn): Call
            check_abi_tags.
    
            * g++.dg/tls/pr77285-1.C: New test.
            * g++.dg/tls/pr77285-2.C: New test.
    
    From-SVN: r243403

commit 426f0ac4997f56e3980b2ab87a2865a109adf391
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:50:53 2016 +0100

    backport: re PR rtl-optimization/78378 (wrong code when combining shift + mult + zero_extend)
    
            Backported from mainline
            2016-11-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/78378
            * combine.c (make_extraction): Use force_to_mode for non-{REG,MEM}
            inner only if pos is 0.  Fix up formatting.
    
            * gcc.c-torture/execute/pr78378.c: New test.
    
    From-SVN: r243402

commit 38d81537e7b2d715b325b962cff61a3a8b177d9c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:50:09 2016 +0100

    backport: re PR fortran/78299 (ICE in expand_omp_for_static_nochunk, at omp-low.c:9622)
    
            Backported from mainline
            2016-11-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/78299
            * omp-low.c (expand_omp_for_static_nochunk): Don't assert
            that loop->header == body_bb if broken_loop.
    
            * gfortran.dg/gomp/pr78299.f90: New test.
    
    From-SVN: r243401

commit 2ed7b98563071d018a5dc952629bf3aeca2c07ef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:49:10 2016 +0100

    backport: re PR target/77834 (ICE: in make_decl_rtl, at varasm.c:1311 with -O -ftree-pre -mstringop-strategy=libcall)
    
            Backported from mainline
            2016-11-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/77834
            * dse.c (dse_step5): Call scan_reads even if just
            insn_info->frame_read.  Improve and fix dump file messages.
    
    From-SVN: r243400

commit db78e8e5392990b1073c1641659b57ade80b4a1d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:48:38 2016 +0100

    backport: re PR target/78227 (ICE: unrecognizable insn: in extract_insn, at recog.c:2311 with -mavx512bw and vector comare)
    
            Backported from mainline
            2016-11-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78227
            * config/i386/i386.c (ix86_expand_sse_cmp): Force dest into
            cmp_mode argument even for -O0 if cmp_mode != mode and maskcmp.
    
            * gcc.target/i386/pr78227-1.c: New test.
            * gcc.target/i386/pr78227-2.c: New test.
    
    From-SVN: r243399

commit 8bc17c99fce74c56d4419c71f5ddc0938a3d68d8
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:47:48 2016 +0100

    backport: re PR target/77834 (ICE: in make_decl_rtl, at varasm.c:1311 with -O -ftree-pre -mstringop-strategy=libcall)
    
            Backported from mainline
            2016-11-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/77834
            * alias.c (nonoverlapping_memrefs_p): Return 0 if exprx or expry
            doesn't have rtl set.
    
            * gcc.dg/pr77834.c: New test.
    
    From-SVN: r243398

commit 5d4cf9a67abfc171bbb90fa30835792b2a317530
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:46:55 2016 +0100

    backport: hashtab.h: Use standard GPLv3 with runtime exception boilerplate.
    
            Backported from mainline
            2016-11-01  Jakub Jelinek  <jakub@redhat.com>
    
            * hashtab.h: Use standard GPLv3 with runtime exception
            boilerplate.
    
    From-SVN: r243397

commit a016b36b4032d6af615a5a5407ad068e2ef43080
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:46:26 2016 +0100

    backport: re PR c++/78089 (__builtin_shuffle parsing bug)
    
            Backported from mainline
            2016-10-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/78089
            * parser.c (cp_parser_postfix_expression): Replace return statement in
            the first switch with setting postfix_expression to the return
            expression and break;.
    
            * c-c++-common/builtin-shuffle-1.c: New test.
    
    From-SVN: r243396

commit 3467be943a6492b5562c7602d22c12807ae303ee
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:45:33 2016 +0100

    backport: re PR rtl-optimization/77919 (ICE converting DC to V2DF mode)
    
            Backported from mainline
            2016-10-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/77919
            * expr.c (expand_expr_real_1) <normal_inner_ref>: Only avoid forcing
            into memory if both modes are complex and their inner modes have the
            same precision.  If the two modes are different complex modes, convert
            each part separately and generate a new CONCAT.
    
            * g++.dg/torture/pr77919-2.C: New test.
    
    From-SVN: r243395

commit 0a84eb2da79311b07d5747df45be0f42334e4c7c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:43:59 2016 +0100

    backport: re PR rtl-optimization/77919 (ICE converting DC to V2DF mode)
    
            Backported from mainline
            2016-10-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR rtl-optimization/77919
            * expr.c (expand_expr_real_1) <normal_inner_ref>: Force CONCAT into
            MEM if mode1 is not a complex mode.
    
            * g++.dg/torture/pr77919.C: New test.
    
    From-SVN: r243394

commit 793c72ee477e97b47b23b640c257352787677b24
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:42:47 2016 +0100

    backport: re PR middle-end/78025 (ICE in simd_clone_adjust, at omp-simd-clone.c:1126)
    
            Backported from mainline
            2016-10-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/78025
            * omp-simd-clone.c (simd_clone_adjust): Handle noreturn declare simd
            functions.
    
            * g++.dg/gomp/declare-simd-7.C: New test.
    
    From-SVN: r243393

commit e31bb9b8f3104aad754fa08f28e0e88e46f10bc4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:40:40 2016 +0100

    backport: re PR fortran/77973 (ICE in scan_omp_1_op, at omp-low.c:3841)
    
            Backported from mainline
            2016-10-26  Jakub Jelinek  <jakub@redhat.com>
                        Martin Liska  <mliska@suse.cz>
    
            PR fortran/77973
            * gimplify.c (gimplify_adjust_omp_clauses_1): For all added map
            clauses with OMP_CLAUSE_SIZE being a decl, call omp_notice_variable
            on outer context if any.
    
            * gfortran.dg/gomp/pr77973.f90: New test.
    
    From-SVN: r243392

commit f7a2f065ede8d70a7cf47f5addb37f820396623f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:39:29 2016 +0100

    backport: re PR sanitizer/66343 ("Error: .Lubsan_type3 already defined" with UBSan and precompiled headers)
    
            Backported from mainline
            2016-10-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/66343
            * ubsan.c (ubsan_ids): New GTY(()) array.
            (ubsan_type_descriptor, ubsan_create_data): Use ubsan_ids
            instead of static local counters.
    
            * gcc.dg/pch/pr66343-1.c: New test.
            * gcc.dg/pch/pr66343-1.hs: New file.
            * gcc.dg/pch/pr66343-2.c: New test.
            * gcc.dg/pch/pr66343-2.hs: New file.
    
    From-SVN: r243391

commit 83d1a6ab151edce0009d307aacbc0f7800381701
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:37:59 2016 +0100

    backport: re PR c++/77467 (Segmentation fault with switch statement in constexpr function)
    
            Backported from mainline
            2016-09-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77467
            * constexpr.c (enum constexpr_switch_state): New.
            (struct constexpr_ctx): Add css_state field.
            (label_matches): Add CTX and STMT arguments, remove I and
            DEFAULT_LABEL.  For CASE_LABEL_EXPR assert ctx->css_state != NULL,
            handle default labels according to css_state.
            (cxx_eval_statement_list): Remove statement skipping, label_matches
            and default_label handling code.
            (cxx_eval_loop_expr): Exit after first iteration even if
            switches (jump_target).
            (cxx_eval_switch_expr): Set up css_state field in ctx, if default
            label has been seen in the body, but no cases matched, evaluate
            the body second time.
            (cxx_eval_constant_expression): Handle stmt skipping and label_matches
            here.  Handle PREDICT_EXPR.  For MODIFY_EXPR or INIT_EXPR, assert
            statement is not skipped.  For COND_EXPR during skipping, don't
            evaluate condition, just the then block and if still skipping at the
            end also the else block.
            (cxx_eval_outermost_constant_expr): Adjust constexpr_ctx initializer.
            (is_sub_constant_expr): Likewise.
    
            * g++.dg/cpp1y/constexpr-77467.C: New test.
    
    From-SVN: r243390

commit 935d9f941b883f9df8b882f339b3f6c23b828932
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:35:29 2016 +0100

    backport: re PR c++/77722 (-fsanitize=undefined doesn't give runtime error in function without return value, unless at least 2 instructions)
    
            Backported from mainline
            2016-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77722
            * cp-gimplify.c (cp_ubsan_maybe_instrument_return): Instrument also
            functions that have just a STATEMENT_LIST instead of BIND_EXPR, or
            BIND_EXPR with some statement rather than STATEMENT_LIST as body.
    
            * g++.dg/ubsan/return-4.C: New test.
            * g++.dg/ubsan/return-5.C: New test.
            * g++.dg/ubsan/return-6.C: New test.
    
    From-SVN: r243389

commit aeef614c497432a7dcf91ea0a28297ab7208f702
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:34:05 2016 +0100

    backport: re PR fortran/77666 (ICE in gfc_omp_clause_default_ctor, at fortran/trans-openmp.c:471)
    
            Backported from mainline
            2016-09-27  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77666
            * trans-openmp.c (gfc_omp_private_outer_ref): Return true even for
            references to allocatable arrays.
    
            * gfortran.dg/gomp/pr77666.f90: New test.
    
    From-SVN: r243388

commit ef575abaf3ceb8085a6f01268736d6cf4acd6cd0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:32:34 2016 +0100

    backport: re PR tree-optimization/77665 (ICE in expand_GOMP_SIMD_VF, at internal-fn.c:172)
    
            Backported from mainline
            2016-09-22  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77665
            * tree-inline.c (remap_gimple_stmt): Set has_simduid_loops
            for all IFN_GOMP_SIMD_* internal fns, not just for
            IFN_GOMP_SIMD_ORDERED_*.
    
            * gfortran.dg/gomp/pr77665.f90: New test.
    
    From-SVN: r243387

commit b76f12505eb8f688e3c5a5021e9857bbc7afba11
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:31:33 2016 +0100

    backport: re PR c++/77638 (ICE on x86_64-linux-gnu (internal compiler error: tree check: expected tree that contains ‘decl common’ structure, have ‘error_mark’ in cp_parser_template_declaration_after_parameters, at cp/parser.c:25722))
    
            Backported from mainline
            2016-09-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77638
            * parser.c (cp_parser_template_declaration_after_parameter): For 2
            argument operator"" template set ok to false for
            parm == error_mark_node.
    
            * g++.dg/cpp0x/udlit-tmpl-arg-neg2.C: New test.
    
    From-SVN: r243386

commit fdfd2ddc74fa975ff5ab7070e810592516f0535e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:30:42 2016 +0100

    backport: re PR c++/77637 (ICE on x86_64-linux-gnu (Segmentation fault, tree_check, cp_parser_std_attribute_list...))
    
            Backported from mainline
            2016-09-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77637
            * parser.c (cp_parser_std_attribute_list): Reject ... without
            preceding attribute.
    
            * g++.dg/cpp0x/gen-attrs-62.C: New test.
    
    From-SVN: r243385

commit 42a24027faa50ed0f88cbdff790b1db6bb0a9205
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:29:54 2016 +0100

    backport: re PR middle-end/77624 (ICE on x86_64-linux-gnu (internal compiler error: in fold_builtin_atomic_always_lock_free, at builtins.c:5583))
    
            Backported from mainline
            2016-09-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/77624
            * builtins.c (fold_builtin_atomic_always_lock_free): Only look through
            cast to void * if the cast is from some other pointer type.
    
            * c-c++-common/pr77624-1.c: New test.
            * c-c++-common/pr77624-2.c: New test.
    
    From-SVN: r243384

commit f903c27b27a4a6ebaa1d11ce577fbdd710390c84
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:29:01 2016 +0100

    backport: re PR ipa/77587 (C compiler produces incorrect stack alignment with __attribute__((weak)))
    
            Backported from mainline
            2016-09-19  Jakub Jelinek  <jakub@redhat.com>
                        Jan Hubicka  <jh@suse.cz>
    
            PR target/77587
            * cgraph.c (cgraph_node::rtl_info): Pass &avail to
            ultimate_alias_target call, return NULL if avail < AVAIL_AVAILABLE.
            Call ultimate_alias_target just once, not up to 4 times.
    
            * gcc.dg/pr77587.c: New test.
            * gcc.dg/pr77587a.c: New file.
    
    From-SVN: r243383

commit ef5f75093031a72571c8e3249c69352eb9bc511c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:27:27 2016 +0100

    backport: re PR c++/77482 (Segfault when compiling ill-formed constexpr code)
    
            Backported from mainline
            2016-09-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77482
            * error.c (dump_simple_decl): Only check DECL_DECLARED_CONCEPT_P
            if DECL_LANG_SPECIFIC is non-NULL.  Fix up formatting.
    
            * g++.dg/cpp0x/constexpr-77482.C: New test.
    
    From-SVN: r243382

commit 836d1763f9bd5744f5fd667aaf4f477184948812
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Dec 7 23:26:26 2016 +0100

    backport: re PR c++/77375 (constant object with mutable subobject allocated in read-only memory)
    
            Backported from mainline
            2016-09-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77375
            * class.c (check_bases): Set CLASSTYPE_HAS_MUTABLE if any
            TYPE_HAS_MUTABLE_P for any bases.
    
            * g++.dg/cpp0x/mutable1.C: New test.
    
    From-SVN: r243381

commit ebf009905fbf1955bfd89d7277a8395a8761e653
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Wed Dec 7 17:41:47 2016 +0000

    backport: [multiple changes]
    
    2016-12-07  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-11-16  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * config/arm/arm.md (arm_addsi3): Add alternative for addition of
        general register with general register or ARM constant into SP
        register.
    
        gcc/testsuite/
        * gcc.target/arm/empty_fiq_handler.c: New test.
    
        Backport from mainline
        2016-11-21  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/testsuite/
        * gcc.target/arm/empty_fiq_handler.c: Skip if -mthumb is passed in and
        target is Thumb-only.
    
    From-SVN: r243372

commit 7d2e7c194d89fbed2863d7455f1ce6b2a259d561
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 16:05:49 2016 +0000

    PR78326 fix incorrect access of data member in base class
    
    Backport from mainline
    2016-11-13  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78326
            * include/experimental/memory_resource (memory_resource::_S_max_align):
            Change access to protected.
    
    From-SVN: r243369

commit c618afd6bd2f2cc81ced15f0b8e15316df74f155
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:30 2016 +0000

    Test experimental::shared_ptr construction from other smart pointers
    
            Backport from mainline
            2016-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/experimental/memory/shared_ptr/cons/unique_ptr_ctor.cc:
            Add tests for valid and invalid conversions.
            * testsuite/experimental/memory/shared_ptr/cons/weak_ptr_ctor.cc:
            Likewise.
    
    From-SVN: r243368

commit 588b53c486427d1cd91fce99dfca286ee42fe6db
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:25 2016 +0000

    Fix std::experimental::shared_ptr SFINAE constraints
    
    Backport from mainline
    2016-10-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/shared_ptr.h
            (__shared_ptr<__libfund_v1<_Tp, false>, _Lp>::_Compatible): Just use
            is_convertible for non-array specialization.
            (__shared_ptr<__libfund_v1<_Tp, false>, _Lp>::_UniqCompatible): New
            constraint for conversions from unique_ptr.
            (__shared_ptr<__libfund_v1<_Tp, false>, _Lp>::__shared_ptr): Constrain.
            (__shared_ptr<__libfund_v1<_Tp, false>, _Lp>::reset): Likewise.
            (__sp_compatible_v): New variable template for trait.
            (__sp_is_constructible): New trait to check shared_ptr constraints.
            (__sp_is_constructible_v): New variable template for trait.
            (__shared_ptr<__libfund_v1<_Tp, true>, _Lp>::_SafeConv): New
            constraint for construction/reset, using __sp_is_constructible_v.
            (__shared_ptr<__libfund_v1<_Tp, true>, _Lp>::_UniqCompatible): New
            constraint for conversions from unique_ptr.
            (__shared_ptr<__libfund_v1<_Tp, true>, _Lp>::__shared_ptr): Constrain.
            (__shared_ptr<__libfund_v1<_Tp, true>, _Lp>::reset): Likewise.
            (shared_ptr::_SafeConv): Constraint for checking constructors.
            (shared_ptr(Tp1*), shared_ptr(_Tp1, _Deleter))
            (shared_ptr(_Tp1, _Deleter, _Alloc)): Constrain with _SafeConv.
            (shared_ptr(const weak_ptr<_Tp1>&)): Constrain with _Compatible.
            (shared_ptr(auto_ptr<_Tp1>&&)): Fix, remove TODO.
            * testsuite/experimental/memory/shared_ptr/cons/pointer_ctor.cc:
            Remove tests using invalid conversions.
            * testsuite/experimental/memory/shared_ptr/cons/pointer_ctor_neg.cc:
            New test.
            * testsuite/experimental/memory/shared_ptr/cons/torture.cc: New test.
            * testsuite/experimental/memory/shared_ptr/modifiers/reset.cc: Remove
            tests using invalid conversions.
            * testsuite/experimental/memory/shared_ptr/modifiers/reset_neg.cc: New
            test.
            * testsuite/experimental/memory/shared_ptr/observers/use_count.cc:
            Remove tests using invalid conversions.
    
    From-SVN: r243366

commit 7e536bac18951c5ef3eb6c980ef8769bc4b1a12d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:19 2016 +0000

    Fix indentation of experimental::shared_ptr code
    
    Backport from mainline
    2016-10-18  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/shared_ptr.h: Fix indentation.
    
    From-SVN: r243365

commit 20e415ce5f8dcad1b52727d0fa31ea29b9be30fa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:14 2016 +0000

    Fix typos in experimental::shared_ptr
    
    Backport from mainline
    2016-10-18  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/shared_ptr.h (shared_ptr(shared_ptr&&)):
            Remove const from parameter.
            (operator<(const shared_ptr<T>&, nullptr_t)): Use correct
            specialization of std::less.
            * testsuite/experimental/memory/shared_ptr/comparison/comparison.cc:
            Test comparison with nullptr and actually call test functions.
    
    From-SVN: r243364

commit f5be17f105f854ba15e586eb668ce5ad16bf0e91
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:08 2016 +0000

    Simplify std::rethrow_if_nested definition
    
    Backport from mainline
    2016-10-11  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/intro.xml: Document LWG 2484 status.
            * libsupc++/nested_exception.h (_Throw_with_nested_impl)
            (_Throw_with_nested_helper): Remove.
            (__throw_with_nested_impl): New overloaded functions to implement
            throw_with_nested logic.
            (throw_with_nested): Call __throw_with_nested_impl.
            (_Rethrow_if_nested_impl): Remove
            (__rethrow_if_nested_impl): New overloaded functions to implement
            rethrow_if_nested logic.
            (rethrow_if_nested): Call __rethrow_if_nested_impl.
            * testsuite/18_support/nested_exception/rethrow_if_nested.cc: Test
            problem cases from LWG 2484.
    
    From-SVN: r243363

commit 75cfd964253f094b2ca399c64736f2a51d5f4c08
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:56:01 2016 +0000

    Enable printers and xmethods for std::__cxx11::list
    
    Backport from mainline
    2016-10-11  Jonathan Wakely  <jwakely@redhat.com>
    
            * python/libstdcxx/v6/printers.py (build_libstdcxx_dictionary):
            Register printer for std::__cxx11::list.
            * python/libstdcxx/v6/xmethods.py (ListMethodsMatcher.match): Match
            std::__cxx11::list as well as std::list.
    
    From-SVN: r243362

commit cf1a085cfc2f4e93fc64cb97cc61b0e55d596aba
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:56 2016 +0000

    Do not copy std::call_once arguments (LWG 2442)
    
    Backport from mainline
    2016-10-12  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/intro.xml: Document LWG 2442 status.
            * include/std/mutex [_GLIBCXX_HAVE_TLS] (__once_call_impl): Remove.
            (call_once): Use lambda expression and std::__invoke instead of
            __bind_simple and __once_call_impl.
            * testsuite/30_threads/call_once/dr2442.cc: New test.
    
    From-SVN: r243361

commit 1a214101753bbcdb7e91881e7f7ba1f9a33d86cc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:50 2016 +0000

    Define std::allocator<T>::is_always_equal
    
            Backport from mainline
            2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/allocator.h (allocator<T>::is_always_equal): Define.
            * testsuite/20_util/allocator/requirements/typedefs.cc: Test for
            is_always_equal.
            * testsuite/util/testsuite_allocator.h
            (uneq_allocator::is_always_equal): Define as false_type.
    
    From-SVN: r243360

commit 9c7e2b2172a3f6e2546505ef62c7a2ebf3417833
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:45 2016 +0000

    Make std::scoped_allocator_adaptor's OUTERMOST recursive
    
    Backport from mainline
    2016-10-06  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2011.xml: Update status.
            * include/std/scoped_allocator (__outer_allocator_t, __outermost_type):
            New helpers for recursive OUTERMOST.
            (__outermost): Use __outermost_type::_S_outermost.
            (__do_outermost, scoped_allocator_adaptor::__outermost_type): Remove.
            (scoped_allocator_adaptor::__outermost_alloc_traits): Use new
            __outermost_type helper.
            * testsuite/20_util/scoped_allocator/outermost.cc: New test.
    
    From-SVN: r243359

commit 3712c13d5aa98dc47f867af17f2b25bf703395a1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:39 2016 +0000

    libstdc++/51960 move-construction for raw_storage_iterator
    
    Backport from mainline
    2016-08-26  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/51960
            * doc/xml/manual/intro.xml: Document DR 2127 change.
            * doc/html/*: Regenerate.
            * include/bits/stl_raw_storage_iter.h (operator=(_Tp&&)): Add.
            (operator++(), operator++(int)): Use injected class name.
            * testsuite/20_util/raw_storage_iterator/dr2127.cc: New test.
    
    From-SVN: r243358

commit 7025b10563669c9bb17c63b039dd51dbf4aeebfa
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:33 2016 +0000

    Simplify std::__invoke_impl definitions
    
    Backport from mainline
    2016-08-04  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/std/functional (_Unwrap): Rename to __inv_unwrap.
            (__invfwd): Adjust.
            (__invoke_impl): Remove unused template parameters.
            * testsuite/20_util/function_objects/invoke/59768.cc: Remove unused
            parameter.
            * testsuite/20_util/function_objects/invoke/ref_ext.cc: Copy 59768.cc
            and test __invoke extension for C++11.
    
    From-SVN: r243357

commit fcce17315acc94ccc11538776f7a202566d81a2f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Dec 7 15:55:26 2016 +0000

    Make check_effective_target_c++ work for libstdc++
    
    Backport from trunk
    2016-07-31  Jonathan Wakely  <jwakely@redhat.com>
    
            * lib/target-supports.exp (check_effective_target_c): Fix indentation.
            (check_effective_target_c++): Likewise. Also match for libstdc++.
    
    From-SVN: r243356

commit 4b3bf375589864f72010d3741185a9195864b53e
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Wed Dec 7 17:20:49 2016 +0200

    backport: Constrain optional's __constexpr_addressof in its return type and use a constexpr addressof for optional, if available.
    
    Backport from mainline
    2016-12-06  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    Constrain optional's __constexpr_addressof in its return type
    and use a constexpr addressof for optional, if available.
    * include/experimental/optional (__constexpr_addressof):
    Constrain in the return type instead of in a template parameter.
    (_Has_addressof_mem)
    (_Has_addressof_free, _Has_addressof, __constexpr_addressof):
    Guard with #ifndef __cpp_lib_addressof_constexpr.
    (operator->()): Use std::__addressof if it's constexpr.
    
    From-SVN: r243348

commit 44acbdad0d8acca5fe366ed43713982ad823ff7a
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed Dec 7 11:29:39 2016 +0000

    Adjust comment
    
    From-SVN: r243339

commit 7612fb9e6f2fde6a866ebeb536481c0ff5d43719
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Dec 7 11:27:02 2016 +0000

    decl.c (gnat_to_gnu_entity): Also call finish_character_type on Character subtypes.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Enumeration_Subtype>:
            Also call finish_character_type on Character subtypes.
            * gcc-interface/utils.c (finish_character_type): Deal with subtypes.
    
    From-SVN: r243337

commit 5bd7612615a0c53ebb0436283a1ab25c1d511b0a
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Dec 7 01:04:47 2016 +0000

    backport: re PR tree-optimization/78646 (incorrect result type for pointer addition in slsr)
    
    2016-12-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Stefan Freudenberger  <stefan@reservoir.com>
    
            PR tree-optimization/78646
            * gimple-ssa-strength-reduction.c (replace_ref): The pointer
            addition used for the memory base expression should have the type
            of the candidate.
    
    From-SVN: r243330

commit 532aab16480d528b6f36a503e9e15326190ed111
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Dec 7 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r243327

commit 6bd583a284c67f9d90d16f2a5b47f70130ad7253
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Dec 6 22:11:54 2016 +0000

    backport: re PR target/72827 (gnat bootstrap broken on powerpc64le-linux-gnu)
    
    2016-12-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-09-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                        Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/72827
            * config/rs6000/rs6000.c (rs6000_legitimize_address): Avoid
            reg+reg addressing for TImode.
            (rs6000_legitimate_address_p): Only allow register indirect
            addressing for TImode, even without TARGET_QUAD_MEMORY.
    
    From-SVN: r243319

commit 0ecaec8fe5d33e0864b38e4c95fbf3b1e409e3cd
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 6 13:51:56 2016 -0500

    PR c++/71274 - deprecated warning without use.
    
            * decl2.c (maybe_instantiate_decl): Split out from mark_used.
            (decl_constant_var_p): Use it instead.
    
    From-SVN: r243314

commit 11e034da620fd59bd7118d7ac72462210ded150d
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 6 13:51:50 2016 -0500

    PR c++/71515 - typename in partial specialization
    
            * pt.c (resolve_typename_type): Try to avoid calling
            currently_open_class.
    
    From-SVN: r243313

commit 030eae840af9fdbec4a33e78f2f57df57cc2e8fd
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 6 13:51:45 2016 -0500

    PR c++/77907 - static init and PMF
    
            * constexpr.c (cxx_eval_constant_expression): Use cp_fold_convert.
    
    From-SVN: r243312

commit bad0a7d4c010d7b6c96f273d5c4fe8afcbbcd56a
Author: Jason Merrill <jason@redhat.com>
Date:   Tue Dec 6 13:51:37 2016 -0500

    PR c++/57728 - explicit instantiation and defaulted functions
    
            * pt.c (do_type_instantiation): Don't mess with non-user-provided
            member functions.
    
    From-SVN: r243311

commit 7893cbec692e7d5e2001ef272eead79acbd9bb79
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue Dec 6 14:36:22 2016 +0000

    [RTEMS] Use spin lock for pool management
    
    libgomp/
            * libgomp/config/rtems/pool.h (gomp_thread_pool_reservoir): Use
            pthread_spinlock_t instead of gomp_mutex_t lock.
            (gomp_get_thread_pool): Likewise.
            (gomp_release_thread_pool): Likewise.
            * libgomp/config/rtems/proc.c (allocate_thread_pool_reservoir):
            Likewise.
    
    From-SVN: r243305

commit 59f12d0d86786066eb616dbd99ee045c29a34f98
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue Dec 6 14:35:28 2016 +0000

    [RTEMS] Fix libgomp for nthreads == 1
    
    libgomp/
            * config/rtems/pool.h (gomp_get_thread_pool): Return proper
            thread pool in case nthreads == 1.
    
    From-SVN: r243302

commit 8ebf9bdcd8c220ba749dbda32e4d70d6dc51d798
Author: Aditya Kumar <hiraditya@msn.com>
Date:   Tue Dec 6 12:28:27 2016 +0000

    Add missing noexcept on std::_Sp_locker constructors
    
    2016-12-06  Aditya Kumar  <hiraditya@msn.com>
    
            * src/c++11/shared_ptr.cc (_Sp_locker::_Sp_locker(const void* p)): Add
            noexcept on constructor.
            (_Sp_locker::_Sp_locker(const void* p1, const void* p2)): Same.
    
    From-SVN: r243297

commit 5086ee7fb3cf74f7e15f0e275e2874f0c37afa28
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Dec 6 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243276

commit 7d1280a6554260b81feaf70ba97a3d6e54c10814
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Dec 5 22:49:54 2016 +0000

    * es.po, fr.po: Update.
    
    From-SVN: r243274

commit faa89595e944017547878fea24a2507fafa1aceb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Dec 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r243234

commit 2e7c379ba94822652d56f5f706410e247c3476d7
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Sun Dec 4 17:00:27 2016 +0100

    backport: re PR fortran/78443 ([OOP] Incorrect behavior with non_overridable keyword)
    
    2016-12-04  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78443
            * class.c (add_proc_comp): Add a vtype component for non-overridable
            procedures that are overriding.
    
    2016-12-04  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78443
            * gfortran.dg/typebound_proc_35.f90: New test case.
    
    From-SVN: r243229

commit f4882f827e354403521a0495ccfafcfa5757a170
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Dec 4 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r243226

commit 7316cf218ff557edd201648250a1c9627b2c1081
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Dec 3 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r243213

commit 081d6f26e591ad89ec4bfa1d478f0220d5d199bd
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Fri Dec 2 08:47:07 2016 +0000

    S/390: Fix vector all/any cc modes.
    
    This fixes a problem with the vector compares producing CC mode
    results.
    
    The instructions produce condition code modes which can be either
    interpreted to check an ALL elements or an ANY element result.  As the
    modes where used before they could not be inverted by the middle-end
    by inverting the comparison code (e.g. eq to ne).  The result usually
    was just wrong.
    
    In fact inverting a comparison code on an CCVALL mode would require to
    also change the mode to CCVANY but this cannot be done easily in the
    middle-end.  With this patch the meaning of an ALL cc mode only refers
    to the not-inverted comparison code (e.g. eq, gt, ge).  With that
    change inverting the comparison code matches a not operation on the
    condition code mask again.
    
    Bootstrapped and regression tested on s390 and s390x.
    
    Bye,
    
    -Andreas-
    
    gcc/testsuite/ChangeLog:
    
    2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/vector/vec-scalar-cmp-1.c: Fix and harden the
            pattern checks.
            * gcc.target/s390/zvector/vec-cmp-1.c: New test.
    
    gcc/ChangeLog:
    
    2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-02  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-modes.def (CCVEQANY, CCVH, CCVHANY, CCVHU)
            (CCVHUANY): Remove modes.
            (CCVIH, CCVIHU, CCVIALL, CCVIANY, CCVFALL, CCVFANY): Add modes and
            documentation.
            * config/s390/s390.c (s390_match_ccmode_set): Rename cc modes.
            (s390_expand_vec_compare_scalar): Pick one of the cc consumer
            modes.
            (s390_branch_condition_mask): Adjust to use the new cc consumer
            modes.  The new modes allow for proper reversal in the middle-end.
            (s390_expand_vec_compare_cc): Determine the proper cc producer and
            consumer modes for a comparison.
            * config/s390/s390.md: Rename CCVH to CCVIH and CCVHU to CCVIHU
            throughout the file.
            * config/s390/vx-builtins.md: Likewise.
    
    From-SVN: r243166

commit 35a87b34e4876756c299af271d929de12603eeaa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Dec 2 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r243149

commit 1befe567ea13e69b85c175338ab3cb8a2abfba3f
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Dec 1 23:58:38 2016 +0000

    backport: rs6000.c (insn_is_swappable_p): Properly look inside UNSPEC_VSX_XXSPLTW vec.
    
    2016-12-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-12-01  Alan Modra  <amodra@gmail.com>
    
            * gcc/config/rs6000/rs6000.c (insn_is_swappable_p): Properly
            look inside UNSPEC_VSX_XXSPLTW vec.
    
    From-SVN: r243146

commit 2e9b085ef2e22175b827ac2027cb16c5e21ef97f
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Dec 1 22:37:11 2016 +0000

    * es.po: Update.
    
    From-SVN: r243140

commit 145114009ca280924d9fb1a1731ed409ae4d5b35
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Dec 1 21:05:49 2016 +0000

    016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78279
            * dependency.c (identical_array_ref): Convert gcc_assert to conditional
            and gfc_internal_error.
    
    2016-12-01  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78279
            * gfortran.dg/pr78279.f90: New test.
    
    From-SVN: r243133

commit cd25178ae3df0d0b1f45c57d03d70cd88fc4bbc3
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Dec 1 19:26:15 2016 +0000

    backport: re PR target/78101 (PowerPC 64-bit little endian fusion failure with -O3 -mcpu=power9)
    
    [gcc]
    2016-12-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-11-17  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/78101
            * config/rs6000/predicates.md (fusion_addis_mem_combo_load): Add
            the appropriate checks for SFmode/DFmode load/stores in GPR
            registers.
            (fusion_addis_mem_combo_store): Likewise.
            * config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Rename
            fusion_fpr_* to fusion_vsx_* and add in support for ISA 3.0 scalar
            d-form instructions for traditional Altivec registers.
            (emit_fusion_p9_load): Likewise.
            (emit_fusion_p9_store): Likewise.
            * config/rs6000/rs6000.md (p9 fusion store peephole2): Remove
            early clobber from scratch register.  Do not match if the register
            being stored is the scratch register.
            (fusion_vsx_<P:mode>_<FPR_FUSION:mode>_load): Rename fusion_fpr_*
            to fusion_vsx_* and add in support for ISA 3.0 scalar d-form
            instructions for traditional Altivec registers.
            (fusion_fpr_<P:mode>_<FPR_FUSION:mode>_load): Likewise.
            (fusion_vsx_<P:mode>_<FPR_FUSION:mode>_store): Likewise.
            (fusion_fpr_<P:mode>_<FPR_FUSION:mode>_store): Likewise.
    
    [gcc/testsuite]
    2016-12-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-11-17  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/78101
            * gcc.target/powerpc/fusion4.c: New test.
    
    From-SVN: r243128

commit 2cbd96337e2baae9b8b064d7aa6e86e92a4775ac
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Dec 1 15:02:37 2016 +0000

    Don't define libstdc++-internal macros in Solaris 10+ <math.h>
    
            fixincludes:
            Backport from mainline
            2016-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * inclhack.def (solaris_math_12): New fix.
            (hpux11_fabsf): Replace bypass by *-hp-hpux11* mach selector.
            * fixincl.x: Regenerate.
            * tests/base/math.h [SOLARIS_MATH_12_CHECK]: New test.
    
            libstdc++-v3:
            Backport from mainline
            2016-11-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * acinclude.m4 (GLIBCXX_CHECK_MATH11_PROTO): Update comments.
            (__CORRECT_ISO_CPP11_MATH_H_PROTO): Rename to ...
            (__CORRECT_ISO_CPP11_MATH_H_PROTO_FP): ... this.
            Add test for C++11 <math.h> integral overloads.
            * configure: Regenerate.
            * config.h.in: Regenerate.
    
            * include/c_global/cmath [__cplusplus >= 201103L]: Reflect
            __CORRECT_ISO_CPP11_MATH_H_PROTO to
            __CORRECT_ISO_CPP11_MATH_H_PROTO_FP rename.
            * include/c_global/cmath [_GLIBCXX_USE_C99_MATH &&
            !_GLIBCXX_USE_C99_FP_MACROS_DYNAMIC && __cplusplus >= 201103L]
            (std::fpclassify): Wrap in !__CORRECT_ISO_CPP11_MATH_H_PROTO_INT.
            (std::isfinite): Likewise.
            (std::isinf): Likewise.
            (std::isnan): Likewise.
            (std::isnormal): Likewise.
            (std::signbit): Likewise.
            (std::isgreater): Likewise.
            (std::isgreaterequal): Likewise.
            (std::isless): Likewise.
            (std::islessequal): Likewise.
            (std::islessgreater): Likewise.
            (std::isunordered): Likewise.
            [__cplusplus >= 201103L && _GLIBCXX_USE_C99_MATH_TR1]
            (std::acosh): Likewise.
            (std::asinh): Likewise.
            (std::atanh): Likewise.
            (std::cbrt): Likewise.
            (std::copysign): Likewise.
            (std::erf): Likewise.
            (std::erfc): Likewise.
            (std::exp2): Likewise.
            (std::expm1): Likewise.
            (std::fdim): Likewise.
            (std::fma): Likewise.
            (std::fmax): Likewise.
            (std::fmin): Likewise.
            (std::hypot): Likewise.
            (std::ilogb): Likewise.
            (std::lgamma): Likewise.
            (std::llrint): Likewise.
            (std::llround): Likewise.
            (std::log1p): Likewise.
            (std::log2): Likewise.
            (std::logb): Likewise.
            (std::lrint): Likewise.
            (std::lround): Likewise.
            (std::nearbyint): Likewise.
            (std::nextafter): Likewise.
            (std::nexttoward): Likewise.
            (std::remainder): Likewise.
            (std::remquo): Likewise.
            (std::rint): Likewise.
            (std::round): Likewise.
            (std::scalbln): Likewise.
            (std::scalbn): Likewise.
            (std::tgamma): Likewise.
            (std::trunc): Likewise.
            * include/tr1/cmath [_GLIBCXX_USE_C99_MATH_TR1 && __cplusplus >=
            201103L]: Reflect __CORRECT_ISO_CPP11_MATH_H_PROTO to
            __CORRECT_ISO_CPP11_MATH_H_PROTO_FP rename.
    
    From-SVN: r243114

commit f1a7b3c293d4f75f257446fe8a75a35a1f7899c0
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu Dec 1 13:47:13 2016 +0000

    [TER] PR target/48863: Don't replace expressions across local register variable definitions
    
            Backport from mainline
            2016-11-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/48863
            PR inline-asm/70184
            * tree-ssa-ter.c (temp_expr_table): Add reg_vars_cnt field.
            (new_temp_expr_table): Initialise reg_vars_cnt.
            (free_temp_expr_table): Release reg_vars_cnt.
            (process_replaceable): Add reg_vars_cnt argument, set reg_vars_cnt
            field of TAB.
            (find_replaceable_in_bb): Use the above to record register variable
            write occurrences and cancel replacement across them.
    
            * gcc.target/arm/pr48863.c: New test.
    
    From-SVN: r243109

commit e9801eb5d318447b95368cefa62c96981873bc67
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Dec 1 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r243090

commit 0cfc689038188bf745a564b5c64b373254b6cc90
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Nov 30 22:14:10 2016 +0000

    * es.po: Update.
    
    From-SVN: r243086

commit bf7078785b96d69f5d2e4636c77255c675aefd43
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 30 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r242987

commit 2c6d9ac6be29a02da7a98f082f041a49c6d7a326
Author: Kaz Kojima <kkojima@gcc.gnu.org>
Date:   Tue Nov 29 23:20:28 2016 +0000

    backport: re PR target/78426 (wrong code with strncmp on SH)
    
            Backported from mainline
            2016-11-19  Kaz Kojima  <kkojima@gcc.gnu.org>
    
            PR target/78426
            * config/sh/sh-mem.cc (sh_expand_cmpnstr): Use copy_to_mode_reg
            instead of force_reg.
            (sh_expand_setmem): Likewise.
    
    From-SVN: r242981

commit 1f726130bee78ba946ca26063bd313a6ef63529d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Nov 29 00:46:15 2016 +0000

    * es.po, fr.po: Update.
    
    From-SVN: r242944

commit 7e5efa15db604ac241b3d7e50b4e867c8392484f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 29 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r242940

commit a0ff5026576a835d2f59a8315f48b72dedbecece
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 28 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r242904

commit c0070da8fc0e1bbcd33e412658d22fa0ea77d6a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 27 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r242890

commit ac4b781611f00ce5085dd2587b179ea11544cd1b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 26 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r242886

commit cadf3720ee8131d5aec0bd9b9f6f8655c9f9991c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 25 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r242856

commit eb496dd888f6aed59209a6043b51cb67e00e64a0
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Nov 24 19:26:33 2016 +0000

    re PR fortran/78500 (ICE in gfc_check_vardef_context, at fortran/expr.c:5289)
    
    2016-11-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78500
            * expr.c (gfc_check_vardef_contextm): Fix NULL pointer dereference.
            * interface.c (matching_typebound_op): Ditto.
    
    2016-11-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78500
            * gfortran.dg/class_result_4.f90: New test.
    
    From-SVN: r242847

commit a4e88875a68b62da067c4cc7cd924280e83420cc
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Nov 24 12:05:40 2016 +0000

    re PR middle-end/78429 (ICE in set_value_range, at tree-vrp.c on non-standard boolean)
    
            PR middle-end/78429
            * tree.h (wi::fits_to_boolean_p): New predicate.
            (wi::fits_to_tree_p): Use it for boolean types.
            * tree.c (int_fits_type_p): Likewise.
    
    From-SVN: r242830

commit 9cb2aa842cce36e0e5a8a95810db8828404c0596
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Nov 24 11:19:22 2016 +0100

    Add sem_item::m_hash_set (PR ipa/78309)
    
            Backported from mainline
            2016-11-22  Martin Liska  <mliska@suse.cz>
    
            PR ipa/78309
            * ipa-icf.c (void sem_item::set_hash): Update m_hash_set.
            (sem_function::get_hash): Use the new field.
            (sem_function::parse): Remove an argument from ctor.
            (sem_variable::parse): Likewise.
            (sem_variable::get_hash): Use the new field.
            (sem_item_optimizer::read_section): Use new ctor and set hash.
            * ipa-icf.h: _hash is removed from sem_item::sem_item,
            sem_variable::sem_variable, sem_function::sem_function.
    
    From-SVN: r242825

commit e0f05f846bccddecfc3ff76eef844b1836fc30eb
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Thu Nov 24 09:59:59 2016 +0000

    backport: pr78333.c: Add empty implementations of __cyg_profile_func_enter() and...
    
    2016-11-24  Christophe Lyon  <christophe.lyon@linaro.org>
    
            Backport from mainline
            gcc/testsuite/
            2016-11-17  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.dg/pr78333.c: Add empty implementations of
            __cyg_profile_func_enter() and __cyg_profile_func_exit() to avoid
            problems on non-glibc systems.
    
    From-SVN: r242823

commit 74cb5205d657845c896dc471961b527bc6543bd6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 24 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r242816

commit 36c45adbdb656b84695f2452df18093184715748
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Nov 23 22:16:53 2016 +0000

    re PR fortran/78297 (ICE in finish_equivalences, at fortran/trans-common.c:1246)
    
    2016-11-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78297
            * trans-common.c (finish_equivalences): Do not dereference a NULL pointer.
    
    2016-11-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/78297
            * gfortran.dg/pr78297.f90: New test.
    
    From-SVN: r242806

commit aec6c5b78dc1d658c14430cdfb7598cd0b437238
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Nov 23 21:58:46 2016 +0100

    i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.
    
            * config/i386/i386.md (*<any_or:code>hi_1): Fix operand 2 constraints.
            (kxnor<mode>): Return "#" for alternative 0.
    
    From-SVN: r242799

commit 4187b1f84cf1207e2580e7354a3511809f5f499d
Author: Janus Weil <janus@gcc.gnu.org>
Date:   Wed Nov 23 17:26:38 2016 +0100

    backport: re PR fortran/66227 ([OOP] EXTENDS_TYPE_OF n returns wrong result for polymorphic variable allocated to extended type)
    
    2016-11-23  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/66227
            * simplify.c (gfc_simplify_extends_type_of): Fix missed optimization.
            Prevent over-simplification. Fix a comment. Add a comment.
    
    2016-11-23  Janus Weil  <janus@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/66227
            * gfortran.dg/extends_type_of_3.f90: Fix and extend the test case.
    
    From-SVN: r242768

commit 29993dc81eddac4b5c709a8e43016f3d7b5b0609
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Nov 23 15:22:41 2016 +0000

    Replace unsupported effective-target with dg-options
    
            * testsuite/24_iterators/reverse_iterator/71771.cc: Replace calls to
            C++14 std::rbeing and std::rend.  Use dg-options instead of
            effective-target.
            * testsuite/27_io/headers/cstdio/functions_neg.cc: Use dg-options
            instead of effective-target.
            * testsuite/experimental/numeric/77801.cc: Likewise.
    
    From-SVN: r242763

commit 476dd79b588735eef2c01d3210bcbf4711ec603e
Author: Felix Morgner <felix.morgner@gmail.com>
Date:   Wed Nov 23 15:22:35 2016 +0000

    PR78490 add missing returns to propagate_const
    
    2016-11-23  Felix Morgner  <felix.morgner@gmail.com>
                Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/78490
            * include/experimental/propagate_const (propagate_const::operator=):
            Add missing return statements.
            * testsuite/experimental/propagate_const/assignment/move_neg.cc:
            Adjust dg-error line numbers.
            * testsuite/experimental/propagate_const/requirements2.cc: Likewise.
    
    Co-Authored-By: Jonathan Wakely <jwakely@redhat.com>
    
    From-SVN: r242762

commit 93bca8352d00e584eb0a65b70ad5bb3badbd55bf
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 23 14:31:16 2016 +0000

    Backport PRs 77855, 78185, 78228, 78305, 78333, 78472
    
    2016-11-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-11-23  Richard Biener  <rguenther@suse.de>
    
            PR lto/78472
            * tree.c (gimple_canonical_types_compatible_p): Ignore zero-sized
            fields.
    
            lto/
            * lto.c (hash_canonical_type): Ignore zero-sized fields.
    
            * g++.dg/lto/pr78472_0.c: New testcase.
            * g++.dg/lto/pr78472_1.C: Likewise.
    
            2016-11-17  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78305
            * fold-const.c (negate_expr_p): Fix multiplication case.
    
            * gcc.dg/torture/pr78305.c: New testcase.
    
            2016-11-16  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78333
            * gimplify.c (gimplify_function_tree): Do not instrument
            GNU extern inline functions.
    
            * gcc.dg/pr78333.c: New testcase.
    
            2016-11-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78228
            * tree-ssa-phiopt.c (abs_replacement): Avoid introducing
            undefined behavior.
    
            * gcc.dg/tree-ssa/phi-opt-15.c: New testcase.
    
            2016-11-04  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78185
            * loop-invariant.c (find_exits): Record entering inner
            loops as possibly exiting to handle infinite sub-loops.
            * tree-ssa-loop-im.c: Include tree-ssa-loop-niter.h.
            (fill_always_executed_in_1): Honor infinite child loops.
    
            * gcc.dg/pr78185.c: New testcase.
    
            2016-10-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77855
            * tree-ssa-pre.c (prune_clobbered_mems): Queue exprs to remove
            instead of removing the current item while iterating over the set
            which is not safe.
    
            * gcc.dg/torture/pr77855.c: New testcase.
    
    From-SVN: r242756

commit 8bd800e6302f61e9a22d39db875f8374c0fb6832
Author: Walter Lee <walt@tilera.com>
Date:   Wed Nov 23 04:49:03 2016 +0000

    TILEPro/TILE-Gx: add trap patterns
    
            * config/tilegx/tilegx.md (trap): New pattern.
            * config/tilepro/tilepro.md (trap): Likewise.
    
    From-SVN: r242737

commit 7f843f9ac5d478a16a8ba94d86413f92251b809f
Author: Walter Lee <walt@tilera.com>
Date:   Wed Nov 23 04:45:46 2016 +0000

    TILE-Gx...
    
    TILE-Gx: fix the zero_extract/sign_extract patterns so that they
    properly handle the case when pos + size > number of bits in a word.
    
            * config/tilegx/tilegx.md (*zero_extract): Use
            define_insn_and_split instead of define_insn; Handle pos +
            size > 64.
            (*sign_extract): Likewise.
    
    From-SVN: r242736

commit 3a768692f6a6ef2d3e1e0d43dd22b83dfef81b4f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 23 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r242731

commit cfafabd07fe58811c4eb7bdf2a103e1dacd9dcc3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Nov 22 18:25:55 2016 +0000

    re PR fortran/58001 (Make it possible to silence "Extension: Tab character in format" warning)
    
    2016-11-22  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/58001
            * io.c (next_char_not_space): Update handling of a 'tab' in a FORMAT.
            (format_lex): Adjust invocations of next_char_not_space().
    
    2016-11-22  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/58001
            * gfortran.dg/fmt_tab_1.f90: Adjust testcase.
            * gfortran.dg/fmt_tab_2.f90: Ditto.
    
    From-SVN: r242717

commit c4a3f629197bd6f6870dbeef0d6cc2509c249268
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Nov 22 18:33:07 2016 +0100

    Makefile.in ($(lang_checks_parallelized)): Fix detection of -j argument.
    
    gcc/ChangeLog
    
            * Makefile.in ($(lang_checks_parallelized)): Fix detection
            of -j argument.
    
    gcc/ada/ChangeLog
    
            * gcc-interface/Make-lang.in (check-acats): Fix detection
            of -j argument.
    
    libstdc++-v3/ChangeLog
    
            * testsuite/Makefile.am
            (check-DEJAGNU $(check_DEJAGNU_normal_targets)): Fix detection
            of -j argument.
            * testsuite/Makefile.in: Regenereate.
    
    From-SVN: r242713

commit 93bbce69ba216258a0d4729fed403cbfe65010ac
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Nov 22 17:08:09 2016 +0000

    * es.po, fr.po: Update.
    
    From-SVN: r242712

commit cd078383dc9a57c90ac9a4512617f37a4a15b0ff
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Nov 22 16:55:16 2016 +0000

    [AArch64] Fix PR target/77822: Use tighter predicates for zero_extract patterns
    
            Backport from mainline
            2016-11-07  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/77822
            * config/aarch64/aarch64.md (*tb<optab><mode>1): Use
            aarch64_simd_shift_imm_<mode> predicate for operand 1.
            (<optab>, ANY_EXTRACT): Use tighter predicates on operands 2 and 3
            to restrict them to an appropriate range and add FAIL check if the
            region they specify is out of range.  Delete useless constraint
            strings.
            (*<optab><mode>, ANY_EXTRACT): Add appropriate predicates on operands
            2 and 3 to restrict their range and add pattern predicate.
    
            * g++.dg/torture/pr77822.C: New test.
    
    From-SVN: r242709

commit 8c6de45e66807bfde1e23e1c9560e5fa6b704599
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 22 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r242685

commit fa383f83d6ee0cb3f6e921d826a3c4299a9e8af2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 21 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r242645

commit 388f5e0365710ce159e7b56047c6592e3e84d16f
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun Nov 20 20:12:18 2016 +0000

    re PR fortran/69741 (Bad error in forall with array loop counters)
    
    2016-11-20  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69741
            * resolve.c (gfc_resolve_forall): Check for nonscalar index variables.
    
    2016-11-20  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69741
            * gfortran.dg/forall_18.f90: New testcase.
    
    From-SVN: r242642

commit dec0d6541f55d4f4e0c4c2256656357e18a78895
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 20 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r242631

commit c395ab5c329ab9c908f64539f25f270b10dc15a9
Author: Walter Lee <walt@tilera.com>
Date:   Sat Nov 19 03:11:57 2016 +0000

    TILE-Gx: Fix bundling when encountering consecutive barriers.
    
            * config/tilegx/tilegx.c (tilegx_gen_bundles): Preserve
              end-of-bundle marker for consecutive barriers.
    
    From-SVN: r242620

commit d9aae46afb7bee130a19c083cb998ab6380e1ae8
Author: Walter Lee <walt@tilera.com>
Date:   Sat Nov 19 03:10:01 2016 +0000

    TILE-Gx: fix clzsi2 for big-endian.
    
            * config/tilegx/tilegx.md (clzsi2): Fix for big-endian.
    
    From-SVN: r242619

commit c42612899c88973895637e6f6187d6ee7ddda9b3
Author: Walter Lee <walt@tilera.com>
Date:   Sat Nov 19 03:03:55 2016 +0000

    TILEPro: force gcc to link against libgcc.a when creating shared
    libraries.
    
            * config.host (tilepro*-*-linux*): Add t-slibgcc-libgcc.
    
    From-SVN: r242618

commit f9198255fefc6515329553304755a251677cd2c9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 19 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r242612

commit 9a32634d815a4e0e41421b6b48738f2d51da98a4
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Nov 18 15:27:41 2016 -0500

    PR c++/67631 - list-init and explicit conversions
    
            * semantics.c (finish_compound_literal): Call digest_init_flags.
            * typeck2.c (digest_init_flags): Add complain parm.
            (store_init_value): Pass it.
    
    From-SVN: r242604

commit 42e2f9db911b06ecb38c5ba6a72f6ded3707e7aa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 18 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r242580

commit a03b9cfbbf93964bef9e54d7229ad18291910492
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Nov 17 17:27:56 2016 -0500

    PR c++/68377 - parenthesized expr in fold-expression
    
            * parser.c (cp_parser_fold_expression): Check TREE_NO_WARNING.
    
    From-SVN: r242571

commit 21687e4b3e1c846e4f958744f23c4dfdebae6cd8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 17 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r242528

commit b4aee40de49f0339482c7c4943bdac63bc1749bd
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Wed Nov 16 12:38:26 2016 +0000

    [i386][musl] Add cpuinfo to static libgcc only on *-musl*
    
    The __cpu_indicator_init and __cpu_model symbols are not safe to use
    from shared libgcc_s.so from ifunc resolvers, so since gcc-6, only
    the definitions from static libgcc.a are used, however the symbols
    are kept in libgcc_s as well for backward compatibility (with
    appropriate symbol version).  On targets without such backward
    compatibility concern add cpuinfo to the static library only (this
    avoids running the ctor, reduces libgcc_s size and elf abi concerns
    about the versioned symbols).
    
            Backport from mainline
            2016-11-11  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * config.host (i[3456]86-*-musl*, x86_64-*-musl*): Use
            i386/t-cpuinfo-static instead of i386/t-cpuinfo.
            * config/i386/t-cpuinfo-static: New.
    
    From-SVN: r242486

commit 78baaeb6cd910302131a9611948052db764048cc
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Wed Nov 16 11:28:57 2016 +0000

    Fix PR78294 - thread sanitizer broken when using ld.gold
    
    When one uses ld.gold to build gcc, the thread sanitizer doesn't work,
    because gold is more conservative when applying TLS relaxations than
    ld.bfd. In this case a missing initial-exec attribute on a declaration
    causes gcc to assume the general dynamic model. With ld.bfd this gets
    relaxed to initial exec when linking the shared library, so the missing
    attribute doesn't matter. But ld.gold doesn't perform this optimization
    and this leads to crashes on tsan instrumented binaries.
    
    See: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78294
    and: https://sourceware.org/bugzilla/show_bug.cgi?id=20805
    
    The fix is easy, just add the missing attribute.
    
      PR sanitizer/78294
      * tsan/tsan_rtl.cc: Add missing attribute.
    
    From-SVN: r242482

commit be316c84313f51dccad756dd9b4e82fe8aac9486
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 16 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r242465

commit 9db242bb7afdd19ee2da5f51fec410c8dfd1765c
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Tue Nov 15 14:42:16 2016 +0000

    Fix ChangeLog entry
    
    From-SVN: r242419

commit 4aea9cfd2485819876e14c14a1abaeb8bc3f62d7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Nov 15 14:39:16 2016 +0000

    Fix find&replace error in license boilerplate
    
            * testsuite/experimental/any/typedefs.cc: Likewise.
            * testsuite/experimental/array/make_array.cc: Likewise.
            * testsuite/experimental/array/neg.cc: Likewise.
            * testsuite/experimental/chrono/value.cc: Likewise.
            * testsuite/experimental/deque/erasure.cc: Likewise.
            * testsuite/experimental/forward_list/erasure.cc: Likewise.
            * testsuite/experimental/list/erasure.cc: Likewise.
            * testsuite/experimental/map/erasure.cc: Likewise.
            * testsuite/experimental/memory/observer_ptr/assignment/assign.cc:
            Likewise.
            * testsuite/experimental/memory/observer_ptr/cons/cons.cc: Likewise.
            * testsuite/experimental/memory/observer_ptr/hash/hash.cc: Likewise.
            * testsuite/experimental/memory/observer_ptr/make_observer.cc:
            Likewise.
            * testsuite/experimental/memory/observer_ptr/relops/relops.cc:
            Likewise.
            * testsuite/experimental/memory/observer_ptr/requirements.cc: Likewise.
            * testsuite/experimental/memory/observer_ptr/swap/swap.cc: Likewise.
            * testsuite/experimental/memory/observer_ptr/typedefs.cc: Likewise.
            * testsuite/experimental/optional/77288.cc: Likewise.
            * testsuite/experimental/optional/assignment/1.cc: Likewise.
            * testsuite/experimental/optional/assignment/2.cc: Likewise.
            * testsuite/experimental/optional/assignment/3.cc: Likewise.
            * testsuite/experimental/optional/assignment/4.cc: Likewise.
            * testsuite/experimental/optional/assignment/5.cc: Likewise.
            * testsuite/experimental/optional/assignment/6.cc: Likewise.
            * testsuite/experimental/optional/cons/77727.cc: Likewise.
            * testsuite/experimental/optional/cons/move.cc: Likewise.
            * testsuite/experimental/optional/cons/value.cc: Likewise.
            * testsuite/experimental/optional/cons/value_neg.cc: Likewise.
            * testsuite/experimental/optional/constexpr/cons/value.cc: Likewise.
            * testsuite/experimental/optional/constexpr/make_optional.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/1.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/2.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/3.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/4.cc: Likewise.
            * testsuite/experimental/optional/constexpr/observers/5.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/1.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/2.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/3.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/4.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/5.cc: Likewise.
            * testsuite/experimental/optional/constexpr/relops/6.cc: Likewise.
            * testsuite/experimental/optional/make_optional.cc: Likewise.
            * testsuite/experimental/optional/observers/1.cc: Likewise.
            * testsuite/experimental/optional/observers/2.cc: Likewise.
            * testsuite/experimental/optional/observers/3.cc: Likewise.
            * testsuite/experimental/optional/observers/4.cc: Likewise.
            * testsuite/experimental/optional/observers/5.cc: Likewise.
            * testsuite/experimental/optional/relops/1.cc: Likewise.
            * testsuite/experimental/optional/relops/2.cc: Likewise.
            * testsuite/experimental/optional/relops/3.cc: Likewise.
            * testsuite/experimental/optional/relops/4.cc: Likewise.
            * testsuite/experimental/optional/relops/5.cc: Likewise.
            * testsuite/experimental/optional/relops/6.cc: Likewise.
            * testsuite/experimental/optional/requirements.cc: Likewise.
            * testsuite/experimental/optional/swap/1.cc: Likewise.
            * testsuite/experimental/optional/typedefs.cc: Likewise.
            * testsuite/experimental/propagate_const/assignment/move.cc: Likewise.
            * testsuite/experimental/propagate_const/assignment/move_neg.cc:
            Likewise.
            * testsuite/experimental/propagate_const/cons/move.cc: Likewise.
            * testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.
            * testsuite/experimental/propagate_const/hash/1.cc: Likewise.
            * testsuite/experimental/propagate_const/observers/1.cc: Likewise.
            * testsuite/experimental/propagate_const/relops/1.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements1.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements2.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements3.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements4.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements5.cc: Likewise.
            * testsuite/experimental/propagate_const/swap/1.cc: Likewise.
            * testsuite/experimental/propagate_const/typedefs.cc: Likewise.
            * testsuite/experimental/random/randint.cc: Likewise.
            * testsuite/experimental/ratio/value.cc: Likewise.
            * testsuite/experimental/set/erasure.cc: Likewise.
            * testsuite/experimental/string/erasure.cc: Likewise.
            * testsuite/experimental/string_view/typedefs.cc: Likewise.
            * testsuite/experimental/system_error/value.cc: Likewise.
            * testsuite/experimental/tuple/tuple_size.cc: Likewise.
            * testsuite/experimental/type_traits/value.cc: Likewise.
            * testsuite/experimental/unordered_map/erasure.cc: Likewise.
            * testsuite/experimental/unordered_set/erasure.cc: Likewise.
            * testsuite/experimental/vector/erasure.cc: Likewise.
    
    From-SVN: r242418

commit fa3b402d6581202e40205bd23c1243a2fbee646b
Author: Matthias Klose <doko@ubuntu.com>
Date:   Tue Nov 15 11:10:05 2016 +0000

    install.texi: Move the 'Overriding configure test results' subsub section to the...
    
    2016-11-15  Matthias Klose  <doko@ubuntu.com>
    
            * doc/install.texi: Move the 'Overriding configure test results'
            subsub section to the 'Cross-Compiler-Specific Options' sub section.
    
    From-SVN: r242412

commit e642f3410b777f31d8f52a681f80a2cbef8abd53
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 15 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r242405

commit c244906e085b2c31b913f252b3d0138acf18ed69
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 14 00:16:08 2016 +0000

    Daily bump.
    
    From-SVN: r242371

commit 14b27c53fcbdb8d3bc917345538a9dcb82a52a92
Author: Bob Duff <duff@adacore.com>
Date:   Sun Nov 13 18:38:09 2016 +0000

    decl.c (gnat_to_gnu_entity): In assertion about known Esize...
    
            * gcc-interface/decl.c (gnat_to_gnu_entity): In assertion about known
            Esize, protect with !is_type and change !Unknown_Esize to Known_Esize.
    
    From-SVN: r242364

commit 83a29ac883f3413c685f8f6a04bd890061831747
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Nov 13 18:12:21 2016 +0000

    utils2.c (gnat_protect_expr): Also protect only the address if the expression is the component of a dereference.
    
            * gcc-interface/utils2.c (gnat_protect_expr): Also protect only the
            address if the expression is the component of a dereference.
            Do not use a reference type for the final temporary reference.
    
    From-SVN: r242359

commit ae05fcf50d040d4a185bc5da7dfc5c6519840a32
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Nov 13 17:27:51 2016 +0000

    ipa-icf.c (sem_function::merge): Do not create a wrapper also if the original function needs a static chain.
    
            * ipa-icf.c (sem_function::merge): Do not create a wrapper also if the
            original function needs a static chain.
    
    From-SVN: r242355

commit 1b6a50c2cad607164f66471b81bf954098a713f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 13 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r242344

commit cfe2b0522b26549c75e2316158ea8561bf62c09c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sat Nov 12 18:51:35 2016 +0000

    * es.po: Update.
    
    From-SVN: r242339

commit 6aee67e108732aa8db0ac8e254e3952a3f95eb84
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 12 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r242330

commit a0ebbdc5abc56bb06a51f49329922597e178a66c
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Nov 11 22:08:48 2016 +0000

    * fr.po: Update.
    
    From-SVN: r242325

commit 7f3fa3d138dccde0f73c67269bf7cbdc8b665a1f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Nov 11 20:42:26 2016 +0100

    i386.md (*<shift_insn><mode>3_doubleword): Mark operand 0 as earlyclobber.
    
            * config/i386/i386.md (*<shift_insn><mode>3_doubleword): Mark
            operand 0 as earlyclobber.
            (*ashl<mode>3_doubleword): Ditto for all operand 0 alternatives.
    
    From-SVN: r242319

commit d264b6d2dbc2508a98ea10e482cfb8e14db30717
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri Nov 11 17:42:54 2016 +0100

    re PR target/78310 (ICE: insn does not satisfy its constraints: {*bmi2_rorxdi3_1} with -mbmi2)
    
            PR target/78310
            * config/i386/i386.md (rotate to rotatex splitter): Avoid overflow
            when calculating operand 2.
            (rotate to rotatex zext splitter): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/78310
            * gcc.target/i386/pr78310.c: New test.
    
    From-SVN: r242077

commit b2893e8766b5f46ef0b484d2b52f42c6a01033ec
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Fri Nov 11 10:37:53 2016 +0000

    S/390: Add PR77822 testcase.
    
    For real this time.
    
    2016-11-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/77822
            * gcc.target/s390/pr77822.c: New test for PR/77822.
    
    From-SVN: r242067

commit 552a311bbe398046207c2fca181b52d1ee9bd4aa
Author: Dominik Vogt <vogt@linux.vnet.ibm.com>
Date:   Fri Nov 11 08:48:29 2016 +0000

    PR77822: S/390: Add range checks for zero_extract operands.
    
    Make sure the position and size operands of zero_extract are within
    the proper range for the mode.
    
    gcc/ChangeLog:
    
    2016-11-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/77822
            * config/s390/s390.md ("extzv", "*extzv<mode>_zEC12")
            ("*extzv<mode>_z10"): Check validity of zero_extend arguments.
    
    gcc/testsuite/ChangeLog:
    
    2016-11-11  Dominik Vogt  <vogt@linux.vnet.ibm.com>
    
            PR target/77822
            * gcc.target/s390/pr77822.c: New test for PR/77822.
    
    From-SVN: r242066

commit 05874c4295bb37159a0f13ad0ab1f79da6d9788d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 11 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r242064

commit be44d41f2f4297d5a9f4b0992e3fd8e0a25c3f99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 10 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r242029

commit 6909d614ef6943b6e86628ffd713234b958b6023
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Wed Nov 9 20:44:22 2016 +0100

    re PR target/78262 (wrong code with -fschedule-insns)
    
            PR target/78262
            * config/i386/i386.md (*<shift_insn><mode>3_doubleword): Mark
            operand 0 as earlyclobber.
    
    testsuite/ChangeLog:
    
            PR target/78262
            * gcc.target/i386/pr78262.c: New test.
    
    From-SVN: r242014

commit f0cd8f4b2b5afbaa11da1c9db7ba51240f65e523
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 9 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r241986

commit eca8e556e8666d7bb84520860e522f5aada57156
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 8 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r241948

commit 45d217befcf3f8114b55cf97479d493269142133
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Mon Nov 7 15:38:43 2016 -0600

    backport: config.gcc (powerpc*-*-*, [...]): Remove setting of INCLUDE_EXTRA_SPEC for Advance Toolchain builds.
    
            Backport from trunk
            2016-11-07  Peter Bergner  <bergner@vnet.ibm.com>
    
            * config.gcc (powerpc*-*-*, rs6000*-*-*): Remove setting of
            INCLUDE_EXTRA_SPEC for Advance Toolchain builds.
    
    From-SVN: r241938

commit b5a709f4154f823589725aef2a52df4a0a19266c
Author: Jack Howarth <howarth.at.gcc@gmail.com>
Date:   Mon Nov 7 19:17:04 2016 +0000

    re PR driver/78206 (bootstrap failure under Apple sandbox that blacklists reads in /usr/local)
    
    2016-11-06  Jack Howarth  <howarth.at.gcc@gmail.com>
    
            PR driver/78206
            * incpath.c: (remove_dup(): Also silently ignore EPERM.
    
    From-SVN: r241926

commit a29c11ecf2f7806617653b5a042b6ba82099ed2f
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Nov 7 18:37:22 2016 +0000

    * es.po: Update.
    
    From-SVN: r241923

commit f3ae8aa48130aa1e8dd60c53a5020281fd80cf1c
Author: Florian Weimer <fweimer@redhat.com>
Date:   Mon Nov 7 18:08:40 2016 +0100

    PR libgcc/78064: Add missing include directive to unwind-c.c
    
            Backport from mainline
            2016-10-24  Florian Weimer  <fweimer@redhat.com>
    
    
            PR libgcc/78064
            * unwind-c.c: Include auto-target.h.
    
    From-SVN: r241914

commit 074657df271beca6b634f34a9a16c74427d5090b
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Nov 7 13:46:31 2016 +0000

    backport: re PR fortran/78221 (bogus warning: Non-zero imaginary part discarded in conversion [-Wconversion])
    
    2016-11-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78221
            * arith.c (gfc_complex2real):  Change gfc_warning_now to
            gfc_warning.
    
    2016-11-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78221
            * gfortran.dg/warn_conversion_9.f90:  New test.
    
    From-SVN: r241906

commit 79a61ec22366905f51ef9ae434e264d0f8cbdd1e
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Nov 7 12:32:34 2016 +0000

    re PR target/78229 (ICE in redirect_eh_edge_1, at tree-eh.c:2305)
    
    2016-11-07  Richard Biener  <rguenther@suse.de>
    
            PR target/78229
            * config/i386/i386.c (ix86_gimple_fold_builtin): Do not adjust
            EH info.
    
            * g++.dg/pr78229.C: New testcase.
    
    From-SVN: r241902

commit 7cb5195d81da7a762c0814b2b38d9c577a3e80f5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Nov 7 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r241890

commit 7e22b8532469155ba58a838b5ea1ec6fb213621b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Nov 6 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241881

commit 91000dc8efb275a2620e07b9c6729c5e5fd5f555
Author: Martin Sebor <msebor@gcc.gnu.org>
Date:   Sat Nov 5 17:58:42 2016 -0600

    Add test missed in r241877.
    
    From-SVN: r241879

commit a3c01d6db3e9c0885c03bc2859eba0dc5d7110fd
Author: Martin Sebor <msebor@redhat.com>
Date:   Sat Nov 5 22:41:18 2016 +0000

    71115 - [5/6 Regression] Missing warning: excess elements in struct initializer
    Backport from trunk.
    
    gcc/c/ChangeLog:
            * c-typeck.c (error_init): Use
            expansion_point_location_if_in_system_header.
            (warning_init): Same.
    
    gcc/testsuite/ChangeLog:
            * gcc.dg/init-excess-2.c: New test.
            * gcc.dg/Woverride-init-1.c: Adjust.
            * gcc.dg/Woverride-init-2.c: Same.
    
    From-SVN: r241877

commit 6beb94e5892e8b3f48bb7ce7dbdc547c0d1d0776
Author: Martin Sebor <msebor@redhat.com>
Date:   Sat Nov 5 20:08:25 2016 +0000

    PR c++/78039 - fails to compile glibc tests
    
    gcc/cp/ChangeLog:
            * class.c (diagnose_flexarrays): Avoid rejecting an invalid flexible
            array member with a hard error when it is followed by another member
            in a different struct, and instead issue just a pedantic warning.
    
    gcc/testsuite/ChangeLog:
            * g++.dg/ext/flexary18.C: New test.
            * g++.dg/ext/flexary19.C: New test.
    
    From-SVN: r241876

commit 7cd84e6bf96a5b3698ee7e198bc3c38a0edcda61
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sat Nov 5 19:34:44 2016 +0000

    * es.po: Update.
    
    From-SVN: r241874

commit b25e67a28b3353764941cabb95e098a0b8369bb4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Nov 5 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r241866

commit 60ef2ccc2536749fd165e7c510b7f005564a4f0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Nov 4 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241836

commit 0307d4192b1f292c1ede546a7799a05037ec765d
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Nov 3 17:06:49 2016 +0000

    Work around 32-bit i386 STV testcases failing with -mstackrealign (PR target/77483)
    
            Backport from mainline
            2016-10-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/77483
            * gcc.target/i386/mask-unpack.c (dg-options): Add -mno-stackrealign.
            * gcc.target/i386/pr65105-1.c: Likewise.
            * gcc.target/i386/pr65105-2.c: Likewise.
            * gcc.target/i386/pr65105-3.c: Likewise.
            * gcc.target/i386/pr65105-5.c: Likewise.
            * gcc.target/i386/pr67761.c: Likewise.
    
    From-SVN: r241825

commit 0cdb4a080e420253b144a28c9c38d5c48219bb43
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Nov 3 14:41:39 2016 +0100

    Create x.gcov file for binary w/o x.gcda file (PR
    
    From-SVN: r241819

commit d614a6c7bc8358cfa96c7b7309e4bf30091ac19b
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Nov 3 13:25:51 2016 +0000

    backport: re PR bootstrap/77768 (LTO/PGO -O3 bootstrap broken: tree-vrp.c:11053:0: internal compiler error: Segmentation fault)
    
    2016-11-03  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-29  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77768
            * tree-ssa-sccvn.c (visit_reference_op_store): Properly deal
            with stores to a place we know has a constant value.
            * tree-vrp.c (set_defs_to_varying): New helper avoiding
            writing to vr_const_varying.
            (vrp_initialize): Call it.
            (vrp_visit_stmt): Likewise.
            (evrp_dom_walker::before_dom_children): Likewise.
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            Handle stores to readonly memory when removing redundant stores.
    
            * gcc.dg/torture/pr77768.c: New testcase.
    
    From-SVN: r241818

commit 7cc9e5d28730bbf58627f5e9f2f1d14fb488f05e
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Thu Nov 3 11:50:54 2016 +0000

    * explow.c (validize_mem): Do not modify the argument in-place.
    
    From-SVN: r241813

commit c4c01fd69f1dba86787adf4bc54e0b7337113503
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Nov 3 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r241807

commit 4d3150b7b7ab887b2e2cc66813968555a488f839
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Wed Nov 2 20:54:29 2016 +0000

    backport: re PR fortran/69544 (Internal compiler error with -Wall and where)
    
    2016-11-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69544
            PR fortran/78178
            * gfortran.dg/where_5.f90:  New test.
            * gfortran.dg/where_6.f90:  New test.
    
    2016-11-02  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/69544
            PR fortran/78178
            * match.c (match_simple_where):  Fill in locus for assigment
            in simple WHERE statement.
            (gfc_match_where):  Likewise.
    
    From-SVN: r241802

commit 8e6263f91aba77fbe0ea18560d0975374691bb17
Author: Will Schmidt <will_schmidt@vnet.ibm.com>
Date:   Wed Nov 2 14:12:23 2016 +0000

    backport: re PR middle-end/72747 (powerpc: wrong code generated for vec_splats in cascading assignment)
    
    [gcc]
    
    2016-11-02  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            Backport from trunk
            2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            PR middle-end/72747
            * gimplify.c (gimplify_init_constructor): Move emit of constructor
            assignment to earlier in the if/else logic.
    
    [gcc/testsuite]
    
    2016-11-02  Will Schmidt  <will_schmidt@vnet.ibm.com>
    
            Backport from trunk
            2016-10-26  Will Schmidt <will_schmidt@vnet.ibm.com>
    
            PR middle-end/72747
            * c-c++-common/pr72747-1.c: New test.
            * c-c++-common/pr72747-2.c: Likewise.
    
    From-SVN: r241792

commit 0ee526bf1c3328217b06bf8be9ec4caa1510d8d1
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Nov 2 12:47:10 2016 +0000

    Backport PRs 77648, 77745, 77839, 77879, 78047, 78129
    
    2016-11-02  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-11-02  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/78047
            * tree-ssa-structalias.c (push_fields_onto_fieldstack): Initialize
            fake field at offset zero conservatively regarding to may_have_pointers.
    
            2016-10-31  Richard Biener  <rguenther@suse.de>
    
            PR lto/78129
            * lto.c (do_whole_program_analysis): Bail out after errors
            from WPA analysis.
    
            2016-10-07  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77879
            * tree-ssa-structalias.c (handle_const_call): Properly handle
            NRV return slots.
            (handle_pure_call): Likewise.
    
            2016-10-06  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77839
            * tree-ssa-sccvn.c (set_ssa_val_to): Forbid value -> constant value
            lattice transition.
    
            * gcc.dg/torture/pr77839.c: New testcase.
    
            2016-09-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77745
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
            When removing redundant stores make sure to check compatibility
            of the TBAA state for downstream accesses.
            * tree-ssa-sccvn.c (visit_reference_op_store): Likewise for when
            value-numbering virtual operands for store matches.
    
            * g++.dg/torture/pr77745.C: New testcase.
    
            2016-09-21  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77648
            * tree-ssa-structalias.c (process_constraint): Handle all DEREF
            with complex RHS.
            (make_transitive_closure_constraints): Adjust comment.
            (make_any_offset_constraints): New function.
            (handle_rhs_call): Make sure to first expand a pointer to all
            subfields before transitively closing it.
            (handle_const_call): Likewise.  Properly expand returned
            pointers as well.
            (handle_pure_call): Likewise.
    
            * gcc.dg/torture/pr77648-1.c: New testcase.
            * gcc.dg/torture/pr77648-2.c: Likewise.
    
    From-SVN: r241788

commit 9ec500b2f369448d36dc5bdb81868070562b4a4a
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Nov 2 10:31:43 2016 +0000

    Fix linker detection in check_gc_sections_available
    
            * lib/target-supports.exp (check_gc_sections_available): Use
            -print-prog-name=ld to determine linker used.
    
    From-SVN: r241784

commit c82b127e4ad535c25bf9c02a589937249a221620
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Wed Nov 2 10:12:19 2016 +0000

    Parallelize check-gnat
    
            Backport from mainline
            2016-10-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * gcc-interface/Make-lang.in (lang_checks_parallelized): New target.
            (check_gnat_parallelize): Likewise.
    
    From-SVN: r241781

commit 8588f94be181fce33d7e7e30f4a56ce1fe98c6a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Nov 2 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r241763

commit ee7a067e771a177cafc3f27d599174652f55ffd1
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Tue Nov 1 18:17:58 2016 +0000

    re PR target/78166 (hash.c:1887:1: error: unrecognizable insn)
    
            PR target/78166
            * config/pa/pa.md: Add new shift/add patterns to handle
            (plus (mult (reg) (mem_shadd_operand)) (reg)) source operand.
    
    From-SVN: r241750

commit d2e3f758bde233f3710994801e5f872d6ea425dc
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue Nov 1 12:53:08 2016 +0000

    * es.po: Update.
    
    From-SVN: r241738

commit d6a3ebf558a6fed17b52c74fede2691b1836ef10
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue Nov 1 10:29:40 2016 +0000

    [ree] PR rtl-optimization/78038: Handle global register dataflow definitions in ree
    
            Backport from mainline
            2016-10-21  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR rtl-optimization/78038
            * ree.c (get_defs): Return NULL if a defining insn for REG cannot
            be deduced to set REG through the RTL structure.
            (make_defs_and_copies_lists): Return false on a failing get_defs call.
    
            * gcc.target/aarch64/pr78038.c: New test.
    
    From-SVN: r241735

commit becb76a9543bbe4d31791b779c1ef8b0d6e223db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Nov 1 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r241729

commit 68288b601c0d4a458d66b096615595e31f922b7a
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Mon Oct 31 20:57:16 2016 +0000

    backport: re PR libfortran/78123 (Short reads with T edit descriptor not padding correctly)
    
    2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/78123
            * io/transfer.c (formatted_transfer_scalar_read): Clear seen_eor
            only if we have tabbed to left of current position.
            Backport from trunk
            PR fortran/78123
            * gfortran.dg/fmt_t_9.f: New test.
    
    From-SVN: r241722

commit 84f4751822adaa5b20697b8377c8072d02b1a18f
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Mon Oct 31 18:28:11 2016 +0000

    backport: re PR fortran/71902 (Unneeded temporary on reallocatable character assignment)
    
    2016-10-31  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71902
            * frontend-passes.c (realloc_string_callback): Also check for the
            lhs being deferred.  Name temporary variable "realloc_string".
    
    2016-10-31  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/71902
            * gfortran.dg/dependency_47.f90:  New test.
            * gfortran.dg/dependency_49.f90:  New test
    
    From-SVN: r241717

commit 841c82bb571e437df6f67f2ce38d879e10ccfb09
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 31 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241693

commit 30a0fa66af090425dc3d3bdd29f6c8360984165f
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Oct 30 18:28:33 2016 +0000

    backport: re PR fortran/67219 (Incorrect conversion warning)
    
    2016-10-30  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/67219
            * arith.c (gfc_int2real):  Change gfc_warning_now
            to gfc_warning.
            * primary.c (match_complex_constant):  If there
            is no comma, throw away any warning which might have
            been issued by gfc_int2real.
    
    2016-10-30  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/67219
            * gfortran.dg/pr67219.f90:  New test.
    
    From-SVN: r241690

commit dffe7935f2e021f67f93462b9e4ac804aae295c0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 30 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241683

commit 575599280f82af8e16d2faac4b49c0d0914a577f
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Sat Oct 29 15:43:40 2016 +0000

    pa.h (BIGGEST_ALIGNMENT): Adjust comment.
    
            * config/pa/pa.h (BIGGEST_ALIGNMENT): Adjust comment.
            (MALLOC_ABI_ALIGNMENT): Define.
    
    From-SVN: r241677

commit 7ec55d5bbfb8f0207cf797826c8aa1c9f1adffe1
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sat Oct 29 02:38:30 2016 +0100

    * eo.po: Update.
    
    From-SVN: r241674

commit be1a00b4fba650429b5f502f0059cd4eaabdf473
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 29 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241671

commit 48bea701dc059fcf9a9e115be811182a8f28b267
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 28 23:40:07 2016 +0000

    re PR fortran/71891 (fortran/symbol.c:4864: suspicious if ?)
    
    2016-10-28  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/71891
            * symbol.c (gfc_type_compatible): Fix typo.
    
    From-SVN: r241669

commit 7aa77109b296d520f10d2a37a48cb51ba36986fa
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Fri Oct 28 20:22:10 2016 +0000

    re PR go/78144 (FAIL: time on systems with tzdata2016g installed)
    
            PR go/78144
        libgo: incorporate fix for timezone test
    
        This brings over the test-only fix for issue 17276 into gccgo/libgo
        (with tzdata-2016g there is a new zone abbreviation).  This is a
        copy of https://golang.org/cl/29995.
    
        Reviewed-on: https://go-review.googlesource.com/32182
    
    From-SVN: r241662

commit fcbb7d25bcc990a0daf0f01ae8914920fabbcb14
Author: Aldy Hernandez <aldyh@redhat.com>
Date:   Fri Oct 28 18:34:25 2016 +0000

    re PR debug/77773 (Segfault when compiling __simd64_float16_t using arm-none-eabi-g++ with debug information)
    
            PR debug/77773
            * c-pretty-print.c (simple_type_specifier): Do not dereference `t'
            if NULL.
    
    From-SVN: r241657

commit 0e0a2dba2e82fe116dabf4ff1dbdc572459e81ff
Author: Richard Biener <rguenther@suse.de>
Date:   Fri Oct 28 13:13:31 2016 +0000

    re PR middle-end/78128 (fortran/resolve.c:resolve_operator miscompiled at -O2)
    
    2016-10-28  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/78128
            PR middle-end/71002
            * fold-const.c (make_bit_field_ref): Only adjust alias set
            when the original alias set was zero.
    
    From-SVN: r241646

commit 90996c81d230239b9c54757197af51c434ce1697
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241639

commit 4a1b32e7a1ed3efd5a775ea0da820728c2cb966d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Thu Oct 27 05:00:46 2016 +0000

    re PR fortran/78092 (ICE when calling SIZEOF on CLASS(*) entry)
    
    2016-10-26  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/78092
            * trans-intrinsic.c (gfc_conv_intrinsic_sizeof):  Fix reference to an
            array element of type CLASS.
    
    2016-10-26  Steven G. Kargl <kargl@gcc.gnu.org>
    
            PR fortran/78092
            * gfortran.dg/pr78092.f90: New test.
    
    From-SVN: r241611

commit 30081f99561d782076fcf82ff23cf14b78d2a522
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 27 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241608

commit d3b373c929dff2c56dfd61cb9aef7146366bb0ec
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Oct 26 16:13:49 2016 +0000

    re PR fortran/78108 (Generic type-bound operator conflicts)
    
    2016-10-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78108
            * resolve.c (resolve_typebound_intrinsic_op): For submodules
            suppress the error and return if the same procedure symbol
            is added more than once to the interface.
    
    2016-10-26  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/78108
            * gfortran.dg/submodule_18.f08: New test.
            * gfortran.dg/submodule_19.f08: New test.
    
    From-SVN: r241575

commit cc16d8ec68ed6fb08e2c8b79528c366bd179971a
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Oct 26 17:13:39 2016 +0200

    backport: re PR target/78057 (FAIL: gcc.target/i386/bmi-{4,5,6}.c)
    
            Backport from mainline
            2016-10-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78057
            * config/i386/i386.c: Include fold-const-call.h, tree-vrp.h
            and tree-ssanames.h.
            (ix86_fold_builtin): Fold IX86_BUILTIN_[LT]ZCNT{16,32,64}
            with INTEGER_CST argument.
            (ix86_gimple_fold_builtin): New function.
            (TARGET_GIMPLE_FOLD_BUILTIN): Define.
    
            Backport from mainline
            2016-10-20 Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/78037
            * config/i386/bmiintrin.h (__tzcnt_u16): Call __builtin_ia32_tzcnt_u16.
            (__tzcnt_u32, _tzcnt_u32): Call __builtin_ia32_tzcnt_u32.
            (__tzcnt_u64, _tzcnt_u64): Call __builtin_ia32_tzcnt_u64.
            * config/i386/lzcntintrin.h (__lzcnt_u16): Call
            __builtin_ia32_lzcnt_u16.
            (__lzcnt_u32, _lzcnt_u32): Call __builtin_ia32_lzcnt_u32.
            (__lzcnt_u64, _lzcnt_u64): Call __builtin_ia32_lzcnt_u64.
            * config/i386/i386.md (UNSPEC_LZCNT, UNSPEC_TZCNT): New unspecs.
            (ctz<mode>2, *ctz<mode>2): Use SWI48 mode iterator.
            (bmi_tzcnt_<mode>): New expander.
            (*bmi_tzcnt_<mode>_falsedep_1): New define_insn_and_split pattern.
            (*bmi_tzcnt_<mode>_falsedep, *bmi_tzcnt_<mode>): New insn patterns.
            (clz<mode>2_lzcnt, *clz<mode>2_lzcnt): Use SWI48 mode iterator.
            (lzcnt_<mode>): New expander.
            (*lzcnt_<mode>_falsedep_1): New define_insn_and_split pattern.
            (*lzcnt_<mode>_falsedep, *lzcnt_<mode>): New insn patterns.
            * config/i386/i386-builtin-types.def (UINT_FTYPE_UINT): New.
            (UINT64_FTYPE_UINT64): New.
            * config/i386/i386-builtin.def (__builtin_clzs): Remove description.
            (__builtin_ia32_lzcnt_u16): New description.
            (__builtin_ia32_lzcnt_u32): Ditto.
            (__builtin_ia32_lzcnt_u64): Ditto.
            (__builtin_ctzs): Remove description.
            (__builtin_ia32_tzcnt_u16): New description.
            (__builtin_ia32_tzcnt_u32): Ditto.
            (__builtin_ia32_tzcnt_u64): Ditto.
            * config/i386/i386.c (ix86_expand_args_builtin): Handle
            UINT_FTYPE_UINT and UINT64_FTYPE_UINT64.
    
    testsuite/ChangeLog:
    
            * gcc.target/i386/bmi-6.c: XFAIL.
    
            Backport from mainline
            2016-10-21  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/78057
            * gcc.target/i386/pr78057.c: New test.
    
            Backport from mainline
            2016-10-20  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/78037
            * gcc.target/i386/pr78037.c: New test.
    
    From-SVN: r241556

commit 05ab0e1b97b31c51a6f4a42abb8260afff9bdef5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 26 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r241544

commit b4b76df285d0c71113992e5ce4092ec14fac017d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Oct 25 17:14:56 2016 +0000

    tree.h (wi::fits_to_tree_p): Accept only 0 and 1 for boolean types.
    
            * tree.h (wi::fits_to_tree_p): Accept only 0 and 1 for boolean types.
            * tree.c (int_fits_type_p): Likewise.  Adjust head comment.
    
    From-SVN: r241530

commit 21fa88c9c9313c2334f0b49db5f2deb8f420fc5d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 25 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r241501

commit 7c4f0ccf5c41e385fa2a360faace3272e35645af
Author: Bernd Edlinger <edlinger@gcc.gnu.org>
Date:   Mon Oct 24 20:21:06 2016 +0000

    backport: re PR tree-optimization/77550 (std::deque with -O3 has infinite std::distance)
    
    2016-10-24  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-09-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/77550
            * tree-vect-stmts.c (create_array_ref): Change parameters.
            (get_group_alias_ptr_type): New function.
            (vectorizable_store, vectorizable_load): Use get_group_alias_ptr_type.
    
            testsuite:
            2016-09-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/77550
            * g++.dg/pr77550.C: New test.
    
    From-SVN: r241495

commit 12f5885760043f5482fe608d1449ac92ecf8a198
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 24 20:03:08 2016 +0000

    re PR fortran/71895 (ICE in gfc_compare_derived_types, at fortran/interface.c:520)
    
    2016-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/71895
            * interface.c (gfc_compare_derived_types):  Convert gcc_assert()
            to a gfc_internal_error() to prevent an ICE.
    
    2016-10-24  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/71895
            * gfortran.dg/pr71895.f90: New test.
    
    From-SVN: r241494

commit eda2c1b6b4f797802cee7136254cdd3583866929
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Oct 24 15:52:31 2016 +0300

    backport: Cross-port the latest resolution of LWG2756 and some bug-fixes to experimental::optional.
    
    Backport from mainline:
    
            2016-10-24  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
            Cross-port the latest resolution of LWG2756 and some
            bug-fixes to experimental::optional.
            PR libstdc++/77288
            PR libstdc++/77727
            * include/experimental/optional (_Optional_base):
            Remove constructors that take a _Tp.
            (__is_optional_impl, __is_optional): Remove.
            (__converts_from_optional): New.
            (optional(_Up&&)): Fix constraints, call base with in_place.
            (optional(const optional<_Up>&)): Fix constraints, use emplace.
            (optional(optional<_Up>&&)): Likewise.
            (operator=(_Up&&)): Fix constraints.
            (operator=(const optional<_Up>&)): Likewise.
            (operator=(optional<_Up>&&)): Likewise.
            (emplace(_Args&&...)): Constrain.
            (emplace(initializer_list<_Up>, _Args&&...)): Likewise.
            * testsuite/experimental/optional/77288.cc: New.
            * testsuite/experimental/optional/assignment/5.cc: Adjust.
            * testsuite/experimental/optional/cons/77727.cc: New.
            * testsuite/experimental/optional/cons/value.cc: Adjust.
    
    From-SVN: r241477

commit 5414037f85fd066a32c9d52b089c4878d0ae1f1c
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 24 02:36:40 2016 +0000

    backport: re PR tree-optimization/77916 (ICE in verify_gimple_in_cfg: invalid (pointer) operands to plus/minus)
    
    [gcc]
    
    2016-10-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77916
            * gimple-ssa-strength-reduction.c (create_add_on_incoming_edge):
            Don't allow a MINUS_EXPR for pointer arithmetic for either known
            or unknown strides.
            (record_increment): Increments of -1 for unknown strides just use
            a multiply initializer like other negative values.
            (analyze_increments): Remove stopgap solution for -1 increment
            applied to pointer arithmetic.
            (insert_initializers): Requirement of initializer for -1 should be
            based on pointer-typedness of the candidate basis.
    
    [gcc/testsuite]
    
    2016-10-23  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77916
            * gcc.dg/torture/pr77916.c: New.
    
    From-SVN: r241461

commit db36ad6746da19da1d69b3490036aaee2de0b28a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 24 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r241459

commit 9fe9f76b937fd93750f7dc11535656322d82db0d
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Sun Oct 23 22:19:36 2016 +0000

    re PR fortran/77763 (ICE in parse_struct_map, at fortran/parse.c:3064)
    
    2016-10-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77763
            * parse.c (parse_spec): Allow STRUCTURE in BLOCK DATA.  Sort
            case labels.
    
    2016-10-23  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77763
            * gfortran.dg/pr77763.f90
    
    From-SVN: r241456

commit 00a01b6569accddaf81240cd81798ccf6952238d
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Sun Oct 23 21:48:32 2016 +0000

    re PR fortran/61420 ([OOP] type-bound procedure returning a procedure pointer fails to compile)
    
    2016-10-23  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/61420
            PR fortran/78013
            * resolve.c (resolve_variable): Obtain the typespec for a
            variable expression, when the variable is a function result
            that is a procedure pointer.
    
    2016-10-23  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/61420
            PR fortran/78013
            * gfortran.dg/proc_ptr_49.f90: New test.
    
    From-SVN: r241455

commit df089058dc6f42a62eba9c1521b59ec5bf72e2f4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Oct 23 20:31:56 2016 +0000

    sparc.md (cpu_feature): Minor tweak.
    
            * config/sparc/sparc.md (cpu_feature): Minor tweak.
            (enabled): Likewise.
            (movsi_insn, movdi_insn_sp32, movdi_insn_sp64, movsf_insn,
            movdf_insn_sp32, movdf_insn_sp64, zero_extendsidi2_insn_sp64,
            sign_extendsidi2_insn, mov<VM32:mode>_insn, mov<VM64:mode>_insn_sp64,
            mov<VM64:mode>_insn_sp32, not_<code><mode>, nand<mode>_vis,
            <code>_not1<mode>_vi, <code>_not2<mode>_vis, one_cmpl<mode>2,
            fcmp<code><GCM:gcm_name>, pdistn<mode>_vis): Likewise.
    
    From-SVN: r241453

commit 2d2ebd3989714e362afb50a0796fafded06ebbd9
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Oct 23 17:32:40 2016 +0000

    backport: re PR fortran/78021 (Wrong result with optimization on character constant)
    
    2016-10-23  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78021
            * gfc_compare_functions:  Strings with different lengths in
            argument lists compare unequal.
    
    2016-10-23  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/78021
            * gfortran.dg/string_length_3.f90:  New test.
    
    From-SVN: r241449

commit fbdba936bb2146123de0f74df6513fb03654e0b6
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun Oct 23 13:55:44 2016 +0200

    backport: re PR fortran/72832 ([OOP] ALLOCATE with SOURCE fails to allocate requested dimensions)
    
    gcc/fortran/ChangeLog:
    
    2016-10-23  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/72832
            * trans-expr.c (gfc_copy_class_to_class): Add generation of
            runtime array bounds check.
            * trans-intrinsic.c (gfc_conv_intrinsic_size): Add a crutch to
            get the descriptor of a function returning a class object.
            * trans-stmt.c (gfc_trans_allocate): Use the array spec on the
            array to allocate instead of the array spec from source=.
    
    gcc/testsuite/ChangeLog:
    
    2016-10-23  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/72832
            * gfortran.dg/allocate_with_source_22.f03: New test.
            * gfortran.dg/allocate_with_source_23.f03: New test.  Expected to
            fail.
    
    From-SVN: r241448

commit e9b0d444eb7239c8032fc0c736ba456759f790ee
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Sun Oct 23 10:55:19 2016 +0000

    sparc-c.c (sparc_target_macros): Replace TARGET_64BIT with TARGET_ARCH64.
    
            * config/sparc/sparc-c.c (sparc_target_macros): Replace TARGET_64BIT
            with TARGET_ARCH64.  Define __VIS to 0x400 if TARGET_VIS4.
    
    From-SVN: r241447

commit 64b94e428a143c3d029298ea9275135c8c5aec18
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 23 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r241443

commit 0e22caed9e209d11b831e6e92207e15a74bf7bfc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 22 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241435

commit 124527ce5a0d1f2cbf4f0633c1002278aee9b36f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 21 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r241390

commit 96500e00759d8722bdecc800143a495ee1ffc985
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu Oct 20 11:51:45 2016 +0100

    PR78052 Define std::allocator<void>::{construct,destroy}
    
            PR libstdc++/78052
            * include/bits/allocator.h (allocator<void>::construct)
            (allocator<void>::destroy): Define.
            * testsuite/20_util/allocator/void.cc: New test.
    
    From-SVN: r241368

commit e2aa42d45ea4dfcb4d5ea90774494b18737426fa
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 20 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r241358

commit b59f1d204d40b6a2582e259b43f1a122fcf0a19e
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Oct 19 16:57:35 2016 +0200

    re PR target/77991 (ICE on x32 in plus_constant, at explow.c:87)
    
            PR target/77991
            * config/i386/i386.c (legitimize_tls_address)
            <case TLS_MODEL_INITIAL_EXEC>: For TARGET_64BIT || TARGET_ANY_GNU_TLS
            convert dest to Pmode if different than Pmode.
    
    testsuite/ChangeLog:
    
            PR target/77991
            * gcc.target/i386/pr77991.c: New test.
    
    From-SVN: r241345

commit e9f2a2edfdaee35c9a3f0d8746b1b0132654c1c7
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 19 11:20:20 2016 +0100

    Move negative unique_ptr tests to new file
    
            * testsuite/20_util/unique_ptr/cons/cv_qual.cc: Move negative tests
            to new file.
            * testsuite/20_util/unique_ptr/cons/cv_qual_neg.cc: New file.  Fix
            test for incompatible deleters to not also use incompatible types.
            Add tests for incompatible array types.
    
    From-SVN: r241335

commit 8edc6088c53837a62ff6e3f4781b00977c0acb67
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 19 11:15:27 2016 +0100

    PR77990 fix unique_ptr for non-copyable deleters
    
            PR libstdc++/77990
            * include/bits/unique_ptr.h (unique_ptr::unique_ptr(pointer)): Set
            pointer member after value-initialization of tuple.
            * testsuite/20_util/unique_ptr/assign/48635_neg.cc: Adjust dg-errors.
            * testsuite/20_util/unique_ptr/cons/77990.cc: New test.
            * testsuite/20_util/unique_ptr/cons/cv_qual.cc: Adjust dg-error.
    
    From-SVN: r241333

commit 7ec9d0128fb2031407026940230f7bbdda46f444
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 19 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241325

commit f6a42c071d373ec3ca474ba10cd1f42a5e27de87
Author: Kugan Vivekanandarajah <kuganv@linaro.org>
Date:   Tue Oct 18 09:41:21 2016 +0000

    backport: tree-vrp.c (vrp_intersect_ranges_1): Allocate bitmap before copying.
    
    2016-10-18  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            Backport from mainline
            2016-10-11  Kugan Vivekanandarajah  <kuganv@linaro.org>
    
            * tree-vrp.c (vrp_intersect_ranges_1): Allocate bitmap before
              copying.
    
    From-SVN: r241299

commit 7d000b16b2ab271d3b2022f8601be5a26c128e7f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 18 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241291

commit ec2b9e169069950625e417c9b03a4baabcd282d3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Mon Oct 17 21:29:31 2016 +0000

    re PR fortran/77978 (stop codes misinterpreted in both f2003 and f2008)
    
    2016-10-17  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77978
            * match.c (gfc_match_stopcode): Fix error reporting for several
            deficiencies in matching stop-codes.
    
    2016-10-17  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77978
            * gfortran.dg/pr77978_1.f90: New test.
            * gfortran.dg/pr77978_2.f90: Ditto.
            * gfortran.dg/pr77978_3.f90: Ditto.
    
    From-SVN: r241280

commit 1c3157fd3bc6ee84a79cb124b69624d265167030
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 19:21:26 2016 +0100

    PR77987 Fix unique_ptr<T[], D>::reset(U) for T != U
    
            PR libstdc++/77987
            * include/bits/unique_ptr.h (unique_ptr<T[], D>::reset<U>(U)): Copy
            value to pointer of the correct type to swap, to support conversions
            allowed by LWG 2118 / N4089.
            * testsuite/20_util/unique_ptr/assign/assign_neg.cc: Move test for
            incompatible deleters from ...
            * testsuite/20_util/unique_ptr/assign/cv_qual.cc: ... here.
            * testsuite/20_util/unique_ptr/modifiers/cv_qual.cc: Move tests for
            incompatible pointers to ...
            * testsuite/20_util/unique_ptr/modifiers/reset_neg.cc: ... here. Move
            destructor definition to base class. Test for invalid derived-to-base
            conversion.
    
    From-SVN: r241276

commit 905d95d5d7a18fd5a5f64f0d22312b3176a2e073
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:55:05 2016 +0100

    Remove invalid effective-targets from std::function tests
    
            * testsuite/20_util/function/77322.cc: Remove effective-target from
            dg-do directive.
            * testsuite/20_util/function/cons/72820.cc: Likewise.
    
    From-SVN: r241262

commit cfd905195ac92e1051ab640230041e2fb3c34060
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:51:23 2016 +0100

    Update docs on libstdc++ source-code layout
    
    Backport from mainline:
    2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/appendix_contributing.xml (contrib.organization):
            Replace <literallayout> with nested <variablelist> elements. Update
            some more outdated text.
            * doc/html/*: Regenerate.
    
    Backport from mainline:
    2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/appendix_contributing.xml (contrib.organization):
            Describe other subdirectories and add markup. Remove outdated
            reference to check-script target.
    
    From-SVN: r241258

commit c654ae27e7e56547be1e38e3819f9855d18720cb
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:51:18 2016 +0100

    Correct C++11 implementation status docs
    
            Backport from mainline:
            2016-10-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * doc/xml/manual/status_cxx2011.xml: Correct C++11 status.
    
    From-SVN: r241257

commit a921b555bb81731dc8676a532e4d2416c15cbf2c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:51:13 2016 +0100

    Change test to use VERIFY not assert
    
    Backport from mainline:
    2016-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/26_numerics/random/default_random_engine.cc: Use VERIFY
            instead of assert.
    
    From-SVN: r241256

commit 35ee8f79c8b9ddb91343b112ff261e9d3c551b68
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:51:08 2016 +0100

    Remove redundant const qualifiers from string_view
    
    Backport from mainline:
    2016-10-11  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/string_view (basic_string_view::_S_compare):
            Remove redundant const from return type.
            * include/std/string_view (basic_string_view:_S_compare): Likewise.
    
    From-SVN: r241255

commit baaefdd32f41d019f2302e45a62a246a30908f19
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:51:04 2016 +0100

    Use normal mode containers in searchers
    
    Backport from mainline:
    2016-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/functional (boyer_moore_searcher)
            (__boyer_moore_map_base, __boyer_moore_array_base): Qualify containers
            with _GLIBCXX_STD_C.
    
    From-SVN: r241254

commit 8cca112da9fabad1a978fd25c67f856211d781d5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:50:58 2016 +0100

    Qualify use of std::declval to avoid ADL
    
    Backport from mainline:
    2016-10-13  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/propagate_const (element_type): Qualify
            declval.
    
    From-SVN: r241253

commit 601cff17f7d422b7080158d7cdbb2728d3b21d06
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:50:53 2016 +0100

    Add noexcept to std::function swap
    
    Backport from mainline:
    2016-08-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/77322
            * doc/xml/manual/intro.xml: Document DR 2062 change.
            * include/std/functional (function::swap): Add noexcept.
            (swap(function<Res(Args...)&, function<Res(Args...)&)): Likewise.
            * testsuite/20_util/function/77322.cc: New test.
    
    From-SVN: r241252

commit 1ae40ccdb671b4c6ae49d9705be0c15c22a44c4e
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:50:47 2016 +0100

    Fix invalid dg-do directive
    
    Backport from mainline:
    2016-08-17  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/reference_wrapper/invoke-2.cc: Fix invalid dg-do
            directive.
    
    From-SVN: r241251

commit 2628c22ba62801f9d283453e6a4ad4bb4fb5542f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:50:43 2016 +0100

    Use ::new to avoid finding overloaded operator new
    
    Backport from mainline:
    2016-08-06  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/72820
            * include/std/functional (_Function_base::_Base_manager::_M_clone):
            Qualify new operator.
            * testsuite/20_util/function/cons/72820.cc: New test.
    
    From-SVN: r241250

commit 49116f1cf67dc6b2e8af18d8ab795a8d0f0f7fb5
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 17 17:50:37 2016 +0100

    Backport fixes to std::experimental::sample
    
            PR libstdc++/77994
            * include/experimental/algorithm (experimental::sample): Convert size
            argument to iterator difference type. Fix invalid use of input
            iterator. Defend against overloaded comma operator.
    
    From-SVN: r241249

commit 827748fc107570d1be227c9baa885c5b9b4756ba
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon Oct 17 14:22:22 2016 +0000

    backport: re PR tree-optimization/77937 (ICE: in replace_one_candidate, at gimple-ssa-strength-reduction.c:3370)
    
    [gcc]
    
    2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gimple-ssa-strength-reduction.c (analyze_increments): Use
            POINTER_TYPE_P on the candidate type to determine whether
            candidates in this chain require pointer arithmetic.
    
            2016-10-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gimple-ssa-strength-reduction.c (analyze_increments): Set cost
            to infinite when we have a pointer with an increment of -1.
    
    [gcc/testsuite]
    
    2016-10-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-10-13  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR tree-optimization/77937
            * gcc.dg/torture/pr77937-1.c: New.
            * gcc.dg/torture/pr77937-2.c: New.
    
    From-SVN: r241243

commit a66ac03bf6aceacb02109a483ae0fefba2887422
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Oct 17 15:17:53 2016 +0200

    Do not merge BBs with a different EH landing pads (PR
    
            Backported from mainline
            2016-10-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/77943
            * g++.dg/tree-ssa/pr77943.C: New test.
            Backported from mainline
            2016-10-13  Martin Liska  <mliska@suse.cz>
    
            PR tree-optimization/77943
            * tree-ssa-tail-merge.c (merge_stmts_p): Do not merge BBs with
            a different EH landing pads.
    
    From-SVN: r241239

commit c079fc321d7dd2e7ff4df0df5b436cd42d22a39c
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 17 08:56:01 2016 +0000

    system-darwin-ppc64.ads (Support_64_Bit_Divides): Delete.
    
            * system-darwin-ppc64.ads (Support_64_Bit_Divides): Delete.
            * system-linux-armeb.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mips.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mips64el.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-mipsel.ads (Support_64_Bit_Divides): Likewise.
            * system-linux-sparcv9.ads (Support_64_Bit_Divides): Likewise.
            * system-rtems.ads (Support_64_Bit_Divides): Likewise.
    
    From-SVN: r241232

commit 1ad5cbddf506743a4ae3b709c6af316b91250435
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 17 08:54:03 2016 +0000

    re PR bootstrap/77995 (bootstrap comparison failure on x86-64/Solaris)
    
            PR bootstrap/77995
            Backport from mainline
            2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>
    
            * tree.h (build_complex_type): Add second parameter with default.
            * tree.c (build_complex_type): Add NAMED second parameter and adjust
            recursive call.  Create a TYPE_DECL only if NAMED is true.
            (build_common_tree_nodes): Pass true in calls to build_complex_type.
    
    From-SVN: r241231

commit cb6da3b9f66508c72e0d20b02b3e96c0aad2e684
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 17 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r241225

commit 3253eedfdfcacf7710cbe81b0d417cecbd90454c
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Oct 16 19:37:50 2016 +0000

    sparc.c (sparc_expand_vector_init): Only accept literal constants in CONST_VECTORs.
    
            * config/sparc/sparc.c (sparc_expand_vector_init): Only accept literal
            constants in CONST_VECTORs.
    
    From-SVN: r241219

commit ef39d8054554f0b86796322474f187ca44732ee6
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Oct 16 18:16:29 2016 +0000

    backport: re PR fortran/77915 (Internal error for matmul() in forall with optimization)
    
    2016-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77915
            * frontend-passes.c (inline_matmul_assign):  Return early if
            inside a FORALL statement.
    
    2016-10-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            PR fortran/77915
            * gfortran.dg/matmul_11.f90:  New test.
    
    From-SVN: r241217

commit 26a891328492d9a9c37d667ad1af826bdcf63bd7
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sun Oct 16 14:04:18 2016 +0000

    backport: system-aix.ads (Always_Compatible_Rep): Change to False.
    
            Backport from mainline
            2016-10-16  Eric Botcazou  <ebotcazou@adacore.com>
    
            * system-aix.ads (Always_Compatible_Rep): Change to False.
            * system-aix64.ads (Always_Compatible_Rep): Likewise.
            * system-hpux-ia64.ads (Always_Compatible_Rep): Likewise.
            * system-hpux.ads (Always_Compatible_Rep): Likewise.
            * system-linux-alpha.ads (Always_Compatible_Rep): Likewise.
            * system-linux-hppa.ads (Always_Compatible_Rep): Likewise.
            * system-linux-ia64.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mips.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mips64el.ads (Always_Compatible_Rep): Likewise.
            * system-linux-mipsel.ads (Always_Compatible_Rep): Likewise.
            * system-linux-s390.ads (Always_Compatible_Rep): Likewise.
            * system-linux-s390x.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sh4.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sparc.ads (Always_Compatible_Rep): Likewise.
            * system-linux-sparcv9.ads (Always_Compatible_Rep): Likewise.
            * system-rtems.ads (Always_Compatible_Rep): Likewise.
    
    From-SVN: r241214

commit 2f260f130b473f070f758d22599d152acdd5e2c6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 16 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241209

commit 88a576538b6a502fcc0f24cc1a773bd028ffa176
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Oct 15 22:42:40 2016 +0000

    sparc.c (sparc_expand_vec_perm_bmask): Use a scratch register as destination of bmask.
    
            * config/sparc/sparc.c (sparc_expand_vec_perm_bmask): Use a scratch
            register as destination of bmask.
            (vector_init_bshuffle): Likewise.
            * config/sparc/sparc.md (vec_perm_constv8qi): Likewise.
            (bmaskdi_vis): Enable only in 64-bit mode.
    
    From-SVN: r241206

commit ec1d4cb57d8915bfe263a34ac02f68c912b3e35d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 15 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241195

commit 82d8e045a7bb4a2a02d73224641ae720a147d336
Author: Martin Sebor <msebor@redhat.com>
Date:   Fri Oct 14 15:37:54 2016 +0000

    PR c++/71912 - [6/7 regression] flexible array in struct in union rejected
    
    gcc/cp/ChangeLog:
            * class.c (struct flexmems_t):  Add members.
            (find_flexarrays): Add arguments.  Correct handling of anonymous
            structs.
            (diagnose_flexarrays): Adjust to issue warnings in addition to errors.
            (check_flexarrays): Add argument.
            (diagnose_invalid_flexarray): New functions.
    
    gcc/testsuite/ChangeLog:
            * g++.dg/ext/flexary4.C: Adjust.
            * g++.dg/ext/flexary5.C: Same.
            * g++.dg/ext/flexary9.C: Same.
            * g++.dg/ext/flexary19.C: New test.
            * g++.dg/ext/flexary18.C: New test.
            * g++.dg/torture/pr64312.C: Add a dg-error directive to an ill-formed
            regression test.
            * g++.dg/compat/struct-layout-1_generate.c (subfield): Add argument.
            Avoid generating a flexible array member in an array.
    
    From-SVN: r241168

commit 46a309ab56f98e8f78266b5192eb48e4eef78e95
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 14 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r241145

commit ea4f34429609978e5e19f0fe68f759119845f9ce
Author: Andrew Senkevich <andrew.senkevich@intel.com>
Date:   Thu Oct 13 21:15:45 2016 +0000

    Delete x86 deprecated pcommit instruction support
    
    Delete x86 pcommit instruction support, which has been deprecated:
    
    https://software.intel.com/en-us/blogs/2016/09/12/deprecate-pcommit-instruction
    
    gcc/
    
    2016-10-13  Andrew Senkevich  <andrew.senkevich@intel.com>
    
            Backport from trunk
            * common/config/i386/i386-common.c (OPTION_MASK_ISA_PCOMMIT_UNSET,
            OPTION_MASK_ISA_PCOMMIT_SET): Deleted definitions.
            (ix86_handle_option): Deleted handle of OPT_mpcommit.
            * config.gcc: Deleted pcommitintrin.h
            * config/i386/pcommitintrin.h: Deleted file.
            * config/i386/cpuid.h (bit_PCOMMIT): Deleted.
            * config/i386/driver-i386.c (host_detect_local_cpu): Deleted pcommit
            detection.
            * config/i386/i386-c.c (ix86_target_macros_internal): Deleted define
            __PCOMMIT__.
            * config/i386/i386.c (ix86_target_string): Deleted -mpcommit.
            (PTA_PCOMMIT, IX86_BUILTIN_PCOMMIT, __builtin_ia32_pcommit): Deleted.
            (ix86_option_override_internal): Deleted handle of option.
            (ix86_valid_target_attribute_inner_p): Deleted pcommit.
            * config/i386/i386.h (TARGET_PCOMMIT, TARGET_PCOMMIT_P): Deleted.
            * config/i386/i386.md (unspecv): Deleted UNSPECV_PCOMMIT.
            (pcommit): Deleted instruction.
            * config/i386/i386.opt: Mention -mpcommit deprecation.
            * config/i386/x86intrin.h: Deleted inclusion of pcommitintrin.h.
    
    gcc/testsuite/
    
    2016-10-13  Andrew Senkevich  <andrew.senkevich@intel.com>
    
            Backport from trunk
            * testsuite/gcc.target/i386/pcommit-1.c: Deleted test.
            * testsuite/gcc.target/i386/sse-12.c: Deleted -pcommit option.
            * testsuite/gcc.target/i386/sse-13.c: Ditto.
            * testsuite/gcc.target/i386/sse-14.c: Ditto.
            * testsuite/gcc.target/i386/sse-22.c: Ditto.
            * testsuite/gcc.target/i386/sse-23.c: Ditto.
            * testsuite/g++.dg/other/i386-2.C: Ditto.
            * testsuite/g++.dg/other/i386-3.C: Ditto.
    
    From-SVN: r241141

commit 462a1917f44f11ffa36254e0fe173d7e96617d42
Author: Tom de Vries <tom@codesourcery.com>
Date:   Thu Oct 13 11:40:33 2016 +0000

    Revert backport "Remove RECORD_TYPE special-casing in std_canonical_va_list_type"
    
    2016-10-13  Tom de Vries  <tom@codesourcery.com>
    
            revert:
            2016-10-11  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-10-11  Tom de Vries  <tom@codesourcery.com>
    
            PR middle-end/77558
            * builtins.c (std_canonical_va_list_type): Remove RECORD_TYPE
            special-casing.
    
    From-SVN: r241103

commit 8ad78b69ff4810df6133cee009cfd4e9fbdfb7ab
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 13 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r241080

commit 221c569fd5786d532c7ffbf894e92d6ea914bdfb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 12 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r241015

commit 070eed32711a3d931a7cba2612d52011a74927a3
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Tue Oct 11 21:46:12 2016 +0000

    re PR fortran/77942 (ICE: Floating point exception, in gfc_simplify_cshift, at fortran/simplify.c:1845)
    
    2016-10-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77942
            * simplify.c (gfc_simplify_cshift): Check for zero.
    
    2016-10-11  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77942
            * gfortran.dg/pr77942.f90
    
    From-SVN: r241011

commit 33f664adcdfb2b4d3263c45f491529964644bc6c
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue Oct 11 20:05:18 2016 +0000

    Add missing entry
    
    From-SVN: r241005

commit 9810f4240ddc44bc27018b20841238603421ff14
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue Oct 11 20:03:58 2016 +0000

    backport: system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.
    
            Backport from mainline
            2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>
    
            * system-linux-armeb.ads (Backend_Overflow_Checks): Change to True.
            * system-linux-mips.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-mips64el.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-mipsel.ads (Backend_Overflow_Checks): Likewise.
            * system-linux-sparcv9.ads (Backend_Overflow_Checks): Likewise.
            * system-rtems.ads: Likewise.
    
            2016-10-11  Eric Botcazou  <ebotcazou@adacore.com>
                        Tristan Gingold  <gingold@adacore.com>
    
            * system-linux-ppc64.ads: Delete.
            * system-linux-ppc.ads: Make 32-bit/64-bit neutral.
            * gcc-interface/Makefile.in (PowerPC/Linux): Simplify.
    
    From-SVN: r241004

commit 9ece245824eba0a047657bec4fa37b15e9cf790e
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Oct 11 08:21:25 2016 +0000

    backport "Remove RECORD_TYPE special-casing in std_canonical_va_list_type"
    
    2016-10-11  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-10-11  Tom de Vries  <tom@codesourcery.com>
    
            PR middle-end/77558
            * builtins.c (std_canonical_va_list_type): Remove RECORD_TYPE
            special-casing.
    
    From-SVN: r240970

commit ebc4529641d69d86eb9253c6c0ab1ea45d5b7622
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 11 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240961

commit 07d30fffc0388dc56b676f5372d87902e0f23b24
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Oct 10 23:38:44 2016 +0100

    * sv.po: Update.
    
    From-SVN: r240954

commit eb827634cdcaaf4a792d0772db1390bcbd10344e
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Oct 10 14:23:11 2016 +0000

    gen-avr-mmcu-texi.c (string.h): Include.
    
            * config/avr/gen-avr-mmcu-texi.c (string.h): Include.
    
    From-SVN: r240926

commit 304cdd32c02cf7dec5eaeb709e2881d72412af41
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 10 09:49:10 2016 +0000

    utils2.c (find_common_type): Do not return the LHS type if it's an array with non-constant lower bound and...
    
            * gcc-interface/utils2.c (find_common_type): Do not return the LHS type
            if it's an array with non-constant lower bound and the RHS type is an
            array with a constant one.
    
    From-SVN: r240914

commit 1efd6bcba1d08612aa5344549acd7b8a3418f7c4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Oct 10 08:50:07 2016 +0000

    utils.c (convert): For a biased input type, convert the bias itself to the base type before adding it.
    
            * gcc-interface/utils.c (convert): For a biased input type, convert
            the bias itself to the base type before adding it.
    
    From-SVN: r240911

commit 2e21f6a9c22b685ac08026681d73366465d723f8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 10 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240906

commit 882ea5f0c0cb37705102c32d3034cd3e93eb650f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 9 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240895

commit 5ba77b8e68304d99b920010c067d5d0391a47635
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 8 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240881

commit ba02c131fccb2f7ef92cc3cd316548ebc173571f
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Fri Oct 7 18:57:45 2016 +0000

    re PR fortran/77406 (ICE in generic_correspondence, at fortran/interface.c:1123)
    
    2016-10-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77406
            * interface.c (gfc_compare_interfaces): Fix detection of ambiguous
            interface involving alternate return.
            (check_interface1): Improve error message and loci.
    
    2016-10-07  Steven G. Kargl  <kargl@gcc.gnu.org>
    
            PR fortran/77406
            * gfortran.dg/pr77406.f90: New test.
            * gfortran.dg/assumed_type_3.f90: Update error messages.
            * gfortran.dg/defined_operators_1.f90: Ditto.
            * gfortran.dg/generic_26.f90: Ditto.
            * gfortran.dg/generic_7.f90: Ditto.
            * gfortran.dg/gomp/udr5.f90: Ditto.
            * gfortran.dg/gomp/udr7.f90: Ditto.
            * gfortran.dg/interface_1.f90: Ditto.
            * gfortran.dg/interface_37.f90: Ditto.
            * gfortran.dg/interface_5.f90: Ditto.
            * gfortran.dg/interface_6.f90: Ditto.
            * gfortran.dg/interface_7.f90
            * gfortran.dg/no_arg_check_3.f90
            * gfortran.dg/operator_5.f90
            * gfortran.dg/proc_ptr_comp_20.f90: Ditto.
    
    From-SVN: r240871

commit 4cddb7878bb66a3b54c44b8427819999accbd3f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Oct 7 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240848

commit 4a14ae445803d3cdb01b533b274169d04407367f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Thu Oct 6 19:53:15 2016 +0200

    re PR target/77874 (two problems with gcc.target/i386/avx-1.c)
    
            PR target/77874
            * config/i386/sse.md (<mask_codefor><code><mode>3<mask_name>):
            Remove wrong assert.
            (<floatsuffix>float<sseintvecmodelower><mode>2<mask_name><round_name>:
            Use <round_constraint> as operand 1 constraint.
    
    From-SVN: r240837

commit 29758f07c217bbf5fb6efd2fc5c4464e9e0f02ae
Author: James Clarke <jrtc27@jrtc27.com>
Date:   Thu Oct 6 10:30:55 2016 +0000

    re PR target/77759 (ICE in function_arg_record_value on nested empty class)
    
            PR target/77759
            * config/sparc/sparc.c (classify_data_t): Remove int_regs field.
            (classify_registers): Don't set it
            (function_arg_slotno): Don't initialize and test it.  Tidy up.
    
    Co-Authored-By: Eric Botcazou <ebotcazou@adacore.com>
    
    From-SVN: r240831

commit 0672df321130e50f9a9f22c2129ac661eb11a3b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Oct 6 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r240822

commit 01c9deefdb1dbc38a82122faaf60b82ba65b1299
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Oct 5 21:59:16 2016 +0000

    re PR fortran/58991 (ICE with associate and character string constant)
    
    2016-10-05  Steven G. Kargl  <kargls@gcc.gnu.org>
    
            PR fortran/58991
            PR fortran/58992
            * resolve.c (resolve_assoc_var):  Fix CHARACTER type-spec for a
            selector in ASSOCIATE.
            (resolve_fl_variable): Skip checks for an ASSOCIATE variable.
    
    
    2016-10-05  Steven G. Kargl  <kargls@gcc.gnu.org>
    
            PR fortran/58991
            PR fortran/58992
            * gfortran.dg/associate_22.f90: New test.
    
    From-SVN: r240813

commit 68365bff9fcf1c508dbe424d6c285c6bafa71322
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 5 14:43:49 2016 +0100

    PR 70101 fix allocator-extended ctors for std::priority_queue
    
            PR libstdc++/70101
            * include/bits/stl_queue.h (priority_queue): Fix allocator-extended
            constructors.
            * testsuite/23_containers/priority_queue/allocator.cc: New test.
    
    From-SVN: r240788

commit 74c4707ddb68774a34821768f9a8174f44e8fb35
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 5 14:43:44 2016 +0100

    77864 Fix noexcept conditions for map/set default constructors
    
            PR libstdc++/77864
            * include/bits/stl_map.h (map::map()): Use nothrow constructibility
            of comparison function in conditional noexcept.
            * include/bits/stl_multimap.h (multimap::multimap()): Likewise.
            * include/bits/stl_multiset.h (multiset::multiset()): Likewise.
            * include/bits/stl_set.h (set::set()): Likewise.
            * testsuite/23_containers/map/cons/noexcept_default_construct.cc:
            New test.
            * testsuite/23_containers/multimap/cons/noexcept_default_construct.cc:
            Likewise.
            * testsuite/23_containers/multiset/cons/noexcept_default_construct.cc:
            Likewise.
            * testsuite/23_containers/set/cons/noexcept_default_construct.cc:
            Likewise.
    
    From-SVN: r240787

commit 0345b08e53dee612fd8925ee94019ad847700c80
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Oct 5 13:42:48 2016 +0100

    PR 70564 disambiguate constructor for not_fn call wrapper
    
            PR libstdc++/70564
            * include/experimental/functional (_Not_fn): Add second parameter to
            disambiguate copying from initialization by not_fn.
            (not_fn): Add second argument to initialization.
            * testsuite/experimental/functional/not_fn.cc: Copy call wrapper using
            direct-initialization. Test abstract class.
    
    From-SVN: r240786

commit 3613bda61132dab33090f1883e22f754db04ccbc
Author: Martin Sebor <msebor@redhat.com>
Date:   Wed Oct 5 00:21:37 2016 +0000

    Wplacement-new-size-4.C: Use relative line number references.
    
    gcc/testsuite/ChangeLog:
    
            * g++.dg/warn/Wplacement-new-size-4.C: Use relative line number
            references.
    
    From-SVN: r240763

commit 7daf0d1daab93f3f92436e0e4cb290b2a5b25721
Author: Martin Sebor <msebor@redhat.com>
Date:   Wed Oct 5 00:17:40 2016 +0000

    backport: gcc-dg.exp (process-message): Support relative line number notation - .+4 or .-1 etc.
    
    gcc/testsuite/ChangeLog:
    
            Backport from trunk.
            * lib/gcc-dg.exp (process-message): Support relative line number
            notation - .+4 or .-1 etc.
            * gcc.dg/dg-test-1.c: New test.
    
    From-SVN: r240762

commit 983a6c66fd45111fd9be262253af953ba8ce5a46
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Oct 5 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240760

commit 565ac7ee1ceef91ca1643bf7423139654be1cb6b
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue Oct 4 17:55:43 2016 +0000

    PR c++/77804 - Internal compiler error on incorrect initialization of new-d array
    
    gcc/cp/ChangeLog:
    
            PR c++/77804
            * init.c (warn_placement_new_too_small): Avoid assuming an array type
            has a constant size.
    
    gcc/testsuite/ChangeLog:
    
            PR c++/77804
            * g++.dg/warn/Wplacement-new-size-4.C: New test.
    
    From-SVN: r240755

commit 45025f943a862baabc291ae3350b74fcbdd74ed7
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Tue Oct 4 16:44:16 2016 +0200

    backport: re PR target/77756 (__get_cpuid() returns wrong values for level 7 (extended features))
    
            Backport from mainline
            2016-09-29  Uros Bizjak  <ubizjak@gmail.com>
    
            * config/i386/driver-i386.c (host_detect_local_cpu): Check maximum
            ext_level before calling CPUID with 0x80000008.
    
            2016-09-29  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77756
            * config/i386/cpuid.h (__get_cpuid_count): New.
            (__get_cpuid): Rename __level to __leaf.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-09-29  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77756
            * gcc.target/i386/pr77756.c: New test.
    
    From-SVN: r240747

commit f8b666f8267f7b1757beca46ac7ecd0531646eda
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Oct 4 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r240737

commit 98aba571a67f64b1d948ce163c28d0aa1dfab72f
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Oct 3 15:36:22 2016 +0100

    Fix libstdc++ versioned namespace build
    
            PR libstdc++/68323
            PR libstdc++/77794
            * config/abi/pre/gnu-versioned-namespace.ver: Add exports for
            __cxa_thread_atexit and __gnu_cxx::__freeres.
            * include/Makefile.am: Add <experimental/bits/lfts_config.h>
            * include/Makefile.in: Regenerate.
            * include.bits/basic_string.h: Fix nesting of versioned namespaces.
            * include/bits/c++config: Declare versioned namespaces for literals.
            * include/bits/regex.h (basic_regex, match_results): Add workarounds
            for PR c++/59256.
            * include/bits/uniform_int_dist.h: Fix nesting of versioned namespace.
            * include/std/chrono: Likewise.
            * include/std/complex: Likewise.
            * include/experimental/bits/fs_fwd.h: Declare versioned namespace.
            * include/experimental/bits/lfts_config.h: Declare versioned
            namespaces.
            * include/experimental/algorithm: Include
            <experimental/bits/lfts_config.h>.
            * include/experimental/any: Likewise.
            * include/experimental/bits/erase_if.h: Likewise.
            * include/experimental/chrono: Likewise.
            * include/experimental/functional: Likewise.
            * include/experimental/memory_resource: Likewise.
            * include/experimental/optional: Likewise.
            * include/experimental/propagate_const: Likewise.
            * include/experimental/random: Likewise.
            * include/experimental/ratio: Likewise.
            * include/experimental/system_error: Likewise.
            * include/experimental/tuple: Likewise.
            * include/experimental/type_traits: Likewise.
            * include/experimental/utility: Likewise.
            * include/experimental/string_view: Likewise. Fix nesting of
            versioned namespaces.
            * include/experimental/bits/string_view.tcc: Reopen inline namespace
            for non-inline function definitions.
            * testsuite/17_intro/using_namespace_std_exp_neg.cc: New test.
            * testsuite/20_util/duration/literals/range.cc: Adjust dg-error line.
            * testsuite/experimental/any/misc/any_cast_neg.cc: Likewise.
            * testsuite/experimental/propagate_const/assignment/move_neg.cc:
            Likewise.
            * testsuite/experimental/propagate_const/cons/move_neg.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements2.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements3.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements4.cc: Likewise.
            * testsuite/experimental/propagate_const/requirements5.cc: Likewise.
            * testsuite/ext/profile/mutex_extensions_neg.cc: Likewise.
    
    From-SVN: r240719

commit 884276c1c85e9f4a986d892a6d788553424ef28b
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Oct 3 15:36:18 2016 +0100

    add exports
    
    From-SVN: r240718

commit e43ade02b3ceeb7954ea08f7aa3bb42e5fbdae90
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Oct 3 15:36:13 2016 +0100

    Fix misuse of versioned namespace for LFTS
    
    From-SVN: r240717

commit ad8a3af9ef3f25a4ebe8ddc3a9a47e427f0fe69f
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Oct 3 15:36:06 2016 +0100

    Declare inline namespaces for filesystem
    
    From-SVN: r240716

commit 2b406d0b118d1e41a62a5a221908e15d00329a18
Author: Jonathan Wakely <redi@gcc.gnu.org>
Date:   Mon Oct 3 15:35:59 2016 +0100

    fix misplaced version namespace macros
    
    From-SVN: r240715

commit dea1fa3ac0dd889712399372ef2bce64d34ede7c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Oct 3 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r240704

commit cca55fdf02d96bd20dc8a0adaaedfb4f7483053d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Oct 2 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r240698

commit e09e51f19119993dff22587441cefe3b55281599
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Oct 1 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240690

commit f4500bc1edec296056bca1d7bc576d5815b446e3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Sep 30 19:29:24 2016 +0100

    libstdc++/77795 Only declare ::gets for C++98 and C++11
    
            PR libstdc++/77795
            * acinclude.m4 (GLIBCXX_CHECK_STDIO_PROTO): Use -std=gnu++11 to check
            for gets.
            * config.h.in: Regenerate.
            * configure: Regenerate.
            * include/c_global/cstdio [!_GLIBCXX_HAVE_GETS] (gets): Only declare
            for C++98 and C++11.
            * include/c_std/cstdio [!_GLIBCXX_HAVE_GETS] (gets): Likewise.
            * testsuite/27_io/headers/cstdio/functions_neg.cc: New test.
    
    From-SVN: r240674

commit 69056021fa1fa942ee0f403d003688433caa3ec1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Sep 30 19:29:16 2016 +0100

    Remove use of std::abs in experimental::{gcd,lcm}
    
            PR libstdc++/77801
            * include/experimental/numeric: Include <numeric>.
            (__abs): Define.
            (gcd, lcm): Use __abs instead of std::abs.
            * testsuite/experimental/numeric/77801.cc: New test.
            * testsuite/experimental/numeric/gcd.cc: Test unsigned inputs.
            * testsuite/experimental/numeric/lcm.cc: Likewise.
    
    From-SVN: r240673

commit 6d9cc971040a657f10ecc88467581e828ce4b414
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Sep 30 17:29:56 2016 +0000

    backport: re PR target/77670 (PowerPC64 Spec 2006 fails on 453.povray using -mcpu=power9 -mpower9-minmax)
    
    2016-09-30  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
    
            2016-09-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/77670
            * config/rs6000/predicates.md (invert_fpmask_comparison_operator):
            New predicate that matches the ISA 3.0 XSCMP{EQ,GT,GE}DP
            instructions when you want to invert the test.
            * config/rs6000/rs6000.md (fpmask<mode>): Use the arguments in the
            correct order for XXSEL.
            (mov<SFDF:mode><SFDF2:mode>cc_invert_p9): Define the inverted test
            for using XSCMP{EQ,GT,GE}DP.
    
    From-SVN: r240670

commit fc11ce0876084951941f5bce8388b9537db28cb0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 30 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240642

commit 97257bd373ebb66292cb02bc0d0b9fad865dafa0
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Thu Sep 29 18:08:05 2016 +0000

    backport: re PR fortran/77707 (formatted direct access: nextrec off by one)
    
    2016-09-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/77707
            io/transfer.c (next_record): Flush before calculating next_record.
            Correctly calculate.
    
            * gfortran.dg/inquire_17.f90: New test.
    
    From-SVN: r240627

commit dd7031c4d89d3702817b3b54a1db948c32055492
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 29 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240606

commit 9bcc6a206975c3eb4fb4c2cbd7d1b1f4ddd7df4c
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Sep 28 21:35:37 2016 +0000

    backport: re PR rtl-optimization/71709 (powerpc64le: argument to strcpy() optimised out)
    
    2016-09-28  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
                Alan Modra  <amodra@gmail.com>
    
            Backport from mainline
            2016-07-01  Alan Modra  <amodra@gmail.com>
    
            PR rtl-optimization/71709
            * ira-lives.c (find_call_crossed_cheap_reg): Exit loop on arg reg
            being set, not referenced.
    
    
    Co-Authored-By: Alan Modra <amodra@gmail.com>
    
    From-SVN: r240598

commit 9e96cdf4694d2eda153310c4b2d820e33cfc9122
Author: Steven G. Kargl <kargl@gcc.gnu.org>
Date:   Wed Sep 28 20:18:56 2016 +0000

    backport: fortran/41922 fortran/60774 fortran/61318 fortran/68566 fortran/69514...
    
    
    Backport from trunk of the following PR's:
    
    fortran/41922 fortran/60774 fortran/61318 fortran/68566 fortran/69514
    fortran/69867 fortran/69962 fortran/70006 fortran/71067 fortran/71730
    fortran/71799 fortran/71859 fortran/71862 fortran/77260 fortran/77351
    fortran/77372 fortran/77380 fortran/77391 fortran/77420 fortran/77429
    fortran/77460 fortran/77506 fortran/77507 fortran/77612 fortran/77694
    
    From-SVN: r240596

commit 6a7085119f6b27ea622c994bd613bb46c0ff2737
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed Sep 28 17:11:44 2016 +0100

    Correct libgcc complex multiply excess precision handling (PR libgcc/77519).
    
    libgcc complex multiply is meant to eliminate excess
    precision from certain internal values by forcing them to memory in
    exactly those cases where the type has excess precision.  But in
    https://gcc.gnu.org/ml/gcc-patches/2014-09/msg01894.html I
    accidentally inverted the logic so that values get forced to memory in
    exactly the cases where it's not needed.  (This is a pessimization in
    the no-excess-precision case, in principle could lead to bad results
    depending on code generation in the excess-precision case.  Note: I do
    not have a test demonstrating bad results.)
    
    Bootstrapped with no regressions on x86_64-pc-linux-gnu.  Code size
    went down on x86_64 as expected; old sizes:
    
       text    data     bss     dec     hex filename
        887       0       0     887     377 _muldc3.o
        810       0       0     810     32a _mulsc3.o
       2032       0       0    2032     7f0 _multc3.o
        983       0       0     983     3d7 _mulxc3.o
    
    New sizes:
    
        847       0       0     847     34f _muldc3.o
        770       0       0     770     302 _mulsc3.o
       2032       0       0    2032     7f0 _multc3.o
        951       0       0     951     3b7 _mulxc3.o
    
            Backport from mainline
            2016-09-07  Joseph Myers  <joseph@codesourcery.com>
    
            PR libgcc/77519
            * libgcc2.c (NOTRUNC): Invert settings.
    
    From-SVN: r240582

commit 19341a4a48a3b6fac5b4a7b68f49b1a574a61541
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed Sep 28 13:03:43 2016 +0100

    libstdc++/77686 use may_alias for std::function storage
    
            PR libstdc++/77686
            * include/std/functional (_Any_data): Add may_alias attribute.
    
    From-SVN: r240571

commit 94f8878c6f50f37693b0c4ba36d7aa02359239bf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240562

commit bfa78b64346287c78c71c6e681790fcc570a9aa0
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 27 16:29:23 2016 +0100

    Fix lifetime of mutex lock in debug iterator
    
            * include/debug/safe_iterator.h (_Safe_iterator::operator++()): Fix
            lifetime of lock.
    
    From-SVN: r240548

commit 7ba074428dfda8c44b377dbc1453770d083cc14d
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Tue Sep 27 14:25:14 2016 +0000

    backport: rs6000.c (rs6000_output_symbol): Don't modify VAR_DECL string.
    
            Backport from mainline
            2016-09-27  David Edelsohn  <dje.gcc@gmail.com>
    
            * config/rs6000/rs6000.c (rs6000_output_symbol): Don't modify
            VAR_DECL string.
    
            2016-09-24  David Edelsohn  <dje.gcc@gmail.com>
    
            * configure.ac (gcc_cv_as_aix_dwloc): Fix typo in assembly fragment.
            * configure: Regenerate.
    
    From-SVN: r240543

commit c43270ce7d72d3ba7ace538ccb170da45a0dfd1b
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Sep 27 11:29:28 2016 +0000

    re PR target/77478 (Incorrect code generated with -O3, m32, -msse2 and -ffast-math)
    
    2016-09-27  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77478
            * gcc.dg/torture/pr77478.c: New testcase.
    
    From-SVN: r240531

commit 7a4af9abd88218a475fb713d0517af1dbeda6668
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Sep 27 10:54:00 2016 +0000

    Backport PRs 77436, 77450, 77514, 77544, 77605, 77679
    
    2016-09-27  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-09-01  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77436
            * tree-chrec.c (tree_fold_binomial): Use widest_int, properly
            check whether the result fits the desired result type.
    
            * gcc.dg/torture/pr77436.c: New testcase.
    
            2016-09-06  Richard Biener  <rguenther@suse.de>
    
            PR c/77450
            c-family/
            * c-common.c (c_common_mark_addressable_vec): Handle
            COMPOUND_LITERAL_EXPR.
    
            * gcc.dg/pr77450.c: New testcase.
    
            2016-09-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77514
            * tree-ssa-pre.c (create_expression_by_pieces): Optimize
            search for folded stmt.
    
            2016-09-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/77514
            * tree-ssa-pre.c (create_expression_by_pieces): Handle garbage
            only forced_stmts sequence.
    
            * gcc.dg/torture/pr77514.c: New testcase.
    
            2016-09-15  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77544
            * fold-const.c (split_tree): Do not split constant ~X.
    
            * c-c++-common/torture/pr77544.c: New testcase.
    
            2016-09-19  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77605
            * tree-data-ref.c (analyze_subscript_affine_affine): Use the
            proper niter to bound the loops.
    
            * gcc.dg/torture/pr77605.c: New testcase.
    
            2016-09-22  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/77679
            * gimple-fold.c (fold_array_ctor_reference): Turn asserts into
            fold fails.
    
    From-SVN: r240527

commit db4e81ea1b5edb856247ac9cfc8af2e2a72f0a68
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue Sep 27 06:11:15 2016 +0000

    [RTEMS] Always use atomic builtins for libstdc++
    
    libstdc++-v3/
            * config/cpu/m68k/atomicity.h: Adjust comment.
            * acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Honor
            explicit atomicity_dir setup via configure.host.
            * configure.host (rtems-*): Set atomicity_dir.
            * configure: Regenerate.
    
    From-SVN: r240519

commit 76ff8646635bc0276d65dd738c967ebdb7386c3e
Author: Ville Voutilainen <ville@gcc.gnu.org>
Date:   Tue Sep 27 03:37:10 2016 +0300

    Fix testsuite failures.
    
    From-SVN: r240516

commit 019d598b823d7601c8facef6629fe74019044529
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 27 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240513

commit 26fe1e0faaed200d0e5a8e8fa48a5ad6e42c231b
Author: Ville Voutilainen <ville@gcc.gnu.org>
Date:   Mon Sep 26 23:01:13 2016 +0300

    Fix the date of the last ChangeLog entry.
    
    From-SVN: r240508

commit de47ca3d6ca75f064fd6e25b6b5af6679a6cf5d6
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Sep 26 22:56:14 2016 +0300

    backport: re PR libstdc++/77537 (pair constructors do not properly SFINAE)
    
    Backport from mainline
    2016-09-21  Ville Voutilainen  <ville.voutilainen@gmail.com>
    
    PR libstdc++/77537
    Implement LWG 2729 for pair.
    * include/bits/stl_pair.h (_PCC): New.
    (_ConstructiblePair, _ImplicitlyConvertiblePair):
    Turn into static member functions of _PCC.
    (_MoveConstructiblePair, _ImplicitlyMoveConvertiblePair): Likewise.
    (_PCCP): New.
    (pair(const _T1&, const _T2&)): Adjust.
    (_PCCFP): New.
    (pair(const pair<_U1, _U2>&)): Adjust.
    (pair(_U1&&, const _T2&)): Likewise.
    (pair(const _T1&, _U2&&)): Likewise.
    (pair(_U1&&, _U2&&)): Likewise.
    (pair(pair<_U1, _U2>&&)): Likewise.
    (operator=(const pair&)): Make conditionally deleted.
    (operator=(pair&&)): Make conditionally suppressed.
    (operator=(const pair<_U1, _U2>&)): Constrain.
    (operator=(pair<_U1, _U2>&&): Likewise.
    * include/std/type_traits (__nonesuch): New.
    * testsuite/20_util/pair/traits.cc: New.
    
    From-SVN: r240507

commit c1e4e37e17e4f533feac8e44d940f2995c6ec60e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 26 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240481

commit e99df83e729a873b0eb804f4ac7404260e43316c
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Sep 25 19:07:37 2016 +0200

    backport: re PR tree-optimization/77621 (Internal compiler error for mtune=atom + msse2)
    
            Backport from mainline
            2016-09-21  Richard Biener  <rguenther@suse.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/77621
            * tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Split
            group at non-vectorizable stmts.
    
            Backport from mainline
            2016-09-20  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77621
            * config/i386/i386.c (ix86_preferred_simd_mode) <case DFmode>:
            Don't return word_mode for !TARGET_VECTORIZE_DOUBLE.
            (ix86_add_stmt_cost): Penalize DFmode vector operations
            for !TARGET_VECTORIZE_DOUBLE.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-09-21  Richard Biener  <rguenther@suse.de>
                        Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/77621
            * gcc.dg/pr77621.c: New testcase.
    
            Backport from mainline
            2016-09-20  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77621
            * gcc.target/i386/pr77621.c: New test.
            * gcc.target/i386/vect-double-2.c: Update scan-tree-dump-times
            pattern, loop should vectorize with -mtune=atom.
    
    From-SVN: r240475

commit 41dcf6cce1aa91ca94143fdc51ec227b1c9aaf87
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Sun Sep 25 15:12:05 2016 +0000

    backport: re PR testsuite/77411 (object-size-9.c -fpic -m32 failure)
    
    2016-09-25  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            backport from mainline
            2016-09-23  Bernd Edlinger  <bernd.edlinger@hotmail.de>
                        Tom de Vries  <tom@codesourcery.com>
    
            PR testsuite/77411
            * c-c++-common/ubsan/object-size-9.c: Call __builtin_exit in C++.
    
    From-SVN: r240472

commit 2a3c72db08c43ce31351ac6835b922d203cdbfff
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 25 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240469

commit 6de04f133a80b7f47e98541689b6e01ff5c06332
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 24 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240460

commit 1de925b88e3931c64b14c9be9a60d9412a05a324
Author: Senthil Kumar Selvaraj <senthil_kumar.selvaraj@atmel.com>
Date:   Fri Sep 23 08:14:28 2016 +0000

    backport: avr.c (avr_rtx_costs_1): Handle DImode MULT.
    
    Backport from 2016-09-22 trunk r240388.
    
    2016-09-22  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            * config/avr/avr.c (avr_rtx_costs_1): Handle DImode MULT.
            (avr_address_cost): Replace 61 with MAX_LD_OFFSET(mode).
    
    From-SVN: r240396

commit 94b478ad9be340bc9c7a86a544b1bec79854cdc7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 23 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r240385

commit f64f72dc3635f7c129e9452659c609ee5c89b173
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Sep 22 16:14:20 2016 +0000

    re PR c++/71979 (ICE with on C++ code with incorrect type in overloaded base class '=' operator: in build_base_path, at cp/class.c:304)
    
    /cp
    2016-09-22  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71979
            * class.c (build_base_path): Allow for lookup_base returning
            NULL_TREE.
    
    /testsuite
    2016-09-22  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71979
            * g++.dg/cpp0x/pr71979.C: New.
    
    From-SVN: r240376

commit 1e7651aec345d61f1befde554f0918c75bb1dcda
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Sep 22 14:30:19 2016 +0000

    class.c (push_super_field): Set DECL_CONTEXT.
    
    2016-09-22  Richard Biener  <rguenther@suse.de>
    
            * class.c (push_super_field): Set DECL_CONTEXT.
            * mangle.c (java_mangle_decl): Re-sync with lhd_set_decl_assembler_name.
    
    From-SVN: r240364

commit bc4d1f71fc583b44ed9e9769245f16c2826a5952
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 22 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r240338

commit c3f98fc430912f1c3dcb7a94621f66b34cece704
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Sep 21 19:50:17 2016 +0200

    Fix JUMP_LABEL documentation
    
    
            * doc/rtl.texi (JUMP_LABEL): Document RETURN and SIMPLE_RETURN values.
    
    From-SVN: r240326

commit a06639d74c898dc824c21896f5b6f52f81630b2f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed Sep 21 17:21:44 2016 +0200

    dump-noaddr.x: Remove debug statements.
    
            * gcc.c-torture/unsorted/dump-noaddr.x: Remove debug statements.
    
    From-SVN: r240319

commit 8a8b5b9e6a1e828f858181ceefdafbbfb1e77a29
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Sep 21 09:31:38 2016 +0000

    backport: re PR target/77326 ([avr] Invalid optimization omits comparison)
    
            Backport from 2016-09-21 trunk r240306.
            PR target/77326
            * config/avr/avr.c (avr_notice_update_cc) [CC_NONE]: If insn
            touches some regs mentioned in cc_status, do CC_STATUS_INIT.
    
    From-SVN: r240308

commit 4fa7769166a3b4e785537090028062e8a9319614
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 21 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240296

commit 09676b23d8d3feccdb4fd0874f77bf1294a9c2fe
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Sep 20 10:59:54 2016 +0100

    Replace casts with floordiv operator in Python xmethods
    
            * python/libstdcxx/v6/xmethods.py (DequeWorkerBase.__init__)
            (DequeWorkerBase.index, VectorWorkerBase.get): Use // for division.
    
    From-SVN: r240259

commit 6544d99e262eff4177e4198902abdcd12c2a493a
Author: Thomas Preud'homme <thomas.preudhomme@arm.com>
Date:   Tue Sep 20 09:19:55 2016 +0000

    backport: lra-constraints.c (match_reload): Pass information about other output operands.
    
    2016-09-20  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        Backport from mainline
        2016-07-14  Thomas Preud'homme  <thomas.preudhomme@arm.com>
    
        gcc/
        * lra-constraints.c (match_reload): Pass information about other
        output operands.  Create new unique register value if matching input
        operand shares same register value as output operand being considered.
        (curr_insn_transform): Record output operands already processed.
    
    From-SVN: r240257

commit 5093f70093c52673e0b8fa489fd390107dd67402
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 20 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240253

commit d71883a76025e05b14a58e2e87f430491279c442
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 19 18:17:47 2016 +0100

    libstdc++/77645 fix deque and vector xmethods for Python 3
    
            PR libstdc++/77645
            * python/libstdcxx/v6/xmethods.py (DequeWorkerBase.__init__)
            (DequeWorkerBase.index, VectorWorkerBase.get): Cast results of
            division to int to work with Python 3.
    
    From-SVN: r240243

commit e379472ea6878e6b7401cecd3c259ea5e35f1bdc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Sep 19 16:50:53 2016 +0100

    libstdc++/77645 Fix xmethods for std::list
    
            PR libstdc++/77645
            * python/libstdcxx/v6/xmethods.py (DequeWorkerBase.index): Rename
            argument.
            (ListWorkerBase.get_value_from_node): Define new method.
            (ListFrontWorker.__call__, ListBackWorker.__call__): Use it.
    
    From-SVN: r240235

commit 693ca0c826e8575c3c83bb0758d0ea56ecf30c90
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 19 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r240223

commit 6dcb024b43c4cb40f0373df83e79aaf61da27e15
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 18 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240217

commit a0c00a92f65ffd1af16da88fd2b1854460f61ea3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 17 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240212

commit cbe5d75f0856d7f936bbe77ad5c21b7bfbcac674
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Sep 16 22:37:49 2016 +0100

    Fix documentation for overflow-checking builtins
    
            * doc/extend.texi (Integer Overflow Builtins): Fix type of out
            parameters for functions taking long long arguments.
    
    From-SVN: r240201

commit 71ea8216784d2812ee44dfc2c8d9fedd5ce98433
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Fri Sep 16 14:42:54 2016 +0000

    backport: re PR target/77349 (AIX DWARF debugging offset in 64 bit mode)
    
    2016-09-16  David Edelsohn  <dje.gcc@gmail.com>
    
            Backported from mainline
            2016-08-26  David Edelsohn  <dje.gcc@gmail.com>
    
            PR target/77349
            * config/rs6000/xcoff.h (DWARF_OFFSET_SIZE): Define as PTR_SIZE.
    
    From-SVN: r240188

commit cf7f45bda71658d1069601383d6c7cd0a69a0eef
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:38:31 2016 +0200

    re PR middle-end/77594 (double computation for __builtin_sub_overflow (0, ...))
    
            PR middle-end/77594
            * internal-fn.c (expand_arith_overflow) <case MINUS_EXPR>: Don't fall
            through into expand_addsub_overflow after expand_neg_overflow.
    
            * gcc.target/i386/pr77594.c: New test.
    
    Co-Authored-By: Eric Botcazou <ebotcazou@adacore.com>
    
    From-SVN: r240183

commit 82180e4a57f3bd9ed583152606992f331baf4182
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:37:50 2016 +0200

    backport: re PR sanitizer/68260 (false positive with tsan)
    
            Backported from mainline
            2016-09-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/68260
            * tsan.c: Include target.h.
            (enum tsan_atomic_action): Add bool_clear and bool_test_and_set.
            (BOOL_CLEAR, BOOL_TEST_AND_SET): Define.
            (tsan_atomic_table): Add BUILT_IN_ATOMIC_CLEAR and
            BUILT_IN_ATOMIC_TEST_AND_SET entries.
            (instrument_builtin_call): Handle bool_clear and bool_test_and_set.
    
            * c-c++-common/tsan/pr68260.c: New test.
    
    From-SVN: r240182

commit 9d312010047447c30991a025531d346a88a7594d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:37:08 2016 +0200

    backport: re PR c++/77553 (wrong code with post-increment operator in constexpr)
    
            Backported from mainline
            2016-09-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/77553
            * constexpr.c (cxx_fold_pointer_plus_expression): New function.
            (cxx_eval_binary_expression): Use it for POINTER_PLUS_EXPR.
            (cxx_eval_pointer_plus_expression): Remove.
            (cxx_eval_constant_expression) <case POINTER_PLUS_EXPR>: Don't
            call cxx_eval_pointer_plus_expression.
    
            * g++.dg/cpp1y/constexpr-77553.C: New test.
    
    From-SVN: r240181

commit 4b73c8c5b195031ccd00e4530701b73c1b06929e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:36:05 2016 +0200

    backport: re PR fortran/77500 (ICE in gfc_trans_omp_atomic, at fortran/trans-openmp.c:2822)
    
            Backported from mainline
            2016-09-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77500
            * trans-openmp.c (gfc_trans_omp_atomic): For atomic write or
            swap, don't try to look through GFC_ISYM_CONVERSION.  In other cases,
            check that value.function.isym is non-NULL before dereferencing it.
    
            * gfortran.dg/gomp/pr77500.f90: New test.
    
    From-SVN: r240180

commit 4fc5e0797401fbad85f8e64e0f15a7968d63340c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:35:23 2016 +0200

    backport: re PR fortran/77516 (ICE in is_gimple_min_invariant, at gimple-expr.c:706)
    
            Backported from mainline
            2016-09-08  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77516
            * omp-low.c (lower_rec_simd_input_clauses): Use max_vf for non-positive
            OMP_CLAUSE_SAFELEN_EXPR.
    
            * gfortran.dg/gomp/pr77516.f90: New test.
    
    From-SVN: r240179

commit 1e996374f5860bff9eaef5747db12055adb58cfc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:34:44 2016 +0200

    backport: re PR target/69255 (ICE on x86_64-linux-gnu in "emit_move_insn")
    
            Backported from mainline
            2016-09-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/69255
            * config/i386/i386.c (ix86_expand_builtin): For builtin with
            unsupported or unknown ISA, use expand_call.
    
            * gcc.target/i386/pr69255-1.c: New test.
            * gcc.target/i386/pr69255-2.c: New test.
            * gcc.target/i386/pr69255-3.c: New test.
    
    From-SVN: r240178

commit 00af4428dc1a62543bd5811f87eaedb1dab0a317
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Sep 16 11:34:02 2016 +0200

    backport: re PR sanitizer/77396 (address  sanitizer crashes if all static global variables are optimized)
    
            Backported from mainline
            2016-09-05  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/77396
            * asan/asan_globals.cc: Cherry-pick upstream r280657.
    
            * g++.dg/asan/pr77396-2.C: New test.
    
            2016-09-02  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/77396
            * g++.dg/asan/pr77396.C: New test.
    
    From-SVN: r240177

commit 357636abaa41f91b004d112ce0bc6b599f10dd8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 16 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240171

commit 1251b2852b2dccc675bb494d3d4c64649025e1fd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 15 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240150

commit 094fe18b9404cdb38fc4b9620c0245e65c6fc6bd
Author: Nathan Sidwell <nathan@acm.org>
Date:   Wed Sep 14 14:29:01 2016 +0000

    re PR c++/77539 (gcc-5/6: comparison of array to nullptr failure in constexpr (fixed by r235506 on trunk))
    
            cp/
            PR c++/77539
            * constexpr.c (get_fundef_copy): Use the original function for
            non-recursive evaluations.
            (save_fundef_copy): Always expect a slot to be available.
    
            testsuite/
            PR c++/77539
            * g++.dg/cpp0x/constexpr-recursion3.C: New.
            * g++.dg/ubsan/pr63956.C: Adjust error location.
            * g++.dg/cpp1y/pr77539.C: New.
    
    From-SVN: r240136

commit 49789bc883a9eff539ebb4563667875730be051a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 14 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r240126

commit 6f4049e1e34a3bb484ca78d08656e888728ed769
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue Sep 13 16:05:20 2016 +0000

    backport "Don't treat array as builtin type in set_underlying_type"
    
    2016-09-13  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-09-13  Jason Merrill  <jason@redhat.com>
                        Tom de Vries  <tom@codesourcery.com>
    
            PR c++/77427
            * c-common.c (set_underlying_type): Don't treat array as builtin type.
    
            * g++.dg/pr77427.C: New test.
    
    From-SVN: r240114

commit 21214f24b68863ed1eabad787e32278210d46e72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 13 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r240105

commit 5c94573ce5b5269778cf493772521bd1ff0e040b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 12 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240087

commit 157e581f57c08d2c7047b3ac8c8ba7792dcfe10e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 11 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r240078

commit d0de9e7f8d36f0aab53c434fcf2a7e54741225b6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 10 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r240061

commit 1969af3951b20f32b92de14b2a6da87afb3fea7a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 9 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r240041

commit 8c550c3a3dbeba68060f774ce7bb5e7f026dbd7e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 8 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240035

commit f332d825f53b637f39fe0e8530e5fe1919a88064
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Sep 7 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r240021

commit 5fff498adf7c50bb8986ae69a4a5d5fc684a0677
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Wed Sep 7 00:22:58 2016 +0200

    re PR debug/57519 (DW_TAG_imported_declaration put in wrong class (base class instead of derived class))
    
    2016-09-07  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR debug/57519
            * g++.dg/debug/dwarf2/imported-decl-2.C: Likewise.
    
    From-SVN: r240016

commit f1d668f7f26653dd0121dde12217dc29e4449028
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Sep 6 17:33:32 2016 +0200

    backport: re PR target/77452 (ICE: in plus_constant, at explow.c:87 with -fno-split-wide-types -mavx512f --param=max-combine-insns=2)
    
            Backport from mainline
            2016-09-05  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/77452
            * explow.c (plus_constant) <case MEM>: Extract scalar constant from
            inner-mode reference to a CONST_VECTOR constant in the constant pool.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-09-05  Uros Bizjak  <ubizjak@gmail.com>
    
            PR rtl-optimization/77452
            * gcc.target/i386/pr77452.c: New test.
    
    From-SVN: r240012

commit 31d187c9c27ab2a8b14c1a99ad618e9532bf345d
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Sep 6 17:23:17 2016 +0200

    c_by_val_1.f: Correct the call to c_to_c and c_to_c8.
    
            * gfortran.dg/c_by_val_1.f: Correct the call to c_to_c and c_to_c8.
    
    From-SVN: r240010

commit c0d00fdeadcf1785bb28fac33d6e29bae40d1d35
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Sep 6 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r240003

commit a25419c3cdc82cf166968bc720c28c390091ec1a
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Sep 5 17:36:17 2016 +0100

    * sv.po: Update.
    
    From-SVN: r239993

commit 1a9ea35cc59299ef2f8713e74ac36ae4f70b8333
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Sep 5 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239984

commit 2a1b1a80ada65d81445dcf9e1f4201443672268d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Sep 4 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239973

commit fa316429f36885bb16c817529468b503a636d819
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Sep 3 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239968

commit e476ccd8b930b2acb7a6dd0cd3eac3ddde668d8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Sep 2 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239951

commit 57445d625393ecc3bfb76dfb33f790f55720f203
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:48:54 2016 +0200

    backport: re PR tree-optimization/77352 (ICE: verify_ssa failed)
    
            Backported from mainline
            2016-08-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77352
            * trans-openmp.c (gfc_trans_omp_parallel_workshare): Always add a
            BIND_EXPR with BLOCK around what gfc_trans_omp_workshare returns.
    
            * gfortran.dg/gomp/pr77352.f90: New test.
    
    From-SVN: r239933

commit ee22958b296626db6e6f324a2b1544f7e3e199df
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:48:02 2016 +0200

    backport: re PR fortran/77374 (ICE in resolve_omp_atomic, at fortran/openmp.c:3949)
    
            Backported from mainline
            2016-08-31  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/77374
            * parse.c (parse_omp_oacc_atomic): Copy over cp->ext.omp_atomic
            to cp->block->ext.omp_atomic.
            * resolve.c (gfc_resolve_blocks): Assert block with one or two
            EXEC_ASSIGNs for EXEC_*_ATOMIC.
            * openmp.c (resolve_omp_atomic): Don't assert one or two
            EXEC_ASSIGNs, instead return quietly for EXEC_NOPs and otherwise
            error unexpected statements.
    
            PR fortran/77374
            * gfortran.dg/gomp/pr77374.f08: New test.
    
    From-SVN: r239932

commit 387543aa169ef551622827bd106509a3848ced0f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:46:57 2016 +0200

    backport: re PR tree-optimization/72866 (Compile time hog w/ -O3 (-Ofast))
    
            Backported from mainline
            2016-08-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/72866
            * tree-vect-patterns.c (search_type_for_mask): Turn into
            a small wrapper, move all code to ...
            (search_type_for_mask_1): ... this new function.  Add caching
            and adjust recursive calls.
    
            * gcc.dg/vect/pr72866.c: New test.
    
    From-SVN: r239931

commit ba0951f0ef53c20ca2f7aa0913c27c5e081d1150
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:43:15 2016 +0200

    backport: re PR c++/77363 (Missing debug information in DWARF)
    
            Backported from mainline
            2016-08-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR debug/77363
            * dwarf2out.c (modified_type_die): Use lookup_type_die (type)
            instead of lookup_type_die (type_main_variant (type)) even for array
            types.
    
            * g++.dg/debug/dwarf2/pr77363.C: New test.
    
    From-SVN: r239930

commit 956d8c54ac905e7d24a0d834e189e27fd8247cfb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:42:22 2016 +0200

    backport: re PR middle-end/77377 (c-c++-common/pr59037.c ICEs with -fpic -msse on i686)
    
            Backported from mainline
            2016-08-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/77377
            * simplify-rtx.c (avoid_constant_pool_reference): For out of bounds
            constant pool reference return x instead of c.
    
            * gcc.target/i386/pr77377.c: New test.
    
    From-SVN: r239929

commit 1535d8c7aed4b8cf59b29734b71f9d3000b50400
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:41:34 2016 +0200

    backport: re PR fortran/71014 (associate statement inside omp parallel do appears to disable default private attribute for inner loop indices)
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71014
            * resolve.c (gfc_resolve): For ns->construct_entities don't save, clear
            and restore omp state around the resolving.
    
            * testsuite/libgomp.fortran/pr71014.f90: New test.
    
    From-SVN: r239928

commit 9644f5f1dfa4d1dea40419483b41b18c78ce7162
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:38:57 2016 +0200

    backport: re PR fortran/72744 (ICE in verify_ssa, at tree-ssa.c:1039)
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/72744
            * gfortran.dg/gomp/pr72744.f90: New test.
    
    From-SVN: r239927

commit c8331722e8bb7339e4765c7983da8eec646cd2c6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:38:16 2016 +0200

    backport: re PR fortran/69281 (gfortran ICE on temporary array in function call with -fstack-arrays -fopenmp)
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/69281
            * trans-openmp.c (gfc_trans_omp_parallel, gfc_trans_omp_task,
            gfc_trans_omp_target): Wrap gfc_trans_omp_code result in an extra
            BIND_EXPR with its own forced BLOCK.
    
            * gfortran.dg/gomp/pr69281.f90: New test.
    
    From-SVN: r239926

commit 83df2e32761c31aed4536284d825d03579107997
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:37:23 2016 +0200

    backport: t-i386 (i386-c.o): Don't depend on i386-builtin-types.inc.
    
            Backported from mainline
            2016-08-19  Jakub Jelinek  <jakub@redhat.com>
    
            * config/i386/t-i386 (i386-c.o): Don't depend on
            i386-builtin-types.inc.
            (i386.o): Depend on i386-builtin-types.inc.
    
    From-SVN: r239925

commit 5db1bb6c5e63783ab546661da5420a4b77dff9fd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:36:50 2016 +0200

    backport: re PR middle-end/77259 (ICE in emit_move_insn since r232167)
    
            Backported from mainline
            2016-08-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/77259
            * tree-ssa-pre.c (eliminate_dom_walker::before_dom_children): If
            turning a call into __builtin_unreachable-like noreturn call, adjust
            gimple_call_set_fntype.
            * tree-cfgcleanup.c (fixup_noreturn_call): Remove lhs also if
            gimple_call_fntype has void return type.
    
            * g++.dg/ipa/devirt-52.C: New test.
    
    From-SVN: r239924

commit dfc913098313bd91cf28b482bd87a251a875a588
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Sep 1 13:29:55 2016 +0200

    backport: re PR target/71910 (ICE on valid OpenMP code)
    
            Backported from mainline
            2016-08-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/71910
            * tree-cfg.c (execute_fixup_cfg): Add node variable, use it.  Before inlining,
            add cgraph edge for the added __builtin_unreachable call.
    
            * g++.dg/gomp/pr71910.C: New test.
    
    From-SVN: r239922

commit 26fa0e28ad683f7648fa6d5b92a23eb09c10e967
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Thu Sep 1 09:12:53 2016 +0000

    extend.texi (SPU Built-in Functions): Remove stale references to material formerly at IBM and Sony.
    
            * doc/extend.texi (SPU Built-in Functions): Remove stale
            references to material formerly at IBM and Sony.
    
    From-SVN: r239920

commit 809071de32cbdf1fdd1cf30a4a8738123abbe589
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Thu Sep 1 08:57:21 2016 +0000

    [ARM] Fix an invalid check for vectors of the same floating-point constants.
    
    2016-09-01  Matthew Wahab  <matthew.wahab@arm.com>
    
            PR target/77281
            * config/arm/arm.c (neon_valid_immediate): Delete declaration.
            Use const_vec_duplicate to check for duplicated elements.
    
    From-SVN: r239918

commit 9b17ad02070bff7330ec7ed5c942fec6e9efeeac
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Sep 1 07:55:17 2016 +0000

    i386.c (ix86_option_override_internal): Also disable the STV pass if -mstackrealign is enabled.
    
            * config/i386/i386.c (ix86_option_override_internal): Also disable the
            STV pass if -mstackrealign is enabled.
    
    From-SVN: r239917

commit 7b1980aed218ccc8a2d1c0fa2822655ff9b39040
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Sep 1 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r239910

commit f6d5b3cbdcea884bc74ab59dc89a968df89b5a9e
Author: Patrick Palka <ppalka@gcc.gnu.org>
Date:   Wed Aug 31 19:06:22 2016 +0000

    Fix folding of VECTOR_CST comparisons
    
    gcc/ChangeLog:
    
            Backport from mainline
            2016-08-27  Patrick Palka  <ppalka@gcc.gnu.org>
    
            PR tree-optimization/71077
            PR tree-optimization/68542
            * fold-const.c (fold_relational_const): Fix folding of
            VECTOR_CST comparisons that have a scalar boolean result type.
    
    gcc/testsuite/ChangeLog:
    
            Backport from mainline
            2016-08-27  Patrick Palka  <ppalka@gcc.gnu.org>
    
            PR tree-optimization/71077
            * gcc.target/i386/pr71077.c: New test.
    
    From-SVN: r239907

commit 24f61fe76d712a932a16403802e8fd74088e3062
Author: Gerald Pfeifer <gerald@pfeifer.com>
Date:   Wed Aug 31 18:52:03 2016 +0000

    * doc/install.texi (Binaries): www.opencsw.org now uses https.
    
    From-SVN: r239905

commit 1e36b607322407f1a1207b190f6ccd4860edd595
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Wed Aug 31 15:38:05 2016 +0300

    re PR libstdc++/77395 (std::is_constructible is false for type constructible via implicit conversion operator affecting std::tuple)
    
            PR libstdc++/77395
            * include/std/type_traits (is_constructible): Forward-declare...
            (__is_base_to_derived_ref): ...and use here.
            * testsuite/20_util/declval/requirements/1_neg.cc: Adjust.
            * testsuite/20_util/is_constructible/77395.cc: New.
            * testsuite/20_util/make_signed/requirements/typedefs_neg.cc: Adjust.
            * testsuite/20_util/make_unsigned/requirements/typedefs_neg.cc:
            Likewise.
            * testsuite/20_util/tuple/77395.cc: New.
    
    From-SVN: r239890

commit 6b2d705ace3c23f8bcdcc7ca3bd82a4597c40678
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 08:53:05 2016 +0000

    * config.host: Add support for arm*-*-phoenix* targets.
    
    From-SVN: r239884

commit 9c548a0f8334a11cb3103fc1f6986c1966d79171
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 08:51:56 2016 +0000

    config.gcc: Add support for arm*-*-phoenix* targets.
    
            * config.gcc: Add support for arm*-*-phoenix* targets.
            * config/arm/t-phoenix: New.
            * config/phoenix.h: New.
    
    From-SVN: r239883

commit 3784cccfd12bf5dd098f8886764dc3ccf9ff51f2
Author: Jakub Sejdak <jakub.sejdak@phoesys.com>
Date:   Wed Aug 31 08:49:03 2016 +0000

    config.sub: Add support for Phoenix-RTOS targets.
    
            * config.sub: Add support for Phoenix-RTOS targets.
    
    From-SVN: r239882

commit ad4e354cf349d1220594ca8488b7c97f7f38b3fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 31 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239877

commit a80ddd0b55aed4c683a52e921c541b1963531bf8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 30 16:19:29 2016 +0100

    Add -fno-show-column to libstdc++ test flags
    
    Backport from mainline
    2016-08-02  Jonathan Wakely  <jwakely@redhat.com>
    
            * scripts/testsuite_flags.in: Add -fno-show-column to cxxflags.
    
    Backport from mainline
    2016-07-27  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/20_util/forward/1_neg.cc: Move dg-error to right line.
    
    From-SVN: r239864

commit a18c8b36f8cec2b462e54dcdeee8aae7fa699e01
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 30 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r239849

commit 08db69c80152a8a84bdf9d973d0d4b1d40316521
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Mon Aug 29 21:03:45 2016 +0200

    re PR target/77403 (assemble failure of vinserti64x4 with -masm=intel)
    
            PR target/77403
            * config/i386/sse.md (vec_set_lo_<mode><mask_name>): Fix assembler
            template for intel asm dialect.
            (vec_set_hi_<mode><mask_name>): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/77403
            * gcc.target/i386/pr77403.c: New test.
    
    From-SVN: r239835

commit a5a75bcc79075071187a9e1d7b208b16c519fea1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Aug 29 14:44:00 2016 +0000

    * Makefile.in (gcov-iov.h): Add dummy recipe.
    
    From-SVN: r239824

commit 48dadb12f3e5a4f9ec643229061b6e02f9957f04
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Aug 29 14:26:27 2016 +0000

    * gcc.dg/ipa/iinline-attr.c: XFAIL on Visium.
    
    From-SVN: r239822

commit 7602ac27104fade083187d2dbc8c9f2dc790d707
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 29 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239813

commit 11d34611ac0f7c2edbd8595e5e10f824e95f8662
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Aug 28 18:30:32 2016 +0200

    backport: re PR target/77270 (Flag -mprftchw is shared with 3dnow for -march=k8)
    
            Backport from mainline
            2016-08-23  Venkataramanan Kumar  <venkataramanan.kumar@amd.com>
    
            * config/i386/i386.c (processor_alias_table): Enable PTA_PRFCHW
            for targets amdfam10 and barcelona.
    
            Backport from mainline
            2016-08-21  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77270
            * config/i386/i386.md (prefetch): When TARGET_PRFCHW or
            TARGET_PREFETCHWT1 are disabled, emit 3dNOW! write prefetches for
            non-SSE2 athlons only, otherwise prefer SSE prefetches.
    
            Backport from mainline
            2016-08-19  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77270
            * config/i386/i386.c (ix86_option_override_internal): Remove
            PTA_PRFCHW from entries that also have PTA_3DNOW flag.
            Enable SSE prefetch also for TARGET_PREFETCHWT1.
            Do not try to enable TARGET_PRFCHW ISA flag here.
            * config/i386/i386.md (prefetch): Enable also for TARGET_3DNOW.
            Rewrite expander function body.
            (*prefetch_3dnow): Enable for TARGET_3DNOW and TARGET_PREFETCHWT1.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-08-24  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/77270
            * gcc.dg/tree-ssa/loop-28.c: Also compile on 32bit x86 targets.
            (dg-options): Use -march=amdfam10 instead of -march=athlon.
            * gcc.dg/tree-ssa/update-unroll-1.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-3.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-4.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-5.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-6.c: Ditto.  Do not require sse2
            effective target.  Remove scan-assembler-times directives.
            * gcc.dg/tree-ssa/prefetch-7.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-8.c: Ditto.
            * gcc.dg/tree-ssa/prefetch-9.c: Ditto.
    
    From-SVN: r239810

commit 9e8e95cd165022669823ed9e133accb3f1b47bcc
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sun Aug 28 07:41:52 2016 +0000

    Backport "Tag {ms,sysv}_va_list_type_node with '{ms,sysv}_abi va_list' attribute"
    
            2016-08-28  Tom de Vries  <tom@codesourcery.com>
    
            backport from trunk:
            2016-08-28  Tom de Vries  <tom@codesourcery.com>
    
            PR lto/70955
            * config/i386/i386.c (ix86_build_builtin_va_list_64): Tag type with
            'sysv_abi va_list' attribute.
            (ix86_build_builtin_va_list): Tag type with 'ms_abi va_list' attribute.
            (ix86_canonical_va_list_type): Handle 'sysv_abi/ms_abi va_list'
            attributes.
    
            * gcc.dg/pr70955.c: New test.
            * gcc.dg/lto/pr70955_0.c: Same.
            * gcc.dg/lto/pr70955_1.c: Same.
    
    From-SVN: r239806

commit 2af13a142df94332f7e04295f57215e8a783dedf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239803

commit 070159fcc2461dcf9a5cf7e660c1c5a3c814e14e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 27 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r239792

commit 0852988fc0ab4824f86d0ba3f63b6e972dac5455
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Aug 26 02:05:40 2016 +0100

    Update .po files.
    
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
    
    From-SVN: r239768

commit 4dd1460f7748e44ad2d9e35f34233a61ad2d6594
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 26 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239765

commit ffa2b5e61ab8bd68680a2802708b0293ebc8cf08
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Aug 25 14:24:17 2016 +0000

    backport: re PR target/72863 (Powerpc64le: redundant swaps when using vec_vsx_ld/st)
    
    [gcc]
    
    2016-08-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/72863
            * vsx.md (vsx_load_<mode>): For P8LE, emit swaps at expand time.
            (vsx_store_<mode>): Likewise.
    
    [gcc/testsuite]
    
    2016-08-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-08-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/72863
            * gcc.target/powerpc/pr72863.c: New test.
    
    From-SVN: r239761

commit 0a0873a4a581b955f7b51cbb73ac05ef6d0dc84c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 25 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r239750

commit 7094cbd5aaef8b91ccfcc713f8a8068bd6f4f743
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Aug 24 19:45:56 2016 +0000

    re PR fortran/77358 ([F08] deferred-length character function returns zero-length string)
    
    2016-08-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/77358
            * resolve.c (resolve_fl_procedure): Use the correct gfc_charlen
            for deferred character length module procedures.
    
    2016-08-24  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/77358
            * gfortran.dg/submodule_17.f08: New test.
    
    From-SVN: r239741

commit d658307758003a2a140c19a58f1205ce0ad9b212
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Aug 24 07:39:42 2016 +0000

    backport: re PR tree-optimization/76490 (when use -O2 -fcheck-founds compiler appears to hang and consumes all memory)
    
    2016-08-24  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-08-17  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/76490
            * tree-vrp.c (update_value_range): Preserve overflow infinities
            when intersecting with ranges from get_range_info.
            (operand_less_p): Handle overflow infinities correctly.
            (value_range_constant_singleton): Use vrp_operand_equal_p
            to handle overflow max/min correctly.
            (vrp_valueize): Likewise.
            (union_ranges): Likewise.
            (intersect_ranges): Likewise.
            (vrp_visit_phi_node): Improve iteration limitation to only
            apply when we'll possibly re-visit the PHI via a changed argument
            on the backedge.
    
            * gfortran.fortran-torture/compile/pr76490.f90: New testcase.
            * gcc.dg/pr52904.c: XFAIL.
    
    From-SVN: r239729

commit ab22f4c143e53cfa04cd968d3bcc94914b4d8625
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Wed Aug 24 06:08:53 2016 +0000

    [RTEMS] Add vfp multilib for ARM
    
    gcc/
    
            * config/arm/t-rtems: Add vfp multilib.
    
    From-SVN: r239728

commit 154e0600cffbe92cf0d8f3b8b049a58032c7ec72
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 24 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r239725

commit b9411918ede99c012a176a72be95bdda1c43baf8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 15:25:20 2016 +0100

    * testsuite/23_containers/map/77334.cc: Use dg-options for C++11.
    
    From-SVN: r239704

commit 67fa4379eb8b0780bbcb19da372235e7455d5397
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 15:21:16 2016 +0100

    libstdc++/77334 move assign RB trees of non-copyable types
    
            PR libstdc++/77334
            * include/bits/stl_tree.h (_Rb_tree::_M_move_assign): New functions.
            (_Rb_tree::operator=(_Rb_tree&&)): Dispatch to _M_move_assign.
            * testsuite/23_containers/map/77334.cc: New test.
    
    From-SVN: r239702

commit 075dd34c83d555ca5a17a9a7e819b5cdb41bdf33
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Aug 23 13:49:00 2016 +0000

    backport: [multiple changes]
    
    2016-08-23  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-08-16  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/76783
            * tree-ssa-propagate.c (ssa_prop_init): Use RPO order.  Clear
            BB visited flags at start.
    
            * gcc.dg/pr76783.c: New testcase.
            * gcc.dg/tree-ssa/pr69270-2.c: Adjust.
    
            2016-08-12  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/72851
            * tree-ssa-propagate.c: Include cfganal.h.  Rewrite block and stmt
            worklists to use bitmaps indexed in execution order.
            (executable_blocks, cfg_blocks_num, cfg_blocks_tail, cfg_blocks_head,
            bb_in_list, interesting_ssa_edges, varying_ssa_edges): Remove.
            (cfg_blocks): Make a bitmap.
            (bb_to_cfg_order, cfg_order_to_bb, ssa_edge_worklist, uid_to_stmt):
            New globals.
            (cfg_blocks_empty_p): Adjust.
            (cfg_blocks_add): Likewise.
            (cfg_blocks_get): Likewise.
            (add_ssa_edge): Likewise.
            (add_control_edge): Likewise.
            (simulate_stmt): Likewise.
            (process_ssa_edge_worklist): Likewise.
            (simulate_block): Likewise.
            (ssa_prop_init): Compute PRE order and stmt UIDs.
            (ssa_prop_fini): Adjust.
            (ssa_propagate): Adjust.
    
            * gcc.dg/torture/pr72851.c: New testcase.
    
    From-SVN: r239699

commit b6f69e147dd326ae74aace95d9c84df57024f3c8
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 13:08:14 2016 +0100

    Update links to libstdc++ Doxygen pages
    
            * doc/xml/api.xml: Replace hardcoded links for specific versions with
            link to docs for all releases.
            * doc/html/*: Regenerate.
    
    From-SVN: r239695

commit 6a9e6b92e652b4c28039788af237c2967ab6bf7b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 23 13:08:09 2016 +0100

    libstdc++/71771 constrain reverse_iterator difference op
    
            * include/bits/stl_iterator.h
            (operator-(reverse_iterator<Iter>, reverse_iterator<Iter>): Constrain
            for C++11 and later.
            * testsuite/24_iterators/reverse_iterator/71771.cc: New test.
    
    From-SVN: r239694

commit 12d4e9cc9059cc4ae5e56919f0c3fec8cec79b39
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 23 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239679

commit 98bb221567d6cc2af0ede2441a48224c5379736f
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon Aug 22 22:42:03 2016 +0200

    backport: re PR target/72867 (SSE/AVX/AVX512: incorrect optimization of VMINPS/VMAXPS at compile time)
    
            Backport from mainline
            2016-08-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/72867
            * config/i386/sse.md (<code><mode>3<mask_name><round_saeonly_name>):
            Emit ieee_<ieee_maxmin><mode>3<mask_name><round_saeonly_name>
            for !flag_finite_math_only or flag_signed_zeros.
            (*<code><mode>3<mask_name><round_saeonly_name>): Rename from
            *<code><mode>3_finite<mask_name><round_saeonly_name>.  Do not
            depend on flag_finite_math_only.
            (ieee_<ieee_maxmin><mode>3<mask_name><round_saeonly_name>):
            New insn pattern.
            (*<code><mode>3<mask_name><round_saeonly_name>): Remove.
            (*ieee_smin<mode>3): Ditto.
            (*ieee_smax<mode>3): Ditto.
            * config/i386/mmx.md (mmx_<code>v2sf3): Emit
            mmx_ieee_<ieee_maxmin>v2sf3 for !flag_finite_math_only or
            flag_signed_zeros.
            (*mmx_<code>v2sf3): Rename from *mmx_<code>v2sf3_finite.  Do not
            depend on flag_finite_math_only.
            (mmx_ieee_<ieee_maxmin>v2sf3): New insn pattern.
            (*mmx_<code>v2sf3): Remove.
            * config/i386/subst.md (round_saeonly_mask_arg3): New subst attribute.
            * config/i386/i386.c (ix86_expand_sse_fp_mimnax): Check
            flag_signed_zeros instead of !flag_unsafe_math_optimizations.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-08-16  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/72867
            * gcc.target/i386/pr72867.c: Add -msse to dg-options.
    
            Backport from mainline
            2016-08-15  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/72867
            * gcc.target/i386/pr72867.c: New test.
    
    From-SVN: r239674

commit 9827675d221dd59238927353c9aaf18e2f7a0b2f
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Aug 22 14:28:05 2016 +0000

    [expr.c] PR middle-end/71700: zero-extend sub-word value when widening constructor element
    
            Backport from mainline
            2016-07-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR middle-end/71700
            * expr.c (store_constructor): Mask sign-extended bits when widening
            sub-word constructor element at the start of a word.
    
            * gcc.c-torture/execute/pr71700.c: New test.
    
    From-SVN: r239660

commit 3993f82bed2de3a4b744bc4c30fb255da8c71851
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 22 10:38:25 2016 +0000

    BASE-VER: Set to 6.2.1.
    
    2016-08-22  Richard Biener  <rguenther@suse.de>
    
            * BASE-VER: Set to 6.2.1.
    
    From-SVN: r239654

commit 4cf01c09fe137b7a70b9879ca396823615962eb3
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Mon Aug 22 08:01:53 2016 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r239651

commit 0b9661d181affe3583b9d97be349f67ca01cf1e4
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 22 07:37:21 2016 +0000

    re PR tree-optimization/62171 (restrict pointer to struct with restrict pointers parm doesn't prevent aliases)
    
    2016-08-22  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/62171
            * gcc.dg/vect/pr62171.c: Remove default vector testsuite flags.
    
    From-SVN: r239650

commit d8053eed7a5153e6da69731ebeabbeecabf69df8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 22 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239645

commit 97560ba990e04149f3c1478aaeeaf269de8f5067
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 21 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239641

commit 25eaddfa542d90119c80c51801f048982a645170
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 20 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239635

commit a6618c50060a75ebdb69fee75d1e55bae8697b5e
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Aug 19 22:07:26 2016 +0100

    Regenerate gcc.pot.
    
    gcc/po:
            * gcc.pot: Regenerate.
    
    From-SVN: r239631

commit 587380c60e6f7460ebdc33c77cf92f8aaf7aa8c4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 19 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239602

commit 23bd3a501295bdd584cab0288239a7cc1cc7f2c7
Author: Chung-Lin Tang <cltang@codesourcery.com>
Date:   Thu Aug 18 14:56:11 2016 +0000

    backport: re PR middle-end/70895 (OpenACC: loop reduction does not work. Output is zero.)
    
    Backport from mainline:
    
    2016-08-18  Chung-Lin Tang  <cltang@codesourcery.com>
    
            PR middle-end/70895
            gcc/
            * gimplify.c (omp_add_variable): Adjust/add variable mapping on
            enclosing parallel construct for reduction variables on OpenACC loop
            directives.
    
            gcc/testsuite/
            * gfortran.dg/goacc/loop-tree-1.f90: Add gimple scan-tree-dump test.
            * c-c++-common/goacc/reduction-1.c: Likewise.
            * c-c++-common/goacc/reduction-2.c: Likewise.
            * c-c++-common/goacc/reduction-3.c: Likewise.
            * c-c++-common/goacc/reduction-4.c: Likewise.
    
            libgomp/
            * testsuite/libgomp.oacc-fortran/reduction-7.f90: Add explicit
            firstprivate clauses.
            * testsuite/libgomp.oacc-fortran/reduction-6.f90: Remove explicit
            copy clauses.
            * testsuite/libgomp.oacc-c-c++-common/reduction-7.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/reduction-cplx-flt.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/reduction-flt.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/collapse-2.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/loop-red-wv-1.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/collapse-4.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/loop-red-v-1.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/reduction-cplx-dbl.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/loop-red-g-1.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/loop-red-w-1.c: Likewise.
            * testsuite/libgomp.oacc-c-c++-common/reduction-dbl.c: Likewise.
    
    From-SVN: r239577

commit 30189a5f57e9f104c9889e6e2aedf17cf2891077
Author: Oleg Endo <olegendo@gcc.gnu.org>
Date:   Thu Aug 18 12:25:47 2016 +0000

    backport: re PR target/71338 ([RL78] mulu instruction not used on G10)
    
    gcc/
            Backport from mainline
            2016-06-17  DJ Delorie  <dj@redhat.com>
    
            PR target/71338
            * config/rl78/rl78-expand.c (umulqihi3): Enable for G10.
            * config/rl78/rl78-virtual.c (umulhi3_shift_virt): Likewise.
            (umulqihi3_virt): Likewise.
            * config/rl78/rl78-real.c (umulhi3_shift_real): Likewise.
            (umulqihi3_real): Likewise.
    
    From-SVN: r239569

commit 5598d8e97ad381b84f3ec9c8bd0ca827eee1e780
Author: Richard Biener <rguenth@gcc.gnu.org>
Date:   Thu Aug 18 09:24:38 2016 +0000

    ChangeLog: Fix bug reference.
    
    2016-08-18  Richard Biener  <rguenther@suse.de>
    
            * contrib/ChangeLog: Fix bug reference.
    
    From-SVN: r239563

commit 871ea6e34d069571bccffe7d3bfd99d2f233b285
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Aug 18 09:22:02 2016 +0000

    re PR c++/77297 (parenthesis suppress/silences all warnings)
    
    2016-08-18  Richard Biener  <rguenther@suse.de>
    
            PR bootstrap/77297
            * download_prerequisites: Patch ISL 0.15 to remove trailing comma
            which causes PR77297.
    
    From-SVN: r239562

commit 1433f5bff0384d267431aa518260968a5797cf25
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 18 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239552

commit a88c8b2c8becf6a2f7fe05be8ee097cb983a865a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 17 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239517

commit 078cd37340ddd5fe52f4a761cc0f1206d44107fe
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Tue Aug 16 16:45:48 2016 +0000

    backport: frontend-passes.c (create_var): Set ts.deferred for deferred-length character variables.
    
    2016-08-16  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk
            * frontend-passes.c (create_var):  Set ts.deferred for
            deferred-length character variables.
            * dump-parse-tree.c (show_typespec):  Also dump
            is_c_interop, is_iso_c and deferred flags.
    
    From-SVN: r239506

commit 833ca0cd11069ee9a88c2995df2747d0d202128d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Tue Aug 16 12:43:24 2016 +0000

    * doc/install.texi (*-*-solaris2*): Adjust latest change.
    
    From-SVN: r239500

commit a7a2bea9ca11a9a2ffaed331f4cc930bd0b98980
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Aug 16 09:15:00 2016 +0200

    re PR testsuite/77034 (g++.dg/init/elide5.C fails on powerpc64-unknown-linux-gnu with -m32)
    
            PR testsuite/77034
            Backported from mainline
            2016-07-25  Jason Merrill  <jason@redhat.com>
    
            * g++.dg/init/elide5.C (operator new): Use decltype(sizeof(1)) instead
            of unsigned long.
    
    From-SVN: r239493

commit d29e184fd33496634397500542a45dced16b79e2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 16 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239491

commit 8b5372223d88d4cb3bed778308a1b5a8e4bba2df
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Aug 15 13:19:34 2016 +0200

    Fix invalid memory access in gcc.c (driver/72765)
    
            Backported from mainline
            2016-08-15  Martin Liska  <mliska@suse.cz>
    
            PR driver/72765
            * gcc.c (do_spec_1): Call save_string with the right size.
            (save_string): Do an assert about string we copy.
    
    From-SVN: r239476

commit e99f4e0a93b381210ececbd4d2177335d2c4df25
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Aug 15 12:05:59 2016 +0200

    re PR debug/71906 (Fortran allocatable strings debug info type size regression)
    
            PR debug/71906
            * dwarf2out.c (string_types): New variable.
            (gen_array_type_die): Change early_dwarf handling of
            DW_AT_string_length, create DW_OP_call4 referencing the
            length var temporarily.  Handle parameters that are pointers
            to string length.
            (adjust_string_types): New function.
            (gen_subprogram_die): Temporarily set string_types to local var,
            call adjust_string_types if needed.
            (non_dwarf_expression, copy_deref_exprloc, optimize_string_length):
            New functions.
            (resolve_addr): Adjust DW_AT_string_length if it is DW_OP_call4.
    
            * trans-decl.c (gfc_get_symbol_decl): Call gfc_finish_var_decl
            for decl's character length before gfc_finish_var_decl on the
            decl itself.
    
    From-SVN: r239473

commit 3430468f8a56c8594f0afef9bd682bf30de4d5a7
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Aug 15 10:00:21 2016 +0000

    re PR tree-optimization/73434 (Wrong code with casting, branches and aliasing)
    
    2016-08-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/73434
            * tree-ssa-sccvn.c (vn_reference_maybe_forwprop_address): Preserve
            TBAA info on the base when forwarding a non-invariant address.
    
            * gcc.dg/torture/pr73434.c: New testcase.
    
    From-SVN: r239472

commit 4352af8577e63066f6c8e4e75fb15591e5cd17a4
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Aug 15 09:16:32 2016 +0000

    install.texi (*-*-solaris2*): Fix version number and document requirement on GNU make for building libjava...
    
            * doc/install.texi (*-*-solaris2*): Fix version number and document
            requirement on GNU make for building libjava with the Solaris linker.
    
    From-SVN: r239465

commit b57c44995df766feded2dfa97abb711d087742ef
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Mon Aug 15 10:39:55 2016 +0200

    re PR tree-optimization/72824 (Signed floating point zero semantics broken at optimization level -O3 (tree-loop-distribute-patterns))
    
            PR tree-optimization/72824
            * tree-loop-distribution.c (const_with_all_bytes_same)
            <case VECTOR_CST>: Fix a typo.
    
            * gcc.c-torture/execute/ieee/pr72824-2.c: New test.
    
    From-SVN: r239462

commit 2f332a5bf9ff1b77f1ffa2f391f0a8659310070e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 15 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239459

commit d61c215f6a1b9bab22fac9bc2c7d19ea0dd92887
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sun Aug 14 15:42:38 2016 +0200

    backport: re PR target/76342 (AVX512: _mm512_undefined_epi32() intrinsic missing (incorrectly named _mm512_undefined_si512))
    
            Backport from mainline
            2016-08-14  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/76342
            * config/i386/avx512fintrin.h (_mm512_undefined_epi32):
            Renamed from _mm512_undefined_si512.
            (_mm_undefined_si512): New definition.
    
            Backport from mainline:
            2016-08-09  David Wohlferd  <dw@LimeGreenSocks.com>
    
            * config/i3836/avx512fintrin.h (_mm512_cvtsepi64_epi32): Remove
            unused variable __O.
    
            Backport from mainline:
            2016-08-09  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/72843
            * config/i386/i386.md (*movtf_internal): Use
            lra_in_progress || reload_completed instead of !can_create_pseudo_p
            in the insn constraint.
            (*movxf_internal): Ditto.
            (*movdf_internal): Ditto.
            (*movsf_internal): Ditto.
    
    testsuite/ChangeLog:
    
            Backport from mainline
            2016-08-14  Uros Bizjak  <ubizjak@gmail.com>
    
            PR target/76342
            * gcc.target/i386/pr76342.c: New test.
    
    From-SVN: r239456

commit bd2d8f3f391876cfdc5d309bbc6148c3c0fa84f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 14 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239451

commit e6791fbe4590d94b6cf57bb129273fddcab1c0f2
Author: Jason Merrill <jason@gcc.gnu.org>
Date:   Sat Aug 13 20:12:06 2016 -0400

    Fix ChangeLog date
    
    From-SVN: r239449

commit f6aad251dba95bc1370014daa83b922e30bd1a15
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Aug 13 19:53:28 2016 -0400

    PR c++/71972 - constexpr array self-modification
    
            * constexpr.c (cxx_eval_array_reference): Handle looking for the
            value of an element we're currently modifying.
    
    From-SVN: r239448

commit f2fcff2ba6db6bf8dedec509a6017d5cf565cfe9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 13 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239440

commit 021262b4da78d033aa697ea9ef667ccee0b49681
Author: Ian Lance Taylor <ian@gcc.gnu.org>
Date:   Sat Aug 13 00:08:12 2016 +0000

    backport: cmd/go: deduplicate gccgo afiles by package path, not *Package
    
    Backport from mainline:
    
        cmd/go: deduplicate gccgo afiles by package path, not *Package
    
        This code was fixed a while ago to ensure that xtest and fake packages came
        first on the link line, but golang.org/cl/16775 added --whole-archive ...
        --no-whole-archive around all the .a files and rendered this fix useless.
    
        So, take a different approach and only put one .a file on the linker command
        line for each ImportPath we see while traversing the action graph, not for each
        *Package we see. The way we walk the graph ensures that we'll see the .a files
        that need to be first first.
    
        Reviewed-on: https://go-review.googlesource.com/21692
    
    From-SVN: r239437

commit 793dac4fbd3f29dc40e70c477c8ffec773ccd442
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 12 21:57:35 2016 +0200

    re PR c/71512 (ICE: verify_gimple failed with UBSAN)
    
            PR c/71512
            * ubsan.c (instrument_si_overflow): Pass true instead of false
            to gsi_replace.
            (pass_ubsan::execute): Call gimple_purge_dead_eh_edges at the end
            of bbs.  Return TODO_cleanup_cfg if any returned true.
    
            * g++.dg/ubsan/pr71512.C: New test.
            * c-c++-common/ubsan/pr71512-1.c: New test.
            * c-c++-common/ubsan/pr71512-2.c: New test.
    
    From-SVN: r239431

commit 5db0f69944caa24eb4f3834dcb4fe516e66e545c
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Fri Aug 12 17:06:44 2016 +0000

    backport: re PR tree-optimization/71083 (Unaligned bit-field address when predictive commoning)
    
    2016-08-12  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-08-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/71083
            * tree-predcom.c (ref_at_iteration): Correctly align the
            reference type.
    
    testsuite:
    2016-08-12  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-08-11  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            PR tree-optimization/71083
            * gcc.c-torture/execute/pr71083.c: New test.
            * gnat.dg/loop_optimization23.adb: New test.
            * gnat.dg/loop_optimization23_pkg.ads: New test.
            * gnat.dg/loop_optimization23_pkg.adb: New test.
    
    From-SVN: r239423

commit d32616f7537cf79cbf96c0ade45f406b00e325d9
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 12 18:05:53 2016 +0200

    re PR c/67410 (c/c-typeck.c references out of bounds array)
    
            PR c/67410
            * c-typeck.c (set_nonincremental_init_from_string): Use / instead of
            % to determine val element to change.  Assert that
            wchar_bytes * charwidth fits into val array.
    
            * gcc.dg/pr67410.c: New test.
    
    Co-Authored-By: Martin Liska <mliska@suse.cz>
    
    From-SVN: r239420

commit 222e5ca8e29d8d4bcb36e77618a153ddd11527b4
Author: James Greenhalgh <james.greenhalgh@arm.com>
Date:   Fri Aug 12 11:26:06 2016 +0000

    [AArch64] Handle HFAs of float16 types properly
    
    Backport from mainline r239173.
    
    Fix PR Target/72819.
    
    gcc/
    
            PR Target/72819
            * config/aarch64/aarch64.h (aarch64_fp16_type_node): Declare.
            (aarch64_fp16_ptr_type_node): Likewise.
            * config/aarch64/aarch64-simd-builtins.c
            (aarch64_fp16_ptr_type_node): Define.
            (aarch64_init_fp16_types): New, refactored out of...
            (aarch64_init_builtins): ...here, update to call
            aarch64_init_fp16_types.
            * config/aarch64/aarch64.c (aarch64_gimplify_va_arg_expr): Handle
            HFmode.
            (aapcs_vfp_sub_candidate): Likewise.
    
    gcc/testsuite/
    
            PR Target/72819
            * gcc.target/aarch64/aapcs64/abitest-common.h: Define half-precision
            registers.
            * gcc.target/aarch64/aapcs64/abitest.S (dumpregs): Add assembly for
            saving the half-precision registers.
            * gcc.target/aarch64/aapcs64/func-ret-1.c: Test that an __fp16
            value is returned in h0.
            * gcc.target/aarch64/aapcs64/test_2.c: Check that __FP16 arguments
            are passed in FP/SIMD registers.
            * gcc.target/aarch64/aapcs64/test_27.c: New, test that __fp16 HFA
            passing works corrcetly.
            * gcc.target/aarch64/aapcs64/type-def.h (hfa_f16x1_t): New.
            (hfa_f16x2_t): Likewise.
            (hfa_f16x3_t): Likewise.
            * gcc.target/aarch64/aapcs64/va_arg-1.c: Check that __fp16 values
            are promoted to double and passed in a double register.
            * gcc.target/aarch64/aapcs64/va_arg-2.c: Check that __fp16 values
            are promoted to double and stacked.
            * gcc.target/aarch64/aapcs64/va_arg-4.c: Check stacking of HFA of
            __fp16 data types.
            * gcc.target/aarch64/aapcs64/va_arg-5.c: Likewise.
            * gcc.target/aarch64/aapcs64/va_arg-16.c: New, check HFAs of
            __fp16 first get passed in FP/SIMD registers, then stacked.
    
    From-SVN: r239411

commit 0a234638b45064bddf478cfb08c17e992d4b5f92
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Aug 12 10:53:46 2016 +0200

    re PR sanitizer/71042 (libtsan requires __pointer_chk_guard@GLIBC_PRIVATE (6))
    
            PR sanitizer/71042
            * tsan/tsan_platform_linux.cc: Cherry-pick upstream r278292.
            * tsan/tsan_rtl_aarch64.S: Likewise.
    
    From-SVN: r239408

commit 44e9605eecd67b595e92d700b6314822fad6f7de
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 12 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239399

commit 0ef38e77c78494ab1cec9447f407666e70d27379
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Thu Aug 11 17:08:54 2016 +0000

    backport: re PR libfortran/71123 (Namelist read failure on Windows)
    
    2016-08-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk
            PR libgfortran/71123
            PR libgfortran/73142
            * io/list_read (eat_spaces): Eat '\r' as part of spaces.
    
            * gfortran.dg/namelist_90.f: New test.
    
    From-SVN: r239381

commit 295dd5ab2d261cf39e1129e4cfb0a25240eeb473
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Aug 11 18:03:32 2016 +0200

    re PR c++/72868 (Constexpr expressions mistreat case ranges)
    
            PR c++/72868
            * constexpr.c (label_matches): Handle case range expressions.
    
            * g++.dg/cpp1y/constexpr-switch4.C: New test.
    
    From-SVN: r239380

commit 44a434392e95a74946875559e3f6db3961db9fbe
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 11 11:43:21 2016 -0400

    PR c++/73456 - ICE with constrained parameter pack.
    
            * logic.cc (non_atomic_constraint_p): Handle EXPR_PACK_EXPANSION.
    
    From-SVN: r239377

commit 63c283dad85511a673af8ac111215a19f608d490
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Aug 11 17:14:17 2016 +0200

    backport: re PR c/72816 (ICE on x86_64-linux-gnu (tree check: expected tree that contains ‘decl with RTL’ structure, have ‘field_decl’ in set_decl_rtl, at emit-rtl.c:1282))
    
            Backported from mainline
            2016-08-11  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/72816
            * c-decl.c (grokdeclarator): When adding TYPE_DOMAIN for flexible
            array member through typedef, for orig_qual_indirect == 0 clear
            orig_qual_type.
    
            * gcc.dg/pr72816.c: Remove dg-error.
    
            2016-08-07  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/72816
            * gcc.dg/pr72816.c: New test.
    
    From-SVN: r239374

commit ca701e63cac7ead6bc6981cdf835abd93a7606b6
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Aug 11 13:37:07 2016 +0000

    S/390: Provide low-level builtins with __int128 ops.
    
    gcc/ChangeLog:
    
    2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtin-types.def: Add INT128 types.
            * config/s390/s390-builtins.def: Add INT128 variants for the add
            sub low-level builtins dealing with TImode.
            * config/s390/s390.c (s390_expand_builtin): Allow mode conversions
            via subreg when expanding a builtin.
            * config/s390/s390.md: Remove UNSPEC_VEC_ADDC_U128,
            UNSPEC_VEC_SUB_U128, and UNSPEC_VEC_SUBC_U128 constants.
            Fix comment.
            * config/s390/vecintrin.h: Adjust builtin names accordingly.
            * config/s390/vx-builtins.md ("vec_add_u128"): Remove expander.
            ("vec_addc<mode>", "vec_addc_u128"): Merge to
            "vacc<bhfgq>_<mode>".
            ("vec_adde_u128"): Rename to "vacq". Change mode to TImode.
            ("vec_addec_u128"): Rename to "vacccq". Change mode to TImode.
            ("vec_subc<mode>", "vec_subc_u128"): Merge to
            "vscbi<bhfgq>_<mode>".
            ("vec_sube_u128"): Rename to "vsbiq". Change mode to TImode.
            ("vec_subec_u128"): Rename to "vsbcbiq". Change mode to TImode.
    
    From-SVN: r239367

commit b0b315e0e27d913289af0b5724e3797a69c2161a
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Aug 11 13:35:59 2016 +0000

    S/390: Fix vlvg vlgv low-level builtins.
    
    gcc/ChangeLog:
    
    2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtins.def: Mark last operand of s390_vlvg*
            and s390_vlgv* builtins as element selector.
    
    From-SVN: r239366

commit 303941786be527b14148c2090520bd5ec54e7762
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Aug 11 13:35:01 2016 +0000

    S/390: Fix vecinit expansion.
    
    The fallback routine in the S/390 vecinit expander did not check
    whether each of the initializer elements is a proper general_operand.
    Since revision r236582 the expander is invoked also with e.g. symbol
    refs with an odd addend resulting in invalid insns.
    
    Fixed by forcing the element into a register in such cases.
    
    gcc/ChangeLog:
    
    2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-06  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_expand_vec_init): Force initializer
            element to register if it doesn't match general_operand.
    
    From-SVN: r239365

commit 41e98229d74a02b13807b02444496529b5b881c5
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Aug 11 13:33:31 2016 +0000

    S/390: vecintrin.h fix file description in comment
    
    gcc/ChangeLog:
    
    2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/vecintrin.h: Fix file description in comment.
    
    From-SVN: r239364

commit 9bdba1169274598a1edd67dd34c4cff5107cdf4b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Thu Aug 11 13:30:55 2016 +0000

    S/390: Change builtin type naming scheme to match builtin-types.def.
    
    gcc/ChangeLog:
    
    2016-08-11  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390-builtin-types.def: Change builtin type naming
            scheme to match builtin-types.def.
    
    From-SVN: r239363

commit 64374acf430e71b4422a4caeeede8292b79eea52
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Thu Aug 11 10:12:31 2016 +0200

    backport: re PR fortran/71936 (ICE in wide_int_to_tree, at tree.c:1487)
    
    gcc/fortran/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71936
            * trans-array.c (gfc_array_allocate): When SOURCE= is a function
            stick with the ref of the object to allocate.
    
    gcc/testsuite/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71936
            * gfortran.dg/allocate_with_source_21.f03: New test.
    
    From-SVN: r239354

commit 0f2dc18785d2cbcb1c9465323c2419e7cf4b6882
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Thu Aug 11 09:46:33 2016 +0200

    backport: re PR fortran/72698 (ICE in lhd_incomplete_type_error, at langhooks.c:205)
    
    gcc/testsuite/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/72698
            * gfortran.dg/allocate_with_source_20.f03: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-08-11  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/72698
            * trans-stmt.c (gfc_trans_allocate): Prevent generating code for
            copy of zero sized string and with it an ICE.
    
    From-SVN: r239352

commit 1acb32f5310f4a1dc36e98a9566388c5d4b7a297
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 11 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239350

commit fdfd09b3a2e6ba3b10db8d14aded17e2480560a8
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Aug 10 18:15:37 2016 +0000

    backport: re PR target/72853 (gcc/testsuite/gcc.c-torture/execute/20021120-1.c generates incorrect stxssp op with -mcpu=power9)
    
    Backport from mainline:
    
    [gcc]
    2016-08-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/72853
            * config/rs6000/rs6000.c (mem_operand_ds_form): Add check for op
            being an offsettable address.
    
    [gcc/testsuite]
    2016-08-10  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/72853
            * gcc.target/powerpc/pr72853.c: New test.
    
    From-SVN: r239331

commit ced3d505fef77b8ab64216f5e91bc92eac02865d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Aug 10 14:16:39 2016 +0200

    backport: re PR tree-optimization/72824 (Signed floating point zero semantics broken at optimization level -O3 (tree-loop-distribute-patterns))
    
            Backported from mainline
            2016-08-09  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/72824
            * tree-loop-distribution.c (const_with_all_bytes_same): Verify
            real_zerop is not negative.
    
            * gcc.c-torture/execute/ieee/pr72824.c: New test.
    
    From-SVN: r239319

commit c1ee137520aeb37aa85cf81566ff52d39c517395
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 10 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239313

commit 6b53b4af59c45fd220772a246132c890a43b1715
Author: Martin Jambor <mjambor@suse.cz>
Date:   Tue Aug 9 18:13:37 2016 +0200

    [PR ipa/71981] Make get_dynamic_type grok MEM_REF
    
    2016-08-09  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/71981
            * ipa-polymorphic-call.c (get_dynamic_type): Bail out gracefully
            if instance is a MEM_REF.
    
    testsuite/
            PR ipa/71981
            * gcc.dg/ipa/pr71981.c: New test.
    
    From-SVN: r239295

commit 327c3acd0ab9f4f82615c85694bb403c2e8809a6
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Aug 9 10:49:36 2016 +0000

    backport: [multiple changes]
    
    2016-08-09  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-08-09  Richard Biener  <rguenther@suse.de>
    
            PR ipa/68273
            * ipa-prop.c (ipa_modify_formal_parameters): Build
            parameter types with natural alignment also for the
            over-aligned case.
    
            2016-07-15  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71881
            * tree-loop-distribution.c (destroy_loop): Remove blocks in
            reverse DOM order to make debug temp generation happy.
    
            * gcc.dg/torture/pr71881.c: New testcase.
    
    From-SVN: r239277

commit 213df654cfb4c34ff3f4f0b05dbd53b74be3fd41
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 9 15:14:39 2016 +0930

    [RS6000] PR72802 part 2, reload ICE
    
            PR target/72802
            * config/rs6000/rs6000.md (mov<mode>_hardfloat): Sort
            alternatives.  Put loads first, then stores, and reg/reg moves
            within same class later.  Delete attr length.
    testsuite/
            * gcc.c-torture/compile/pr72802.c: New.
    
    From-SVN: r239270

commit 08cf1a31fef914ac9f3f4a3543cd2f19382afbdc
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Aug 9 15:13:29 2016 +0930

    [RS6000] PR72802 part 1, fix constraints for lxssp/stxssp
    
            PR target/72802
            * config/rs6000/rs6000.c (mem_operand_gpr): Remove vsx dform test.
            (mem_operand_ds_form): New predicate.
            * config/rs6000/rs6000-protos.h (mem_operand_ds_form): Declare.
            * config/rs6000/constraints.md (wY): New constraint.
            * config/rs6000/rs6000.md (f32_lm2, f32_sm2): Use wY for SF.
            (extendsfdf2_fpr): Replace o constraint with wY.
    
    From-SVN: r239269

commit 92383b51de49f40b882f5d11c61503d183034a9a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 9 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239263

commit 1c9a6fe17e1caa0ef53d0b0c0e7b4585750e3def
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 8 10:06:15 2016 +0000

    backport: re PR rtl-optimization/71976 (insn-combiner deletes a live 64-bit shift)
    
            Backport from 2016-07-29 trunk r238863.
            PR rtl-optimization/71976
            * combine.c (get_last_value): Return 0 if the argument for which
            the function is called has a wider mode than the recorded value.
    
    From-SVN: r239238

commit 7f260dd49dd0fa112c11ceba5f4cbea6574e5d01
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Mon Aug 8 09:40:17 2016 +0000

    re PR c++/72800 (ICE on invalid C++14 code with initialized lambda capture: tree check: expected class ‘type’, have ‘exceptional’ (error_mark) in add_capture, at cp/lambda.c:505)
    
    /cp
    2016-08-08  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/72800
            * lambda.c (add_capture): Check lambda_capture_field_type return
            value for error_mark_node.
    
    /testsuite
    2016-08-08  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/72800
            * g++.dg/cpp1y/lambda-ice1.C: New.
    
    From-SVN: r239235

commit 68f4f0b7ae27d92dd6cd97dc37e2e7cd30eba536
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Mon Aug 8 10:20:07 2016 +0200

    backport: re PR fortran/70524 (ICE when using  -frepack-arrays -Warray-temporaries)
    
    gcc/testsuite/ChangeLog:
    
    2016-08-08  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70524
            * gfortran.dg/dependency_48.f90: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-08-08  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70524
            * trans-array.c (gfc_trans_dummy_array_bias): Ensure that the
            location information is correctly set.
            * trans-decl.c (gfc_trans_deferred_vars): Set the locus of the
            current construct early.
    
    From-SVN: r239231

commit 67b96ea6e9e30620a5fc0d0089b71ea09a41c1eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 8 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239227

commit 084c0e450cdc8d39f2ca5ce3bb77cdf6c1f20fb3
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Aug 7 17:01:39 2016 +0000

    re PR fortran/71795 (Two Bugs in array constructors (optimization))
    
    2016-08-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71795
            Backport from trunk
            * frontend-passes.c (combine_array_constructor):  Don't
            do anything if the expression is inside an array iterator.
    
    2016-08-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71795
            Backport from trunk
            * gfortran.dg/array_constructor_50.f90:  New test.
    
    From-SVN: r239224

commit 4dacba8fe3aab562e5576eaaa37e0ef0dd317057
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Aug 7 15:56:25 2016 +0000

    re PR fortran/70040 (ICE in gimplify.c with deferred-length strings)
    
    2016-08-07  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/70040
            Backport from trunk
            * gfortran.dg/pr70040.f90:  New testcase.
    
    From-SVN: r239223

commit 77bb2c0a08607d2f792d8ea3ce84b387477a2dcf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Aug 7 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239215

commit dda603c46ca98737b0114c5eca97c973abe0932a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:45 2016 +0100

    Use correct value category in std::function constraint
    
            * include/std/functional (function::_Callable): Use lvalue in
            result_of expression.
            * testsuite/20_util/function/cons/refqual.cc: New test.
    
    From-SVN: r239202

commit e9ca0ce8721c2c4d12b14b487437714c82cf32cf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:41 2016 +0100

    Move allocator in RB tree move constructors
    
    Backport from mainline
    2016-07-22  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71964
            * include/bits/stl_tree.h (_Rb_tree(_Rb_tree&&)): Move allocator.
            * testsuite/23_containers/set/allocator/71964.cc: New test.
    
    From-SVN: r239201

commit 71f570349ac6dbadc2dacf00b98cb0659c42932d
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:35 2016 +0100

    Fix std::wstring allocator tests
    
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy.cc:
            Remove reundant check for _GLIBCXX_USE_WCHAR_T and fix char type.
            * testsuite/21_strings/basic_string/allocator/wchar_t/copy_assign.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/minimal.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/move_assign.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/noexcept.cc:
            Likewise.
            * testsuite/21_strings/basic_string/allocator/wchar_t/swap.cc:
            Likewise.
    
    From-SVN: r239200

commit aa19631b473b04e5b16a26b49ef760121e2dbc0b
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:31 2016 +0100

    libstdc++/70940 Start fixing polymorphic memory resources
    
    Backport from mainline
    2016-05-04  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70940
            * include/experimental/memory_resource
            (__resource_adaptor_imp::do_allocate): Do not default-construct
            rebound allocator.
            (__resource_adaptor_imp::do_deallocate): Likewise. Use
            allocator_traits to get pointer type.
            (__null_memory_resource::do_allocate): Remove unused parameters.
            (__null_memory_resource::do_deallocate): Likewise.
            (__null_memory_resource::do_is_equal): Likewise. Add return statement.
            * testsuite/experimental/type_erased_allocator/1.cc: Combine with ...
            * testsuite/experimental/type_erased_allocator/1_neg.cc: This, and
            move to ...
            * testsuite/experimental/memory_resource/1.cc: Here.
            * testsuite/experimental/memory_resource/null_memory_resource.cc: New.
            * testsuite/experimental/memory_resource/resource_adaptor.cc: New.
    
    From-SVN: r239199

commit 81df2a58c7a0f5586af2f7164a42e505259b6da9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:26 2016 +0100

    Define C++17 feature-test macros
    
    Backport from mainline
    2016-08-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/allocator.h (__cpp_lib_incomplete_container_elements):
            Define feature-test macro.
            * include/std/shared_mutex (__cpp_lib_shared_mutex): Uncomment.
            * include/std/type_traits (__cpp_lib_logical_traits): Fix value.
    
    From-SVN: r239198

commit 7f59177a0f0c48e62e8b4d5d77292db0113e57dc
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:22 2016 +0100

    Define __cpp_lib_generic_associative_lookup feature-test macro
    
    Backport from mainline
    2016-08-03  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/bits/stl_function.h: Remove commented-out macro.
            * include/bits/stl_tree.h (__cpp_lib_generic_associative_lookup):
            Define feature-test macro.
            * testsuite/experimental/feat-cxx14.cc: Add tests for more macros.
    
    From-SVN: r239197

commit 2e520ffa744db0de432bbbdb4c666c450b8fcd98
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:18 2016 +0100

    Improve comments on check_v3_target_filesystem_ts
    
            * testsuite/lib/libstdc++.exp (check_v3_target_filesystem_ts): Improve
            comments.
    
    From-SVN: r239196

commit 9a5c3329b1e31e26cb444ea56d69aeccdc559d42
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:14 2016 +0100

    Change libstdc++ manual to refer to release not trunk
    
            * doc/xml/manual/status_cxx2011.xml: Change "mainline GCC SVN" to
            refer to the release series.
            * doc/xml/manual/status_cxx2014.xml: Likewise. Update TS status.
            * doc/xml/manual/status_cxx2017.xml: Likewise.
            * doc/html/manual/status.html: Regenerate.
    
    From-SVN: r239195

commit 4bb1acb34af4fc0c4d221ca0bf4a855139ff4360
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Sat Aug 6 13:20:10 2016 +0100

    Fix naming, qualification and broken test for propagate_const
    
            * include/experimental/propagate_const (propagate_const::__t): Rename
            to _M_t and remove comment. Qualify std::move and std::forward.
            * testsuite/experimental/propagate_const/cons/default.cc: Fix test.
    
    From-SVN: r239194

commit 81450383f0120ef3dab4624e63d1516e360b9d8a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Aug 6 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r239187

commit e61408921444127d205507a11adfaa98a9ddd384
Author: Nathan Sidwell <nathan@acm.org>
Date:   Fri Aug 5 20:04:27 2016 +0000

    re PR c++/68724 (ice in unify, at cp/pt.c:19902)
    
            PR c++/68724
            * pt.c (unify): TRAIT_EXPR is an expr.
    
            PR c++/68724
            * g++.dg/cpp0x/pr68724.C: New.
    
    From-SVN: r239178

commit 2e6d853d77695bcc10d210411a9dfcb6916d32e4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Aug 5 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239159

commit bb7fa31515d186bcc327e71b4dcb25d83c4c3476
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Aug 4 21:25:05 2016 +0000

    backport: re PR target/71869 (__builtin_isgreater raises an invalid exception on PPC64 using __float128 inputs.)
    
    [gcc]
    2016-08-04  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from trunk
            2016-07-26  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71869
            * config/rs6000/rs6000.c (rs6000_generate_compare): Rework
            __float128 support when we don't have hardware support, so that
            the IEEE built-in functions like isgreater, first call __unordkf3
            to make sure neither operand is a NaN, and if both operands are
            ordered, do the normal comparison.
    
    [gcc/testsuite]
    2016-08-04  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Backport from trunk
            2016-07-26  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71869
            * gcc.target/powerpc/float128-cmp.c: New test to make sure that
            IEEE built-in functions handle quiet and signalling NaNs
            correctly.
    
    From-SVN: r239154

commit 9e219c431dd90054eaa042d5b2147d0252fb43a5
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Thu Aug 4 23:22:06 2016 +0200

    re PR target/72805 (AVX512: invalid code generation involving masks)
    
            PR target/72805
            * config/i386/avx512fintrin.h (_mm512_cmp_epi32_mask) [!__OPTIMIZE__]:
            Cast builtin function result to __mmask16 instead of __mmask8.
            (_mm512_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.
            (_mm512_mask_cmp_epi32_mask) [!__OPTIMIZE__]: Ditto.
            (_mm512_mask_cmp_epu32_mask) [!__OPTIMIZE__]: Ditto.
    
    From-SVN: r239153

commit 34b0b2725eafc0e09335d68ea6229e5a874f800a
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Aug 4 12:06:59 2016 -0400

    PR c++/72415 - member template with fold-expression constraint
    
            * pt.c (tsubst_pack_expansion): Pull a single pack expansion out
            of the TREE_VEC.
    
    From-SVN: r239139

commit 2dfd63b3d5da74ecd8181b79652eb953bcf14893
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Aug 4 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r239111

commit b793a51e8a430193114f5dbbe6126c95b17dcd6c
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Wed Aug 3 15:46:11 2016 +0000

    re PR target/70677 (Suboptimal cond on AVR: unneeded stack frame)
    
            PR 70677
            * common/config/avr/avr-common.c (avr_option_optimization_table)
            [OPT_LEVELS_ALL]: Turn off -fcaller-saves.
    
    From-SVN: r239080

commit 4e9a0a23b7ddbbf558e24d6c105d616d8d9fe06a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Aug 3 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r239007

commit 779f66bb7a39f6eaf5b4b1580340ad106cf76223
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Aug 2 10:53:24 2016 +0100

    Support using -flto with libstdc++ testsuite
    
            * testsuite/lib/libstdc++.exp (v3-build_support): Add -fno-lto
            to additional flags for compiling libtestc++.a objects.
    
    From-SVN: r238979

commit 8b0d7599964265ece5ef4d16e0ad932835776c65
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Aug 2 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238975

commit 9f38930adfc0d329877ac62aef07f73429fa0c58
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 1 12:40:41 2016 +0000

    backport: re PR target/72767 ([avr] Some branches report too small insn length)
    
            Backport from 2016-08-01 trunk r238948.
            PR target/72767
            * config/avr/avr.md (length) [branch]: Correct insn length
            attribute for forward branches.
    
    From-SVN: r238949

commit 66d90863afbf7a787c50934d84688f23163cf465
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Aug 1 09:15:24 2016 +0000

    backport: re PR target/71151 ([avr] -fmerge-constants and -fdata-sections/-ffunction-sections results in string constants in .progmem.gcc_sw section)
    
    gcc/
            Backport from 2016-06-16 trunk r237536.
            2016-06-16  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
            PR target/71151
            * config/avr/avr.c (avr_asm_init_sections): Remove setup of
            progmem_swtable_section.
            (progmem_swtable_section): Remove.
            (avr_asm_function_rodata_section): Remove.
            (TARGET_ASM_FUNCTION_RODATA_SECTION): Remove.
            * config/avr/avr.h (JUMP_TABLES_IN_TEXT_SECTION): Define to 1.
    
    testsuite/
            Backport from 2016-06-16 trunk r237536, r237910.
            2016-06-16  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
            PR target/71151
            * gcc.target/avr/pr71151-1.c: New test.
            * gcc.target/avr/pr71151-2.c: New test.
            * gcc.target/avr/pr71151-3.c: New test.
            * gcc.target/avr/pr71151-4.c: New test.
            * gcc.target/avr/pr71151-5.c: New test.
            * gcc.target/avr/pr71151-6.c: New test.
            * gcc.target/avr/pr71151-7.c: New test.
            * gcc.target/avr/pr71151-8.c: New test.
            * gcc.target/avr/pr71151-common.h: New file.
    
    From-SVN: r238935

commit 3ef0a133abb8d0b392dca44cbd8ef382063766eb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Aug 1 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238932

commit 0fe66f0019084f28ca913016e7150939187ab4ae
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun Jul 31 14:35:38 2016 +0000

    backport: divkc3-1.c: Require POWER8 hardware.
    
    2016-07-31  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-31  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/divkc3-1.c: Require POWER8 hardware.
            * gcc.target/powerpc/mulkc3-1.c: Likewise.
    
    From-SVN: r238920

commit 25399a2d89a97d626c87b363c94aec4acc1e24db
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 31 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238913

commit 3b194715c357d7075508ce7471cd6f293fca293f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 30 00:16:11 2016 +0000

    Daily bump.
    
    From-SVN: r238901

commit 5e93466a1ff48c5ad3e175904a6df4c883b9d70d
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jul 29 20:18:03 2016 +0000

    backport: _divkc3.c: Add copyright/license boilerplate.
    
    2016-07-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/_divkc3.c: Add copyright/license boilerplate.
            * config/rs6000/_mulkc3.c: Likewise.
    
    From-SVN: r238895

commit 7deb2207c2df972d9d0ee152ce4e575ed24f4805
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Jul 29 10:08:03 2016 -0400

    PR c++/72457 - ICE with list-value-initialized base.
    
            * init.c (expand_aggr_init_1): Only handle value-init of bases.
            * constexpr.c (build_data_member_initialization): Handle multiple
            initializers for the same field.
    
    From-SVN: r238868

commit 9b30016838e68afa365c130f5a2c7f3cb5728842
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jul 29 12:41:46 2016 +0000

    i386.c (ix86_expand_args_builtin): Add break.
    
            * config/i386/i386.c (ix86_expand_args_builtin): Add break.
            (ix86_expand_round_builtin): Likewise.
    
    From-SVN: r238865

commit bbcfbbb476bc789e790b4e35b2a25ff6c80ebdf9
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri Jul 29 11:22:42 2016 +0000

    re PR c/7652 (-Wswitch-break : Warn if a switch case falls through)
    
            PR c/7652
            * config/rs6000/rs6000.c (altivec_expand_ld_builtin): Likewise.
            (altivec_expand_st_builtin): Likewise.
    
    From-SVN: r238857

commit 74758a26215b71bedd67e28a87085a787c7c6cca
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jul 29 11:53:24 2016 +0100

    Update libstdc++ docs for library version history
    
            * doc/xml/manual/abi.xml: Document 6.0.22 library version.
            * doc/html/manual/abi.html: Regenerate.
    
    From-SVN: r238854

commit 83b02a97e1356eb636eb5ab2e157eeb749642bb2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 29 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r238844

commit 1e779a9a57eb76b8607d6c318459b3b0b2e4a677
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Thu Jul 28 21:21:49 2016 +0000

    [multiple changes]
    
    2016-07-28  Steven G. Kargl  <kargl@gcc.gnu.org>
                Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            PR fortran/71883
            * frontend-passes.c (gfc_run_passes): Bail out if there are any
            errors.
            * error.c (gfc_internal_error): If there are any errors in the
            buffer, exit with EXIT_FAILURE.
    
    2016-07-28  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/71883
            * gfortran.dg/pr71883.f90 : New test.
    
    From-SVN: r238841

commit 2c12aa093698edb15e20974de5804b3d548d0c78
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Jul 28 22:15:41 2016 +0100

    * sv.po: Update.
    
    From-SVN: r238840

commit 0ac8acf65cd5b99551f43cca6497a9d0da08c736
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 28 00:16:10 2016 +0000

    Daily bump.
    
    From-SVN: r238805

commit 528f961124c6a34b8ccda9928db5182195a83524
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Wed Jul 27 18:12:05 2016 +0200

    rs6000: Fix logic for when to emit .machine (PR71216)
    
    The current logic determining whether to use .machine in the generated
    asm code puts it there if the compiler is not configured with a default
    target cpu, _or_ no -mcpu= was given on the command line.  It should
    be "and" instead.
    
    
            PR target/71216
            * config/rs6000/rs6000.c (rs6000_file_start): Fix condition for
            when to emit a ".machine" pseudo-op.
    
    From-SVN: r238788

commit 551aad2fe0ee9f4ec909d41726cd7714f4ca0dad
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 27 00:16:09 2016 +0000

    Daily bump.
    
    From-SVN: r238777

commit e50ce400a2d46fc88414dcc157057b74b7cfa6f6
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jul 26 17:50:51 2016 +0000

    backport: pr63354.c: Require lp64 since -mprofile-kernel is not legal with -m32.
    
    2016-07-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/pr63354.c: Require lp64 since
            -mprofile-kernel is not legal with -m32.
    
    From-SVN: r238764

commit 1255787aa7ab3a966f1fc9f7c6a17a0e77079c37
Author: Alan Modra <amodra@gmail.com>
Date:   Tue Jul 26 19:58:59 2016 +0930

    [RS6000] push_secondary_reload ICE
    
            PR target/72103
            * config/rs6000/rs6000.c (rs6000_secondary_reload): Initialize
            sri->t_icode.
    
    From-SVN: r238745

commit 5d88ca9288b546631b61860116f019c7a539bad0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 26 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r238740

commit 1247911653c3319436a36460cfc15a7266f68190
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jul 25 17:14:20 2016 -0400

    PR c++/71576 - bitfield and rvalue reference
    
            * call.c (convert_like_real): Use lvalue_kind.
    
    From-SVN: r238736

commit 3ebb0689f6e9e803c75a27f2124dc1630525bcb4
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Jul 25 15:17:43 2016 -0400

    PR c++/71833 - member template with two parameter packs
    
            * pt.c (coerce_template_parameter_pack): Fix logic for
            pack index.
    
    From-SVN: r238734

commit c620ad72be850dadc3d0a668a94d3a55bd34a138
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 25 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238699

commit 657cd3e694d06cb542ab50d740131741817fd6ba
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 23:05:46 2016 -0400

    PR c++/55922 - list-value-initialization of base
    
            PR c++/63151
            * init.c (expand_aggr_init_1): Handle list-initialization from {}.
    
    From-SVN: r238694

commit 581cb17172c339bc9279127aa024dee13d780f8f
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 23:05:36 2016 -0400

    PR c++/70709 - zero-length array member
    
            * class.c (walk_subobject_offsets): Handle 0-length array.
    
    From-SVN: r238693

commit b27160a273a3a468cbbd9bc61f1092737b9a50ca
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 23:04:52 2016 -0400

    PR c++/70778 - member template template parameter
    
            * pt.c (tsubst): Also substitute into the template of a
            BOUND_TEMPLATE_TEMPLATE_PARM.
    
    From-SVN: r238692

commit 82beb671375435018353f2da4965b6c77160e708
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 23:04:31 2016 -0400

    PR c++/71738 - nested template friend
    
            * pt.c (lookup_template_class_1): Handle getting template from tsubst.
    
    From-SVN: r238691

commit adb2ca0468b7bd578036cb28036c51f08f42f534
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 23:04:05 2016 -0400

    PR c++/71350 - error recursion with initializer-list
    
            * decl.c (reshape_init_r): Check complain for missing braces warning.
    
    From-SVN: r238690

commit c243b00fa5b2c2c58f20644729f003a15fb16bdf
Author: Jason Merrill <jason@redhat.com>
Date:   Sat Jul 23 22:20:17 2016 -0400

    PR c++/71748 - call to base destructor in template.
    
            PR c++/52746
            * pt.c (tsubst_baselink): Call
            adjust_result_of_qualified_name_lookup for unqualified
            destructors.
    
    From-SVN: r238682

commit c79e195ce355a1ad506a4a272ebe010974f44b12
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 24 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r238679

commit dc977baf88aabdd406491afab58995740c3a9607
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 23 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238673

commit 812b49ee529e8e993ba3d8ed050fdd6feb3a7eba
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Fri Jul 22 17:14:53 2016 +0200

    backport: re PR fortran/71807 (Internal compiler error with NULL() reference in structure constructor)
    
    gcc/fortran/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backported from trunk:
            PR fortran/71807
            * trans-expr.c (gfc_trans_subcomponent_assign): Special casing
            when allocatable component is set to null() in initializer.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backported from trunk:
            PR fortran/71807
            * gfortran.dg/null_9.f90: New test.
    
    From-SVN: r238649

commit d79bc72a43733bfe88061fda69e3b3219224f1e3
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Fri Jul 22 15:15:31 2016 +0200

    backport: re PR fortran/70842 (internal compiler error with character members within a polymorphic pointer)
    
    gcc/testsuite/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70842
            * gfortran.dg/select_type_35.f03: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-07-22  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/70842
            * simplify.c (gfc_simplify_len): Only for unlimited polymorphic
            types replace the expression's _data ref with a _len ref.
    
    From-SVN: r238640

commit 4faa0a21eebebae46e758b7c37c9c60b9bf1f85e
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:46:54 2016 -0400

    PR c++/69223 - ICE with deduced template return type.
    
            * semantics.c (apply_deduced_return_type): Call
            complete_type_or_else before building the new RESULT_DECL.
    
    From-SVN: r238627

commit e245d0f158c2eb8fd741553836e1b6a8e4e82afb
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:46:49 2016 -0400

    PR c++/71630 - extern variable template
    
            * pt.c (instantiate_decl): Fix pattern_defined for namespace scope
            variable templates.
    
    From-SVN: r238626

commit c1d0f75e42b2516a322475f6333dcd14d76d0eb1
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 23:46:41 2016 -0400

    PR c++/71913 - missing copy elision with new.
    
            * call.c (unsafe_copy_elision_p): It's OK to elide when
            initializing an unknown object.
    
    From-SVN: r238625

commit f6a4d0c938282a55fcdad489a090c5228db48535
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 22 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238616

commit 174af60335b9844dc35bc87f0314298b32942435
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 21 20:24:48 2016 +0200

    re PR c++/71728 (ICE with goto in statement-expression inside a condition)
    
            PR c++/71728
            * constexpr.c (potential_constant_expression_1) <case GOTO_EXPR>:
            Replace assert with test, return false if the goto isn't break
            or continue.  Formatting fix.
    
            * g++.dg/other/pr71728.C: New test.
    
    From-SVN: r238602

commit 8691d1fd5dca57521f12d89937dcc1f9ae1717a6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 21 18:18:46 2016 +0200

    re PR sanitizer/71953 (ICE using address sanitizers with PCH)
    
            PR sanitizer/71953
            * asan.c (asan_dynamic_init_call): Call asan_init_shadow_ptr_types
            before builtin_decl_implicit.
    
    From-SVN: r238597

commit ba8eae01f27f060b328d1091f54b958b0f98cd9b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 21 09:49:15 2016 +0200

    * tree-object-size.c (unknown): Use HOST_WIDE_INT_M1U instead of -1.
    
    From-SVN: r238582

commit 692fabb7d4565484275248ee38d151a66892bff4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jul 21 09:13:42 2016 +0200

    re PR libgomp/71941 (ICE with OpenMP tasks and queue)
    
            PR c++/71941
            * cp-gimplify.c (cp_genericize): For nested cp_genericize calls
            save/restore bc_label array.
    
            * g++.dg/gomp/pr71941.C: New test.
    
    From-SVN: r238580

commit 2d7c3319c0be72e703d3aa97d805371d55a320e6
Author: Patrick Palka <ppalka@gcc.gnu.org>
Date:   Thu Jul 21 06:29:32 2016 +0000

    Fix PR c++/70822 (bogus error with parenthesized SCOPE_REF)
    
    gcc/cp/ChangeLog:
    
            PR c++/70822
            PR c++/70106
            * cp-tree.h (REF_PARENTHESIZED_P): Make this flag apply to
            SCOPE_REFs too.
            * pt.c (tsubst_qualified_id): If REF_PARENTHESIZED_P is set
            on the qualified_id then propagate it to the resulting
            expression.
            (do_auto_deduction): Check REF_PARENTHESIZED_P on SCOPE_REFs
            too.
            * semantics.c (force_paren_expr): If given a SCOPE_REF, just set
            its REF_PARENTHESIZED_P flag.
    
    gcc/testsuite/ChangeLog:
    
            PR c++/70822
            PR c++/70106
            * g++.dg/cpp1y/auto-fn32.C: New test.
            * g++.dg/cpp1y/paren4.C: New test.
    
    From-SVN: r238578

commit a8a59fb505fea7c3a8282f2e2127d995bce41ec3
Author: Andrew Sutton <andrew.n.sutton@gmail.com>
Date:   Thu Jul 21 06:18:06 2016 +0000

    Improving concepts performance and diagnostics.
    
            PR c++/67565
            PR c++/67579
            PR c++/71843
    gcc/
            * timevar.def (TV_CONSTRAINT_SAT, TV_CONSTRAINT_SUB): New time vars
            for constraint satisfaction and subsumption.
            * timevar.h (auto_timevar): New constructor that matches the push/pop
            pattern of usage in pt.c.
    gcc/cp/
            * cp-tree.def (CHECK_CONSTR): New.
            * cp-tree.h (CHECK_CONSTR_CONCEPT): New.
            (CHECK_CONSTR_ARGS): New.
            * constraint.cc (make_predicate_constraint): Remove in favor of
            normalize_expression.
            (resolve_constraint_check): Actually return error_mark_node when
            resolution fails.
            (resolve_variable_concept_check): Perform coercion as if processing
            a template. Also return errors on resolution failure.
            (lift_*): Remove all of these functions. Don't unnecessarily inline
            concepts.
            (learn_*): Add facilities to memoize implications for subsumption
            during normalization.
            (expanding_concept): New.
            (expand_concept): New. Return the inlined and normalized definition
            of a concept when needed.
            (transform_*, xform_*): Rename to normalize_* to better reflect the
            responsibility of those functions.
            (normalize_template_id_expression): Check for non-boolean operands
            when possible. Generate check constraints instead of normal variable
            references.
            (normalize_call_expression): Report errors when resolution fails.
            (check_for_logical_overloads): Rewrite this check to more accurately
            report the error.
            (normalize_atom): Check for overloaded calls and invalid types before
            determining if the expression refers to a concept.
            (build_constraints): Don't cache normalized constraints or decmposed
            assumptions.
            (finish_shorthand_constraint): Return a normalized expression instead
            of a predicate constraint.
            (finish_template_introduction): Same.
            (placeholder_extract_concept_and_args): Rewrite this since we only
            ever get check constraints here.
            (equivalent_placeholder_constraints): Rewrite in terms of check
            constraints, and handle error_mark_nodes correctly.
            (tsubst_check_constraint, tsubst_expr_constr, tsubst_type_constr)
            (tsubst_implicit_conversion_constr)
            (tsubst_argument_deduction_constr, tsubst_exception_constr)
            (tsubst_parameterized_constraint, tsubst_constraint): New.
            (tsbust_conjunection): Replace with tsubst_logical_operator and
            actually generate the right kind of constraint.
            (tsubst_requirement_body): Reverse the order of substituted arguments
            so that they appear in the order written (helps diagnostics).
            (satisfy_check_constraint): New.
            (satisfy_conjunction): Simplify.
            (satisfy_disjunction): Same.
            (satisfy_constraint_1): Handle check constraints.
            (eval_constr): New (private) global state.
            (evaluating_constraints_sentinel): New. Manages eval_constr.
            (satisfy_constraint): Add timing variables.
            (satisfy_associated_constraints): Add hooks for memoization.
            (evaluate_function_concept): Build a check constraint instead of
            normalizing its definition.
            (evaluate_variable_concept): Same.
            (evaluate_constraint_expression): Normalize, but in the current
            declaration processing context.
            (evaluating_constraints_p): New.
            (elide_constraint_failure_p): Actually emit constraint_thresh errors.
            (diagnose_*): Remove artificial indentation. Add a new parameter to
            each that tracks the current (complete) constraint prior to any
            substitutions.
            (diagnose_expression): Removed.
            (diagnose_call_expression): Same.
            (diagnose_template_id): Same.
            (diagnose_template_id): New.
            (diagnose_logical_constraint): New.
            (diagnose_expression_constraint): Show the original expression.
            (diagnose_type_constraint): Show the original type.
            (diagnose_implicit_conversion_constraint): Be specific about
            failures, don't re-diagnose a known-to-be-failed substitutions,
            and manage elisions properly.
            (diagnose_argument_deduction_constraint): Same.
            (diagnose_exception_constraint): Same.
            (diagnose_parameterized_constraint): Same.
            (constraint_p): Allow EXPR_PACK_EXPANSION.
            * logic.cc (next_by_distance): Removed. No longer used.
            (any_p): Renamed from any_of.
            (term_entry, term_hasher): New.
            (term_list): Rewrite to include a hash table for quick lookup.
            Also, make less stateful.
            (proof_state): Extend to allow goals to be discharged once
            satisfied.
            (non_atomic_constraint_p): New.
            (any_non_atomic_constraints_p): New.
            (...rest...): Previous implementation completely replaced with an
            iterative algorithm that opportunistically prunes the search space
            before committing to using more memory.
            * parser.c: (cp_parser_type_parameter): Normalize constraints.
            (cp_parser_explicit_template_declaration): Same.
            * pt.c: (finish_template_variable): Be less redundant with this error
            message.
            (template_args_equal): No longer static.
            (tsubst_decl): Don't try to find specializations of variables that
            have already been instantiated.
            (build_non_dependent_expr): Avoid infinite recursion during concept
            expansion.
            (make_constrained_auto): Normalize constraints.
            (do_auto_deduction): When doing auto deduction from a
            partial-concept-id, be sure to include the explicit args checking
            the constraints.
            (constraint_sat_*): New. Memoize satisfied constraints.
            (concept_spec_*): New. Memoize expressions associated with a concept
            specialization.
            (constraint_memos, concept_memos): New.
            (lookup_constraint_satisfaction, memoize_constraint_satisfaction): New.
            (lookup_concept_satisfaction, memoize_concept_satisfaction): New.
            (get_concept_expansion, save_concept_expansion): New.
            (hash_subsumption_args): New.
            (comp_subsumption_args): New.
            (subsumption_*): New. Memoize parts of the subsumption relation.
            (lookup_subsumption_result, save_subsumption_result): New.
            (init_constraint_processing): Initialize memo tables.
            (get_constraints): Shortcut if !flag_concepts.
            * decl.c (grokfndecl): Normalize constraints.
            * error.c (dump_simple_decl): Print "concept" when appropriate.
            (dump_function_decl): Same.
            (dump_template_decl): Don't write requirements when we're not
            printing the header.
            (dump_expr): Handle fold expressions.
            * cxx-pretty-print.c (cxx_pretty_printer::expression): Handle
            fold expressions.
            (get_fold_operator): New.
            (pp_cxx_unary_left_fold_expression): New.
            (pp_cxx_unary_right_fold_expression): New.
            (pp_cxx_binary_fold_expression): New.
            (pp_cxx_check_constraint): New.
            (pp_cxx_*_constraint): Rewrite the grammar of internal constraints
            to make them easier to read when debugging.
            * search.c (accessible_p): Don't shortcut when evaluating constraints.
            * tree.c (cp_tree_equal): Handle CHECK_CONSTR.
    
    Co-Authored-By: Jason Merrill <jason@redhat.com>
    
    From-SVN: r238577

commit 69f5601c062145ba33c8610de2c192fe75eace92
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:16:30 2016 -0400

    PR c++/70781 - ICE on ill-formed lambda.
    
            * parser.c (cp_parser_lambda_expression): Unset OK if there was an
            error parsing the lambda-declarator.
    
    From-SVN: r238576

commit 7736edb0da91728f11735c8d75ee8ab4c6a0570f
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:16:24 2016 -0400

    PR c++/71896 - constexpr pointer-to-member comparison.
    
            * constexpr.c (cxx_eval_binary_expression): Handle comparison
            between lowered and unlowered PTRMEM_CST.
    
    From-SVN: r238575

commit dea759b9601adb92d83ab5029da227af5c73af87
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:16:17 2016 -0400

    PR c++/71092 - ICE with array and constexpr.
    
            * constexpr.c (cxx_eval_call_expression): Fail quietly when cgraph
            threw away DECL_SAVED_TREE.
    
    From-SVN: r238574

commit 37114a39681f3263fa39a236cffc0618b44f6b93
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:16:11 2016 -0400

    PR c++/71117 - core 2189 and generic lambda
    
            * call.c (add_template_conv_candidate): Disable if there are
            viable candidates.
    
    From-SVN: r238573

commit 905bec24076a705f930f78dc171cb7259ea963d6
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:16:04 2016 -0400

    PR c++/71495 - spurious note during SFINAE.
    
            * call.c (convert_like_real): Mask complain.
    
    From-SVN: r238572

commit 06e76c1747bc7dc2f504b0f2ec47314d590cde42
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:15:58 2016 -0400

    PR c++/71511 - ICE on decltype scope in declaration.
    
            * typeck2.c (cxx_incomplete_type_diagnostic): Handle DECLTYPE_TYPE.
    
    From-SVN: r238571

commit ea6240e2096acea0f1686ac7265626edb597c7f6
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:15:51 2016 -0400

    PR c++/71513 - alignas on member enum in template
    
            * pt.c (tsubst_attributes): Fix loop logic.
    
    From-SVN: r238570

commit 38ca8c8602b28987de0a877c30233436185b1edb
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:15:43 2016 -0400

    PR c++/71604 - type definition in range-based for
    
            PR c++/54430
            * parser.c (cp_parser_range_for): Modify IDENTIFIER_BINDING directly.
            (cp_parser_simple_declaration): Diagnose type definition in
            for-range-declaration.
    
    From-SVN: r238569

commit c4434d51da5d46e8307fcc7e0af1a1b17090afad
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:15:23 2016 -0400

    PR c++/71711 - mangle C++1z fold-expressions.
    
    gcc/cp/
            * operators.def: Add *_FOLD_EXPR.
            * cp-tree.h (FOLD_EXPR_P): Parenthesize.
            * mangle.c (write_expression): Handle fold-expressions.
            * pt.c (tsubst_unary_left_fold, tsubst_binary_left_fold)
            (tsubst_unary_right_fold, tsubst_binary_right_fold): Handle
            partial instantiation.
    libiberty/
            * cp-demangle.c (cplus_demangle_operators): Add f[lrLR].
            (d_expression_1): Handle them.
            (d_maybe_print_fold_expression): New.
            (d_print_comp_inner): Use it.
            (d_index_template_argument): Handle negative index.
    
    From-SVN: r238568

commit 14095bf9cbeb7e190c9201b7ef3304547edd9a92
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:15:04 2016 -0400

    PR c++/71814 - mangling sizeof... with alias templates (sP)
    
    gcc/cp/
            * mangle.c (write_expression): Handle sizeof... an argument pack.
    libiberty/
            * cp-demangle.c (cplus_demangle_operators): Add sP and sZ.
            (d_print_comp_inner): Handle them.
            (d_template_args_1): Split out from d_template_args.
            (d_args_length): New.
    
    From-SVN: r238567

commit 455c39384ecb12274ffd4df5566a1e06bf3a9aa8
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:14:57 2016 -0400

    PR c++/71718 - infinite recursion and alias template
    
            * pt.c (push_tinst_level_loc): Set at_eof before fatal_error.
    
    From-SVN: r238566

commit 9f954d964f7927da5da4915ad5cbfdfb82130228
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:14:51 2016 -0400

    PR c++/70824 - initializer_list in template
    
            * init.c (constant_value_1): Don't instantiated DECL_INITIAL of
            artificial variables.
    
    From-SVN: r238565

commit 8b3f3aeab48397aed2c4066f7da35bb531427b04
Author: Jason Merrill <jason@redhat.com>
Date:   Thu Jul 21 02:12:56 2016 -0400

    * lambda.c (maybe_add_lambda_conv_op): Fix null object argument.
    
    From-SVN: r238564

commit 83f89d715f4503995c57477001f8b2672500913a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 21 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r238556

commit 347fd3b38139a3fe56ab743ad72567e69b5957f2
Author: John David Anglin <danglin@gcc.gnu.org>
Date:   Wed Jul 20 22:35:50 2016 +0000

    backport: pa.c (hppa_profile_hook): Allocate stack space for register parameters.
    
            Backport from mainline
            2016-07-16  John David Anglin  <danglin@gcc.gnu.org>
    
            * config/pa/pa.c (hppa_profile_hook): Allocate stack space for
            register parameters.  Remove code to initialize argument pointer
            on TARGET_64BIT.  Optimize call to _mcount when it can be reached
            using a pc-relative branch.  Cleanup conditional code.
            * config/pa/pa.md (call_mcount): New expander.
            (call_mcount_nonpic): New insn.
            (call_mcount_pic): New insn and split.
            (call_mcount_pic_post_reload): New insn.
            (call_mcount_64bit): New insn and split.
            (call_mcount_64bit_post_reload): New insn.
    
    From-SVN: r238549

commit 474cf3c7a270d7aa6278535d03a706f15fc960ff
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Wed Jul 20 18:35:04 2016 +0000

    S/390: Remove mode size check in encode_section_info.
    
    With the last change the not-aligned symbol ref markers are always set
    for modes with size zero.  This is wrong since for larl the size of
    the access does not matter.  This patch removes that check entirely
    from s390_encode_section_info.  Modes with a size of 0 get rejected in
    s390_check_symref_alignment which is used for the load/store relative
    instructions to check for natural alignment.
    
    Bootstrapped and regression tested on s390 and s390x with
    --with-arch=z900 and --with-arch=z13.
    
    gcc/ChangeLog:
    
    2016-07-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_encode_section_info): Remove mode size
            check.
    
    From-SVN: r238537

commit 53e93563999dbbed26e0fe1febce0eecaf7955a5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jul 20 16:05:00 2016 +0200

    re PR c++/71909 (g++ accepts an unreachable function catch block that lacks a corresponding try)
    
            PR c++/71909
            * parser.c (cp_parser_save_member_function_body): Consume
            __transaction_relaxed or __transaction_atomic with optional
            attribute.  Only skip catch with block if try keyword is seen.
    
            * g++.dg/parse/pr71909.C: New test.
            * g++.dg/tm/pr71909.C: New test.
    
    From-SVN: r238523

commit 82430957e1d795a0da1c70401719c4b5f0688e2b
Author: Martin Jambor <mjambor@suse.cz>
Date:   Wed Jul 20 15:24:19 2016 +0200

    re PR fortran/71688 (ICE in analyze, at cgraphunit.c:632 with -fcoarray=lib)
    
    Fix PR fortran/71688
    
    2016-07-20  Martin Jambor  <mjambor@suse.cz>
    
            PR fortran/71688
            * trans-decl.c (gfc_generate_function_code): Use get_create rather
            than create to get a call graph node.
    
    testsuite/
            gfortran.dg/pr71688.f90: New test.
    
    From-SVN: r238515

commit 975df550dd87e28345e6c798f4760536e82f707a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 20 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238505

commit 9317021bc9e5b2f0a3a24ba070b24e2441e4be80
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 19 23:16:35 2016 +0100

    Include header for std::__parallel::search
    
    Backport from mainline
    2016-07-14  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/functional: Include <parallel/algorithm> in
            Parallel Mode.
    
    From-SVN: r238500

commit 31533efb1c9a86dda3722476a76c38be91ce6834
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 19 23:16:31 2016 +0100

    Add header for std::search to testcase
    
    Backport from mainline
    2016-07-14  Jonathan Wakely  <jwakely@redhat.com>
    
            * testsuite/experimental/functional/searchers.cc: Include <algorithm>
            for std::search.
    
    From-SVN: r238499

commit 91ee88459bf07da138c8679e12ef8b8cc70e9954
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 19 23:16:23 2016 +0100

    Do not define _GLIBCXX_ASSERTIONS in Parallel Mode
    
            PR libstdc++/71856
            * include/bits/c++config (_GLIBCXX_ASSERTIONS): Define to 1 not empty.
            * include/parallel/balanced_quicksort.h: Include <unistd.h> for sleep.
            * include/parallel/compiletime_settings.h (_GLIBCXX_ASSERTIONS):
            Do not define here.
    
    From-SVN: r238498

commit 4911e5324d936bed6f9dc861915f6d3adb87d34c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 21:55:54 2016 +0200

    re PR rtl-optimization/71916 (ICE at -O3 on valid code on x86_64-linux-gnu in "maybe_record_trace_start")
    
            PR rtl-optimization/71916
            * cfgrtl.c (contains_no_active_insn_p): Return false also for
            bb which have a single succ fake edge.
    
            * gcc.c-torture/compile/pr71916.c: New test.
    
    From-SVN: r238491

commit ae78c67797f604fa07ad55e378c0ac89418b5815
Author: Aldy Hernandez <aldyh@redhat.com>
Date:   Tue Jul 19 19:31:24 2016 +0000

    re PR debug/71855 (duplicate unspecified_parameters DIE in DWARF for functions with variable arguments)
    
            PR debug/71855
            * dwarf2out.c (gen_subprogram_die): Only call
            gen_unspecified_parameters_die while dumping early dwarf.
    
    From-SVN: r238489

commit 2a0219b34bee163de988171b40f0d807d570a636
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 19:33:58 2016 +0200

    re PR middle-end/71874 (memmove works wrong)
    
            PR middle-end/71874
            * gimple-fold.c (fold_builtin_memory_op): Use
            get_addr_base_and_unit_offset instead of get_ref_base_and_extent.
    
            * g++.dg/torture/pr71874.C: New test.
    
    From-SVN: r238485

commit 44ac0c116349475e94bbe398a5fb523191d05842
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Jul 19 17:34:23 2016 +0100

    libstdc++/71320 Add or remove file permissions correctly
    
    Backport from mainline
    2016-06-06  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71320
            * src/filesystem/ops.cc (permissions(const path&, perms, error_code&)):
            Add or remove permissions according to perms argument.
            * testsuite/experimental/filesystem/operations/permissions.cc: New
            test.
    
    From-SVN: r238480

commit cb9be1c0165e43e834f0458244ae7f8515b08f86
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 10:46:26 2016 +0200

    backport: re PR c++/71835 (ICE on invalid C++ code with ambiguous overloaded operators: tree check: expected tree that contains ‘decl minimal’ structure, have ‘pointer_type’ in convert_like_real, at cp/call.c:6549)
    
            Backported from mainline
            2016-07-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71835
            * call.c (build_op_call_1): Use convert_like_with_context only
            if cand->fn is a decl.
    
            * g++.dg/conversion/ambig3.C: New test.
    
    From-SVN: r238461

commit a166774fb2609edb9646e6c5ab5c36ab422a06ce
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 10:44:04 2016 +0200

    backport: re PR c++/71828 (ICE on valid C++11 code with constexpr __Complex int variable declaration: in operand_equal_p, at fold-const.c:2790)
    
            Backported from mainline
            2016-07-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71828
            * constexpr.c (cxx_eval_constant_expression) <case REALPART_EXPR>:
            For lval don't use cxx_eval_unary_expression and instead recurse
            and if needed rebuild the reference.
    
            * g++.dg/cpp0x/constexpr-71828.C: New test.
    
    From-SVN: r238460

commit 9bde0dddbde690741c4781d7b1f67a8f2bf972c7
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 10:42:12 2016 +0200

    backport: re PR c++/71822 (ICE: in gimplify_expr, at gimplify.c:11025)
    
            Backported from mainline
            2016-07-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71822
            * cp-gimplify.c (cp_gimplify_expr) <case VEC_INIT_EXPR>: Recursively
            fold *expr_p before genericizing it.
    
            * g++.dg/template/defarg21.C: New test.
    
    From-SVN: r238459

commit 5cae4327e4984174f2cbf0814010e06da5c4f47b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 10:40:37 2016 +0200

    backport: re PR c++/71871 (ICE on mixing templates and vector extensions ternary operator)
    
            Backported from mainline
            2016-07-18  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71871
            * typeck.c (build_x_conditional_expr): Revert the 2012-10-25 change.
    
            * g++.dg/ext/vector31.C: New test.
    
    From-SVN: r238458

commit ad2aeea3c576168dc14ee4b1af61ace4864062e2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jul 19 10:39:12 2016 +0200

    backport: re PR c++/70869 (internal compiler error: Segmentation fault on array of pointer to function members)
    
            Backported from mainline
            2016-07-07  Jakub Jelinek  <jakub@redhat.com>
                        Kai Tietz  <ktietz70@googlemail.com>
    
            PR c++/70869
            PR c++/71054
            * cp-gimplify.c (cp_genericize_r): For DECL_EXPR for non-static
            artificial vars, genericize their initializers.
    
            * g++.dg/cpp0x/pr70869.C: New test.
            * g++.dg/cpp0x/pr71054.C: New test.
    
    From-SVN: r238457

commit f2aa8902dc78560494fccdba768761909317e7c3
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jul 19 03:39:34 2016 +0000

    backport: re PR target/71493 (accidental ABI change for structure return on PowerPC)
    
    [gcc]
    2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71493
            * config/rs6000/rs6000.c (rs6000_function_value): Fix
            unintentional System V.4 structure return breakage for structures
            with a single floating point element.
    
    [gcc/testsuite]
    2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from mainline
            2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71493
            * gcc.target/powerpc/pr71493-1.c: New test.
            * gcc.target/powerpc/pr71493-2.c: Likewise.
    
    From-SVN: r238455

commit fc53c672f8edd497fca97d618f48e1acdf8442ef
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 19 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238452

commit 7dd7e496b6cd42b784a373561ebfc3b31bf6afb4
Author: Martin Liska <mliska@suse.cz>
Date:   Mon Jul 18 15:01:12 2016 +0200

    re PR rtl-optimization/71634 (Invalid write with in mark_loops_for_removal (ira-build.c:2256) with --param ira-max-loops-num=0)
    
    Fix PR rtl-optimization/71634
    
            Backported from mainline
            2016-07-12  Martin Liska  <mliska@suse.cz>
    
            * ira-build.c (mark_loops_for_removal): Properly iterate
            loops.
    
    From-SVN: r238431

commit ef2e69f7a15a3096f45f7f6b60c4effa63bc0241
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Mon Jul 18 10:52:23 2016 +0000

    S/390: Fix alignment check for literal pool references.
    
    gcc/ChangeLog:
    
    2016-07-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.c (s390_encode_section_info): Always set
            notaligned marker if mode size is 0 or no MEM_ALIGN info could be
            found.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-18  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * gcc.target/s390/nolrl-1.c: New test.
    
    From-SVN: r238428

commit 5b537f564cc59ade398889764332f43602d8b348
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 18 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238423

commit 1379791ae2af00b73056286303d83ccc2aa1bed4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 17 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r238418

commit 32beb2e73971be5c2ac9a2d6169f125d9f4494ba
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sat Jul 16 03:54:12 2016 +0000

    backport: re PR fortran/71764 (ICE in gfc_trans_structure_assign)
    
    2016-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71764
            * trans-expr.c (gfc_trans_structure_assign): Remove assert.
    
            * gfortran.dg/pr71764.f90: New test.
    
    From-SVN: r238410

commit eb4e923372dfdb92207f9b5c96d99e123dadbb59
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 16 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r238408

commit 165e7a396b1b3f18b0cd88ad5999384b20e56abc
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jul 15 20:58:23 2016 +0000

    backport: pr70098.C: Remove XFAIL for powerpc64_no_dm.
    
    2016-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * g++.dg/pr70098.C: Remove XFAIL for powerpc64_no_dm.
            * gcc.target/powerpc/pr71763.c: Likewise.
    
    From-SVN: r238403

commit f6c41b84fb4922a66ef764ae819eb961af9346d8
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jul 15 20:22:23 2016 +0000

    backport: divkc3-1.c: Require p8vector support.
    
    2016-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/divkc3-1.c: Require p8vector support.
            * gcc.target/powerpc/mulkc3-1.c: Likewise.
    
    From-SVN: r238401

commit 19ee6211cc7df53236e76ef24ebb20fc24cb2758
Author: Alan Modra <amodra@gmail.com>
Date:   Fri Jul 15 14:17:30 2016 +0930

    [RS6000] Don't allow combine to form doloop pattern
    
            * config/rs6000/rs6000.md (UNSPEC_DOLOOP): New unspec.
            (ctr<mode>): Add unspec.
            (ctr<mode>_internal*): Likewise.
    
    From-SVN: r238363

commit 351faae7f447a7ab308c9f8e3796e0b9156ac92d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 15 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r238361

commit 52b6934ac54f8ef50366c88c0cf6a4238ba9a4c3
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Jul 14 14:03:20 2016 +0000

    backport: _divkc3.c: New.
    
    [libgcc]
    
    2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/_divkc3.c: New.
            * config/rs6000/_mulkc3.c: New.
            * config/rs6000/quad-float128.h: Define TFtype; declare _mulkc3
            and _divkc3.
            * config/rs6000/t-float128: Add _mulkc3 and _divkc3 to
            fp128_ppc_funcs.
    
    [gcc/testsuite]
    
    2016-07-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-12  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/divkc3-1.c: New.
            * gcc.target/powerpc/mulkc3-1.c: New.
    
    From-SVN: r238338

commit 658d4de2f97679440eb5e4a410cbcec72e89224a
Author: Alan Modra <amodra@gmail.com>
Date:   Thu Jul 14 13:58:25 2016 +0930

    [RS6000] -mno-vsx should force -mno-power9-dform
    
            PR target/71733
    gcc/
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Deal
            with p9_vector override before power9-dform override.
    gcc/testsuite/
            * gcc.target/powerpc/p9-novsx.c: New.
    
    From-SVN: r238327

commit dc779ee0377146abd2614a2b66ddc62b3ce9427f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 14 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238318

commit 36b2ded51785e5ca9bf17e31743dd7b04a922746
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Wed Jul 13 18:09:57 2016 +0200

    backport: re PR fortran/71623 (Segfault when allocating deferred-length characters to size of a pointer)
    
    gcc/fortran/ChangeLog:
    
    2016-07-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71623
            * trans-stmt.c (gfc_trans_allocate): Add code of pre block of typespec
            in allocate to parent block.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-13  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71623
            * gfortran.dg/deferred_character_17.f90: New test.
    
    From-SVN: r238304

commit fcfd3036f1c5d0c2a0eab35fd3a6460fce6b94df
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Wed Jul 13 12:19:44 2016 +0000

    backport: re PR ipa/71624 ([CHKP] internal compiler error: in duplicate_thunk_for_node)
    
    gcc/
    
            Backport from mainline r238086.
            2016-07-07  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR ipa/71624
            * ipa-inline-analysis.c (compute_inline_parameters): Set
            local.can_change_signature to false for intrumentation
            thunk callees.
    
    gcc/testsuite/
    
            Backport from mainline r238086.
            2016-07-07  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR ipa/71624
            * g++.dg/pr71624.C: New test.
    
    From-SVN: r238295

commit d962c12f21ce440eabe7fdc7198c93f409e2fb63
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 13 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238276

commit 016b9471b1fa6f08f7ad910489084ccdedee2107
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jul 12 19:51:09 2016 +0000

    backport: rs6000-protos.h (rs6000_split_signbit): New prototype.
    
    [gcc]
    
    2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
                Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-protos.h (rs6000_split_signbit): New
            prototype.
            * config/rs6000/rs6000.c (rs6000_split_signbit): New function.
            * config/rs6000/rs6000.md (UNSPEC_SIGNBIT): New constant.
            (SIGNBIT): New mode iterator.
            (Fsignbit): New mode attribute.
            (signbit<mode>2): Change operand1 to match FLOAT128 instead of
            IBM128; dispatch to gen_signbit{kf,tf}2_dm for __float128
            when direct moves are available.
            (signbit<mode>2_dm): New define_insn_and_split).
            (signbit<mode>2_dm2): New define_insn.
    
    [gcc/testsuite]
    
    2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
                Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-05  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/signbit-1.c: New test.
            * gcc.target/powerpc/signbit-2.c: New test.
            * gcc.target/powerpc/signbit-3.c: New test.
    
    
    Co-Authored-By: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
    
    From-SVN: r238261

commit f304fdadfbb5cfaf1bd60c2e285e7749ff903666
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Tue Jul 12 18:12:11 2016 +0000

    backport: re PR target/71805 (incorrect code for test pr45752.c with -mcpu=power9)
    
    Backport from mainline
    
    [gcc]
    2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71805
            * config/rs6000/altivec.md (altivec_vperm_<mode>_internal):
            The xxperm and xxpermr instructions require that the 2nd input
            operand overlap with the output operand, and not the 1st.
            (altivec_vperm_v8hiv16qi): Likewise.
            (altivec_vperm_<mode>_uns_internal): Likewise.
            (altivec_vpermr_<mode>_internal): Likewise.
            (vperm_v8hiv4si): Likewise.
            (vperm_v16qiv8hi): Likewise.
    
    [gcc/testsuite]
    2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71805
            * gcc.target/powerpc/pr71805.c: New test.
    
    From-SVN: r238258

commit b6134bf7b731a87e21bf035c3ae8c7e48a085a7d
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Tue Jul 12 17:10:08 2016 +0200

    backport: re PR target/70098 (PowerPC64: eigen hits ICE following invalid register assignment)
    
            Backport from mainline
            2016-07-06  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/70098
            PR target/71763
            * config/rs6000/rs6000.md (*ctr<mode>_internal1, *ctr<mode>_internal2,
            *ctr<mode>_internal5, *ctr<mode>_internal6): Add *wi to the output
            constraint.
    
    gcc/testsuite
            PR target/70098
            PR target/71763
            * gcc.target/powerpc/pr71763.c: New file.
    
    From-SVN: r238250

commit 322ad97dad547e59ced518464cc6ac005c4104a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 12 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238236

commit 4137657df5cdeb97ec15a37d5e4774fd69e8047c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 11 22:43:11 2016 +0200

    re PR middle-end/71758 (ICE in verify_gimple_in_cfg, at tree-cfg.c:5212)
    
            PR middle-end/71758
            * omp-low.c (expand_omp_target): Gimplify device.
    
            * c-c++-common/gomp/pr71758.c: New test.
            * gfortran.dg/gomp/pr71758.f90: New test.
    
    From-SVN: r238232

commit 57458b4845f0a2e66d993d5a58dc800eee6d0259
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 11 22:39:44 2016 +0200

    re PR tree-optimization/71823 (g++ segfaults with -mfma and -ftree-slp-vectorize)
    
            PR tree-optimization/71823
            * tree-vect-stmts.c (vectorizable_operation): Use vect_get_vec_defs
            to get vec_oprnds2 from op2.
    
            * gcc.dg/vect/pr71823.c: New test.
    
    From-SVN: r238230

commit 14a37e5f219d0a318b90e72da473b5f43d8f72a2
Author: Yuri Rumyantsev <ysrumyan@gmail.com>
Date:   Mon Jul 11 15:21:20 2016 +0000

    backport: re PR tree-optimization/71518 (wrong code at -O3 on x86_64-linux-gnu in 64-bit mode (not in 32-bit mode))
    
    2016-07-11  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            Backport from mainline r238055.
            2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            PR tree-optimization/71518
            * tree-vect-data-refs.c (vect_compute_data_ref_alignment): Adjust
            misalign also for outer loops with negative step.
    
    gcc/testsuite/
    
    2016-07-11  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            Backport from mainline r238055.
            2016-07-06  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            PR tree-optimization/71518
            * gcc.dg/pr71518.c: New test.
    
    From-SVN: r238212

commit eb518e8b7e652e67259f4e5f2ca6d323d6c1912e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 11 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r238201

commit d2b099b2415d564e0727fb472062aad11907d87d
Author: Thomas Koenig <tkoenig@gcc.gnu.org>
Date:   Sun Jul 10 21:26:28 2016 +0000

    backport: re PR fortran/71783 (ICE on valid code in gimplify_var_or_parm_decl at gimplify.c:1801)
    
    2016-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71783
            * frontend-passes.c (create_var):  Always allocate a charlen
            for character variables.
    
    2016-07-09  Thomas Koenig  <tkoenig@gcc.gnu.org>
    
            Backport from trunk:
            PR fortran/71783
            * gfortran.dg/dependency_46.f90:  New test.
    
    From-SVN: r238198

commit 38d36559f76d24f8998936b70e969cf7cd5be9fe
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 10 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r238195

commit fa0adfcfb7dc7318446019243c5a4deec0133521
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 9 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r238190

commit 082992551364de78491f2c57734def7857643db9
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Fri Jul 8 14:27:22 2016 -0700

    backport: parse.c (matcha): Define.
    
            Backport from trunk:
            2016-07-08  Cesar Philippidis  <cesar@codesourcery.com>
    
            gcc/fortran/
            * parse.c (matcha): Define.
            (decode_oacc_directive): Add spec_only local var and set it.  Use
            matcha to parse acc directives except for routine and declare.  Return
            ST_GET_FCN_CHARACTERISTICS if a non-declarative directive could be
            matched.
    
            gcc/testsuite/
            * gfortran.dg/goacc/pr71704.f90: New test.
    
    From-SVN: r238179

commit 2b92296481d39aeb7f6729e89397ab5a37675920
Author: Martin Liska <mliska@suse.cz>
Date:   Fri Jul 8 22:20:23 2016 +0200

    Do not consider COMPLEX_TYPE as fold_convertible_p
    
            Backported from mainline
            2016-07-08  Martin Liska  <mliska@suse.cz>
    
            PR middle-end/71606
            * fold-const.c (fold_convertible_p): As COMPLEX_TYPE
            folding produces SAVE_EXPRs, thus return false for the type.
            Backported from mainline
            2016-07-08  Martin Liska  <mliska@suse.cz>
    
            * gcc.dg/torture/pr71606.c: New test.
    
    From-SVN: r238172

commit bdb8062a103df3331ead45b5955ab8a13dbe21d7
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jul 8 18:06:16 2016 +0000

    rs6000-builtin.def (BU_P9_MISC_1): Remove redundant and erroneous definition of this macro accidentally inserted...
    
    gcc/ChangeLog:
    
    2016-07-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000-builtin.def (BU_P9_MISC_1): Remove
            redundant and erroneous definition of this macro accidentally
            inserted during backporting.
            (BU_P9_64BIT_MISC_0): Likewise.
            (BU_P9_MISC_0): Likewise.
    
    From-SVN: r238170

commit e154b948cee4cc45e93dc83f356e1cf8065d80f3
Author: Jiong Wang <jiong.wang@arm.com>
Date:   Fri Jul 8 15:41:31 2016 +0000

    [AArch64] Back port from trunk
    
    2016-07-08  Jiong Wang  <jiong.wang@arm.com>
    
    gcc/
            * config/aarch64/aarch64-simd-builtins.def (smax): Remove float
            variants.
            (smin): Likewise.
            (fmax): New entry.
            (fmin): Likewise.
            * config/aarch64/arm_neon.h (vmaxnm_f32): Use
            __builtin_aarch64_fmaxv2sf.
            (vmaxnmq_f32): Likewise.
            (vmaxnmq_f64): Likewise.
            (vminnm_f32): Likewise.
            (vminnmq_f32): Likewise.
            (vminnmq_f64): Likewise.
    
    gcc/testsuite/
            * gcc.target/aarch64/simd/vminmaxnm_1.c: New.
    
    From-SVN: r238167

commit 877757ab62e7d5ede75d4a4729546e1e2ece5ab0
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Fri Jul 8 14:51:44 2016 +0000

    backport: re PR target/71806 (PowerPC -mcpu=power9 enables __float128 without an explicit -mfloat128)
    
    Back port from trunk
    
    [gcc]
    2016-07-08  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71806
            * config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Do not
            enable -mfloat128-hardware by default.
            (ISA_3_0_MASKS_IEEE): New macro to give all of the VSX options
            that IEEE 128-bit hardware support needs.
            * config/rs6000/rs6000.c (rs6000_option_override_internal): If
            -mcpu=power9 -mfloat128, enable -mfloat128-hardware by default.
            Use ISA_3_0_MASKS_IEEE as the set of options that IEEE 128-bit
            floating point requires.
            * doc/invoke.texi (RS/6000 and PowerPC Options): Document
            -mfloat128 and -mfloat128-hardware changes.
    
    [gcc/testsuite]
    2016-07-08  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71806
            * gcc.target/powerpc/p9-lxvx-stxvx-3.c: Add -mfloat128 option.
    
    From-SVN: r238165

commit 4dfff19c80bb0bf73c4eefafd031e097938b8561
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jul 8 14:11:39 2016 +0000

    backport: altivec.md (*altivec_vpermr_<mode>_internal): Exchange the order of the second and third operands in the vpermr instruction...
    
    gcc/ChangeLog:
    
    2016-07-08  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline r237912
            2016-07-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/altivec.md (*altivec_vpermr_<mode>_internal):
            Exchange the order of the second and third operands in the vpermr
            instruction tmeplate.
    
    From-SVN: r238163

commit b7d3feefb8085b4468861205b5b0141da436b918
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 8 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r238154

commit 3ca3028a418ad6ffd722a955021430aaec493fef
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jul 7 22:44:15 2016 +0000

    backport: re PR target/71720 (initialization of a vector of floats generates incorrect code for -mcpu=power9)
    
    Back port from trunk
    
    [gcc]
    2016-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71720
            * config/rs6000/vsx.md (vsx_splat_v4sf_internal): When splitting
            the insns, use an insn form that does not adjust the offset on
            little endian systems.
    
    [gcc/testsuite]
    2016-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71720
            * gcc.target/powerpc/pr71720.c: New test.
    
    From-SVN: r238151

commit 6135a39959ef877eee71be58e09bfd1a19337193
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Thu Jul 7 19:42:07 2016 +0000

    backport: altivec.md (darn_32): Change the condition to TARGET_P9_MISC instead of TARGET_MODULO.
    
    gcc/ChangeLog:
    
    2016-07-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline r237885
            2016-06-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/altivec.md (darn_32): Change the condition to
            TARGET_P9_MISC instead of TARGET_MODULO.
            (darn_raw): Replace TARGET_MODULO with TARGET_P9_MISC in the
            condition expression.
            (darn): Replace TARGET_MODULO with TARGET_P9_MISC in the
            condition expression.
            * config/rs6000/dfp.md (UNSPEC_DTSTSFI): New unspec constant.
            (DFP_TEST): New code iterator.
            (dfptstsfi_<code>_mode>): New define_expand.
            (*dfp_sgnfcnc_<mode>): New define_insn.
            * config/rs6000/rs6000-builtin.def (BU_P9_MISC_0): Move this macro
            definition next to BU_P9_MISC_1 definition and change the MASK
            value to RS6000_BTM_P9_MISC.
            (BU_P9_MISC_1): Change the MASK value to RS6000_BTM_P9_MISC.
            (BU_P9_64BIT_MISC_0): Likewise.
            (BU_P9_DFP_MISC_0): New macro definition.
            (BU_P9_DFP_MISC_1): New macro definition.
            (BU_P9_DFP_MISC_2): New macro definition.
            (BU_P9_DFP_OVERLOAD_1): New macro definition.
            (BU_P9_DFP_OVERLOAD_2): New macro definition.
            (BU_P9_DFP_OVERLOAD_3): New macro definition.
            (TSTSFI_LT_DD): New BU_P9_DFP_MISC_2.
            (TSTSFI_LT_TD): Likewise.
            (TSTSFI_EQ_DD): Likewise.
            (TSTSFI_EQ_TD): Likewise.
            (TSTSFI_GT_DD): Likewise.
            (TSTSFI_GT_TD): Likewise.
            (TSTSFI_OV_DD): Likewise.
            (TSTSFI_OV_TD): Likewise.
            (TSTSFI_LT): New BU_P9_DFP_OVERLOAD_2.
            (TSTSFI_LT_DD): Likewise.
            (TSTSFI_LT_TD): Likewise.
            (TSTSFI_EQ): Likewise.
            (TSTSFI_EQ_DD): Likewise.
            (TSTSFI_EQ_TD): Likewise.
            (TSTSFI_GT): Likewise.
            (TSTSFI_GT_DD): Likewise.
            (TSTSFI_GT_TD): Likewise.
            (TSTSFI_OV): Likewise.
            (TSTSFI_OV_DD): Likewise.
            (TSTSFI_OV_TD): Likewise.
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
            overloaded test significance functions.
            * config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Add
            OPTION_MASK_P9_MISC into the representation of this mask.
            (POWERPC_MASKS): Add OPTION_MASK_P9_MISC into the representation
            of this mask.
            * config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Set the
            RS6000_BTM_P9_MISC flag in the return value if TARGET_P9_MISC is
            non-zero.
            (rs6000_expand_binop_builtin): Enforce that argument 0 of the exp
            argument is a 6-bit unsigned literal value if the icode argument
            represents a DFP test significance built-in call.
            (rs6000_invalid_builtin): Add support for the RS6000_BTM_P9_MISC
            flag used independently and in combination with the
            RS6000_BTM_64BIT flag.
            (rs6000_opt_masks): Add entry for power9-misc command-line option.
            (rs6000_builtin_mask_names): Add entry for power9-misc
            command-line option.
            * config/rs6000/rs6000.h: Redefine TARGET_P9_MISC as 0 if
            HAVE_AS_POWER9 is not a defined macro.  Define MASK_P9_MISC and
            RS6000_BTM_P9_MISC macros.
            * config/rs6000/rs6000.opt: Add support for the -mpower9-misc
            option and change the description of the -mpower9-vector option to
            enable only vector instructions, removing its erroneously claimed
            support for scalar instructions.
            * doc/extend.texi (PowerPC AltiVec Built-in Functions): Document
            the ISA 3.0 digital floating point test significance built-in
            functions.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-07  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline r237885
            2016-06-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/dfp/dfp.exp: New dejagnu test script.
            * gcc.target/powerpc/dfp/dtstsfi-0.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-1.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-10.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-11.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-12.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-13.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-14.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-15.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-16.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-17.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-18.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-19.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-2.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-20.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-21.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-22.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-23.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-24.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-25.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-26.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-27.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-28.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-29.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-3.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-30.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-31.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-32.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-33.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-34.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-35.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-36.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-37.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-38.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-39.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-4.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-40.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-41.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-42.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-43.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-44.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-45.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-46.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-47.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-48.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-49.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-5.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-50.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-51.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-52.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-53.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-54.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-55.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-56.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-57.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-58.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-59.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-6.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-60.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-61.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-62.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-63.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-64.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-65.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-66.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-67.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-68.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-69.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-7.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-70.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-71.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-72.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-73.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-74.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-75.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-76.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-77.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-78.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-79.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-8.c: New test.
            * gcc.target/powerpc/dfp/dtstsfi-9.c: New test.
    
    From-SVN: r238126

commit d176a4f08f6a861ef3fa9ad38f8813a2e608a261
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 7 11:37:24 2016 +0000

    backport: re PR middle-end/64516 (arm: wrong unaligned load generated)
    
    2016-07-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-06-13  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/64516
            * fold-const.c (fold_unary_loc): Preserve alignment when
            folding a VIEW_CONVERT_EXPR into a MEM_REF.
    
            * gcc.dg/align-3.c: New testcase.
    
    From-SVN: r238085

commit e29b35b3cdc0a2b7cb378e1a6357135779270f4d
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Jul 7 07:30:04 2016 +0000

    Backport PRs 71264, 71423, 71452, 71521, 71522
    
    2016-07-07  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-05-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71264
            * tree-vect-stmts.c (vect_init_vector): Properly deal with
            vector type val.
    
            * gcc.dg/vect/pr71264.c: New testcase.
    
            2016-06-07  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/71423
            * match.pd ((X | ~Y) -> Y <= X): Properly invert the comparison
            for signed ops.
    
            * gcc.dg/torture/pr71423.c: New testcase.
    
            2016-06-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71521
            * tree-vrp.c (extract_range_from_binary_expr_1): Guard
            division int_const_binop against zero divisor.
    
            * gcc.dg/tree-ssa/vrp101.c: New testcase.
    
            2016-06-08  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71452
            * tree-ssa.c (non_rewritable_lvalue_p): Make sure that the
            type used for the SSA rewrite has enough precision to cover
            the dynamic type of the location.
    
            * gcc.dg/torture/pr71452.c: New testcase.
    
            2016-06-14  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71522
            * tree-ssa.c (non_rewritable_lvalue_p): Do not rewrite non-float
            copying into float copying.
    
            * gcc.dg/torture/pr71522.c: New testcase.
    
    From-SVN: r238077

commit 2466143e7eb7e10e15198b746af8fefc3c9f1458
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jul 7 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r238072

commit 413023485ec34ff8d64879d6f8aed2066b92161f
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Wed Jul 6 16:58:32 2016 +0300

    Implement LWG 2451, optional<T> should 'forward' T's implicit conversions.
    
            Implement LWG 2451, optional<T> should 'forward' T's
            implicit conversions.
            * include/experimental/optional (__is_optional_impl, __is_optional):
            New.
            (optional()): Make constexpr and default.
            (optional(_Up&&), optional(const optional<_Up>&),
            optional(optional<_Up>&& __t): New.
            (operator=(_Up&&)): Constrain.
            (operator=(const optional<_Up>&), operator=(optional<_Up>&&)): New.
            * testsuite/experimental/optional/cons/value.cc:
            Add tests for the functionality added by LWG 2451.
            * testsuite/experimental/optional/cons/value_neg.cc: New.
    
    From-SVN: r238054

commit e66a0fdd64a83f48dd219cd2a464a7c93704631d
Author: Senthil Kumar Selvaraj <senthil_kumar.selvaraj@atmel.com>
Date:   Wed Jul 6 13:53:36 2016 +0000

    backport: re PR target/50739 ([avr] nameless error with -fmerge-all-constants)
    
    2016-07-06  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
    gcc/
            Backport from mainline
            2016-07-06  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            PR target/50739
            * config/avr/avr.c (avr_asm_select_section): Strip off
            SECTION_DECLARED from flags when calling get_section.
    
    testsuite/
    
            Backport from mainline
            2016-07-06  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>
    
            PR target/50739
            * gcc.target/avr/pr50739.c: New test.
    
    From-SVN: r238053

commit fab85821bd41845c2c626274cc2d6fc5dc80bf21
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Wed Jul 6 02:31:08 2016 +0000

    rs6000.md ('type' attribute): Add htmsimple/dfp types.
    
            * config/rs6000/rs6000.md ('type' attribute): Add htmsimple/dfp types.
            ('size' attribute): Add '128'.
            Include power9.md.
            (*mov<mode>_hardfloat32, *mov<mode>_hardfloat64, *movdi_internal32,
            *movdi_internal64, *movdf_update1): Set size attribute to '64'.
            (add<mode>3, sub<mode>3, mul<mode>3, div<mode>3, sqrt<mode>2,
            copysign<mode>3, neg<mode>2_hw, abs<mode>2_hw, *nabs<mode>2_hw,
            *fma<mode>4_hw, *fms<mode>4_hw, *nfma<mode>4_hw, *nfms<mode>4_hw,
            extend<SFDF:mode><IEEE128:mode>2_hw, trunc<mode>df2_hw,
            *xscvqp<su>wz_<mode>, *xscvqp<su>dz_<mode>, *xscv<su>dqp_<mode>,
            *trunc<mode>df2_odd): Set size attribute to '128'.
            (*cmp<mode>_hw): Change type to veccmp and set size attribute to '128'.
            * config/rs6000/power6.md (power6-fp): Include dfp type.
            * config/rs6000/power7.md (power7-fp): Likewise.
            * config/rs6000/power8.md (power8-fp): Likewise.
            * config/rs6000/power9.md: New file.
            * config/rs6000/t-rs6000 (MD_INCLUDES): Add power9.md.
            * config/rs6000/htm.md (*tabort, *tabort<wd>c, *tabort<wd>ci,
            *trechkpt, *treclaim, *tsr, *ttest): Change type attribute to
            htmsimple.
            * config/rs6000/dfp.md (extendsddd2, truncddsd2, extendddtd2,
            trunctddd2, adddd3, addtd3, subdd3, subtd3, muldd3, multd3, divdd3,
            divtd3, *cmpdd_internal1, *cmptd_internal1, floatdidd2, floatditd2,
            ftruncdd2, fixdddi2, ftrunctd2, fixtddi2, dfp_ddedpd_<mode>,
            dfp_denbcd_<mode>, dfp_dxex_<mode>, dfp_diex_<mode>, dfp_dscli_<mode>,
            dfp_dscri_<mode>): Change type attribute to dfp.
            * config/rs6000/crypto.md (crypto_vshasigma<CR_char>): Change type
            attribute to vecsimple.
            * config/rs6000/rs6000.c (power9_cost): Update costs, cache size
            and prefetch streams.
            (rs6000_option_override_internal): Remove temporary code setting
            tuning to power8.  Don't set rs6000_sched_groups for power9.
            (last_scheduled_insn): Change to rtx_insn *.
            (divide_cnt, vec_load_pendulum): New variables.
            (rs6000_adjust_cost): Add Power9 to test for store->load separation.
            (rs6000_issue_rate): Set issue rate for Power9.
            (is_power9_pairable_vec_type): New.
            (power9_sched_reorder2): New.
            (rs6000_sched_reorder2): Call new function for Power9 specific
            reordering.
            (insn_must_be_first_in_group): Remove Power9.
            (insn_must_be_last_in_group): Likewise.
            (force_new_group): Likewise.
            (rs6000_sched_init): Fix initialization of last_scheduled_insn.
            Initialize divide_cnt/vec_load_pendulum.
            (_rs6000_sched_context, rs6000_init_sched_context,
            rs6000_set_sched_context): Handle context save/restore of new
            variables.
    
    From-SVN: r238030

commit 0c1f0121f6068927a6f8bdbe49cd110aff2f676e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jul 6 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r238028

commit b5d86e5080e0a9437fdb0f54cd2c0781aebe2657
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Tue Jul 5 23:06:31 2016 +0300

    Implement LWG 2509,
    
            any_cast doesn't work with rvalue reference targets and cannot
            move with a value target.
            * include/experimental/any (any(_ValueType&&)): Constrain and
            add an overload that doesn't forward.
            (any_cast(any&&)): Constrain and add an overload that moves.
            * testsuite/experimental/any/misc/any_cast.cc: Add tests for
            the functionality added by LWG 2509.
    
    From-SVN: r238025

commit c72d81288320e9d7069d616f0394a98888826212
Author: Pat Haugen <pthaugen@us.ibm.com>
Date:   Tue Jul 5 19:19:42 2016 +0000

    rs6000.md ('type' attribute): Add veclogical,veccmpfx,vecexts,vecmove insn types.
    
            * config/rs6000/rs6000.md ('type' attribute): Add
            veclogical,veccmpfx,vecexts,vecmove insn types.
            (*abs<mode>2_fpr, *nabs<mode>2_fpr, *neg<mode>2_fpr, *extendsfdf2_fpr,
            copysign<mode>3_fcpsgn, trunc<mode>df2_internal1, neg<mode>2_internal,
            p8_fmrgow_<mode>, pack<mode>): Change type to fpsimple.
            (*xxsel<mode>, copysign<mode>3_hard, neg<mode>2_hw, abs<mode>2_hw,
            *nabs<mode>2_hw): Change type to vecmove.
            (*and<mode>3_internal, *bool<mode>3_internal, *boolc<mode>3_internal,
            *boolcc<mode>3_internal, *eqv<mode>3_internal,
            *one_cmpl<mode>3_internal, *ieee_128bit_vsx_neg<mode>2_internal,
            *ieee_128bit_vsx_abs<mode>2_internal,
            *ieee_128bit_vsx_nabs<mode>2_internal, extendkftf2, trunctfkf2,
            *ieee128_mfvsrd_64bit, *ieee128_mfvsrd_32bit, *ieee128_mtvsrd_64bit,
            *ieee128_mtvsrd_32bit): Change type to veclogical.
            (mov<mode>_hardfloat, *mov<mode>_hardfloat32, *mov<mode>_hardfloat64,
            *movdi_internal32, *movdi_internal64): Update insn types.
            * config/rs6000/vsx.md (*vsx_le_undo_permute_<mode>,
            vsx_extract_<mode>): Change type to veclogical.
            (*vsx_xxsel<mode>, *vsx_xxsel<mode>_uns): Change type to vecmove.
            (vsx_sign_extend_qi_<mode>, *vsx_sign_extend_hi_<mode>,
            *vsx_sign_extend_si_v2di): Change type to vecexts.
            * config/rs6000/altivec.md (*altivec_mov<mode>, *altivec_movti): Change
            type to veclogical.
            (*altivec_eq<mode>, *altivec_gt<mode>, *altivec_gtu<mode>,
            *altivec_vcmpequ<VI_char>_p, *altivec_vcmpgts<VI_char>_p,
            *altivec_vcmpgtu<VI_char>_p): Change type to veccmpfx.
            (*altivec_vsel<mode>, *altivec_vsel<mode>_uns): Change type to vecmove.
            * config/rs6000/dfp.md (*negdd2_fpr, *absdd2_fpr, *nabsdd2_fpr,
            negtd2, *abstd2_fpr, *nabstd2_fpr): Change type to fpsimple.
            * config/rs6000/40x.md (ppc405-float): Add fpsimple.
            * config/rs6000/440.md (ppc440-fp): Add fpsimple.
            * config/rs6000/476.md (ppc476-fp): Add fpsimple.
            * config/rs6000/601.md (ppc601-fp): Add fpsimple.
            * config/rs6000/603.md (ppc603-fp): Add fpsimple.
            * config/rs6000/6xx.md (ppc604-fp): Add fpsimple.
            * config/rs6000/7xx.md (ppc750-fp): Add fpsimple.
            (ppc7400-vecsimple): Add veclogical, vecmove, veccmpfx.
            * config/rs6000/7450.md (ppc7450-fp): Add fpsimple.
            (ppc7450-vecsimple): Add veclogical, vecmove.
            (ppc7450-veccmp): Add veccmpfx.
            * config/rs6000/8540.md (ppc8540_simple_vector): Add veclogical,
            vecmove.
            (ppc8540_vector_compare): Add veccmpfx.
            * config/rs6000/a2.md (ppca2-fp): Add fpsimple.
            * config/rs6000/cell.md (cell-fp): Add fpsimple.
            (cell-vecsimple): Add veclogical, vecmove.
            (cell-veccmp): Add veccmpfx.
            * config/rs6000/e300c2c3.md (ppce300c3_fp): Add fpsimple.
            * config/rs6000/e6500.md (e6500_vecsimple): Add veclogical, vecmove,
            veccmpfx.
            * config/rs6000/mpc.md (mpccore-fp): Add fpsimple.
            * config/rs6000/power4.md (power4-fp): Add fpsimple.
            (power4-vecsimple): Add veclogical, vecmove.
            (power4-veccmp): Add veccmpfx.
            * config/rs6000/power5.md (power5-fp): Add fpsimple.
            * config/rs6000/power6.md (power6-fp): Add fpsimple.
            (power6-vecsimple): Add veclogical, vecmove.
            (power6-veccmp): Add veccmpfx.
            * config/rs6000/power7.md (power7-fp): Add fpsimple.
            (power7-vecsimple): Add veclogical, vecmove, veccmpfx.
            * config/rs6000/power8.md (power8-fp): Add fpsimple.
            (power8-vecsimple): Add veclogical, vecmove, veccmpfx.
            * config/rs6000/rs64.md (rs64a-fp): Add fpsimple.
            * config/rs6000/titan.md (titan_fp): Add fpsimple.
            * config/rs6000/xfpu.md (fp-default, fp-addsub-s, fp-addsub-d): Add
            fpsimple.
            * config/rs6000/rs6000.c (rs6000_adjust_cost): Add TYPE_FPSIMPLE.
    
    From-SVN: r238024

commit 3e2f539113054b10fd9ea23db486a7d788406b54
Author: Markus Trippelsdorf <markus@trippelsdorf.de>
Date:   Tue Jul 5 17:55:36 2016 +0000

    re PR c++/71214 (Typo in feature test macro for rvalue references)
    
    Fix PR c++/71214
    
            PR c++/71214
            * c-cppbuiltin.c (c_cpp_builtins): Define * __cpp_rvalue_references.
    
    From-SVN: r238019

commit 71c0ee0edbd3435a01edb25e6538b24a9a96e42a
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue Jul 5 17:54:02 2016 +0000

    backport: const-float128-ped.c: Require __float128 effective target and options.
    
    2016-07-05  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-07-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.dg/const-float128-ped.c: Require __float128 effective
            target and options.
            * gcc.dg/const-float128.c: Likewise.
            * gcc.dg/torture/float128-cmp-invalid.c: Require
            __float128 and base_quadfloat_support effective targets, and
            __float128 options.
            * gcc.dg/torture/float128-div-underflow.c: Likewise.
            * gcc.dg/torture/float128-extend-nan.c: Likewise.
            * gcc.dg/torture/fp-int-convert-float128-timode-2.c: Likewise.
            * gcc.dg/torture/fp-int-convert-float128-timode-3.c: Likewise.
            * gcc.dg/torture/fp-int-convert-float128-timode.c: Likewise.
            * lib/target-supports.exp (check_effective_target___float128):
            New.
            (add_options_for___float128): New.
            (check_effective_target_base_quadword_support): New.
    
    From-SVN: r238018

commit c5e25d991a4fb77a0985f0775bf959d2e915e70d
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Tue Jul 5 17:02:06 2016 +0000

    backport: rs6000.h (RS6000_BTM_COMMON): Add the RS6000_BTM_MODULO flag into the set of flags that are considered to be...
    
    gcc/ChangeLog:
    
    2016-07-05  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from mainline r237391
            2016-06-13  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000.h (RS6000_BTM_COMMON): Add the
            RS6000_BTM_MODULO flag into the set of flags that are considered
            to be part of the common configuration.
    
    From-SVN: r238015

commit c966ee98a82828f715b80db6cdfbc03d69d4d9e3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jul 5 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237997

commit 9cbdee3d123647296780b098d78dd0e016a7ff00
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jul 4 19:33:50 2016 +0200

    re PR c++/71739 (ICE on valid C++11 code: tree check: expected identifier_node, have tree_list in private_is_attribute_p, at tree.c:6080)
    
            PR c++/71739
            * tree.c (attribute_value_equal): Use get_attribute_name instead of
            directly using TREE_PURPOSE.
    
            * g++.dg/cpp0x/pr71739.C: New test.
    
    From-SVN: r237992

commit 9871d1b899aa03ab9337e0a3d2e2a118c9015c4d
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon Jul 4 16:15:10 2016 +0300

    re PR libstdc++/71313 ([Filesystem TS] remove_all fails to remove directory contents recursively)
    
            PR libstdc++/71313
            * src/filesystem/ops.cc (remove_all(const path&, error_code&)):
            Call remove_all for children of a directory.
            * testsuite/experimental/filesystem/operations/create_directories.cc:
            Adjust.
    
    From-SVN: r237980

commit f351b8688f8d3e249ee3cb94b44ef9bcb3da3bd4
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Jul 4 11:52:38 2016 +0200

    rs6000: Fix split of ashdi3_extswsli_dot for memory (PR71670)
    
    The splitter for ashdi3_extswsli_dot for cr0 with memory uses emit_insn
    gen_ashdi3_extswsli_dot, which does not work because that emits a scratch,
    while the splitter runs after reload so there should be a real register
    instead.  We can laboriously fix that up, or emit using
    gen_ashdi3_extswsli_dot2 instead.  This patch does the latter.
    
    
    2016-07-04  Segher Boessenkool  <segher@kernel.crashing.org>
    
            Backport from mainline
            2016-06-27  Segher Boessenkool  <segher@kernel.crashing.org>
    
            PR target/71670
            * config/rs6000/rs6000.md (ashdi3_extswsli_dot): Use
            gen_ashdi3_extswsli_dot2 instead of gen_ashdi3_extswsli_dot.
    
    gcc/testsuite/
            PR target/71670
            * gcc.target/powerpc/pr71670.c: New testcase.
    
    From-SVN: r237958

commit bc48a325d4c0bb2f89987ddb691fb9d122fed06d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jul 4 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r237953

commit d79e17824a05843cf1a34a75145b641ce7b782a4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jul 3 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237948

commit a1d4ddd8a5155edb71acb0bdfe7c1c7beff62a77
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:25:52 2016 +0200

    backport: re PR fortran/71687 (ICE in omp_add_variable, at gimplify.c:5821)
    
            Backported from mainline
            2016-07-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71687
            * f95-lang.c (struct binding_level): Add reversed field.
            (clear_binding_level): Adjust initializer.
            (getdecls): If reversed is clear, set it and nreverse the names
            chain before returning it.
            (poplevel): Use getdecls.
            * trans-decl.c (gfc_generate_function_code, gfc_process_block_locals):
            Use nreverse to pushdecl decls in the declaration order.
    
            * gfortran.dg/gomp/pr71687.f90: New test.
    
    From-SVN: r237944

commit 3f35a1201f67a054f628423e72fcc22eb038a3f0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:24:41 2016 +0200

    backport: re PR fortran/71717 (A gfortran silent "wrong code" bug in the transition from 4.9.0 -> 4.9.1, using OpenMP.)
    
            Backported from mainline
            2016-07-01  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71717
            * trans-openmp.c (gfc_omp_privatize_by_reference): Return false
            for GFC_DECL_ASSOCIATE_VAR_P with POINTER_TYPE.
    
            * testsuite/libgomp.fortran/associate3.f90: New test.
    
    From-SVN: r237943

commit c7090af976d3bc224ab5ec75bfaffe4246f8a7c4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:23:45 2016 +0200

    backport: re PR fortran/71704 (ICE with -fopenmp and some omp constructs)
    
            Backported from mainline
            2016-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71704
            * parse.c (matchs, matcho): Move right before decode_omp_directive.
            If spec_only, only gfc_match the keyword and if successful, goto
            do_spec_only.
            (matchds, matchdo): Define.
            (decode_omp_directive): Add spec_only local var and set it.
            Use matchds or matchdo macros instead of matchs or matcho
            for declare target, declare simd, declare reduction and threadprivate
            directives.  Return ST_GET_FCN_CHARACTERISTICS if a non-declarative
            directive could be matched.
            (next_statement): For ST_GET_FCN_CHARACTERISTICS restore
            gfc_current_locus from old_locus even if there is no label.
    
            * gfortran.dg/gomp/pr71704.f90: New test.
    
    From-SVN: r237942

commit 8ca7336de6f91e0683805b03e4c3d6058e1673f0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:22:48 2016 +0200

    backport: re PR fortran/71705 (ICE in lower_omp_target, at omp-low.c:16136)
    
            Backported from mainline
            2016-06-30  Jakub Jelinek  <jakub@redhat.com>
    
            PR fortran/71705
            * trans-openmp.c (gfc_trans_omp_clauses): Set TREE_ADDRESSABLE on
            decls in to/from clauses.
    
            * gfortran.dg/gomp/pr71705.f90: New test.
    
    From-SVN: r237941

commit 439c1b98d86ab35d8134d60ff2e0d97e9896a117
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:22:11 2016 +0200

    backport: re PR c/71685 (Segmentation fault in gcc when compiling the attached file.)
    
            Backported from mainline
            2016-06-29  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/71685
            * c-typeck.c (c_build_qualified_type): Don't clear
            C_TYPE_INCOMPLETE_VARS for the main variant.
    
            * gcc.dg/pr71685.c: New test.
    
    From-SVN: r237940

commit 958026b4152fe722b4eb47a1f031dd4d8323939b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:21:24 2016 +0200

    backport: re PR middle-end/71626 (ICE at -O1 and above on x86_64-linux-gnu (in output_constant_pool_2, at varasm.c:3837))
    
            Backported from mainline
            2016-06-28  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71626
            * config/i386/i386.c (ix86_expand_vector_move): For SUBREG of
            a constant, force its SUBREG_REG into memory or register instead
            of whole op1.
    
            * gcc.c-torture/execute/pr71626-1.c: New test.
            * gcc.c-torture/execute/pr71626-2.c: New test.
    
    From-SVN: r237939

commit a89e34f5c3297ac2c90a234815414762640ef99c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Sat Jul 2 12:18:27 2016 +0200

    backport: re PR target/71559 (ICE in ix86_fp_cmp_code_to_pcmp_immediate, at config/i386/i386.c:23042 (KNL/AVX512))
    
            Backported from mainline
            2016-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR target/71559
            * config/i386/i386.c (ix86_fp_cmp_code_to_pcmp_immediate): Fix up
            returned values and add UN*/LTGT/*ORDERED cases with values matching
            D operand modifier on vcmp for AVX.
    
            * gcc.target/i386/sse2-pr71559.c: New test.
            * gcc.target/i386/avx-pr71559.c: New test.
            * gcc.target/i386/avx512f-pr71559.c: New test.
    
    From-SVN: r237938

commit 00024f73c86240d8282df90ff4e8548f58c4758c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jul 2 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r237935

commit b27d656b941528e284cd22ce8f803589788a2dc0
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jul 1 20:09:06 2016 +0000

    backport: rs6000.h: Add conditional preprocessing directives to disable Power9-specific compiler...
    
    gcc/ChangeLog:
    
    2016-07-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r237659
            2016-06-21  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000.h: Add conditional preprocessing directives
            to disable Power9-specific compiler features if HAVE_AS_POWER9 is
            not defined.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r237659
            2016-06-21  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/darn-0.c: Add dejagnu directives to disable
            test if effective-target is not powerpc_p9vector_ok, or if a -mcpu
            override other than -mcpu=power9 command-line option is specified,
            or if the target operating system is aix.
            * gcc.target/powerpc/darn-1.c: Likewise.
            * gcc.target/powerpc/darn-2.c: Likewise.
            * gcc.target/powerpc/vslv-0.c: Add dejagnu directives to disable
            test if effective-target is not powerpc_p9vector_ok or if the
            target operating system is aix.
            * gcc.target/powerpc/vslv-1.c: Likewise.
            * gcc.target/powerpc/vsrv-0.c: Likewise.
            * gcc.target/powerpc/vsrv-1.c: Likewise.
    
    From-SVN: r237923

commit 9db40c2c54415843ef89449447e5843eb0dc4ced
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Fri Jul 1 12:56:54 2016 -0500

    backport: re PR target/71656 (ICE in reload when generating code for -mcpu=power9 -mpower9-dform-vector)
    
    gcc/
            Backport from trunk
            2016-06-27  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/71656
            * config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Add
            OPTION_MASK_P9_DFORM_VECTOR.
            * config/rs6000/rs6000.c (rs6000_option_override_internal): Do not
            disable -mpower9-dform-vector when using reload.
            (quad_address_p): Remove 'gpr_p' argument and all associated code.
            New 'strict' argument.  Update all callers.  Add strict addressing
            support.
            (rs6000_legitimate_offset_address_p): Remove call to
            virtual_stack_registers_memory_p.
            (rs6000_legitimize_reload_address): Add quad address support.
            (rs6000_legitimate_address_p): Move call to quad_address_p above
            call to virtual_stack_registers_memory_p.  Adjust quad_address_p args
            to account for new strict usage.
            (rs6000_output_move_128bit): Adjust quad_address_p args to account
            for new strict usage.
            * config/rs6000/predicates.md (quad_memory_operand): Likewise.
    
    gcc/testsuite/
            Backport from trunk
            2016-06-27  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/71656
            * gcc.target/powerpc/pr71656-1.c: New test.
            * gcc.target/powerpc/pr71656-2.c: New test.
    
    From-SVN: r237919

commit 43361bd6f277edd742944648856bc68a1edf9a68
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jul 1 17:19:15 2016 +0000

    backport: rs6000-builtin.def (BU_FLOAT128_2): New #define.
    
    [gcc]
    
    2016-07-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-builtin.def (BU_FLOAT128_2): New #define.
            (BU_FLOAT128_1): Likewise.
            (FABSQ): Likewise.
            (COPYSIGNQ): Likewise.
            (RS6000_BUILTIN_NANQ): Likewise.
            (RS6000_BUILTIN_NANSQ): Likewise.
            (RS6000_BUILTIN_INFQ): Likewise.
            (RS6000_BUILTIN_HUGE_VALQ): Likewise.
            * config/rs6000/rs6000.c (rs6000_fold_builtin): New prototype.
            (TARGET_FOLD_BUILTIN): New #define.
            (rs6000_builtin_mask_calculate): Add TARGET_FLOAT128 entry.
            (rs6000_invalid_builtin): Add handling for RS6000_BTM_FLOAT128.
            (rs6000_fold_builtin): New target hook implementation, handling
            folding of 128-bit NaNs and infinities.
            (rs6000_init_builtins): Initialize const_str_type_node; ensure all
            entries are filled in to avoid problems during bootstrap
            self-test; define builtins for 128-bit NaNs and infinities.
            (rs6000_opt_mask): Add entry for float128.
            * config/rs6000/rs6000.h (RS6000_BTM_FLOAT128): New #define.
            (RS6000_BTM_COMMON): Include RS6000_BTM_FLOAT128.
            (rs6000_builtin_type_index): Add RS6000_BTI_const_str.
            (const_str_type_node): New #define.
            * config/rs6000/rs6000.md (copysign<mode>3 for IEEE128): Convert
            to a define_expand that dispatches to either copysign<mode>3_soft
            or copysign<mode>3_hard.
            (copysign<mode>3_hard): Rename from copysign<mode>3.
            (copysign<mode>3_soft): New define_insn.
            * doc/extend.texi: Document new builtins.
    
    [gcc/testsuite]
    
    2016-07-01  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-24  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/abs128-1.c: New.
            * gcc.target/powerpc/copysign128-1.c: New.
            * gcc.target/powerpc/inf128-1.c: New.
            * gcc.target/powerpc/nan128-1.c: New.
    
            Backport from mainline
            2016-06-28  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/abs128-1.c: Require VSX.
            * gcc.target/powerpc/copysign128-1.c: Likewise.
            * gcc.target/powerpc/inf128-1.c: Likewise.
            * gcc.target/powerpc/nan128-1.c: Likewise.
    
    From-SVN: r237918

commit 1fe012a16850987038e4263ac2f7194ba5312fa9
Author: Peter Bergner <bergner@gcc.gnu.org>
Date:   Fri Jul 1 11:06:26 2016 -0500

    backport: re PR target/71698 (ICE related to decimal float when compiling with -mcpu=power9)
    
    gcc/
            Backport from trunk
            2016-07-01  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/71698
            * config/rs6000/rs6000.c (rs6000_secondary_reload_simple_move): Disallow
            TDmode values.
    
    gcc/testsuite/
            Backport from trunk
            2016-07-01  Peter Bergner  <bergner@vnet.ibm.com>
    
            PR target/71698
            * gcc.target/powerpc/pr71698.c: New test.
    
    From-SVN: r237917

commit 0fb4a1d9daeb857a18cb55fc4205aa6af7496360
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Fri Jul 1 15:08:18 2016 +0000

    backport: altivec.h (vec_slv): New macro.
    
    gcc/ChangeLog:
    
    2016-07-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r236992
            2016-06-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/altivec.h (vec_slv): New macro.
            (vec_srv): New macro.
            * config/rs6000/altivec.md (UNSPEC_VSLV): New value.
            (UNSPEC_VSRV): New value.
            (vslv): New insn.
            (vsrv): New insn.
            * config/rs6000/rs6000-builtin.def (vslv): New builtin definition.
            (vsrv): New builtin definition.
            * config/rs6000/rs6000-c.c (P9V_BUILTIN_VSLV): Macro expansion to
            define argument types for new builtin.
            (P9V_BUILTIN_VSRV): Macro expansion to define argument types for
            new builtin.
            * doc/extend.texi: Document the new vec_vslv and vec_srv built-in
            functions.
    
    gcc/testsuite/ChangeLog:
    
    2016-07-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r236992
            2016-06-01  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/vslv-0.c: New test.
            * gcc.target/powerpc/vslv-1.c: New test.
            * gcc.target/powerpc/vsrv-0.c: New test.
            * gcc.target/powerpc/vsrv-1.c: New test.
    
    From-SVN: r237914

commit 800f7c7d12cc6775ad311f89ff2903b4406708cc
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri Jul 1 07:40:37 2016 +0000

    arm.c (arm_function_ok_for_sibcall): Add another check for NULL decl.
    
            * config/arm/arm.c (arm_function_ok_for_sibcall): Add another check
            for NULL decl.
    
    From-SVN: r237904

commit 759f0f3628d81d3ebfa7ecd39151cd3b35af0ece
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jul 1 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237901

commit dd8e6b24d759a10270c6d027f88ccea6c2954cd0
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Thu Jun 30 17:07:42 2016 +0000

    backport: altivec.h (vec_absd): New macro for vector absolute difference unsigned.
    
    gcc/ChangeLog:
    
    2016-06-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r237390
            2016-06-13  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/altivec.h (vec_absd): New macro for vector absolute
            difference unsigned.
            (vec_absdb): New macro for vector absolute difference unsigned
            byte.
            (vec_absdh): New macro for vector absolute difference unsigned
            half-word.
            (vec_absdw): New macro for vector absolute difference unsigned word.
            * config/rs6000/altivec.md (UNSPEC_VADU): New value.
            (vadu<mode>3): New insn.
            (*p9_vadu<mode>3): New insn.
            * config/rs6000/rs6000-builtin.def (vadub): New built-in
            definition.
            (vaduh): New built-in definition.
            (vaduw): New built-in definition.
            (vadu): New overloaded built-in definition.
            (vadub): New overloaded built-in definition.
            (vaduh): New overloaded built-in definition.
            (vaduw): New overloaded built-in definition.
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
            overloaded vector absolute difference unsigned functions.
            * doc/extend.texi (PowerPC AltiVec Built-in Functions): Document
            the ISA 3.0 vector absolute difference unsigned built-in functions.
    
    gcc/testsuite/ChangeLog:
    
    2016-06-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Backport from trunk r237390
            2016-06-13  Kelvin Nilsen  <kelvin@gcc.gnu.org>
            Backport from trunk r237646
            2016-06-20  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/vadsdu-0.c: New test.
            * gcc.target/powerpc/vadsdu-1.c: New test.
            * gcc.target/powerpc/vadsdu-2.c: New test.
            * gcc.target/powerpc/vadsdu-3.c: New test.
            * gcc.target/powerpc/vadsdu-4.c: New test.
            * gcc.target/powerpc/vadsdu-5.c: New test.
            * gcc.target/powerpc/vadsdub-1.c: New test.
            * gcc.target/powerpc/vadsdub-2.c: New test.
            * gcc.target/powerpc/vadsduh-1.c: New test.
            * gcc.target/powerpc/vadsduh-2.c: New test.
            * gcc.target/powerpc/vadsduw-1.c: New test.
            * gcc.target/powerpc/vadsduw-2.c: New test.
    
    From-SVN: r237886

commit 7a2fc0f33231157c5f02a2c0c251e7bba47365ca
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Thu Jun 30 14:39:10 2016 +0000

    Fix bogus option suggestions for RejectNegative options (PR driver/71651)
    
    gcc/ChangeLog:
            Backport from trunk r237880.
            2016-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR driver/71651
            * gcc.c (driver::build_option_suggestions): Pass "option" to
            add_misspelling_candidates.
            * opts-common.c (add_misspelling_candidates): Add "option" param;
            use it to avoid adding negated forms for options marked with
            RejectNegative.
            * opts.h (add_misspelling_candidates): Add "option" param.
    
    gcc/testsuite/ChangeLog:
            Backport from trunk r237880.
            2016-06-30  David Malcolm  <dmalcolm@redhat.com>
    
            PR driver/71651
            * gcc.dg/spellcheck-options-12.c: New test case.
    
    From-SVN: r237881

commit 432505dc578cb33896982b548c848802a03ca665
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 30 11:02:53 2016 +0200

    re PR middle-end/71693 (ICE: verify_gimple failed (type mismatch in shift expression, -O0, -O1, -O2, -O3))
    
            PR middle-end/71693
            * fold-const.c (fold_binary_loc) <case RROTATE_EXPR>: Cast
            TREE_OPERAND (arg0, 0) and TREE_OPERAND (arg0, 1) to type
            first when permuting bitwise operation with rotate.  Cast
            TREE_OPERAND (arg0, 0) to type when cancelling two rotations.
    
            * gcc.c-torture/compile/pr71693.c: New test.
    
    From-SVN: r237876

commit b201d20c21169699beb2e2fdf1b875a9acefb07b
Author: Martin Liska <mliska@suse.cz>
Date:   Thu Jun 30 10:46:30 2016 +0200

    Partial backport from trunk
    
            * ipa-inline-transform.c (inline_call): Remove unnecessary call
            of build_optimization_node.
    
    From-SVN: r237874

commit 7771e845cdf4bece4c873df74f9c4572e5263619
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 30 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237868

commit 4958667280df30b93701c0c505b640ef3f5ddab3
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Wed Jun 29 09:08:13 2016 -0700

    backport: openmp.c (match_oacc_clause_gang): Rename to ...
    
            Back port from trunk
            2016-06-29  Cesar Philippidis  <cesar@codesourcery.com>
    
            gcc/fortran/
            * openmp.c (match_oacc_clause_gang): Rename to ...
            (match_oacc_clause_gwv): this.  Add support for OpenACC worker and
            vector clauses.
            (gfc_match_omp_clauses): Use match_oacc_clause_gwv for
            OMP_CLAUSE_{GANG,WORKER,VECTOR}.  Propagate any MATCH_ERRORs for
            invalid OMP_CLAUSE_{ASYNC,WAIT,GANG,WORKER,VECTOR} clauses.
            (gfc_match_oacc_wait): Propagate MATCH_ERROR for invalid
            oacc_expr_lists.  Adjust the first and needs_space arguments to
            gfc_match_omp_clauses.
    
            gcc/testsuite/
            * gfortran.dg/goacc/asyncwait-2.f95: Updated expected diagnostics.
            * gfortran.dg/goacc/asyncwait-3.f95: Likewise.
            * gfortran.dg/goacc/asyncwait-4.f95: Add test coverage.
    
    From-SVN: r237855

commit 1297b4d85db4697dec1dac1d5e6e05ad0c2e0f50
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 29 15:15:25 2016 +0000

    backport: df-problems.c (df_note_bb_compute): Guard use of DF_INSN_INFO_GET.
    
            Backport from mainline
            2016-06-09  Eric Botcazou  <ebotcazou@adacore.com>
    
            * df-problems.c (df_note_bb_compute): Guard use of DF_INSN_INFO_GET.
    
    From-SVN: r237853

commit a45d0a54472ff37bae4059cd030a6ea2ca76bc20
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 29 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237835

commit 74e6989e5b2f6d57130bed10a2f86c25b21801bd
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 28 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237809

commit 6e420ee5558d847f14b53ae11ab53dee523c9b32
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Mon Jun 27 19:18:21 2016 +0000

    re PR fortran/70673 (ICE with module containing functions with allocatable character scalars)
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * frontend-passes.c (realloc_string_callback): Add a call to
            gfc_dep_compare_expr.
    
    2016-06-27  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/70673
            * gfortran.dg/pr70673.f90: New test.
    
    From-SVN: r237802

commit 7dafd9db04d5f4bb071126b1e8b93a21327aadd9
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Mon Jun 27 18:25:58 2016 +0000

    backport: stor-layout.c (layout_type): Move setting complex MODE to layout_type...
    
    [gcc]
    2016-06-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * stor-layout.c (layout_type): Move setting complex MODE to
            layout_type, instead of setting it ahead of time by the caller.
    
            Back port from trunk
            2016-05-11  Alan Modra  <amodra@gmail.com>
    
            * config/rs6000/rs6000.c (is_complex_IBM_long_double,
            abi_v4_pass_in_fpr): New functions.
            (rs6000_function_arg_boundary): Exclude complex IBM long double
            from 64-bit alignment when ABI_V4.
            (rs6000_function_arg, rs6000_function_arg_advance_1,
            rs6000_gimplify_va_arg): Use abi_v4_pass_in_fpr.
    
            Back port from trunk
            2016-05-02  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * machmode.h (mode_complex): Add support to give the complex mode
            for a given mode.
            (GET_MODE_COMPLEX_MODE): Likewise.
            * stor-layout.c (layout_type): For COMPLEX_TYPE, use the mode
            stored by build_complex_type and gfc_build_complex_type instead of
            trying to figure out the appropriate mode based on the size. Raise
            an assertion error, if the type was not set.
            * genmodes.c (struct mode_data): Add field for the complex type of
            the given type.
            (blank_mode): Likewise.
            (make_complex_modes): Remember the complex mode created in the
            base type.
            (emit_mode_complex): Write out the mode_complex array to map a
            type mode to the complex version.
            (emit_insn_modes_c): Likewise.
            * tree.c (build_complex_type): Set the complex type to use before
            calling layout_type.
            * config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal): Add
            support for __float128 complex datatypes.
            (rs6000_hard_regno_mode_ok): Likewise.
            (rs6000_setup_reg_addr_masks): Likewise.
            (rs6000_complex_function_value): Likewise.
            * config/rs6000/rs6000.h (FLOAT128_IEEE_P): Likewise.
            __float128 and __ibm128 complex.
            (FLOAT128_IBM_P): Likewise.
            (ALTIVEC_ARG_MAX_RETURN): Likewise.
            * doc/extend.texi (Additional Floating Types): Document that
            -mfloat128 must be used to enable __float128.  Document complex
            __float128 and __ibm128 support.
    
    [gcc/testsuite]
    2016-06-27  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-02  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/float128-complex-1.c: New tests for complex
            __float128.
            * gcc.target/powerpc/float128-complex-2.c: Likewise.
    
    From-SVN: r237801

commit 4cfa6df4691d65bf1cb2172abadba7e48155843a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 27 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237796

commit 2d7b1bafe2862b6a5ad1f826816ce1aa41a3f10f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 26 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237787

commit ac0379bf81e2aee01bee0ea6fbacc0a07bb522dc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 25 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r237778

commit de5b4c23262ca3ded6ccf652f457f4552c53975d
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 24 20:46:47 2016 +0200

    re PR tree-optimization/71647 (aligned(x:32) in #pragma omp simd does not work)
    
            PR tree-optimization/71647
            * omp-low.c (lower_rec_input_clauses): Convert
            omp_clause_aligned_alignment (c) to size_type_node for the
            last argument of __builtin_assume_aligned.
    
            * gcc.target/i386/pr71647.c: New test.
    
    From-SVN: r237770

commit 7eb95b304e6c9ae63f94048719b093690a5e9d64
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 24 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r237752

commit eb26df37e31d563141f2e4886a3e7afecc5de120
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 23 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237725

commit aed714977448f479fe5d2a738de859a0d809ccac
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed Jun 22 14:36:16 2016 +0000

    * gcc.dg/guality/param-5.c (clear_stack): Tweak.
    
    From-SVN: r237711

commit 364b3d673abf51805f370ef87b143ae510289be1
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed Jun 22 14:29:09 2016 +0000

    * gcc.dg/guality/param-5.c (clear_stack): Tweak.
    
    From-SVN: r237708

commit a80c5d11c3543548fbf93205b62f00a5c500e100
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 22 13:15:48 2016 +0000

    * function.c (assign_parm_setup_reg): Prevent sharing in another case.
    
    From-SVN: r237704

commit b07637dd12f4d333095454ad1d46e5466ee8f9b4
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 22 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237674

commit 81b363482dcf6a5fff84c8940872b6ff0af15450
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jun 21 10:39:59 2016 +0000

    backport: re PR target/30417 (Section .data cannot be moved with -mmcu=atmega88)
    
            Backport from 2016-06-21 trunk r237639.
            PR target/30417
            * config/avr/gen-avr-mmcu-specs.c (print_mcu):
            [*link_data_start]: Wrap -Tdata into %{!Tdata:...}.
            [*link_text_start]: Wrap -Ttext into %{!Ttext:...}.
    
    From-SVN: r237640

commit df78f368d7646d0047a9b739e2e1d95f6e764922
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Tue Jun 21 10:23:08 2016 +0000

    re PR target/71103 (avr-gcc crashes with unrecognizable insn error)
    
            PR target/71103
            * config/avr/avr.md (movqi): Only handle loading subreg:qi of
            constant addresses if can_create_pseudo_p.
    
    From-SVN: r237638

commit a48e893f0b43fec08cade0eff958ed9b25462f3f
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 21 09:15:36 2016 +0200

    re PR tree-optimization/71588 (ICE on valid code at -O2 and -O3 on x86_64-linux-gnu: in execute_todo, at passes.c:2009)
    
            PR tree-optimization/71588
            * tree-ssa-strlen.c (valid_builtin_call): New function.
            (adjust_last_stmt, handle_builtin_memset, strlen_optimize_stmt): Use
            it.
    
            * gcc.dg/pr71558.c: New test.
    
    From-SVN: r237633

commit a219950f129efff6ac5476aadfcc44ccf233edfc
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 21 09:13:52 2016 +0200

    backport: re PR middle-end/71581 (ICE on valid code on x86_64-linux-gnu with -Wuninitialized (Segmentation fault))
    
            Backported from mainline
            2016-06-20  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71581
            * tree-ssa-uninit.c (warn_uninit): If EXPR and VAR are NULL,
            see if T isn't anonymous SSA_NAME with COMPLEX_EXPR created
            for conversion of scalar user var to complex type and use the
            underlying SSA_NAME_VAR in that case.  If EXPR is still NULL,
            punt.
    
            * gcc.dg/pr71581.c: New test.
    
    From-SVN: r237632

commit d1d7f21773263dd4e1fd6c661a79d6cb75060ebb
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 21 09:11:10 2016 +0200

    backport: semantics.c (handle_omp_array_sections_1): Don't ICE when processing_template_decl when checking for bitfields and unions.
    
            Backported from mainline
            2016-06-17  Jakub Jelinek  <jakub@redhat.com>
    
            * semantics.c (handle_omp_array_sections_1): Don't ICE when
            processing_template_decl when checking for bitfields and unions.
            Look through REFERENCE_REF_P as base of COMPONENT_REF.
            (finish_omp_clauses): Look through REFERENCE_REF_P even for
            array sections with COMPONENT_REF bases.
    
            * testsuite/libgomp.c++/target-21.C: New test.
    
    From-SVN: r237631

commit 6178121335bcd3dfeb94931236bb6a154abb6823
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 21 09:09:57 2016 +0200

    backport: gimplify.c (gimplify_scan_omp_clauses): Handle COMPONENT_REFs with base of reference to struct.
    
            Backported from mainline
            2016-06-16  Jakub Jelinek  <jakub@redhat.com>
    
            * gimplify.c (gimplify_scan_omp_clauses): Handle COMPONENT_REFs
            with base of reference to struct.
    
            * parser.c (cp_parser_omp_var_list_no_open): Call
            convert_from_reference before cp_parser_postfix_dot_deref_expression.
            * semantics.c (finish_omp_clauses): Don't ICE when
            processing_template_decl when checking for bitfields and unions.
            Look through REFERENCE_REF_P as base of COMPONENT_REF.
    
            * testsuite/libgomp.c++/target-20.C: New test.
    
    From-SVN: r237630

commit 619eb42501bddf7ab59502a84ad11d0914e9c1df
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 21 09:02:59 2016 +0200

    backport: re PR c++/71528 (multiple extern reference declarations produce uninitialized access)
    
            Backported from mainline
            2016-06-14  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/71528
            * decl.c (duplicate_decls): For DECL_INITIALIZED_P non-external
            olddecl vars, preserve their TREE_READONLY bit.
    
            * g++.dg/opt/pr71528.C: New test.
    
    From-SVN: r237629

commit 39ac4d8179b7b4fe9b058c54d392dd86f46f29ea
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 21 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237625

commit 76065e811d6ac135d587dcbfc7ea531c3cee1eb1
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Mon Jun 20 11:35:02 2016 +0000

    backport: re PR middle-end/71529 ([CHKP] ICE in expand_expr_real_1)
    
    gcc/
    
            Backport from mainline r237484.
            2016-06-15  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/71529
            * ipa-chkp.c (chkp_build_instrumented_fndecl): Fix
            DECL_CONTEXT for copied arguments.
    
    gcc/testsuite/
    
            Backport from mainline r237484.
            2016-06-15  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/71529
            * gcc.target/i386/pr71529.C: New test.
    
    From-SVN: r237592

commit e8cade2aed818198bd25493e43a856c8aa267313
Author: Georg-Johann Lay <avr@gjlay.de>
Date:   Mon Jun 20 11:20:27 2016 +0000

    backport: re PR target/71103 (avr-gcc crashes with unrecognizable insn error)
    
    gcc/
            Backport from 2016-06-20 trunk r237589, r236558.
            PR target/71103
            * config/avr/avr.md (movqi): Handle loading subreg:qi (const,
            symbol_ref,label_ref).
    
    gcc/testsuite/
            Backport from 2016-06-20 trunk r237589, r236558.
            PR target/71103
            * gcc.target/avr/pr71103.c: New test.
            * gcc.target/avr/torture/pr71103-2.c: New test.
    
    
    Co-Authored-By: Pitchumani Sivanupandi <pitchumani.s@atmel.com>
    
    From-SVN: r237591

commit e11a3ac6f0f472ec4b70e51ccb070c4d245bdfaf
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 20 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237585

commit b1670cd015f8943f247ac202c4251562fd29ccf3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 19 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237578

commit bde49b57d1bdf5464ec74e4a515eb7609fe0faf6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 18 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r237569

commit 9b2964b8c29a017681f998035c5f12d9a4ed273a
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Fri Jun 17 19:53:46 2016 +0100

    libstdc++/71545 fix debug checks in binary search algorithms
    
            PR libstdc++/71545
            * include/bits/stl_algobase.h (lower_bound, lexicographical_compare):
            Remove irreflexive checks.
            * include/bits/stl_algo.h (lower_bound, upper_bound, equal_range,
            binary_search): Likewise.
            * testsuite/25_algorithms/equal_range/partitioned.cc: New test.
            * testsuite/25_algorithms/lexicographical_compare/71545.cc: New test.
            * testsuite/25_algorithms/lower_bound/partitioned.cc: New test.
            * testsuite/25_algorithms/upper_bound/partitioned.cc: New test.
            * testsuite/util/testsuite_iterators.h (__gnu_test::test_container):
            Add constructor from array.
    
    From-SVN: r237561

commit a93302e033492d6b8f9498c0d769b46af8dcb834
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 17 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237546

commit ec6f32c9eaf1ac5e55e8c93f050aaa5a86ad1353
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Thu Jun 16 16:27:24 2016 +0000

    backport: vsx-elemrev-2.c: Change effective target requirements, and disable for AIX for now.
    
    2016-06-16  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
            * gcc.target/powerpc/vsx-elemrev-2.c: Change effective target
            requirements, and disable for AIX for now.
            * gcc.target/powerpc/vsx-elemrev-4.c: Likewise.
    
    From-SVN: r237535

commit c6efe02d559d457503976c3497bdf196293e39bd
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 16 12:21:43 2016 +0200

    re PR target/71554 (Miscompilation of __builtin_mul_overflow on i686)
    
            PR target/71554
            * gcc.c-torture/execute/pr71554.c: New test.
    
    From-SVN: r237513

commit 5b3fccbbbc013f806a26f04953fe4e5526ff8724
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 16 11:29:24 2016 +0200

    i386.md (setcc + movzbl peephole2): Use reg_set_p.
    
            * config/i386/i386.md (setcc + movzbl peephole2): Use reg_set_p.
            (setcc + and peephole2): Likewise.
    
    From-SVN: r237505

commit 49f3ca3a7757fe402c244ceefe916e8830fd4cb1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 16 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237501

commit 4ba72e5e1c3ea3815f79fc9768e98aed11f0b214
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Wed Jun 15 21:17:15 2016 +0200

    backport: freebsd.h: Only enable unaligned access for armv6 on FreeBSD 11 and above.
    
    2016-06-15  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backported from mainline
        2016-06-14  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config/arm/freebsd.h: Only enable unaligned access for armv6 on
        FreeBSD 11 and above.
    
    From-SVN: r237493

commit 6493bf3113bba7dd9f20916bd936ea2a5c320b3c
Author: David Edelsohn <dje.gcc@gmail.com>
Date:   Wed Jun 15 14:32:35 2016 +0000

    backport: inclhack.def (aix_stdlib_malloc): New fix.
    
    2016-06-15  David Edelsohn  <dje.gcc@gmail.com>
    
            Backport from mainline
            2016-06-13  David Edelsohn  <dje.gcc@gmail.com>
    
            * inclhack.def (aix_stdlib_malloc): New fix.
            (aix_stdlib_realloc): New fix.
            (aix_stdlib_calloc): New fix.
            (aix_stdlib_valloc): New fix.
            * fixincl.x: Regenerate.
            * tests/base/stdlib.h [AIX_STDLIB_MALLOC]: New test.
            [AIX_STDLIB_REALLOC]: New test.
            [AIX_STDLIB_CALLOC]: New test.
            [AIX_STDLIB_VALLOC]: New test.
    
    From-SVN: r237478

commit a9dbd7264d1d176b3effd48934db3a57edc2c55b
Author: Ilya Verbin <ilya.verbin@intel.com>
Date:   Wed Jun 15 11:12:40 2016 +0000

    backport: darwin.h (LINK_COMMAND_SPEC_A): Handle -fcilkplus.
    
            Backport from mainline
            2016-04-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            * config/darwin.h (LINK_COMMAND_SPEC_A): Handle -fcilkplus.
    
    From-SVN: r237477

commit 8942e15e790f642553aca40bb013985489f1d6f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 15 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237469

commit e0476129718a11fbc78a56770bd3e9af9f1e0209
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Tue Jun 14 20:55:08 2016 +0000

    re PR c++/70572 (ICE on code with decltype (auto) in digest_init_r, at cp/typeck2.c:1103 with -std=c++14)
    
    /cp
    2016-06-14  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70572
            * decl.c (cp_finish_decl): Check do_auto_deduction return value
            and return immediately in case of erroneous code.
    
    /testsuite
    2016-06-14  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70572
            * g++.dg/cpp1y/auto-fn31.C: New.
    
    From-SVN: r237460

commit 2766e7af710eb94547dbc30136c4f9aa1ba7a2a6
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 14 16:47:17 2016 +0200

    re PR c++/71516 (ICE on invalid C++ code (invalid use of forward declared type) on x86_64-linux-gnu: Segmentation fault (program cc1plus))
    
            PR c++/71516
            * decl.c (complete_vars): Handle gracefully type == error_mark_node.
    
            * g++.dg/init/pr71516.C: New test.
    
    From-SVN: r237450

commit e2d27415e46f3e572cb412116bdab7836f6f617e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 14 16:45:23 2016 +0200

    backport: re PR middle-end/71494 (label as value in nested function)
    
            Backported from mainline
            2016-06-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/71494
            * tree-nested.c (convert_nonlocal_reference_stmt): For GIMPLE_GOTO
            without LABEL_DECL, set *handled_ops_p to false instead of true.
    
            * gcc.c-torture/execute/pr71494.c: New test.
    
    From-SVN: r237449

commit 2267bd7d5bed6224309670282c012ff3edb3e81c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 14 16:44:28 2016 +0200

    backport: re PR c/68657 ("gcc -Werror=sign-conversion test.i" shows invalid: -Wsign-conversion is not an option that controls warnings)
    
            Backported from mainline
            2016-06-10  Jakub Jelinek  <jakub@redhat.com>
    
            PR c/68657
            * c.opt (Wpsabi): Add Warning flag.
    
            * gcc.target/i386/pr68657.c: New test.
    
    From-SVN: r237448

commit 9e36d02691b05944124ef9c70cd5983f6bb61d7c
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 14 16:43:42 2016 +0200

    backport: re PR c++/71448 (pointer relational comparison fails inside constant expression)
    
            Backported from mainline
            2016-06-08  Jakub Jelinek  <jakub@redhat.com>
                        Richard Biener  <rguenther@suse.de>
    
            PR c++/71448
            * fold-const.c (fold_comparison): Handle CONSTANT_CLASS_P (base0)
            the same as DECL_P (base0) for indirect_base0.  Use equality_code
            in one further place.
    
            * g++.dg/torture/pr71448.C: New test.
    
    From-SVN: r237447

commit 5aaf794cdd91e5cc17ea7aedc875752f7c91d76e
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Jun 14 16:42:46 2016 +0200

    backport: re PR tree-optimization/71405 (ICE on valid C++ code at -Os and above on x86_64-linux-gnu: verify_gimple failed)
    
            Backported from mainline
            2016-06-04  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/71405
            * tree-ssa.c (execute_update_addresses_taken): For clobber with
            incompatible type, build a new clobber with the right type instead
            of building a VIEW_CONVERT_EXPR around it.
    
            * g++.dg/torture/pr71405.C: New test.
    
    From-SVN: r237446

commit ee6da6299e4280cdf0c8b6fa8a637dc19f230505
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 14 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r237422

commit 18b8dbe23714fd20dbe951ee8ef0a8edff7e54f0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 13 23:08:36 2016 +0200

    re PR sanitizer/71498 (ubsan bounds checking influenced by surrounding code)
    
            PR sanitizer/71498
            * c-gimplify.c (ubsan_walk_array_refs_r): Set *walk_subtrees = 0 on
            all BIND_EXPRs, and on all BIND_EXPRs recurse also on BIND_EXPR_BODY.
    
            * c-c++-common/ubsan/bounds-13.c: New test.
    
    From-SVN: r237412

commit b5402646714fd4aaee547b3c9156349b8c2cb867
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 13 17:44:29 2016 +0000

    tree-ssa-sccvn.c (vn_reference_lookup_3): Use a uniform test and update shared_lookup_references only once after changing...
    
            * tree-ssa-sccvn.c (vn_reference_lookup_3): Use a uniform test and
            update shared_lookup_references only once after changing operands.
    
    From-SVN: r237389

commit 0c15cd603ea5231d87db17075dfc0f348ce8edad
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Jun 13 10:25:26 2016 +0000

    re PR tree-optimization/71505 (-O3 internal compiler error in vect_analyze_data_ref_accesses, at tree-vect-data-refs.c:2596)
    
    2016-06-13  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/71505
            * tree-vect-data-refs.c (vect_analyze_data_ref_accesses): Make
            assert match comment.
    
    From-SVN: r237372

commit d11b72e0d67122ecb2f421975cfcf938860c403b
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Mon Jun 13 08:50:38 2016 +0000

    S/390: Fix MAX_ARGS value.
    
    Committed to GCC 5 and mainline branches.
    
    gcc/ChangeLog:
    
    2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-06-13  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/71379
            * config/s390/s390.c (s390_expand_builtin): Increase MAX_ARGS by
            one.
    
    From-SVN: r237366

commit fdee2ff7587f5759e13827d085248289dba0ef1d
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 13 08:02:10 2016 +0000

    decl.c (gnat_to_gnu_entity): Deal with PLUS_EXPR in the expression of a renaming.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Deal with
            PLUS_EXPR in the expression of a renaming.
    
    From-SVN: r237361

commit f6e06468ec6daab425738e0dcb2bbb36bb042109
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Mon Jun 13 08:57:52 2016 +0100

    generate_libstdcxx_web_docs: Use realpath to get absolute path.
    
            * generate_libstdcxx_web_docs: Use realpath to get absolute path.
    
            Add comment about LaTeX errors.
    
    From-SVN: r237359

commit ce3c682d0c45d112012a4e74bb02834b3ff3ff58
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 13 00:16:12 2016 +0000

    Daily bump.
    
    From-SVN: r237348

commit a94df902975c4a8b30ee329a563d6a7e170ba0f3
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Sun Jun 12 16:04:08 2016 +0200

    re PR fortran/60751 (Extra comma in WRITE statement not diagnosed)
    
    2016-06-12  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            PR fortran/60751
            * io.c (gfc_resolve_dt): Replace GFC_STD_GNU with GFC_STD_LEGACY.
    
            * gfortran.dg/comma_IO_extension_1.f90: New test.
            * gfortran.dg/comma_IO_extension_2.f90: Likewise.
            * gfortran.dg/array_constructor_49.f90: Remove extra comma in WRITE
            statement.
            * gfortran.dg/graphite/pr38083.f90: Likewise.
            * gfortran.dg/guality/pr41558.f90: Likewise.
            * gfortran.dg/integer_exponentiation_6.F90: Likewise and add
            missing format.
    
    From-SVN: r237337

commit f6790ac4332cc0fc8725ab03305ebf348c3d5add
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 12 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237335

commit a0a8789e1ae15dab10cc0c1f7a272d7197f9e24f
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Sat Jun 11 11:55:51 2016 +0000

    * gcc-interface/trans.c (Case_Statement_to_gnu): Deal with characters.
    
    From-SVN: r237327

commit 5500be397b4f769191a1001f879c34136a6597a1
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Sat Jun 11 11:24:14 2016 +0000

    decl.c (gnat_to_gnu_entity): Do not clobber gnat_entity_name with temporary names for XUP and XUT types.
    
            * gcc-interface/decl.c (gnat_to_gnu_entity): Do not clobber
            gnat_entity_name with temporary names for XUP and XUT types.
    
    From-SVN: r237325

commit 170fa4b304ca7fcc73c2407ffbc7e95aef2af68e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 11 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r237322

commit cc5a67c246f6a7089cd04621615b1e90e934f338
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Fri Jun 10 11:46:18 2016 +0200

    [PR middle-end/71373] Handle more OMP_CLAUSE_* in nested function decomposition
    
    Backport trunk r237291:
    
            gcc/
            * gimplify.c (gimplify_adjust_omp_clauses): Discard
            OMP_CLAUSE_TILE.
            * omp-low.c (scan_sharing_clauses): Don't expect OMP_CLAUSE_TILE.
            gcc/testsuite/
            * c-c++-common/goacc/combined-directives.c: XFAIL tree scanning
            for OpenACC tile clauses.
            * gfortran.dg/goacc/combined-directives.f90: Likewise.
    
            gcc/
            PR middle-end/71373
            * tree-nested.c (convert_nonlocal_omp_clauses)
            (convert_local_omp_clauses): Handle OMP_CLAUSE_ASYNC,
            OMP_CLAUSE_WAIT, OMP_CLAUSE_INDEPENDENT, OMP_CLAUSE_AUTO,
            OMP_CLAUSE__CACHE_, OMP_CLAUSE_TILE.
            gcc/testsuite/
            PR middle-end/71373
            * gcc.dg/goacc/nested-function-1.c: New file.
            * gcc.dg/goacc/nested-function-2.c: Likewise.
            * gcc.dg/goacc/pr71373.c: Likewise.
            * gfortran.dg/goacc/cray-2.f95: Likewise.
            * gfortran.dg/goacc/loop-1-2.f95: Likewise.
            * gfortran.dg/goacc/loop-3-2.f95: Likewise.
            * gfortran.dg/goacc/cray.f95: Update.
            * gfortran.dg/goacc/loop-1.f95: Likewise.
            * gfortran.dg/goacc/loop-3.f95: Likewise.
            * gfortran.dg/goacc/subroutines.f90: Update, and rename to...
            * gfortran.dg/goacc/nested-function-1.f90: ... this new file.
            libgomp/testsuite/
            PR middle-end/71373
            * libgomp.oacc-c/nested-function-1.c: New file.
            * libgomp.oacc-c/nested-function-2.c: Likewise.
            * libgomp.oacc-fortran/nested-function-1.f90: Likewise.
            * libgomp.oacc-fortran/nested-function-2.f90: Likewise.
            * libgomp.oacc-fortran/nested-function-3.f90: Likewise.
    
    From-SVN: r237296

commit ea533e57623112924efee2072c34de68e9e0bc66
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Fri Jun 10 11:46:04 2016 +0200

    [PR c/71381] C/C++ OpenACC cache directive rejects valid syntax
    
    Backport trunk r237290:
    
            gcc/c/
            PR c/71381
            * c-parser.c (c_parser_omp_variable_list) <OMP_CLAUSE__CACHE_>:
            Loosen checking.
            gcc/cp/
            PR c/71381
            * parser.c (cp_parser_omp_var_list_no_open) <OMP_CLAUSE__CACHE_>:
            Loosen checking.
            gcc/fortran/
            PR c/71381
            * openmp.c (gfc_match_oacc_cache): Add comment.
            gcc/testsuite/
            PR c/71381
            * c-c++-common/goacc/cache-1.c: Update.  Move invalid usage tests
            to...
            * c-c++-common/goacc/cache-2.c: ... this new file.
            * gfortran.dg/goacc/cache-1.f95: Move invalid usage tests to...
            * gfortran.dg/goacc/cache-2.f95: ... this new file.
            * gfortran.dg/goacc/coarray.f95: Update OpenACC cache directive
            usage.
            * gfortran.dg/goacc/cray.f95: Likewise.
            * gfortran.dg/goacc/loop-1.f95: Likewise.
            libgomp/
            PR c/71381
            * testsuite/libgomp.oacc-c-c++-common/cache-1.c: #include
            "../../../gcc/testsuite/c-c++-common/goacc/cache-1.c".
            * testsuite/libgomp.oacc-fortran/cache-1.f95: New file.
    
            gcc/
            * omp-low.c (scan_sharing_clauses): Don't expect
            OMP_CLAUSE__CACHE_.
    
    From-SVN: r237295

commit 06682f7d7fa804a1e1300bb898d5c5155fdb3604
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Fri Jun 10 11:45:51 2016 +0200

    tail merge ICE
    
    Backport trunk r235964:
    
            gcc/
            * gimple.c (gimple_call_same_target_p): Unique functions are eq.
            * tree-ssa-tail-merge.c (same_succ::equal): Check pointer eq
            equality first.
    
    From-SVN: r237294

commit accc6eb28ade43632963d8e2f032d67ead816ece
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Fri Jun 10 09:31:37 2016 +0000

    backport: mpx_wrappers.c (move_bounds): Fix overflow bug.
    
    libmpx/
    
    2016-06-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            Backport from mainline r237292.
            2016-06-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            * mpxwrap/mpx_wrappers.c (move_bounds): Fix overflow bug.
    
    From-SVN: r237293

commit 20cdeb52dd3aa5fbd2654b1b2ea35e4a02194473
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 10 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r237284

commit ac8a68da4c75ed8cccaf02cc80a5e9360102b92e
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jun 9 23:28:23 2016 +0000

    backport: re PR target/71186 (PowerPC64: Autovectorised code hits ICE with -O3 -mpower9 -mlra)
    
    [gcc]
    2016-06-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-31  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/vsx.md (vsx_splat_<mode>, V2DI/V2DF): Simplify
            alternatives, eliminating preferred register class.  Add support
            for the MTVSRDD instruction in ISA 3.0.
            (vsx_splat_v4si_internal): Use splat_input_operand instead of
            reg_or_indexed_operand.
            (vsx_splat_v4sf_internal): Likewise.
    
            Back port from trunk
            2016-05-31  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71186
            * config/rs6000/vsx.md (xxspltib_<mode>_nosplit): Add alternatives
            for loading up all 0's or all 1's.
    
            Back port from trunk
            2016-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/70915
            * config/rs6000/constraints.md (wE constraint): New constraint
            for a vector constant that can be loaded with XXSPLTIB.
            (wM constraint): New constraint for a vector constant of a 1's.
            (wS constraint): New constraint for a vector constant that can be
            loaded with XXSPLTIB and a vector sign extend instruction.
            * config/rs6000/predicates.md (xxspltib_constant_split): New
            predicates for wE/wS constraints.
            (xxspltib_constant_nosplit): Likewise.
            (easy_vector_constant): Add support for constants that can be
            loaded via XXSPLTIB.
            (splat_input_operand): Add support for ISA 3.0 word splat operations.
            * config/rs6000/rs6000.c (xxspltib_constant_p): New function to
            return if a constant can be loaded with the ISA 3.0 XXSPLTIB
            instruction and possibly with a sign extension.
            (output_vec_const_move): Add support for XXSPLTIB. If we are
            loading up 0/-1 into Altivec registers, prefer using VSPLTISW
            instead of XXLXOR/XXLORC.
            (rs6000_expand_vector_init): Add support for ISA 3.0 word splat
            operations.
            (rs6000_legitimize_reload_address): Likewise.
            (rs6000_output_move_128bit): Use output_vec_const_move to emit
            constants.
            * config/rs6000/vsx.md (VSX_M): Add TImode (if -mvsx-timode) and
            combine VSX_M and VSX_M2 into one iterator.
            (VSX_M2): Likewise.
            (VSINT_84): New iterators for loading constants with XXSPLTIB.
            (VSINT_842): Likewise.
            (UNSPEC_VSX_SIGN_EXTEND): New UNSPEC.
            (xxspltib_v16qi): New insns to load up constants with the ISA 3.0
            XXSPLTIB instruction.
            (xxspltib_<mode>_nosplit): Likewise.
            (xxspltib_<mode>_split): New insn to load up constants with
            XXSPLTIB and a sign extend instruction.
            (vsx_mov<mode>): Replace single move that handled all vector types
            with separate 32-bit and 64-bit moves.  Combine the movti_<bit>
            moves (when -mvsx-timode is in effect) into the main vector
            moves.  Eliminate separate moves for <VSr> <VSa>, where the
            preferred register class (<VSr>) is listed first, and the
            secondary register class (<VSa>) is listed second with a '?' to
            discourage use.  Prefer loading 0/-1 in any VSX register for ISA
            3.0, and Altivec registers for ISA 2.06/2.07 (PR target/70915) so
            that if the register was involved in a slow operation, the
            clear/set operation does not wait for the slow operation to
            finish.  Adjust the length attributes for 32-bit mode.  Use
            rs6000_output_move_128bit and drop the use of the string
            instructions for 32-bit movti when -mvsx-timode is in effect.  Use
            spacing so that the alternatives and attributes don't generate
            long lines, and put things in columns, so that it is easier to
            match up the operands and attributes with the insn alternatives.
            (vsx_mov<mode>_64bit): Likewise.
            (vsx_mov<mode>_32bit): Likewise.
            (vsx_movti_64bit): Fold movti into normal vector moves.
            (vsx_movti_32bit): Likewise.
            (vsx_splat_<mode>, V4SI/V4SF modes): Add support for ISA 3.0 word
            splat instructions.
            (vsx_splat_v4si_internal): Likewise.
            (vsx_splat_v4sf_internal): Likewise.
            (vector fusion peepholes): Use VSX_M instead of VSX_M2.
            (vsx_sign_extend_qi_<mode>): New ISA 3.0 instructions to sign
            extend vector elements.
            (vsx_sign_extend_hi_<mode>): Likewise.
            (vsx_sign_extend_si_v2di): Likewise.
            * config/rs6000/rs6000-protos.h (xxspltib_constant_p): Add
            declaration.
            * doc/md.texi (PowerPC constraints): Document the wE, wM, and wS
            constraints.  Add trailing period to wL documentation.
    
    [gcc/testsuite]
    2016-06-09  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-31  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p9-splat-4.c: New test.
    
            Back port from trunk
            2016-05-31  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71186
            * gcc.target/powerpc/pr71186.c: New test.
    
            Back port from trunk
            2016-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p9-splat-1.c: New tests for ISA 3.0 word
            splat operations and the XXSPLTIB instruction.
            * gcc.target/powerpc/p9-splat-2.c: Likewise.
            * gcc.target/powerpc/p9-splat-3.c: Likewise.
            * gcc.target/powerpc/pr47755.c: Allow vspltisw in addition to
            xxlxor to clear a register.
    
    From-SVN: r237281

commit b5d14410717d080bedfb07a786364175d17806b9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 9 00:17:04 2016 +0000

    Daily bump.
    
    From-SVN: r237247

commit 61aed6ee6bdb93f7d6c6daa52faada3b48991f5e
Author: Jose E. Marchesi <jose.marchesi@oracle.com>
Date:   Wed Jun 8 21:13:37 2016 +0200

    backport: driver-sparc.c (cpu_names): Fix the entry for the SPARC-M7 and add an entry for SPARC-S7 cpus (Sonoma).
    
            Backport from mainline
            2016-06-08  Jose E. Marchesi  <jose.marchesi@oracle.com>
    
            * config/sparc/driver-sparc.c (cpu_names): Fix the entry for the
            SPARC-M7 and add an entry for SPARC-S7 cpus (Sonoma).
    
    From-SVN: r237239

commit edc110ccc339065509f49f111dd30efd7fe078f1
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 8 20:00:30 2016 +0200

    re PR c++/71442 (r232569 breaks -Wunused-*)
    
            PR c++/71442
            * pt.c (tsubst_copy): Only set TREE_USED on DECLs.
    
            * g++.dg/cpp0x/Wunused-variable-1.C: New test.
    
    From-SVN: r237233

commit c0c277d7b6f0934528cff1afd82864cfd151b040
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 8 13:34:25 2016 +0000

    backport: sparc.md (cpu): Add niagara7 cpu type.
    
            Backport from mainline
            2016-06-06  Jose E. Marchesi  <jose.marchesi@oracle.com>
    
            * config/sparc/sparc.md (cpu): Add niagara7 cpu type.
            Include the M7 SPARC DFA scheduler.
            New attribute v3pipe.
            Annotate insns with v3pipe where appropriate.
            Define cpu_feature vis4.
            Add lzd instruction type and set it on clzdi_sp64 and clzsi_sp64.
            Add (V8QI "8") to vbits.
            Add insns {add,sub}v8qi3
            Add insns ss{add,sub}v8qi3
            Add insns us{add,sub}{v8qi,v4hi}3
            Add insns {min,max}{v8qi,v4hi,v2si}3
            Add insns {minu,maxu}{v8qi,v4hi,v2si}3
            Add insns fpcmp{le,gt,ule,ug,ule,ugt}{8,16,32}_vis.
            * config/sparc/niagara4.md: Add a comment explaining the
            discrepancy between the documented latenty numbers and the
            implemented ones.
            * config/sparc/niagara7.md: New file.
            * configure.ac (HAVE_AS_SPARC5_VIS4): Define if the assembler
            supports SPARC5 and VIS 4.0 instructions.
            * configure: Regenerate.
            * config.in: Likewise.
            * config.gcc: niagara7 is a supported cpu in sparc*-*-* targets.
            * config/sparc/sol2.h (ASM_CPU32_DEFAUILT_SPEC): Set for
            TARGET_CPU_niagara7.
            (ASM_CPU64_DEFAULT_SPEC): Likewise.
            (CPP_CPU_SPEC): Handle niagara7.
            (ASM_CPU_SPEC): Likewise.
            * config/sparc/sparc-opts.h (processor_type): Add
            PROCESSOR_NIAGARA7.
            (mvis4): New option.
            * config/sparc/sparc.h (TARGET_CPU_niagara7): Define.
            (AS_NIAGARA7_FLAG): Define.
            (ASM_CPU64_DEFAULT_SPEC): Set for niagara7.
            (CPP_CPU64_DEFAULT_SPEC): Likewise.
            (CPP_CPU_SPEC): Handle niagara7.
            (ASM_CPU_SPEC): Likewise.
            * config/sparc/sparc.c (niagara7_costs): Define.
            (sparc_option_override): Handle niagara7 and adjust cache-related
            parameters with better values for niagara cpus.  Also support VIS4.
            (sparc32_initialize_trampoline): Likewise.
            (sparc_use_sched_lookahead): Likewise.
            (sparc_issue_rate): Likewise.
            (sparc_register_move_cost): Likewise.
            (dump_target_flag_bits): Support VIS4.
            (sparc_vis_init_builtins): Likewise.
            (sparc_builtins): Likewise.
            * config/sparc/sparc-c.c (sparc_target_macros): Define __VIS__ for
            VIS4 4.0.
            * config/sparc/driver-sparc.c (cpu_names): Add SPARC-M7 and
            UltraSparc M7.
            * config/sparc/sparc.opt (sparc_processor_type): New value
            niagara7.
            * config/sparc/visintrin.h (__attribute__): Prototypes for the
            VIS4 builtins.
            * doc/invoke.texi (SPARC Options): Document -mcpu=niagara7 and
            -mvis4.
            * doc/extend.texi (SPARC VIS Built-in Functions): Document the
            VIS4 builtins.
    
            2016-05-30  Jose E. Marchesi  <jose.marchesi@oracle.com>
    
            * config.gcc (sparc*-*-*): Support cpu_32, cpu_64, tune_32 and
            tune_64.
            * doc/install.texi (--with-cpu-32, --with-cpu-64): Document
            support on SPARC.
            * config/sparc/linux64.h (OPTION_DEFAULT_SPECS): Add entries for
            cpu_32, cpu_64, tune_32 and tune_64.
            * config/sparc/sol2.h (OPTION_DEFAULT_SPECS): Likewise.
    
    From-SVN: r237217

commit 6508f0ee38ff1a690263c780f97c525148806bfc
Author: Ilya Verbin <ilya.verbin@intel.com>
Date:   Wed Jun 8 13:06:24 2016 +0000

    backport: i386-builtin-types.def: Add V16SI_FTYPE_V16SF...
    
            Backport from mainline
            2016-05-25  Ilya Verbin  <ilya.verbin@intel.com>
    gcc/
            * config/i386/i386-builtin-types.def: Add V16SI_FTYPE_V16SF,
            V8DF_FTYPE_V8DF_ROUND, V16SF_FTYPE_V16SF_ROUND, V16SI_FTYPE_V16SF_ROUND.
            * config/i386/i386.c (enum ix86_builtins): Add
            IX86_BUILTIN_CVTPS2DQ512_MASK, IX86_BUILTIN_FLOORPS512,
            IX86_BUILTIN_FLOORPD512, IX86_BUILTIN_CEILPS512, IX86_BUILTIN_CEILPD512,
            IX86_BUILTIN_TRUNCPS512, IX86_BUILTIN_TRUNCPD512,
            IX86_BUILTIN_CVTPS2DQ512, IX86_BUILTIN_VEC_PACK_SFIX512,
            IX86_BUILTIN_FLOORPS_SFIX512, IX86_BUILTIN_CEILPS_SFIX512,
            IX86_BUILTIN_ROUNDPS_AZ_SFIX512.
            (builtin_description bdesc_args): Add __builtin_ia32_floorps512,
            __builtin_ia32_ceilps512, __builtin_ia32_truncps512,
            __builtin_ia32_floorpd512, __builtin_ia32_ceilpd512,
            __builtin_ia32_truncpd512, __builtin_ia32_cvtps2dq512,
            __builtin_ia32_vec_pack_sfix512, __builtin_ia32_roundps_az_sfix512,
            __builtin_ia32_floorps_sfix512, __builtin_ia32_ceilps_sfix512.
            Change IX86_BUILTIN_CVTPS2DQ512 to IX86_BUILTIN_CVTPS2DQ512_MASK for
            __builtin_ia32_cvtps2dq512_mask.
            (ix86_expand_args_builtin): Handle V8DF_FTYPE_V8DF_ROUND,
            V16SF_FTYPE_V16SF_ROUND, V16SI_FTYPE_V16SF_ROUND, V16SI_FTYPE_V16SF.
            (ix86_builtin_vectorized_function): Handle builtins mentioned above.
            * config/i386/sse.md
            (<mask_codefor>avx512f_fix_notruncv16sfv16si<mask_name><round_name>):
            Rename to ...
            (avx512f_fix_notruncv16sfv16si<mask_name><round_name>): ... this.
            (<mask_codefor>avx512f_cvtpd2dq512<mask_name><round_name>): Rename
            to ...
            (avx512f_cvtpd2dq512<mask_name><round_name>): ... this.
            (avx512f_vec_pack_sfix_v8df): New define_expand.
            (avx512f_roundpd512): Rename to ...
            (avx512f_round<castmode>512): ... this.  Change iterator.
            (avx512f_roundps512_sfix): New define_expand.
            (round<mode>2_sfix): Change iterator.
    gcc/testsuite/
            * gcc.target/i386/avx512f-ceil-vec-1.c: New test.
            * gcc.target/i386/avx512f-ceil-vec-2.c: New test.
            * gcc.target/i386/avx512f-ceilf-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-ceilf-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-ceilf-vec-1.c: New test.
            * gcc.target/i386/avx512f-ceilf-vec-2.c: New test.
            * gcc.target/i386/avx512f-floor-vec-1.c: New test.
            * gcc.target/i386/avx512f-floor-vec-2.c: New test.
            * gcc.target/i386/avx512f-floorf-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-floorf-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-floorf-vec-1.c: New test.
            * gcc.target/i386/avx512f-floorf-vec-2.c: New test.
            * gcc.target/i386/avx512f-rint-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-rint-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-rintf-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-rintf-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-round-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-round-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-roundf-sfix-vec-1.c: New test.
            * gcc.target/i386/avx512f-roundf-sfix-vec-2.c: New test.
            * gcc.target/i386/avx512f-trunc-vec-1.c: New test.
            * gcc.target/i386/avx512f-trunc-vec-2.c: New test.
            * gcc.target/i386/avx512f-truncf-vec-1.c: New test.
            * gcc.target/i386/avx512f-truncf-vec-2.c: New test.
    
    From-SVN: r237213

commit f602035987eafe026b2715187b236d06b5be427d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 8 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237193

commit fc840fb6a3432d339b24b7af57d71354e8bb2f70
Author: Peter Bergner <bergner@vnet.ibm.com>
Date:   Tue Jun 7 16:53:29 2016 -0500

    backport: invoke.texi (RS/6000 and PowerPC Options): Document -mhtm and -mno-htm.
    
            Backport from mainline
            2016-06-07  Peter Bergner  <bergner@vnet.ibm.com>
    
            * doc/invoke.texi (RS/6000 and PowerPC Options): Document -mhtm and
            -mno-htm.
    
    From-SVN: r237189

commit 8f33b98839e6e92ae78134450ea7ae3a3bdb1d29
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Tue Jun 7 17:16:44 2016 +0200

    re PR target/71389 (ICE on trunk gcc on ivybridge target (df_refs_verify))
    
            PR target/71389
            * config/i386/i386.c (ix86_avx256_split_vector_move_misalign):
            Copy op1 RTX to avoid invalid sharing.
            (ix86_expand_vector_move_misalign): Ditto.
    
    testsuite/ChangeLog:
    
            PR target/71389
            * g++.dg/pr71389.C: New test.
    
    From-SVN: r237177

commit e9cdf4826769535f1b647a3e67345134eebf13fb
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Jun 7 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r237161

commit 6f3c47988c22ab2cadebdb18ad4ad2709f487ded
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 6 22:11:54 2016 +0200

    re PR c++/70847 (exponential time in cp_fold for chained virtual function calls)
    
            PR c++/70847
            PR c++/71330
            PR c++/71393
            * cp-gimplify.c (cp_fold_r): Set *walk_subtrees = 0 and return NULL
            right after cp_fold call if cp_fold has returned the same stmt
            already in some earlier cp_fold_r call.
            (cp_fold_function): Add pset automatic variable, pass its address
            to cp_walk_tree.
    
            * g++.dg/opt/pr70847.C: New test.
            * g++.dg/ubsan/pr70847.C: New test.
            * g++.dg/ubsan/pr71393.C: New test.
    
    Co-Authored-By: Patrick Palka <ppalka@gcc.gnu.org>
    
    From-SVN: r237152

commit cac6ca174193543e7638c0608140993f96960cb5
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon Jun 6 20:47:33 2016 +0200

    re PR tree-optimization/71259 (GCC trunk emits wrong code)
    
            PR tree-optimization/71259
            * tree-vect-slp.c (vect_get_constant_vectors): For
            VECTOR_BOOLEAN_TYPE_P, return all ones constant instead of
            one for constant op, and use COND_EXPR for non-constant.
    
            * gcc.dg/vect/pr71259.c: New test.
    
    From-SVN: r237148

commit f4b16f05ff348fa762ef130196582b939dcb26ca
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Jun 6 18:39:27 2016 +0100

    * fr.po: Update.
    
    From-SVN: r237146

commit 34bf95a78d5244b1e68df6e499e569737781668f
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Mon Jun 6 14:39:21 2016 +0000

    Fix fallout from: [ARM] PR target/70830: Avoid POP-{reglist}^ when returning from interrupt handlers
    
            Backport from trunk
            2016-06-02  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70830
            * config/arm/arm.c (arm_output_multireg_pop): Guard "pop" on update.
    
    From-SVN: r237134

commit ea16b20074d4cbf99699912d7ef49beff0157ec1
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 6 09:51:43 2016 +0000

    utils.c (gnat_internal_attribute_table): Add support for noinline and noclone attributes.
    
            * gcc-interface/utils.c (gnat_internal_attribute_table): Add support
            for noinline and noclone attributes.
            (handle_noinline_attribute): New handler.
            (handle_noclone_attribute): Likewise.
    
    From-SVN: r237128

commit 179af04fd6bc65c8c2518b8f616bcb964d49c694
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon Jun 6 09:43:59 2016 +0000

    utils2.c (build_call_alloc_dealloc): Do not substitute placeholder expressions here but...
    
            * gcc-interface/utils2.c (build_call_alloc_dealloc): Do not substitute
            placeholder expressions here but...
            * gcc-interface/trans.c (gnat_to_gnu) <N_Free_Statement>: ...here.
            Make an exception to the protection of a CALL_EXPR result with an
            unconstrained type only in the same cases as Call_to_gnu.
    
    From-SVN: r237124

commit 3d73ae4aa394c9afdf5da3e0d93033ed8759e497
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Jun 6 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r237114

commit f30d5c931daa43ef99b07e2926fe57e920be7f4b
Author: Andre Vehreschild <vehre@gcc.gnu.org>
Date:   Sun Jun 5 20:09:27 2016 +0200

    re PR fortran/69659 (ICE on using option -frepack-arrays, in gfc_conv_descriptor_data_get)
    
    gcc/testsuite/ChangeLog:
    
    2016-06-05  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/69659
            * gfortran.dg/class_array_22.f03: New test.
    
    
    gcc/fortran/ChangeLog:
    
    2016-06-05  Andre Vehreschild  <vehre@gcc.gnu.org>
    
            PR fortran/69659
            * trans-array.c (gfc_trans_dummy_array_bias): For class arrays use
            the address of the _data component to reference the arrays data
            component.
    
    From-SVN: r237107

commit f98838369a740ed354e9c66351bb3ee2d59b19b2
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Sun Jun 5 17:45:44 2016 +0200

    backport: re PR target/67310 ([PATCH] gcc 4.8.4 fails to compile with -march=native on VIA nano CPU)
    
            Backport from mainline
            2016-06-01  Uros Bizjak  <ubizjak@gmail.com>
                        Jocelyn Mayer  <l_indien@magic.fr>
    
            PR target/67310
            * config/i386/driver-i386.c (host_detect_local_cpu): Correctly
            detect processor family for signature_CENTAUR_ebx.
            <case PROCESSOR_I486>: Pass c3, winchip2 or winchip-c6 for
            signature_CENTAUR_ebx.
            <case PROCESSOR _PENTIUMPRO>: Pass c3-2 for signature_CENTAUR_ebx.
            <default>: Pass x86-64 for has_longmode.
    
    From-SVN: r237099

commit 8f9905e4eec0833ccebf9377ed49faa143cdd79a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Jun 5 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r237096

commit e6e4b9078ec2ec86d6a972753979c472ab481fa8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Jun 4 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237086

commit 20793c87cec87443b50af3c7fa27ed21e4394552
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Fri Jun 3 22:07:53 2016 +0100

    * sr.po: Update.
    
    From-SVN: r237080

commit 3e0907b24b33fb6af426cbecdadcab5d28451272
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Fri Jun 3 13:18:25 2016 +0000

    re PR target/70957 (testsuite/gcc.target/powerpc/vsx-elemrev-4.c fails on power7)
    
    2016-06-03  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/70957
            * gcc.target/powerpc/vsx-elemrev-2.c: Require p9vector hardware
            support.
            * gcc.target/powerpc/vsx-elemrev-4.c: Likewise.
    
    From-SVN: r237067

commit 8d103293027d1711b7120344646836855a628071
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Jun 3 13:01:39 2016 +0200

    re PR middle-end/71387 (ICE in emit_move_insn, at expr.c:3418 with -Og)
    
            PR middle-end/71387
            * cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): If redirecting
            to noreturn e->callee->decl that has void return type and void
            arguments, adjust gimple_call_fntype and remove lhs even if it had
            previously addressable type.
    
            * g++.dg/opt/pr71387.C: New test.
    
    From-SVN: r237060

commit e31216f15dee7ec16eb651970a21d81f91a0dc50
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri Jun 3 10:27:40 2016 +0200

    re PR middle-end/71387 (ICE in emit_move_insn, at expr.c:3418 with -Og)
    
            PR middle-end/71387
            * cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): If redirecting
            to noreturn e->callee->decl that has void return type and void
            arguments, adjust gimple_call_fntype and remove lhs even if it had
            previously addressable type.
    
            * g++.dg/opt/pr71387.C: New test.
    
    From-SVN: r237054

commit cf7431c8d865343e651ceeb2b5cbfc3308129bf9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Jun 3 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237049

commit 829ebadae657182a5fca438a481d22183a27c72a
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Thu Jun 2 19:41:47 2016 +0000

    backport: rs6000.c (rs6000_emit_p9_fp_minmax): New function for ISA 3.0 min/max support.
    
    [gcc]
    2016-06-02  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-26  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000.c (rs6000_emit_p9_fp_minmax): New function
            for ISA 3.0 min/max support.
            (rs6000_emit_p9_fp_cmove): New function for ISA 3.0 floating point
            conditional move support.
            (rs6000_emit_cmove): Call rs6000_emit_p9_fp_minmax and
            rs6000_emit_p9_fp_cmove if the ISA 3.0 instructions are
            available.
            * config/rs6000/rs6000.md (SFDF2): New iterator to allow doing
            conditional moves where the comparison type is different from move
            type.
            (fp_minmax): New code iterator for smin/smax.
            (minmax): New code attributes for min/max.
            (SMINMAX): Likewise.
            (smax<mode>3): Combine min, max insns into one insn using the
            fp_minmax code iterator.  Add support for ISA 3.0 min/max
            instructions that don't need -ffast-math.
            (s<minmax><mode>3): Likewise.
            (smax<mode>3_vsx): Likewise.
            (smin<mode>3): Likewise.
            (s<minmax><mode>3_vsx): Likewise.
            (smin<mode>3_vsx): Likewise.
            (pre-VSX min/max splitters): Likewise.
            (s<minmax><mode>3_fpr): Likewise.
            (movsfcc): Rewrite floating point conditional moves to combine
            SFmode/DFmode into a single insn.
            (mov<mode>cc): Likewise.
            (movdfcc): Likewise.
            (fselsfsf4): Combine FSEL cases into a single insn, using SFDF and
            SFDF2 iterators to handle all combinations.
            (fseldfsf4): Likewise.
            (fsel<SFDF:mode><SFDF2:mode>4): Likewise.
            (fseldfdf4): Likewise.
            (fselsfdf4): Likewise.
            (mov<SFDF:mode><SFDF2:mode>cc_p9): Add support for the ISA 3.0
            comparison instructions that set a 0/-1 mask, and use it for
            floating point conditional move via XXSEL.
            (fpmask<mode>): Likewise.
            (xxsel<mode>): Likewise.
            * config/rs6000/predicates.md (min_max_operator): Delete, no
            longer used.
            (fpmask_comparison_operaton): New insn for ISA 3.0 comparison
            instructions that generate a 0/-1 mask for use with XXSEL.
            * config/rs6000/rs6000.h (TARGET_MINMAX_SF): New helper macros to
            say whether floating point min/max is available, either through
            FSEL, ISA 2.06 min/max, and ISA 3.0 min/max instrucitons.
            (TARGET_MINMAX_DF): Likewise.
    
            Back port from trunk
            2016-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/predicate.md (all_ones_constant): New predicate
            for vector constant with all 1's set.
    
    [gcc/testsuite]
    2016-06-02  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-26  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p9-minmax-1.c: New tests for ISA 3.0
            floating point min/max/comparison instructions.
            * gcc.target/powerpc/p9-minmax-2.c: Likewise.
    
    From-SVN: r237045

commit bc7d2aab232fb387f63c9a27f07b0271736622d2
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Jun 2 18:43:04 2016 +0200

    re PR c++/71372 (C++ FE drops TREE_THIS_VOLATILE in cp_fold on all tcc_reference trees)
    
            PR c++/71372
            * cp-gimplify.c (cp_fold): For INDIRECT_REF, if the folded expression
            is INDIRECT_REF or MEM_REF, copy over TREE_READONLY, TREE_SIDE_EFFECTS
            and TREE_THIS_VOLATILE flags.  For ARRAY_REF and ARRAY_RANGE_REF, copy
            over TREE_READONLY, TREE_SIDE_EFFECTS and TREE_THIS_VOLATILE flags
            to the newly built tree.
    
            * c-c++-common/pr71372.c: New test.
    
    From-SVN: r237042

commit 18d0f23705c693ada210c43a3a805fa058a8e0b7
Author: Kelvin Nilsen <kelvin@gcc.gnu.org>
Date:   Thu Jun 2 15:10:19 2016 +0000

    backport: darn-0.c: New test.
    
    gcc/testsuite/ChangeLog:
    
    2016-06-02  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Back port from trunk
            2016-05-19  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/darn-0.c: New test.
            * gcc.target/powerpc/darn-1.c: New test.
            * gcc.target/powerpc/darn-2.c: New test.
    
    
    gcc/ChangeLog:
    
    2016-06-02  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            Back port from trunk
            2016-05-19  Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/altivec.md (UNSPEC_DARN): New unspec constant.
            (UNSPEC_DARN_32): New unspec constant.
            (UNSPEC_DARN_RAW): New unspec constant.
            (darn_32): New instruction.
            (darn_raw): New instruction.
            (darn): New instruction.
            * config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_0): Add
            support and documentation for this macro.
            (BU_P9_MISC_1): New macro definition.
            (BU_P9_64BIT_MISC_0): New macro definition.
            (BU_P9_MISC_0): New macro definition.
            (darn_32): New builtin definition.
            (darn_raw): New builtin definition.
            (darn): New builtin definition.
            * config/rs6000/rs6000.c: Add #define RS6000_BUILTIN_0 and #undef
            RS6000_BUILTIN_0 directives to surround each occurrence of
            #include "rs6000-builtin.def".
            (rs6000_builtin_mask_calculate): Add in the RS6000_BTM_MODULO and
            RS6000_BTM_64BIT flags to the returned mask, depending on
            configuration.
            (def_builtin): Correct an error in the assignments made to the
            debugging variable attr_string.
            (rs6000_expand_builtin): Add support for no-operand built-in
            functions.
            (builtin_function_type): Remove fatal_error assertion that is no
            longer valid.
            (rs6000_common_init_builtins): Add support for no-operand built-in
            functions.
            * config/rs6000/rs6000.h (RS6000_BTM_MODULO): New macro
            definition.
            (RS6000_BTM_PURE): Enhance comment to clarify intent of this flag
            definition.
            (RS6000_BTM_64BIT): New macro definition.
            * doc/extend.texi: Document __builtin_darn (void),
            __builtin_darn_raw (void), and __builtin_darn_32 (void) built-in
            functions.
    
    From-SVN: r237038

commit b3f935f7d78cac813d25b532c90ac70f924e7daf
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Jun 2 11:30:44 2016 +0000

    re PR c++/70972 (Inheriting constructors taking parameters by value should move them, not copy)
    
    /cp
    2016-06-02  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70972
            * method.c (forward_parm): Use cp_build_reference_type.
    
    /testsuite
    2016-06-02  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70972
            * g++.dg/cpp0x/inh-ctor20.C: New.
            * g++.dg/cpp0x/inh-ctor21.C: Likewise.
    
    From-SVN: r237032

commit 9c6e549ac9025f4814cd6e802f5b3e005c9d0b65
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Jun 2 09:49:43 2016 +0000

    lambda-generic-static1.C: Use target c++14.
    
    2016-06-02  Paolo Carlini  <paolo.carlini@oracle.com>
    
            * g++.dg/cpp1y/lambda-generic-static1.C: Use target c++14.
            * g++.dg/cpp1y/lambda-generic-static2.C: Likewise.
    
    From-SVN: r237029

commit 02075a7207670c983c89df2f62a4f13ff51e5342
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Jun 2 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r237024

commit fe8785d1c31a6e214f08f0518a8acc702f6273c0
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jun 1 23:23:42 2016 +0000

    backport: re PR target/71201 (PowerPC XXPERM instruction fails on ISA 3.0 system.)
    
    [gcc]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            PR target/71201
            * config/rs6000/altivec.md (altivec_vperm_<mode>_internal): Drop
            ISA 3.0 xxperm fusion alternative.
            (altivec_vperm_v8hiv16qi): Likewise.
            (altivec_vperm_<mode>_uns_internal): Likewise.
            (vperm_v8hiv4si): Likewise.
            (vperm_v16qiv8hi): Likewise.
    
            Back port from trunk
            2016-05-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * config/rs6000/rs6000.c (rs6000_expand_vector_set): Generate
            vpermr/xxpermr on ISA 3.0.
            (altivec_expand_vec_perm_le): Likewise.
            * config/rs6000/altivec.md (UNSPEC_VPERMR): New unspec.
            (altivec_vpermr_<mode>_internal): Add VPERMR/XXPERMR support for
            ISA 3.0.
    
    [gcc/testsuite]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/p9-permute.c: Run test on big endian as well
            as little endian.
    
            Back port from trunk
            2016-05-23  Michael Meissner  <meissner@linux.vnet.ibm.com>
                        Kelvin Nilsen  <kelvin@gcc.gnu.org>
    
            * gcc.target/powerpc/p9-vpermr.c: New test for ISA 3.0 vpermr
            support.
    
    [gcc]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.md (VParity): New mode iterator for vector
            parity built-in functions.
            (p9v_ctz<mode>2): Add support for ISA 3.0 vector count trailing
            zeros.
            (p9v_parity<mode>2): Likewise.
            * config/rs6000/vector.md (VEC_IP): New mode iterator for vector
            parity.
            (ctz<mode>2): ISA 3.0 expander for vector count trailing zeros.
            (parity<mode>2): ISA 3.0 expander for vector parity.
            * config/rs6000/rs6000-builtin.def (BU_P9_MISC_1): New macros for
            power9 built-ins.
            (BU_P9_64BIT_MISC_0): Likewise.
            (BU_P9_MISC_0): Likewise.
            (BU_P9V_AV_1): Likewise.
            (BU_P9V_AV_2): Likewise.
            (BU_P9V_AV_3): Likewise.
            (BU_P9V_AV_P): Likewise.
            (BU_P9V_VSX_1): Likewise.
            (BU_P9V_OVERLOAD_1): Likewise.
            (BU_P9V_OVERLOAD_2): Likewise.
            (BU_P9V_OVERLOAD_3): Likewise.
            (VCTZB): Add vector count trailing zeros support.
            (VCTZH): Likewise.
            (VCTZW): Likewise.
            (VCTZD): Likewise.
            (VPRTYBD): Add vector parity support.
            (VPRTYBQ): Likewise.
            (VPRTYBW): Likewise.
            (VCTZ): Add overloaded vector count trailing zeros support.
            (VPRTYB): Add overloaded vector parity support.
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
            overloaded vector count trailing zeros and parity instructions.
            * config/rs6000/rs6000.md (wd mode attribute): Add V1TI and TI for
            vector parity support.
            * config/rs6000/altivec.h (vec_vctz): Add ISA 3.0 vector count
            trailing zeros support.
            (vec_cntlz): Likewise.
            (vec_vctzb): Likewise.
            (vec_vctzd): Likewise.
            (vec_vctzh): Likewise.
            (vec_vctzw): Likewise.
            (vec_vprtyb): Add ISA 3.0 vector parity support.
            (vec_vprtybd): Likewise.
            (vec_vprtybw): Likewise.
            (vec_vprtybq): Likewise.
            * doc/extend.texi (PowerPC AltiVec Built-in Functions): Document
            the ISA 3.0 vector count trailing zeros and vector parity built-in
            functions.
    
    [gcc/testsuite]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p9-vparity.c: New file to check ISA 3.0
            vector parity built-in functions.
            * gcc.target/powerpc/ctz-3.c: New file to check ISA 3.0 vector
            count trailing zeros automatic vectorization.
            * gcc.target/powerpc/ctz-4.c: New file to check ISA 3.0 vector
            count trailing zeros built-in functions.
    
    [gcc]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.md (VNEG iterator): New iterator for
            VNEGW/VNEGD instructions.
            (p9_neg<mode>2): New insns for ISA 3.0 VNEGW/VNEGD.
            (neg<mode>2): Add expander for V2DImode added in ISA 2.07, and
            support for ISA 3.0 VNEGW/VNEGD instructions.
    
    [gcc/testsuite]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/p9-vneg.c: New test for ISA 3.0 VNEGW/VNEGD
            instructions.
    
    From-SVN: r237021

commit 679d6e8106bfa470942d3e3cfd355e0d275fac6b
Author: Michael Meissner <meissner@gcc.gnu.org>
Date:   Wed Jun 1 22:15:47 2016 +0000

    backport: predicates.md (quad_memory_operand): Move most of the code into quad_address_p and call it to share code with...
    
    [gcc]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/predicates.md (quad_memory_operand): Move most of
            the code into quad_address_p and call it to share code with
            vsx_quad_dform_memory_operand.
            (vsx_quad_dform_memory_operand): New predicate for ISA 3.0 vector
            d-form support.
            * config/rs6000/rs6000.opt (-mlra): Switch to being an option mask
            bit instead of being a separate word.  Split -mpower9-dform into
            two switches, -mpower9-dform-scalar and -mpower9-dform-vector.
            * config/rs6000/rs6000.c (RELOAD_REG_QUAD_OFFSET): New addr_mask
            for the register class supporting 128-bit quad word memory offsets.
            (mode_supports_vsx_dform_quad): Helper function to return if the
            register class uses quad word memory offsets.
            (rs6000_debug_addr_mask): Add support for quad word memory offsets.
            (rs6000_debug_reg_global): Always print if we are using LRA or not.
            (rs6000_setup_reg_addr_masks): If ISA 3.0 vector d-form
            instructions are enabled, set up the appropriate addr_masks for
            128-bit types.
            (rs6000_init_hard_regno_mode_ok): wb constraint is now based on
            -mpower9-dform-scalar, instead of -mpower9-dform.
            (rs6000_option_override_internal): Split -mpower9-dform into two
            switches, -mpower9-dform-scalar and -mpower9-dform-vector.  The
            -mpower9-dform switch sets or clears both.  If we are not using
            the LRA register allocator, do not enable -mpower9-dform-vector by
            default.  If we are using LRA, enable -mpower9-dform-vector and
            -mvsx-timode if it is appropriate.  Issue a warning if either
            -mpower9-dform-vector or -mvsx-timode are explicitly used without
            enabling LRA.
            (quad_address_offset_p): New helper function to return if the
            offset is legal for quad word memory instructions.
            (quad_address_p): New function to determin if GPR or vector
            register quad word memory addresses are legal.
            (mem_operand_gpr): Validate quad word address offsets.
            (reg_offset_addressing_ok_p): Add support for ISA 3.0 vector
            d-form (register + offset) instructions.
            (offsettable_ok_by_alignment): Likewise.
            (rs6000_legitimate_offset_address_p): Likewise.
            (legitimate_lo_sum_address_p): Likewise.
            (rs6000_legitimize_address): Likewise.
            (rs6000_legitimize_reload_address): Add more debug statements for
            -mdebug=addr.
            (rs6000_legitimate_address_p): Add support for ISA 3.0 vector
            d-form instructions.
            (rs6000_secondary_reload_memory): Add support for ISA 3.0 vector
            d-form instructions.  Distinguish different cases in debug
            output. (rs6000_secondary_reload_inner): Add support for ISA 3.0 vector
            d-form instructions.
            (rs6000_preferred_reload_class): Likewise.
            (rs6000_output_move_128bit): Add support for ISA 3.0 d-form
            instructions.  If ISA 3.0 is available, generate lxvx/stxvx instead
            of the ISA 2.06 indexed memory instructions.
            (rs6000_emit_prologue): If we have ISA 3.0 d-form instructions,
            use them to save/restore the saved vector registers instead of
            using Altivec instructions.
            (rs6000_emit_epilogue): Likewise.
            (rs6000_lra_p): Use TARGET_LRA instead of the old option word.
            (rs6000_opt_masks): Split -mpower9-dform into
            -mpower9-dform-scalar and -mpower9-dform-vector.
            (rs6000_print_options_internal): Print -mno-<switch> if <switch>
            was not selected.
            * config/rs6000/vsx.md (p9_vecload_<mode>): Delete hack to emit
            ISA 3.0 vector indexed memory instructions, and fold the code into
            the normal mov<mode> patterns.
            (p9_vecstore_<mode>): Likewise.
            (vsx_mov<mode>): Add support for ISA 3.0 vector d-form
            instructions.
            (vsx_movti_64bit): Likewise.
            (vsx_movti_32bit): Likewise.
            * config/rs6000/constraints.md (wO constraint): New constraint for
            ISA 3.0 vector d-form support.
            * config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Use
            -mpower9-dform-scalar instead of -mpower9-dform.  Add note not to
            include -mpower9-dform-vector until we switch over to LRA.
            (POWERPC_MASKS): Add -mlra. Split -mpower9-dform into two.
            switches, -mpower9-dform-scalar and -mpower9-dform-vector.
            * config/rs6000/rs6000-protos.h (quad_address_p): Add declaration.
            * doc/invoke.texi (RS/6000 and PowerPC Options): Add documentation
            for -mpower9-dform and -mlra.
            * doc/md.texi (wO constraint): Document wO constraint.
    
    [gcc/testsuite]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/dform-3.c: New test for ISA 3.0 vector d-form
            support.
            * gcc.target/powerpc/dform-1.c: Add -mlra option to silence
            warning when using -mvsx-timode.
            * gcc.target/powerpc/p8vector-int128-1.c: Likewise.
            * gcc.target/powerpc/dform-2.c: Likewise.
            * gcc.target/powerpc/pr68805.c: Likewise.
    
    From-SVN: r237019

commit e608dc794ab678a573bed2eec9d780521fe206be
Author: Michael Meissner <meissner@linux.vnet.ibm.com>
Date:   Wed Jun 1 22:09:14 2016 +0000

    backport: predicates.md (quad_memory_operand): Move most of the code into quad_address_p and call it to share code with...
    
    [gcc]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * config/rs6000/predicates.md (quad_memory_operand): Move most of
            the code into quad_address_p and call it to share code with
            vsx_quad_dform_memory_operand.
            (vsx_quad_dform_memory_operand): New predicate for ISA 3.0 vector
            d-form support.
            * config/rs6000/rs6000.opt (-mlra): Switch to being an option mask
            bit instead of being a separate word.  Split -mpower9-dform into
            two switches, -mpower9-dform-scalar and -mpower9-dform-vector.
            * config/rs6000/rs6000.c (RELOAD_REG_QUAD_OFFSET): New addr_mask
            for the register class supporting 128-bit quad word memory offsets.
            (mode_supports_vsx_dform_quad): Helper function to return if the
            register class uses quad word memory offsets.
            (rs6000_debug_addr_mask): Add support for quad word memory offsets.
            (rs6000_debug_reg_global): Always print if we are using LRA or not.
            (rs6000_setup_reg_addr_masks): If ISA 3.0 vector d-form
            instructions are enabled, set up the appropriate addr_masks for
            128-bit types.
            (rs6000_init_hard_regno_mode_ok): wb constraint is now based on
            -mpower9-dform-scalar, instead of -mpower9-dform.
            (rs6000_option_override_internal): Split -mpower9-dform into two
            switches, -mpower9-dform-scalar and -mpower9-dform-vector.  The
            -mpower9-dform switch sets or clears both.  If we are not using
            the LRA register allocator, do not enable -mpower9-dform-vector by
            default.  If we are using LRA, enable -mpower9-dform-vector and
            -mvsx-timode if it is appropriate.  Issue a warning if either
            -mpower9-dform-vector or -mvsx-timode are explicitly used without
            enabling LRA.
            (quad_address_offset_p): New helper function to return if the
            offset is legal for quad word memory instructions.
            (quad_address_p): New function to determin if GPR or vector
            register quad word memory addresses are legal.
            (mem_operand_gpr): Validate quad word address offsets.
            (reg_offset_addressing_ok_p): Add support for ISA 3.0 vector
            d-form (register + offset) instructions.
            (offsettable_ok_by_alignment): Likewise.
            (rs6000_legitimate_offset_address_p): Likewise.
            (legitimate_lo_sum_address_p): Likewise.
            (rs6000_legitimize_address): Likewise.
            (rs6000_legitimize_reload_address): Add more debug statements for
            -mdebug=addr.
            (rs6000_legitimate_address_p): Add support for ISA 3.0 vector
            d-form instructions.
            (rs6000_secondary_reload_memory): Add support for ISA 3.0 vector
            d-form instructions.  Distinguish different cases in debug
            output. (rs6000_secondary_reload_inner): Add support for ISA 3.0 vector
            d-form instructions.
            (rs6000_preferred_reload_class): Likewise.
            (rs6000_output_move_128bit): Add support for ISA 3.0 d-form
            instructions.  If ISA 3.0 is available, generate lxvx/stxvx instead
            of the ISA 2.06 indexed memory instructions.
            (rs6000_emit_prologue): If we have ISA 3.0 d-form instructions,
            use them to save/restore the saved vector registers instead of
            using Altivec instructions.
            (rs6000_emit_epilogue): Likewise.
            (rs6000_lra_p): Use TARGET_LRA instead of the old option word.
            (rs6000_opt_masks): Split -mpower9-dform into
            -mpower9-dform-scalar and -mpower9-dform-vector.
            (rs6000_print_options_internal): Print -mno-<switch> if <switch>
            was not selected.
            * config/rs6000/vsx.md (p9_vecload_<mode>): Delete hack to emit
            ISA 3.0 vector indexed memory instructions, and fold the code into
            the normal mov<mode> patterns.
            (p9_vecstore_<mode>): Likewise.
            (vsx_mov<mode>): Add support for ISA 3.0 vector d-form
            instructions.
            (vsx_movti_64bit): Likewise.
            (vsx_movti_32bit): Likewise.
            * config/rs6000/constraints.md (wO constraint): New constraint for
            ISA 3.0 vector d-form support.
            * config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Use
            -mpower9-dform-scalar instead of -mpower9-dform.  Add note not to
            include -mpower9-dform-vector until we switch over to LRA.
            (POWERPC_MASKS): Add -mlra. Split -mpower9-dform into two.
            switches, -mpower9-dform-scalar and -mpower9-dform-vector.
            * config/rs6000/rs6000-protos.h (quad_address_p): Add declaration.
            * doc/invoke.texi (RS/6000 and PowerPC Options): Add documentation
            for -mpower9-dform and -mlra.
            * doc/md.texi (wO constraint): Document wO constraint.
    
    [gcc/testsuite]
    2016-06-01  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            Back port from trunk
            2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/dform-3.c: New test for ISA 3.0 vector d-form
            support.
            * gcc.target/powerpc/dform-1.c: Add -mlra option to silence
            warning when using -mvsx-timode.
            * gcc.target/powerpc/p8vector-int128-1.c: Likewise.
            * gcc.target/powerpc/dform-2.c: Likewise.
            * gcc.target/powerpc/pr68805.c: Likewise.
    
    From-SVN: r237018

commit 46a307ffc9ae816c48275050e2a236a84e0af427
Author: Paul Thomas <pault@gcc.gnu.org>
Date:   Wed Jun 1 18:46:11 2016 +0000

    re PR fortran/71156 (PURE interface/definition inconsistency: accepts invalid, rejects valid)
    
    2016-06-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/71156
            * decl.c (copy_prefix): Add checks that the module procedure
            declaration prefixes are compliant with the interface. Invert
            order of existing elemental and pure checks.
            * resolve.c (resolve_fl_procedure): Invert order of elemental
            and pure errors.
    
    2016-06-01  Paul Thomas  <pault@gcc.gnu.org>
    
            PR fortran/71156
            * gfortran.dg/submodule_14.f08: Add missing recursive prefix
            to the module procedure declaration.
            * gfortran.dg/submodule_16.f08: New test.
    
    From-SVN: r237004

commit c258ae4667414e3e88bf344e336d75c05c1c0f60
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 1 16:06:29 2016 +0000

    tree-vect-loop.c (vect_determine_vectorization_factor): Also compute the factor for live Phi nodes.
    
    2016-06-01  Eric Botcazou  <ebotcazou@adacore.com>
    
            * tree-vect-loop.c (vect_determine_vectorization_factor): Also compute
            the factor for live Phi nodes.
    
    From-SVN: r237000

commit d324e521964f6692aa94ad728ed7b1875cf91585
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 1 16:29:04 2016 +0200

    re PR middle-end/71371 (ICE with OpenMP taskloop and addressable iterator)
    
            PR middle-end/71371
            * gimplify.c (gimplify_omp_for): Temporarily clear gimplify_omp_ctxp
            around creation of the temporary.
    
            * c-c++-common/gomp/pr71371.c: New test.
    
    From-SVN: r236995

commit 72234cedecfb4278fec69550c9abcdbb31124d40
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Jun 1 14:22:54 2016 +0200

    parse.c (case_decl): Move ST_OMP_* to ...
    
            * parse.c (case_decl): Move ST_OMP_* to ...
            (case_omp_decl): ... here, new macro.
            (verify_st_order): For case_omp_decl, complain about
            p->state >= ORDER_EXEC, but don't change p->state otherwise.
    
            * gfortran.dg/gomp/order-1.f90: New test.
            * gfortran.dg/gomp/order-2.f90: New test.
    
    From-SVN: r236988

commit 063640ee5500fa159c4ec60987a91d073d4a65c8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed Jun 1 10:38:35 2016 +0000

    tree-vect-loop.c (vect_determine_vectorization_factor): Also take into account live statements for mask producers.
    
            * tree-vect-loop.c (vect_determine_vectorization_factor): Also take
            into account live statements for mask producers.
    
    From-SVN: r236983

commit 791552a4562e14ec2dc29681e7755fc124ae277d
Author: Simon Wright <simon@pushface.org>
Date:   Wed Jun 1 07:44:10 2016 +0000

    re PR ada/71358 (GNAT.Command_Line.Getopt fails if there are no switches)
    
            PR ada/71358
            * g-comlin.adb (Display_Section_Help): Do not dereference
            Config.Switches if it's null.
            (Getopt): Likewise.
    
    From-SVN: r236976

commit 497ee07c8a3c2ec77c7efc53b3852bdb166db7a9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Jun 1 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r236971

commit 1d3f7b47a4135338f82a5ff944e5156bcec8d827
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:46 2016 -0400

    PR c++/71166 - constexpr array init
    
            * decl2.c (c_parse_final_cleanups): Don't call fini_constexpr.
    
    From-SVN: r236955

commit 6ab0ea3c98b54c3527d3d1e1cb78a5b8e225bc00
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:40 2016 -0400

    PR c++/71227 - specializing hidden friend
    
            * pt.c (check_explicit_specialization): Give better diagnostic about
            specializing a hidden friend.
    
    From-SVN: r236954

commit 49606c3105d648e964839547f473a932729588f7
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:34 2016 -0400

    PR c++/60095 - partial specialization of variable templates
    
            PR c++/69515
            PR c++/69009
            * pt.c (instantiate_template_1): Don't put the partial
            specialization in DECL_TI_TEMPLATE.
            (partial_specialization_p, impartial_args): Remove.
            (regenerate_decl_from_template): Add args parm.
            (instantiate_decl): Look up the partial specialization again.
    
    From-SVN: r236953

commit 17e88e1dcf81c754c896f470a5dace1da2e61b0b
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:28 2016 -0400

    PR c++/71173 - wrong qualified lookup
    
            PR c++/70522
            * cp-tree.h (enum tag_types): Add scope_type.
            * parser.c (cp_parser_class_name): Use scope_type.
            (prefer_type_arg): Handle scope_type.
            (cp_parser_lookup_name): Use prefer_type_arg.
            * name-lookup.c (lookup_qualified_name): Change bool is_type_p to
            int prefer_type, use lookup_flags.
            * name-lookup.h: Adjust.
    
    From-SVN: r236952

commit 0344ba08749344e16f1ef6fb05d143785afaa273
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:22 2016 -0400

    PR c++/70584 - error with parenthesized builtin arg
    
            * cp-gimplify.c (cp_fold_maybe_rvalue): Loop in case cp_fold
            returns a decl.
            (cp_fold) [INDIRECT_REF]: Call maybe_undo_parenthesized_ref.
    
    From-SVN: r236951

commit 1201751a1b36c1fcd640c63856511f0e4656171d
Author: Jason Merrill <jason@redhat.com>
Date:   Tue May 31 17:36:16 2016 -0400

    PR c++/70735 - generic lambda and local static variable
    
            * pt.c (tsubst_copy): Just return a local variable from
            non-template context.  Don't call rest_of_decl_compilation for
            duplicated static locals.
            (tsubst_decl): Set DECL_CONTEXT of local static from another
            function.
    
    From-SVN: r236950

commit 1720e1bd015c57b5bd112df1626c974553d5007b
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Tue May 31 18:59:45 2016 +0000

    re PR ada/71317 (Compiling gnat for rtems fails at s-taprop.adb)
    
            * s-osinte-kfreebsd-gnu.ads (clock_getres): Define.
            (Get_Page_Size): Remove duplicate and return int.
    
            PR ada/71317
            * s-osinte-rtems.ads (clock_getres): Define.
            (Get_Page_Size): Remove duplicate and return int.
    
    From-SVN: r236939

commit 56e6d17d76875013e8e9678d70a84a6e4611d752
Author: Martin Sebor <msebor@redhat.com>
Date:   Tue May 31 17:24:22 2016 +0000

    PR c++/71306 - bogus -Wplacement-new with an array element
    
    gcc/cp/ChangeLog:
    2016-05-31  Martin Sebor  <msebor@redhat.com>
    
            PR c++/71306
            * init.c (warn_placement_new_too_small): Handle placement new arguments
            that are elements of arrays more carefully.  Remove a pointless loop.
    
    gcc/testsuite/ChangeLog:
    2016-05-31  Martin Sebor  <msebor@redhat.com>
    
            PR c++/71306
            * g++.dg/warn/Wplacement-new-size-3.C: New test.
    
    From-SVN: r236934

commit bca51837d6bb45e34486bad4cea1042164820c6e
Author: Richard Biener <rguenther@suse.de>
Date:   Tue May 31 09:58:50 2016 +0000

    backport: re PR debug/71057 (ICE in schedule_generic_params_dies_gen, at dwarf2out.c:24142)
    
    2016-05-31  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-05-11  Richard Biener  <rguenther@suse.de>
    
            PR debug/71057
            * dwarf2out.c (retry_incomplete_types): Set early_dwarf.
            (dwarf2out_finish): Move retry_incomplete_types call ...
            (dwarf2out_early_finish): ... here.
    
            * g++.dg/debug/pr71057.C: New testcase.
    
    From-SVN: r236912

commit 12eaee8a1967167ad70912052bf742604315841a
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue May 31 08:29:39 2016 +0000

    [ARM] PR target/71056: Don't use vectorized builtins when NEON is not available
    
            PR target/71056
            * config/arm/arm-builtins.c (arm_builtin_vectorized_function): Return
            NULL_TREE early if NEON is not available.  Remove now redundant check
            in ARM_CHECK_BUILTIN_MODE.
    
            * gcc.target/arm/pr71056.c: New test.
    
    From-SVN: r236910

commit e7cadd131dc94136139486542010a0d58152d65a
Author: Tom de Vries <tom@codesourcery.com>
Date:   Tue May 31 07:27:23 2016 +0000

    backport "Handle 3-arg phi in copy_bb_and_scalar_dependences"
    
    2016-05-31  Tom de Vries  <tom@codesourcery.com>
    
            backport:
            2016-05-31  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/69068
            * graphite-isl-ast-to-gimple.c (copy_bb_and_scalar_dependences): Handle
            phis with more than two args.
    
            * gcc.dg/graphite/pr69068.c: New test.
    
    From-SVN: r236908

commit 9d232ca0d6a39abf04107b0baf7aca326dd0aa99
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 31 00:16:21 2016 +0000

    Daily bump.
    
    From-SVN: r236905

commit 72378a16bc33da858500c29f06f26cbcd56ed445
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Mon May 30 23:40:04 2016 +0200

    re PR c++/71349 (Combined async target clause parsing issues)
    
            PR c++/71349
            * c-parser.c (c_parser_omp_for): Don't disallow nowait clause
            when combined with target construct.
    
            * parser.c (cp_parser_omp_for): Don't disallow nowait clause
            when combined with target construct.
            (cp_parser_omp_parallel): Pass cclauses == NULL as last argument
            to cp_parser_omp_all_clauses.
    
            * c-omp.c (c_omp_split_clauses): Put OMP_CLAUSE_DEPEND to
            C_OMP_CLAUSE_SPLIT_TARGET.  Put OMP_CLAUSE_NOWAIT to
            C_OMP_CLAUSE_SPLIT_TARGET if combined with target construct,
            instead of C_OMP_CLAUSE_SPLIT_FOR.
    
            * c-c++-common/gomp/clauses-1.c (bar): Add dd argument.  Add
            nowait depend(inout: dd[0]) clauses where permitted.
    
    From-SVN: r236901

commit 72de0842688a81b977c32196827e2b6fb2804cfd
Author: Andreas Tobler <andreast@gcc.gnu.org>
Date:   Mon May 30 22:17:29 2016 +0200

    backport: config.gcc: Move hard float support for arm*hf*-*-freebsd* into armv6*-*-freebsd* for...
    
    2016-05-30  Andreas Tobler  <andreast@gcc.gnu.org>
    
        Backport from mainline
        2016-05-30  Andreas Tobler  <andreast@gcc.gnu.org>
    
        * config.gcc: Move hard float support for arm*hf*-*-freebsd* into
        armv6*-*-freebsd* for FreeBSD 11. Eliminate the arm*hf*-*-freebsd*
        target.
    
    From-SVN: r236899

commit dcdf04e909352d08a6f9a6de9b36fa17155036e4
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Mon May 30 17:09:22 2016 +0000

    backport: altivec.h: Change definitions of vec_xl and vec_xst.
    
    [gcc]
    
    2016-05-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/altivec.h: Change definitions of vec_xl and
            vec_xst.
            * config/rs6000/rs6000-builtin.def (LD_ELEMREV_V2DF): New.
            (LD_ELEMREV_V2DI): New.
            (LD_ELEMREV_V4SF): New.
            (LD_ELEMREV_V4SI): New.
            (LD_ELEMREV_V8HI): New.
            (LD_ELEMREV_V16QI): New.
            (ST_ELEMREV_V2DF): New.
            (ST_ELEMREV_V2DI): New.
            (ST_ELEMREV_V4SF): New.
            (ST_ELEMREV_V4SI): New.
            (ST_ELEMREV_V8HI): New.
            (ST_ELEMREV_V16QI): New.
            (XL): New.
            (XST): New.
            * config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
            descriptions for VSX_BUILTIN_VEC_XL and VSX_BUILTIN_VEC_XST.
            * config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Map from
            TARGET_P9_VECTOR to RS6000_BTM_P9_VECTOR.
            (altivec_expand_builtin): Add handling for
            VSX_BUILTIN_ST_ELEMREV_<MODE> and VSX_BUILTIN_LD_ELEMREV_<MODE>.
            (rs6000_invalid_builtin): Add error-checking for
            RS6000_BTM_P9_VECTOR.
            (altivec_init_builtins): Define builtins used to implement vec_xl
            and vec_xst.
            (rs6000_builtin_mask_names): Define power9-vector.
            * config/rs6000/rs6000.h (MASK_P9_VECTOR): Define.
            (RS6000_BTM_P9_VECTOR): Define.
            (RS6000_BTM_COMMON): Include RS6000_BTM_P9_VECTOR.
            * config/rs6000/vsx.md (vsx_ld_elemrev_v2di): New define_insn.
            (vsx_ld_elemrev_v2df): Likewise.
            (vsx_ld_elemrev_v4sf): Likewise.
            (vsx_ld_elemrev_v4si): Likewise.
            (vsx_ld_elemrev_v8hi): Likewise.
            (vsx_ld_elemrev_v16qi): Likewise.
            (vsx_st_elemrev_v2df): Likewise.
            (vsx_st_elemrev_v2di): Likewise.
            (vsx_st_elemrev_v4sf): Likewise.
            (vsx_st_elemrev_v4si): Likewise.
            (vsx_st_elemrev_v8hi): Likewise.
            (vsx_st_elemrev_v16qi): Likewise.
            * doc/extend.texi: Add prototypes for vec_xl and vec_xst.  Correct
            grammar.
    
    [gcc/testsuite]
    
    2016-05-30  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/vsx-elemrev-1.c: New.
            * gcc.target/powerpc/vsx-elemrev-2.c: New.
            * gcc.target/powerpc/vsx-elemrev-3.c: New.
            * gcc.target/powerpc/vsx-elemrev-4.c: New.
    
    From-SVN: r236890

commit e5b76a4257d33b7614de456bcc8e10823ac3b69b
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon May 30 15:54:06 2016 +0000

    backport "Fix pr69067.c testcase"
    
    2016-05-30  Tom de Vries  <tom@codesourcery.com>
    
            backport:
            2016-05-30  Tom de Vries  <tom@codesourcery.com>
    
            * gcc.dg/graphite/pr69067.c (main): Remove superfluous argument in call
            to ce.
    
    From-SVN: r236887

commit 40cfdcd08d76662f8f4d9ae0d13bf6826c9ce2b9
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Mon May 30 16:53:28 2016 +0200

    args.h (clear_non_sret_int_hardware_registers): Use correct register when clearing %edx.
    
            * gcc.target/i386/iamcu/args.h (clear_non_sret_int_hardware_registers):
            Use correct register when clearing %edx.
    
    From-SVN: r236884

commit 944a66a82d4c2a1d8d8f327f358232516581d7e0
Author: Richard Biener <rguenther@suse.de>
Date:   Mon May 30 14:00:18 2016 +0000

    backport: [multiple changes]
    
    2016-05-30  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-05-11  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/71002
            * alias.c (reference_alias_ptr_type): Preserve alias-set zero
            if the langhook insists on it.
            * fold-const.c (make_bit_field_ref): Add arg for the original
            reference and preserve its alias-set.
            (decode_field_reference): Take exp by reference and adjust it
            to the original memory reference.
            (optimize_bit_field_compare): Adjust callers.
            (fold_truth_andor_1): Likewise.
    
            * g++.dg/torture/pr71002.C: New testcase.
    
            2016-05-13  Jakub Jelinek  <jakub@redhat.com>
    
            PR bootstrap/71071
            * fold-const.c (fold_checksum_tree): Allow modification
            of TYPE_ALIAS_SET during folding.
    
            * gcc.dg/pr71071.c: New test.
    
    From-SVN: r236879

commit 6f1922ddf214fa267c03602f80a0afc4d57e6c69
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon May 30 08:48:32 2016 +0000

    visium.c (visium_split_double_add): Minor tweaks.
    
            * config/visium/visium.c (visium_split_double_add): Minor tweaks.
            (visium_expand_copysign): Use gen_int_mode directly.
            (visium_compute_frame_size): Minor tweaks.
    
    From-SVN: r236872

commit 11ae41fd8367a4bb2083d9bbcec83b05c83a4355
Author: Tom de Vries <tom@codesourcery.com>
Date:   Mon May 30 08:05:10 2016 +0000

    backport "Remove assert in get_def_bb_for_const"
    
    2016-05-30  Tom de Vries  <tom@codesourcery.com>
    
            backport:
            2016-05-30  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/69067
            * graphite-isl-ast-to-gimple.c (get_def_bb_for_const): Remove assert.
    
            * gcc.dg/graphite/pr69067.c: New test.
    
    From-SVN: r236869

commit 930ed747cca0def3c51574c8b802c01ef5b15e68
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 30 00:16:22 2016 +0000

    Daily bump.
    
    From-SVN: r236866

commit 061d916d09a1ad9c69c5969db15e64abd28d4cfe
Author: Paolo Carlini <paolo@gcc.gnu.org>
Date:   Sun May 29 08:27:07 2016 +0000

    re PR c++/71105 (lambdas with default captures improperly have function pointer conversions)
    
    /cp
    2016-05-29  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71105
            * lambda.c (maybe_add_lambda_conv_op): Early return also when
            LAMBDA_EXPR_DEFAULT_CAPTURE_MODE != CPLD_NONE.
    
    /testsuite
    2016-05-29  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/71105
            * g++.dg/cpp0x/lambda/lambda-conv11.C: New.
            * g++.dg/cpp1y/lambda-conv1.C: Likewise.
            * g++.dg/cpp1y/lambda-conv2.C: Likewise.
    
    From-SVN: r236860

commit 558c5001ca9bbbca37ed5d9992598520fb724aa3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 29 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236856

commit a71046cb7995d0e1a0e5a385f4fc79aa3c70a4f6
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 28 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236841

commit bf76cfe4a3685cc7fc2e247d66174754299fa039
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 27 15:09:38 2016 +0000

    visium-protos.h (split_double_move): Rename into...
    
            * config/visium/visium-protos.h (split_double_move): Rename into...
            (visium_split_double_move): ...this.
            (visium_split_double_add): Declare.
            * config/visium/visium.c (split_double_move): Rename into...
            (visium_split_double_move): ...this.
            (visium_split_double_add): New function.
            (visium_expand_copysign): Renumber operands for consistency.
            * config/visium/visium.md (DImode move splitter): Adjust to renaming.
            (DFmode move splitter): Likewise.
            (*addi3_insn): Split by means of visium_split_double_add.
            (*adddi3_insn_flags): Delete.
            (*plus_plus_sltu<subst_arith>): New insn.
            (*subdi3_insn): Split by means of visium_split_double_add.
            (subdi3_insn_flags): Delete.
            (*minus_minus_sltu<subst_arith>): New insn.
            (*negdi2_insn): Split by means of visium_split_double_add.
            (*negdi2_insn_flags): Delete.
    
    From-SVN: r236828

commit 0f1818bacfd0d406f751337c4b1757674096af5d
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Fri May 27 10:43:34 2016 +0000

    backport: re PR middle-end/71279 (ICE on trunk gcc with knl target)
    
    gcc/
    
            Backport from mainline r236810.
            2016-05-27  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/71279
            * fold-const.c (fold_ternary_loc): Don't fold VEC_COND_EXPR
            into comparison.
    
    gcc/testsuite/
    
            Backport from mainline r236810.
            2016-05-27  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/71279
            * gcc.dg/pr71279.c: New test.
    
    From-SVN: r236811

commit e952a1868780a584793ff87d35a63eccf281095e
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Fri May 27 01:05:21 2016 +0000

    backport: re PR fortran/66461 (ICE on missing end program in fixed source)
    
    2016-05-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            Backport from trunk.
            PR fortran/66461
            * scanner.c (gfc_next_char_literal): Clear end_flag when adjusting
            current locus back to old_locus.
    
            Backport from trunk.
            PR fortran/66461
            * gfortran.dg/unexpected_eof.f: New test
    
    From-SVN: r236806

commit 42c5b5a596b3c340a2fa63bad57a9cf10c24ddee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 27 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236803

commit f44385663ab845c3545b465de6d6ad7b1e5553f3
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 26 18:18:13 2016 +0100

    libstdc++/70762 fix fallback implementation of nonexistent_path
    
    Backport from mainline
    2016-04-24  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70762
            * testsuite/util/testsuite_fs.h (__gnu_test::nonexistent_path): Use
            static counter to return a different path on every call.
    
    From-SVN: r236786

commit 76bf67c71348cb2808e520e389a0fe896b8737b1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Thu May 26 16:25:04 2016 +0100

    Add dg-require-filesystem-ts directive to test
    
            * testsuite/experimental/filesystem/path/native/string.cc: Add
            dg-require-filesystem-ts directive.
    
    From-SVN: r236777

commit 7cb62adca61d6be93192e8f25d286ca26cf3fbd0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 26 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r236760

commit b596bcd87fe26289482d6412fc32ac24b137409a
Author: Eric Botcazou <ebotcazou@gcc.gnu.org>
Date:   Wed May 25 20:44:21 2016 +0000

    tree-ssa-phiopt.c (factor_out_conditional_conversion): Remove redundant test and bail out if the type of the new operand is not a...
    
            * tree-ssa-phiopt.c (factor_out_conditional_conversion): Remove
            redundant test and bail out if the type of the new operand is not
            a GIMPLE register type after stripping a VIEW_CONVERT_EXPR.
    
    From-SVN: r236751

commit 2a09e384b39694f069360d9849f3901056edce80
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed May 25 17:37:45 2016 +0100

    * ru.po: Update.
    
    From-SVN: r236733

commit 47170a5f9ac56164d94edeb947a3f109cba967f2
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 17:33:03 2016 +0100

    libstdc++/69703 ignore endianness in codecvt_utf8
    
    Backport from mainline
    2016-04-20  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69703
            * src/c++11/codecvt.cc (__codecvt_utf8_base<char16_t>::do_in,
            __codecvt_utf8_utf16_base<char16_t>::do_in): Fix mask operations.
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/69703
            * src/c++11/codecvt.cc (__codecvt_utf8_base<char16_t>::do_in)):
            Override endianness bit in mode.
            * testsuite/22_locale/codecvt/codecvt_utf8/69703.cc: New test.
            * testsuite/22_locale/codecvt/codecvt_utf8_utf16/66855.cc: Test
            that little_endian mode is ignored.
            * testsuite/experimental/filesystem/path/native/string.cc: New test.
    
    From-SVN: r236731

commit 03cb9eace9203c34572c8ab56fd3ad06e7540feb
Author: Martin Sebor <msebor@redhat.com>
Date:   Wed May 25 16:01:24 2016 +0000

    PR c++/71147 - [6 Regression] Flexible array member wrongly rejected in template
    
    gcc/ChangeLog:
    2016-05-24  Martin Sebor  <msebor@redhat.com>
    
            PR c++/71147
            * gcc/tree.h (complete_or_array_type_p): New inline function.
    
    gcc/testsuite/ChangeLog:
    2016-05-24  Martin Sebor  <msebor@redhat.com>
    
            PR c++/71147
            * g++.dg/ext/flexary16.C: New test.
    
    gcc/cp/ChangeLog:
    2016-05-24  Martin Sebor  <msebor@redhat.com>
    
            PR c++/71147
            * decl.c (layout_var_decl, grokdeclarator): Use complete_or_array_type_p.
            * pt.c (instantiate_class_template_1): Try to complete the element
            type of a flexible array member.
            (can_complete_type_without_circularity): Handle arrays of unknown bound.
            * typeck.c (complete_type): Also complete the type of the elements of
            arrays with an unspecified bound.
    
    From-SVN: r236729

commit b1386a49586d24b0b8ec6b951a8b5de4769652cf
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:45:30 2016 +0100

    Test begin and end functions for directory iterators
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_dir.h (begin, end): Add noexcept.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Test begin and end functions.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Likewise.
    
    From-SVN: r236727

commit 91d770edc05d4e0236cb3e83acda5e6fd5824793
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:45:03 2016 +0100

    libstdc++/71038 fix error checks in filesystem::copy_file
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71038
            * src/filesystem/ops.cc (do_copy_file): Fix backwards conditions.
            * testsuite/experimental/filesystem/operations/copy_file.cc: New test.
    
    From-SVN: r236726

commit c293d37c2691372529767a21c4e7560befde37da
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:57 2016 +0100

    Optimize __directory_iterator_proxy for the common case
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_dir.h (__directory_iterator_proxy):
            Overload operator* to move from rvalues.
    
    From-SVN: r236725

commit 6e12161cadc5afdbf53b0f8f84ed33c8b921f6de
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:44 2016 +0100

    libstdc++/71036 Handle EEXIST in filesystem::create_directory
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71036
            * src/filesystem/ops.cc (create_dir): Handle EEXIST from mkdir.
            * testsuite/experimental/filesystem/operations/create_directory.cc:
            New test.
    
    From-SVN: r236724

commit 49564fcf1cd4c3160bcf11494b36a6d95e9b7eb9
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:39 2016 +0100

    libstdc++/71037 Add base path to filesystem::canonical exceptions
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71037
            * src/filesystem/ops.cc (canonical(const path&, const path&)): Add
            base path to exception.
            * testsuite/experimental/filesystem/operations/canonical.cc: Test
            paths contained in exception.
    
    From-SVN: r236723

commit de9acbf97aaa3c15d9b4faf296700c215b44f97c
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:33 2016 +0100

    libstdc++/71005 fix post-increment for filesystem iterators
    
    Backport from mainline
    2016-05-10  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71005
            * include/experimental/bits/fs_dir.h (__directory_iterator_proxy):
            New type.
            (directory_iterator::operator++(int)): Return proxy.
            (recursive_directory_iterator::operator++(int)): Likewise.
            * testsuite/experimental/filesystem/iterators/directory_iterator.cc:
            Test post-increment.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Likewise.
    
    From-SVN: r236722

commit b4c2004e07bbb4c2d60a90e1483b02ab28ea8378
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:27 2016 +0100

    libstdc++/71004 fix recursive_directory_iterator default constructor
    
    Backport from mainline
    2016-05-09  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/71004
            * include/experimental/bits/fs_dir.h (recursive_directory_iterator):
            Initialize scalar member variables in default constructor.
            * testsuite/experimental/filesystem/iterators/
            recursive_directory_iterator.cc: Test default construction.
    
    From-SVN: r236721

commit 66dc60caabd29a88617aaead814a299cc865c9f1
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:15 2016 +0100

    libstdc++/70609 fix filesystem::copy()
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            PR libstdc++/70609
            * src/filesystem/ops.cc (close_fd): New function.
            (do_copy_file): Set permissions before copying file contents. Check
            result of closing file descriptors. Don't copy streambuf when file
            is empty.
            (copy(const path&, const path&, copy_options, error_code&)): Use
            lstat for source file when copy_symlinks is set.
            * testsuite/experimental/filesystem/operations/copy.cc: Test copy().
    
    From-SVN: r236720

commit 762f071d75e9cc03a1748a5818cf17c3aa01e3d6
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 25 16:44:02 2016 +0100

    Add noexcept to Filesystem TS operators
    
    Backport from mainline
    2016-04-19  Jonathan Wakely  <jwakely@redhat.com>
    
            * include/experimental/bits/fs_fwd.h (operator&, operator|, operator^,
            operator~ operator&=, operator|=, operator^=): Add noexcept to
            overloaded operators for copy_options, perms and directory_options.
            * src/filesystem/ops.cc (make_file_type, make_file_status,
            is_not_found_errno, file_time): Add noexcept.
    
    From-SVN: r236719

commit 75ab3beb817f6218665313e73e0124fcb349530d
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed May 25 15:49:00 2016 +0100

    * ru.po: Update.
    
    From-SVN: r236706

commit 5ec86579035eb71040d779fb76e387701fbe38ad
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 25 10:04:09 2016 +0200

    i386.h (TARGET_AVOID_4BYTE_PREFIXES): Define.
    
            * config/i386/i386.h (TARGET_AVOID_4BYTE_PREFIXES): Define.
            * config/i386/constraints.md (Yr): Test TARGET_AVOID_4BYTE_PREFIXES
            rather than X86_TUNE_AVOID_4BYTE_PREFIXES.  Use SSE_REGS instead
            of ALL_SSE_REGS.  Return SSE_REGS also when TARGET_AVX.
    
    From-SVN: r236691

commit 4de0b8735a649bbc94760230e52a8e8036d2b6f9
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 25 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236688

commit c54518f8361fd5f523f8917582a9b3d7f36fffbf
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Tue May 24 16:44:09 2016 +0000

    re PR c++/69872 (-Wnarrowing note without warning/errror)
    
    /cp
    2016-05-24  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/69872
            * typeck2.c (check_narrowing): Check pedwarn return value.
    
    /testsuite
    2016-05-24  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/69872
            * g++.dg/warn/Wno-narrowing1.C: New.
    
    From-SVN: r236652

commit 3390cb8ed5d7e3ddc63a7f101bbc3dd4da7149a4
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 24 18:27:12 2016 +0200

    re PR c++/71257 (OpenMP declare simd linear with ref modifier doesn't accept references to non-integer/non-pointer)
    
            PR c++/71257
            * tree-vect-stmts.c (vectorizable_simd_clone_call): Handle
            SIMD_CLONE_ARG_TYPE_LINEAR_REF_CONSTANT_STEP like
            SIMD_CLONE_ARG_TYPE_LINEAR_CONSTANT_STEP.  Add
            SIMD_CLONE_ARG_TYPE_LINEAR_VAL_CONSTANT_STEP and
            SIMD_CLONE_ARG_TYPE_LINEAR_UVAL_CONSTANT_STEP cases explicitly.
    
            * semantics.c (finish_omp_clauses) <case OMP_CLAUSE_LINEAR>:
            For OMP_CLAUSE_LINEAR_REF don't require type to be
            integral or pointer.
    
            * g++.dg/vect/simd-clone-6.cc: New test.
            * g++.dg/gomp/declare-simd-6.C: New test.
    
    From-SVN: r236650

commit 225dfffcf1421c7797fd4910947066ce0f78d0e2
Author: Jason Merrill <jason@redhat.com>
Date:   Mon May 23 23:37:10 2016 -0400

    PR c++/70344 - ICE with recursive constexpr
    
            * constexpr.c (cxx_eval_call_expression): Check for
            fun == current_function_decl again.
    
    From-SVN: r236626

commit 7576b52e627039582360b18bdaace84deb511a7b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 24 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236622

commit f4944eed49e49340f8cc448648cbfc8cb4a1693f
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Mon May 23 17:00:41 2016 +0200

    [PR libffi/65567] libffi: Fix, and simply libffi_feature_test
    
    Backport trunk r236594:
    
            libffi/
            PR libffi/65567
            * testsuite/lib/libffi.exp (libffi_feature_test): Fix, and simply.
    
    From-SVN: r236595

commit f91c31cb09c3c3195dc276bbd357be248baaff7c
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon May 23 13:54:52 2016 +0200

    [hsa] Avoid segfault in hsa switch expansion
    
    2016-05-23  Martin Jambor  <mjambor@suse.cz>
    
            * hsa-gen.c (gen_hsa_insns_for_switch_stmt): Create an empty
            default block if a PHI node in the original one would be resized.
    
    libgomp/
            * testsuite/libgomp.hsa.c/switch-sbr-2.c: New test.
    
    From-SVN: r236587

commit e815891fec14e1e5a1c6c321300c6cce7e91cb79
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon May 23 13:27:14 2016 +0200

    [PR 70884] Constant pool SRA fix
    
    2016-05-23  Martin Jambor  <mjambor@suse.cz>
    
            PR tree-optimization/70884
            * tree-sra.c (initialize_constant_pool_replacements): Do not check
            should_scalarize_away_bitmap and cannot_scalarize_away_bitmap bits.
            (sort_and_splice_var_accesses): Do not consider multiple scalar reads
            of constant pool data as a reason for scalarization.
    
    testsuite/
            * gcc.dg/tree-ssa/pr70919.c: New test.
    
    From-SVN: r236584

commit 0c401bfb96ef423af056fd396b09626eadd37af5
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 23 00:16:21 2016 +0000

    Daily bump.
    
    From-SVN: r236574

commit 4a44e7b05baf25b969b314e54f66d9e121f4ada3
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 22 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236562

commit e2ac037893b8035fe0c453632a064254e0c78a92
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 21 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r236552

commit 3e9a7703566193cf53d6294b9b51765ae08ac557
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 20 20:50:05 2016 +0000

    arm.c (arm_expand_prologue): Set the stack usage to 0 for naked functions.
    
            * config/arm/arm.c (arm_expand_prologue): Set the stack usage to 0
            for naked functions.
            (thumb1_expand_prologue): Likewise.
    
    From-SVN: r236540

commit f8df23dd5c6d5f60c06ce34ae105451851970b98
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 20 21:06:09 2016 +0200

    re PR c++/71210 (internal compiler error: in assign_temp, at function.c:961)
    
            PR c++/71210
            * gimple-fold.c (gimple_fold_call): Do not remove lhs of noreturn
            calls if the LHS is variable length or has addressable type.
            If targets[0]->decl is a noreturn call with void return type and
            zero arguments, adjust fntype and remove lhs in that case.
    
            * g++.dg/opt/pr71210-1.C: New test.
            * g++.dg/opt/pr71210-2.C: New test.
    
    From-SVN: r236529

commit e6d1f6217d4686c780f8eb32b18f9667aebd989b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Fri May 20 20:52:38 2016 +0200

    re PR fortran/71204 (ICE with -O0 in expand_expr_real_1, at expr.c:9651)
    
            PR fortran/71204
            * frontend-passes.c (realloc_string_callback): Clear inserted_block
            and changed_statement before calling create_var.
    
            * gfortran.dg/pr71204.f90: New test.
    
    From-SVN: r236526

commit f99711aec058e35af50f638751338ffccf7aacc8
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Fri May 20 17:38:24 2016 +0200

    sched-deps.c (sched_analyze_2): Also force pending loads from memory.
    
            * sched-deps.c (sched_analyze_2) <case TRAP_IF>: Also
            force pending loads from memory.
    
    From-SVN: r236516

commit 5b779c592765fd990d5b4b736c0e8669a379e150
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 20 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r236494

commit db730286fa5d1da8a781b8efb4d4a3216be950a0
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Thu May 19 20:33:51 2016 +0000

    PR c/71171: Fix uninitialized source_range in c_parser_postfix_expression
    
    A common way for a c_expr to have an uninitialized src_range is in
    error-handling, where the "value" field is set to error_mark_node
    without touching the src_range, leading to complaints from valgrind.
    
    This patch introduces a new method c_expr::set_error which sets
    the value to error_mark_node whilst initializing the src_range to
    UNKNOWN_LOCATION.
    
    This fixes the valgrind issue seen in PR c/71171, along with various
    other related issues seen when running the testsuite using the
    checker patch I posted here:
      https://gcc.gnu.org/ml/gcc-patches/2015-12/msg00887.html
    (this checker still doesn't fully work yet, but it seems to be good
    for easily detecting these issues without needing Valgrind).
    
    gcc/c/ChangeLog:
            Backport from trunk r236488.
            PR c/71171
            * c-parser.c (c_parser_generic_selection): Use c_expr::set_error
            in error-handling.
            (c_parser_postfix_expression): Likewise.
            * c-tree.h (c_expr::set_error): New method.
            * c-typeck.c (parser_build_binary_op): In error-handling, ensure
            that result's range is initialized.
    
    From-SVN: r236489

commit 5f1b9911f4facafcaa9533bf2dceeb9ebbc929d2
Author: David Malcolm <dmalcolm@redhat.com>
Date:   Thu May 19 18:56:47 2016 +0000

    PR c++/71184: Fix NULL dereference in cp_parser_operator
    
    The source-range handling for the array form of operator
    new/delete erroneously assumed that the "]" was present,
    leading to a dereference of NULL when it's absent.
    
    Fix it thusly.
    
    gcc/cp/ChangeLog:
            Backport from trunk r236483.
            PR c++/71184
            * parser.c (cp_parser_operator): For array new/delete, check that
            cp_parser_require returned a non-NULL token before dereferencing
            it.
    
    gcc/testsuite/ChangeLog:
            Backport from trunk r236483.
            PR c++/71184
            * g++.dg/pr71184.C: New test case.
    
    From-SVN: r236485

commit c0874c54815065aab7c4ae3ffba49a663082cc6f
Author: Marek Polacek <polacek@redhat.com>
Date:   Thu May 19 18:42:31 2016 +0000

    re PR tree-optimization/71031 (ICE in extract_range_from_binary_expr_1, at tree-vrp.c:2535 w/ -Os)
    
            PR tree-optimization/71031
            * tree-vrp.c (extract_range_from_binary_expr_1): Turn assert into a
            condition and adjust the code a bit.
    
            * gcc.dg/tree-ssa/vrp100.c: New test.
    
    From-SVN: r236484

commit 9dd85bb603562835cda833364ea33def8cb4ba32
Author: Bernd Edlinger <bernd.edlinger@hotmail.de>
Date:   Thu May 19 17:38:51 2016 +0000

    backport: decl.c (finish_enum_value_list): Use the specified mode.
    
    2016-05-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-05-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            * decl.c (finish_enum_value_list): Use the specified mode.
    
    testsuite:
    2016-05-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            Backport from mainline
            2016-05-19  Bernd Edlinger  <bernd.edlinger@hotmail.de>
    
            * c-c++-common/pr69669.c: Check the used mode.
    
    From-SVN: r236479

commit 8a9cec7f5a6049dec44b7d8d8554cf2aebd15bc0
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 19 17:00:12 2016 +0200

    Respect --param ipa-max-agg-items=0
    
    2016-05-19  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/70646
            * ipa-prop.c (determine_locally_known_aggregate_parts): Bail out early
            if parameter PARAM_IPA_MAX_AGG_ITEMS is zero.
    
    From-SVN: r236463

commit 8d66bc4d41eabbb82be3dd127dc4d5b20a42383a
Author: Martin Jambor <mjambor@suse.cz>
Date:   Thu May 19 16:56:35 2016 +0200

    [PR 70646] Store size to inlining predicate conditions
    
    2016-05-19  Martin Jambor  <mjambor@suse.cz>
    
            PR ipa/70646
            * ipa-inline.h (condition): New field size.
            * ipa-inline-analysis.c (add_condition): New parameter SIZE, use it
            for comaprison and store it into the new condition.
            (evaluate_conditions_for_known_args): Use condition size to check
            access sizes for all but CHANGED conditions.
            (unmodified_parm_1): New parameter size_p, store access size into it.
            (unmodified_parm): Likewise.
            (unmodified_parm_or_parm_agg_item): Likewise.
            (eliminated_by_inlining_prob): Pass NULL to unmodified_parm as size_p.
            (set_cond_stmt_execution_predicate): Extract access sizes and store
            them to conditions.
            (set_switch_stmt_execution_predicate): Likewise.
            (will_be_nonconstant_expr_predicate): Likewise.
            (will_be_nonconstant_predicate): Likewise.
            (inline_read_section): Stream condition size.
            (inline_write_summary): Likewise.
            * lto-streamer.h (LTO_minor_version): Bump.
    
    testsuite/
            * gcc.dg/ipa/pr70646.c: New test.
    
    From-SVN: r236462

commit 242d81bf3a91b18eee6a545846f00d0e87aa68fa
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Thu May 19 10:53:19 2016 +0200

    backport: re PR c++/70498 (Libiberty Demangler segfaults (3))
    
            Backported from mainline
            2016-05-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR c++/70498
            * cp-demangle.c (d_expression_1): Formatting fix.
    
            2016-05-02  Marcel Böhme  <boehme.marcel@gmail.com>
    
            PR c++/70498
            * cp-demangle.c: Parse numbers as integer instead of long to avoid
            overflow after sanity checks. Include <limits.h> if available.
            (INT_MAX): Define if necessary.
            (d_make_template_param): Takes integer argument instead of long.
            (d_make_function_param): Likewise.
            (d_append_num): Likewise.
            (d_identifier): Likewise.
            (d_number): Parse as and return integer.
            (d_compact_number): Handle overflow.
            (d_source_name): Change variable type to integer for parsed number.
            (d_java_resource): Likewise.
            (d_special_name): Likewise.
            (d_discriminator): Likewise.
            (d_unnamed_type): Likewise.
            * testsuite/demangle-expected: Add regression test cases.
    
    From-SVN: r236446

commit 5a524a4f9def6f17f41d2ffc2941381e516a1378
Author: Martin Liska <mliska@suse.cz>
Date:   Thu May 19 10:09:11 2016 +0200

    Backport PR fortran/70856 from mainline
    
    From-SVN: r236442

commit 5b9079ba38a132144fb76ec7e5b5b5c98d83cf4d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 19 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r236437

commit cfbfb006cc95c6e560771cf271238095f3c20009
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 18 23:26:54 2016 +0200

    backport: re PR sanitizer/71160 (libasan: Backport support for malloc within dlsym)
    
            Backported from mainline
            2016-05-17  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/71160
            * asan/asan_malloc_linux.cc: Cherry pick upstream r254395
            and r269633.
    
    From-SVN: r236432

commit 7e1035d55b158ce3341d81250ccd1f3d8a249b3a
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 18 23:24:16 2016 +0200

    re PR c++/71100 (Internal compiler error while calling a pointer to member function that throws)
    
            PR c++/71100
            * cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Don't drop
            lhs if it has TREE_ADDRESSABLE type.
    
            * g++.dg/opt/pr71100.C: New test.
    
    From-SVN: r236431

commit eaf45437b159853afa0a86aa8dab6f60394d7e05
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Wed May 18 21:39:49 2016 +0200

    re PR target/71145 (Alpha: Error: No lda !gpdisp!278 was found)
    
            PR target/71145
            * config/alpha/alpha.md (trap): Add (use (reg:DI 29)).
            (*exception_receiver_1): Return "#" for TARGET_EXPLICIT_RELOCS.
    
    From-SVN: r236425

commit 4eb9ceded92d049b7716ae16f05b0a0c3530fdfe
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Wed May 18 17:17:03 2016 +0000

    re PR c++/70466 ([ICE on invalid code in tree check: expected constructor, have parm_decl in convert_like_real, at cp/call.c:6371 with -std=c++11)
    
    /cp
    2016-05-18  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70466
            * call.c (convert_like_real): Check that we are actually converting
            from an init list.
    
    /testsuite
    2016-05-18  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70466
            * g++.dg/template/pr70466-1.C: New.
            * g++.dg/template/pr70466-2.C: Likewise.
    
    From-SVN: r236419

commit 0365b89e5d8fbda2098da6f647f2d539a16472c0
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Wed May 18 16:48:40 2016 +0200

    re PR target/71161 (Lots of ASAN and libgo runtime FAILs after r236090)
    
            PR target/71161
            * elf.c (phdr_callback) [__i386__]: Add
            __attribute__((__force_align_arg_pointer__)).
    
    From-SVN: r236398

commit ef87b3540e18ea6a2010172f3c950ad070a2b8dc
Author: Christophe Lyon <clyon@gcc.gnu.org>
Date:   Wed May 18 14:41:30 2016 +0200

    Fix ChangeLog date.
    
    From-SVN: r236380

commit 95f1c024b47426d960f3d16222da3f8b0717033f
Author: Christophe Lyon <christophe.lyon@linaro.org>
Date:   Wed May 18 12:38:15 2016 +0000

    backport: noplt_3.c: Scan for "br\t".
    
            Backport from mainline r236377.
            2016-05-19  Christophe Lyon  <christophe.lyon@linaro.org>
    
            * gcc.target/aarch64/noplt_3.c: Scan for "br\t".
            * gcc.target/aarch64/tail_indirect_call_1.c: Scan for "br\t",
            "blr\t" and switch to scan-assembler-times.
    
    From-SVN: r236378

commit 0c60b43e9ab7ebbdddcdc3d0d8fc93f884dc874c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 18 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r236353

commit 49b7b55e0bbd6b59f7a01f805ce220393735f522
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed May 18 01:13:49 2016 +0100

    * da.po: Update.
    
    From-SVN: r236350

commit 5a6445ea3c06eeb0fd783d79739dd86d1577d187
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Wed May 18 01:10:34 2016 +0100

    * da.po, sv.po: Update.
    
    From-SVN: r236348

commit 2d8614b36b61377b2e57fbd12082321c134b40e9
Author: Thomas Schwinge <thomas@codesourcery.com>
Date:   Tue May 17 18:08:37 2016 +0200

    [PR target/70860] [nvptx] Handle NULL cfun in nvptx_libcall_value
    
    Backport GCC trunk r235748:
    
            gcc/
            PR target/70860
            * config/nvptx/nvptx.c (nvptx_libcall_value): Handle NULL cfun.
            (nvptx_function_value): Assert non-NULL cfun.
    
    From-SVN: r236326

commit e04c737facc9c8f2b75c7bbc2658d20a2ab2b488
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Tue May 17 13:08:01 2016 +0000

    [AArch64] PR target/70809: Delete aarch64_vmls<mode> pattern
    
            Backport from mainline
            2016-05-17  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70809
            * config/aarch64/aarch64-simd.md (aarch64_vmls<mode>): Delete.
    
            * gcc.target/aarch64/pr70809_1.c: New test.
    
    From-SVN: r236321

commit cb012c49cbdbadb4131b9f5892f622ecedb13cf1
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 17 06:15:52 2016 +0000

    [RTEMS] Fix moxie libgcc support
    
    libgcc/
    
            PR libgcc/70720
            * config.host (moxie-*-rtems*): Merge this stanza with other moxie
            targets so the same extra_parts are built.  Also have tmake_file add
            on to its value rather than override.
    
    From-SVN: r236307

commit c644c87878e4efb656004e7fc1d06d615b9fca0b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 17 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r236304

commit 841c5c5d631f1650ae8bdc2748bcdd8a7c487041
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon May 16 19:52:28 2016 +0200

    [hsa] Increase hsa symbol alignment to natural one
    
    2016-05-16  Martin Jambor  <mjambor@suse.cz>
    
            * hsa-gen.c (fillup_for_decl): Increase alignment to natural one.
            (get_symbol_for_decl): Sorry if a global symbol in under-aligned.
    
    libgomp/
            * testsuite/libgomp.hsa.c/complex-align-2.c: New test.
    
    From-SVN: r236296

commit 24e94e03324bffe1a7b7e2dcfa49c677e8178525
Author: Martin Jambor <mjambor@suse.cz>
Date:   Mon May 16 17:57:06 2016 +0200

    [PR 70857] Copy RESULT_DECL of HSA outlined kernel function
    
    2016-05-16  Martin Jambor  <mjambor@suse.cz>
    
            PR hsa/70857
            * omp-low.c (grid_expand_target_grid_body): Copy RESULT_DECL of
            the outlined kernel function.
    
    From-SVN: r236292

commit 431a1fbe330e273ecbd4451263eae3a843daa287
Author: James Norris <jnorris@codesourcery.com>
Date:   Mon May 16 13:47:47 2016 +0000

    backport: re PR driver/68463 (Offloading fails when some objects are compiled with LTO and some without)
    
            Backport from mainline r236098.
            2016-05-10  James Norris  <jnorris@codesourcery.com>
    
            PR driver/68463
            * config/rs6000/sysv4.h (CRTOFFLOADBEGIN): Define. Add crtoffloadbegin.o
            if offloading is enabled and -fopenacc or -fopenmp is specified.
            (CRTOFFLOADEND): Likewise.
            (STARTFILE_LINUX_SPEC): Add CRTOFFLOADBEGIN.
            (ENDFILE_LINUX_SPEC): Add CRTOFFLOADEND.
    
    From-SVN: r236287

commit a5e701712182abb4a7fc4d24da1d17fcaf1d85cd
Author: Alan Modra <amodra@gmail.com>
Date:   Mon May 16 14:21:21 2016 +0930

    [RS6000] Stop regrename twiddling with split-stack prologue
    
            PR target/70947
            * config/rs6000/rs6000.c (rs6000_expand_split_stack_prologue): Stop
            regrename modifying insns saving lr before __morestack call.
            * config/rs6000/rs6000.md (split_stack_return): Similarly for
            insns restoring lr after __morestack call.
    
    From-SVN: r236264

commit 2d09190e563472ef9a5b1e6da68b8d52a6df33d7
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 16 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236262

commit 467c78b00f02afd403340fa957b1de42fef403c1
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Sun May 15 21:48:43 2016 +0000

    backport: pr70963.c: Require at least power8 at both compile and run time.
    
    2016-05-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-11  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * gcc.target/powerpc/pr70963.c: Require at least power8 at both
            compile and run time.
    
    From-SVN: r236257

commit dad5e1e159dee1e142394dd8261ff61775b23fe8
Author: Harald Anlauf <anlauf@gmx.de>
Date:   Sun May 15 18:48:40 2016 +0000

    re PR fortran/69603 (ICE: segfault with -fimplicit-none and proc_ptr_comp_24.f90)
    
    2016-05-15  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69603
            * interface.c (compare_parameter): Check for non-NULL pointer.
    
    2016-05-15  Harald Anlauf  <anlauf@gmx.de>
    
            PR fortran/69603
            * gfortran.dg/pr69603.f90: New testcase.
    
    From-SVN: r236254

commit 165c952c622f77b97692b269da0c0d86abb3e8f2
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 15 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236247

commit 11e5eb44ecd8537e15389ccc302b1e4cb174bf76
Author: Fritz Reese <fritzoreese@gmail.com>
Date:   Sat May 14 19:52:46 2016 +0000

    backport: re PR fortran/71047 (Allocatable component of INTENT(OUT) dummy not set correctly)
    
    2016-05-14  Fritz Reese  <fritzoreese@gmail.com>
    
            Backport from trunk: r236242
            * gfortran.texi: Update example of DEC UNION extension.
    
            Backport from trunk: r236241
            PR fortran/71047
            * expr.c (gfc_default_initializer): Avoid extra component refs in
            constructors for derived types and classes.
    
            Backport from trunk: r235999
            PR fortran/56226
            * module.c (dt_upper_string): Rename to gfc_dt_upper_string
            (dt_lower_string): Likewise.
            * gfortran.h: Make new gfc_dt_upper/lower_string global.
            * class.c: Use gfc_dt_upper_string.
            * decl.c: Likewise.
            * symbol.c: Likewise.
            * resolve.c (resolve_component): New function.
            (resolve_fl_derived0): Move component loop code to resolve_component.
            * parse.c (check_component): New function.
            (parse_derived): Move loop code to check_component.
            * lang.opt, invoke.texi, options.c : New option -fdec-structure.
            * libgfortran.h (bt): New basic type BT_UNION.
            * gfortran.h (gfc_option): New option -fdec-structure.
            (gfc_get_union_type, gfc_compare_union_types): New prototypes.
            (gfc_bt_struct, gfc_fl_struct, case_bt_struct, case_fl_struct): New
            macros.
            (gfc_find_component): Change prototype.
            * match.h (gfc_match_member_sep, gfc_match_map, gfc_match_union,
            gfc_match_structure_decl): New prototypes.
            * parse.h (gfc_comp_struct): New macro.
            * symbol.c (gfc_find_component): Search for components in nested unions
            * class.c (insert_component_ref, gfc_add_component_ref, add_proc_comp,
            copy_vtab_proc_comps): Update calls to gfc_find_component.
            * primary.c (gfc_convert_to_structure_constructor): Likewise.
            * symbol.c (gfc_add_component): Likewise.
            * resolve.c (resolve_typebound_function, resolve_typebound_subroutine,
            resolve_typebound_procedure, resolve_component, resolve_fl_derived):
            Likewise.
            * expr.c (get_union_init, component_init): New functions.
            * decl.c (match_clist_expr, match_record_decl, get_struct_decl,
            gfc_match_map, gfc_match_union, gfc_match_structure_decl): Likewise.
            * interface.c (compare_components, gfc_compare_union_types): Likewise.
            * match.c (gfc_match_member_sep): Likewise.
            * parse.c (check_component, parse_union, parse_struct_map): Likewise.
            * resolve.c (resolve_fl_struct): Likewise.
            * symbol.c (find_union_component): Likewise.
            * trans-types.c (gfc_get_union_type): Likewise.
            * parse.c (parse_derived): Use new functions.
            * interface.c (gfc_compare_derived_types, gfc_compare_types): Likewise.
            * expr.c (gfc_default_initializer): Likewise.
            * gfortran.texi: Support for DEC structures, unions, and maps.
            * gfortran.h (gfc_statement, sym_flavor): Likewise.
            * check.c (gfc_check_kill_sub): Likewise.
            * expr.c (gfc_copy_expr, simplify_const_ref,
            gfc_has_default_initializer): Likewise.
            * decl.c (build_sym, match_data_constant, add_init_expr_to_sym,
            match_pointer_init, build_struct, variable_decl,
            gfc_match_decl_type_spec, gfc_mach_data-decl, gfc_match_entry,
            gfc_match_end, gfc_match_derived_decl): Likewise.
            * interface.c (check_interface0, check_interface1,
            gfc_search_interface): Likewise.
            * misc.c (gfc_basic_typename, gfc_typename): Likewise.
            * module.c (add_true_name, build_tnt, bt_types, mio_typespec,
            fix_mio_expr, load_needed, mio_symbol, read_module, write_symbol,
            gfc_get_module_backend_decl): Likewise.
            * parse.h (gfc_compile_state): Likewise.
            * parse.c (decode_specification_statement, decode_statement,
            gfc_ascii_statement, verify_st_order, parse_spec): Likewise.
            * primary.c (gfc_match_varspec, gfc_match_structure_constructor,
            gfc_match_rvalue, match_variable): Likewise.
            * resolve.c (find_arglists, resolve_structure_cons,
            is_illegal_recursion, resolve_generic_f, get_declared_from_expr,
            resolve_typebound_subroutine, resolve_allocate_expr,
            nonscalar_typebound_assign, generate_component_assignments,
            resolve_fl_variable_derived, check_defined_assignments,
            resolve_component, resolve_symbol, resolve_equivalence_derived):
            Likewise.
            * symbol.c (flavors, check_conflict, gfc_add_flavor, gfc_use_derived,
            gfc_restore_last_undo_checkpoint, gfc_type_compatible,
            gfc_find_dt_in_generic): Likewise.
            * trans-decl.c (gfc_get_module_backend_decl, create_function_arglist,
            gfc_create_module_variable, check_constant_initializer): Likewise.
            * trans-expr.c (gfc_conv_component_ref, gfc_conv_initializer,
            gfc_trans_alloc_subarray_assign, gfc_trans_subcomponent_assign,
            gfc_conv_structure, gfc_trans_scalar_assign, copyable_array_p):
            Likewise.
            * trans-io.c (transfer_namelist_element, transfer_expr,
            gfc_trans_transfer): Likewise.
            * trans-stmt.c (gfc_trans_deallocate): Likewise.
            * trans-types.c (gfc_typenode_for_spec, gfc_copy_dt_decls_ifequal,
            gfc_get_derived_type): Likewise.
    
    2016-05-14  Fritz Reese  <fritzoreese@gmail.com>
    
            Backport from trunk: r235999, r236241, r236242
            * gfortran.dg/dec_union_4.f90: Fix endian issue.
    
            PR fortran/71047
            * gfortran.dg/pr71047.f08: New test.
    
            PR fortran/56226
            * gfortran.dg/dec_structure_1.f90: New testcase.
            * gfortran.dg/dec_structure_2.f90: Ditto.
            * gfortran.dg/dec_structure_3.f90: Ditto.
            * gfortran.dg/dec_structure_4.f90: Ditto.
            * gfortran.dg/dec_structure_5.f90: Ditto.
            * gfortran.dg/dec_structure_6.f90: Ditto.
            * gfortran.dg/dec_structure_7.f90: Ditto.
            * gfortran.dg/dec_structure_8.f90: Ditto.
            * gfortran.dg/dec_structure_9.f90: Ditto.
            * gfortran.dg/dec_structure_10.f90: Ditto.
            * gfortran.dg/dec_structure_11.f90: Ditto.
            * gfortran.dg/dec_union_1.f90: Ditto.
            * gfortran.dg/dec_union_2.f90: Ditto.
            * gfortran.dg/dec_union_3.f90: Ditto.
            * gfortran.dg/dec_union_4.f90: Ditto.
            * gfortran.dg/dec_union_5.f90: Ditto.
            * gfortran.dg/dec_union_6.f90: Ditto.
            * gfortran.dg/dec_union_7.f90: Ditto.
    
    From-SVN: r236244

commit 5d31d718d6546d82192e65f8bba24c7defc30e78
Author: Uros Bizjak <ubizjak@gmail.com>
Date:   Sat May 14 11:25:41 2016 +0200

    tree-vect.h (check_vect): Handle AVX2, remove XOP handling.
    
            * gcc.dg/vect/tree-vect.h (check_vect): Handle AVX2,
            remove XOP handling.
            * gcc.dg/vect/pr66636.c (foo): Add __attribute__((noinline,noclone)).
    
    From-SVN: r236239

commit 521c03664827d27b0e5b85e041fcc3b9073b0607
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 14 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r236236

commit 1b4e44dbf8ec5d7e5c864989a4b12711c6bb95d0
Author: Richard Biener <rguenther@suse.de>
Date:   Fri May 13 13:22:42 2016 +0000

    backport: [multiple changes]
    
    2016-05-13  Richard Biener  <rguenther@suse.de>
    
            Backport from mainline
            2016-04-27  Richard Biener  <rguenther@suse.de>
    
            PR ipa/70760
            * tree-ssa-structalias.c (find_func_aliases_for_call): Use
            aggregate_value_p to determine if a function result is
            returned by reference.
    
            * g++.dg/ipa/ipa-pta-2.C: New testcase.
            * gcc.dg/ipa/ipa-pta-1.c: Adjust.
    
            2016-05-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70931
            * dwarf2out.c (native_encode_initializer): Skip zero-sized fields.
    
            * gfortran.dg/pr70931.f90: New testcase.
    
            2016-05-06  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70941
            * fold-const.c (split_tree): Always convert to the original type
            before negating.
    
            * gcc.dg/torture/pr70941.c: New testcase.
    
            2016-05-06  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/70941
            * gcc.dg/torture/pr70941.c (abort): Remove prototype.
            (a, b, c, d): Change type from char to signed char.
            (main): Compare against (signed char) -1634678893 instead of
            hardcoded -109.  Use __builtin_abort instead of abort.
    
    From-SVN: r236210

commit be420d25c9795fc0cd3f30557c88eb3c5b155cc1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 13 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236188

commit 77738be16304e31428d2eb4223a950dfe42c42f0
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu May 12 22:00:50 2016 +0100

    * fi.po: Update.
    
    From-SVN: r236184

commit 89fe7c538de23b54d3573bd77e8ad90cd205b0cc
Author: Martin Liska <mliska@suse.cz>
Date:   Thu May 12 16:34:18 2016 +0200

    Handle memory leak in tree-inline.c.
    
            Backport from mainline
            2016-05-10  Martin Liska  <mliska@suse.cz>
    
            * tree-inline.c (remap_dependence_clique): Do not remap
            debugging statements.
    
    From-SVN: r236179

commit 3490033423067c1b62b7c1ac246540a7a7e49de0
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Thu May 12 14:07:13 2016 +0000

    backport: re PR tree-optimization/71006 (ICE: verify_gimple failed (error: type mismatch in conditional expression) w/ -O1 -ftree-loop-vectorize)
    
    gcc/
    
            Backport from mainline r236171.
            2016-05-12  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR tree-optimization/71006
            * tree-vect-loop.c (vect_determine_vectorization_factor): Don't
            consider COND_EXPR as a mask producer.
    
    gcc/testsuite/
    
            Backport from mainline r236171.
            2016-05-12  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR tree-optimization/71006
            * gcc.dg/pr71006.c: New test.
    
    From-SVN: r236176

commit 438e1e03dc5c26693dee701e7b95e2fb032d739c
Author: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
Date:   Thu May 12 12:47:03 2016 +0000

    [ARM] PR target/70830: Avoid POP-{reglist}^ when returning from interrupt handlers
    
            Backport from mainline
            2016-05-12  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/70830
            * config/arm/arm.c (arm_output_multireg_pop): Avoid POP instruction
            when popping the PC and within an interrupt handler routine.
            Add missing tab to output of "ldmfd".
            (output_return_instruction): Output LDMFD with SP update rather
            than POP when returning from interrupt handler.
    
            * gcc.target/arm/interrupt-1.c: Change dg-compile to dg-assemble.
            Add -save-temps to dg-options.
            Scan for ldmfd rather than pop instruction.
            * gcc.target/arm/interrupt-2.c: Likewise.
            * gcc.target/arm/pr70830.c: New test.
    
    From-SVN: r236173

commit 27fe921d394c4b388109ef8f415ff9a965d36f3c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 12 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r236151

commit b728d57f99950928632bf001a8b541055be1df05
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Wed May 11 20:06:45 2016 +0100

    libstdc++/71049 fix --disable-libstdcxx-dual-abi bootstrap
    
            PR libstdc++/71049
            * src/c++11/cow-stdexcept.cc [!_GLIBCXX_USE_DUAL_ABI]: Don't define
            exception constructors with __sso_string parameters.
    
    From-SVN: r236137

commit 6cef4e279619fbb3803be8e546a011a7d7dd3b6b
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed May 11 15:18:05 2016 +0200

    re PR fortran/70855 (ICE with -fopenmp in gfc_trans_omp_workshare(): Bad statement code)
    
            PR fortran/70855
            * frontend-passes.c (inline_matmul_assign): Disable in !$omp workshare.
    
            * gfortran.dg/gomp/pr70855.f90: New test.
    
    From-SVN: r236120

commit f92655d6b301d486ec8b7a118a6da70889980b94
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Wed May 11 09:55:55 2016 +0000

    backport: re PR middle-end/70877 ([MPX] ICE in in convert_move)
    
    gcc/
    
            Backport from mainline r236088.
            2016-05-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/70877
            * tree-chkp.c (chkp_add_bounds_to_call_stmt): Handle
            calls with type casted fndecl.
    
    gcc/testsuite/
    
            Backport from mainline r236088.
            2016-05-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR middle-end/70877
            * gcc.target/i386/pr70877.c: New test.
    
    From-SVN: r236116

commit 801ae167385459a723a684719b4c902be2f6fed5
Author: Ilya Enkovich <ilya.enkovich@intel.com>
Date:   Wed May 11 09:51:49 2016 +0000

    backport: re PR tree-optimization/70876 (ICE in chkp_find_bounds: Unexpected tree code with_size_expr)
    
    gcc/
    
            Backport from mainline r236086.
            2016-05-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR tree-optimization/70876
            * tree-chkp.c (chkp_find_bounds_1): Support WITH_SIZE_EXPR.
            * gcc/calls.c (initialize_argument_information): Bind bounds
            with corresponding args passed by reference.
    
    gcc/testsuite/
    
            Backport from mainline r236086.
            2016-05-10  Ilya Enkovich  <ilya.enkovich@intel.com>
    
            PR tree-optimization/70876
            * gcc.target/i386/pr70876.c: New test.
    
    From-SVN: r236115

commit de065555c95c77e46ed3f2cdc36d8f675f82f59f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 11 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236109

commit 3d7dd20722e5bb86a60a5ab0eeea083ad1881822
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Tue May 10 17:24:32 2016 +0000

    backport: re PR target/70963 (vec_cts/vec_ctf intrinsics produce wrong results for 64-bit floating point)
    
    [gcc]
    
    2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/70963
            * config/rs6000/vsx.md (vsx_xvcvdpsxds_scale): Generate correct
            code for a zero scale factor.
            (vsx_xvcvdpuxds_scale): Likewise.
    
    [gcc/testsuite]
    
    2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            PR target/70963
            * gcc.target/powerpc/pr70963.c: New.
    
    From-SVN: r236097

commit 6c8aca3dc92c2ba3a815d7b80bbbe017075d6878
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue May 10 18:59:04 2016 +0200

    backport: re PR tree-optimization/70916 (gcc ICE at -O3 on valid code on x86_64-linux-gnu in "tree_operand_check")
    
            Backported from mainline
            2016-05-03  Jakub Jelinek  <jakub@redhat.com>
    
            PR tree-optimization/70916
            * tree-vect-patterns.c (vect_recog_mask_conversion_pattern): Give up
            if COND_EXPR rhs1 is neither SSA_NAME nor COMPARISON_CLASS_P.
    
            * gcc.c-torture/compile/pr70916.c: New test.
    
    From-SVN: r236094

commit 9308a3f9daf49474720385ab7aac30ef6415a21f
Author: Yuri Rumyantsev <ysrumyan@gmail.com>
Date:   Tue May 10 14:26:37 2016 +0000

    backport: re PR debug/70935 (ICE: verify_ssa failed (error: definition in block 9 does not dominate use in block 12) w/ -O3 -g)
    
    gcc/
    
    2016-05-10  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            Backport from mainline r235962.
            2016-05-06  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            PR debug/70935
            * tree-ssa-loop-unswitch.c (find_loop_guard): Reject guard edge with
            loop latch destination.
    
    gcc/testsuite/
    
    2016-05-10  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            Backport from mainline r235962.
            2016-05-06  Yuri Rumyantsev  <ysrumyan@gmail.com>
    
            PR debug/70935
            * gcc.dg/torture/pr70935.c: New test.
    
    From-SVN: r236081

commit 54e99a7c340c64ee4e870ff24270a028965941f8
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Tue May 10 09:02:37 2016 +0000

    S/390: Disable scalar vector instructions with -mno-vx.
    
    Although the scalar variants of the vector instructions aren't
    actually vector instructions they are still executed in the vector
    facility and therefore need to be disabled when disabling the facility
    with -mno-vx.
    
    Fixed with the attached patch.  Committed to head, GCC 6, and GCC 5
    branches.
    
    gcc/ChangeLog:
    
    2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-05-10  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            * config/s390/s390.md ("*vec_cmp<insn_cmp>df_cconly")
            ("*fixuns_truncdfdi2_z13")
            ("*fixuns_trunc<FP:mode><GPR:mode>2_z196")
            ("*fix_truncdfdi2_bfp_z13", "*floatunsdidf2_z13")
            ("*extendsfdf2_z13"): Replace TARGET_Z13 with TARGET_VX.
    
    From-SVN: r236068

commit 91fb37f000c1fe1f5a74823d2e1d64285f78a54f
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 10 07:03:07 2016 +0000

    [libatomic] Add RTEMS support
    
    gcc/
    
            * config/rtems.h (LIB_SPEC): Add -latomic.
    
    libatomic/
    
            * configure.tgt (configure_tgt_pre_target_cpu_XCFLAGS): New variable.
            (*-*-rtems*): New supported target.
            * config/rtems/host-config.h: New file.
            * config/rtems/lock.c: Likewise.
    
    From-SVN: r236063

commit 67657e217121bd0059051658dd754cf931309816
Author: Sebastian Huber <sebastian.huber@embedded-brains.de>
Date:   Tue May 10 07:00:22 2016 +0000

    [RTEMS] Redefine microblaze LINK_SPEC
    
    gcc/
    
            * config/microblaze/rtems.h: Redefine LINK_SPEC to avoid
            xilink.ld and flags not relevant to RTEMS.
    
    From-SVN: r236062

commit 71cc8d346daca409905371653d5ae0dbf58cbc94
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 10 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236055

commit 520ec6407abb088117263d86e655b090d24686ce
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 9 23:09:35 2016 +0100

    * sv.po: Update.
    
    From-SVN: r236051

commit 71a712641ee3a86f9b6f81f08f551a9b925b4503
Author: Uros Bizjak <uros@gcc.gnu.org>
Date:   Mon May 9 21:03:11 2016 +0200

    i386.md (absneg splitters with general regs): Use general_reg_operand predicate.
    
            * config/i386/i386.md (absneg splitters with general regs): Use
            general_reg_operand predicate.
            (btsq peephole2): Use x86_64_immediate_operand to check if new
            value is suitable for immediate operand.  Generate emitted insn
            using RTL expressions.
            (btcq peephole2): Ditto.
            (btrq peephole2): Ditto.  Generate correct immediate operand
            for AND masking.
    
    testsuite/ChangeLog:
    
            * gcc.target/i386/fabsneg-1.c New test.
    
    From-SVN: r236044

commit 8bc04b4503452d8405ac47e921a1c6cfaf32c5dd
Author: Ville Voutilainen <ville.voutilainen@gmail.com>
Date:   Mon May 9 17:44:32 2016 +0300

    Avoid endless run-time recursion for copying single-element tuples where the...
    
            Avoid endless run-time recursion for copying single-element
            tuples where the element type is by-value constructible
            from any type.
            * include/std/tuple (_NotSameTuple): New.
            * include/std/tuple (tuple(_UElements&&...): Use it.
            * testsuite/20_util/tuple/cons/element_accepts_anything_byval.cc: New.
    
    From-SVN: r236036

commit 3abbbcc0c734ae9048a0a0891da99a2b59414b12
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 9 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r236016

commit d2e598e2cc58dc0d7411c78923694db086d5b0c7
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Sun May 8 11:42:49 2016 +0000

    Compile libcilkrts with -funwind-tables (PR target/60290)
    
            Backport from mainline
            2016-04-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>
    
            PR target/60290
            * Makefile.am (GENERAL_FLAGS): Add -funwind-tables.
            * Makefile.in: Regenerate.
    
    From-SVN: r236005

commit 836aeb985065ea0957d9fc6b58fafac604e56473
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 8 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r236002

commit ea978abef3c77aef25f55b784776d66bbcd9a72b
Author: Tom de Vries <tom@codesourcery.com>
Date:   Sat May 7 07:02:36 2016 +0000

    backport "Handle NULL def in build_cross_bb_scalars_def"
    
    2016-05-07  Tom de Vries  <tom@codesourcery.com>
    
            backport:
            2016-05-07  Tom de Vries  <tom@codesourcery.com>
    
            PR tree-optimization/70956
            * graphite-scop-detection.c (build_cross_bb_scalars_def): Handle NULL
            def.
    
            * gcc.dg/graphite/pr70956.c: New test.
    
    From-SVN: r235995

commit c59d1253566d7a1ed40afa2b3b18e734d609d453
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat May 7 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235991

commit bf29e2bd8133c7fc9f526b1256e64993e8ea655c
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri May 6 10:54:12 2016 +0000

    re PR sanitizer/70875 (ICE in get_ubsan_type_info_for_type with -fsanitize=undefined)
    
            PR sanitizer/70875
            * ubsan.c (get_ubsan_type_info_for_type): Remove assert.
    
            * gcc.dg/ubsan/bounds-3.c: New test.
    
    From-SVN: r235959

commit aa0f975dd06b7cd4bb1ddd7dd05d36ada8060442
Author: Marek Polacek <polacek@redhat.com>
Date:   Fri May 6 10:50:03 2016 +0000

    re PR sanitizer/70342 (g++ -fsanitize=undefined never finishes compiling (>24h) in qtxmlpatterns test suite)
    
            PR sanitizer/70342
            * fold-const.c (tree_single_nonzero_warnv_p): For TARGET_EXPR, use
            TARGET_EXPR_SLOT as a base.
    
            * g++.dg/ubsan/null-7.C: New test.
    
    From-SVN: r235958

commit bdf50a4fd23bd4593022ac3dca1b8292ca0fdea0
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Fri May 6 09:11:56 2016 +0000

    re PR ada/70969 (bootstrap failure: s-unstyp.ads:40:15: violation of No_Elaboration_Code_All at line 42)
    
            PR ada/70969
            * system-darwin-ppc64.ads: Add pragma No_Elaboration_Code_All.
            * system-linux-armeb.ads: Likewise.
            * system-linux-mips64el.ads: Likewise.
            * system-linux-mips.ads: Likewise.
            * system-linux-mipsel.ads: Likewise.
            * system-linux-ppc64.ads: Likewise.
            * system-linux-sparcv9.ads: Likewise.
            * system-rtems.ads: Likewise.
    
    From-SVN: r235947

commit ab585c2bb7e342e6a21814bb6d473a8a4448578b
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri May 6 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r235939

commit 3c041dd8f0485977781fbabd414be4fceeac7d5c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu May 5 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r235917

commit f1216d257e4b9974abe19c3b37a9973a7ca41475
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Wed May 4 20:25:10 2016 +0000

    tree-ssa-coalesce.c (gimple_can_coalesce_p): Fix reference in head comment.
    
            * tree-ssa-coalesce.c (gimple_can_coalesce_p): Fix reference in head
            comment.
            (compute_samebase_partition_bases): Fix typo.
    
    From-SVN: r235901

commit 5a9c5ee4167a8a009c359c35023d9b2eb17c21d5
Author: Samuel Thibault <samuel.thibault@ens-lyon.org>
Date:   Wed May 4 19:14:17 2016 +0000

    s-osinte-gnu.ads (Get_Page_Size): Return int and use getpagesize instead of __getpagesize.
    
            * s-osinte-gnu.ads (Get_Page_Size): Return int and use getpagesize
            instead of __getpagesize.
    
    From-SVN: r235897

commit 9a37b919a61388911f01bf57c8b3901fe2fdf085
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed May 4 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235855

commit 090da03976a6aa942e6f50c78d331382409e7012
Author: Pierre-Marie de Rodat <derodat@adacore.com>
Date:   Tue May 3 16:20:47 2016 +0000

    Fix a typo in dwarf2out.c:resolve_args_picking_1
    
    Under specific circumstances for Ada programs, such as in the testcase
    this change adds, the DWARF back-end currently crashes because of
    inconsistent internal state. This is due to a typo: a local variable is
    called frame_offset_ but resolve_args_picking_1 wrongly modifies
    emit-rtl.h's frame_offset instead.
    
    This change fixes this typo.
    
    Backport from mainline
    gcc/
            * dwarf2out.c (resolve_args_picking_1): Replace the frame_offset
            occurence with frame_offset_ ones.
    
    gcc/testsuite/
            * gnat.dg/debug5.adb: New testcase.
    
    From-SVN: r235829

commit 86233708445f33f4d6f727a2bda0ce26914ea3d4
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Tue May 3 16:07:48 2016 +0100

    * nl.po: Update.
    
    From-SVN: r235828

commit 56a645dd46afc54605fa99089b0e63ac55193fba
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue May 3 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r235799

commit 2438b56e2c5896192947408fc7a9e2bba385203b
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Mon May 2 20:33:47 2016 +0000

    re PR ada/70900 (a library-level class-wide subprogram is not generated into object file)
    
            PR ada/70900
            Backport from mainline
            2016-04-18  Ed Schonberg  <schonberg@adacore.com>
    
            * sem_ch6.adb (Process_Formals): Do not set a delay freeze on
            a subprogram that returns a class-wide type, if the subprogram
            is a compilation unit, because otherwise gigi will treat the
            subprogram as external, leading to link errors.
    
    From-SVN: r235789

commit ee388efc42e9f97ec1a7fc27a9d8848ff3ac550d
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon May 2 18:12:21 2016 +0000

    Don't install libvtv without --enable-vtable-verify
    
            * Makefile.am (toolexeclib_LTLIBRARIES): Only set if
            ENABLE_VTABLE_VERIFY.
            Simplify.
            * Makefile.in: Regenerate.
    
    From-SVN: r235773

commit 585aee6d97c70d3e804f1df5bf8f7115f261c2fd
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon May 2 18:28:01 2016 +0100

    * sv.po, zh_CN.po: Update.
    
    From-SVN: r235769

commit 26ff988b76a415f5697f9c14f74ebb1ca64c55d1
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon May 2 13:16:33 2016 +0000

    Fix make install-gcc-specs with empty GCC_SPEC_FILES
    
            * gcc-interface/Makefile.in (install-gcc-specs): Use foreach.
            Honor DESTDIR.
    
    From-SVN: r235757

commit ce59e68b31a4edca50ca464d7032185b91bbd3bc
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon May 2 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235696

commit 4fd3f85981a6b3746bc114518bc24a71e502922f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun May 1 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r235685

commit 8fd6a96e7234f158573b03b22567fa14a8a7c8ab
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sat Apr 30 22:50:06 2016 +0100

    * zh_CN.po: Update.
    
    From-SVN: r235682

commit f43e864b607a394bacee034b71b2117c5fd90db7
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Sat Apr 30 15:12:09 2016 +0100

    * sv.po: Update.
    
    From-SVN: r235680

commit 8ecdb050484bf5f3384a6ac5148df4fa5e10af32
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 30 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235667

commit 8931faa748b343f33c0a38d487fe0eb99da1e52d
Author: Cesar Philippidis <cesar@codesourcery.com>
Date:   Fri Apr 29 10:37:55 2016 -0700

    re PR middle-end/70626 (bogus results in 'acc parallel loop' reductions)
    
            gcc/c-family/
            PR middle-end/70626
            * c-common.h (c_oacc_split_loop_clauses): Add boolean argument.
            * c-omp.c (c_oacc_split_loop_clauses): Use it to duplicate
            reduction clauses in acc parallel loops.
    
            gcc/c/
            PR middle-end/70626
            * c-parser.c (c_parser_oacc_loop): Don't augment mask with
            OACC_LOOP_CLAUSE_MASK.
            (c_parser_oacc_kernels_parallel): Update call to
            c_oacc_split_loop_clauses.
    
            gcc/cp/
            PR middle-end/70626
            * parser.c (cp_parser_oacc_loop): Don't augment mask with
            OACC_LOOP_CLAUSE_MASK.
            (cp_parser_oacc_kernels_parallel): Update call to
            c_oacc_split_loop_clauses.
    
            gcc/fortran/
            PR middle-end/70626
            * trans-openmp.c (gfc_trans_oacc_combined_directive): Duplicate
            the reduction clause in both parallel and loop directives.
    
            gcc/testsuite/
            PR middle-end/70626
            * c-c++-common/goacc/combined-reduction.c: New test.
            * gfortran.dg/goacc/reduction-2.f95: Add check for kernels reductions.
    
            libgomp/
            PR middle-end/70626
            * testsuite/libgomp.oacc-c++/template-reduction.C: Adjust test.
            * testsuite/libgomp.oacc-c-c++-common/combined-reduction.c: New test.
            * testsuite/libgomp.oacc-fortran/combined-reduction.f90: New test.
    
    From-SVN: r235650

commit a35c946f88b822335295facc73986a8326e793da
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Fri Apr 29 13:50:42 2016 +0200

    backport: libjava.exp (libjava_arguments): Use 'file normalize' rather than the defunct DejaGnu 'absolute' proc.
    
    2016-04-29  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            backport from trunk:
            2016-04-20  Ben Elliston  <bje@gnu.org>
    
            * testsuite/lib/libjava.exp (libjava_arguments): Use 'file
            normalize' rather than the defunct DejaGnu 'absolute' proc.
    
    From-SVN: r235634

commit 41a36fa907dba5feebab28bb3cde42bfa92d27a8
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 29 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235618

commit 76677a7ffa2811edf7b41ddbea9d474136950c45
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Thu Apr 28 21:45:48 2016 +0200

    re PR target/70858 (__builtin_ia32_bextr_u64 ICE with '-m32 -march=core-avx2')
    
            PR target/70858
            * config/i386/i386.c (bdesc_special_args): Add | OPTION_MASK_ISA_64BIT
            to __builtin_ia32_lwpval64 and __builtin_ia32_lwpins64.
            (bdesc_args): Add | OPTION_MASK_ISA_64BIT to __builtin_ia32_bextr_u64,
            __builtin_ia32_bextri_u64, __builtin_ia32_bzhi_di,
            __builtin_ia32_pdep_di and __builtin_ia32_pext_di.
    
            * gcc.target/i386/pr70858.c: New test.
    
    From-SVN: r235609

commit 0617241e23e23a5e1648ba00c05d7a2718ce5acb
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Thu Apr 28 16:21:41 2016 +0000

    Don't include minor version in GCJ ABI version (PR java/70839)
    
            PR java/70839
            * decl.c (parse_version): Remove minor handling.
    
    From-SVN: r235578

commit 1d6701b0d635cf1248d63d6f949be6758e1a2f70
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Apr 28 15:39:12 2016 +0100

    Update .po files.
    
    gcc/po:
            * be.po, da.po, de.po, el.po, es.po, fi.po, fr.po, hr.po, id.po,
            ja.po, nl.po, ru.po, sr.po, sv.po, tr.po, uk.po, vi.po, zh_CN.po,
            zh_TW.po: Update.
    
    libcpp/po:
            * be.po, ca.po, da.po, de.po, el.po, eo.po, es.po, fi.po, fr.po,
            id.po, ja.po, nl.po, pr_BR.po, ru.po, sr.po, sv.po, tr.po, uk.po,
            vi.po, zh_CN.po, zh_TW.po: Update.
    
    From-SVN: r235572

commit a17971d4d0eaf5b484ccba5cdcc064f6864e05a8
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Apr 28 10:58:54 2016 +0000

    re PR ada/70786 (Missing "not" breaks Ada.Text_IO.Get_Immediate(File, Item, Available))
    
            PR ada/70786
            * a-textio.adb (Get_Immediate): Add missing 'not' in expression.
    
    From-SVN: r235555

commit b481620436396a3f10ef84de18debe55bf8c4f27
Author: Eric Botcazou <ebotcazou@adacore.com>
Date:   Thu Apr 28 10:49:13 2016 +0000

    backport: re PR ada/70759 (Ada rts fails to build with -mabi=ilp32)
    
            Backport from mainline
            2016-04-27  Eric Botcazou  <ebotcazou@adacore.com>
    
            PR ada/70759
            * stor-layout.h (internal_reference_types): Delete.
            * stor-layout.c (reference_types_internal): Likewise.
            (internal_reference_types): Likewise.
            (layout_type) <REFERENCE_TYPE>: Adjust.
    
    From-SVN: r235553

commit b23a4c00461580bbd1ce55385db9cbee374b14f3
Author: Paolo Carlini <paolo.carlini@oracle.com>
Date:   Thu Apr 28 09:58:45 2016 +0000

    re PR c++/70540 (ICE on invalid code in cxx_incomplete_type_diagnostic, at cp/typeck2.c:569)
    
    /cp
    2016-04-28  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70540
            * semantics.c (process_outer_var_ref): Unconditionally return
            error_mark_node when mark_used returns false.
    
    /testsuite
    2016-04-28  Paolo Carlini  <paolo.carlini@oracle.com>
    
            PR c++/70540
            * g++.dg/cpp0x/auto48.C: New.
    
    From-SVN: r235552

commit e9ab575c32394283d613c1e644c8a6f8b9691662
Author: Matthias Klose <doko@ubuntu.com>
Date:   Thu Apr 28 08:22:29 2016 +0000

    decl.c (parse_version): Don't encode the minor version in the abi version.
    
    2016-04-28  Matthias Klose  <doko@ubuntu.com>
    
            * decl.c (parse_version): Don't encode the minor version in the abi
            version.
    
    From-SVN: r235547

commit b8d933d659cc69c0a721d94ff779f5d6d736163f
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 28 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235542

commit 791949f72da13dce64389f5a5fb45356113138a3
Author: Bill Schmidt <wschmidt@linux.vnet.ibm.com>
Date:   Wed Apr 27 18:42:29 2016 +0000

    backport: rs6000-builtin.def: Correct pasto error for stxvd2x and stxvw4x built-in functions.
    
    2016-04-27  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-25  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>
    
            * config/rs6000/rs6000-builtin.def: Correct pasto error for
            stxvd2x and stxvw4x built-in functions.
    
    From-SVN: r235527

commit aaf704abc2a0c995f02f0f9cd09c2f177a836550
Author: Dominique d'Humieres <dominiq@lps.ens.fr>
Date:   Wed Apr 27 18:58:19 2016 +0200

    submodule_14.f08: Add cleanup-submodules.
    
    2016-04-27  Dominique d'Humieres  <dominiq@lps.ens.fr>
    
            * gfortran.dg/submodule_14.f08: Add cleanup-submodules.
            * gfortran.dg/submodule_15.f08: Likewise.
    
    From-SVN: r235517

commit c619dbb0363533f2b5d27812100ca64bc3c724d3
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Wed Apr 27 13:35:03 2016 +0000

    X86: Fix a typo in call_insn_operand
    
    r231923 has
    
     ;; Test for a valid operand for a call instruction.
     ;; Allow constant call address operands in Pmode only.
     (define_special_predicate "call_insn_operand"
       (ior (match_test "constant_call_address_operand
                         (op, mode == VOIDmode ? mode : Pmode)")
            (match_operand 0 "call_register_no_elim_operand")
    -       (and (not (match_test "TARGET_X32"))
    -           (match_operand 0 "memory_operand"))))
    +       (ior (and (not (match_test "TARGET_X32"))
    +                (match_operand 0 "sibcall_memory_operand"))
                                       ^^^^^^^^^^^^^^^^^^^^^^^ A typo.
    +           (and (match_test "TARGET_X32 && Pmode == DImode")
    +                (match_operand 0 "GOT_memory_operand")))))
    
    "sibcall_memory_operand" should be "memory_operand".
    
    gcc/
    
            Backported from mainline
            PR target/70750
            * config/i386/predicates.md (call_insn_operand): Replace
            sibcall_memory_operand with memory_operand.
    
    gcc/testsuite/
    
            Backported from mainline
            PR target/70750
            * gcc.target/i386/pr70750-1.c: New test.
            * gcc.target/i386/pr70750-2.c: Likewise.
    
    From-SVN: r235509

commit d69d54a04947f21fd08ef4ea708549fd7bc9e703
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 27 13:10:47 2016 +0000

    re PR ipa/70785 (LTO bootstrap with IPA PTA is broken)
    
    2016-04-27  Richard Biener  <rguenther@suse.de>
    
            PR ipa/70785
            * tree-ssa-structalias.c (refered_from_nonlocal_fn): New
            function cummulating used_from_other_partition, externally_visible
            and force_output from aliases.
            (refered_from_nonlocal_var): Likewise.
            (ipa_pta_execute): Use call_for_symbol_and_aliases to cummulate
            node flags properly.
    
    From-SVN: r235501

commit aa6df39f8f51386f1573c4073a526c794ff39263
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 27 14:23:50 2016 +0200

    backport: re PR sanitizer/70712 (False positive from AddressSanitizer with use of 'alignas')
    
            Backported from mainline
            2016-04-23  Jakub Jelinek  <jakub@redhat.com>
    
            PR sanitizer/70712
            * cfgexpand.c (expand_stack_vars): Fix typo.
    
            * c-c++-common/asan/pr70712.c: New test.
    
    From-SVN: r235490

commit 4d47c1c61f7ab4791cf5be168950628b85cbd6ec
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 27 14:22:47 2016 +0200

    backport: re PR middle-end/70680 (OpenMP SIMD linear variable privatized too eagerly)
    
            Backported from mainline
            2016-04-19  Jakub Jelinek  <jakub@redhat.com>
    
            PR middle-end/70680
            * gimplify.c (gimplify_omp_for): Call omp_notice_variable for
            implicitly linear or lastprivate iterator on the outer context.
    
            * testsuite/libgomp.c/pr70680-1.c: New test.
            * testsuite/libgomp.c/pr70680-2.c: New test.
    
    From-SVN: r235489

commit ce140151dc5b51918be3d781dd1385b91de0a9b7
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Wed Apr 27 12:09:45 2016 +0000

    AVX-512. PR target/70728. Use separate constraint for AVX-512BW
    
    PR target/70728
    gcc/
            * gcc/config/i386/sse.md (define_insn "<shift_insn><mode>3<mask_name>"):
            Extract AVX-512BW constraint from AVX.
    gcc/testsuite/
            * gcc.target/i386/pr70728.c: New test.
    
    From-SVN: r235487

commit 4173c472d618f80e6f7e0d86aff25ac1213dfe08
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 27 12:38:16 2016 +0200

    * BASE-VER: Set to 6.1.1.
    
    From-SVN: r235476

commit a9425683787eeba7b9a4bb6c36588885160ab1f1
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 27 08:20:21 2016 +0000

    Update ChangeLog and version files for release
    
    From-SVN: r235473

commit 23588ee8e8345767af5a65a30ce53bc9d8264877
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Wed Apr 27 09:49:40 2016 +0200

    * gennews (files): Add files for GCC 6.
    
    From-SVN: r235471

commit c3e0d67fd3c63f4072d23707f0856c629d887dbb
Author: Svante Signell <svante.signell@gmail.com>
Date:   Wed Apr 27 07:39:18 2016 +0000

    Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb.
    
            * gcc-interface/Makefile.in (x86 GNU/Hurd): Use s-osinte-gnu.adb.
            * s-osinte-gnu.ads: Small tweaks.
            * s-osinte-gnu.adb: New file.
    
    From-SVN: r235468

commit 00f4cb522c0df8c388b05a97488a54b9da431e47
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 27 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r235463

commit abc0a4cb5d0663db886227413d305f60b15314a0
Author: Jakub Jelinek <jakub@redhat.com>
Date:   Tue Apr 26 08:08:20 2016 +0200

    re PR bootstrap/70704 (AIX bootstrap comparison failure)
    
            PR bootstrap/70704
            * pt.c (build_non_dependent_expr): Temporarily disable flag_checking
            guarded code.
    
    From-SVN: r235429

commit bd6b809c335184316edab246aaa35805c188dd0a
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 26 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235427

commit 1f5d3a82a9da98d80c03e839d9e26cf0ca9e7db9
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Mon Apr 25 21:41:36 2016 +0100

    * sv.po: Update.
    
    From-SVN: r235420

commit 1e47ad3ce8ab9a2dc4204607f305ea46c53f0c0e
Author: Richard Biener <rguenther@suse.de>
Date:   Mon Apr 25 10:50:46 2016 +0000

    re PR tree-optimization/70780 (wrong code at -O2 and -O3 on x86_64-linux-gnu)
    
    2016-04-25  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70780
            * tree-ssa-pre.c (compute_antic_aux): Also return true if the block
            wasn't visited yet.
            (compute_antic): Mark blocks with abnormal preds as visited as
            they have a final empty antic-in solution already.
    
            * gcc.dg/torture/pr70780.c: New testcase.
    
    From-SVN: r235408

commit 03cd4005faa80225baa1339e380f6c9640701c0d
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 25 00:16:20 2016 +0000

    Daily bump.
    
    From-SVN: r235400

commit fcc86393f2150572c7215d1dd822dfa09a94c93e
Author: Jerry DeLisle <jvdelisle@gcc.gnu.org>
Date:   Sun Apr 24 05:07:21 2016 +0000

    re PR libfortran/70684 (incorrect reading of values from file on Windows)
    
    2016-04-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>
    
            PR libgfortran/70684
            * io/list_read (check_buffers): Add '\r' to check for end of line.
            factor.
    
            * gfortran.dg/list_read_14.f90: New test.
    
    From-SVN: r235391

commit d32369dc0512b41bcacf781e5be0d9c8e65ace50
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 24 00:16:19 2016 +0000

    Daily bump.
    
    From-SVN: r235389

commit c53db17cdde194d508c2d991ca2e4b3918930292
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 23 00:16:17 2016 +0000

    Daily bump.
    
    From-SVN: r235378

commit 5b57b74b81877f0222518a4b4b57e5c7f65db0f8
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Apr 22 11:39:03 2016 -0400

    PR c++/68206 - Fix constexpr diagnostics with loops.
    
            PR c++/68530
            * constexpr.c (potential_constant_expression_1): Handle LOOP_EXPR
            and GOTO_EXPR.
    
    From-SVN: r235369

commit 4af956c8a21be8401cdb49c4b6cc063bff156cd3
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Apr 22 11:38:57 2016 -0400

    PR c++/70522 - fix N4381 customization points
    
            * name-lookup.c (qualified_lookup_using_namespace): Look through
            hidden names.
    
    From-SVN: r235368

commit d61225d3905b15bb7e09d745492dba1e39171bc3
Author: H.J. Lu <hongjiu.lu@intel.com>
Date:   Fri Apr 22 13:17:26 2016 +0000

    Replace -skip-rax-setup with -mskip-rax-setup
    
            Backport from mainline
            * doc/invoke.texi: Replace -skip-rax-setup with -mskip-rax-setup.
    
    From-SVN: r235366

commit 22af75f61101ae33dd5f892c22ccffca10c54cba
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Fri Apr 22 11:09:22 2016 +0000

    [PATCH 2/2] (header usage fix) include c++ headers in system.h
    
    cherry picked from trunk r235362
    
    2016-04-22  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * system.h (list, map, set, vector): Include conditionally.
            * auto-profile.c (INCLUDE_MAP, INCLUDE_SET): Define.
            * graphite-isl-ast-to-gimple.c (INCLUDE_MAP): Define.
            * ipa-icf.c (INCLUDE_LIST): Define.
            * config/aarch64/cortex-a57-fma-steering.c (INCLUDE_LIST): Define.
            * config/sh/sh.c (INCLUDE_VECTOR): Define.
            * config/sh/sh_treg_combine.cc (INCLUDE_ALGORITHM): Define.
            (INCLUDE_LIST, INCLUDE_VECTOR): Define.
            * cp/logic.cc (INCLUDE_LIST): Define.
            * fortran/trans-common.c (INCLUDE_MAP): Define.
    
    From-SVN: r235364

commit 08a069132ceecf571198fbf1af9ee27c4ee19b7c
Author: Szabolcs Nagy <szabolcs.nagy@arm.com>
Date:   Fri Apr 22 11:08:16 2016 +0000

    [PATCH 1/2] (header usage fix) remove unused system header includes
    
    cherry picked from trunk r235361
    
    2016-04-22  Szabolcs Nagy  <szabolcs.nagy@arm.com>
    
            * auto-profile.c: Remove <string.h> include.
            * ipa-icf-gimple.c: Remove <list> include.
            * diagnostic.c: Remove <new> include.
            * genmatch.c: Likewise.
            * pretty-print.c: Likewise.
            * toplev.c: Likewise
            * c/c-objc-common.c: Likewise.
            * cp/error.c: Likewise.
            * fortran/error.c: Likewise.
    
    From-SVN: r235363

commit 2b854106db55b23f91ee7f41f97b14036bac2a1c
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Fri Apr 22 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235356

commit c48d896ee20de89b5529a192126ae759770907a4
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Apr 21 21:59:21 2016 +0100

    * sv.po: Update.
    
    From-SVN: r235350

commit 950fb0957d05df1709d5b14c4a136565e90e170a
Author: Joseph Myers <joseph@codesourcery.com>
Date:   Thu Apr 21 16:26:49 2016 +0100

    Regenerate .pot files for GCC 6.
    
    gcc/po:
            * gcc.pot: Regenerate.
    
    libcpp/po:
            * cpplib.pot: Regenerate.
    
    From-SVN: r235343

commit ed1a871c2aa31738f082c775989838bca9e76928
Author: Alexander Monakov <amonakov@ispras.ru>
Date:   Thu Apr 21 16:42:13 2016 +0300

    libgomp nvptx plugin: make cuMemFreeHost error non-fatal
    
    From-SVN: r235340

commit b9dc74ddc67b181fea510f9a751fd1630c4e1b47
Author: Maxim Ostapenko <m.ostapenko@samsung.com>
Date:   Thu Apr 21 12:12:53 2016 +0000

    Cherry-pick r266868 from upstream.
    
            PR sanitizer/70624
            * asan/asan_mac.cc: Cherry pick upstream r266868.
    
    From-SVN: r235337

commit c09ee3b3b2a3400104708f72025156dfc35b33f2
Author: Richard Biener <rguenther@suse.de>
Date:   Thu Apr 21 11:57:28 2016 +0000

    re PR middle-end/70747 (ICE on valid code on x86_64-linux-gnu: verify_gimple failed)
    
    2016-04-21  Richard Biener  <rguenther@suse.de>
    
            PR middle-end/70747
            * fold-const.c (fold_comparison): Return properly typed
            constant boolean.
    
            * gcc.dg/pr70747.c: New testcase.
    
    From-SVN: r235336

commit 64af302b16657fcf103176f423bb68bdcd1e829e
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Thu Apr 21 00:16:24 2016 +0000

    Daily bump.
    
    From-SVN: r235300

commit 8419c041b97638fa5fb8d4b10107ef9367f2f6c9
Author: Andrew Pinski <apinski@cavium.com>
Date:   Wed Apr 20 13:38:31 2016 +0000

    [AArch64] Work around PR target/64971
    
    2016-04-20  Andrew Pinski  <apinski@cavium.com>
                Kyrylo Tkachov  <kyrylo.tkachov@arm.com>
    
            PR target/64971
            * config/aarch64/aarch64.md (sibcall): Force call
            address to be DImode for ILP32.
            (sibcall_value): Likewise.
    
            * gcc.c-torture/compile/pr37433-1.c: New testcase.
    
    
    Co-Authored-By: Kyrylo Tkachov <kyrylo.tkachov@arm.com>
    
    From-SVN: r235282

commit 660403359c0b03ce749684022954105ddc6dd447
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 20 09:24:29 2016 -0400

    * c-cppbuiltin.c (c_cpp_builtins): Fix __cpp_range_based_for.
    
    From-SVN: r235280

commit 2c700e3ffb61a4e18ba6400c215cd5d682409ed6
Author: Jason Merrill <jason@redhat.com>
Date:   Wed Apr 20 09:24:17 2016 -0400

    PR c++/66543 - -Wunused-but-set* false positives
    
            * expr.c (mark_exp_read): Handle NON_DEPENDENT_EXPR.
            * pt.c (make_pack_expansion): Call mark_exp_read.
            * semantics.c (finish_id_expression): Call mark_type_use in
            unevaluated context.
    
    From-SVN: r235279

commit 1e87d0e3a72803c7d5c95d2fd2edcbfa910ddb3d
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Apr 20 12:48:37 2016 +0000

    tree-if-conv.c (is_false_predicate): For NULL_TREE return false rather than true.
    
            * tree-if-conv.c (is_false_predicate): For NULL_TREE return false
            rather than true.
    
    From-SVN: r235273

commit 35512d3852f8179230f3f74668b61a3fc3e67f78
Author: Marek Polacek <polacek@redhat.com>
Date:   Wed Apr 20 10:08:31 2016 +0000

    re PR tree-optimization/70725 (Internal compiler error (ICE) on valid code)
    
            PR tree-optimization/70725
            * tree-if-conv.c (is_false_predicate): New function.
            (predicate_mem_writes): Use it.
    
            * gcc.dg/pr70725.c: New test.
    
    From-SVN: r235252

commit e7acf9386fed12b2a6b4ad60be8d96058ae0e92d
Author: Richard Biener <rguenther@suse.de>
Date:   Wed Apr 20 07:21:42 2016 +0000

    re PR tree-optimization/70726 (Internal compiler error (ICE) on valid code)
    
    2016-04-20  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70726
            * tree-vect-stmts.c (vectorizable_shift): Do not use scalar
            shift amounts from a pattern stmt operand.
    
            * g++.dg/vect/pr70726.cc: New testcase.
    
    From-SVN: r235237

commit f7f7db22e8cad7654674caf9df889d15a8e1bc07
Author: Andreas Krebbel <krebbel@linux.vnet.ibm.com>
Date:   Wed Apr 20 07:16:03 2016 +0000

    PR70674: S/390: Add memory barrier to stack pointer restore from fpr.
    
    This patches fixes a problem with stack variable accesses being
    scheduled after the stack pointer restore instructions.  In the
    testcase this happened with the stack variable 'a' accessed through the
    frame pointer.
    
    The existing stack_tie we have in the backend is basically useless
    when trying to block stack variable accesses from being scheduled
    across an insn.  The alias set of stack variables and the frame alias
    set usually differ and hence aren't in conflict with each other.  The
    solution appears to be a magic MEM term with a scratch register which
    is handled as a full memory barrier when analyzing scheduling
    dependencies.
    
    With the patch a (clobber (mem:BLK (scratch))) is being added to the
    restore instruction in order to prevent any memory operations to be
    scheduled across the insn.  The patch does that only for the one case
    where the stack pointer is restored from an FPR.  Theoretically this
    might happen also in the case where the stack pointer gets restored
    using a load multiple.  However, triggering that problem with
    load-multiple appears to be much harder since the load-multiple will
    restore the frame pointer as well.  So in order to see the problem a
    different call-clobbered register would need to be used as temporary
    stack pointer.
    
    Another case which needs to be handled some day is the stack pointer
    allocation part.  It needs to be a memory barrier as well.
    
    Bootstrapped and regression tested with --with-arch z196 and z13 on
    s390 and s390x.
    
    gcc/ChangeLog:
    
    2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/70674
            * config/s390/s390.c (s390_restore_gprs_from_fprs): Pick the new
            stack_restore_from_fpr pattern when restoring r15.
            (s390_optimize_prologue): Strip away the memory barrier in the
            parallel when trying to get rid of restore insns.
            * config/s390/s390.md ("stack_restore_from_fpr"): New insn
            definition for loading the stack pointer from an FPR.  Compared to
            the normal move insn this pattern includes a full memory barrier.
    
    gcc/testsuite/ChangeLog:
    
    2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            Backport from mainline
            2016-04-20  Andreas Krebbel  <krebbel@linux.vnet.ibm.com>
    
            PR target/70674
            * gcc.target/s390/pr70674.c: New test.
    
    From-SVN: r235235

commit 493281baac54ea2686335ec5a56b429aa12c34ee
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Wed Apr 20 00:16:18 2016 +0000

    Daily bump.
    
    From-SVN: r235229

commit 1c0b7795018fdcdb54528984cad24e7926829007
Author: Richard Biener <rguenther@suse.de>
Date:   Tue Apr 19 13:17:46 2016 +0000

    re PR tree-optimization/70724 (Miscompiles python3 with FDO)
    
    2016-04-19  Richard Biener  <rguenther@suse.de>
    
            PR tree-optimization/70724
            * tree-ssa-sccvn.c (scc_vn_restore_ssa_info): Split SSA info
            restoring out from ...
            (free_scc_vn): ... here.
            * tree-ssa-sccvn.h (scc_vn_restore_ssa_info): Declare.
            * tres-ssa-pre.c (pass_pre::execute): Restore SSA info before
            tail merging.
            (pass_fre::execute): Restore SSA info.
    
            * gcc.dg/torture/pr70724.c: New testcase.
    
    From-SVN: r235201

commit 1278f185fd704e9bc1ddf45490ec9e984268da55
Author: Jonathan Wakely <jwakely@redhat.com>
Date:   Tue Apr 19 14:06:30 2016 +0100

    * include/bits/random.h: Fix filename in comment.
    
    From-SVN: r235198

commit de491dc0675ef379ba28417894c2f89d4a9e7805
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Tue Apr 19 00:16:15 2016 +0000

    Daily bump.
    
    From-SVN: r235181

commit b7bd31af3ab5132bcd4e424b0481467036567a66
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Apr 18 15:43:26 2016 -0400

    re PR c++/70690 (r235002 miscompiles tcmalloc)
    
            PR c++/70690
    
            PR c++/70528
            * class.c (type_maybe_constexpr_default_constructor): New.
            (type_has_constexpr_default_constructor): Revert.
    
    From-SVN: r235171

commit 84abbac7acb163151ebaba6c05131b725e82091f
Author: Jason Merrill <jason@redhat.com>
Date:   Mon Apr 18 15:43:19 2016 -0400

    re PR c++/70505 (Constexpr failure when template type specified)
    
            PR c++/70505
    
            * pt.c (tsubst_baselink): Give the new TEMPLATE_ID_EXPR
            unknown_type_node, too.
    
    From-SVN: r235170

commit 12029950e8fae7d4b8bb1592939b2fa5b60175de
Author: Rainer Orth <ro@CeBiTec.Uni-Bielefeld.DE>
Date:   Mon Apr 18 18:42:41 2016 +0000

    Update install.texi for GCC 6 on Solaris
    
            * doc/install.texi (Specific, i?86-*-solaris2.10): Update gas and
            gld requirements.
            (Specific, *-*-solaris2*): Update Solaris 11 bundled gcc
            versions.
            Mention Solaris 11 packaging changes.
            Update gas and gld requirements.
            Remove reference to pre-Solaris 10 bug.
            (Specific, sparc-sun-solaris2*): Remove reference to pre-Solaris 10
            systems and bugs.
            (Specific, sparc64-*-solaris2*): Remove reference to bootstrap
            with cc.
    
    From-SVN: r235163

commit 557904e757f708f35cda38d25eba8def91b76295
Author: Matthew Wahab <matthew.wahab@arm.com>
Date:   Mon Apr 18 12:18:10 2016 +0000

    re PR target/70711 (GCC ARM big-endian ARMv8.1 code fails.)
    
            PR target/70711
            * config/arm/bpabi.h (BE8_LINK_SPEC): Add entries for armv8+crc,
            armv8.1-a and armv8.1-a+crc.
    
    From-SVN: r235133

commit 316bf64595c8997b77026e70e86239c9b0554d36
Author: Segher Boessenkool <segher@kernel.crashing.org>
Date:   Mon Apr 18 11:15:53 2016 +0200

    hsa: Fix bootstrap with older host compilers
    
    We didn't have __builtin_swap16 on all targets before GCC 4.8; hsa-brig
    tries to use it if the host GCC is 4.6 or up though, breaking bootstrap.
    This trivial patch fixes it.
    
    Noticed on gcc22.
    
    
            * has-brig.c (lendian16): Don't try to use __builtin_bswap16
            unless compiling with at least GCC-4.8.
    
    From-SVN: r235099

commit 278c4d790349318af2f57ef49bf6be8c0a97d4f0
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Mon Apr 18 00:16:13 2016 +0000

    Daily bump.
    
    From-SVN: r235089

commit 9f585d95ef03dbde8a315a92a97151c7a7e03415
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sun Apr 17 00:16:16 2016 +0000

    Daily bump.
    
    From-SVN: r235069

commit 2c46e496716161ea9387bd9e6b0c3f63db1088ac
Author: GCC Administrator <gccadmin@gcc.gnu.org>
Date:   Sat Apr 16 00:16:14 2016 +0000

    Daily bump.
    
    From-SVN: r235057

commit befd795a3f01b81db5f5bfb78be3ca6465a61b30
Author: Jason Merrill <jason@redhat.com>
Date:   Fri Apr 15 15:53:03 2016 -0400

    re PR c++/70685 (ICE: Segmentation fault)
    
            PR c++/70685
            * constexpr.c (get_fundef_copy): Handle null *slot.
    
    From-SVN: r235046

commit b8046cfea25d05e3b6f07b82c1e46c326ce4462b
Author: Kirill Yukhin <kirill.yukhin@intel.com>
Date:   Fri Apr 15 15:53:01 2016 +0000

    re PR target/70662 (vpbroadcastq assemble failure with -masm=intel -mavx512vbmi)
    
            PR target/70662
            * config/i386/sse.md (define_insn "<avx512>_vec_dup<mode><mask_name>"):
            Fix mode size check.
    
    From-SVN: r235040

commit 0e329f8b284a89c2f3c4ee0a7bf686f60fd23e38
Author: Jakub Jelinek <jakub@gcc.gnu.org>
Date:   Fri Apr 15 17:01:08 2016 +0200

    BASE-VER: Set to 6.0.1.
    
            * BASE-VER: Set to 6.0.1.
            * DEV-PHASE: Set to prerelease.
    
    From-SVN: r235036
