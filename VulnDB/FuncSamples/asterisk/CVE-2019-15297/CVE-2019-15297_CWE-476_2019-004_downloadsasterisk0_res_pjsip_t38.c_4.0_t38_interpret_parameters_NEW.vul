static int t38_interpret_parameters(void *obj)
{
	RAII_VAR(struct t38_parameters_task_data *, data, obj, ao2_cleanup);
	const struct ast_control_t38_parameters *parameters = data->frame->data.ptr;
	struct t38_state *state = t38_state_get_or_alloc(data->session);
	struct ast_sip_session_media *session_media = NULL;

	if (!state) {
		return 0;
	}

	switch (parameters->request_response) {
	case AST_T38_NEGOTIATED:
	case AST_T38_REQUEST_NEGOTIATE:         /* Request T38 */
		/* Negotiation can not take place without a valid max_ifp value. */
		if (!parameters->max_ifp) {
			if (data->session->t38state == T38_PEER_REINVITE) {
				t38_change_state(data->session, NULL, state, T38_REJECTED);
				ast_sip_session_resume_reinvite(data->session);
			} else if (data->session->t38state == T38_ENABLED) {
				t38_change_state(data->session, NULL, state, T38_DISABLED);
				ast_sip_session_refresh(data->session, NULL, NULL, NULL,
					AST_SIP_SESSION_REFRESH_METHOD_INVITE, 1, state->media_state);
				state->media_state = NULL;
			}
			break;
		} else if (data->session->t38state == T38_PEER_REINVITE) {
			state->our_parms = *parameters;
			/* modify our parameters to conform to the peer's parameters,
			 * based on the rules in the ITU T.38 recommendation
			 */
			if (!state->their_parms.fill_bit_removal) {
				state->our_parms.fill_bit_removal = 0;
			}
			if (!state->their_parms.transcoding_mmr) {
				state->our_parms.transcoding_mmr = 0;
			}
			if (!state->their_parms.transcoding_jbig) {
				state->our_parms.transcoding_jbig = 0;
			}
			state->our_parms.version = MIN(state->our_parms.version, state->their_parms.version);
			state->our_parms.rate_management = state->their_parms.rate_management;
			session_media = data->session->pending_media_state->default_session[AST_MEDIA_TYPE_IMAGE];
			if (!session_media) {
				ast_log(LOG_ERROR, "Failed to negotiate parameters for reinvite on channel '%s' (No pending session media).\n",
					data->session->channel ? ast_channel_name(data->session->channel) : "unknown channel");
				break;
			}
			ast_udptl_set_local_max_ifp(session_media->udptl, state->our_parms.max_ifp);
			t38_change_state(data->session, session_media, state, T38_ENABLED);
			ast_sip_session_resume_reinvite(data->session);
		} else if ((data->session->t38state != T38_ENABLED) ||
				((data->session->t38state == T38_ENABLED) &&
                                (parameters->request_response == AST_T38_REQUEST_NEGOTIATE))) {
			struct ast_sip_session_media_state *media_state;

			media_state = t38_create_media_state(data->session);
			if (!media_state) {
				break;
			}
			state->our_parms = *parameters;
			session_media = media_state->default_session[AST_MEDIA_TYPE_IMAGE];
			if (!session_media) {
				ast_log(LOG_ERROR, "Failed to negotiate parameters on channel '%s' (No default session media).\n",
					data->session->channel ? ast_channel_name(data->session->channel) : "unknown channel");
				break;
			}
			ast_udptl_set_local_max_ifp(session_media->udptl, state->our_parms.max_ifp);
			t38_change_state(data->session, NULL, state, T38_LOCAL_REINVITE);
			ast_sip_session_refresh(data->session, NULL, t38_reinvite_sdp_cb, t38_reinvite_response_cb,
				AST_SIP_SESSION_REFRESH_METHOD_INVITE, 1, media_state);
		}
		break;
	case AST_T38_TERMINATED:
	case AST_T38_REFUSED:
	case AST_T38_REQUEST_TERMINATE:         /* Shutdown T38 */
		if (data->session->t38state == T38_PEER_REINVITE) {
			t38_change_state(data->session, NULL, state, T38_REJECTED);
			ast_sip_session_resume_reinvite(data->session);
		} else if (data->session->t38state == T38_ENABLED) {
			t38_change_state(data->session, NULL, state, T38_DISABLED);
			ast_sip_session_refresh(data->session, NULL, NULL, NULL, AST_SIP_SESSION_REFRESH_METHOD_INVITE, 1, state->media_state);
			state->media_state = NULL;
		}
		break;
	case AST_T38_REQUEST_PARMS: {		/* Application wants remote's parameters re-sent */
		struct ast_control_t38_parameters parameters = state->their_parms;

		if (data->session->t38state == T38_PEER_REINVITE) {
			session_media = data->session->pending_media_state->default_session[AST_MEDIA_TYPE_IMAGE];
			if (!session_media) {
				ast_log(LOG_ERROR, "Failed to request parameters for reinvite on channel '%s' (No pending session media).\n",
					data->session->channel ? ast_channel_name(data->session->channel) : "unknown channel");
				break;
			}
			parameters.max_ifp = ast_udptl_get_far_max_ifp(session_media->udptl);
			parameters.request_response = AST_T38_REQUEST_NEGOTIATE;
			ast_queue_control_data(data->session->channel, AST_CONTROL_T38_PARAMETERS, &parameters, sizeof(parameters));
		}
		break;
	}
	default:
		break;
	}

	return 0;
}
