void hnj_hyphen_hyphword(const char * word, int word_size, const char * hyphens,
    char * hyphword, char *** rep, int ** pos, int ** cut)
{
  
  if (word_size <= 0 || word_size > INT_MAX / 2) {
    hyphword[0] = '\0';
    return;
  }
  
  /* hyphword buffer size must be at least 2 * l */
  int hyphword_size = 2 * word_size - 1;

  int nonstandard = 0;
  if (*rep && *pos && *cut) {
    nonstandard = 1;
  }

  int i;
  int j = 0;
  for (i = 0; i < word_size && j < hyphword_size; i++) {
    hyphword[j++] = word[i];
    if (hyphens[i]&1 && j < hyphword_size) {
      if (nonstandard && (*rep)[i] && j >= (*pos)[i]) {
        /* non-standard */
        j -= (*pos)[i];
        char *s = (*rep)[i];
        while (*s && j < hyphword_size) {
          hyphword[j++] = *s++;
        }
        i += (*cut)[i] - (*pos)[i];
      } else {
        /* standard */
        hyphword[j++] = '=';
      }
    }
  }
  hyphword[j] = '\0';
}
