static bool
AttemptVideoScale(TextureSourceBasic* aSource, const SourceSurface* aSourceMask,
                       gfx::Float aOpacity, CompositionOp aBlendMode,
                       const TexturedEffect* aTexturedEffect,
                       const Matrix& aNewTransform, const gfx::Rect& aRect,
                       const gfx::Rect& aClipRect,
                       DrawTarget* aDest, const DrawTarget* aBuffer)
{
#ifdef MOZILLA_SSE_HAVE_CPUID_DETECTION
  if (!mozilla::supports_ssse3())
      return false;
  if (aNewTransform.IsTranslation()) // unscaled painting should take the regular path
      return false;
  if (aNewTransform.HasNonAxisAlignedTransform() || aNewTransform.HasNegativeScaling())
      return false;
  if (aSourceMask || aOpacity != 1.0f)
      return false;
  if (aBlendMode != CompositionOp::OP_OVER && aBlendMode != CompositionOp::OP_SOURCE)
      return false;

  IntRect dstRect;
  // the compiler should know a lot about aNewTransform at this point
  // maybe it can do some sophisticated optimization of the following
  if (!aNewTransform.TransformBounds(aRect).ToIntRect(&dstRect))
      return false;

  IntRect clipRect;
  if (!aClipRect.ToIntRect(&clipRect))
      return false;

  if (!(aTexturedEffect->mTextureCoords == Rect(0.0f, 0.0f, 1.0f, 1.0f)))
      return false;
  if (aDest->GetFormat() == SurfaceFormat::R5G6B5_UINT16)
      return false;

  uint8_t* dstData;
  IntSize dstSize;
  int32_t dstStride;
  SurfaceFormat dstFormat;
  if (aDest->LockBits(&dstData, &dstSize, &dstStride, &dstFormat)) {
    // If we're not painting to aBuffer the clip will
    // be applied later
    IntRect fillRect = dstRect;
    if (aDest == aBuffer) {
      // we need to clip fillRect because LockBits ignores the clip on the aDest
      fillRect = fillRect.Intersect(clipRect);
    }

    fillRect = fillRect.Intersect(IntRect(IntPoint(0, 0), aDest->GetSize()));
    IntPoint offset = fillRect.TopLeft() - dstRect.TopLeft();

    RefPtr<DataSourceSurface> srcSource = aSource->GetSurface(aDest)->GetDataSurface();
    DataSourceSurface::ScopedMap mapSrc(srcSource, DataSourceSurface::READ);

    bool success = ssse3_scale_data((uint32_t*)mapSrc.GetData(), srcSource->GetSize().width, srcSource->GetSize().height,
                                    mapSrc.GetStride()/4,
                                    ((uint32_t*)dstData) + fillRect.X() + (dstStride / 4) * fillRect.Y(), dstRect.Width(), dstRect.Height(),
                                    dstStride / 4,
                                    offset.x, offset.y,
                                    fillRect.Width(), fillRect.Height());

    aDest->ReleaseBits(dstData);
    return success;
  } else
#endif // MOZILLA_SSE_HAVE_CPUID_DETECTION
    return false;
}
