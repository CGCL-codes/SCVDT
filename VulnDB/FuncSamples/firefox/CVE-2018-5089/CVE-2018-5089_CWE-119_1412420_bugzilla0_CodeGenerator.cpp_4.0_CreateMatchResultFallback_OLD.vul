static void
CreateMatchResultFallback(MacroAssembler& masm, LiveRegisterSet regsToSave,
                          Register object, Register temp2, Register temp5,
                          ArrayObject* templateObj, Label* fail)
{
    MOZ_ASSERT(templateObj->group()->clasp() == &ArrayObject::class_);

    regsToSave.take(object);
    regsToSave.take(temp2);
    regsToSave.take(temp5);
    masm.PushRegsInMask(regsToSave);

    masm.setupUnalignedABICall(object);

    masm.loadJSContext(object);
    masm.passABIArg(object);
    masm.move32(Imm32(int32_t(templateObj->asTenured().getAllocKind())), temp2);
    masm.passABIArg(temp2);
    masm.move32(Imm32(int32_t(templateObj->as<NativeObject>().numDynamicSlots())), temp5);
    masm.passABIArg(temp5);
    masm.callWithABI(JS_FUNC_TO_DATA_PTR(void*, CreateMatchResultFallbackFunc));
    masm.storeCallWordResult(object);

    masm.PopRegsInMask(regsToSave);

    masm.branchPtr(Assembler::Equal, object, ImmWord(0), fail);

    masm.initGCThing(object, temp2, templateObj, true, false);
}
