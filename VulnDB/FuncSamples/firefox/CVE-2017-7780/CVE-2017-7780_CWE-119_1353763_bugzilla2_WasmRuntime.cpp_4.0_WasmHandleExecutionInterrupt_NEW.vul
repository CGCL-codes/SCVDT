static void*
WasmHandleExecutionInterrupt()
{
    WasmActivation* activation = JSContext::innermostWasmActivation();
    MOZ_ASSERT(activation->interrupted());

    if (!CheckForInterrupt(activation->cx())) {
        // If CheckForInterrupt failed, it is time to interrupt execution.
        // Returning nullptr to the caller will jump to the throw stub which
        // will call WasmHandleThrow. The WasmActivation must stay in the
        // interrupted state until then so that stack unwinding works in
        // WasmHandleThrow.
        return nullptr;
    }

    // If CheckForInterrupt succeeded, then execution can proceed and the
    // interrupt is over.
    void* resumePC = activation->resumePC();
    activation->finishInterrupt();
    return resumePC;
}
