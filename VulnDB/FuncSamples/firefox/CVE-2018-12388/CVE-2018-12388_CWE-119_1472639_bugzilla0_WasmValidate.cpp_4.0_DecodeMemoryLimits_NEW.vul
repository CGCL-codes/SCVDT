static bool
DecodeMemoryLimits(Decoder& d, ModuleEnvironment* env)
{
    if (env->usesMemory())
        return d.fail("already have default memory");

    Limits memory;
    if (!DecodeLimits(d, &memory, Shareable::True))
        return false;

    if (memory.initial > MaxMemoryInitialPages)
        return d.fail("initial memory size too big");

    if (memory.maximum && *memory.maximum > MaxMemoryMaximumPages)
        return d.fail("maximum memory size too big");

    ConvertMemoryPagesToBytes(&memory);

    if (memory.shared == Shareable::True && env->sharedMemoryEnabled == Shareable::False)
        return d.fail("shared memory is disabled");

    env->memoryUsage = memory.shared == Shareable::True
                     ? MemoryUsage::Shared
                     : MemoryUsage::Unshared;
    env->minMemoryLength = memory.initial;
    env->maxMemoryLength = memory.maximum;
    return true;
}
