int libxl_device_vfb_add(libxl_ctx *ctx, uint32_t domid, libxl_device_vfb *vfb)
{
    libxl__gc gc = LIBXL_INIT_GC(ctx);
    flexarray_t *front;
    flexarray_t *back;
    libxl__device device;
    int rc;

    front = flexarray_make(16, 1);
    if (!front) {
        rc = ERROR_NOMEM;
        goto out;
    }
    back = flexarray_make(16, 1);
    if (!back) {
        rc = ERROR_NOMEM;
        goto out_free;
    }

    device.backend_devid = vfb->devid;
    device.backend_domid = vfb->backend_domid;
    device.backend_kind = DEVICE_VFB;
    device.devid = vfb->devid;
    device.domid = vfb->domid;
    device.kind = DEVICE_VFB;

    flexarray_append_pair(back, "frontend-id", libxl__sprintf(&gc, "%d", vfb->domid));
    flexarray_append_pair(back, "online", "1");
    flexarray_append_pair(back, "state", libxl__sprintf(&gc, "%d", 1));
    flexarray_append_pair(back, "domain", libxl__domid_to_name(&gc, domid));
    flexarray_append_pair(back, "vnc", libxl__sprintf(&gc, "%d", vfb->vnc));
    flexarray_append_pair(back, "vnclisten", vfb->vnclisten);
    flexarray_append_pair(back, "vncpasswd", vfb->vncpasswd);
    flexarray_append_pair(back, "vncdisplay", libxl__sprintf(&gc, "%d", vfb->vncdisplay));
    flexarray_append_pair(back, "vncunused", libxl__sprintf(&gc, "%d", vfb->vncunused));
    flexarray_append_pair(back, "sdl", libxl__sprintf(&gc, "%d", vfb->sdl));
    flexarray_append_pair(back, "opengl", libxl__sprintf(&gc, "%d", vfb->opengl));
    if (vfb->xauthority) {
        flexarray_append_pair(back, "xauthority", vfb->xauthority);
    }
    if (vfb->display) {
        flexarray_append_pair(back, "display", vfb->display);
    }

    flexarray_append_pair(front, "backend-id", libxl__sprintf(&gc, "%d", vfb->backend_domid));
    flexarray_append_pair(front, "state", libxl__sprintf(&gc, "%d", 1));

    libxl__device_generic_add(ctx, &device,
                             libxl__xs_kvs_of_flexarray(&gc, back, back->count),
                             libxl__xs_kvs_of_flexarray(&gc, front, front->count));
    rc = 0;
out_free:
    flexarray_free(front);
    flexarray_free(back);
out:
    libxl__free_all(&gc);
    return rc;
}
