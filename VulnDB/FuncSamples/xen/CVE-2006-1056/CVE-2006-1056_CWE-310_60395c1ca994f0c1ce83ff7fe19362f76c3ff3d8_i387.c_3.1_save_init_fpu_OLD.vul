void save_init_fpu(struct vcpu *v)
{
    unsigned long cr0 = read_cr0();

    /* This can happen, if a paravirtualised guest OS has set its CR0.TS. */
    if ( cr0 & X86_CR0_TS )
        clts();

    if ( cpu_has_fxsr )
        __asm__ __volatile__ (
            "fxsave %0 ; fnclex"
            : "=m" (v->arch.guest_context.fpu_ctxt) );
    else
        __asm__ __volatile__ (
            "fnsave %0 ; fwait"
            : "=m" (v->arch.guest_context.fpu_ctxt) );

    clear_bit(_VCPUF_fpu_dirtied, &v->vcpu_flags);
    write_cr0(cr0|X86_CR0_TS);
}
