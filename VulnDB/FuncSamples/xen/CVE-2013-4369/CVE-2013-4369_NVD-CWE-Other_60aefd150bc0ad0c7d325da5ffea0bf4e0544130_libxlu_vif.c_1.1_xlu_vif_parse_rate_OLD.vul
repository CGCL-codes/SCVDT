int xlu_vif_parse_rate(XLU_Config *cfg, const char *rate, libxl_device_nic *nic)
{
    uint64_t bytes_per_sec = 0;
    uint64_t bytes_per_interval = 0;
    uint32_t interval_usecs = 50000UL; /* Default to 50ms */
    char *ratetok, *tmprate;
    int rc = 0;

    tmprate = strdup(rate);
    if (!strcmp(tmprate,"")) {
        xlu__vif_err(cfg, "no rate specified", rate);
        rc = EINVAL;
        goto out;
    }

    ratetok = strtok(tmprate, "@");
    rc = vif_parse_rate_bytes_per_sec(cfg, ratetok, &bytes_per_sec);
    if (rc) goto out;

    ratetok = strtok(NULL, "@");
    if (ratetok != NULL) {
        rc = vif_parse_rate_interval_usecs(cfg, ratetok, &interval_usecs);
        if (rc) goto out;
    }

    if (interval_usecs != 0 && (bytes_per_sec > (UINT64_MAX / interval_usecs))) {
        xlu__vif_err(cfg, "rate overflow", rate);
        rc = EOVERFLOW;
        goto out;
    }

    bytes_per_interval =
        (((uint64_t) bytes_per_sec * (uint64_t) interval_usecs) / 1000000UL);

    nic->rate_interval_usecs = interval_usecs;
    nic->rate_bytes_per_interval = bytes_per_interval;

out:
    free(tmprate);
    return rc;
}
