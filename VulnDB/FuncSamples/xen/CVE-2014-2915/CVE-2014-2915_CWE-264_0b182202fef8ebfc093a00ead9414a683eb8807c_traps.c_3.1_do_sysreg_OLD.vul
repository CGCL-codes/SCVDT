static void do_sysreg(struct cpu_user_regs *regs,
                      union hsr hsr)
{

    switch ( hsr.bits & HSR_SYSREG_REGS_MASK )
    {
    case HSR_SYSREG_CNTP_CTL_EL0:
    case HSR_SYSREG_CNTP_TVAL_EL0:
        if ( !vtimer_emulate(regs, hsr) )
        {
            dprintk(XENLOG_ERR,
                    "failed emulation of 64-bit vtimer sysreg access\n");
            domain_crash_synchronous();
        }
        break;
    default:
        {
            struct hsr_sysreg sysreg = hsr.sysreg;
#ifndef NDEBUG

            gdprintk(XENLOG_ERR,
                     "%s %d, %d, c%d, c%d, %d %s x%d @ 0x%"PRIregister"\n",
                     sysreg.read ? "mrs" : "msr",
                     sysreg.op0, sysreg.op1,
                     sysreg.crn, sysreg.crm,
                     sysreg.op2,
                     sysreg.read ? "=>" : "<=",
                     sysreg.reg, regs->pc);
            gdprintk(XENLOG_ERR, "unhandled 64-bit sysreg access %#x",
                     hsr.bits & HSR_SYSREG_REGS_MASK);
#endif
            inject_undef64_exception(regs, sysreg.len);
        }
    }

    regs->pc += 4;
}
