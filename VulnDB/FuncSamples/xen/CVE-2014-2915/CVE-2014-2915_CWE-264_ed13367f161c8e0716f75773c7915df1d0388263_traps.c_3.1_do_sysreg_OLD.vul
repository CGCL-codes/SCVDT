static void do_sysreg(struct cpu_user_regs *regs,
                      union hsr hsr)
{
    struct hsr_sysreg sysreg = hsr.sysreg;

    switch ( hsr.bits & HSR_SYSREG_REGS_MASK )
    {
    case HSR_SYSREG_CNTP_CTL_EL0:
    case HSR_SYSREG_CNTP_TVAL_EL0:
        if ( !vtimer_emulate(regs, hsr) )
        {
            dprintk(XENLOG_ERR,
                    "failed emulation of 64-bit vtimer sysreg access\n");
            domain_crash_synchronous();
        }
        break;
    default:
        printk("%s %d, %d, c%d, c%d, %d %s x%d @ 0x%"PRIregister"\n",
               sysreg.read ? "mrs" : "msr",
               sysreg.op0, sysreg.op1,
               sysreg.crn, sysreg.crm,
               sysreg.op2,
               sysreg.read ? "=>" : "<=",
               sysreg.reg, regs->pc);
        panic("unhandled 64-bit sysreg access %#x",
              hsr.bits & HSR_SYSREG_REGS_MASK);
    }

    regs->pc += 4;
}
