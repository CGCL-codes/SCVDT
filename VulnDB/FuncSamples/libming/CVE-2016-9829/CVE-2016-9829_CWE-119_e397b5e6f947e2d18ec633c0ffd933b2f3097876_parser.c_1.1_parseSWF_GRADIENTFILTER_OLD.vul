void 
parseSWF_GRADIENTFILTER(FILE *f, SWF_GRADIENTFILTER *filter)
{
	int i, size;

	filter->NumColors = readUInt8(f);
	size = filter->NumColors * sizeof(SWF_RGBA);
	filter->GradientColors = (SWF_RGBA *)malloc(size);
	for(i = 0; i < filter->NumColors; i++)
		parseSWF_RGBA(f, filter->GradientColors + i);

	size = filter->NumColors * sizeof(UI8);
	filter->GradientRatio = (UI8 *)malloc(size);
	for(i = 0; i < filter->NumColors; i++)
		filter->GradientRatio[i] = readUInt8(f);

	filter->BlurX = readUInt32(f);
	filter->BlurY = readUInt32(f);
	filter->Angle = readUInt32(f);
	filter->Distance = readUInt32(f);
	filter->Strength = readUInt16(f);
	filter->InnerShadow = readBits(f, 1);
	filter->Kockout = readBits(f, 1);
	filter->CompositeSource = readBits(f, 1);
	filter->OnTop = readBits(f, 1);
	filter->Passes = readBits(f, 4);
}
