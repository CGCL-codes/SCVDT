static void readMovie(FILE *f)
{
	int block, type, blockstart, blockoffset, length, nextFrame=0;
	SWF_Parserstruct *blockp;
	for (;;)
	{
		blockoffset = fileOffset;

		// printf ("Block offset: %d %d\n", fileOffset, m.size);

		if(filelen_check_fails(2))
			break;
		block = readUInt16 (f);
		type = block >> 6;

		length = block & ((1 << 6) - 1);

		if (length == 63)		/* it's a long block. */ 
		{
			if(filelen_check_fails(4))
				break;
			unsigned long real_length = readUInt32 (f);

                        if (real_length > INT_MAX) {
		            SWF_warn(" Could not process long block with length %lu:"
                                     " blocks with length > %d not supported on this system\n",
                                     real_length, INT_MAX);
                            continue;
                        } else {
                            length = (int) real_length;
                        }
		}
		
		//      printf ("Found Block: %s (%i), %i bytes\n", blockName (type), type, length);
		blockstart = fileOffset;
		nextFrame = fileOffset+length;
		
		if(filelen_check_fails(length))
			break;
		blockp= blockParse(f, length, type);

		if( ftell(f) != nextFrame ) 
		{
			// will SEEK_SET later, so this is not a critical error
		        SWF_warn(" Stream out of sync after parse of blocktype %d (%s)."
				" %ld but expecting %d.\n", type, blockName(type),
				ftell(f),nextFrame);
		}

		if( blockp ) 
		{
			outputBlock( type, blockp, f);
			free(blockp);	
		} else {
			SWF_warn("Error parsing block (unknown block type: %d, length %d)\n", 
				type, length);
		}

		if (type == 0 || fileOffset >= m.size)
			break;
	
		fseek(f, nextFrame, SEEK_SET);
		fileOffset = ftell(f);
	}
	putchar ('\n');

	if (fileOffset < m.size)
	{
		SWF_warn("extra garbage (i.e., we messed up in main): \n");
		dumpBytes (f, m.size - fileOffset);
		printf ("\n\n");
	}
	outputTrailer(&m);
}
