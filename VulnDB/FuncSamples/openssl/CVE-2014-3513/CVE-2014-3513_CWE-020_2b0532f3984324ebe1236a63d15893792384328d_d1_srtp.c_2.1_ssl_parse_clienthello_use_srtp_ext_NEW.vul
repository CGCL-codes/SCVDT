int ssl_parse_clienthello_use_srtp_ext(SSL *s, unsigned char *d, int len,int *al)
	{
	SRTP_PROTECTION_PROFILE *sprof;
	STACK_OF(SRTP_PROTECTION_PROFILE) *srvr;
        int ct;
        int mki_len;
	int i, srtp_pref;
	unsigned int id;

         /* Length value + the MKI length */
        if(len < 3)
		{            
		SSLerr(SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT,SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST);
		*al=SSL_AD_DECODE_ERROR;
		return 1;
                }

        /* Pull off the length of the cipher suite list */
        n2s(d, ct);
        len -= 2;
        
        /* Check that it is even */
	if(ct%2)
		{
		SSLerr(SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT,SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST);
		*al=SSL_AD_DECODE_ERROR;
		return 1;
		}
        
        /* Check that lengths are consistent */
	if(len < (ct + 1)) 
		{
		SSLerr(SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT,SSL_R_BAD_SRTP_PROTECTION_PROFILE_LIST);
		*al=SSL_AD_DECODE_ERROR;
		return 1;
		}

	srvr=SSL_get_srtp_profiles(s);
	s->srtp_profile = NULL;
	/* Search all profiles for a match initially */
	srtp_pref = sk_SRTP_PROTECTION_PROFILE_num(srvr);
        
	while(ct)
		{
		n2s(d,id);
		ct-=2;
                len-=2;

		/*
		 * Only look for match in profiles of higher preference than
		 * current match.
		 * If no profiles have been have been configured then this
		 * does nothing.
		 */
		for (i = 0; i < srtp_pref; i++)
			{
			sprof = sk_SRTP_PROTECTION_PROFILE_value(srvr, i);
			if (sprof->id == id)
				{
				s->srtp_profile = sprof;
				srtp_pref = i;
				break;
				}
			}
		}

        /* Now extract the MKI value as a sanity check, but discard it for now */
        mki_len = *d;
        d++; len--;

        if (mki_len != len)
		{
		SSLerr(SSL_F_SSL_PARSE_CLIENTHELLO_USE_SRTP_EXT,SSL_R_BAD_SRTP_MKI_VALUE);
		*al=SSL_AD_DECODE_ERROR;
		return 1;
		}

	return 0;
	}
