static int IPAddressOrRange_cmp(const IPAddressOrRange *a,
				const IPAddressOrRange *b,
				const int length)
{
  unsigned char addr_a[ADDR_RAW_BUF_LEN], addr_b[ADDR_RAW_BUF_LEN];
  int prefixlen_a = 0;
  int prefixlen_b = 0;
  int r;

  switch (a->type) {
  case IPAddressOrRange_addressPrefix:
    if (!addr_expand(addr_a, a->u.addressPrefix, length, 0x00))
      return -1;
    prefixlen_a = addr_prefixlen(a->u.addressPrefix);
    break;
  case IPAddressOrRange_addressRange:
    if (!addr_expand(addr_a, a->u.addressRange->min, length, 0x00))
      return -1;
    prefixlen_a = length * 8;
    break;
  }

  switch (b->type) {
  case IPAddressOrRange_addressPrefix:
    if (!addr_expand(addr_b, b->u.addressPrefix, length, 0x00))
      return -1;
    prefixlen_b = addr_prefixlen(b->u.addressPrefix);
    break;
  case IPAddressOrRange_addressRange:
    if (!addr_expand(addr_b, b->u.addressRange->min, length, 0x00))
      return -1;
    prefixlen_b = length * 8;
    break;
  }

  if ((r = memcmp(addr_a, addr_b, length)) != 0)
    return r;
  else
    return prefixlen_a - prefixlen_b;
}
