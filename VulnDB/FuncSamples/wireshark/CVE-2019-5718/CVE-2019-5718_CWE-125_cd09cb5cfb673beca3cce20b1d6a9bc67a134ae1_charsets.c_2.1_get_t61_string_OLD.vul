guint8 *
get_t61_string(wmem_allocator_t *scope, const guint8 *ptr, gint length)
{
    gint           i;
    guint8        *c;
    wmem_strbuf_t *strbuf;

    strbuf = wmem_strbuf_sized_new(scope, length+1, 0);

    for (i = 0, c = (guint8 *)ptr; i < length; c++, i++) {
        if (!t61_tab[*c]) {
            wmem_strbuf_append_unichar(strbuf, UNREPL);
        } else if ((*c & 0xf0) == 0xc0) {
            gint j = *c & 0x0f;
            /* If this is the end of the string, or if the base
             * character is just a space, treat this as a regular
             * spacing character.
             */
            if ((!c[1] || c[1] == 0x20) && accents[j]) {
                wmem_strbuf_append_unichar(strbuf, accents[j]);
            } else if (cx_tab[j] && cx_tab[j][c[1]>>5] &&
                /* We have a composite mapping for this pair */
                       (*cx_tab[j][c[1]>>5])[c[1]&0x1f]) {
                wmem_strbuf_append_unichar(strbuf, (*cx_tab[j][c[1]>>5])[c[1]&0x1f]);
            } else {
                /* No mapping, just swap it around so the base
                 * character comes first.
                 */
                wmem_strbuf_append_unichar(strbuf, c[1]);
                wmem_strbuf_append_unichar(strbuf, t61_tab[*c]);
            }
            c++; i++;
            continue;
        } else {
            wmem_strbuf_append_unichar(strbuf, t61_tab[*c]);
        }
    }

    return (guint8 *)wmem_strbuf_finalize(strbuf);
}
