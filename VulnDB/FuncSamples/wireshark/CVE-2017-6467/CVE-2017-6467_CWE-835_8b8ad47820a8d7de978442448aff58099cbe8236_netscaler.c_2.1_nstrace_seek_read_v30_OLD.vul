static gboolean nstrace_seek_read_v30(wtap *wth, gint64 seek_off,
    struct wtap_pkthdr *phdr, Buffer *buf, int *err, gchar **err_info)
{
    nspr_hd_v20_t hdr;
    int bytes_read;
    guint record_length;
    guint hdrlen;
    guint8 *pd;
    unsigned int bytes_to_read;

    *err = 0;

    if (file_seek(wth->random_fh, seek_off, SEEK_SET, err) == -1)
        return FALSE;
    /*
    ** Read the first 2 bytes of the record header.
    */
    bytes_read = file_read((void *)&hdr, 2, wth->random_fh);
    if (bytes_read != 2) {
        *err = file_error(wth->random_fh, err_info);
        if (*err == 0)
            *err = WTAP_ERR_SHORT_READ;
        return FALSE;
    }
    hdrlen = 2;

    /*
    ** Is there a third byte?  If so, read it.
    */
    if (hdr.phd_RecordSizeLow & NSPR_V20RECORDSIZE_2BYTES) {
        bytes_read = file_read((void *)&hdr.phd_RecordSizeHigh, 1, wth->random_fh);
        if (bytes_read != 1) {
            *err = file_error(wth->random_fh, err_info);
            if (*err == 0)
                *err = WTAP_ERR_SHORT_READ;
            return FALSE;
        }
        hdrlen = 3;
    }

    /*
    ** Get the record length.
    */
    record_length = nspr_getv20recordsize(&hdr);

    /*
    ** Copy the header to the buffer and read the rest of the record..
    */
    buffer_assure_space(buf, record_length);
    pd = buffer_start_ptr(buf);
    memcpy(pd, (void *)&hdr, hdrlen);
    if (record_length > hdrlen) {
        bytes_to_read = (unsigned int)(record_length - hdrlen);
        bytes_read = file_read(pd + hdrlen, bytes_to_read, wth->random_fh);
        if (bytes_read < 0 || (unsigned int)bytes_read != bytes_to_read) {
            *err = file_error(wth->random_fh, err_info);
            if (*err == 0)
                *err = WTAP_ERR_SHORT_READ;
            return FALSE;
        }
    }

#define GENERATE_CASE_V30(phdr,type,acttype) \
    case NSPR_PDPKTRACEFULLTX_V##type:\
    case NSPR_PDPKTRACEFULLTXB_V##type:\
    case NSPR_PDPKTRACEFULLRX_V##type:\
    case NSPR_PDPKTRACEFULLNEWRX_V##type:\
    TRACE_V##type##_REC_LEN_OFF((phdr),v##type##_full,fp,pktracefull_v##type);\
        (phdr)->pseudo_header.nstr.rec_type = NSPR_HEADER_VERSION##acttype;\
        break;

        switch ((( nspr_hd_v20_t*)pd)->phd_RecordType)
        {
            GENERATE_CASE_V30(phdr,30, 300);
        }

    return TRUE;
}
