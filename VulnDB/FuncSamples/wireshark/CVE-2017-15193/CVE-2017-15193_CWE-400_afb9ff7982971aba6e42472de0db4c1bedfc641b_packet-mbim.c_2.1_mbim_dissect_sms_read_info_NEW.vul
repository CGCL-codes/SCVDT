static void
mbim_dissect_sms_read_info(tvbuff_t *tvb, packet_info *pinfo, proto_tree *tree, gint offset,
                           struct mbim_conv_info *mbim_conv)
{
    proto_tree *subtree;
    gint base_offset;
    guint32 i, format, element_count;
    wmem_array_t *pair_list;
    struct mbim_pair_list pair_list_item, *p_pair_list_item;

    base_offset = offset;
    proto_tree_add_item_ret_uint(tree, hf_mbim_sms_read_info_format, tvb, offset, 4, ENC_LITTLE_ENDIAN, &format);
    offset += 4;
    proto_tree_add_item_ret_uint(tree, hf_mbim_sms_read_info_element_count, tvb, offset, 4, ENC_LITTLE_ENDIAN, &element_count);
    offset += 4;
    if (element_count) {
        pair_list = wmem_array_new(wmem_packet_scope(), sizeof(struct mbim_pair_list));
        subtree = proto_tree_add_subtree(tree, tvb, offset, 8*element_count, ett_mbim_pair_list, NULL, "SMS Ref List");
        for (i = 0; i < element_count; i++) {
            proto_tree_add_item_ret_uint(subtree, hf_mbim_sms_read_info_sms_offset,
                                tvb, offset, 4, ENC_LITTLE_ENDIAN, &pair_list_item.offset);
            offset += 4;
            proto_tree_add_item_ret_uint(subtree, hf_mbim_sms_read_info_sms_size,
                                tvb, offset, 4, ENC_LITTLE_ENDIAN, &pair_list_item.size);
            offset += 4;
            wmem_array_append_one(pair_list, pair_list_item);
        }
        for (i = 0; i < element_count; i++) {
            p_pair_list_item = (struct mbim_pair_list*)wmem_array_index(pair_list, i);
            if (p_pair_list_item->offset && p_pair_list_item->size) {
                subtree = proto_tree_add_subtree_format(tree, tvb, base_offset + p_pair_list_item->offset,
                                         p_pair_list_item->size, ett_mbim_pair_list, NULL, "SMS Element #%u", i+1);
                if (format == MBIM_SMS_FORMAT_PDU) {
                    mbim_dissect_sms_pdu_record(tvb, pinfo, subtree, base_offset + p_pair_list_item->offset, mbim_conv);
                } else if (format == MBIM_SMS_FORMAT_CDMA) {
                    mbim_dissect_sms_cdma_record(tvb, pinfo, subtree, base_offset + p_pair_list_item->offset);
                } else {
                    proto_tree_add_expert(subtree, pinfo, &ei_mbim_unknown_sms_format, tvb,
                                          base_offset + p_pair_list_item->offset, p_pair_list_item->size);
                }
            }
        }
    }
}
