int avio_open2(AVIOContext **s, const char *filename, int flags,
               const AVIOInterruptCB *int_cb, AVDictionary **options)
{
    AVIOInternal *internal;
    const URLProtocol **protocols;
    char *proto_whitelist = NULL, *proto_blacklist = NULL;
    AVDictionaryEntry *e;
    URLContext *h;
    int err;

    if (options) {
        e = av_dict_get(*options, "protocol_whitelist", NULL, 0);
        if (e)
            proto_whitelist = e->value;
        e = av_dict_get(*options, "protocol_blacklist", NULL, 0);
        if (e)
            proto_blacklist = e->value;
    }

    protocols = ffurl_get_protocols(proto_whitelist, proto_blacklist);
    if (!protocols)
        return AVERROR(ENOMEM);

    err = ffurl_open(&h, filename, flags, int_cb, options, protocols);
    if (err < 0) {
        av_freep(&protocols);
        return err;
    }

    err = ffio_fdopen(s, h);
    if (err < 0) {
        ffurl_close(h);
        av_freep(&protocols);
        return err;
    }

    internal = (*s)->opaque;
    internal->protocols = protocols;

    if (options) {
        err = av_opt_set_dict(internal, options);
        if (err < 0) {
            avio_closep(s);
            return err;
        }
    }

    return 0;
}
