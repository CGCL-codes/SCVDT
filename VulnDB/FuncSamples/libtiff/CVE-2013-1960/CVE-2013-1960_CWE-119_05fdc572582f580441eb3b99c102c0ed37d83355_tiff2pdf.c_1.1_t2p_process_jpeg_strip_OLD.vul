int t2p_process_jpeg_strip(
	unsigned char* strip, 
	tsize_t* striplength, 
	unsigned char* buffer, 
	tsize_t* bufferoffset, 
	tstrip_t no, 
	uint32 height){

	tsize_t i=0;
	uint16 ri =0;
	uint16 v_samp=1;
	uint16 h_samp=1;
	int j=0;
	
	i++;
	
	while(i<(*striplength)){
		switch( strip[i] ){
			case 0xd8:
				/* SOI - start of image */
				_TIFFmemcpy(&(buffer[*bufferoffset]), &(strip[i-1]), 2);
				*bufferoffset+=2;
				i+=2;
				break;
			case 0xc0:
			case 0xc1:
			case 0xc3:
			case 0xc9:
			case 0xca:
				if(no==0){
					_TIFFmemcpy(&(buffer[*bufferoffset]), &(strip[i-1]), strip[i+2]+2);
					for(j=0;j<buffer[*bufferoffset+9];j++){
						if( (buffer[*bufferoffset+11+(2*j)]>>4) > h_samp) 
							h_samp = (buffer[*bufferoffset+11+(2*j)]>>4);
						if( (buffer[*bufferoffset+11+(2*j)] & 0x0f) > v_samp) 
							v_samp = (buffer[*bufferoffset+11+(2*j)] & 0x0f);
					}
					v_samp*=8;
					h_samp*=8;
					ri=((( ((uint16)(buffer[*bufferoffset+5])<<8) | 
					(uint16)(buffer[*bufferoffset+6]) )+v_samp-1)/ 
					v_samp);
					ri*=((( ((uint16)(buffer[*bufferoffset+7])<<8) | 
					(uint16)(buffer[*bufferoffset+8]) )+h_samp-1)/ 
					h_samp);
					buffer[*bufferoffset+5]=
                                          (unsigned char) ((height>>8) & 0xff);
					buffer[*bufferoffset+6]=
                                            (unsigned char) (height & 0xff);
					*bufferoffset+=strip[i+2]+2;
					i+=strip[i+2]+2;

					buffer[(*bufferoffset)++]=0xff;
					buffer[(*bufferoffset)++]=0xdd;
					buffer[(*bufferoffset)++]=0x00;
					buffer[(*bufferoffset)++]=0x04;
					buffer[(*bufferoffset)++]=(ri >> 8) & 0xff;
					buffer[(*bufferoffset)++]= ri & 0xff;
				} else {
					i+=strip[i+2]+2;
				}
				break;
			case 0xc4:
			case 0xdb:
				_TIFFmemcpy(&(buffer[*bufferoffset]), &(strip[i-1]), strip[i+2]+2);
				*bufferoffset+=strip[i+2]+2;
				i+=strip[i+2]+2;
				break;
			case 0xda:
				if(no==0){
					_TIFFmemcpy(&(buffer[*bufferoffset]), &(strip[i-1]), strip[i+2]+2);
					*bufferoffset+=strip[i+2]+2;
					i+=strip[i+2]+2;
				} else {
					buffer[(*bufferoffset)++]=0xff;
					buffer[(*bufferoffset)++]=
                                            (unsigned char)(0xd0 | ((no-1)%8));
					i+=strip[i+2]+2;
				}
				_TIFFmemcpy(&(buffer[*bufferoffset]), &(strip[i-1]), (*striplength)-i-1);
				*bufferoffset+=(*striplength)-i-1;
				return(1);
			default:
				i+=strip[i+2]+2;
		}
	}
	

	return(0);
}
