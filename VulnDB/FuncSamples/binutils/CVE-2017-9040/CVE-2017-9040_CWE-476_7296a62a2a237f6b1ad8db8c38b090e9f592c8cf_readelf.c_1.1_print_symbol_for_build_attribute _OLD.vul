static bfd_boolean
print_symbol_for_build_attribute (FILE *         file,
				  unsigned long  offset,
				  bfd_boolean    is_open_attr)
{
  static FILE *             saved_file = NULL;
  static char *             strtab;
  static unsigned long      strtablen;
  static Elf_Internal_Sym * symtab;
  static unsigned long      nsyms;
  Elf_Internal_Sym *  saved_sym = NULL;
  Elf_Internal_Sym *  sym;

  if (saved_file == NULL || file != saved_file)
    {
      Elf_Internal_Shdr * symsec;

      /* Load the symbol and string sections.  */
      for (symsec = section_headers;
	   symsec < section_headers + elf_header.e_shnum;
	   symsec ++)
	{
	  if (symsec->sh_type == SHT_SYMTAB)
	    {
	      symtab = GET_ELF_SYMBOLS (file, symsec, & nsyms);

	      if (symsec->sh_link < elf_header.e_shnum)
		{
		  Elf_Internal_Shdr * strtab_sec = section_headers + symsec->sh_link;

		  strtab = (char *) get_data (NULL, file, strtab_sec->sh_offset,
					      1, strtab_sec->sh_size,
					      _("string table"));
		  strtablen = strtab != NULL ? strtab_sec->sh_size : 0;
		}
	    }
	}
      saved_file = file;
    }

  if (symtab == NULL || strtab == NULL)
    {
      printf ("\n");
      return FALSE;
    }

  /* Find a symbol whose value matches offset.  */
  for (sym = symtab; sym < symtab + nsyms; sym ++)
    if (sym->st_value == offset)
      {
	if (sym->st_name >= strtablen)
	  /* Huh ?  This should not happen.  */
	  continue;

	if (strtab[sym->st_name] == 0)
	  continue;

	if (is_open_attr)
	  {
	    /* For OPEN attributes we prefer GLOBAL over LOCAL symbols
	       and FILE or OBJECT symbols over NOTYPE symbols.  We skip
	       FUNC symbols entirely.  */
	    switch (ELF_ST_TYPE (sym->st_info))
	      {
	      case STT_FILE:
		saved_sym = sym;
		/* We can stop searching now.  */
		sym = symtab + nsyms;
		continue;

	      case STT_OBJECT:
		saved_sym = sym;
		continue;

	      case STT_FUNC:
		/* Ignore function symbols.  */
		continue;

	      default:
		break;
	      }

	    switch (ELF_ST_BIND (sym->st_info))
	      {
	      case STB_GLOBAL:
		if (saved_sym == NULL
		    || ELF_ST_TYPE (saved_sym->st_info) != STT_OBJECT)
		  saved_sym = sym;
		break;

	      case STB_LOCAL:
		if (saved_sym == NULL)
		  saved_sym = sym;
		break;

	      default:
		break;
	      }
	  }
	else
	  {
	    if (ELF_ST_TYPE (sym->st_info) != STT_FUNC)
	      continue;

	    saved_sym = sym;
	    break;
	  }
      }

  printf (" (%s: %s)\n",
	  is_open_attr ? _("file") : _("func"),
	  saved_sym ? strtab + saved_sym->st_name : _("<no symbol found>)"));
  return TRUE;
}
