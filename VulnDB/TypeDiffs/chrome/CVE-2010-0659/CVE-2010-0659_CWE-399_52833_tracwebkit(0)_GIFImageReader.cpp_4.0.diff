Index: /trunk/WebCore/platform/image-decoders/gif/GIFImageReader.cpp

===================================================================

--- /trunk/WebCore/platform/image-decoders/gif/GIFImageReader.cpp	(revision 52832)

+++ /trunk/WebCore/platform/image-decoders/gif/GIFImageReader.cpp	(revision 52833)

@@ -105,5 +105,5 @@

 //******************************************************************************

 // Send the data to the display front-end.

-void GIFImageReader::output_row()

+bool GIFImageReader::output_row()

 {

   GIFFrameReader* gs = frame_reader;

@@ -155,11 +155,12 @@

   /* Protect against too much image data */

   if ((unsigned)drow_start >= gs->height)

-    return;

+    return true;

 

   // CALLBACK: Let the client know we have decoded a row.

-  if (clientptr && frame_reader)

-    clientptr->haveDecodedRow(images_count - 1, frame_reader->rowbuf, frame_reader->rowend,

-                              drow_start, drow_end - drow_start + 1,

-                              gs->progressive_display && gs->interlaced && gs->ipass > 1);

+  if (clientptr && frame_reader &&

+      !clientptr->haveDecodedRow(images_count - 1, frame_reader->rowbuf, frame_reader->rowend,

+                                 drow_start, drow_end - drow_start + 1,

+                                 gs->progressive_display && gs->interlaced && gs->ipass > 1))

+    return false;

 

   gs->rowp = gs->rowbuf;

@@ -208,13 +209,15 @@

     } while (gs->irow > (gs->height - 1));

   }

+

+  return true;

 }

 

 //******************************************************************************

 /* Perform Lempel-Ziv-Welch decoding */

-int GIFImageReader::do_lzw(const unsigned char *q)

+bool GIFImageReader::do_lzw(const unsigned char *q)

 {

   GIFFrameReader* gs = frame_reader;

   if (!gs)

-    return 0;

+    return true;

 

   int code;

@@ -250,9 +253,10 @@

 

   if (rowp == rowend)

-    return 0;

+    return true;

 

 #define OUTPUT_ROW                                                  \

   PR_BEGIN_MACRO                                                        \

-    output_row();                                                     \

+    if (!output_row())                                                     \

+      return false;                                                        \

     rows_remaining--;                                                   \

     rowp = frame_reader->rowp;                                                    \

@@ -287,7 +291,5 @@

       if (code == (clear_code + 1)) {

         /* end-of-stream should only appear after all image data */

-        if (rows_remaining != 0)

-          return -1;

-        return 0;

+        return rows_remaining == 0;

       }

 

@@ -307,5 +309,5 @@

 

         if (stackp == stack + MAX_BITS)

-          return -1;

+          return false;

       }

 

@@ -313,5 +315,5 @@

       {

         if (code >= MAX_BITS || code == prefix[code])

-          return -1;

+          return false;

 

         // Even though suffix[] only holds characters through suffix[avail - 1],

@@ -323,5 +325,5 @@

 

         if (stackp == stack + MAX_BITS)

-          return -1;

+          return false;

       }

 

@@ -370,5 +372,5 @@

   gs->rows_remaining = rows_remaining;

 

-  return 0;

+  return true;

 }

 

@@ -439,5 +441,5 @@

     {

     case gif_lzw:

-      if (do_lzw(q) < 0) {

+      if (!do_lzw(q)) {

         state = gif_error;

         break;

