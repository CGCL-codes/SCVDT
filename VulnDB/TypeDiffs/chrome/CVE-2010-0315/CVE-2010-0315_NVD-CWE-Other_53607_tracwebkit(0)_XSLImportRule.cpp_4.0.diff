Index: /trunk/WebCore/xml/XSLImportRule.cpp

===================================================================

--- /trunk/WebCore/xml/XSLImportRule.cpp	(revision 53606)

+++ /trunk/WebCore/xml/XSLImportRule.cpp	(revision 53607)

@@ -53,11 +53,11 @@

 }

 

-void XSLImportRule::setXSLStyleSheet(const String& url, const String& sheet)

+void XSLImportRule::setXSLStyleSheet(const String& href, const KURL& baseURL, const String& sheet)

 {

     if (m_styleSheet)

         m_styleSheet->setParent(0);

-    

-    m_styleSheet = XSLStyleSheet::create(this, url);

-    

+

+    m_styleSheet = XSLStyleSheet::create(this, href, baseURL);

+

     XSLStyleSheet* parent = parentStyleSheet();

     if (parent)

@@ -88,12 +88,12 @@

     String absHref = m_strHref;

     XSLStyleSheet* parentSheet = parentStyleSheet();

-    if (!parentSheet->href().isNull())

+    if (!parentSheet->putativeBaseURL().isNull())

         // use parent styleheet's URL as the base URL

-        absHref = KURL(KURL(ParsedURLString, parentSheet->href()), m_strHref).string();

+        absHref = KURL(parentSheet->putativeBaseURL(), m_strHref).string();

     

     // Check for a cycle in our import chain.  If we encounter a stylesheet

     // in our parent chain with the same URL, then just bail.

     for (parent = this->parent(); parent; parent = parent->parent()) {

-        if (parent->isXSLStyleSheet() && absHref == static_cast<XSLStyleSheet*>(parent)->href())

+        if (parent->isXSLStyleSheet() && absHref == static_cast<XSLStyleSheet*>(parent)->putativeBaseURL().string())

             return;

     }

