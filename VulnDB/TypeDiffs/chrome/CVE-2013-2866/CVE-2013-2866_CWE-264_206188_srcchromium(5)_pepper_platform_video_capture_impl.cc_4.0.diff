--- trunk/src/content/renderer/pepper/pepper_platform_video_capture_impl.cc	2013/06/13 22:50:27	206187
+++ trunk/src/content/renderer/pepper/pepper_platform_video_capture_impl.cc	2013/06/13 22:50:52	206188
@@ -10,6 +10,7 @@
 #include "content/renderer/media/video_capture_impl_manager.h"
 #include "content/renderer/pepper/pepper_plugin_delegate_impl.h"
 #include "content/renderer/render_thread_impl.h"
+#include "googleurl/src/gurl.h"
 #include "media/video/capture/video_capture_proxy.h"
 
 namespace content {
@@ -17,6 +18,7 @@
 PepperPlatformVideoCaptureImpl::PepperPlatformVideoCaptureImpl(
     const base::WeakPtr<PepperPluginDelegateImpl>& plugin_delegate,
     const std::string& device_id,
+    const GURL& document_url,
     webkit::ppapi::PluginDelegate::PlatformVideoCaptureEventHandler* handler)
     : plugin_delegate_(plugin_delegate),
       device_id_(device_id),
@@ -26,19 +28,14 @@
       handler_(handler),
       video_capture_(NULL),
       unbalanced_start_(false) {
-  if (device_id.empty()) {
-    // "1" is the session ID for the default device.
-    session_id_ = 1;
-    Initialize();
-  } else {
-    // We need to open the device and obtain the label and session ID before
-    // initializing.
-    if (plugin_delegate_.get()) {
-      plugin_delegate_->OpenDevice(
-          PP_DEVICETYPE_DEV_VIDEOCAPTURE,
-          device_id,
-          base::Bind(&PepperPlatformVideoCaptureImpl::OnDeviceOpened, this));
-    }
+  // We need to open the device and obtain the label and session ID before
+  // initializing.
+  if (plugin_delegate_.get()) {
+    plugin_delegate_->OpenDevice(
+        PP_DEVICETYPE_DEV_VIDEOCAPTURE,
+        device_id,
+        document_url,
+        base::Bind(&PepperPlatformVideoCaptureImpl::OnDeviceOpened, this));
   }
 }
 
