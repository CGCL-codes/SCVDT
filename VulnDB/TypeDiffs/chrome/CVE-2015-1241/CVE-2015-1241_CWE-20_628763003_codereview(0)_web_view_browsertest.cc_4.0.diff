Index: chrome/browser/apps/web_view_browsertest.cc
diff --git a/chrome/browser/apps/web_view_browsertest.cc b/chrome/browser/apps/web_view_browsertest.cc
index 6af76a36e9ebc5a2243790599affffb03fb04cb2..fc4c0edee046e8e66baf427e5d85bdb266a313a3 100644
--- a/chrome/browser/apps/web_view_browsertest.cc
+++ b/chrome/browser/apps/web_view_browsertest.cc
@@ -771,26 +771,26 @@ IN_PROC_BROWSER_TEST_F(WebViewTest, AcceptTouchEvents) {
   content::RenderViewHost* embedder_rvh =
       GetEmbedderWebContents()->GetRenderViewHost();
 
-  bool embedder_has_touch_handler =
-      content::RenderViewHostTester::HasTouchEventHandler(embedder_rvh);
-  EXPECT_FALSE(embedder_has_touch_handler);
+  bool embedder_will_forward_touch_events =
+      content::RenderViewHostTester::WillForwardTouchEvents(embedder_rvh);
+  EXPECT_FALSE(embedder_will_forward_touch_events);
 
   SendMessageToGuestAndWait("install-touch-handler", "installed-touch-handler");
 
   // Note that we need to wait for the installed/registered touch handler to
   // appear in browser process before querying |embedder_rvh|.
-  // In practice, since we do a roundrtip from browser process to guest and
+  // In practice, since we do a roundtrip from browser process to guest and
   // back, this is sufficient.
-  embedder_has_touch_handler =
-      content::RenderViewHostTester::HasTouchEventHandler(embedder_rvh);
-  EXPECT_TRUE(embedder_has_touch_handler);
+  embedder_will_forward_touch_events =
+      content::RenderViewHostTester::WillForwardTouchEvents(embedder_rvh);
+  EXPECT_TRUE(embedder_will_forward_touch_events);
 
   SendMessageToGuestAndWait("uninstall-touch-handler",
                             "uninstalled-touch-handler");
   // Same as the note above about waiting.
-  embedder_has_touch_handler =
-      content::RenderViewHostTester::HasTouchEventHandler(embedder_rvh);
-  EXPECT_FALSE(embedder_has_touch_handler);
+  embedder_will_forward_touch_events =
+      content::RenderViewHostTester::WillForwardTouchEvents(embedder_rvh);
+  EXPECT_FALSE(embedder_will_forward_touch_events);
 }
 
 // This test ensures JavaScript errors ("Cannot redefine property") do not
