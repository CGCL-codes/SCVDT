diff --git a/src/objects.cc b/src/objects.cc
index 51ed85c7ba..e2d7d9b971 100644
--- a/src/objects.cc
+++ b/src/objects.cc
@@ -2621,7 +2621,8 @@ bool String::MakeExternal(v8::String::ExternalStringResource* resource) {
   // Byte size of the external String object.
   int new_size = this->SizeFromMap(new_map);
   heap->CreateFillerObjectAt(this->address() + new_size, size - new_size,
-                             ClearRecordedSlots::kNo);
+                             ClearRecordedSlots::kNo,
+                             ClearFreedMemoryMode::kClearFreedMemory);
   if (has_pointers) {
     heap->ClearRecordedSlotRange(this->address(), this->address() + new_size);
   }
@@ -2692,7 +2693,8 @@ bool String::MakeExternal(v8::String::ExternalOneByteStringResource* resource) {
   // Byte size of the external String object.
   int new_size = this->SizeFromMap(new_map);
   heap->CreateFillerObjectAt(this->address() + new_size, size - new_size,
-                             ClearRecordedSlots::kNo);
+                             ClearRecordedSlots::kNo,
+                             ClearFreedMemoryMode::kClearFreedMemory);
   if (has_pointers) {
     heap->ClearRecordedSlotRange(this->address(), this->address() + new_size);
   }
@@ -4264,7 +4266,8 @@ void MigrateFastToFast(Handle<JSObject> object, Handle<Map> new_map) {
   if (instance_size_delta > 0) {
     Address address = object->address();
     heap->CreateFillerObjectAt(address + new_instance_size, instance_size_delta,
-                               ClearRecordedSlots::kYes);
+                               ClearRecordedSlots::kYes,
+                               ClearFreedMemoryMode::kClearFreedMemory);
   }
 
   // We are storing the new map using release store after creating a filler for
@@ -4349,7 +4352,8 @@ void MigrateFastToSlow(Handle<JSObject> object, Handle<Map> new_map,
 
   if (instance_size_delta > 0) {
     heap->CreateFillerObjectAt(object->address() + new_instance_size,
-                               instance_size_delta, ClearRecordedSlots::kYes);
+                               instance_size_delta, ClearRecordedSlots::kYes,
+                               ClearFreedMemoryMode::kClearFreedMemory);
   }
 
   // We are storing the new map using release store after creating a filler for
@@ -17127,7 +17131,8 @@ void MakeStringThin(String* string, String* internalized, Isolate* isolate) {
   int size_delta = old_size - ThinString::kSize;
   if (size_delta != 0) {
     Heap* heap = isolate->heap();
-    heap->CreateFillerObjectAt(thin_end, size_delta, ClearRecordedSlots::kNo);
+    heap->CreateFillerObjectAt(thin_end, size_delta, ClearRecordedSlots::kNo,
+                               ClearFreedMemoryMode::kClearFreedMemory);
   }
 }