Index: core/src/fxcodec/jbig2/JBig2_SymbolDict.cpp
diff --git a/core/src/fxcodec/jbig2/JBig2_SymbolDict.cpp b/core/src/fxcodec/jbig2/JBig2_SymbolDict.cpp
index a8f8a945295dbd98186e35b6f0834a5e2b0d4791..351a8389c88b1101d24dd0f1419c8500c919c7c6 100644
--- a/core/src/fxcodec/jbig2/JBig2_SymbolDict.cpp
+++ b/core/src/fxcodec/jbig2/JBig2_SymbolDict.cpp
@@ -10,27 +10,19 @@
 #include "JBig2_Image.h"
 
 CJBig2_SymbolDict::CJBig2_SymbolDict() {
-  m_bContextRetained = FALSE;
-  m_gbContext = m_grContext = NULL;
 }
 
 CJBig2_SymbolDict::~CJBig2_SymbolDict() {
-  if (m_bContextRetained) {
-    FX_Free(m_gbContext);
-    FX_Free(m_grContext);
-  }
 }
 
 nonstd::unique_ptr<CJBig2_SymbolDict> CJBig2_SymbolDict::DeepCopy() const {
-  nonstd::unique_ptr<CJBig2_SymbolDict> dst;
   const CJBig2_SymbolDict* src = this;
-  if (src->m_bContextRetained || src->m_gbContext || src->m_grContext)
-    return dst;
-
-  dst.reset(new CJBig2_SymbolDict);
+  nonstd::unique_ptr<CJBig2_SymbolDict> dst(new CJBig2_SymbolDict);
   for (size_t i = 0; i < src->m_SDEXSYMS.size(); ++i) {
     CJBig2_Image* image = src->m_SDEXSYMS.get(i);
     dst->m_SDEXSYMS.push_back(image ? new CJBig2_Image(*image) : nullptr);
   }
+  dst->m_gbContext = src->m_gbContext;
+  dst->m_grContext = src->m_grContext;
   return dst;
 }
