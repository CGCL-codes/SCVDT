diff --git a/src/builtins/builtins-string-gen.cc b/src/builtins/builtins-string-gen.cc
index 233a86f..ab6366b 100644
--- a/src/builtins/builtins-string-gen.cc
+++ b/src/builtins/builtins-string-gen.cc
@@ -1810,7 +1810,6 @@ TNode<JSArray> StringBuiltinsAssembler::StringToArray(
 
   TNode<Int32T> instance_type = LoadInstanceType(subject_string);
   GotoIfNot(IsOneByteStringInstanceType(instance_type), &call_runtime);
-
   // Try to use cached one byte characters.
   {
     TNode<Smi> length_smi =
@@ -1819,6 +1818,9 @@ TNode<JSArray> StringBuiltinsAssembler::StringToArray(
                     [=] { return subject_length; });
     TNode<IntPtrT> length = SmiToIntPtr(length_smi);
 
+    //patch here.
+    GotoIf(IntPtrGreaterThan(length, IntPtrConstant(FixedArray::kMaxLength)), &call_runtime);
+    DebugBreak();
     ToDirectStringAssembler to_direct(state(), subject_string);
     to_direct.TryToDirect(&call_runtime);
     TNode<FixedArray> elements = AllocateFixedArray(
@@ -1845,7 +1847,6 @@ TNode<JSArray> StringBuiltinsAssembler::StringToArray(
           // If we cannot find a char in the cache, fill the hole for the fixed
           // array, and call runtime.
           GotoIf(IsUndefined(entry), &fill_thehole_and_call_runtime);
-
           StoreFixedArrayElement(elements, index, entry);
         },
         1, ParameterMode::INTPTR_PARAMETERS, IndexAdvanceMode::kPost);
