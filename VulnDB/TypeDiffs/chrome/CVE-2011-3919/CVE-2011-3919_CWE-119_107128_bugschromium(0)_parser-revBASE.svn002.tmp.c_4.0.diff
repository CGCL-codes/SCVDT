--- C:/Temp/TMPSYS~3/parser-revBASE.svn002.tmp.c	Fri Dec 16 16:11:49 2011
+++ C:/src/Chromium-internal/src/third_party/libxml/src/parser.c	Fri Dec 16 16:11:40 2011
@@ -2468,6 +2468,10 @@
     if (tmp == NULL) goto mem_error;					\
     buffer = tmp;							\
 }
+#define growBufferIfNeeded(buffer, ncur, nadd) {                        \
+    if (ncur > buffer##_size - (nadd))                                  \
+        growBuffer(buffer, nadd);                                       \
+}
 
 /**
  * xmlStringLenDecodeEntities:
@@ -2536,9 +2540,7 @@
 	    if (val != 0) {
 		COPY_BUF(0,buffer,nbchars,val);
 	    }
-	    if (nbchars > buffer_size - XML_PARSER_BUFFER_SIZE) {
-	        growBuffer(buffer, XML_PARSER_BUFFER_SIZE);
-	    }
+	    growBufferIfNeeded(buffer, nbchars, XML_PARSER_BUFFER_SIZE);
 	} else if ((c == '&') && (what & XML_SUBSTITUTE_REF)) {
 	    if (xmlParserDebugEntities)
 		xmlGenericError(xmlGenericErrorContext,
@@ -2554,9 +2556,7 @@
 		(ent->etype == XML_INTERNAL_PREDEFINED_ENTITY)) {
 		if (ent->content != NULL) {
 		    COPY_BUF(0,buffer,nbchars,ent->content[0]);
-		    if (nbchars > buffer_size - XML_PARSER_BUFFER_SIZE) {
-			growBuffer(buffer, XML_PARSER_BUFFER_SIZE);
-		    }
+		    growBufferIfNeeded(buffer, nbchars, XML_PARSER_BUFFER_SIZE);
 		} else {
 		    xmlFatalErrMsg(ctxt, XML_ERR_INTERNAL_ERROR,
 			    "predefined entity has no content\n");
@@ -2586,9 +2586,7 @@
 		const xmlChar *cur = ent->name;
 
 		buffer[nbchars++] = '&';
-		if (nbchars > buffer_size - i - XML_PARSER_BUFFER_SIZE) {
-		    growBuffer(buffer, XML_PARSER_BUFFER_SIZE);
-		}
+		growBufferIfNeeded(buffer, nbchars, i + XML_PARSER_BUFFER_SIZE);
 		for (;i > 0;i--)
 		    buffer[nbchars++] = *cur++;
 		buffer[nbchars++] = ';';
@@ -2628,9 +2626,7 @@
 	} else {
 	    COPY_BUF(l,buffer,nbchars,c);
 	    str += l;
-	    if (nbchars > buffer_size - XML_PARSER_BUFFER_SIZE) {
-	      growBuffer(buffer, XML_PARSER_BUFFER_SIZE);
-	    }
+	    growBufferIfNeeded(buffer, nbchars, XML_PARSER_BUFFER_SIZE);
 	}
 	if (str < last)
 	    c = CUR_SCHAR(str, l);
@@ -3673,18 +3669,14 @@
 
 		if (val == '&') {
 		    if (ctxt->replaceEntities) {
-			if (len > buf_size - 10) {
-			    growBuffer(buf, 10);
-			}
+			growBufferIfNeeded(buf, len, 10);
 			buf[len++] = '&';
 		    } else {
 			/*
 			 * The reparsing will be done in xmlStringGetNodeList()
 			 * called by the attribute() function in SAX.c
 			 */
-			if (len > buf_size - 10) {
-			    growBuffer(buf, 10);
-			}
+			growBufferIfNeeded(buf, len, 10);
 			buf[len++] = '&';
 			buf[len++] = '#';
 			buf[len++] = '3';
@@ -3692,9 +3684,7 @@
 			buf[len++] = ';';
 		    }
 		} else if (val != 0) {
-		    if (len > buf_size - 10) {
-			growBuffer(buf, 10);
-		    }
+		    growBufferIfNeeded(buf, len, 10);
 		    len += xmlCopyChar(0, &buf[len], val);
 		}
 	    } else {
@@ -3704,9 +3694,7 @@
 		    ctxt->nbentities += ent->owner;
 		if ((ent != NULL) &&
 		    (ent->etype == XML_INTERNAL_PREDEFINED_ENTITY)) {
-		    if (len > buf_size - 10) {
-			growBuffer(buf, 10);
-		    }
+		    growBufferIfNeeded(buf, len, 10);
 		    if ((ctxt->replaceEntities == 0) &&
 		        (ent->content[0] == '&')) {
 			buf[len++] = '&';
@@ -3732,17 +3720,13 @@
                                     current++;
                                 } else
                                     buf[len++] = *current++;
-				if (len > buf_size - 10) {
-				    growBuffer(buf, 10);
-				}
+				growBufferIfNeeded(buf, len, 10);
 			    }
 			    xmlFree(rep);
 			    rep = NULL;
 			}
 		    } else {
-			if (len > buf_size - 10) {
-			    growBuffer(buf, 10);
-			}
+			growBufferIfNeeded(buf, len, 10);
 			if (ent->content != NULL)
 			    buf[len++] = ent->content[0];
 		    }
@@ -3768,9 +3752,7 @@
 		     * Just output the reference
 		     */
 		    buf[len++] = '&';
-		    while (len > buf_size - i - 10) {
-			growBuffer(buf, i + 10);
-		    }
+		    growBufferIfNeeded(buf, len, i + 10);
 		    for (;i > 0;i--)
 			buf[len++] = *cur++;
 		    buf[len++] = ';';
@@ -3781,18 +3763,14 @@
 	        if ((len != 0) || (!normalize)) {
 		    if ((!normalize) || (!in_space)) {
 			COPY_BUF(l,buf,len,0x20);
-			while (len > buf_size - 10) {
-			    growBuffer(buf, 10);
-			}
+			growBufferIfNeeded(buf, len, 10);
 		    }
 		    in_space = 1;
 		}
 	    } else {
 	        in_space = 0;
 		COPY_BUF(l,buf,len,c);
-		if (len > buf_size - 10) {
-		    growBuffer(buf, 10);
-		}
+		growBufferIfNeeded(buf, len, 10);
 	    }
 	    NEXTL(l);
 	}