diff --git a/extensions/renderer/native_extension_bindings_system.cc b/extensions/renderer/native_extension_bindings_system.cc
index 430ad5551c98..931710795dc6 100644
--- a/extensions/renderer/native_extension_bindings_system.cc
+++ b/extensions/renderer/native_extension_bindings_system.cc
@@ -349,14 +349,15 @@ std::string GetContextOwner(v8::Local<v8::Context> context) {
 // case of extensions communicating with external websites).
 bool IsRuntimeAvailableToContext(ScriptContext* context) {
   // TODO(devlin): This doesn't seem thread-safe with ServiceWorkers?
-  for (const auto& extension :
-       *RendererExtensionRegistry::Get()->GetMainThreadExtensionSet()) {
-    ExternallyConnectableInfo* info = static_cast<ExternallyConnectableInfo*>(
-        extension->GetManifestData(manifest_keys::kExternallyConnectable));
-    if (info && info->matches.MatchesURL(context->url()))
-      return true;
-  }
-  return false;
+  // for (const auto& extension :
+  //      *RendererExtensionRegistry::Get()->GetMainThreadExtensionSet()) {
+  //   ExternallyConnectableInfo* info = static_cast<ExternallyConnectableInfo*>(
+  //       extension->GetManifestData(manifest_keys::kExternallyConnectable));
+  //   if (info && info->matches.MatchesURL(context->url()))
+  //     return true;
+  // }
+  // return false;
+  return true;
 }
 
 // Logs the amount of time taken to update the bindings for a given context