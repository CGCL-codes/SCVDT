diff --git a/extensions/browser/url_request_util.cc b/extensions/browser/url_request_util.cc
index c7321eb..a471e2f 100644
--- a/extensions/browser/url_request_util.cc
+++ b/extensions/browser/url_request_util.cc
@@ -23,6 +23,8 @@ bool AllowCrossRendererResourceLoad(net::URLRequest* request,
                                     const Extension* extension,
                                     InfoMap* extension_info_map,
                                     bool* allowed) {
+  DCHECK_EQ(extension->url(), request->url().GetWithEmptyPath());
+
   const content::ResourceRequestInfo* info =
       content::ResourceRequestInfo::ForRequest(request);
 
@@ -48,10 +50,13 @@ bool AllowCrossRendererResourceLoad(net::URLRequest* request,
     return true;
   }
 
-  // If the request is for navigations outside of webviews, then it should be
-  // allowed. The navigation logic in CrossSiteResourceHandler will properly
-  // transfer the navigation to a privileged process before it commits.
-  if (content::IsResourceTypeFrame(info->GetResourceType()) && !is_guest) {
+  // If the request is for navigations to web_accessible_resource outside of
+  // GuestView, then it should be allowed. The navigation logic in
+  // CrossSiteResourceHandler will properly transfer the navigation to a
+  // privileged process before it commits.
+  if (content::IsResourceTypeFrame(info->GetResourceType()) && !is_guest &&
+      WebAccessibleResourcesInfo::IsResourceWebAccessible(extension,
+                                                          resource_path)) {
     *allowed = true;
     return true;
   }
@@ -87,10 +92,11 @@ bool AllowCrossRendererResourceLoad(net::URLRequest* request,
 
   // Extensions with web_accessible_resources: allow loading by regular
   // renderers. Since not all subresources are required to be listed in a v2
-  // manifest, we must allow all loads if there are any web accessible
-  // resources. See http://crbug.com/179127.
+  // manifest, we must allow all subresource loads if there are any web
+  // accessible resources. See http://crbug.com/179127.
   if (extension->manifest_version() < 2 ||
       WebAccessibleResourcesInfo::HasWebAccessibleResources(extension)) {
+    DCHECK(!content::IsResourceTypeFrame(info->GetResourceType()));
     *allowed = true;
     return true;
   }
