diff --git a/modules/video_coding/rtp_frame_reference_finder.cc b/modules/video_coding/rtp_frame_reference_finder.cc
index 873e71a1b0..9f9ac67c45 100644
--- a/modules/video_coding/rtp_frame_reference_finder.cc
+++ b/modules/video_coding/rtp_frame_reference_finder.cc
@@ -290,8 +290,8 @@ RtpFrameReferenceFinder::FrameDecision RtpFrameReferenceFinder::ManageFrameVp8(
   }
 
   // Protect against corrupted packets with arbitrary large temporal idx.
-  if (codec_header.temporalIdx >= kMaxTemporalLayers)
-    return kDrop;
+ // if (codec_header.temporalIdx >= kMaxTemporalLayers)
+   // return kDrop;
 
   frame->id.picture_id = codec_header.pictureId % kPicIdLength;
 
@@ -438,8 +438,8 @@ RtpFrameReferenceFinder::FrameDecision RtpFrameReferenceFinder::ManageFrameVp9(
   }
 
   // Protect against corrupted packets with arbitrary large temporal idx.
-  if (codec_header.temporal_idx >= kMaxTemporalLayers)
-    return kDrop;
+ // if (codec_header.temporal_idx >= kMaxTemporalLayers)
+   // return kDrop;
 
   frame->id.spatial_layer = codec_header.spatial_idx;
   frame->inter_layer_predicted = codec_header.inter_layer_predicted;
@@ -697,8 +697,8 @@ RtpFrameReferenceFinder::FrameDecision RtpFrameReferenceFinder::ManageFrameH264(
     return ManageFramePidOrSeqNum(std::move(frame), kNoPictureId);
 
   // Protect against corrupted packets with arbitrary large temporal idx.
-  if (tid >= kMaxTemporalLayers)
-    return kDrop;
+ // if (tid >= kMaxTemporalLayers)
+   // return kDrop;
 
   frame->id.picture_id = frame->last_seq_num();
 
