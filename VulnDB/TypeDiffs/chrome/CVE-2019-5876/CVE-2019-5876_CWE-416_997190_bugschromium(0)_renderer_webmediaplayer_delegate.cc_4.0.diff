diff --git a/content/renderer/media/renderer_webmediaplayer_delegate.cc b/content/renderer/media/renderer_webmediaplayer_delegate.cc
index 2e1635ee3459..149ae2b4219d 100644
--- a/content/renderer/media/renderer_webmediaplayer_delegate.cc
+++ b/content/renderer/media/renderer_webmediaplayer_delegate.cc
@@ -87,7 +87,7 @@ void RendererWebMediaPlayerDelegate::DidPlay(
   DVLOG(2) << __func__ << "(" << player_id << ", " << has_video << ", "
            << has_audio << ", " << static_cast<int>(media_content_type) << ")";
   DCHECK(id_map_.Lookup(player_id));
-
+/*
   has_played_media_ = true;
   if (has_video) {
     if (!playing_videos_.count(player_id)) {
@@ -97,12 +97,12 @@ void RendererWebMediaPlayerDelegate::DidPlay(
   } else {
     playing_videos_.erase(player_id);
   }
-
+*/
   Send(new MediaPlayerDelegateHostMsg_OnMediaPlaying(
       routing_id(), player_id, has_video, has_audio, false,
       media_content_type));
 
-  ScheduleUpdateTask();
+//  ScheduleUpdateTask();
 }
 
 void RendererWebMediaPlayerDelegate::DidPlayerMutedStatusChange(int delegate_id,
@@ -271,7 +271,7 @@ void RendererWebMediaPlayerDelegate::OnMediaDelegatePause(
     int player_id,
     bool triggered_by_user) {
   RecordAction(base::UserMetricsAction("Media.Controls.RemotePause"));
-
+/*
   Observer* observer = id_map_.Lookup(player_id);
   if (observer) {
     if (triggered_by_user) {
@@ -284,6 +284,7 @@ void RendererWebMediaPlayerDelegate::OnMediaDelegatePause(
     }
     observer->OnPause();
   }
+*/
 }
 
 void RendererWebMediaPlayerDelegate::OnMediaDelegatePlay(int player_id) {
