Index: mozilla/security/nss/lib/softoken/sftkmod.c
===================================================================
RCS file: /cvsroot/mozilla/security/nss/lib/softoken/sftkmod.c,v
retrieving revision 1.8
diff -u -p -8 -r1.8 sftkmod.c
--- mozilla/security/nss/lib/softoken/sftkmod.c	15 Jan 2011 20:59:11 -0000	1.8
+++ mozilla/security/nss/lib/softoken/sftkmod.c	23 Sep 2011 22:26:21 -0000
@@ -174,25 +174,28 @@ sftkdb_growList(char ***pModuleList, int
 static 
 char *sftk_getOldSecmodName(const char *dbname,const char *filename)
 {
     char *file = NULL;
     char *dirPath = PORT_Strdup(dbname);
     char *sep;
 
     sep = PORT_Strrchr(dirPath,*PATH_SEPARATOR);
-#ifdef WINDOWS
+#ifdef _WIN32
     if (!sep) {
-	sep = PORT_Strrchr(dirPath,'/');
+	/* pkcs11i.h defines PATH_SEPARATOR as "/" for all platforms. */
+	sep = PORT_Strrchr(dirPath,'\\');
     }
 #endif
     if (sep) {
-	*(sep)=0;
+	*sep = 0;
+	file = PR_smprintf("%s"PATH_SEPARATOR"%s", dirPath, filename);
+    } else {
+	file = PR_smprintf("%s", filename);
     }
-    file= PR_smprintf("%s"PATH_SEPARATOR"%s", dirPath, filename);
     PORT_Free(dirPath);
     return file;
 }
 
 #ifdef XP_UNIX
 #include <unistd.h>
 #endif
 #include <fcntl.h>
@@ -401,16 +404,18 @@ sftkdb_ReadSecmodDB(SDBType dbType, cons
     } 
 
     if (moduleString) {
 	PORT_Free(moduleString);
 	moduleString = NULL;
     }
 done:
     /* if we couldn't open a pkcs11 database, look for the old one */
+    /* XXX is this a good idea? when we can't open a sql: cert database,
+     * do we also look for the old cert database? */
     if (fd == NULL) {
 	char *olddbname = sftk_getOldSecmodName(dbname,filename);
 	PRStatus status;
 	char **oldModuleList;
 	int i;
 
 	/* couldn't get the old name */
 	if (!olddbname) {
