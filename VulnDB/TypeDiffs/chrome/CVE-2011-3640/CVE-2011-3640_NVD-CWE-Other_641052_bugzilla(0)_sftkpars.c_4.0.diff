Index: mozilla/security/nss/lib/softoken/sftkpars.c
===================================================================
RCS file: /cvsroot/mozilla/security/nss/lib/softoken/sftkpars.c,v
retrieving revision 1.11
diff -u -p -8 -r1.11 sftkpars.c
--- mozilla/security/nss/lib/softoken/sftkpars.c	18 Jun 2010 04:09:27 -0000	1.11
+++ mozilla/security/nss/lib/softoken/sftkpars.c	23 Sep 2011 22:26:21 -0000
@@ -602,16 +602,17 @@ sftk_getSecmodName(char *param, SDBType 
 		   char **filename, PRBool *rw)
 {
     int next;
     char *configdir = NULL;
     char *secmodName = NULL;
     char *value = NULL;
     char *save_params = param;
     const char *lconfigdir;
+    PRBool noModDB = PR_FALSE;
     param = sftk_argStrip(param);
 	
 
     while (*param) {
 	SFTK_HANDLE_STRING_ARG(param,configdir,"configDir=",;)
 	SFTK_HANDLE_STRING_ARG(param,secmodName,"secmod=",;)
 	SFTK_HANDLE_FINAL_ARG(param)
    }
@@ -626,25 +627,30 @@ sftk_getSecmodName(char *param, SDBType 
 	secmodName = PORT_Strdup(SECMOD_DB);
    }
 
    *filename = secmodName;
    lconfigdir = sftk_EvaluateConfigDir(configdir, dbType, appName);
 
    if (sftk_argHasFlag("flags","noModDB",save_params)) {
 	/* there isn't a module db, don't load the legacy support */
+	noModDB = PR_TRUE;
 	*dbType = SDB_SQL;
+	PORT_Free(*filename);
+	*filename = PORT_Strdup("");
         *rw = PR_FALSE;
    }
 
    /* only use the renamed secmod for legacy databases */
    if ((*dbType != SDB_LEGACY) && (*dbType != SDB_MULTIACCESS)) {
 	secmodName="pkcs11.txt";
    }
 
-   if (lconfigdir) {
+   if (noModDB) {
+	value = PR_smprintf("");
+   } else if (lconfigdir && lconfigdir[0] != '\0') {
 	value = PR_smprintf("%s" PATH_SEPARATOR "%s",lconfigdir,secmodName);
    } else {
 	value = PR_smprintf("%s",secmodName);
    }
    if (configdir) PORT_Free(configdir);
    return value;
 }
