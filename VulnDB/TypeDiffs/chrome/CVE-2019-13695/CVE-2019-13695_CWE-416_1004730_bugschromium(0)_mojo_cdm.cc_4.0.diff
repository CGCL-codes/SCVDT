diff --git a/media/mojo/clients/mojo_cdm.cc b/media/mojo/clients/mojo_cdm.cc
index da2a4e470fc3..6413e5d4695d 100644
--- a/media/mojo/clients/mojo_cdm.cc
+++ b/media/mojo/clients/mojo_cdm.cc
@@ -24,6 +24,10 @@
 #include "services/service_manager/public/cpp/connect.h"
 #include "services/service_manager/public/mojom/interface_provider.mojom.h"
 #include "url/origin.h"
+#include "media/mojo/mojom/audio_decoder.mojom.h"
+#include "media/base/audio_decoder_config.h"
+#include "media/base/encryption_scheme.h"
+#include "media/base/encryption_pattern.h"
 
 namespace media {
 
@@ -403,10 +407,31 @@ void MojoCdm::OnCdmInitialized(mojom::CdmPromiseResultPtr result,
     decryptor_ptr_info_ = decryptor.PassInterface();
   }
 
+  interface_factory_->CreateAudioDecoder(mojo::MakeRequest(&audio_decoder_));
+
+  media::EncryptionScheme encryption_scheme(EncryptionScheme::CIPHER_MODE_AES_CTR, media::EncryptionPattern(1,1));
+
+  media::AudioDecoderConfig config(media::kCodecOpus, media::kSampleFormatU8, media::CHANNEL_LAYOUT_MONO, 1, {0}, encryption_scheme);
+  audio_decoder_->Initialize(config, cdm_id_, base::Bind(&MojoCdm::OnAudioDecoderInitialized, base::Unretained(this)));
+  
+
   pending_init_promise_->resolve();
   pending_init_promise_.reset();
 }
 
+void MojoCdm::OnAudioDecoderInitialized(bool success, bool needs_bitstream_conversion) {
+  remote_cdm_.reset();
+  media::EncryptionScheme encryption_scheme(EncryptionScheme::CIPHER_MODE_AES_CTR, media::EncryptionPattern(1,1));
+
+  media::AudioDecoderConfig config(media::kCodecOpus, media::kSampleFormatU8, media::CHANNEL_LAYOUT_MONO, 1, {0}, encryption_scheme);
+
+  audio_decoder_->Initialize(config, cdm_id_, base::Bind(&MojoCdm::OnAudioDecoderReInitialized, base::Unretained(this)));
+}
+
+void MojoCdm::OnAudioDecoderReInitialized(bool success, bool needs_bitstream_conversion) {
+  audio_decoder_.reset();
+}
+
 void MojoCdm::OnKeyAdded() {
   base::AutoLock auto_lock(lock_);
 
