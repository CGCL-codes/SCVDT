--- trunk/src/content/browser/renderer_host/software_frame_manager.cc	2014/04/04 19:00:58	261816
+++ trunk/src/content/browser/renderer_host/software_frame_manager.cc	2014/04/04 19:01:21	261817
@@ -8,6 +8,7 @@
 #include "base/callback_helpers.h"
 #include "base/debug/alias.h"
 #include "base/numerics/safe_math.h"
+#include "cc/resources/shared_bitmap.h"
 #include "content/browser/renderer_host/dip_util.h"
 #include "content/public/browser/user_metrics.h"
 
@@ -97,9 +98,11 @@
 
   // The NULL handle is used in testing.
   if (base::SharedMemory::IsHandleValid(shared_memory->handle())) {
-    DCHECK(frame_data->CheckedSizeInBytes().IsValid())
-        << "Integer overflow when computing bytes to map.";
-    size_t size_in_bytes = frame_data->SizeInBytes();
+    DCHECK(cc::SharedBitmap::VerifySizeInBytes(frame_data->size));
+    // UncheckedSizeInBytes is okay because the frame_data size was verified
+    // when frame_data was received over IPC.
+    size_t size_in_bytes =
+        cc::SharedBitmap::UncheckedSizeInBytes(frame_data->size);
 #ifdef OS_WIN
     if (!shared_memory->Map(0)) {
       DLOG(ERROR) << "Unable to map renderer memory.";
