Index: WebCore/html/HTMLLinkElement.cpp
===================================================================
--- WebCore/html/HTMLLinkElement.cpp	(revision 50101)
+++ WebCore/html/HTMLLinkElement.cpp	(working copy)
@@ -259,14 +259,25 @@
 
     bool strictParsing = !document()->inCompatMode();
     bool enforceMIMEType = strictParsing;
+    bool crossDomainCSS = false;
+    bool validMIMEType = false;
 
     // Check to see if we should enforce the MIME type of the CSS resource in strict mode.
     // Running in iWeb 2 is one example of where we don't want to - <rdar://problem/6099748>
     if (enforceMIMEType && document()->page() && !document()->page()->settings()->enforceCSSMIMETypeInStrictMode())
         enforceMIMEType = false;
 
-    String sheetText = sheet->sheetText(enforceMIMEType);
+    // If we're loading a stylesheet cross-domain, and the MIME type is not
+    // standard, require the CSS to at least start with a valid CSS rule.
+    // This prevents an attacker playing games by injecting CSS strings into
+    // HTML, XML, JSON, etc. etc.
+    if (!document()->securityOrigin()->canRequest(KURL(ParsedURLString, url)))
+        crossDomainCSS = true;
+
+    String sheetText = sheet->sheetText(enforceMIMEType, &validMIMEType);
     m_sheet->parseString(sheetText, strictParsing);
+    if (crossDomainCSS && !validMIMEType && !m_sheet->hasGoodCSSHeader())
+        m_sheet = CSSStyleSheet::create(this, url, charset);
 
     if (strictParsing && document()->settings() && document()->settings()->needsSiteSpecificQuirks()) {
         // Work around <https://bugs.webkit.org/show_bug.cgi?id=28350>.
