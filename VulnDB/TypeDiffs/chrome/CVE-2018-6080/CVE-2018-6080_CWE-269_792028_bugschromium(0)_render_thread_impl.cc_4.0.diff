diff --git a/content/renderer/render_thread_impl.cc b/content/renderer/render_thread_impl.cc
index 8734a0774f3a..7da181e4fcee 100644
--- a/content/renderer/render_thread_impl.cc
+++ b/content/renderer/render_thread_impl.cc
@@ -229,6 +229,8 @@
 #include <malloc.h>
 #endif
 
+#include "services/resource_coordinator/public/cpp/memory_instrumentation/os_metrics.h"
+
 using base::ThreadRestrictions;
 using blink::WebDocument;
 using blink::WebFrame;
@@ -1004,6 +1006,33 @@ void RenderThreadImpl::Init(
     compositing_mode_reporter_->AddCompositingModeWatcher(
         std::move(watcher_ptr));
   }
+
+  //Requesting a memory dump with memory regions
+  base::trace_event::GlobalMemoryDumpRequestArgs args = {
+    base::trace_event::MemoryDumpType::EXPLICITLY_TRIGGERED,
+    base::trace_event::MemoryDumpLevelOfDetail::VM_REGIONS_ONLY_FOR_HEAP_PROFILER};
+  GetConnector()->BindInterface("resource_coordinator",
+                                 mojo::MakeRequest(&coordinator_));
+  coordinator_->RequestGlobalMemoryDump(args,
+                                        base::Bind(&RenderThreadImpl::ReceivedMemoryDump, base::Unretained(this)));
+}
+
+void RenderThreadImpl::ReceivedMemoryDump(bool success, memory_instrumentation::mojom::GlobalMemoryDumpPtr ptr) {
+  for (const auto& pmd : ptr->process_dumps) {
+    LOG(ERROR) << "ReceivedMemoryDump: " << "pid: " << pmd->pid << ", process_type: " << pmd->process_type;
+    for (const auto& region : pmd->os_dump->memory_maps_for_heap_profiler) {
+      char fmt[256];
+      memset(fmt, 0, sizeof(fmt));
+      snprintf(fmt, sizeof(fmt), "%s%s%s %" PRIx64 "-%" PRIx64 " (%s)",
+               region->protection_flags & memory_instrumentation::mojom::VmRegion::kProtectionFlagsRead  ? "r" : "-",
+               region->protection_flags & memory_instrumentation::mojom::VmRegion::kProtectionFlagsWrite ? "w" : "-",
+               region->protection_flags & memory_instrumentation::mojom::VmRegion::kProtectionFlagsExec  ? "x" : "-",
+               region->start_address,
+               region->start_address + region->size_in_bytes,
+               region->mapped_file.c_str());
+      LOG(ERROR) << fmt;
+    }
+  }
 }
 
 RenderThreadImpl::~RenderThreadImpl() = default;
