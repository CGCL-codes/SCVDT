diff --git a/security/sandbox/chromium/sandbox/linux/seccomp-bpf/codegen.cc b/security/sandbox/chromium/sandbox/linux/seccomp-bpf/codegen.cc
index 8fb1701..caeed2a 100644
--- a/security/sandbox/chromium/sandbox/linux/seccomp-bpf/codegen.cc
+++ b/security/sandbox/chromium/sandbox/linux/seccomp-bpf/codegen.cc
@@ -439,7 +439,21 @@ static int PointerCompare(const BasicBlock* block1,
     // both basic blocks, we know the relative ordering between the two blocks
     // and can return.
     if (iter1 == insns1.end()) {
-      return iter2 == insns2.end() ? 0 : -1;
+      if (iter2 == insns2.end()) {
+	// If the two blocks are the same length (and have elementwise-equal
+	// code and k fields, which is the only way we can reach this point),
+	// and the last instruction isn't a JMP or a RET, then we must compare
+	// their successors.
+	if (BPF_CLASS(insns1.back()->code) != BPF_JMP &&
+	    BPF_CLASS(insns1.back()->code) != BPF_RET) {
+	  return PointerCompare(blocks.find(insns1.back()->next)->second,
+				blocks.find(insns2.back()->next)->second,
+				blocks);
+	} else {
+	  return 0;
+	}
+      }
+      return -1;
     } else if (iter2 == insns2.end()) {
       return 1;
     }
-- 
1.9.0

