Index: ext/pcntl/pcntl.c
===================================================================
--- ext/pcntl/pcntl.c	(revision 302771)
+++ ext/pcntl/pcntl.c	(working copy)
@@ -434,21 +434,9 @@
 
 PHP_RSHUTDOWN_FUNCTION(pcntl)
 {
-	struct php_pcntl_pending_signal *sig;
-
 	/* FIXME: if a signal is delivered after this point, things will go pear shaped;
 	 * need to remove signal handlers */
 	zend_hash_destroy(&PCNTL_G(php_signal_table));
-	while (PCNTL_G(head)) {
-		sig = PCNTL_G(head);
-		PCNTL_G(head) = sig->next;
-		efree(sig);
-	}
-	while (PCNTL_G(spares)) {
-		sig = PCNTL_G(spares);
-		PCNTL_G(spares) = sig->next;
-		efree(sig);
-	}
 	return SUCCESS;
 }
 
@@ -765,10 +753,10 @@
 		/* since calling malloc() from within a signal handler is not portable,
 		 * pre-allocate a few records for recording signals */
 		int i;
-		for (i = 0; i < 32; i++) {
+		for (i = 0; i < PENDING_SIGNALS_SIZE; i++) {
 			struct php_pcntl_pending_signal *psig;
 
-			psig = emalloc(sizeof(*psig));
+			psig = &PCNTL_G(pending_signals[i]);
 			psig->next = PCNTL_G(spares);
 			PCNTL_G(spares) = psig;
 		}
