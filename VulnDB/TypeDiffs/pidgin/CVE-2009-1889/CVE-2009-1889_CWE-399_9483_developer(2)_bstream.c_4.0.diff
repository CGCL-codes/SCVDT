Index: pidgin-2.5.6/libpurple/protocols/oscar/bstream.c
===================================================================
--- pidgin-2.5.6.orig/libpurple/protocols/oscar/bstream.c	2009-05-27 19:52:11.856903422 +0400
+++ pidgin-2.5.6/libpurple/protocols/oscar/bstream.c	2009-05-27 19:52:57.224901046 +0400
@@ -161,16 +161,22 @@ guint32 byte_stream_getle32(ByteStream *
 	return aimutil_getle32(bs->data + bs->offset - 4);
 }
 
+static void byte_stream_getrawbuf_nocheck(ByteStream *bs, guint8 *buf, int len);
+
 int byte_stream_getrawbuf(ByteStream *bs, guint8 *buf, int len)
 {
 
 	if (byte_stream_empty(bs) < len)
 		return 0;
 
+	byte_stream_getrawbuf_nocheck(bs, buf, len);
+	return len;
+}
+
+static void byte_stream_getrawbuf_nocheck(ByteStream *bs, guint8 *buf, int len)
+{
 	memcpy(buf, bs->data + bs->offset, len);
 	bs->offset += len;
-
-	return len;
 }
 
 guint8 *byte_stream_getraw(ByteStream *bs, int len)
@@ -182,10 +188,7 @@ guint8 *byte_stream_getraw(ByteStream *b
 
 	ob = g_malloc(len);
 
-	if (byte_stream_getrawbuf(bs, ob, len) < len) {
-		g_free(ob);
-		return NULL;
-	}
+	byte_stream_getrawbuf_nocheck(bs, ob, len);
 
 	return ob;
 }
@@ -199,10 +204,7 @@ char *byte_stream_getstr(ByteStream *bs,
 
 	ob = g_malloc(len + 1);
 
-	if (byte_stream_getrawbuf(bs, (guint8 *)ob, len) < len) {
-		g_free(ob);
-		return NULL;
-	}
+	byte_stream_getrawbuf_nocheck(bs, (guint8 *)ob, len);
 
 	ob[len] = '\0';
 
