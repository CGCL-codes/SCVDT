diff --git a/magick/cache.c b/magick/cache.c
index 70921c4fa5..369c52caff 100644
--- a/magick/cache.c
+++ b/magick/cache.c
@@ -583,29 +583,6 @@ MagickExport void ClonePixelCacheMethods(Cache clone,const Cache cache)
 %
 */
 
-static inline void CopyPixels(PixelPacket *destination,
-  const PixelPacket *source,const MagickSizeType number_pixels)
-{
-#if !defined(MAGICKCORE_OPENMP_SUPPORT) || (MAGICKCORE_QUANTUM_DEPTH <= 8)
-  (void) memcpy(destination,source,(size_t) number_pixels*sizeof(*source));
-#else
-  {
-    register MagickOffsetType
-      i;
-
-    if ((number_pixels*sizeof(*source)) < MagickMaxBufferExtent)
-      {
-        (void) memcpy(destination,source,(size_t) number_pixels*
-          sizeof(*source));
-        return;
-      }
-    #pragma omp parallel for
-    for (i=0; i < (MagickOffsetType) number_pixels; i++)
-      destination[i]=source[i];
-  }
-#endif
-}
-
 static inline MagickSizeType MagickMin(const MagickSizeType x,
   const MagickSizeType y)
 {
@@ -651,8 +628,8 @@ static MagickBooleanType ClonePixelCacheRepository(
       /*
         Identical pixel cache morphology.
       */
-      CopyPixels(clone_info->pixels,cache_info->pixels,cache_info->columns*
-        cache_info->rows);
+      (void) memcpy(clone_info->pixels,cache_info->pixels,cache_info->columns*
+        cache_info->rows*sizeof(*cache_info->pixels));
       if ((cache_info->active_index_channel != MagickFalse) &&
           (clone_info->active_index_channel != MagickFalse))
         (void) memcpy(clone_info->indexes,cache_info->indexes,
