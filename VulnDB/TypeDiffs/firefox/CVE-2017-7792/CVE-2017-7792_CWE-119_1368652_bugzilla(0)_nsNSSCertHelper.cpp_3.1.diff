diff -r abd7d1893a23 -r 3582719c52de security/manager/ssl/nsNSSCertHelper.cpp
--- a/security/manager/ssl/nsNSSCertHelper.cpp	Tue Jun 27 19:48:31 2017 -0400
+++ b/security/manager/ssl/nsNSSCertHelper.cpp	Thu Jun 01 12:26:41 2017 -0700
@@ -209,9 +209,8 @@
 static nsresult
 GetDefaultOIDFormat(SECItem* oid, nsAString& outString, char separator)
 {
-  char buf[300];
-  unsigned int len = 0;
-  int written, invalidCount = 0;
+  outString.Truncate();
+  int invalidCount = 0;
 
   unsigned int i;
   unsigned long val = 0;
@@ -251,27 +250,17 @@
         unsigned long one = std::min(val / 40, 2UL); // never > 2
         unsigned long two = val - (one * 40);
 
-        written = snprintf(
-          &buf[len], sizeof(buf) - len, "%lu%c%lu", one, separator, two);
+        outString.AppendPrintf("%lu%c%lu", one, separator, two);
       } else {
-        written =
-          snprintf(&buf[len], sizeof(buf) - len, "%c%lu", separator, val);
+        outString.AppendPrintf("%c%lu", separator, val);
       }
     } else {
+      if (!first) {
+        outString.AppendPrintf("%c", separator);
+      }
       nsAutoString unknownText;
       GetPIPNSSBundleString("CertUnknown", unknownText);
-      if (first) {
-        written = snprintf(&buf[len],
-                           sizeof(buf) - len,
-                           "%s",
-                           NS_ConvertUTF16toUTF8(unknownText).get());
-      } else {
-        written = snprintf(&buf[len],
-                           sizeof(buf) - len,
-                           "%c%s",
-                           separator,
-                           NS_ConvertUTF16toUTF8(unknownText).get());
-      }
+      outString.Append(unknownText);
 
       if (++invalidCount > 3) {
         // Allow only 3 occurences of Unknown in OID display string to
@@ -280,17 +269,11 @@
       }
     }
 
-    if (written < 0)
-      return NS_ERROR_FAILURE;
-
-    len += written;
-    MOZ_ASSERT(len < sizeof(buf), "OID data too big to display in 300 chars.");
     val = 0;
     invalid = false;
     first = false;
   }
 
-  CopyASCIItoUTF16(buf, outString);
   return NS_OK;
 }
 
