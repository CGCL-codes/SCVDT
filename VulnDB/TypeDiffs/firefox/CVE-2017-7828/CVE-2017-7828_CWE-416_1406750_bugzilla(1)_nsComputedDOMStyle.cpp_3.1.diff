diff -r 0b1f15ab849b -r ece6798a15ba layout/style/nsComputedDOMStyle.cpp
--- a/layout/style/nsComputedDOMStyle.cpp	Wed Oct 25 13:13:23 2017 +0200
+++ b/layout/style/nsComputedDOMStyle.cpp	Tue Oct 24 17:44:12 2017 -0400
@@ -911,6 +911,9 @@
   // will use the caller document's style), but it can be complicated and should
   // be an edge case, so we just don't bother to do the optimization in this
   // case.
+  //
+  // FIXME(emilio): This is likely to want GetComposedDoc() instead of
+  // OwnerDoc().
   if (aDocument != mContent->OwnerDoc()) {
     return FlushTarget::Normal;
   }
@@ -957,6 +960,11 @@
     return;
   }
 
+  nsCOMPtr<nsIPresShell> presShellForContent = GetPresShellForContent(mContent);
+  if (presShellForContent && presShellForContent != mPresShell) {
+    presShellForContent->FlushPendingNotifications(FlushType::Style);
+  }
+
   // We need to use GetUndisplayedRestyleGeneration instead of
   // GetRestyleGeneration, because the caching of mStyleContext is an
   // optimization that is useful only for displayed elements.
@@ -1047,10 +1055,11 @@
 #endif
     // Need to resolve a style context
     RefPtr<nsStyleContext> resolvedStyleContext =
-      nsComputedDOMStyle::GetStyleContext(mContent->AsElement(),
-                                          mPseudo,
-                                          mPresShell,
-                                          mStyleType);
+      nsComputedDOMStyle::GetStyleContextNoFlush(
+          mContent->AsElement(),
+          mPseudo,
+          presShellForContent ? presShellForContent.get() : mPresShell,
+          mStyleType);
     if (!resolvedStyleContext) {
       ClearStyleContext();
       return;
