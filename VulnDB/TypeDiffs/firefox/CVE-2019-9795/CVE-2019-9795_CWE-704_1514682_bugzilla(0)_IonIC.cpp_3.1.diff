diff -r 1deedd79bc67 -r acf56427a738 js/src/jit/IonIC.cpp
--- a/js/src/jit/IonIC.cpp	Fri Feb 15 19:12:32 2019 +0000
+++ b/js/src/jit/IonIC.cpp	Sat Feb 16 02:18:06 2019 +0000
@@ -253,6 +253,7 @@
 
   bool attached = false;
   bool isTemporarilyUnoptimizable = false;
+  bool canAddSlot = false;
 
   if (ic->state().maybeTransition()) {
     ic->discardStubs(cx->zone());
@@ -276,8 +277,9 @@
     RootedScript script(cx, ic->script());
     jsbytecode* pc = ic->pc();
     SetPropIRGenerator gen(cx, script, pc, ic->kind(), ic->state().mode(),
-                           &isTemporarilyUnoptimizable, objv, idVal, rhs,
-                           ic->needsTypeBarrier(), ic->guardHoles());
+                           &isTemporarilyUnoptimizable, &canAddSlot, objv,
+                           idVal, rhs, ic->needsTypeBarrier(),
+                           ic->guardHoles());
     if (gen.tryAttachStub()) {
       ic->attachCacheIRStub(cx, gen.writerRef(), gen.cacheKind(), ionScript,
                             &attached, gen.typeCheckInfo());
@@ -340,9 +342,10 @@
     RootedScript script(cx, ic->script());
     jsbytecode* pc = ic->pc();
     SetPropIRGenerator gen(cx, script, pc, ic->kind(), ic->state().mode(),
-                           &isTemporarilyUnoptimizable, objv, idVal, rhs,
-                           ic->needsTypeBarrier(), ic->guardHoles());
-    if (gen.tryAttachAddSlotStub(oldGroup, oldShape)) {
+                           &isTemporarilyUnoptimizable, &canAddSlot, objv,
+                           idVal, rhs, ic->needsTypeBarrier(),
+                           ic->guardHoles());
+    if (canAddSlot && gen.tryAttachAddSlotStub(oldGroup, oldShape)) {
       ic->attachCacheIRStub(cx, gen.writerRef(), gen.cacheKind(), ionScript,
                             &attached, gen.typeCheckInfo());
     } else {
