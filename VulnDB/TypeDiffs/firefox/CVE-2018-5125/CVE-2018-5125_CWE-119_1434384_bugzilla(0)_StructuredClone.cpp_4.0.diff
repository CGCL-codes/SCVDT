diff -r 745e458677e3 -r 5c286cc709df js/src/vm/StructuredClone.cpp
--- a/js/src/vm/StructuredClone.cpp	Thu Mar 01 21:41:25 2018 +0200
+++ b/js/src/vm/StructuredClone.cpp	Fri Jan 05 14:37:47 2018 -0800
@@ -2374,12 +2374,14 @@
         return in.reportTruncated();
 
     if (tag != SCTAG_HEADER) {
-        // Old structured clone buffer. We must have read it from disk or
-        // somewhere, so we can assume it's scope-compatible.
+        // Old structured clone buffer. We must have read it from disk.
+        storedScope = JS::StructuredCloneScope::DifferentProcess;
         return true;
     }
 
     MOZ_ALWAYS_TRUE(in.readPair(&tag, &data));
+    storedScope = JS::StructuredCloneScope(data);
+
     if (data != uint32_t(JS::StructuredCloneScope::SameProcessSameThread) &&
         data != uint32_t(JS::StructuredCloneScope::SameProcessDifferentThread) &&
         data != uint32_t(JS::StructuredCloneScope::DifferentProcess))
@@ -2388,7 +2390,6 @@
                                   "invalid structured clone scope");
         return false;
     }
-    storedScope = JS::StructuredCloneScope(data);
     if (storedScope < allowedScope) {
         JS_ReportErrorNumberASCII(context(), GetErrorMessage, nullptr, JSMSG_SC_BAD_SERIALIZED_DATA,
                                   "incompatible structured clone scope");
