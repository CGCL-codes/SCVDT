diff -r 8d9b536289c2 -r d516c35eabf1 js/src/vm/TypedArrayObject.cpp
--- a/js/src/vm/TypedArrayObject.cpp	Tue Jun 27 20:33:32 2017 +0200
+++ b/js/src/vm/TypedArrayObject.cpp	Mon Jun 26 20:15:41 2017 -0400
@@ -575,16 +575,11 @@
         RootedScript script(cx, cx->currentScript(&pc));
         if (script && ObjectGroup::useSingletonForAllocationSite(script, pc, clasp))
             newKind = SingletonObject;
-        RootedObject tmp(cx, NewBuiltinClassInstance(cx, clasp, allocKind, newKind));
+        JSObject* tmp = NewBuiltinClassInstance(cx, clasp, allocKind, newKind);
         if (!tmp)
             return nullptr;
-        if (script && !ObjectGroup::setAllocationSiteObjectGroup(cx, script, pc, tmp,
-                                                                 newKind == SingletonObject))
-        {
-            return nullptr;
-        }
 
-        TypedArrayObject* tarray = &tmp->as<TypedArrayObject>();
+        Rooted<TypedArrayObject*> tarray(cx, &tmp->as<TypedArrayObject>());
         initTypedArraySlots(cx, tarray, len);
 
         // Template objects do not need memory for its elements, since there
@@ -592,6 +587,12 @@
         // nullptr and avoid allocating memory that will never be used.
         tarray->initPrivate(nullptr);
 
+        if (script && !ObjectGroup::setAllocationSiteObjectGroup(cx, script, pc, tarray,
+                                                                 newKind == SingletonObject))
+        {
+            return nullptr;
+        }
+
         return tarray;
     }
 
