diff -r 5d767f7d3d48 -r b72048157f18 dom/smil/SMILAnimationController.cpp
--- a/dom/smil/SMILAnimationController.cpp	Fri Mar 01 22:17:41 2019 +0000
+++ b/dom/smil/SMILAnimationController.cpp	Mon Mar 04 15:54:55 2019 +0000
@@ -93,7 +93,7 @@
 
   SMILTimeContainer::Resume(aType);
 
-  if (wasPaused && !mPauseState && mChildContainerTable.Count()) {
+  if (wasPaused && !mPauseState && !mChildContainerTable.IsEmpty()) {
     MaybeStartSampling(GetRefreshDriver());
     Sample();  // Run the first sample manually
   }
@@ -164,7 +164,7 @@
   mAnimationElementTable.PutEntry(aAnimationElement);
   if (mDeferredStartSampling) {
     mDeferredStartSampling = false;
-    if (mChildContainerTable.Count()) {
+    if (!mChildContainerTable.IsEmpty()) {
       // mAnimationElementTable was empty, but now we've added its 1st element
       MOZ_ASSERT(mAnimationElementTable.Count() == 1,
                  "we shouldn't have deferred sampling if we already had "
@@ -212,7 +212,7 @@
 
 void SMILAnimationController::NotifyRefreshDriverCreated(
     nsRefreshDriver* aRefreshDriver) {
-  if (!mPauseState) {
+  if (!mPauseState && !mChildContainerTable.IsEmpty()) {
     MaybeStartSampling(aRefreshDriver);
   }
 }
@@ -708,7 +708,7 @@
 void SMILAnimationController::RemoveChild(SMILTimeContainer& aChild) {
   mChildContainerTable.RemoveEntry(&aChild);
 
-  if (!mPauseState && mChildContainerTable.Count() == 0) {
+  if (!mPauseState && mChildContainerTable.IsEmpty()) {
     StopSampling(GetRefreshDriver());
   }
 }
