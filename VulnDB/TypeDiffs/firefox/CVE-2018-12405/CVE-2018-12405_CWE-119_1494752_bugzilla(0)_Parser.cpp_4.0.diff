diff -r fad6b5da71c6 -r 222184270b1b js/src/frontend/Parser.cpp
--- a/js/src/frontend/Parser.cpp	Thu Nov 08 12:10:29 2018 +0000
+++ b/js/src/frontend/Parser.cpp	Thu Oct 11 13:54:41 2018 -0700
@@ -19,6 +19,8 @@
 
 #include "frontend/Parser.h"
 
+#include "mozilla/ArrayUtils.h"
+#include "mozilla/Casting.h"
 #include "mozilla/Range.h"
 #include "mozilla/Sprintf.h"
 #include "mozilla/TypeTraits.h"
@@ -52,10 +54,12 @@
 
 using namespace js;
 
+using mozilla::AssertedCast;
 using mozilla::Maybe;
 using mozilla::Nothing;
 using mozilla::PodCopy;
 using mozilla::PodZero;
+using mozilla::PointerRangeSize;
 using mozilla::Some;
 using mozilla::Unused;
 using mozilla::Utf8Unit;
@@ -1945,14 +1949,57 @@
     return bindings;
 }
 
-/**
- * Copy-construct |BindingName|s from |bindings| into |cursor|, then return
- * the location one past the newly-constructed |BindingName|s.
- */
-static MOZ_MUST_USE BindingName*
-FreshlyInitializeBindings(BindingName* cursor, const BindingNameVector& bindings)
-{
-    return std::uninitialized_copy(bindings.begin(), bindings.end(), cursor);
+namespace detail {
+
+template<class Data>
+static MOZ_ALWAYS_INLINE BindingName*
+InitializeIndexedBindings(Data* data, BindingName* start, BindingName* cursor)
+{
+    return cursor;
+}
+
+template<class Data, typename UnsignedInteger, typename... Step>
+static MOZ_ALWAYS_INLINE BindingName*
+InitializeIndexedBindings(Data* data, BindingName* start, BindingName* cursor,
+                          UnsignedInteger Data::* field, const BindingNameVector& bindings,
+                          Step&&... step)
+{
+    data->*field = AssertedCast<UnsignedInteger>(PointerRangeSize(start, cursor));
+
+    BindingName* newCursor = std::uninitialized_copy(bindings.begin(), bindings.end(), cursor);
+
+    return InitializeIndexedBindings(data, start, newCursor, std::forward<Step>(step)...);
+}
+
+} // namespace detail
+
+// Initialize |data->trailingNames| bindings, then set |data->length| to the
+// count of bindings added (which must equal |count|).
+//
+// First, |firstBindings| are added to |data->trailingNames|.  Then any "steps"
+// present are performed first to last.  Each step is 1) a pointer to a member
+// of |data| to be set to the current number of bindings added, and 2) a vector
+// of |BindingName|s to then copy into |data->trailingNames|.  (Thus each
+// |data| member field indicates where the corresponding vector's names start.)
+template<class Data, typename... Step>
+static MOZ_ALWAYS_INLINE void
+InitializeBindingData(Data* data, uint32_t count,
+                      const BindingNameVector& firstBindings,
+                      Step&&... step)
+{
+    MOZ_ASSERT(data->length == 0, "data shouldn't be filled yet");
+
+    BindingName* start = data->trailingNames.start();
+    BindingName* cursor =
+        std::uninitialized_copy(firstBindings.begin(), firstBindings.end(), start);
+
+#ifdef DEBUG
+    BindingName* end =
+#endif
+        detail::InitializeIndexedBindings(data, start, cursor, std::forward<Step>(step)...);
+
+    MOZ_ASSERT(PointerRangeSize(start, end) == count);
+    data->length = count;
 }
 
 Maybe<GlobalScope::Data*>
@@ -2004,18 +2051,10 @@
         }
 
         // The ordering here is important. See comments in GlobalScope.
-        BindingName* start = bindings->trailingNames.start();
-        BindingName* cursor = start;
-
-        cursor = FreshlyInitializeBindings(cursor, vars);
-
-        bindings->letStart = cursor - start;
-        cursor = FreshlyInitializeBindings(cursor, lets);
-
-        bindings->constStart = cursor - start;
-        Unused << FreshlyInitializeBindings(cursor, consts);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings,
+                              vars,
+                              &GlobalScope::Data::letStart, lets,
+                              &GlobalScope::Data::constStart, consts);
     }
 
     return Some(bindings);
@@ -2076,21 +2115,11 @@
         }
 
         // The ordering here is important. See comments in ModuleScope.
-        BindingName* start = bindings->trailingNames.start();
-        BindingName* cursor = start;
-
-        cursor = FreshlyInitializeBindings(cursor, imports);
-
-        bindings->varStart = cursor - start;
-        cursor = FreshlyInitializeBindings(cursor, vars);
-
-        bindings->letStart = cursor - start;
-        cursor = FreshlyInitializeBindings(cursor, lets);
-
-        bindings->constStart = cursor - start;
-        Unused << FreshlyInitializeBindings(cursor, consts);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings,
+                              imports,
+                              &ModuleScope::Data::varStart, vars,
+                              &ModuleScope::Data::letStart, lets,
+                              &ModuleScope::Data::constStart, consts);
     }
 
     return Some(bindings);
@@ -2127,12 +2156,7 @@
             return Nothing();
         }
 
-        BindingName* start = bindings->trailingNames.start();
-        BindingName* cursor = start;
-
-        Unused << FreshlyInitializeBindings(cursor, vars);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings, vars);
     }
 
     return Some(bindings);
@@ -2224,18 +2248,10 @@
         }
 
         // The ordering here is important. See comments in FunctionScope.
-        BindingName* start = bindings->trailingNames.start();
-        BindingName* cursor = start;
-
-        cursor = FreshlyInitializeBindings(cursor, positionalFormals);
-
-        bindings->nonPositionalFormalStart = cursor - start;
-        cursor = FreshlyInitializeBindings(cursor, formals);
-
-        bindings->varStart = cursor - start;
-        Unused << FreshlyInitializeBindings(cursor, vars);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings,
+                              positionalFormals,
+                              &FunctionScope::Data::nonPositionalFormalStart, formals,
+                              &FunctionScope::Data::varStart, vars);
     }
 
     return Some(bindings);
@@ -2272,13 +2288,7 @@
             return Nothing();
         }
 
-        // The ordering here is important. See comments in FunctionScope.
-        BindingName* start = bindings->trailingNames.start();
-        BindingName* cursor = start;
-
-        Unused << FreshlyInitializeBindings(cursor, vars);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings, vars);
     }
 
     return Some(bindings);
@@ -2330,15 +2340,9 @@
         }
 
         // The ordering here is important. See comments in LexicalScope.
-        BindingName* cursor = bindings->trailingNames.start();
-        BindingName* start = cursor;
-
-        cursor = FreshlyInitializeBindings(cursor, lets);
-
-        bindings->constStart = cursor - start;
-        Unused << FreshlyInitializeBindings(cursor, consts);
-
-        bindings->length = numBindings;
+        InitializeBindingData(bindings, numBindings,
+                              lets,
+                              &LexicalScope::Data::constStart, consts);
     }
 
     return Some(bindings);
