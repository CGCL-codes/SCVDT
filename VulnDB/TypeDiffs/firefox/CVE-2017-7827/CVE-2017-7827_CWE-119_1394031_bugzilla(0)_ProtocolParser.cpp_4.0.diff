diff -r 71761ab92e6d -r 9cb5d9d656d2 toolkit/components/url-classifier/ProtocolParser.cpp
--- a/toolkit/components/url-classifier/ProtocolParser.cpp	Tue Sep 12 13:21:31 2017 -0700
+++ b/toolkit/components/url-classifier/ProtocolParser.cpp	Tue Sep 05 17:14:54 2017 +0800
@@ -80,13 +80,6 @@
   CleanupUpdates();
 }
 
-nsresult
-ProtocolParser::Init(nsICryptoHash* aHasher)
-{
-  mCryptoHash = aHasher;
-  return NS_OK;
-}
-
 void
 ProtocolParser::CleanupUpdates()
 {
@@ -404,7 +397,7 @@
     if (mChunkState.type == CHUNK_ADD) {
       if (mChunkState.hashSize == COMPLETE_SIZE) {
         Completion hash;
-        hash.FromPlaintext(line, mCryptoHash);
+        hash.FromPlaintext(line);
         nsresult rv = mTableUpdate->NewAddComplete(mChunkState.num, hash);
         if (NS_FAILED(rv)) {
           return rv;
@@ -412,7 +405,7 @@
       } else {
         NS_ASSERTION(mChunkState.hashSize == 4, "Only 32- or 4-byte hashes can be used for add chunks.");
         Prefix hash;
-        hash.FromPlaintext(line, mCryptoHash);
+        hash.FromPlaintext(line);
         nsresult rv = mTableUpdate->NewAddPrefix(mChunkState.num, hash);
         if (NS_FAILED(rv)) {
           return rv;
@@ -433,7 +426,7 @@
 
       if (mChunkState.hashSize == COMPLETE_SIZE) {
         Completion hash;
-        hash.FromPlaintext(Substring(iter, end), mCryptoHash);
+        hash.FromPlaintext(Substring(iter, end));
         nsresult rv = mTableUpdate->NewSubComplete(addChunk, hash, mChunkState.num);
         if (NS_FAILED(rv)) {
           return rv;
@@ -441,7 +434,7 @@
       } else {
         NS_ASSERTION(mChunkState.hashSize == 4, "Only 32- or 4-byte hashes can be used for add chunks.");
         Prefix hash;
-        hash.FromPlaintext(Substring(iter, end), mCryptoHash);
+        hash.FromPlaintext(Substring(iter, end));
         nsresult rv = mTableUpdate->NewSubPrefix(addChunk, hash, mChunkState.num);
         if (NS_FAILED(rv)) {
           return rv;
