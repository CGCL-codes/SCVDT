diff -r 131a40749cb9 -r 4df8820be2aa layout/base/nsDocumentViewer.cpp
--- a/layout/base/nsDocumentViewer.cpp	Fri May 18 23:37:56 2018 -0400
+++ b/layout/base/nsDocumentViewer.cpp	Fri May 18 23:37:56 2018 -0400
@@ -1664,6 +1664,17 @@
   mAutoBeforeAndAfterPrint = nullptr;
 #endif
 
+  if (mSHEntry && mDocument && !mDocument->IsBFCachingAllowed()) {
+    // Just drop the SHEntry now and pretend like we never even tried to bfcache
+    // this viewer.  This should only happen when someone calls
+    // DisallowBFCaching() after CanSavePresentation() already ran.  Ensure that
+    // the SHEntry has no viewer and its state is synced up.  We want to do this
+    // via a stack reference, in case those calls mess with our members.
+    nsCOMPtr<nsISHEntry> shEntry = mSHEntry.forget();
+    shEntry->SetContentViewer(nullptr);
+    shEntry->SyncPresentationState();
+  }
+
   // If we were told to put ourselves into session history instead of destroy
   // the presentation, do that now.
   if (mSHEntry) {
@@ -1674,8 +1685,6 @@
     mSHEntry->SetSticky(mIsSticky);
     mIsSticky = true;
 
-    bool savePresentation = mDocument ? mDocument->IsBFCachingAllowed() : true;
-
     // Remove our root view from the view hierarchy.
     if (mPresShell) {
       nsViewManager *vm = mPresShell->GetViewManager();
@@ -1706,12 +1715,9 @@
 
     // Grab a reference to mSHEntry before calling into things like
     // SyncPresentationState that might mess with our members.
-    nsCOMPtr<nsISHEntry> shEntry = mSHEntry; // we'll need this below
-    mSHEntry = nullptr;
-
-    if (savePresentation) {
-      shEntry->SetContentViewer(this);
-    }
+    nsCOMPtr<nsISHEntry> shEntry = mSHEntry.forget(); // we'll need this below
+
+    shEntry->SetContentViewer(this);
 
     // Always sync the presentation state.  That way even if someone screws up
     // and shEntry has no window state at this point we'll be ok; we just won't
