diff -r 9ba5ec4843e8 -r 82f27b9d3b33 dom/asmjscache/AsmJSCache.cpp
--- a/dom/asmjscache/AsmJSCache.cpp	Thu Nov 02 14:54:18 2017 +0800
+++ b/dom/asmjscache/AsmJSCache.cpp	Thu Nov 02 14:54:29 2017 +0800
@@ -247,7 +247,41 @@
 class Client
   : public quota::Client
 {
+  static Client* sInstance;
+
+  bool mShutdownRequested;
+
 public:
+  Client();
+
+  static bool
+  IsShuttingDownOnBackgroundThread()
+  {
+    AssertIsOnBackgroundThread();
+
+    if (sInstance) {
+      return sInstance->IsShuttingDown();
+    }
+
+    return QuotaManager::IsShuttingDown();
+  }
+
+  static bool
+  IsShuttingDownOnNonBackgroundThread()
+  {
+    MOZ_ASSERT(!IsOnBackgroundThread());
+
+    return QuotaManager::IsShuttingDown();
+  }
+
+  bool
+  IsShuttingDown() const
+  {
+    AssertIsOnBackgroundThread();
+
+    return mShutdownRequested;
+  }
+
   NS_INLINE_DECL_REFCOUNTING(Client, override)
 
   Type
@@ -291,7 +325,7 @@
   ShutdownWorkThreads() override;
 
 private:
-  ~Client() override = default;
+  ~Client() override;
 };
 
 // FileDescriptorHolder owns a file descriptor and its memory mapping.
@@ -1098,6 +1132,10 @@
 {
   AssertIsOnBackgroundThread();
 
+  if (NS_WARN_IF(Client::IsShuttingDownOnBackgroundThread())) {
+    return nullptr;
+  }
+
   if (NS_WARN_IF(aPrincipalInfo.type() == PrincipalInfo::TNullPrincipalInfo)) {
     MOZ_ASSERT(false);
     return nullptr;
@@ -1651,6 +1689,25 @@
  * Client
  ******************************************************************************/
 
+Client* Client::sInstance = nullptr;
+
+Client::Client()
+  : mShutdownRequested(false)
+{
+  AssertIsOnBackgroundThread();
+  MOZ_ASSERT(!sInstance, "We expect this to be a singleton!");
+
+  sInstance = this;
+}
+
+Client::~Client()
+{
+  AssertIsOnBackgroundThread();
+  MOZ_ASSERT(sInstance == this, "We expect this to be a singleton!");
+
+  sInstance = nullptr;
+}
+
 Client::Type
 Client::GetType()
 {
