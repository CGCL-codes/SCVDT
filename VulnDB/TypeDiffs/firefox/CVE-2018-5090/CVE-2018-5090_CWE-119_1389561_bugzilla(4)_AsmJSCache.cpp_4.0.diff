diff -r b5490c8cf899 -r e8a7226cab86 dom/asmjscache/AsmJSCache.cpp
--- a/dom/asmjscache/AsmJSCache.cpp	Tue Oct 31 23:13:25 2017 -0400
+++ b/dom/asmjscache/AsmJSCache.cpp	Wed Nov 01 11:14:20 2017 +0800
@@ -67,6 +67,8 @@
 
 namespace {
 
+class ParentRunnable;
+
 // Anything smaller should compile fast enough that caching will just add
 // overhead.
 static const size_t sMinCachedModuleLength = 10000;
@@ -74,6 +76,10 @@
 // The number of characters to hash into the Metadata::Entry::mFastHash.
 static const unsigned sNumFastHashChars = 4096;
 
+// Track all live parent actors.
+typedef nsTArray<const ParentRunnable*> ParentActorArray;
+StaticAutoPtr<ParentActorArray> sLiveParentActors;
+
 nsresult
 WriteMetadataFile(nsIFile* aMetadataFile, const Metadata& aMetadata)
 {
@@ -802,6 +808,13 @@
   FileDescriptorHolder::Finish();
 
   mDirectoryLock = nullptr;
+
+  MOZ_ASSERT(sLiveParentActors);
+  sLiveParentActors->RemoveElement(this);
+
+  if (sLiveParentActors->IsEmpty()) {
+    sLiveParentActors = nullptr;
+  }
 }
 
 NS_IMETHODIMP
@@ -1039,6 +1052,12 @@
   RefPtr<ParentRunnable> runnable =
     new ParentRunnable(aPrincipalInfo, aOpenMode, aWriteParams);
 
+  if (!sLiveParentActors) {
+    sLiveParentActors = new ParentActorArray();
+  }
+
+  sLiveParentActors->AppendElement(runnable);
+
   nsresult rv = NS_DispatchToMainThread(runnable);
   NS_ENSURE_SUCCESS(rv, nullptr);
 
@@ -1687,7 +1706,15 @@
 
   void
   ShutdownWorkThreads() override
-  { }
+  {
+    AssertIsOnBackgroundThread();
+
+    if (sLiveParentActors) {
+      MOZ_ALWAYS_TRUE(SpinEventLoopUntil([&]() {
+        return !sLiveParentActors;
+      }));
+    }
+  }
 
 private:
   nsAutoRefCnt mRefCnt;
