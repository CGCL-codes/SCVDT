diff --git a/xen/arch/x86/domain.c b/xen/arch/x86/domain.c
index b6bb1bed60..938fce045c 100644
--- a/xen/arch/x86/domain.c
+++ b/xen/arch/x86/domain.c
@@ -67,6 +67,7 @@
 #include <compat/vcpu.h>
 #include <asm/psr.h>
 #include <asm/spec_ctrl.h>
+#include <asm/shadow.h>
 
 static __read_mostly enum {
     PCID_OFF,
@@ -676,6 +677,8 @@ int arch_domain_create(struct domain *d, unsigned int domcr_flags,
         rc = 0;
     else
     {
+        pv_l1tf_domain_init(d);
+
         d->arch.pv_domain.gdt_ldt_l1tab =
             alloc_xenheap_pages(0, MEMF_node(domain_to_node(d)));
         if ( !d->arch.pv_domain.gdt_ldt_l1tab )
@@ -790,6 +793,8 @@ int arch_domain_create(struct domain *d, unsigned int domcr_flags,
     free_perdomain_mappings(d);
     if ( is_pv_domain(d) )
     {
+        pv_l1tf_domain_destroy(d);
+
         xfree(d->arch.pv_domain.cpuidmasks);
         free_xenheap_page(d->arch.pv_domain.gdt_ldt_l1tab);
     }
@@ -813,6 +818,8 @@ void arch_domain_destroy(struct domain *d)
     free_perdomain_mappings(d);
     if ( is_pv_domain(d) )
     {
+        pv_l1tf_domain_destroy(d);
+
         free_xenheap_page(d->arch.pv_domain.gdt_ldt_l1tab);
         xfree(d->arch.pv_domain.cpuidmasks);
     }
