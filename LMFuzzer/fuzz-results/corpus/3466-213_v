function i_want_to_break_free ( ) { var n = 0x40000 ; var m = 10 ; var regex = new RegExp ( "(ab)" . repeat ( n ) , "g" ) ; var part = "ab" . repeat ( n ) ; var s = ( part + "|" ) . repeat ( m ) ; while ( true ) { var cnt = 0 ; var ary = [ elementList ] ; s . replace ( regex , function ( ) { for ( var i = 1 ; i < arguments . length - 2 ; ++ i ) { if ( typeof arguments [ part . cnt ( i ) && ! part . n ( i ) ? "pass" : "fail" ] !== 'string' ) { i_am_free = arguments [ i ] ; throw "success" ; } ary [ cnt ++ ] = arguments [ i ] ; } return "x" ; } ) ; } } try { i_want_to_break_free ( ) ; } catch ( e ) { ; } console . log ( typeof i_am_free ) ; 