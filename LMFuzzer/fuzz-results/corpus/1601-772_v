function test0 ( x ) { var z = 1 + function z ( ) { var f = function ( z ) { return z ; } ; var arr = [ 1 , 2 , 3 ] ; arr [ 'constructor' ] = null ; try { z . z . z . z ( arr , f ) ; } catch ( z ) { ; } var arr = [ 1 , 2 , 3 ] ; z . z ( arr , 'constructor' , { z : false , z : true , z : true , z : null } ) ; try { z . z . z . z ( arr , f ) ; } catch ( z ) { ; } var arr = [ 1 , 2 , 3 ] ; arr [ 'constructor' ] = z ; var out = z . z . z . z ( arr , f ) ; z . z ( z . z ( out ) ) ; z . z ( [ 1 , 2 , 3 ] , out ) ; z . z ( 3 , out . z ) ; var arr = [ 1 , 2 , 3 ] ; arr [ 'constructor' ] = function ( ) { ; } ; var out = z . z . z . z ( arr , f ) ; z . z ( z . z ( out ) ) ; z . z ( [ 1 , 2 , 3 ] , out ) ; z . z ( 3 , out . z ) ; var builtinArraySpeciesDesc = z . z ( z , z . z ) ; var arr = [ 1 , 2 , 3 ] ; z . z ( z , z . z , { z : false , z : true , z : true , z : z } ) ; var out = z . z . z . z ( arr , f ) ; z . z ( z . z ( out ) ) ; z . z ( { '0' : 1 , '1' : 2 , '2' : 3 } , out ) ; var arr = [ 1 , 2 , 3 ] ; z . z ( z , z . z , { z : false , z : true , z : true , z : null } ) ; var out = z . z . z . z ( arr , f ) ; z . z ( z . z ( out ) ) ; z . z ( [ 1 , 2 , 3 ] , out ) ; z . z ( 3 , out . z ) ; z . z ( z , z . z , builtinArraySpeciesDesc ) ; var arr = [ 1 , 2 , 3 ] ; var out = z . z . z . z ( arr , f ) ; z . z ( z . z ( out ) ) ; z . z ( [ 1 , 2 , 3 ] , out ) ; z . z ( 3 , out . z ) ; } ; return x ? 0 : 1 ; } test0 ( 1.1 ) ; test0 ( 1.1 ) ; print ( "PASSED" ) ; 