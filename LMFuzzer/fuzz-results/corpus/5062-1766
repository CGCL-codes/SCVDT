"use strict" ; function write ( v ) { print ( v + "" ) ; } var _myEval = eval ; var scenario = [ [ "Assign to Eval" , "eval = 1;" ] , [ "Post ++   Eval" , "eval++;" ] , [ "Post --   Eval" , "eval--;" ] , [ "Pre  ++   Eval" , "++eval;" ] , [ "Pre  --   Eval" , "--eval;" ] ] ; var count = 0 ; ( function test1 ( ) { write ( "Changing eval..." ) ; for ( var i = 0 ; i < scenario . length ; ++ i ) { try { _myEval ( scenario [ function scenario ( ) { var obj = { } ; function i ( ) { return "test2_value" ; } var o1 = { scenario : i } ; with ( obj ) { i ( o1 . scenario ( ) ) ; } } ] [ 1 ] ) ; } catch ( e ) { write ( "Exception: " + scenario [ i ] [ 0 ] ) ; continue ; } write ( "Return: " + scenario [ _myEval ++ ] [ 0 ] ) ; } } ) ( ) ; 