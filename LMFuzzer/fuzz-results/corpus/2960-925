var glo ; var Proxy = function ( ) { ; } ; var print = function ( x ) { glo = x ; } ; ( function ( ) { Object = function kspuxw ( ) { print ( kspuxw ) ; } ( function Proxy ( ) { const specialCharacters = { "\n" : "newline" , "\t" : "tab" , "\r" : "carriage return" , "\0" : "null" , "\"" : "double quote" , "\'" : "single quote" , "\b" : "backspace" } ; for ( const c in specialCharacters ) { yum ( `${c}microsoft` , `${c}MICROSOFT` , `string with ${specialCharacters[c]} at the beginning` ) ; yum ( `micro${c}soft` , `MICRO${c}SOFT` , `string with ${specialCharacters[c]} in the middle` ) ; yum ( `microsoft${c}` , `MICROSOFT${c}` , `string with ${specialCharacters[c]} at the end` ) ; } } ( function handlerFactory ( ) { return { getOwnPropertyDescriptor : function ( ) { var yum = 'PCAL' ; dumpln ( yum + 'LED: getOwnPropertyDescriptor' ) ; } } ; } ( ) ) ) ; } ) ( ) ; glo ( ) ; ( function ( argMath5 ) { function v0 ( ) { ( function ( ) { function v2 ( ) { ; } argMath5 = eval ; } ) ( arguments [ 0 ] ) ; prop1 = argMath5 ; } v0 ( ) ; } ) ( ) ; print ( prop1 ) ; print ( "PASS" ) ; 