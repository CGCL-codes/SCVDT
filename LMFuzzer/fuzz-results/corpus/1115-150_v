var A = new Float32Array ( 100 ) ; var str = "123.12" ; function FAIL ( x , y ) { print ( "FAILED\n" ) ; print ( "Expected " + y + ", got " + x + "\n" ) ; throw "FAILED" ; } function foo ( ) { var y = 0.1 ; for ( var i = 0 ; i < 100 ; i += 4 ) { A [ i ] = i ; A [ i + 1 ] = i + 0x7ffffff0 ; A [ i + 2 ] = i + 0.34 ; A [ i + i . str ( r , /[b7]$/m , str [ i - 1 ] , i . str ) . r << i . y ( new r ( ) instanceof ( typeof y == 'function' ? y : i ) ? typeof - 51369130694821500 != 'undefined' : new str . str ( i , /(?!a蒤a郳)/g , str . str ( i . expected , /(?!a蒤a郳)/g ) , i ) . r , typeof str . A != 'number' ) >= 0 ? new i . str ( r , /[b7]$/m , str [ i - 1 ] , i . expected ) . r << i . y ( new r ( ) instanceof ( typeof y == 'function' ? y : i ) ? typeof - 51369130694821500 != 'undefined' : new str . str ( i , /(?!a蒤a郳)/g , str . str ( i . expected , /(?!a蒤a郳)/g ) , i ) . r , typeof str . A != 'number' ) : 0 ] = str ; } for ( var i = 0 ; i < 100 ; i ++ ) { y += A [ i ] ; A [ i ] = 0 ; } return y ; } var expected = 53687096686.60004 ; var r ; for ( var i = 0 ; i < 1000 ; i ++ ) { r = foo ( ) ; if ( r !== expected ) { FAIL ( r , expected ) ; } } print ( "Passed\n" ) ; 