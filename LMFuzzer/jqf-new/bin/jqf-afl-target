#!/bin/bash

# Figure out script absolute path
pushd `dirname $0` > /dev/null
BIN_DIR=`pwd`
popd > /dev/null

ROOT_DIR=`dirname $BIN_DIR`

# Ensure that proxy is built
if [ ! -f "$ROOT_DIR/bin/afl-proxy" ]; then
  echo "The AFL proxy is not built! Make sure to run scripts/setup.sh or run 'make' in afl/" >&2
  exit 2
fi

# Set defaults and parse options to override
driver="edu.berkeley.cs.jqf.fuzz.afl.AFLDriver"
java_log="/dev/stdout"
afl_log="/dev/null"

while getopts ":avr" opt; do
  case $opt in
    /?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    v)
      java_log="jqf.log"
      ;;
    a)
      afl_log="proxy.log"
      ;;
    r)
      driver="edu.berkeley.cs.jqf.fuzz.afl.PerfFuzzDriver"
      export JQF_PERF_MAP=1
      ;;
  esac
done
shift $((OPTIND-1))

# Check positional arguments
if [ $# -lt 3 ]; then
  echo "Usage: $0 [-v] [-r] TEST_CLASS TEST_METHOD INPUT_FILE" >&2
  exit 1
fi

# Ready to go
class=$1
method=$2
input=$3

tmpdir=$(mktemp -d /tmp/jqf.XXX)

a2j="$tmpdir/a2j"
j2a="$tmpdir/j2a"

mkfifo "$a2j"
mkfifo "$j2a"

# Run the AFL driver in the background
"$ROOT_DIR/scripts/jqf-driver.sh" \
  $driver $class $method $input $a2j $j2a \
  1> $java_log 2>&1 &

# Run the proxy
exec "$ROOT_DIR/bin/afl-proxy" $a2j $j2a $afl_log


