package com.hust.kg.service.vulnerability;

import com.hust.kg.parse.ParseToJson;
import com.hust.kg.entity.vulnerability.Software;
import com.hust.kg.repository.vulnerability.SoftwareRepository;
import com.hust.kg.service.CypherService;
import org.neo4j.driver.Driver;
import org.springframework.data.neo4j.core.DatabaseSelectionProvider;
import org.springframework.data.neo4j.core.Neo4jClient;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * @Author wk
 * @Date 2021/03/28 20:50
 * @Description:
 */
@Service
public class SoftwareService {
    private final SoftwareRepository repository;

    private final Neo4jClient neo4jClient;

    private final Driver driver;

    private final DatabaseSelectionProvider databaseSelectionProvider;

    private final CypherService cypherService;

    public SoftwareService(SoftwareRepository repository, Neo4jClient neo4jClient, Driver driver, DatabaseSelectionProvider databaseSelectionProvider, CypherService cypherService) {
        this.repository = repository;
        this.neo4jClient = neo4jClient;
        this.driver = driver;
        this.databaseSelectionProvider = databaseSelectionProvider;
        this.cypherService = cypherService;
    }

    public List<Software> findSoftware(String name){
        return this.repository.findSoftwareByName(name);
    }

    public String findAllSoftware(){
        List<Software> softwares = this.repository.findAll();
        return ParseToJson.listToJson(softwares, "Software");
    }

    public String fuzzyFindSoftware(String software){
        List<Software> softwares = this.repository.fuzzyFindSoftware(software);
        return ParseToJson.listToJson(softwares, "Software");
    }

    public String findSoftwareAllVersion(String software){
        String cypher = "match p=(:SoftwareVersion)-[]->(s:Software) where s.software_name=~\".*" + software + ".*\" return p";
        return cypherService.executeCypher(cypher);
    }
}
