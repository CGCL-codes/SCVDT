package com.hust.kg.service.vulnerability;

import com.hust.kg.parse.ParseToJson;
import com.hust.kg.entity.PathConfig;
import com.hust.kg.entity.vulnerability.Exploit;
import com.hust.kg.repository.vulnerability.ExploitRepository;
import com.hust.kg.service.CypherService;
import org.neo4j.driver.Driver;
import org.springframework.data.neo4j.core.DatabaseSelectionProvider;
import org.springframework.data.neo4j.core.Neo4jClient;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.util.List;

/**
 * @Author wk
 * @Date 2021/03/29 15:51
 * @Description:
 */
@Service
public class ExploitService {
    private final ExploitRepository repository;

    private final Neo4jClient neo4jClient;

    private final Driver driver;

    private final DatabaseSelectionProvider databaseSelectionProvider;

    private final CypherService cypherService;

    public ExploitService(ExploitRepository repository, Neo4jClient neo4jClient, Driver driver, DatabaseSelectionProvider databaseSelectionProvider, CypherService cypherService) {
        this.repository = repository;
        this.neo4jClient = neo4jClient;
        this.driver = driver;
        this.databaseSelectionProvider = databaseSelectionProvider;
        this.cypherService = cypherService;
    }

    public String findAllExploit(){
        List<Exploit> exploitList = this.repository.findAll();
        return ParseToJson.listToJson(exploitList, "Exploit");
    }

    public String findExploitByCVE(String cveID){
        String cypher = "match p=(n:Vulnerability) -[] ->(:Exploit)  where n.cve_id='" + cveID + "' return p";
        return cypherService.executeCypher(cypher);
    }

    public String addExploit(MultipartFile file, String cveID, String description){
        String fileName = file.getOriginalFilename();
        String codeFile = PathConfig.uploadExploitPath + "\\" + fileName;
        try{
            String cypher = "create (:Exploit{code_file:'" + codeFile.replace("\\","\\\\") + "',url:'" + "User Add." + "', description:'" + description + "'})";
            System.out.println(cypher);
            this.driver.session().run(cypher);
            Thread.sleep(100);
            cypher = "match (n:Vulnerability{cve_id:'" + cveID + "'}),(m:Exploit{code_file:'" + codeFile.replace("\\","\\\\") + "',url:'" + "User Add." + "', description:'" + description + "'}) merge (n)-[:has]->(m)";
            System.out.println(cypher);
            this.driver.session().run(cypher);
            File dest = new File(codeFile);
            file.transferTo(dest);
            return "添加成功";
        }catch (Exception e){
            e.printStackTrace();
        }
        return "添加失败";
    }
}
