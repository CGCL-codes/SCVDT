package com.hust.kg.service.vulnerability;

import com.hust.kg.parse.ParseToJson;
import com.hust.kg.entity.vulnerability.SoftwareVendor;
import com.hust.kg.repository.vulnerability.SoftwareVendorRepository;
import com.hust.kg.service.CypherService;
import org.neo4j.driver.Driver;
import org.springframework.data.neo4j.core.DatabaseSelectionProvider;
import org.springframework.data.neo4j.core.Neo4jClient;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * @Author wk
 * @Date 2021/03/29 23:42
 * @Description:
 */
@Service
public class SoftwareVendorService {
    private final SoftwareVendorRepository repository;

    private final Neo4jClient neo4jClient;

    private final Driver driver;

    private final DatabaseSelectionProvider databaseSelectionProvider;

    private final CypherService cypherService;

    public SoftwareVendorService(SoftwareVendorRepository repository, Neo4jClient neo4jClient, Driver driver, DatabaseSelectionProvider databaseSelectionProvider, CypherService cypherService) {
        this.repository = repository;
        this.neo4jClient = neo4jClient;
        this.driver = driver;
        this.databaseSelectionProvider = databaseSelectionProvider;
        this.cypherService = cypherService;
    }

    public String findAll(){
        List<SoftwareVendor> vendorList = this.repository.findAll();
        return ParseToJson.listToJson(vendorList, "SoftwareVendor");
    }

    public String fuzzyFindVendor(String vendor){
        List<SoftwareVendor> vendorList = this.repository.fuzzyFindVendor(vendor);
        return ParseToJson.listToJson(vendorList, "SoftwareVendor");
    }

    public String findVendorAllSoftware(String vendor){
        String cypher =  "match p=(:Software)-[]->(v:SoftwareVendor) where v.vendor_name=~\".*" + vendor + ".*\" return p";
        return cypherService.executeCypher(cypher);
    }
}
