diff --git a/broker-core/src/main/java/org/apache/qpid/server/security/auth/sasl/plain/PlainNegotiator.java b/broker-core/src/main/java/org/apache/qpid/server/security/auth/sasl/plain/PlainNegotiator.java
index e56f8cae2e..d5fe74e900 100644
--- a/broker-core/src/main/java/org/apache/qpid/server/security/auth/sasl/plain/PlainNegotiator.java
+++ b/broker-core/src/main/java/org/apache/qpid/server/security/auth/sasl/plain/PlainNegotiator.java
@@ -20,7 +20,7 @@
 
 package org.apache.qpid.server.security.auth.sasl.plain;
 
-import java.io.UnsupportedEncodingException;
+import java.nio.charset.Charset;
 import java.nio.charset.StandardCharsets;
 
 import org.apache.qpid.server.security.auth.AuthenticationResult;
@@ -37,7 +37,7 @@
     }
 
     public static final String MECHANISM = "PLAIN";
-    private static final String UTF8 = StandardCharsets.UTF_8.name();
+    private static final Charset UTF8 = StandardCharsets.UTF_8;
 
     private UsernamePasswordAuthenticationProvider _usernamePasswordAuthenticationProvider;
     private volatile State _state = State.INITIAL;
@@ -86,17 +86,10 @@ else if (_state == State.INITIAL && (response == null || response.length == 0))
         }
 
         String password;
-        try
-        {
-            _username = new String(response, authzidNullPosition + 1, authcidNullPosition - authzidNullPosition - 1, UTF8);
-            // TODO: should not get pwd as a String but as a char array...
-            int passwordLen = response.length - authcidNullPosition - 1;
-            password = new String(response, authcidNullPosition + 1, passwordLen, UTF8);
-        }
-        catch (UnsupportedEncodingException e)
-        {
-            throw new RuntimeException("JVM does not support UTF8", e);
-        }
+        _username = new String(response, authzidNullPosition + 1, authcidNullPosition - authzidNullPosition - 1, UTF8);
+        // TODO: should not get pwd as a String but as a char array...
+        int passwordLen = response.length - authcidNullPosition - 1;
+        password = new String(response, authcidNullPosition + 1, passwordLen, UTF8);
         return _usernamePasswordAuthenticationProvider.authenticate(_username, password);
     }
 
