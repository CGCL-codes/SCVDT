diff --git a/feature-pack/src/main/resources/content/appclient/configuration/appclient.xml b/feature-pack/src/main/resources/content/appclient/configuration/appclient.xml
index 21ecf421979..ce582eb8b66 100644
--- a/feature-pack/src/main/resources/content/appclient/configuration/appclient.xml
+++ b/feature-pack/src/main/resources/content/appclient/configuration/appclient.xml
@@ -115,7 +115,9 @@
                               managed-thread-factory="java:jboss/ee/concurrency/factory/default"/>
         </subsystem>
         <subsystem xmlns="urn:jboss:domain:ejb3:3.0"/>
-        <subsystem xmlns="urn:jboss:domain:iiop-openjdk:1.0"/>
+        <subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
+            <orb socket-binding="iiop"/>
+        </subsystem>
         <subsystem xmlns="urn:jboss:domain:jca:2.0">
             <archive-validation enabled="false" />
             <bean-validation enabled="true" />
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPExtension.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPExtension.java
index 6bd2f7e7c42..d1ae73686b4 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPExtension.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPExtension.java
@@ -51,7 +51,8 @@
 
     private static final String RESOURCE_NAME = IIOPExtension.class.getPackage().getName() + ".LocalDescriptions";
 
-    static final ModelVersion CURRENT_MODEL_VERSION = ModelVersion.create(2,0,0);
+    static final ModelVersion CURRENT_MODEL_VERSION = ModelVersion.create(2,1,0);
+    static final ModelVersion VERSION_2 = ModelVersion.create(2,0,0);
     static final ModelVersion VERSION_1 = ModelVersion.create(1);
 
 
@@ -69,7 +70,7 @@ public void initialize(ExtensionContext context) {
         final SubsystemRegistration subsystem = context.registerSubsystem(SUBSYSTEM_NAME, CURRENT_MODEL_VERSION);
         final ManagementResourceRegistration subsystemRegistration = subsystem.registerSubsystemModel(IIOPRootDefinition.INSTANCE);
         subsystemRegistration.registerOperationHandler(GenericSubsystemDescribeHandler.DEFINITION, GenericSubsystemDescribeHandler.INSTANCE);
-        subsystem.registerXMLElementWriter(new IIOPSubsystemParser_2_0());
+        subsystem.registerXMLElementWriter(new IIOPSubsystemParser_2_1());
 
     }
 
@@ -77,6 +78,7 @@ public void initialize(ExtensionContext context) {
     public void initializeParsers(ExtensionParsingContext context) {
         context.setSubsystemXmlMapping(SUBSYSTEM_NAME,Namespace.IIOP_OPENJDK_1_0.getUriString(), IIOPSubsystemParser_1::new);
         context.setSubsystemXmlMapping(SUBSYSTEM_NAME,Namespace.IIOP_OPENJDK_2_0.getUriString(), IIOPSubsystemParser_2_0::new);
+        context.setSubsystemXmlMapping(SUBSYSTEM_NAME,Namespace.IIOP_OPENJDK_2_1.getUriString(), IIOPSubsystemParser_2_1::new);
     }
 
 }
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPRootDefinition.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPRootDefinition.java
index 40b88048032..51cbfe602c6 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPRootDefinition.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPRootDefinition.java
@@ -78,7 +78,7 @@
 
     protected static final AttributeDefinition SOCKET_BINDING = new SimpleAttributeDefinitionBuilder(
             Constants.ORB_SOCKET_BINDING, ModelType.STRING, true).setAttributeGroup(Constants.ORB)
-            .setDefaultValue(new ModelNode().set("iiop")).setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)
+            .setFlags(AttributeAccess.Flag.RESTART_ALL_SERVICES)
             .addAccessConstraint(SensitiveTargetAccessConstraintDefinition.SOCKET_BINDING_REF).build();
 
     protected static final AttributeDefinition SSL_SOCKET_BINDING = new SimpleAttributeDefinitionBuilder(
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemAdd.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemAdd.java
index fe63b7a1d67..acf394047b7 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemAdd.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemAdd.java
@@ -192,10 +192,19 @@ public void execute(DeploymentProcessorTarget processorTarget) {
             builder.addDependency(authContextServiceName);
         }
 
+        final boolean serverRequiresSsl = IIOPRootDefinition.SERVER_REQUIRES_SSL.resolveModelAttribute(context, model).asBoolean();
+
         // inject the socket bindings that specify IIOP and IIOP/SSL ports.
         String socketBinding = props.getProperty(Constants.ORB_SOCKET_BINDING);
-        builder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(socketBinding), SocketBinding.class,
-                orbService.getIIOPSocketBindingInjector());
+        if (socketBinding != null) {
+            if (!serverRequiresSsl) {
+                builder.addDependency(SocketBinding.JBOSS_BINDING_NAME.append(socketBinding), SocketBinding.class,
+                        orbService.getIIOPSocketBindingInjector());
+            } else {
+                IIOPLogger.ROOT_LOGGER.wontUseCleartextSocket();
+            }
+        }
+
 
         String sslSocketBinding = props.getProperty(Constants.ORB_SSL_SOCKET_BINDING);
         if(sslSocketBinding != null) {
@@ -205,7 +214,7 @@ public void execute(DeploymentProcessorTarget processorTarget) {
 
         // create the IOR security config metadata service.
         final IORSecurityConfigMetaData securityConfigMetaData = this.createIORSecurityConfigMetaData(context,
-                model, sslConfigured);
+                model, sslConfigured, serverRequiresSsl);
         final IORSecConfigMetaDataService securityConfigMetaDataService = new IORSecConfigMetaDataService(securityConfigMetaData);
         context.getServiceTarget()
                 .addService(IORSecConfigMetaDataService.SERVICE_NAME, securityConfigMetaDataService)
@@ -217,13 +226,13 @@ public void execute(DeploymentProcessorTarget processorTarget) {
         builder.setInitialMode(ServiceController.Mode.ACTIVE).install();
 
         // create the service the initializes the Root POA.
-        CorbaPOAService rootPOAService = new CorbaPOAService("RootPOA", "poa");
+        CorbaPOAService rootPOAService = new CorbaPOAService("RootPOA", "poa", serverRequiresSsl);
         context.getServiceTarget().addService(CorbaPOAService.ROOT_SERVICE_NAME, rootPOAService)
                 .addDependency(CorbaORBService.SERVICE_NAME, ORB.class, rootPOAService.getORBInjector())
                 .setInitialMode(ServiceController.Mode.ACTIVE).install();
 
         // create the service the initializes the interface repository POA.
-        final CorbaPOAService irPOAService = new CorbaPOAService("IRPOA", "irpoa", IdAssignmentPolicyValue.USER_ID, null, null,
+        final CorbaPOAService irPOAService = new CorbaPOAService("IRPOA", "irpoa", serverRequiresSsl, IdAssignmentPolicyValue.USER_ID, null, null,
                 LifespanPolicyValue.PERSISTENT, null, null, null);
         context.getServiceTarget()
                 .addService(CorbaPOAService.INTERFACE_REPOSITORY_SERVICE_NAME, irPOAService)
@@ -231,7 +240,7 @@ public void execute(DeploymentProcessorTarget processorTarget) {
                 .setInitialMode(ServiceController.Mode.ACTIVE).install();
 
         // create the service that initializes the naming service POA.
-        final CorbaPOAService namingPOAService = new CorbaPOAService("Naming", null, IdAssignmentPolicyValue.USER_ID, null,
+        final CorbaPOAService namingPOAService = new CorbaPOAService("Naming", null, serverRequiresSsl, IdAssignmentPolicyValue.USER_ID, null,
                 null, LifespanPolicyValue.PERSISTENT, null, null, null);
         context.getServiceTarget()
                 .addService(CorbaPOAService.SERVICE_NAME.append("namingpoa"), namingPOAService)
@@ -383,7 +392,7 @@ private boolean setupSSLFactories(final Properties props) throws OperationFailed
         return sslConfigured;
     }
 
-    private IORSecurityConfigMetaData createIORSecurityConfigMetaData(final OperationContext context, final ModelNode resourceModel, final boolean sslConfigured)
+    private IORSecurityConfigMetaData createIORSecurityConfigMetaData(final OperationContext context, final ModelNode resourceModel, final boolean sslConfigured, final boolean serverRequiresSsl)
             throws OperationFailedException {
         final IORSecurityConfigMetaData securityConfigMetaData = new IORSecurityConfigMetaData();
 
@@ -399,8 +408,6 @@ private IORSecurityConfigMetaData createIORSecurityConfigMetaData(final Operatio
         asContextMetaData.setRequired(IIOPRootDefinition.REQUIRED.resolveModelAttribute(context, resourceModel).asBoolean());
         securityConfigMetaData.setAsContext(asContextMetaData);
 
-        final boolean serverRequiresSsl = IIOPRootDefinition.SERVER_REQUIRES_SSL.resolveModelAttribute(context, resourceModel).asBoolean();
-
         final IORTransportConfigMetaData transportConfigMetaData = new IORTransportConfigMetaData();
         final ModelNode integrityNode = IIOPRootDefinition.INTEGRITY.resolveModelAttribute(context, resourceModel);
         if(integrityNode.isDefined()){
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemParser_2_1.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemParser_2_1.java
new file mode 100644
index 00000000000..2a536aff4fb
--- /dev/null
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPSubsystemParser_2_1.java
@@ -0,0 +1,53 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2018, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+/ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.wildfly.iiop.openjdk;
+
+
+import static org.jboss.as.controller.PersistentResourceXMLDescription.builder;
+
+import org.jboss.as.controller.AttributeDefinition;
+import org.jboss.as.controller.PersistentResourceXMLDescription;
+import org.jboss.as.controller.PersistentResourceXMLParser;
+
+/**
+ * <p>
+ * This class implements a parser for the IIOP subsystem.
+ * </p>
+ *
+ * @author <a href="mailto:tadamski@redhat.com">Tomasz Adamski</a>
+ */
+public class IIOPSubsystemParser_2_1 extends PersistentResourceXMLParser {
+
+
+    IIOPSubsystemParser_2_1() {
+    }
+
+    @Override
+    public PersistentResourceXMLDescription getParserDescription() {
+        return builder(IIOPRootDefinition.INSTANCE.getPathElement(), Namespace.IIOP_OPENJDK_2_1.getUriString())
+                .setMarshallDefaultValues(true)
+                .addAttributes(IIOPRootDefinition.ALL_ATTRIBUTES.toArray(new AttributeDefinition[0]))
+                .build();
+    }
+
+}
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPTransformers.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPTransformers.java
index e63e4c1df89..b7c13b2fafe 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPTransformers.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/IIOPTransformers.java
@@ -23,6 +23,7 @@
 package org.wildfly.iiop.openjdk;
 
 import static org.wildfly.iiop.openjdk.IIOPExtension.CURRENT_MODEL_VERSION;
+import static org.wildfly.iiop.openjdk.IIOPExtension.VERSION_2;
 import static org.wildfly.iiop.openjdk.IIOPExtension.VERSION_1;
 
 import java.util.Map;
@@ -32,6 +33,7 @@
 import org.jboss.as.controller.transform.ExtensionTransformerRegistration;
 import org.jboss.as.controller.transform.SubsystemTransformerRegistration;
 import org.jboss.as.controller.transform.TransformationContext;
+import org.jboss.as.controller.transform.description.AttributeConverter;
 import org.jboss.as.controller.transform.description.ChainedTransformationDescriptionBuilder;
 import org.jboss.as.controller.transform.description.DiscardAttributeChecker;
 import org.jboss.as.controller.transform.description.RejectAttributeChecker;
@@ -53,6 +55,10 @@ public String getSubsystemName() {
     public void registerTransformers(SubsystemTransformerRegistration subsystemRegistration) {
         ChainedTransformationDescriptionBuilder chained = ResourceTransformationDescriptionBuilder.Factory.createChainedSubystemInstance(CURRENT_MODEL_VERSION);
 
+        ResourceTransformationDescriptionBuilder builder_2_0 = chained.createBuilder(CURRENT_MODEL_VERSION, VERSION_2);
+        builder_2_0.getAttributeBuilder()
+                .setValueConverter(new AttributeConverter.DefaultValueAttributeConverter(IIOPRootDefinition.SOCKET_BINDING), IIOPRootDefinition.SOCKET_BINDING);
+
         /*
         --- Problems for relative address to root []:
         Missing attributes in current: []; missing in legacy [server-requires-ssl, server-ssl-context, client-requires-ssl, authentication-context, client-ssl-context]
@@ -65,8 +71,8 @@ public void registerTransformers(SubsystemTransformerRegistration subsystemRegis
         Different 'default' for attribute 'trust-in-target'. Current: undefined; legacy: "none"
         Missing parameters for operation 'add' in current: []; missing in legacy [server-requires-ssl, server-ssl-context, client-requires-ssl, authentication-context, client-ssl-context]
          */
-        ResourceTransformationDescriptionBuilder builder = chained.createBuilder(CURRENT_MODEL_VERSION, VERSION_1);
-        builder.getAttributeBuilder()
+        ResourceTransformationDescriptionBuilder builder_1_0 = chained.createBuilder(VERSION_2, VERSION_1);
+        builder_1_0.getAttributeBuilder()
                 .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(IIOPRootDefinition.CLIENT_REQUIRES_SSL.getDefaultValue()), IIOPRootDefinition.CLIENT_REQUIRES_SSL)
                 .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(IIOPRootDefinition.SERVER_REQUIRES_SSL.getDefaultValue()), IIOPRootDefinition.SERVER_REQUIRES_SSL)
                 .setDiscard(new DiscardAttributeChecker.DiscardAttributeValueChecker(IIOPRootDefinition.INTEROP_IONA.getDefaultValue()), IIOPRootDefinition.INTEROP_IONA)
@@ -86,6 +92,7 @@ public String getRejectionLogMessage(Map<String, ModelNode> map) {
         ;
 
         chained.buildAndRegister(subsystemRegistration, new ModelVersion[]{
+                VERSION_2,
                 VERSION_1
         });
     }
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/Namespace.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/Namespace.java
index afeb22d0c7b..71f3d76aa8d 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/Namespace.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/Namespace.java
@@ -33,9 +33,10 @@
 
     UNKNOWN(null),
     IIOP_OPENJDK_1_0("urn:jboss:domain:iiop-openjdk:1.0"),
-    IIOP_OPENJDK_2_0("urn:jboss:domain:iiop-openjdk:2.0");
+    IIOP_OPENJDK_2_0("urn:jboss:domain:iiop-openjdk:2.0"),
+    IIOP_OPENJDK_2_1("urn:jboss:domain:iiop-openjdk:2.1");
 
-    static final Namespace CURRENT = IIOP_OPENJDK_2_0;
+    static final Namespace CURRENT = IIOP_OPENJDK_2_1;
 
 
     private final String namespaceURI;
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java
index 1aae7945b09..1257eac307e 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/logging/IIOPLogger.java
@@ -411,4 +411,11 @@
 
     @Message(id = 114, value = "Elytron security initializer not supported in previous iiop-openjdk versions and can't be converted")
     String elytronInitializerNotSupportedInPreviousVersions();
+
+    @Message(id = 115, value = "No IIOP socket bindings have been configured")
+    IllegalStateException noSocketBindingsConfigured();
+
+    @LogMessage(level = WARN)
+    @Message(id = 117, value = "CLEARTEXT in IIOP subsystem won't be used because server-requires-ssl parameter have been set to true")
+    void wontUseCleartextSocket();
 }
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaORBService.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaORBService.java
index 65e5aeb070c..f798bb3be1e 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaORBService.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaORBService.java
@@ -102,14 +102,22 @@ public void start(StartContext context) throws StartException {
             properties.setProperty(ORBConstants.IOR_TO_SOCKET_INFO_CLASS_PROPERTY, CSIV2IORToSocketInfo.class.getName());
 
             // set the IIOP and IIOP/SSL ports from the respective socket bindings.
-            if (this.iiopSocketBindingInjector.getValue()!= null) {
+            final SocketBinding socketBinding = iiopSocketBindingInjector.getOptionalValue();
+            final SocketBinding sslSocketBinding = this.iiopSSLSocketBindingInjector.getOptionalValue();
+
+            if (socketBinding == null && sslSocketBinding == null) {
+                throw IIOPLogger.ROOT_LOGGER.noSocketBindingsConfigured();
+            }
+
+            if (socketBinding != null) {
                 InetSocketAddress address = this.iiopSocketBindingInjector.getValue().getSocketAddress();
                 properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY, address.getAddress().getHostAddress());
                 properties.setProperty(ORBConstants.SERVER_PORT_PROPERTY, String.valueOf(address.getPort()));
                 properties.setProperty(ORBConstants.PERSISTENT_SERVER_PORT_PROPERTY, String.valueOf(address.getPort()));
             }
-            if (this.iiopSSLSocketBindingInjector.getOptionalValue() != null) {
+            if (sslSocketBinding != null) {
                 InetSocketAddress address = this.iiopSSLSocketBindingInjector.getValue().getSocketAddress();
+                properties.setProperty(ORBConstants.SERVER_HOST_PROPERTY, address.getAddress().getHostAddress());
                 properties.setProperty(Constants.ORB_SSL_PORT, String.valueOf(address.getPort()));
                 final String sslSocket = new StringBuilder().append(Constants.SSL_SOCKET_TYPE).append(':')
                         .append(String.valueOf(address.getPort())).toString();
diff --git a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaPOAService.java b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaPOAService.java
index 26e25b6264e..d2182c88e16 100644
--- a/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaPOAService.java
+++ b/iiop-openjdk/src/main/java/org/wildfly/iiop/openjdk/service/CorbaPOAService.java
@@ -25,6 +25,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import com.sun.corba.se.spi.extension.ZeroPortPolicy;
 import org.jboss.msc.inject.Injector;
 import org.jboss.msc.service.Service;
 import org.jboss.msc.service.ServiceName;
@@ -88,6 +89,8 @@
 
     private final ThreadPolicyValue threadPolicyValue;
 
+    private final boolean sslRequired;
+
     /**
      * <p>
      * Creates a {@code CorbaPOAService} with the specified POA name and binding name. The {@code POA} created by this
@@ -98,8 +101,8 @@
      * @param bindingName the JNDI context name where the created {@code POA} will be bound. If null, the JNDI binding
      *                    won't be performed.
      */
-    public CorbaPOAService(String poaName, String bindingName) {
-        this(poaName, bindingName, null, null, null, null, null, null, null);
+    public CorbaPOAService(String poaName, String bindingName, boolean sslRequired) {
+        this(poaName, bindingName, sslRequired, null, null, null, null, null, null, null);
     }
 
     /**
@@ -125,12 +128,13 @@ public CorbaPOAService(String poaName, String bindingName) {
      * @param threadPolicyValue             the {@code ThreadPolicyValue} that will be associated with the created {@code POA}. Can
      *                                      be null.
      */
-    public CorbaPOAService(String poaName, String bindingName, IdAssignmentPolicyValue idAssignmentPolicyValue,
+    public CorbaPOAService(String poaName, String bindingName, boolean sslRequired, IdAssignmentPolicyValue idAssignmentPolicyValue,
                            IdUniquenessPolicyValue idUniquenessPolicyValue, ImplicitActivationPolicyValue implicitActivationPolicyValue,
                            LifespanPolicyValue lifespanPolicyValue, RequestProcessingPolicyValue requestProcessingPolicyValue,
                            ServantRetentionPolicyValue servantRetentionPolicyValue, ThreadPolicyValue threadPolicyValue) {
         this.poaName = poaName;
         this.bindingName = bindingName;
+        this.sslRequired = sslRequired;
         this.idAssignmentPolicyValue = idAssignmentPolicyValue;
         this.idUniquenessPolicyValue = idUniquenessPolicyValue;
         this.implicitActivationPolicyValue = implicitActivationPolicyValue;
@@ -218,7 +222,8 @@ public POA getValue() throws IllegalStateException, IllegalArgumentException {
      */
     private Policy[] createPolicies(POA poa) {
         List<Policy> policies = new ArrayList<Policy>();
-
+        if(this.sslRequired)
+            policies.add(ZeroPortPolicy.getPolicy());
         if (this.idAssignmentPolicyValue != null)
             policies.add(poa.create_id_assignment_policy(this.idAssignmentPolicyValue));
         if (this.idUniquenessPolicyValue != null)
diff --git a/iiop-openjdk/src/main/resources/schema/wildfly-iiop-openjdk_2_1.xsd b/iiop-openjdk/src/main/resources/schema/wildfly-iiop-openjdk_2_1.xsd
new file mode 100644
index 00000000000..9dd7ad8096e
--- /dev/null
+++ b/iiop-openjdk/src/main/resources/schema/wildfly-iiop-openjdk_2_1.xsd
@@ -0,0 +1,370 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+  ~ JBoss, Home of Professional Open Source.
+  ~ Copyright 2016, Red Hat, Inc., and individual contributors
+  ~ as indicated by the @author tags. See the copyright.txt file in the
+  ~ distribution for a full listing of individual contributors.
+  ~
+  ~ This is free software; you can redistribute it and/or modify it
+  ~ under the terms of the GNU Lesser General Public License as
+  ~ published by the Free Software Foundation; either version 2.1 of
+  ~ the License, or (at your option) any later version.
+  ~
+  ~ This software is distributed in the hope that it will be useful,
+  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
+  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+  ~ Lesser General Public License for more details.
+  ~
+  ~ You should have received a copy of the GNU Lesser General Public
+  ~ License along with this software; if not, write to the Free
+  ~ Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+  ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+  -->
+
+<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
+           targetNamespace="urn:jboss:domain:iiop-openjdk:2.1"
+           xmlns="urn:jboss:domain:iiop-openjdk:2.1"
+           elementFormDefault="qualified"
+           attributeFormDefault="unqualified"
+           version="2.1">
+
+    <!-- The iiop subsystem root element -->
+    <xs:element name="subsystem" type="iiopSubsystemType"/>
+
+    <xs:complexType name="iiopSubsystemType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The iiopSubsystemType specifies the elements that can be used to configure the various aspects of the
+                iiop subsystem.
+
+                * orb: holds the attributes used to configure the Object Request Broker (ORB).
+                * naming: holds the attributes used to configure the CORBA Naming Service.
+                * security: holds the attributes that control the ORB security features.
+                * properties: allows for the specification of generic name/value properties.
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:sequence>
+            <xs:element name="properties" minOccurs="0" maxOccurs="1" type="genericPropertiesType"/>
+            <xs:element name="orb" minOccurs="0" maxOccurs="1" type="orbConfigType"/>
+            <xs:element name="tcp" minOccurs="0" maxOccurs="1" type="tcpConfigType"/>
+            <xs:element name="initializers" minOccurs="0" maxOccurs="1" type="initializersConfigType"/>
+            <xs:element name="naming" minOccurs="0" maxOccurs="1" type="namingConfigType"/>
+            <xs:element name="security" minOccurs="0" maxOccurs="1" type="securityConfigType"/>
+            <xs:element name="interop" minOccurs="0" maxOccurs="1" type="interopConfigType"/>
+            <xs:element name="transport-config" type="iorTransportConfigType" minOccurs="0" maxOccurs="1"/>
+            <xs:element name="as-context" minOccurs="0" maxOccurs="1" type="iorASContextType"/>
+            <xs:element name="sas-context" minOccurs="0" maxOccurs="1" type="iorSASContextType"/>
+        </xs:sequence>
+    </xs:complexType>
+
+    <xs:complexType name="orbConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                the orbConfigType specifies the elements and attributes that can be used to configure the behavior of the
+                Object Request Broker (ORB).
+                * giop-version-version: the GIOP version to be used.
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="giop-version" type="xs:string" use="optional" default="1.2"/>
+        <xs:attribute name="socket-binding" type="xs:string" use="optional"/>
+        <xs:attribute name="ssl-socket-binding" type="xs:string" use="optional"/>
+        <xs:attribute name="persistent-server-id" type="xs:string" use="optional" default="1"/>
+    </xs:complexType>
+
+    <xs:complexType name="tcpConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The orbTCPConfigType specifies the attributes used to configure the TCP connections.
+
+                * high-water-mark: each time the number of connections exceeds this value ORB tries to reclaim connections. 
+                * number-to-reclaim: number of reclaimed connections is specified by this property.
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="high-water-mark" type="xs:integer" use="optional"/>
+        <xs:attribute name="number-to-reclaim" type="xs:integer" use="optional"/>
+    </xs:complexType>
+
+    <xs:complexType name="initializersConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The initializersConfigType specifies the attributes used to configure the ORB initializers.
+
+                * security: indicates whether the security (SAS and CSIv2) initializers should be installed. There are four possibilities:
+                    identity - The server will just send the current username. The receiving server must trust this
+                               server.
+                    client   - The client interceptor will be installed. Remote calls from this server will propagate
+                               by sending the current username and password
+                    elytron  - The client-side interceptor uses Elytron authentication configurations that match the target
+                               URI to obtain the security identity (and associated password) that will be relayed to the
+                               server. It combines the previous two modes by checking the target security requirements in
+                               order to determine the type of security token that must be constructed.
+                    none      - Security interceptors are not installed
+                * authentication-context: when the security attribute is set to 'elytron', the authentication-context
+                    attribute must be defined to indicate the name of the Elytron authentication context that will be
+                    used to match the target URI in order to obtain an authentication configuration.
+                * transactions: indicates which transaction initializers should be installed. There are three possibilities:
+                    full   - This requires JTS to be enabled in the transactions subsystem config, and will enable full transaction
+                           interoperability with other JBoss AS instances.
+                    spec - This does not require JTS to be enabled, but will install the minimum set of transaction interceptors
+                           required for EJB spec compliance. These interceptors detect an incoming transaction and throw an
+                           exception if the invocation should be run in the incoming transaction context.
+                    none  - No transaction initializers will be installed.
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="security" type="securityEnabledType" use="optional" default="none"/>
+        <xs:attribute name="authentication-context" type="xs:string" use="optional" default="none"/>
+        <xs:attribute name="transactions" type="transactionEnabledType" use="optional" default="none"/>
+    </xs:complexType>
+
+    <xs:complexType name="namingConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The namingConfigType specifies the attributes used to configure the naming service.
+
+                * root-context: the naming service root context.
+                * export-corbaloc: indicates whether the root context should be exported as corbaloc::address:port/NameService
+                                   (true) or not (false).
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="root-context" type="xs:string" use="optional" default="NameService"/>
+        <xs:attribute name="export-corbaloc" type="trueFalseType" use="optional" default="true"/>
+    </xs:complexType>
+
+    <xs:complexType name="securityConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The securityConfigType specifies the attributes used to configure the ORB security features.
+
+                * support-ssl: indicates whether SSL is to be supported (true) or not (false). If set to true, then either
+                        the security-domain attribute must be set or the server-ssl-context and client-ssl-context pair
+                        must be set. The former tells the subsystem to use a legacy JSSE domain to build SSL contexts
+                        while the other two tell the subsystem to use the org.wildfly.security.ssl-context capability
+                        to obtain the server and client side SSL contexts.
+                * security-domain: the name of the legacy JSSE domain that holds the key and trust stores that will
+                        be used to create the SSL context when establishing SSL connections. if defined , then the
+                        server-ssl-context and client-ssl-contexts attributes must not be set.
+                * server-ssl-context: the dynamic name of the capability that provides the SSL context that will be used
+                        to create server side SSL sockets. If the defined, the client-ssl-context attribute must also be
+                        defined and the security-domain attribute must not be set.
+                * client-ssl-context: the dynamic name of the capability that provides the SSL context that will be used
+                        to create client side SSL sockets. If the defined, the server-ssl-context attribute must also be
+                        defined and the security-domain attribute must not be set.
+                * add-component-via-interceptor: indicates whether SSL components should be added by an IOR interceptor
+                        (true) or not (false).
+                * server-requires-ssl: indicates wheter IIOP connections to the server require SSL
+                * client-requires-ssl: indicates wheter IIOP connections from the server require SSL
+                        ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="support-ssl" type="trueFalseType" use="optional" default="false"/>
+        <xs:attribute name="security-domain" type="xs:string" use="optional"/>
+        <xs:attribute name="server-ssl-context" type="xs:string" use="optional"/>
+        <xs:attribute name="client-ssl-context" type="xs:string" use="optional"/>
+        <xs:attribute name="add-component-via-interceptor" type="trueFalseType" use="optional" default="true"/>
+        <xs:attribute name="server-requires-ssl" type="xs:boolean" use="optional" default="false"/>
+        <xs:attribute name="client-requires-ssl" type="xs:boolean" use="optional" default="false"/>
+    </xs:complexType>
+
+    <xs:complexType name="interopConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The interopConfigType specifies the attributes used to configure the ORB interoperability features.
+
+                * iona: indicates wheter interoperability with IONA's ASP is enabled.
+                ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="iona" type="xs:boolean" use="optional" default="false"/>
+    </xs:complexType>
+
+    <xs:complexType name="genericPropertiesType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+               Enclosing element for a list of generic properties.
+             ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:sequence>
+            <xs:element name="property" minOccurs="0" maxOccurs="unbounded" type="genericPropertyType"/>
+        </xs:sequence>
+    </xs:complexType>
+
+    <xs:complexType name="genericPropertyType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+               The property element allows for the specification of generic name/value properties. It is useful to specify
+               configuration attributes that have not been covered in this schema.
+             ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="name" type="xs:string" use="required"/>
+        <xs:attribute name="value" type="xs:string" use="required"/>
+    </xs:complexType>
+
+    <xs:simpleType name="iorTransportEnum">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for IOR transport config fields.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="none"/>
+            <xs:enumeration value="supported"/>
+            <xs:enumeration value="required"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:complexType name="iorTransportConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The iorTransportconfigType specifies the attributes used to setup the IOR transport settings.
+
+                * integrity: indicates whether the transport must require integrity protection or not. Valid values are
+                             "none", "supported" and "required".
+                * confidentiality: indicates whether the transport must require confidentiality protection or not. Valid
+                             values are "none", "supported" and "required".
+                * trust-in-target: indicates if the transport must require trust in target to be established. Valid values
+                             are "none" and "supported".
+                * trust-in-client: indicates if the transport must require trust in client to be established. Valid values
+                             are "none", "supported" and "required".
+                * detect-replay: indicates whether the transport must require replay detection or not. Valid values are
+                             "none", "supported" and "required".
+                * detect-misordering: indicates whether the transport must require misordering detection or not. Valid
+                             values are "none", "supported" and "required".
+             ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="integrity" type="iorTransportEnum" use="optional" default="none"/>
+        <xs:attribute name="confidentiality" type="iorTransportEnum" use="optional" default="none"/>
+        <xs:attribute name="trust-in-target" type="iorTransportEnum" use="optional" default="none"/>
+        <xs:attribute name="trust-in-client" type="iorTransportEnum" use="optional" default="none"/>
+        <xs:attribute name="detect-replay" type="iorTransportEnum" use="optional" default="none"/>
+        <xs:attribute name="detect-misordering" type="iorTransportEnum" use="optional" default="none"/>
+    </xs:complexType>
+
+    <xs:simpleType name="authMethodEnum">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for AS Context auth method.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="none"/>
+            <xs:enumeration value="username_password"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:complexType name="iorASContextType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The iorASContextType specifies the attributes used to setup the IOR Authentication Service settings.
+
+                * auth-method: the authentication method. Valid values are "none" and "username_password".
+                * realm: the Authentication Service realm name. If not provided it will be set to "Default".
+                * requires: indicates if authentication is required (true) or not (false).
+             ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="auth-method" type="authMethodEnum" use="optional" default="username_password"/>
+        <xs:attribute name="realm" type="xs:string" use="optional"/>
+        <xs:attribute name="required" type="xs:boolean" use="optional" default="false"/>
+    </xs:complexType>
+
+    <xs:simpleType name="callerPropagationEnum">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for SAS Context caller propagation.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="none"/>
+            <xs:enumeration value="supported"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:complexType name="iorSASContextType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                The iorSASContextType specifies the attributes used to setup the IOR Secure Attribute Service settings.
+
+                * caller-propagation: indicates whether the caller should be propagated in the SAS context or not. Valid
+                                      values are "none" and "supported".
+             ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:attribute name="caller-propagation" type="callerPropagationEnum" use="optional" default="none"/>
+    </xs:complexType>
+
+    <xs:simpleType name="trueFalseType">
+        <xs:annotation>
+            <xs:documentation>
+                <![CDATA[
+                    Enumeration of allowed values for the standard IIOP attributes.
+                ]]>
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="true"/>
+            <xs:enumeration value="false"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:simpleType name="transactionEnabledType">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for the transaction interceptor config.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="full"/>
+            <xs:enumeration value="none"/>
+            <xs:enumeration value="spec"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:simpleType name="securityEnabledType">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for the security interceptor config.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="identity"/>
+            <xs:enumeration value="client"/>
+            <xs:enumeration value="elytron"/>
+            <xs:enumeration value="none"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+    <xs:simpleType name="sslConfigType">
+        <xs:annotation>
+            <xs:documentation>
+                Enumeration of allowed values for the SSL config.
+            </xs:documentation>
+        </xs:annotation>
+        <xs:restriction base="xs:token">
+            <xs:enumeration value="None"/>
+            <xs:enumeration value="ServerAuth"/>
+            <xs:enumeration value="ClientAuth"/>
+            <xs:enumeration value="MutualAuth"/>
+        </xs:restriction>
+    </xs:simpleType>
+
+</xs:schema>
diff --git a/iiop-openjdk/src/main/resources/subsystem-templates/iiop-openjdk.xml b/iiop-openjdk/src/main/resources/subsystem-templates/iiop-openjdk.xml
index 95ecd328657..ca00dde2bfd 100644
--- a/iiop-openjdk/src/main/resources/subsystem-templates/iiop-openjdk.xml
+++ b/iiop-openjdk/src/main/resources/subsystem-templates/iiop-openjdk.xml
@@ -2,7 +2,7 @@
 <!--  See src/resources/configuration/ReadMe.txt for how the configuration assembly works -->
 <config>
    <extension-module>org.wildfly.iiop-openjdk</extension-module>
-   <subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+   <subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
        <orb socket-binding="iiop"/>
        <initializers security="identity" transactions="spec"/>
        <security server-requires-ssl="false" client-requires-ssl="false"/>
diff --git a/iiop-openjdk/src/test/java/org/wildfly/iiop/openjdk/IIOPSubsystemTestCase.java b/iiop-openjdk/src/test/java/org/wildfly/iiop/openjdk/IIOPSubsystemTestCase.java
index 1a82f3d98fb..960b35b4d2e 100644
--- a/iiop-openjdk/src/test/java/org/wildfly/iiop/openjdk/IIOPSubsystemTestCase.java
+++ b/iiop-openjdk/src/test/java/org/wildfly/iiop/openjdk/IIOPSubsystemTestCase.java
@@ -54,7 +54,7 @@ public IIOPSubsystemTestCase() {
 
     @Override
     protected String getSubsystemXml() throws IOException {
-        return readResource("subsystem-2.0.xml");
+        return readResource("subsystem-2.1.xml");
     }
 
 
@@ -65,7 +65,7 @@ public void testExpressions() throws Exception {
 
     @Override
     protected String getSubsystemXsdPath() throws Exception {
-        return "schema/wildfly-iiop-openjdk_2_0.xsd";
+        return "schema/wildfly-iiop-openjdk_2_1.xsd";
     }
 
     @Override
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/expressions.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/expressions.xml
index 839fe1a372d..a89e3814262 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/expressions.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/expressions.xml
@@ -1,4 +1,4 @@
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
         <property name="${test.exp:some_property}" value="${test.exp:some_value}"/>
     </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers-reject.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers-reject.xml
index 5185094dbf0..dea3e6894f7 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers-reject.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers-reject.xml
@@ -20,7 +20,7 @@
   ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
   -->
 
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
         <property name="some_property" value="some_value"/>
     </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers.xml
index 86cb672e816..33bee7b460d 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/iiop-transformers.xml
@@ -20,7 +20,7 @@
   ~ 02110-1301 USA, or see the FSF site: http://www.fsf.org.
   -->
 
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
             <property name="some_property" value="some_value"/>
         </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.0.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.1.xml
similarity index 93%
rename from iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.0.xml
rename to iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.1.xml
index 4d2afc17526..290a581b83b 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.0.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-2.1.xml
@@ -1,4 +1,4 @@
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
         <property name="some_property" value="some_value"/>
     </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-client.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-client.xml
index 28150439578..3a6bbf1ef62 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-client.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-client.xml
@@ -1,4 +1,4 @@
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
         <property name="some_property" value="some_value"/>
     </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-identity.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-identity.xml
index 0309dbdbd91..1dd1057168d 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-identity.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-security-identity.xml
@@ -1,4 +1,4 @@
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
     <properties>
         <property name="some_property" value="some_value"/>
     </properties>
diff --git a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-transport-verification.xml b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-transport-verification.xml
index 8b738c628f3..9244f1aade2 100644
--- a/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-transport-verification.xml
+++ b/iiop-openjdk/src/test/resources/org/wildfly/iiop/openjdk/subsystem-transport-verification.xml
@@ -1,4 +1,4 @@
-<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.0">
+<subsystem xmlns="urn:jboss:domain:iiop-openjdk:2.1">
    <properties>
         <property name="some_property" value="some_value"/>
     </properties>
diff --git a/testsuite/integration/iiop/pom.xml b/testsuite/integration/iiop/pom.xml
index 1e86c7b818a..10ff474e15b 100644
--- a/testsuite/integration/iiop/pom.xml
+++ b/testsuite/integration/iiop/pom.xml
@@ -26,7 +26,8 @@
         <jbossas.project.dir>${jbossas.ts.dir}/..</jbossas.project.dir>
         <iiop.endorsed.argline>-Djava.endorsed.dirs=${project.build.directory}/endorsed</iiop.endorsed.argline>
         <ts.elytron.cli>ssl-enable-elytron.cli</ts.elytron.cli>
-        <wildfly.config.dir>${basedir}/target/wildfly/standalone/configuration</wildfly.config.dir>
+        <wildfly>wildfly</wildfly>
+        <wildfly.config.dir>${basedir}/target/${wildfly}/standalone/configuration</wildfly.config.dir>
     </properties>
 
     <profiles>
diff --git a/testsuite/integration/iiop/src/test/config/arq/arquillian.xml b/testsuite/integration/iiop/src/test/config/arq/arquillian.xml
index 48b577b6424..be266b6bc3b 100644
--- a/testsuite/integration/iiop/src/test/config/arq/arquillian.xml
+++ b/testsuite/integration/iiop/src/test/config/arq/arquillian.xml
@@ -69,20 +69,6 @@
                 <property name="waitForPortsTimeoutInSeconds">8</property>
             </configuration>
         </container>
-
-        <!-- The server that expsoses EJB's via IIOP -->
-        <container qualifier="iiop-legacy-server" default="false">
-            <configuration>
-                <property name="jbossHome">${basedir}/target/jbossas-iiop-ssl-legacy-server</property>
-                <property name="javaVmArguments">${server.jvm2.args} -Djboss.socket.binding.port-offset=200</property>
-                <property name="serverConfig">${jboss.server.config.file.name:standalone-full.xml}</property>
-                <property name="managementAddress">${node1}</property>
-                <property name="managementPort">10190</property>
-
-                <property name="waitForPorts">${as.debug.port.node1:10190}</property>
-                <property name="waitForPortsTimeoutInSeconds">8</property>
-            </configuration>
-        </container>
     </group>
 
 </arquillian>
diff --git a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/IIOPSslInvocationTestCase.java b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/IIOPSslInvocationTestCase.java
index 2f4ad918cc9..bb695244dfb 100644
--- a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/IIOPSslInvocationTestCase.java
+++ b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/IIOPSslInvocationTestCase.java
@@ -60,15 +60,6 @@
         return jar;
     }
 
-    @Deployment(name = "legacy-server", testable = false)
-    @TargetsContainer("iiop-legacy-server")
-    public static Archive<?> legacyServer() {
-        final JavaArchive jar = ShrinkWrap.create(JavaArchive.class, "server.jar");
-        jar.addClasses(IIOPSslStatelessBean.class, IIOPSslStatelessHome.class, IIOPSslStatelessRemote.class)
-                .addAsManifestResource(IIOPSslInvocationTestCase.class.getPackage(), "legacy-jboss-ejb3.xml", "jboss-ejb3.xml");
-        return jar;
-    }
-
     @Deployment(name = "client", testable = true)
     @TargetsContainer("iiop-client")
     public static Archive<?> clientDeployment() {
@@ -104,23 +95,19 @@ public void testSuccessfulInvocation() throws IOException, NamingException, Logi
 
     @Test
     @OperateOnDeployment("client")
-    public void testManualLookup() throws Exception {
+    public void testManualSslLookup() throws Exception {
         final ClientEjb ejb = client();
-        Assert.assertEquals("hello", ejb.lookup(3628));
+        Assert.assertEquals("hello", ejb.lookupSsl(3629));
     }
 
     @Test
     @OperateOnDeployment("client")
-    public void testManualLookupOnLegacyNodeUsingNonSSLPort() throws Exception {
-        final ClientEjb ejb = client();
-        Assert.assertEquals("hello", ejb.lookup(3728));
-    }
-
-    @Test
-    @OperateOnDeployment("client")
-    public void testManualLookupOnLegacyNodeUsingSSLPort() throws Exception {
-        final ClientEjb ejb = client();
-        Assert.assertEquals("hello", ejb.lookupSsl(3729));
+    public void testManualCleartextLookup() throws Exception {
+        try {
+            final ClientEjb ejb = client();
+            Assert.assertEquals("hello", ejb.lookup(3628));
+            Assert.fail("Connection on CLEAR-TEXT port should be refused");
+        } catch(NamingException e) {}
     }
 
     private ClientEjb client() throws NamingException {
diff --git a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/ejb-jar.xml b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/ejb-jar.xml
index 183c2b898e9..5a0f720d417 100644
--- a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/ejb-jar.xml
+++ b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/ejb-jar.xml
@@ -34,7 +34,7 @@
                     <injection-target-class>org.jboss.as.test.iiopssl.basic.ClientEjb</injection-target-class>
                     <injection-target-name>statelessHome</injection-target-name>
                 </injection-target>
-                <lookup-name>corbaname:iiop:${node1}:3628#IIOPSslStatelessBean</lookup-name>
+                <lookup-name>corbaname:ssliop:1.2@${node1}:3629#IIOPSslStatelessBean</lookup-name>
             </ejb-ref>
         </session>
     </enterprise-beans>
diff --git a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/jboss-ejb3.xml b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/jboss-ejb3.xml
index c900ceb633f..e21d04fa041 100644
--- a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/jboss-ejb3.xml
+++ b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/jboss-ejb3.xml
@@ -16,17 +16,6 @@
         </s:security>
         <iiop:iiop>
             <ejb-name>*</ejb-name>
-            <iiop:ior-security-config>
-                <iiop:transport-config>
-                    <iiop:integrity>required</iiop:integrity>
-                    <iiop:confidentiality>required</iiop:confidentiality>
-                    <iiop:establish-trust-in-target>supported</iiop:establish-trust-in-target>
-                    <iiop:establish-trust-in-client>supported</iiop:establish-trust-in-client>
-                </iiop:transport-config>
-                <iiop:sas-context>
-                    <iiop:caller-propagation>supported</iiop:caller-propagation>
-                </iiop:sas-context>
-            </iiop:ior-security-config>
         </iiop:iiop>
     </assembly-descriptor>
 </jboss:ejb-jar>
diff --git a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/legacy-jboss-ejb3.xml b/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/legacy-jboss-ejb3.xml
deleted file mode 100644
index e21d04fa041..00000000000
--- a/testsuite/integration/iiop/src/test/java/org/jboss/as/test/iiopssl/basic/legacy-jboss-ejb3.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<jboss:ejb-jar xmlns:jboss="http://www.jboss.com/xml/ns/javaee"
-               xmlns="http://java.sun.com/xml/ns/javaee"
-               xmlns:iiop="urn:iiop"
-               xmlns:s="urn:security:1.1"
-               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-               xsi:schemaLocation="http://www.jboss.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-ejb3-2_0.xsd
-                  http://java.sun.com/xml/ns/javaee http://www.jboss.org/j2ee/schema/jboss-ejb3-spec-2_0.xsd
-                  urn:iiop jboss-ejb-iiop_1_0.xsd"
-               version="3.1"
-               impl-version="2.0">
-    <assembly-descriptor>
-        <s:security>
-            <ejb-name>*</ejb-name>
-            <s:missing-method-permissions-deny-access>false</s:missing-method-permissions-deny-access>
-        </s:security>
-        <iiop:iiop>
-            <ejb-name>*</ejb-name>
-        </iiop:iiop>
-    </assembly-descriptor>
-</jboss:ejb-jar>
diff --git a/testsuite/integration/iiop/ssl-enable-elytron.cli b/testsuite/integration/iiop/ssl-enable-elytron.cli
index c663039615b..5bd7884e24f 100644
--- a/testsuite/integration/iiop/ssl-enable-elytron.cli
+++ b/testsuite/integration/iiop/ssl-enable-elytron.cli
@@ -12,9 +12,9 @@ batch
 /subsystem=iiop-openjdk:write-attribute(name=client-ssl-context,value=twoWayCSC)
 /subsystem=iiop-openjdk:write-attribute(name=server-ssl-context,value=twoWaySSC)
 run-batch
-/subsystem=iiop-openjdk:write-attribute(name=client-requires-ssl,value=false)
-/subsystem=iiop-openjdk:write-attribute(name=server-requires-ssl,value=true)
 /subsystem=iiop-openjdk:write-attribute(name=support-ssl,value=true)
+/subsystem=iiop-openjdk:write-attribute(name=client-requires-ssl,value=false)
+/subsystem=iiop-openjdk:write-attribute(name=server-requires-ssl,value=false)
 /subsystem=iiop-openjdk:write-attribute(name=ssl-socket-binding,value=iiop-ssl)
 
 stop-embedded-server
diff --git a/testsuite/integration/src/test/scripts/common-targets.xml b/testsuite/integration/src/test/scripts/common-targets.xml
index 0b9a307c714..15d3c763a38 100644
--- a/testsuite/integration/src/test/scripts/common-targets.xml
+++ b/testsuite/integration/src/test/scripts/common-targets.xml
@@ -352,21 +352,21 @@
         </sequential>
     </macrodef>
 
-    <macrodef name="ts.config-as.setup-ssl-support-for-iiop" description="Creates jsse security domain with a keystore and changes jacorb security settings to support SSL.">
+    <!-- after refactor -->
+
+    <macrodef name="ts.config-as.iiop.enable-ssl-jsse-domain" description="Enable SSL with JSSE security domain">
 
         <attribute name="name" default="jbossas"/>
         <attribute name="output.dir" default="${project.build.directory}"/>
         <attribute name="config.dir.name" default="standalone/configuration"/>
 
-        <attribute name="domainName" default="iiop-ssl-domain"/>
-        <attribute name="keystore"/>
-        <attribute name="password"/>
+        <attribute name="domain-name" default="iiop-ssl-domain"/>
 
         <sequential>
-            <echo message="Setting up SSL support in IIOP configuration for @{name}"/>
+            <echo message="IIOP: enabling SSL with JSSE security domain"/>
 
             <xslt destdir="@{output.dir}/@{name}/@{config.dir.name}"
-                  style="${jbossas.ts.integ.dir}/src/test/xslt/setupIiopSslSupport.xsl"
+                  style="${jbossas.ts.integ.dir}/src/test/xslt/iiopEnableSslJsseDomain.xsl"
                   extension=".xml.mod"
                   useImplicitFileset="false">
                 <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
@@ -374,35 +374,9 @@
                     <include name="**/standalone.xml"/>
                     <include name="**/standalone-full.xml"/>
                 </fileset>
-                <param name="domainName" expression="@{domainName}"/>
-                <param name="keystore" expression="@{keystore}"/>
-                <param name="password" expression="@{password}"/>
+                <param name="domain-name" expression="@{domain-name}"/>
             </xslt>
-        	
-            <move todir="@{output.dir}/@{name}/@{config.dir.name}">
-                <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
-                    <include name="**/standalone-ha.xml.mod"/>
-                    <include name="**/standalone.xml.mod"/>
-                    <include name="**/standalone-full.xml.mod"/>
-                </fileset>
-                <mapper type="glob" from="*.mod" to="*"/>
-            </move>
-        </sequential>
-    </macrodef>
-
-    <macrodef name="ts.config-as.setup-ssl-support-for-iiop-elytron" description="Creates elytron security settings to support SSL.">
-
-        <attribute name="name" default="jbossas"/>
-        <attribute name="output.dir" default="${project.build.directory}"/>
-        <attribute name="config.dir.name" default="standalone/configuration"/>
 
-        <attribute name="domainName" default="iiop-ssl-domain"/>
-        <attribute name="keystore"/>
-        <attribute name="password"/>
-
-        <sequential>
-            <echo message="Setting up SSL support in IIOP configuration for @{name}"/>
-        	
             <move todir="@{output.dir}/@{name}/@{config.dir.name}">
                 <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
                     <include name="**/standalone-ha.xml.mod"/>
@@ -414,13 +388,13 @@
         </sequential>
     </macrodef>
 
-    <macrodef name="ts.config-as.setup-legacy-ssl-support-for-iiop" description="Creates jsse security domain with a keystore and enables server-reqires setting.">
+    <macrodef name="ts.config-as.iiop.create-jsse-security-domain" description="Creates legacy JSSE security domain">
 
         <attribute name="name" default="jbossas"/>
         <attribute name="output.dir" default="${project.build.directory}"/>
         <attribute name="config.dir.name" default="standalone/configuration"/>
 
-        <attribute name="domainName" default="iiop-ssl-domain"/>
+        <attribute name="domain-name" default="iiop-ssl-domain"/>
         <attribute name="keystore"/>
         <attribute name="password"/>
 
@@ -428,7 +402,7 @@
             <echo message="Setting up SSL support in IIOP configuration for @{name}"/>
 
             <xslt destdir="@{output.dir}/@{name}/@{config.dir.name}"
-                  style="${jbossas.ts.integ.dir}/src/test/xslt/setupLegacyIiopSslSupport.xsl"
+                  style="${jbossas.ts.integ.dir}/src/test/xslt/createJsseSecurityDomain.xsl"
                   extension=".xml.mod"
                   useImplicitFileset="false">
                 <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
@@ -436,7 +410,7 @@
                     <include name="**/standalone.xml"/>
                     <include name="**/standalone-full.xml"/>
                 </fileset>
-                <param name="domainName" expression="@{domainName}"/>
+                <param name="domain-name" expression="@{domain-name}"/>
                 <param name="keystore" expression="@{keystore}"/>
                 <param name="password" expression="@{password}"/>
             </xslt>
@@ -452,18 +426,25 @@
         </sequential>
     </macrodef>
 
-    <macrodef name="ts.config-as.setup-legacy-ssl-support-for-iiop-elytron" description="Creates elytron security settings and enables server-reqires setting.">
+    <macrodef name="ts.config-as.iiop.enable-server-requires-ssl" description="Creates elytron security settings and enables server-reqires-ssl setting.">
 
         <attribute name="name" default="jbossas"/>
         <attribute name="output.dir" default="${project.build.directory}"/>
         <attribute name="config.dir.name" default="standalone/configuration"/>
 
-        <attribute name="domainName" default="iiop-ssl-domain"/>
-        <attribute name="keystore"/>
-        <attribute name="password"/>
-
         <sequential>
-            <echo message="Setting up SSL support in IIOP configuration for @{name}"/>
+            <echo message="IIOP: setting server-requires-ssl to true"/>
+
+            <xslt destdir="@{output.dir}/@{name}/@{config.dir.name}"
+                  style="${jbossas.ts.integ.dir}/src/test/xslt/iiopRequireSslSupport.xsl"
+                  extension=".xml.mod"
+                  useImplicitFileset="false">
+                <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
+                    <include name="**/standalone-ha.xml"/>
+                    <include name="**/standalone.xml"/>
+                    <include name="**/standalone-full.xml"/>
+                </fileset>
+            </xslt>
 
             <move todir="@{output.dir}/@{name}/@{config.dir.name}">
                 <fileset dir="@{output.dir}/@{name}/@{config.dir.name}">
diff --git a/testsuite/integration/src/test/scripts/iiop-build.xml b/testsuite/integration/src/test/scripts/iiop-build.xml
index ca7a984f83b..70cc7d03036 100644
--- a/testsuite/integration/src/test/scripts/iiop-build.xml
+++ b/testsuite/integration/src/test/scripts/iiop-build.xml
@@ -40,7 +40,9 @@
         <copy todir="target/jbossas-iiop-ssl-client/standalone/configuration">
             <fileset file="${keystore.file}"/>
         </copy>
-        <ts.config-as.setup-ssl-support-for-iiop name="jbossas-iiop-ssl-client"
+        <ts.config-as.iiop.enable-ssl-jsse-domain name="jbossas-iiop-ssl-client"/>
+        <ts.config-as.iiop.enable-server-requires-ssl name="jbossas-iiop-ssl-client"/>
+        <ts.config-as.iiop.create-jsse-security-domain name="jbossas-iiop-ssl-client"
                                                  keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
                                                  password="${keystore.password}"/>
 
@@ -56,36 +58,16 @@
         <copy todir="target/jbossas-iiop-ssl-server/standalone/configuration">
             <fileset file="${keystore.file}"/>
         </copy>
-        <ts.config-as.setup-ssl-support-for-iiop name="jbossas-iiop-ssl-server"
-                                                 keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
-                                                 password="${keystore.password}"/>
-
-        <!-- SSL Server with server-requires -->
-        <echo message="Building config jbossas-iiop-ssl-legacy-server"/>
-        <copy todir="target/jbossas-iiop-ssl-legacy-server">
-            <fileset dir="target/wildfly"/>
-        </copy>
-        <ts.config-as.ip-with-multicast name="jbossas-iiop-ssl-legacy-server"
-                                        node="${node1}"
-                                        mcast="${mcast}"
-        />
-        <copy todir="target/jbossas-iiop-ssl-legacy-server/standalone/configuration">
-            <fileset file="${keystore.file}"/>
-        </copy>
-        <ts.config-as.setup-legacy-ssl-support-for-iiop name="jbossas-iiop-ssl-legacy-server"
-                                                        keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
-                                                        password="${keystore.password}"/>
-
+        <ts.config-as.iiop.enable-ssl-jsse-domain name="jbossas-iiop-ssl-server"/>
+        <ts.config-as.iiop.enable-server-requires-ssl name="jbossas-iiop-ssl-server"/>
+        <ts.config-as.iiop.create-jsse-security-domain name="jbossas-iiop-ssl-server"
+                                                       keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
+                                                       password="${keystore.password}"/>
     </target>
 
     <target name="build-iiop-elytron" description="Builds server configurations for IIOP tests with Elytron">
 
-        <basename property="keystore.client" file="${keystore.client.file}"/>
-        <basename property="keystore.server" file="${keystore.server.file}"/>
-        <basename property="truststore.client" file="${truststore.client.file}"/>
-        <basename property="truststore.server" file="${truststore.server.file}"/>
-
-        <echo message="Building config jbossas-iiop-client"/>
+    <echo message="Building config jbossas-iiop-client"/>
         <copy todir="target/jbossas-iiop-client">
             <fileset dir="target/wildfly"/>
         </copy>
@@ -114,15 +96,6 @@
                                         node="${node0}"
                                         mcast="${mcast}"
                     />
-        <copy todir="target/jbossas-iiop-ssl-client/standalone/configuration">
-            <fileset file="${keystore.client.file}"/>
-            <fileset file="${truststore.client.file}"/>
-            <fileset file="${keystore.server.file}"/>
-            <fileset file="${truststore.server.file}"/>
-        </copy>
-        <ts.config-as.setup-ssl-support-for-iiop-elytron name="jbossas-iiop-ssl-client"
-                                                 keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
-                                                 password="${keystore.password}"/>
 
         <!-- SSL Server with ior-settings transport config -->
         <echo message="Building config jbossas-iiop-ssl-server"/>
@@ -133,35 +106,6 @@
                                         node="${node1}"
                                         mcast="${mcast}"
         />
-        <copy todir="target/jbossas-iiop-ssl-server/standalone/configuration">
-            <fileset file="${keystore.client.file}"/>
-            <fileset file="${truststore.client.file}"/>
-            <fileset file="${keystore.server.file}"/>
-            <fileset file="${truststore.server.file}"/>
-        </copy>
-        <ts.config-as.setup-ssl-support-for-iiop-elytron name="jbossas-iiop-ssl-server"
-                                                 keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
-                                                 password="${keystore.password}"/>
-
-        <!-- SSL Server with server-requires -->
-        <echo message="Building config jbossas-iiop-ssl-legacy-server"/>
-        <copy todir="target/jbossas-iiop-ssl-legacy-server">
-            <fileset dir="target/wildfly"/>
-        </copy>
-        <ts.config-as.ip-with-multicast name="jbossas-iiop-ssl-legacy-server"
-                                        node="${node1}"
-                                        mcast="${mcast}"
-        />
-        <copy todir="target/jbossas-iiop-ssl-legacy-server/standalone/configuration">
-            <fileset file="${keystore.client.file}"/>
-            <fileset file="${truststore.client.file}"/>
-            <fileset file="${keystore.server.file}"/>
-            <fileset file="${truststore.server.file}"/>
-        </copy>
-        <ts.config-as.setup-legacy-ssl-support-for-iiop-elytron name="jbossas-iiop-ssl-legacy-server"
-                                                        keystore="$${jboss.home.dir}/standalone/configuration/${keystore.filename}"
-                                                        password="${keystore.password}"/>
-
+        <ts.config-as.iiop.enable-server-requires-ssl name="jbossas-iiop-ssl-server"/>
     </target>
-
 </project>
diff --git a/testsuite/integration/src/test/xslt/setupIiopSslSupport.xsl b/testsuite/integration/src/test/xslt/createJsseSecurityDomain.xsl
similarity index 66%
rename from testsuite/integration/src/test/xslt/setupIiopSslSupport.xsl
rename to testsuite/integration/src/test/xslt/createJsseSecurityDomain.xsl
index b42ab930cee..57b03430d87 100644
--- a/testsuite/integration/src/test/xslt/setupIiopSslSupport.xsl
+++ b/testsuite/integration/src/test/xslt/createJsseSecurityDomain.xsl
@@ -2,11 +2,11 @@
                 xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
     <xsl:output method="xml" indent="yes"/>
 
-    <xsl:param name="domainName"/>
+    <xsl:param name="domain-name"/>
     <xsl:param name="keystore"/>
 
     <xsl:variable name="securityNS" select="'urn:jboss:domain:security:'"/>
-    <xsl:variable name="jacorbNS" select="'urn:jboss:domain:iiop-openjdk:'"/>
+    <xsl:variable name="iiopNS" select="'urn:jboss:domain:iiop-openjdk:'"/>
     <xsl:variable name="iiop" select="'iiop'"/>
     <xsl:variable name="iiop-ssl" select="'iiop-ssl'"/>
 
@@ -17,36 +17,18 @@
         </xsl:copy>
     </xsl:template>
 
-    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $jacorbNS)]
-                                          /*[local-name()='orb']">
-        <xsl:copy>
-            <xsl:attribute name="socket-binding"><xsl:value-of select="$iiop"/></xsl:attribute>
-            <xsl:attribute name="ssl-socket-binding"><xsl:value-of select="$iiop-ssl"/></xsl:attribute>
-        </xsl:copy>
-    </xsl:template>
-
-    <!-- Enable SSL support in iiop configuration -->
-    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $jacorbNS)]
-                                          /*[local-name()='security']">
-        <xsl:copy>
-            <xsl:attribute name="support-ssl">true</xsl:attribute>
-            <xsl:attribute name="security-domain"><xsl:value-of select="$domainName"/></xsl:attribute>
-        </xsl:copy>
-    </xsl:template>
-
 
-    <!-- Create a security domain with keystore used by Jacorb -->
     <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $securityNS)]
                           /*[local-name()='security-domains' and starts-with(namespace-uri(), $securityNS)]">
         <xsl:choose>
             <xsl:when test="not(//*[local-name()='subsystem' and starts-with(namespace-uri(), $securityNS)]
                                  /*[local-name()='security-domains' and starts-with(namespace-uri(), $securityNS)]
-                                 /*[local-name()='security-domain' and @name=$domainName and starts-with(namespace-uri(), $securityNS)]
+                                 /*[local-name()='security-domain' and @name=$domain-name and starts-with(namespace-uri(), $securityNS)]
                                )">
                 <xsl:copy>
                     <xsl:apply-templates select="node()|@*"/>
                     <xsl:element name="security-domain" namespace="{namespace-uri()}">
-                        <xsl:attribute name="name"><xsl:value-of select="$domainName"/></xsl:attribute>
+                        <xsl:attribute name="name"><xsl:value-of select="$domain-name"/></xsl:attribute>
                         <xsl:attribute name="cache-type">default</xsl:attribute>
                         <xsl:element name="jsse" namespace="{namespace-uri()}">
                             <xsl:attribute name="keystore-password">password</xsl:attribute>
diff --git a/testsuite/integration/src/test/xslt/iiopEnableSslJsseDomain.xsl b/testsuite/integration/src/test/xslt/iiopEnableSslJsseDomain.xsl
new file mode 100644
index 00000000000..44f6eecf3eb
--- /dev/null
+++ b/testsuite/integration/src/test/xslt/iiopEnableSslJsseDomain.xsl
@@ -0,0 +1,34 @@
+<xsl:stylesheet version="1.0"
+                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+    <xsl:output method="xml" indent="yes"/>
+
+    <xsl:param name="domain-name"/>
+
+    <xsl:variable name="iiopNS" select="'urn:jboss:domain:iiop-openjdk:'"/>
+    <xsl:variable name="iiop" select="'iiop'"/>
+    <xsl:variable name="iiop-ssl" select="'iiop-ssl'"/>
+
+    <!-- traverse the whole tree, so that all elements and attributes are eventually current node -->
+    <xsl:template match="node()|@*">
+        <xsl:copy>
+            <xsl:apply-templates select="node()|@*"/>
+        </xsl:copy>
+    </xsl:template>
+
+    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $iiopNS)]
+                                          /*[local-name()='orb']">
+        <xsl:copy>
+            <xsl:attribute name="socket-binding"><xsl:value-of select="$iiop"/></xsl:attribute>
+            <xsl:attribute name="ssl-socket-binding"><xsl:value-of select="$iiop-ssl"/></xsl:attribute>
+        </xsl:copy>
+    </xsl:template>
+
+    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $iiopNS)]
+                                          /*[local-name()='security']">
+        <xsl:copy>
+            <xsl:attribute name="support-ssl">true</xsl:attribute>
+            <xsl:attribute name="server-requires-ssl">false</xsl:attribute>
+            <xsl:attribute name="security-domain"><xsl:value-of select="$domain-name"/></xsl:attribute>
+        </xsl:copy>
+    </xsl:template>
+</xsl:stylesheet>
diff --git a/testsuite/integration/src/test/xslt/iiopRequireSslSupport.xsl b/testsuite/integration/src/test/xslt/iiopRequireSslSupport.xsl
new file mode 100644
index 00000000000..cc7824ac357
--- /dev/null
+++ b/testsuite/integration/src/test/xslt/iiopRequireSslSupport.xsl
@@ -0,0 +1,31 @@
+<xsl:stylesheet version="1.0"
+                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
+    <xsl:output method="xml" indent="yes"/>
+
+    <xsl:variable name="iiopNS" select="'urn:jboss:domain:iiop-openjdk:'"/>
+    <xsl:variable name="iiop-ssl" select="'iiop-ssl'"/>
+
+
+    <!-- traverse the whole tree, so that all elements and attributes are eventually current node -->
+    <xsl:template match="node()|@*">
+        <xsl:copy>
+            <xsl:apply-templates select="node()|@*"/>
+        </xsl:copy>
+   </xsl:template>
+
+    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $iiopNS)]
+                                          /*[local-name()='orb']">
+        <xsl:copy>
+            <xsl:attribute name="ssl-socket-binding"><xsl:value-of select="$iiop-ssl"/></xsl:attribute>
+        </xsl:copy>
+    </xsl:template>
+
+    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $iiopNS)]
+                          /*[local-name()='security']
+                          /@server-requires-ssl">
+        <xsl:attribute name="server-requires-ssl">true</xsl:attribute>
+    </xsl:template>
+
+
+
+</xsl:stylesheet>
diff --git a/testsuite/integration/src/test/xslt/setupLegacyIiopSslSupport.xsl b/testsuite/integration/src/test/xslt/setupLegacyIiopSslSupport.xsl
deleted file mode 100644
index 3a04433a0bc..00000000000
--- a/testsuite/integration/src/test/xslt/setupLegacyIiopSslSupport.xsl
+++ /dev/null
@@ -1,65 +0,0 @@
-<xsl:stylesheet version="1.0"
-                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
-    <xsl:output method="xml" indent="yes"/>
-
-    <xsl:param name="domainName"/>
-    <xsl:param name="keystore"/>
- 
-    <xsl:variable name="securityNS" select="'urn:jboss:domain:security:'"/>
-    <xsl:variable name="jacorbNS" select="'urn:jboss:domain:iiop-openjdk:'"/>
-    <xsl:variable name="iiop-ssl" select="'iiop-ssl'"/>
-
-    <!-- traverse the whole tree, so that all elements and attributes are eventually current node -->
-    <xsl:template match="node()|@*">
-        <xsl:copy>
-            <xsl:apply-templates select="node()|@*"/>
-        </xsl:copy>
-    </xsl:template>
-
-    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $jacorbNS)]
-                                          /*[local-name()='orb']">
-        <xsl:copy>
-            <xsl:attribute name="socket-binding"><xsl:value-of select="@socket-binding"/></xsl:attribute>
-            <xsl:attribute name="ssl-socket-binding"><xsl:value-of select="$iiop-ssl"/></xsl:attribute>
-        </xsl:copy>
-    </xsl:template>
-
-    <!-- Enable SSL support in iiop configuration -->
-    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $jacorbNS)]
-                                          /*[local-name()='security']">
-        <xsl:copy>
-            <xsl:attribute name="support-ssl">true</xsl:attribute>
-            <xsl:attribute name="security-domain"><xsl:value-of select="$domainName"/></xsl:attribute>
-        </xsl:copy>
-    </xsl:template>
-
-    <!-- Create a security domain with keystore used by Jacorb -->
-    <xsl:template match="//*[local-name()='subsystem' and starts-with(namespace-uri(), $securityNS)]
-                          /*[local-name()='security-domains' and starts-with(namespace-uri(), $securityNS)]">
-        <xsl:choose>
-            <xsl:when test="not(//*[local-name()='subsystem' and starts-with(namespace-uri(), $securityNS)]
-                                 /*[local-name()='security-domains' and starts-with(namespace-uri(), $securityNS)]
-                                 /*[local-name()='security-domain' and @name=$domainName and starts-with(namespace-uri(), $securityNS)]
-                               )">
-                <xsl:copy>
-                    <xsl:apply-templates select="node()|@*"/>
-                    <xsl:element name="security-domain" namespace="{namespace-uri()}">
-                        <xsl:attribute name="name"><xsl:value-of select="$domainName"/></xsl:attribute>
-                        <xsl:attribute name="cache-type">default</xsl:attribute>
-                        <xsl:element name="jsse" namespace="{namespace-uri()}">
-                            <xsl:attribute name="keystore-password">password</xsl:attribute>
-                            <xsl:attribute name="keystore-url"><xsl:value-of select="$keystore"/></xsl:attribute>
-                            <xsl:attribute name="truststore-password">password</xsl:attribute>
-                            <xsl:attribute name="truststore-url"><xsl:value-of select="$keystore"/></xsl:attribute>
-                        </xsl:element>
-                    </xsl:element>
-                </xsl:copy>
-            </xsl:when>
-            <xsl:otherwise>
-                <xsl:copy>
-                    <xsl:apply-templates select="node()|@*"/>
-                </xsl:copy>
-            </xsl:otherwise>
-        </xsl:choose>
-    </xsl:template>
-</xsl:stylesheet>
