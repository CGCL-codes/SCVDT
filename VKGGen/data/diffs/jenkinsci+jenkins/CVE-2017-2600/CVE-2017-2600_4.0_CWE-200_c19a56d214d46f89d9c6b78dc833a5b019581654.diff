From c19a56d214d46f89d9c6b78dc833a5b019581654 Mon Sep 17 00:00:00 2001
From: Andrew Bayer <andrew.bayer@gmail.com>
Date: Thu, 17 Nov 2016 10:45:04 -0800
Subject: [PATCH 1/3] [SECURITY-343] Restrict API access to NodeMonitor data

Switch to requiring EXTENDED_READ permission for access to NodeMonitor
data. It might theoretically be better if we had more granular
permissions on each NodeMonitor, but that's a bigger change, and since
EXTENDED_READ is already what we use to limit access to serving the
computer's config.xml, I think this is appropriate.
---
 core/src/main/java/hudson/model/Computer.java |  6 ++++--
 .../model/ComputerConfigDotXmlTest.java       | 20 +++++++++++++++++++
 2 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/core/src/main/java/hudson/model/Computer.java b/core/src/main/java/hudson/model/Computer.java
index 080f9462d0a..69eca9159b0 100644
--- a/core/src/main/java/hudson/model/Computer.java
+++ b/core/src/main/java/hudson/model/Computer.java
@@ -1072,8 +1072,10 @@ public String getSearchUrl() {
     @Exported(inline=true)
     public Map<String/*monitor name*/,Object> getMonitorData() {
         Map<String,Object> r = new HashMap<String, Object>();
-        for (NodeMonitor monitor : NodeMonitor.getAll())
-            r.put(monitor.getClass().getName(),monitor.data(this));
+        if (hasPermission(EXTENDED_READ)) {
+            for (NodeMonitor monitor : NodeMonitor.getAll())
+                r.put(monitor.getClass().getName(), monitor.data(this));
+        }
         return r;
     }
 
diff --git a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
index 30677a15350..b6698c8c975 100644
--- a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
+++ b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
@@ -27,6 +27,8 @@
 import static org.hamcrest.Matchers.containsString;
 import static org.hamcrest.Matchers.equalTo;
 import static org.hamcrest.Matchers.startsWith;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 import static org.mockito.Mockito.spy;
 import static org.mockito.Mockito.when;
 import hudson.security.ACL;
@@ -140,6 +142,24 @@ public void configXmlPostShouldUpdateNodeConfiguration() throws Exception {
         assertThat(updatedSlave.getNumExecutors(), equalTo(42));
     }
 
+    @Test
+    public void emptyNodeMonitorDataWithoutExtendedRead() throws Exception {
+        rule.jenkins.setAuthorizationStrategy(new GlobalMatrixAuthorizationStrategy());
+
+        assertTrue(computer.getMonitorData().isEmpty());
+    }
+
+    @Test
+    public void populatedNodeMonitorDataWithExtendedRead() throws Exception {
+        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();
+        rule.jenkins.setAuthorizationStrategy(auth);
+        auth.add(Computer.CONFIGURE, "user");
+
+        assertFalse(computer.getMonitorData().isEmpty());
+    }
+
+
+
     private OutputStream captureOutput() throws IOException {
 
         final ByteArrayOutputStream baos = new ByteArrayOutputStream();

From 0491ee2c23f1bdc3589b7e861e52b6643695b86f Mon Sep 17 00:00:00 2001
From: Andrew Bayer <andrew.bayer@gmail.com>
Date: Tue, 3 Jan 2017 11:56:07 -0800
Subject: [PATCH 2/3] [SECURITY-343] Switching to using CONNECT permission.

---
 core/src/main/java/hudson/model/Computer.java               | 2 +-
 .../test/java/hudson/model/ComputerConfigDotXmlTest.java    | 6 +++---
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/core/src/main/java/hudson/model/Computer.java b/core/src/main/java/hudson/model/Computer.java
index 69eca9159b0..a7bc919f5b5 100644
--- a/core/src/main/java/hudson/model/Computer.java
+++ b/core/src/main/java/hudson/model/Computer.java
@@ -1072,7 +1072,7 @@ public String getSearchUrl() {
     @Exported(inline=true)
     public Map<String/*monitor name*/,Object> getMonitorData() {
         Map<String,Object> r = new HashMap<String, Object>();
-        if (hasPermission(EXTENDED_READ)) {
+        if (hasPermission(CONNECT)) {
             for (NodeMonitor monitor : NodeMonitor.getAll())
                 r.put(monitor.getClass().getName(), monitor.data(this));
         }
diff --git a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
index b6698c8c975..3a3ba9e3074 100644
--- a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
+++ b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
@@ -143,17 +143,17 @@ public void configXmlPostShouldUpdateNodeConfiguration() throws Exception {
     }
 
     @Test
-    public void emptyNodeMonitorDataWithoutExtendedRead() throws Exception {
+    public void emptyNodeMonitorDataWithoutConnect() throws Exception {
         rule.jenkins.setAuthorizationStrategy(new GlobalMatrixAuthorizationStrategy());
 
         assertTrue(computer.getMonitorData().isEmpty());
     }
 
     @Test
-    public void populatedNodeMonitorDataWithExtendedRead() throws Exception {
+    public void populatedNodeMonitorDataWithConnect() throws Exception {
         GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();
         rule.jenkins.setAuthorizationStrategy(auth);
-        auth.add(Computer.CONFIGURE, "user");
+        auth.add(Computer.CONNECT, "user");
 
         assertFalse(computer.getMonitorData().isEmpty());
     }

From 98cd6a7bd20efa225cb53688d67c038dc4e7c9d1 Mon Sep 17 00:00:00 2001
From: Andrew Bayer <andrew.bayer@gmail.com>
Date: Tue, 3 Jan 2017 12:08:44 -0800
Subject: [PATCH 3/3] [SECURITY-343] Adding @Issue on tests

---
 test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
index 3a3ba9e3074..a7611c3f3e2 100644
--- a/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
+++ b/test/src/test/java/hudson/model/ComputerConfigDotXmlTest.java
@@ -49,6 +49,7 @@
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
+import org.jvnet.hudson.test.Issue;
 import org.jvnet.hudson.test.JenkinsRule;
 import org.jvnet.hudson.test.JenkinsRule.DummySecurityRealm;
 import org.kohsuke.stapler.StaplerRequest;
@@ -143,6 +144,7 @@ public void configXmlPostShouldUpdateNodeConfiguration() throws Exception {
     }
 
     @Test
+    @Issue("SECURITY-343")
     public void emptyNodeMonitorDataWithoutConnect() throws Exception {
         rule.jenkins.setAuthorizationStrategy(new GlobalMatrixAuthorizationStrategy());
 
@@ -150,6 +152,7 @@ public void emptyNodeMonitorDataWithoutConnect() throws Exception {
     }
 
     @Test
+    @Issue("SECURITY-343")
     public void populatedNodeMonitorDataWithConnect() throws Exception {
         GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();
         rule.jenkins.setAuthorizationStrategy(auth);
