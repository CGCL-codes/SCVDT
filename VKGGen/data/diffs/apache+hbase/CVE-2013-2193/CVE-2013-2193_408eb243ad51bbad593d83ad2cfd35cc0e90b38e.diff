diff --git a/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java b/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java
index d11592874a7..5c21d93388b 100644
--- a/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java
+++ b/security/src/main/java/org/apache/hadoop/hbase/ipc/SecureClient.java
@@ -72,6 +72,10 @@
   private static final Log LOG =
     LogFactory.getLog("org.apache.hadoop.ipc.SecureClient");
 
+  public static final String IPC_CLIENT_FALLBACK_TO_SIMPLE_AUTH_ALLOWED_KEY =
+      "hbase.ipc.client.fallback-to-simple-auth-allowed";
+  public static final boolean IPC_CLIENT_FALLBACK_TO_SIMPLE_AUTH_ALLOWED_DEFAULT = false;
+
   protected static Map<String,TokenSelector<? extends TokenIdentifier>> tokenHandlers =
       new HashMap<String,TokenSelector<? extends TokenIdentifier>>();
   static {
@@ -173,7 +177,7 @@ private synchronized boolean shouldAuthenticateOverKrb() throws IOException {
     private synchronized boolean setupSaslConnection(final InputStream in2,
         final OutputStream out2)
         throws IOException {
-      saslRpcClient = new HBaseSaslRpcClient(authMethod, token, serverPrincipal);
+      saslRpcClient = new HBaseSaslRpcClient(authMethod, token, serverPrincipal, fallbackAllowed);
       return saslRpcClient.saslConnect(in2, out2);
     }
 
@@ -451,6 +455,8 @@ protected synchronized void close() {
     }
   }
 
+  private final boolean fallbackAllowed;
+
   /**
    * Construct an IPC client whose values are of the given {@link org.apache.hadoop.io.Writable}
    * class.
@@ -461,6 +467,12 @@ protected synchronized void close() {
   public SecureClient(Class<? extends Writable> valueClass, Configuration conf,
       SocketFactory factory) {
     super(valueClass, conf, factory);
+    this.fallbackAllowed =
+      conf.getBoolean(IPC_CLIENT_FALLBACK_TO_SIMPLE_AUTH_ALLOWED_KEY,
+        IPC_CLIENT_FALLBACK_TO_SIMPLE_AUTH_ALLOWED_DEFAULT);
+    if (LOG.isDebugEnabled()) {
+      LOG.debug("fallbackAllowed=" + this.fallbackAllowed);
+    }
   }
 
   /**
diff --git a/security/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java b/security/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
index 809097305b4..c1eb055b190 100644
--- a/security/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
+++ b/security/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java
@@ -56,6 +56,7 @@
   public static final Log LOG = LogFactory.getLog(HBaseSaslRpcClient.class);
 
   private final SaslClient saslClient;
+  private final boolean fallbackAllowed;
 
   /**
    * Create a HBaseSaslRpcClient for an authentication method
@@ -66,8 +67,9 @@
    *          token to use if needed by the authentication method
    */
   public HBaseSaslRpcClient(AuthMethod method,
-      Token<? extends TokenIdentifier> token, String serverPrincipal)
-      throws IOException {
+      Token<? extends TokenIdentifier> token, String serverPrincipal,
+      boolean fallbackAllowed) throws IOException {
+    this.fallbackAllowed = fallbackAllowed;
     switch (method) {
     case DIGEST:
       if (LOG.isDebugEnabled())
@@ -148,8 +150,14 @@ public boolean saslConnect(InputStream inS, OutputStream outS)
         readStatus(inStream);
         int len = inStream.readInt();
         if (len == HBaseSaslRpcServer.SWITCH_TO_SIMPLE_AUTH) {
-          if (LOG.isDebugEnabled())
+          if (!fallbackAllowed) {
+            throw new IOException("Server asks us to fall back to SIMPLE auth,"
+              + " but this client is configured to only allow secure"
+              + " connections.");
+          }
+          if (LOG.isDebugEnabled()) {
             LOG.debug("Server asks us to fall back to simple auth.");
+          }
           saslClient.dispose();
           return false;
         }
diff --git a/src/main/resources/hbase-default.xml b/src/main/resources/hbase-default.xml
index d59457ac723..e5b7764e8cd 100644
--- a/src/main/resources/hbase-default.xml
+++ b/src/main/resources/hbase-default.xml
@@ -657,6 +657,21 @@
     </description>
   </property>
 
+   <property>
+    <name>hbase.ipc.client.fallback-to-simple-auth-allowed</name>
+    <value>false</value>
+    <description>
+      When a client is configured to attempt a secure connection, but
+      attempts to connect to an insecure server, that server may instruct the
+      client to switch to SASL SIMPLE (unsecure) authentication. This setting
+      controls whether or not the client will accept this instruction from the
+      server. When false (the default), the client will not allow the fallback
+      to SIMPLE authentication, and will abort the connection.
+
+      This setting is only used by the secure RPC engine.
+    </description>
+  </property>
+
   <property>
     <name>zookeeper.znode.acl.parent</name>
     <value>acl</value>
diff --git a/src/test/resources/hbase-site.xml b/src/test/resources/hbase-site.xml
index b9a44686221..67e6cf55a8e 100644
--- a/src/test/resources/hbase-site.xml
+++ b/src/test/resources/hbase-site.xml
@@ -134,4 +134,8 @@
     version is X.X.X-SNAPSHOT"
     </description>
   </property>
+  <property>
+    <name>hbase.ipc.client.fallback-to-simple-auth-allowed</name>
+    <value>true</value>
+  </property>
 </configuration>
