diff --git a/xstream-distribution/src/content/faq.html b/xstream-distribution/src/content/faq.html
index bf7185fc..3545ea73 100644
--- a/xstream-distribution/src/content/faq.html
+++ b/xstream-distribution/src/content/faq.html
@@ -722,8 +722,9 @@ <h2 id="Security_XXEVulnerability">Is XStream XXE vulnerable?</h2>
     	for parameter entities.</td></tr>
     	<tr><td>Dom4JDriver</td><td>no</td><td>Driver turns off DOCTYPE processing to suppress handling of external
     	entities with SAX reader in use.</td></tr>
-    	<tr><td>DomDriver</td><td>no</td><td>Driver turns off DOCTYPE processing to suppress handling of external
-    	entities with SAX reader in use.</td></tr>
+    	<tr><td>DomDriver</td><td>no, Java 6 or higher<br/>yes, Java 5</td><td>Driver turns off DOCTYPE processing with
+    	Java 7 runtime or higher to suppress handling of external entities with SAX reader in use. Suppress external
+    	entities only for Java 6 or lower, fails for parameterized entities.</td></tr>
     	<tr><td>JDomDriver</td><td>no</td><td>Driver turns off DOCTYPE processing to suppress handling of external
     	entities with SAX reader in use.</td></tr>
     	<tr><td>JDom2Driver</td><td>no</td><td>Driver turns off DOCTYPE processing to suppress handling of external
diff --git a/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java b/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
index 456fd0a4..9aebb758 100644
--- a/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
+++ b/xstream/src/java/com/thoughtworks/xstream/io/xml/DomDriver.java
@@ -150,7 +150,12 @@ protected DocumentBuilderFactory createDocumentBuilderFactory() {
             } catch (IllegalAccessException e) {
                 throw new ObjectAccessException("Cannot set feature of DocumentBuilderFactory.", e);
             } catch (InvocationTargetException e) {
-                throw new StreamException(e.getCause());
+                Throwable cause = e.getCause();
+                if (JVM.is16() 
+                        || (cause instanceof ParserConfigurationException 
+                                &&  cause.getMessage().indexOf("disallow-doctype-decl") < 0)) { 
+                    throw new StreamException(cause);
+                }
             }
         }
         factory.setExpandEntityReferences(false);
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
index e165040b..441a9ae9 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/DomReaderTest.java
@@ -88,7 +88,7 @@ public void testExposesAttributesKeysAndValuesByIndex() throws Exception {
     public void testIsXXEVulnerableWithExternalGeneralEntity() throws Exception {
         try {
             super.testIsXXEVulnerableWithExternalGeneralEntity();
-            if (JVM.is15()) {
+            if (JVM.is16()) {
                 fail("Thrown " + XStreamException.class.getName() + " expected");
             }
         } catch (final XStreamException e) {
@@ -98,7 +98,7 @@ public void testIsXXEVulnerableWithExternalGeneralEntity() throws Exception {
             }
         } catch (final NullPointerException e) {
             // NPE only with Sun Java 1.6 runtime
-            if (JVM.is17()) {
+            if (JVM.is17() || !JVM.is16()) {
                 throw e;
             }
         }
@@ -111,11 +111,16 @@ public void testIsXXEVulnerableWithExternalParameterEntity() throws Exception {
         } catch (final XStreamException e) {
             final String message = e.getMessage();
             if (message.indexOf("DOCTYPE") < 0) {
-                throw e;
+                // XXE vulnerable with Sun Java 1.6 runtime
+                if (JVM.is16() || !JVM.is15()) {
+                    throw e;
+                } else {
+                    System.err.println("DomReader is vulnerable with Java 5!");
+                }
             }
         } catch (final NullPointerException e) {
             // NPE only with Sun Java 1.6 runtime
-            if (JVM.is17()) {
+            if (JVM.is17() || !JVM.is16()) {
                 throw e;
             }
         }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
index 99d82dac..d26f2050 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/StaxReaderTest.java
@@ -14,6 +14,7 @@
 import java.io.StringReader;
 
 import com.thoughtworks.xstream.XStreamException;
+import com.thoughtworks.xstream.core.JVM;
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 
 
@@ -41,7 +42,9 @@ public void testIsXXEVulnerableWithExternalParameterEntity() throws Exception {
         } catch (final XStreamException e) {
             final String message = e.getMessage();
             if (message.indexOf("external entity") < 0) {
-                if (message.indexOf("com.wutka.dtd.DTDParseException") >= 0) {
+                if (JVM.is16() && message.indexOf("com.wutka.dtd.DTDParseException") >= 0) {
+                    System.err.println("BEAStaxReader was selected as default StAX driver for StaxReaderTest!");
+                } else if (JVM.is15() && message.replaceAll("[:space:]", "").endsWith("null")) {
                     System.err.println("BEAStaxReader was selected as default StAX driver for StaxReaderTest!");
                 } else {
                     throw e;
