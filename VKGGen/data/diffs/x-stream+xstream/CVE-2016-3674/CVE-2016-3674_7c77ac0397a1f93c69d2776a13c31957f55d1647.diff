diff --git a/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java b/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java
index 33d0ad5a..a71de17d 100644
--- a/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java
+++ b/xstream/src/java/com/thoughtworks/xstream/io/xml/Dom4JDriver.java
@@ -1,6 +1,6 @@
 /*
  * Copyright (C) 2004, 2005, 2006 Joe Walnes.
- * Copyright (C) 2006, 2007, 2009, 2011, 2014 XStream Committers.
+ * Copyright (C) 2006, 2007, 2009, 2011, 2014, 2015 XStream Committers.
  * All rights reserved.
  *
  * The software in this package is published under the terms of the BSD
@@ -26,6 +26,7 @@
 import org.dom4j.io.OutputFormat;
 import org.dom4j.io.SAXReader;
 import org.dom4j.io.XMLWriter;
+import org.xml.sax.SAXException;
 
 import com.thoughtworks.xstream.io.HierarchicalStreamReader;
 import com.thoughtworks.xstream.io.HierarchicalStreamWriter;
@@ -92,8 +93,7 @@ public void setOutputFormat(final OutputFormat outputFormat) {
     @Override
     public HierarchicalStreamReader createReader(final Reader text) {
         try {
-            final SAXReader reader = new SAXReader();
-            final Document document = reader.read(text);
+            final Document document = createReader().read(text);
             return new Dom4JReader(document, getNameCoder());
         } catch (final DocumentException e) {
             throw new StreamException(e);
@@ -103,8 +103,7 @@ public HierarchicalStreamReader createReader(final Reader text) {
     @Override
     public HierarchicalStreamReader createReader(final InputStream in) {
         try {
-            final SAXReader reader = new SAXReader();
-            final Document document = reader.read(in);
+            final Document document = createReader().read(in);
             return new Dom4JReader(document, getNameCoder());
         } catch (final DocumentException e) {
             throw new StreamException(e);
@@ -117,8 +116,7 @@ public HierarchicalStreamReader createReader(final InputStream in) {
     @Override
     public HierarchicalStreamReader createReader(final URL in) {
         try {
-            final SAXReader reader = new SAXReader();
-            final Document document = reader.read(in);
+            final Document document = createReader().read(in);
             return new Dom4JReader(document, getNameCoder());
         } catch (final DocumentException e) {
             throw new StreamException(e);
@@ -131,8 +129,7 @@ public HierarchicalStreamReader createReader(final URL in) {
     @Override
     public HierarchicalStreamReader createReader(final File in) {
         try {
-            final SAXReader reader = new SAXReader();
-            final Document document = reader.read(in);
+            final Document document = createReader().read(in);
             return new Dom4JReader(document, getNameCoder());
         } catch (final DocumentException e) {
             throw new StreamException(e);
@@ -157,4 +154,21 @@ public HierarchicalStreamWriter createWriter(final OutputStream out) {
         final Writer writer = new OutputStreamWriter(out);
         return createWriter(writer);
     }
+
+    /**
+     * Create and initialize the SAX reader.
+     * 
+     * @return the SAX reader instance.
+     * @throws DocumentException if DOCTYPE processing cannot be disabled
+     * @since upcoming
+     */
+    protected SAXReader createReader() throws DocumentException {
+        final SAXReader reader = new SAXReader();
+        try {
+            reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        } catch (SAXException e) {
+            throw new DocumentException("Cannot disable DOCTYPE processing", e);
+        }
+        return reader;
+    }
 }
diff --git a/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java b/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
index 08d90b5f..350af5a7 100644
--- a/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
+++ b/xstream/src/test/com/thoughtworks/xstream/io/xml/Dom4JReaderTest.java
@@ -52,7 +52,7 @@ public void testIsXXEVulnerable() throws Exception {
             fail("Thrown " + XStreamException.class.getName() + " expected");
         } catch (final XStreamException e) {
             final String message = e.getMessage();
-            if (message.contains("Package")) {
+            if (!message.contains("DOCTYPE")) {
                 throw e;
             }
         }
