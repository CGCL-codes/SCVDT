From 28755d68e335c30fe074d17d352610babe9b7932 Mon Sep 17 00:00:00 2001
From: Bruce Schuchardt <bschuchardt@pivotal.io>
Date: Thu, 30 Nov 2017 10:52:47 -0800
Subject: [PATCH] GEODE-3923 Provide whitelist/blacklist capability for java
 serialization

Removing commented-out code and a Thread.sleep().  I opened GEODE-4037
to track the hot loop that made us, perhaps inadvisedly, add the
Thread.sleep().
---
 .../geode/distributed/internal/ReplyMessage.java     |  2 --
 .../org/apache/geode/internal/cache/DistTXState.java |  5 +----
 .../cache/persistence/PersistenceAdvisorImpl.java    |  1 -
 .../geode/security/ClientAuthorizationDUnitTest.java | 12 ------------
 4 files changed, 1 insertion(+), 19 deletions(-)

diff --git a/geode-core/src/main/java/org/apache/geode/distributed/internal/ReplyMessage.java b/geode-core/src/main/java/org/apache/geode/distributed/internal/ReplyMessage.java
index 170df573292..d53939b0ab8 100644
--- a/geode-core/src/main/java/org/apache/geode/distributed/internal/ReplyMessage.java
+++ b/geode-core/src/main/java/org/apache/geode/distributed/internal/ReplyMessage.java
@@ -93,8 +93,6 @@ public static void send(InternalDistributedMember recipient, int processorId,
 
     m.processorId = processorId;
     if (exception != null) {
-      // logger.info("replying with exception {} of class {}", exception.getMessage(),
-      // exception.getClass());
       m.returnValue = exception;
       m.returnValueIsException = true;
     }
diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/DistTXState.java b/geode-core/src/main/java/org/apache/geode/internal/cache/DistTXState.java
index 89930414be7..30850bc2747 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/DistTXState.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/DistTXState.java
@@ -479,10 +479,7 @@ private void setUpdatingTxStateDuringPreCommit(boolean updatingTxState)
     this.updatingTxStateDuringPreCommit = updatingTxState;
     if (logger.isDebugEnabled()) {
       logger.debug("DistTXState setUpdatingTxStateDuringPreCommit incoming {} final {} ",
-          updatingTxState, this.updatingTxStateDuringPreCommit/* , new Throwable() */); // [DISTTX]
-                                                                                        // TODO:
-      // Remove
-      // throwable
+          updatingTxState, this.updatingTxStateDuringPreCommit);
     }
   }
 
diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/persistence/PersistenceAdvisorImpl.java b/geode-core/src/main/java/org/apache/geode/internal/cache/persistence/PersistenceAdvisorImpl.java
index c33ba497a21..bebb8f81d30 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/persistence/PersistenceAdvisorImpl.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/persistence/PersistenceAdvisorImpl.java
@@ -846,7 +846,6 @@ public void finishPendingDestroy() {
           if (previousAdvice != null && !previousAdvice.getReplicates().isEmpty()) {
             logger.info(
                 LocalizedMessage.create(LocalizedStrings.PersistenceAdvisorImpl_RETRYING_GII));
-            Thread.sleep(200);
             previousAdvice = null;
             continue;
           }
diff --git a/geode-core/src/test/java/org/apache/geode/security/ClientAuthorizationDUnitTest.java b/geode-core/src/test/java/org/apache/geode/security/ClientAuthorizationDUnitTest.java
index 09dd830e124..3275c876276 100644
--- a/geode-core/src/test/java/org/apache/geode/security/ClientAuthorizationDUnitTest.java
+++ b/geode-core/src/test/java/org/apache/geode/security/ClientAuthorizationDUnitTest.java
@@ -296,18 +296,6 @@ public void testInvalidAccessor() {
     client2.invoke(() -> doGets(4, NO_EXCEPTION));
   }
 
-  // private Properties getSystemProperties(CredentialGenerator cGen) {
-  // Properties properties = cGen.getJavaProperties();
-  // if (Version.CURRENT_ORDINAL >= 75) {
-  // if (properties == null) {
-  // properties = new Properties();
-  // }
-  // properties.put(ConfigurationProperties.SERIALIZABLE_OBJECT_FILTER,
-  // UsernamePrincipal.class.getName());
-  // }
-  // return properties;
-  // }
-
   @Test
   public void testPutsGetsWithFailover() {
     AuthzCredentialGenerator gen = getXmlAuthzGenerator();
