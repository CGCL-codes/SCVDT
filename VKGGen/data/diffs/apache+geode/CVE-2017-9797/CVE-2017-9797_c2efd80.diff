From c2efd80c1e9a55af65d6ecbf593360201fe0bf4d Mon Sep 17 00:00:00 2001
From: Bruce Schuchardt <bschuchardt@pivotal.io>
Date: Tue, 15 Aug 2017 12:02:10 -0700
Subject: [PATCH] GEODE-3249: internal messages should have credentials

Require all client-side message classes to invoke processSecureBytes().

Allow client PR metadata fetch from a background thread with no
credentials.
---
 .../cache/client/internal/AbstractOp.java     | 39 +++++++++----------
 .../client/internal/CloseConnectionOp.java    |  3 --
 .../geode/cache/client/internal/CommitOp.java |  3 --
 .../internal/GetClientPRMetaDataOp.java       | 11 ++++++
 .../GetClientPartitionAttributesOp.java       |  3 --
 .../client/internal/GetEventValueOp.java      |  3 --
 .../cache/client/internal/MakePrimaryOp.java  |  3 --
 .../geode/cache/client/internal/PingOp.java   |  1 +
 .../cache/client/internal/PrimaryAckOp.java   |  3 --
 .../geode/cache/client/internal/PutOp.java    |  4 +-
 .../client/internal/ReadyForEventsOp.java     |  3 --
 .../cache/client/internal/RollbackOp.java     |  3 --
 .../geode/cache/client/internal/SizeOp.java   |  3 --
 .../cache/client/internal/TXFailoverOp.java   |  3 --
 .../client/internal/TXSynchronizationOp.java  |  3 --
 .../cache/tier/sockets/ServerConnection.java  |  6 +--
 .../client/internal/GatewaySenderBatchOp.java |  3 --
 17 files changed, 33 insertions(+), 64 deletions(-)

diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/AbstractOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/AbstractOp.java
index 5f440588f6a..a706a2950e9 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/AbstractOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/AbstractOp.java
@@ -140,28 +140,10 @@ protected void sendMessage(Connection cnx) throws Exception {
   }
 
   /**
-   * New implementations of AbstractOp should override this method to return false if the
-   * implementation should be excluded from client authentication. e.g. PingOp#needsUserId()
-   * <P/>
-   * Also, such an operation's <code>MessageType</code> must be added in the 'if' condition in
-   * {@link ServerConnection#updateAndGetSecurityPart()}
-   *
-   * @return boolean
-   * @see AbstractOp#sendMessage(Connection)
-   * @see AbstractOp#processSecureBytes(Connection, Message)
-   * @see ServerConnection#updateAndGetSecurityPart()
-   */
-  protected boolean needsUserId() {
-    return true;
-  }
-
-  /**
-   * New implementations of AbstractOp should override this method if the implementation should be
-   * excluded from client authentication. e.g. PingOp#processSecureBytes(Connection cnx, Message
-   * message)
+   * Process the security information in a response from the server.  If the server
+   * sends a security "part" we must process it so all subclasses should allow this
+   * method to be invoked.
    *
-   * @see AbstractOp#sendMessage(Connection)
-   * @see AbstractOp#needsUserId()
    * @see ServerConnection#updateAndGetSecurityPart()
    */
   protected void processSecureBytes(Connection cnx, Message message) throws Exception {
@@ -187,6 +169,21 @@ protected void processSecureBytes(Connection cnx, Message message) throws Except
     }
   }
 
+  /**
+   * New implementations of AbstractOp should override this method to return false if the
+   * implementation should be excluded from client authentication. e.g. PingOp#needsUserId()
+   * <P/>
+   * Also, such an operation's <code>MessageType</code> must be added in the 'if' condition in
+   * {@link ServerConnection#updateAndGetSecurityPart()}
+   *
+   * @return boolean
+   * @see AbstractOp#sendMessage(Connection)
+   * @see ServerConnection#updateAndGetSecurityPart()
+   */
+  protected boolean needsUserId() {
+    return true;
+  }
+
   /**
    * Attempts to read a response to this operation by reading it from the given connection, and
    * returning it.
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/CloseConnectionOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/CloseConnectionOp.java
index ffcdc39c3ba..ea8a8b5f9eb 100755
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/CloseConnectionOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/CloseConnectionOp.java
@@ -53,9 +53,6 @@ public CloseConnectionOpImpl(boolean keepAlive) {
       getMessage().addRawPart(new byte[] {(byte) (keepAlive ? 1 : 0)}, false);
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/CommitOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/CommitOp.java
index edffb2b18bd..f44d62da433 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/CommitOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/CommitOp.java
@@ -71,9 +71,6 @@ protected Object processResponse(Message msg) throws Exception {
       return rcs;
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPRMetaDataOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPRMetaDataOp.java
index ec843c3f673..cc2541652dd 100755
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPRMetaDataOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPRMetaDataOp.java
@@ -67,6 +67,17 @@ public GetClientPRMetaDataOpImpl(String regionFullPath, ClientMetadataService cm
       getMessage().addStringPart(regionFullPath);
     }
 
+    @Override
+    protected boolean needsUserId() {
+      return false;
+    }
+
+    @Override
+    protected void sendMessage(Connection cnx) throws Exception {
+      getMessage().clearMessageHasSecurePartFlag();
+      getMessage().send(false);
+    }
+
     @SuppressWarnings("unchecked")
     @Override
     protected Object processResponse(Message msg) throws Exception {
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPartitionAttributesOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPartitionAttributesOp.java
index 49567dd31d9..ba7463ec1cf 100755
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPartitionAttributesOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetClientPartitionAttributesOp.java
@@ -72,9 +72,6 @@ public GetClientPartitionAttributesOpImpl(String regionFullPath) {
       getMessage().addStringPart(regionFullPath);
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetEventValueOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetEventValueOp.java
index 3fb5fcfa497..8804e0516a0 100755
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetEventValueOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/GetEventValueOp.java
@@ -58,9 +58,6 @@ public GetEventValueOpImpl(EventID event, Object callbackArg) {
       }
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/MakePrimaryOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/MakePrimaryOp.java
index e1d3d5030bb..03325072140 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/MakePrimaryOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/MakePrimaryOp.java
@@ -48,9 +48,6 @@ public MakePrimaryOpImpl(boolean sentClientReady) {
       getMessage().addBytesPart(new byte[] {(byte) (sentClientReady ? 0x01 : 0x00)});
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PingOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PingOp.java
index 2e5254226c3..fb07b3986be 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PingOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PingOp.java
@@ -53,6 +53,7 @@ private PingOp() {
 
     @Override
     protected void processSecureBytes(Connection cnx, Message message) throws Exception {
+      super.processSecureBytes(cnx, message);
       Message.MESSAGE_TYPE.set(null);
     }
 
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PrimaryAckOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PrimaryAckOp.java
index e380e99e008..d7d32a7b5af 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PrimaryAckOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PrimaryAckOp.java
@@ -55,9 +55,6 @@ public PrimaryAckOpImpl(List events) {
       }
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PutOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PutOp.java
index 447ed382cda..1390c2d8e97 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/PutOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/PutOp.java
@@ -409,9 +409,7 @@ protected void sendMessage(Connection cnx) throws Exception {
 
     @Override
     protected void processSecureBytes(Connection cnx, Message message) throws Exception {
-      if (!this.isMetaRegionPutOp) {
-        super.processSecureBytes(cnx, message);
-      }
+      super.processSecureBytes(cnx, message);
     }
 
     @Override
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/ReadyForEventsOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/ReadyForEventsOp.java
index f6d0ccb5a98..12e15b47263 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/ReadyForEventsOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/ReadyForEventsOp.java
@@ -47,9 +47,6 @@ public ReadyForEventsOpImpl() {
       super(MessageType.CLIENT_READY, 1);
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/RollbackOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/RollbackOp.java
index 4704f3a3f46..97cb2e61de5 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/RollbackOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/RollbackOp.java
@@ -79,9 +79,6 @@ protected void endAttempt(ConnectionStats stats, long start) {
       stats.endRollback(start, hasTimedOut(), hasFailed());
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/SizeOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/SizeOp.java
index ac8c95e9145..fb3ffecb052 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/SizeOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/SizeOp.java
@@ -74,9 +74,6 @@ protected void endAttempt(ConnectionStats stats, long start) {
       stats.endSize(start, hasTimedOut(), hasFailed());
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXFailoverOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXFailoverOp.java
index 17fc701f6da..0995981cee2 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXFailoverOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXFailoverOp.java
@@ -73,9 +73,6 @@ protected void endAttempt(ConnectionStats stats, long start) {
       stats.endTxFailover(start, hasTimedOut(), hasFailed());
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXSynchronizationOp.java b/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXSynchronizationOp.java
index 0c4086cf23b..a02d46333a7 100644
--- a/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXSynchronizationOp.java
+++ b/geode-core/src/main/java/org/apache/geode/cache/client/internal/TXSynchronizationOp.java
@@ -146,9 +146,6 @@ protected void endAttempt(ConnectionStats stats, long start) {
       stats.endTxSynchronization(start, hasTimedOut(), hasFailed());
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
diff --git a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/ServerConnection.java b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/ServerConnection.java
index 51e398c51ac..be6080ea26a 100644
--- a/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/ServerConnection.java
+++ b/geode-core/src/main/java/org/apache/geode/internal/cache/tier/sockets/ServerConnection.java
@@ -1056,6 +1056,7 @@ public boolean removeUserAuth(Message msg, boolean keepalive) {
   private void setSecurityPart() {
     try {
       this.connectionId = randomConnectionIdGen.nextLong();
+      logger.info("ServerConnection setting connectionId to {} for message {}", connectionId, requestMsg);
       this.securePart = new Part();
       byte[] id = encryptId(this.connectionId, this);
       this.securePart.setPartState(id, false);
@@ -1095,9 +1096,6 @@ public Part updateAndGetSecurityPart() {
   }
 
   public boolean isInternalMessage(Message message, boolean allowOldInternalMessages) {
-    if (message.isSecureMode()) {
-      return false;
-    }
     int messageType = message.getMessageType();
     boolean isInternalMessage = messageType == MessageType.PING
         || messageType == MessageType.USER_CREDENTIAL_MESSAGE
@@ -1107,6 +1105,7 @@ public boolean isInternalMessage(Message message, boolean allowOldInternalMessag
         || messageType == MessageType.TX_SYNCHRONIZATION || messageType == MessageType.COMMIT
         || messageType == MessageType.ROLLBACK || messageType == MessageType.CLOSE_CONNECTION
         || messageType == MessageType.INVALID || messageType == MessageType.PERIODIC_ACK
+        || messageType == MessageType.GET_CLIENT_PR_METADATA
         || messageType == MessageType.GET_CLIENT_PARTITION_ATTRIBUTES;
 
     // we allow older clients to not send credentials for a handful of messages
@@ -1114,7 +1113,6 @@ public boolean isInternalMessage(Message message, boolean allowOldInternalMessag
     // to be performed.
     if (!isInternalMessage && allowOldInternalMessages) {
       isInternalMessage = messageType == MessageType.GETCQSTATS_MSG_TYPE
-          || messageType == MessageType.GET_CLIENT_PR_METADATA
           || messageType == MessageType.MONITORCQ_MSG_TYPE
           || messageType == MessageType.REGISTER_DATASERIALIZERS
           || messageType == MessageType.REGISTER_INSTANTIATORS
diff --git a/geode-wan/src/main/java/org/apache/geode/cache/client/internal/GatewaySenderBatchOp.java b/geode-wan/src/main/java/org/apache/geode/cache/client/internal/GatewaySenderBatchOp.java
index b8616a92366..d7c721d8250 100755
--- a/geode-wan/src/main/java/org/apache/geode/cache/client/internal/GatewaySenderBatchOp.java
+++ b/geode-wan/src/main/java/org/apache/geode/cache/client/internal/GatewaySenderBatchOp.java
@@ -223,9 +223,6 @@ private static int calcPartCount(List events) {
       return numberOfParts;
     }
 
-    @Override
-    protected void processSecureBytes(Connection cnx, Message message) throws Exception {}
-
     @Override
     protected boolean needsUserId() {
       return false;
