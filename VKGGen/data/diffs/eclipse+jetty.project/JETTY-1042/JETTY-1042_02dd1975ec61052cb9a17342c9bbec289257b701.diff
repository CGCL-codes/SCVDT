diff --git a/VERSION.txt b/VERSION.txt
index 3edc0ef961b..12492b8d39b 100644
--- a/VERSION.txt
+++ b/VERSION.txt
@@ -1,5 +1,6 @@
 jetty-7.0.0.M4-SNAPSHOT
  + 281059 NPE in QTP with debug on
+ + JETTY-1042 Prevent cookie leak between shared connection
 
 jetty-7.0.0.M3 20 June 2009
  + fixed race with expired async listeners
diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/CookieCutter.java b/jetty-server/src/main/java/org/eclipse/jetty/server/CookieCutter.java
index d3e98271ad8..7c6a874fe75 100644
--- a/jetty-server/src/main/java/org/eclipse/jetty/server/CookieCutter.java
+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/CookieCutter.java
@@ -39,95 +39,85 @@
     private static final byte STATE_UNQUOTED_VALUE = 16;
 
     private Cookie[] _cookies;
-    private String[] _fields;
-    int _added=0;
-    boolean _dirty;
-    HttpServletRequest _request;
+    private Cookie[] _lastCookies;
+    Object _lazyFields;
+    int _fields;
     
     public CookieCutter()
-    {
-        
-    }
- 
-    public CookieCutter(HttpServletRequest request)
-    {
-        _request = request;
+    {  
     }
     
     public Cookie[] getCookies()
     {
-        if (_added>0) 
-        {
-            if (!_dirty && _added==_fields.length)
-            {
-                // same cookies as last time!
-                _added=0;
-                return _cookies;
-            }
-            
+        if (_cookies!=null)
+            return _cookies;
+        
+        if (_lastCookies!=null &&
+            _lazyFields!=null &&
+            _fields==LazyList.size(_lazyFields))
+            _cookies=_lastCookies;
+        else
             parseFields();
-        }
+        _lastCookies=_cookies;
         return _cookies;
     }
     
     public void setCookies(Cookie[] cookies)
     {
-        _dirty=false;
-        _added=0;
         _cookies=cookies;
+        _lastCookies=null;
+        _lazyFields=null;
+        _fields=0;
     }
     
     public void reset()
     {
-        _fields=null;
         _cookies=null;
+        _fields=0;
     }
     
     public void addCookieField(String f)
     {
-        if (!_dirty &&
-            _fields!=null && 
-            _fields.length>_added &&
-            _fields[_added].equals(f))
-        {
-            _added++;
+        if (f==null)
             return;
-        }
-        
-        if (_dirty)
-        {
-            _added++;
-            _fields=(String[])LazyList.addToArray(_fields,f,String.class);
-        }
-        else
+        f=f.trim();
+        if (f.length()==0)
+            return;
+            
+        if (LazyList.size(_lazyFields)>_fields)
         {
-            _dirty=true;
-            if (_added>0)
-            {
-                String[] fields=new String[_added+1];
-                System.arraycopy(_fields,0,fields,0,_added);
-                fields[_added++]=f;
-                _fields=fields;
-            }
-            else
+            if (f.equals(LazyList.get(_lazyFields,_fields)))
             {
-                _fields = new String[]{f};
-                _added=1;
+                _fields++;
+                return;
             }
             
+            while (LazyList.size(_lazyFields)>_fields)
+                _lazyFields=LazyList.remove(_lazyFields,_fields);
         }
+        _cookies=null;
+        _lastCookies=null;
+        _lazyFields=LazyList.add(_lazyFields,_fields++,f);
     }
     
+    
     protected void parseFields()
     {
+        _lastCookies=null;
+        _cookies=null;
+        
         Object cookies = null;
 
         int version = 0;
 
+        // delete excess fields
+        while (LazyList.size(_lazyFields)>_fields)
+            _lazyFields=LazyList.remove(_lazyFields,_fields);
+        
         // For each cookie field
-        for (int f=0;f<_added;f++)
+        for (int f=0;f<_fields;f++)
         {
-            String hdr = _fields[f];
+            String hdr = LazyList.get(_lazyFields,f);
             
             // Parse the header
             String name = null;
@@ -152,8 +142,6 @@ protected void parseFields()
                             case STATE_UNQUOTED_VALUE:
                                 state = STATE_NAME;
                                 value = hdr.substring(tokenstart, i).trim();
-                                if(_request!=null && _request.isRequestedSessionIdFromURL())
-                                    value = URIUtil.decodePath(value);
                                 tokenstart = i + 1;
                                 break;
                             case STATE_NAME:
@@ -218,8 +206,6 @@ protected void parseFields()
                     {
                         case STATE_UNQUOTED_VALUE:
                             value = hdr.substring(tokenstart).trim();
-                            if(_request!=null && _request.isRequestedSessionIdFromURL())
-                                value = URIUtil.decodePath(value);
                             break;
                         case STATE_NAME:
                             name = hdr.substring(tokenstart);
@@ -276,21 +262,8 @@ else if ("$version".equals(lowercaseName))
             }
         }
 
-        int l = LazyList.size(cookies);
-        if (l>0)
-        {
-            if (_cookies != null && _cookies.length == l) 
-            {
-                for (int i = 0; i < l; i++)
-                    _cookies[i] = (Cookie) LazyList.get(cookies, i);
-            }
-            else
-                _cookies = (Cookie[]) LazyList.toArray(cookies,Cookie.class);
-        }
-        
-        _added=0;
-        _dirty=false;
-        
+        _cookies = (Cookie[]) LazyList.toArray(cookies,Cookie.class);
+        _lastCookies=_cookies;
     }
     
 }
diff --git a/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java b/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java
index 9734b04f8bf..53759947d5e 100644
--- a/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java
+++ b/jetty-server/src/main/java/org/eclipse/jetty/server/Request.java
@@ -433,27 +433,24 @@ public String getContextPath()
         if (_cookiesExtracted) 
             return _cookies==null?null:_cookies.getCookies();
 
+        _cookiesExtracted = true;
+        
+        Enumeration enm = _connection.getRequestFields().getValues(HttpHeaders.COOKIE_BUFFER);
+        
         // Handle no cookies
-        if (!_connection.getRequestFields().containsKey(HttpHeaders.COOKIE_BUFFER))
+        if (enm!=null)
         {
-            _cookiesExtracted = true;
-            if (_cookies!=null)
-                _cookies.reset();
-            return null;
-        }
-
-        if (_cookies==null)
-            _cookies=new CookieCutter(this);
+            if (_cookies==null)
+                _cookies=new CookieCutter();
 
-        Enumeration enm = _connection.getRequestFields().getValues(HttpHeaders.COOKIE_BUFFER);
-        while (enm.hasMoreElements())
-        {
-            String c = (String)enm.nextElement();
-            _cookies.addCookieField(c);
+            while (enm.hasMoreElements())
+            {
+                String c = (String)enm.nextElement();
+                _cookies.addCookieField(c);
+            }
         }
-        _cookiesExtracted=true;
 
-        return _cookies.getCookies();
+        return _cookies==null?null:_cookies.getCookies();
     }
 
     /* ------------------------------------------------------------ */
@@ -1308,13 +1305,16 @@ protected void recycle()
         if(_attributes!=null)
             _attributes.clearAttributes();
         _characterEncoding=null;
-        _queryEncoding=null;
+        if (_cookies!=null)
+            _cookies.reset();
+        _cookiesExtracted=false;
         _context=null;
         _serverName=null;
         _method=null;
         _pathInfo=null;
         _port=0;
         _protocol=HttpVersions.HTTP_1_1;
+        _queryEncoding=null;
         _queryString=null;
         _requestedSessionId=null;
         _requestedSessionIdFromCookie=false;
@@ -1332,7 +1332,6 @@ protected void recycle()
         _paramsExtracted=false;
         _inputState=__NONE;
         
-        _cookiesExtracted=false;
         if (_savedNewSessions!=null)
             _savedNewSessions.clear();
         _savedNewSessions=null;
@@ -1571,7 +1570,7 @@ public void setContextPath(String contextPath)
     public void setCookies(Cookie[] cookies)
     {
         if (_cookies==null)
-            _cookies=new CookieCutter(this);
+            _cookies=new CookieCutter();
         _cookies.setCookies(cookies);
     }
 
