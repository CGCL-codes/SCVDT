diff --git a/CHANGELOG.md b/CHANGELOG.md
index 43e0c5bf1..63e02bc81 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -6,9 +6,12 @@
 ## 4.1.12
 
 ### 新特性
+* 【core】         ExcelReader.read方法返回的Map默认有序
+
 ### Bug修复
 * 【core】         修复ZipUtil以及FileUtil中slip漏洞（issue#162@Github）
 * 【core】         修复ZipUtil路径问题（issue#IMUEK@Gitee）
+* 【core】         修复FileUtil.getParent方法获取父路径不严格导致空指针问题
 
 -------------------------------------------------------------------------------------------------------------
 
diff --git a/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java b/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
index 4a2862ca8..5235d5161 100644
--- a/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/collection/IterUtil.java
@@ -8,6 +8,7 @@
 import java.util.Map;
 import java.util.Map.Entry;
 
+import cn.hutool.core.map.MapUtil;
 import cn.hutool.core.util.ArrayUtil;
 import cn.hutool.core.util.ReflectUtil;
 import cn.hutool.core.util.StrUtil;
@@ -354,7 +355,7 @@ public static boolean isAllNull(Iterator<?> iter) {
 		}
 		return map;
 	}
-
+	
 	/**
 	 * 将键列表和值列表转换为Map<br>
 	 * 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br>
@@ -368,9 +369,26 @@ public static boolean isAllNull(Iterator<?> iter) {
 	 * @since 3.1.0
 	 */
 	public static <K, V> Map<K, V> toMap(Iterable<K> keys, Iterable<V> values) {
-		return toMap(null == keys ? null : keys.iterator(), null == values ? null : values.iterator());
+		return toMap(keys, values, false);
 	}
 
+	/**
+	 * 将键列表和值列表转换为Map<br>
+	 * 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br>
+	 * 如果值多于键，忽略多余的值。
+	 * 
+	 * @param <K> 键类型
+	 * @param <V> 值类型
+	 * @param keys 键列表
+	 * @param values 值列表
+	 * @param isOrder 是否有序
+	 * @return 标题内容Map
+	 * @since 4.1.12
+	 */
+	public static <K, V> Map<K, V> toMap(Iterable<K> keys, Iterable<V> values, boolean isOrder) {
+		return toMap(null == keys ? null : keys.iterator(), null == values ? null : values.iterator(), isOrder);
+	}
+	
 	/**
 	 * 将键列表和值列表转换为Map<br>
 	 * 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br>
@@ -384,7 +402,24 @@ public static boolean isAllNull(Iterator<?> iter) {
 	 * @since 3.1.0
 	 */
 	public static <K, V> Map<K, V> toMap(Iterator<K> keys, Iterator<V> values) {
-		final Map<K, V> resultMap = new HashMap<>();
+		return toMap(keys, values, false);
+	}
+
+	/**
+	 * 将键列表和值列表转换为Map<br>
+	 * 以键为准，值与键位置需对应。如果键元素数多于值元素，多余部分值用null代替。<br>
+	 * 如果值多于键，忽略多余的值。
+	 * 
+	 * @param <K> 键类型
+	 * @param <V> 值类型
+	 * @param keys 键列表
+	 * @param values 值列表
+	 * @param isOrder 是否有序
+	 * @return 标题内容Map
+	 * @since 4.1.12
+	 */
+	public static <K, V> Map<K, V> toMap(Iterator<K> keys, Iterator<V> values, boolean isOrder) {
+		final Map<K, V> resultMap = MapUtil.newHashMap(isOrder);
 		if (isNotEmpty(keys)) {
 			while (keys.hasNext()) {
 				resultMap.put(keys.next(), (null != values && values.hasNext()) ? values.next() : null);
diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
index 87cb5c222..c5f2c4cae 100644
--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
@@ -3192,7 +3192,12 @@ public static File getParent(File file, int level) {
 			return file;
 		}
 
-		final File parentFile = file.getParentFile();
+		File parentFile;
+		try {
+			parentFile = file.getCanonicalFile().getParentFile();
+		} catch (IOException e) {
+			throw new IORuntimeException(e);
+		}
 		if (1 == level) {
 			return parentFile;
 		}
@@ -3210,16 +3215,18 @@ public static File getParent(File file, int level) {
 	 * @throws IllegalArgumentException 检查创建的子文件不在父目录中抛出此异常
 	 */
 	public static File checkSlip(File parentFile, File file) throws IllegalArgumentException {
-		String parentCanonicalPath;
-		String canonicalPath;
-		try {
-			parentCanonicalPath = parentFile.getCanonicalPath();
-			canonicalPath = file.getCanonicalPath();
-		} catch (IOException e) {
-			throw new IORuntimeException(e);
-		}
-		if (false == canonicalPath.startsWith(parentCanonicalPath)) {
-			throw new IllegalArgumentException("New file is outside of the parent dir: " + file.getName());
+		if(null != parentFile && null != file) {
+			String parentCanonicalPath;
+			String canonicalPath;
+			try {
+				parentCanonicalPath = parentFile.getCanonicalPath();
+				canonicalPath = file.getCanonicalPath();
+			} catch (IOException e) {
+				throw new IORuntimeException(e);
+			}
+			if (false == canonicalPath.startsWith(parentCanonicalPath)) {
+				throw new IllegalArgumentException("New file is outside of the parent dir: " + file.getName());
+			}
 		}
 		return file;
 	}
diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
index 985a9fbbc..7c621b2d6 100644
--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
@@ -156,11 +156,14 @@ public static File zip(File zipFile, Charset charset, boolean withSrcDir, File..
 		try (ZipOutputStream out = getZipOutputStream(zipFile, charset)) {
 			String srcRootDir;
 			for (File srcFile : srcFiles) {
+				if(null == srcFile) {
+					continue;
+				}
 				// 如果只是压缩一个文件，则需要截取该文件的父目录
 				srcRootDir = srcFile.getCanonicalPath();
 				if (srcFile.isFile() || withSrcDir) {
 					//若是文件，则将父目录完整路径都截取掉；若设置包含目录，则将上级目录全部截取掉，保留本目录名
-					srcRootDir = srcFile.getParentFile().getCanonicalPath();
+					srcRootDir = srcFile.getCanonicalFile().getParentFile().getCanonicalPath();
 				}
 				// 调用递归压缩方法进行目录或文件压缩
 				zip(srcFile, srcRootDir, out);
@@ -766,13 +769,16 @@ private static void addDir(String path, ZipOutputStream out) throws UtilExceptio
 	 */
 	private static void validateFiles(File zipFile, File... srcFiles) throws UtilException {
 		for (File srcFile : srcFiles) {
+			if(null == srcFile) {
+				continue;
+			}
 			if (false == srcFile.exists()) {
 				throw new UtilException(StrUtil.format("File [{}] not exist!", srcFile.getAbsolutePath()));
 			}
 
 			try {
 				// 压缩文件不能位于被压缩的目录内
-				if (srcFile.isDirectory() && zipFile.getParent().contains(srcFile.getCanonicalPath())) {
+				if (srcFile.isDirectory() && zipFile.getCanonicalPath().contains(srcFile.getCanonicalPath())) {
 					throw new UtilException("[zipPath] must not be the child directory of [srcPath]!");
 				}
 
diff --git a/hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java b/hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
index cf0486ad5..36e844fd5 100644
--- a/hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
+++ b/hutool-core/src/test/java/cn/hutool/core/util/ZipUtilTest.java
@@ -16,6 +16,7 @@
  */
 public class ZipUtilTest {
 	
+	
 	@Test
 	@Ignore
 	public void zipDirTest() {
diff --git a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
index 277ee29f8..b6324ac4d 100644
--- a/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
+++ b/hutool-poi/src/main/java/cn/hutool/poi/excel/ExcelReader.java
@@ -303,7 +303,7 @@ public ExcelReader removeHeaderAlias(String header) {
 					if (null == rowList) {
 						rowList = new ArrayList<>(0);
 					}
-					result.add(IterUtil.toMap(aliasHeader(headerList), rowList));
+					result.add(IterUtil.toMap(aliasHeader(headerList), rowList, true));
 				}
 			}
 		}
