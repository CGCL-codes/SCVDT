diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
index bd43dabc6..a7583be50 100644
--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
@@ -313,21 +313,20 @@ public static File file(String path) {
 	}
 
 	/**
-	 * 创建File对象
+	 * 创建File对象<br>
+	 * 此方法会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
 	 * 
 	 * @param parent 父目录
 	 * @param path 文件路径
 	 * @return File
 	 */
 	public static File file(String parent, String path) {
-		if (StrUtil.isBlank(path)) {
-			throw new NullPointerException("File path is blank!");
-		}
-		return new File(parent, path);
+		return file(new File(parent), path);
 	}
 
 	/**
-	 * 创建File对象
+	 * 创建File对象<br>
+	 * 此方法会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
 	 * 
 	 * @param parent 父文件对象
 	 * @param path 文件路径
@@ -337,11 +336,14 @@ public static File file(File parent, String path) {
 		if (StrUtil.isBlank(path)) {
 			throw new NullPointerException("File path is blank!");
 		}
-		return new File(parent, path);
+		final File file = new File(parent, path);
+		checkSlip(parent, file);
+		return file;
 	}
 
 	/**
-	 * 通过多层目录参数创建文件
+	 * 通过多层目录参数创建文件<br>
+	 * 此方法会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
 	 * 
 	 * @param directory 父目录
 	 * @param names 元素名（多层目录名）
@@ -357,7 +359,7 @@ public static File file(File directory, String... names) {
 		File file = directory;
 		for (String name : names) {
 			if (null != name) {
-				file = new File(file, name);
+				file = file(file, name);
 			}
 		}
 		return file;
@@ -379,9 +381,9 @@ public static File file(String... names) {
 		File file = null;
 		for (String name : names) {
 			if (file == null) {
-				file = new File(name);
+				file = file(name);
 			} else {
-				file = new File(file, name);
+				file = file(file, name);
 			}
 		}
 		return file;
@@ -3194,4 +3196,27 @@ public static File getParent(File file, int level) {
 		}
 		return getParent(parentFile, level - 1);
 	}
+	
+	/**
+	 * 检查
+	 * <p>
+	 * 见http://blog.nsfocus.net/zip-slip-2/
+	 * 
+	 * @param parentFile 父文件或目录
+	 * @param file 子文件或目录
+	 * @throws IllegalArgumentException 检查创建的子文件不在父目录中抛出此异常
+	 */
+	public static void checkSlip(File parentFile, File file) throws IllegalArgumentException {
+		String parentCanonicalPath;
+		String canonicalPath;
+		try {
+			parentCanonicalPath = parentFile.getCanonicalPath();
+			canonicalPath = file.getCanonicalPath();
+		} catch (IOException e) {
+			throw new IORuntimeException(e);
+		}
+		if (false == canonicalPath.startsWith(parentCanonicalPath)) {
+			throw new IllegalArgumentException("New file is outside of the parent dir: " + file.getName());
+		}
+	}
 }
diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
index ec6a6a4c3..a7a47a97b 100644
--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
@@ -386,7 +386,8 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 			File outItemFile = null;
 			while (em.hasMoreElements()) {
 				zipEntry = em.nextElement();
-				outItemFile = new File(outFile, zipEntry.getName());
+				//FileUtil.file会检查slip漏洞，漏洞说明见http://blog.nsfocus.net/zip-slip-2/
+				outItemFile = FileUtil.file(outFile, zipEntry.getName());
 				if (zipEntry.isDirectory()) {
 					outItemFile.mkdirs();
 				} else {
@@ -401,7 +402,7 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 		}
 		return outFile;
 	}
-	
+
 	/**
 	 * 从Zip文件中提取指定的文件为bytes
 	 * 
@@ -413,7 +414,7 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 	public static byte[] unzipFileBytes(String zipFilePath, String name) {
 		return unzipFileBytes(zipFilePath, DEFAULT_CHARSET, name);
 	}
-	
+
 	/**
 	 * 从Zip文件中提取指定的文件为bytes
 	 * 
@@ -426,7 +427,7 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 	public static byte[] unzipFileBytes(String zipFilePath, Charset charset, String name) {
 		return unzipFileBytes(FileUtil.file(zipFilePath), charset, name);
 	}
-	
+
 	/**
 	 * 从Zip文件中提取指定的文件为bytes
 	 * 
@@ -438,7 +439,7 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 	public static byte[] unzipFileBytes(File zipFile, String name) {
 		return unzipFileBytes(zipFile, DEFAULT_CHARSET, name);
 	}
-	
+
 	/**
 	 * 从Zip文件中提取指定的文件为bytes
 	 * 
@@ -459,7 +460,7 @@ public static File unzip(File zipFile, File outFile, Charset charset) throws Uti
 				zipEntry = em.nextElement();
 				if (zipEntry.isDirectory()) {
 					continue;
-				} else if(name.equals(zipEntry.getName())){
+				} else if (name.equals(zipEntry.getName())) {
 					return IoUtil.readBytes(zipFileObj.getInputStream(zipEntry));
 				}
 			}
@@ -567,7 +568,7 @@ public static String unGzip(byte[] buf, String charset) throws UtilException {
 	}
 
 	// ----------------------------------------------------------------------------- Zlib
-	
+
 	/**
 	 * Zlib压缩处理
 	 * 
@@ -580,7 +581,7 @@ public static String unGzip(byte[] buf, String charset) throws UtilException {
 	public static byte[] zlib(String content, String charset, int level) {
 		return zlib(StrUtil.bytes(content, charset), level);
 	}
-	
+
 	/**
 	 * Zlib压缩文件
 	 * 
@@ -592,7 +593,7 @@ public static String unGzip(byte[] buf, String charset) throws UtilException {
 	public static byte[] zlib(File file, int level) {
 		final ByteArrayOutputStream out = new ByteArrayOutputStream();
 		BufferedInputStream in = null;
-		try{
+		try {
 			in = FileUtil.getInputStream(file);
 			deflater(in, out, level);
 		} finally {
@@ -615,7 +616,7 @@ public static String unGzip(byte[] buf, String charset) throws UtilException {
 		deflater(in, out, level);
 		return out.toByteArray();
 	}
-	
+
 	/**
 	 * Zlib解压缩处理
 	 * 
