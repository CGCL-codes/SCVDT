diff --git a/CHANGELOG.md b/CHANGELOG.md
index cd0e9ea9e..43e0c5bf1 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -8,6 +8,7 @@
 ### 新特性
 ### Bug修复
 * 【core】         修复ZipUtil以及FileUtil中slip漏洞（issue#162@Github）
+* 【core】         修复ZipUtil路径问题（issue#IMUEK@Gitee）
 
 -------------------------------------------------------------------------------------------------------------
 
diff --git a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
index a7583be50..87cb5c222 100644
--- a/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/io/FileUtil.java
@@ -336,9 +336,7 @@ public static File file(File parent, String path) {
 		if (StrUtil.isBlank(path)) {
 			throw new NullPointerException("File path is blank!");
 		}
-		final File file = new File(parent, path);
-		checkSlip(parent, file);
-		return file;
+		return checkSlip(parent, new File(parent, path));
 	}
 
 	/**
@@ -3167,7 +3165,11 @@ public static File getWebRoot() {
 	 */
 	public static String getParent(String filePath, int level) {
 		final File parent = getParent(file(filePath), level);
-		return null == parent ? null : parent.getAbsolutePath();
+		try {
+			return null == parent ? null : parent.getCanonicalPath();
+		} catch (IOException e) {
+			throw new IORuntimeException(e);
+		}
 	}
 
 	/**
@@ -3204,9 +3206,10 @@ public static File getParent(File file, int level) {
 	 * 
 	 * @param parentFile 父文件或目录
 	 * @param file 子文件或目录
+	 * @return 子文件或目录
 	 * @throws IllegalArgumentException 检查创建的子文件不在父目录中抛出此异常
 	 */
-	public static void checkSlip(File parentFile, File file) throws IllegalArgumentException {
+	public static File checkSlip(File parentFile, File file) throws IllegalArgumentException {
 		String parentCanonicalPath;
 		String canonicalPath;
 		try {
@@ -3218,5 +3221,6 @@ public static void checkSlip(File parentFile, File file) throws IllegalArgumentE
 		if (false == canonicalPath.startsWith(parentCanonicalPath)) {
 			throw new IllegalArgumentException("New file is outside of the parent dir: " + file.getName());
 		}
+		return file;
 	}
 }
diff --git a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
index a7a47a97b..985a9fbbc 100644
--- a/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
+++ b/hutool-core/src/main/java/cn/hutool/core/util/ZipUtil.java
@@ -131,8 +131,8 @@ public static File zip(String srcPath, String zipPath, Charset charset, boolean
 	 * 使用默认UTF-8编码
 	 * 
 	 * @param zipFile 生成的Zip文件，包括文件名。注意：zipPath不能是srcPath路径下的子文件夹
-	 * @param withSrcDir 是否包含被打包目录
-	 * @param srcFiles 要压缩的源文件或目录。如果压缩一个文件，则为该文件的全路径；如果压缩一个目录，则为该目录的顶层目录路径
+	 * @param withSrcDir 是否包含被打包目录，只针对压缩目录有效。若为false，则只压缩目录下的文件或目录，为true则将本目录也压缩
+	 * @param srcFiles 要压缩的源文件或目录。
 	 * @return 压缩文件
 	 * @throws UtilException IO异常
 	 */
@@ -145,7 +145,7 @@ public static File zip(File zipFile, boolean withSrcDir, File... srcFiles) throw
 	 * 
 	 * @param zipFile 生成的Zip文件，包括文件名。注意：zipPath不能是srcPath路径下的子文件夹
 	 * @param charset 编码
-	 * @param withSrcDir 是否包含被打包目录
+	 * @param withSrcDir 是否包含被打包目录，只针对压缩目录有效。若为false，则只压缩目录下的文件或目录，为true则将本目录也压缩
 	 * @param srcFiles 要压缩的源文件或目录。如果压缩一个文件，则为该文件的全路径；如果压缩一个目录，则为该目录的顶层目录路径
 	 * @return 压缩文件
 	 * @throws UtilException IO异常
@@ -159,7 +159,8 @@ public static File zip(File zipFile, Charset charset, boolean withSrcDir, File..
 				// 如果只是压缩一个文件，则需要截取该文件的父目录
 				srcRootDir = srcFile.getCanonicalPath();
 				if (srcFile.isFile() || withSrcDir) {
-					srcRootDir = srcFile.getParent();
+					//若是文件，则将父目录完整路径都截取掉；若设置包含目录，则将上级目录全部截取掉，保留本目录名
+					srcRootDir = srcFile.getParentFile().getCanonicalPath();
 				}
 				// 调用递归压缩方法进行目录或文件压缩
 				zip(srcFile, srcRootDir, out);
@@ -668,10 +669,12 @@ private static ZipOutputStream getZipOutputStream(OutputStream out, Charset char
 	}
 
 	/**
-	 * 递归压缩文件夹
+	 * 递归压缩文件夹<br>
+	 * srcRootDir决定了路径截取的位置，例如：<br>
+	 * file的路径为d:/a/b/c/d.txt，srcRootDir为d:/a/b，则压缩后的文件与目录为结构为c/d.txt
 	 * 
 	 * @param out 压缩文件存储对象
-	 * @param srcRootDir 压缩文件夹根目录的子路径
+	 * @param srcRootDir 被压缩的文件夹根目录
 	 * @param file 当前递归压缩的文件或目录对象
 	 * @throws UtilException IO异常
 	 */
diff --git a/hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java b/hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
index 1dca59c8b..0885f4258 100644
--- a/hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
+++ b/hutool-core/src/test/java/cn/hutool/core/io/FileUtilTest.java
@@ -19,6 +19,15 @@
  * @author Looly
  */
 public class FileUtilTest {
+	
+	@Test(expected = IllegalArgumentException.class)
+	public void fileTest() {
+		File file = FileUtil.file("d:/aaa", "bbb");
+		Assert.assertNotNull(file);
+		
+		//构建目录中出现非子目录抛出异常
+		FileUtil.file(file, "../ccc");
+	}
 
 	@Test
 	public void getAbsolutePathTest() {
