commit 5d5c55e2c353422f1c540591953836d9ac4d47c4
Author:     Mark Thomas <markt@apache.org>
AuthorDate: Fri Apr 25 10:28:18 2014 +0000
Commit:     Mark Thomas <markt@apache.org>
CommitDate: Fri Apr 25 10:28:18 2014 +0000

    More defensive coding around some XML activities that are triggered by web applications and are therefore at potential risk of a memory leak.
    This is part 3 of 7 of the fix for CVE-2014-0119
    
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1589980 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/jasper/compiler/TagPluginManager.java b/java/org/apache/jasper/compiler/TagPluginManager.java
index e6d6cafc32..3d2f205fe7 100644
--- a/java/org/apache/jasper/compiler/TagPluginManager.java
+++ b/java/org/apache/jasper/compiler/TagPluginManager.java
@@ -18,6 +18,7 @@ package org.apache.jasper.compiler;
 
 import java.io.IOException;
 import java.net.URL;
+import java.security.AccessController;
 import java.util.Enumeration;
 import java.util.HashMap;
 import java.util.Map;
@@ -29,6 +30,8 @@ import org.apache.jasper.JasperException;
 import org.apache.jasper.compiler.tagplugin.TagPlugin;
 import org.apache.jasper.compiler.tagplugin.TagPluginContext;
 import org.apache.tomcat.util.descriptor.tagplugin.TagPluginParser;
+import org.apache.tomcat.util.security.PrivilegedGetTccl;
+import org.apache.tomcat.util.security.PrivilegedSetTccl;
 import org.xml.sax.SAXException;
 
 /**
@@ -71,7 +74,34 @@ public class TagPluginManager {
             blockExternal = Boolean.parseBoolean(blockExternalString);
         }
 
-        TagPluginParser parser = new TagPluginParser(ctxt, blockExternal);
+        TagPluginParser parser;
+        ClassLoader original;
+        if (Constants.IS_SECURITY_ENABLED) {
+            PrivilegedGetTccl pa = new PrivilegedGetTccl();
+            original = AccessController.doPrivileged(pa);
+            } else {
+                original = Thread.currentThread().getContextClassLoader();
+            }
+        try {
+            if (Constants.IS_SECURITY_ENABLED) {
+                PrivilegedSetTccl pa =
+                        new PrivilegedSetTccl(JspDocumentParser.class.getClassLoader());
+                AccessController.doPrivileged(pa);
+            } else {
+                Thread.currentThread().setContextClassLoader(
+                        JspDocumentParser.class.getClassLoader());
+            }
+
+            parser = new TagPluginParser(ctxt, blockExternal);
+
+        } finally {
+            if (Constants.IS_SECURITY_ENABLED) {
+                PrivilegedSetTccl pa = new PrivilegedSetTccl(original);
+                AccessController.doPrivileged(pa);
+            } else {
+                Thread.currentThread().setContextClassLoader(original);
+            }
+        }
 
         try {
             Enumeration<URL> urls =
