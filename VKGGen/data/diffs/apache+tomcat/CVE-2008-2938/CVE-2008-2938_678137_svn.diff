Index: tc6.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java
===================================================================
--- tc6.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java	(revision 678136)
+++ tc6.0.x/trunk/java/org/apache/catalina/connector/CoyoteAdapter.java	(revision 678137)
@@ -404,6 +404,12 @@
             }
             // Character decoding
             convertURI(decodedURI, request);
+            // Check that the URI is still normalized
+            if (!checkNormalize(req.decodedURI())) {
+                res.setStatus(400);
+                res.setMessage("Invalid URI character encoding");
+                return false;
+            }
         } else {
             // The URL is chars or String, and has been sent using an in-memory
             // protocol handler, we have to assume the URL has been properly
@@ -780,6 +786,67 @@
     }
 
 
+    /**
+     * Check that the URI is normalized following character decoding.
+     * <p>
+     * This method checks for "\", 0, "//", "/./" and "/../". This method will
+     * return false if sequences that are supposed to be normalized are still 
+     * present in the URI.
+     * 
+     * @param uriMB URI to be checked (should be chars)
+     */
+    public static boolean checkNormalize(MessageBytes uriMB) {
+
+        CharChunk uriCC = uriMB.getCharChunk();
+        char[] c = uriCC.getChars();
+        int start = uriCC.getStart();
+        int end = uriCC.getEnd();
+
+        int pos = 0;
+
+        // Check for '\' and 0
+        for (pos = start; pos < end; pos++) {
+            if (c[pos] == '\\') {
+                return false;
+            }
+            if (c[pos] == 0) {
+                return false;
+            }
+        }
+
+        // Check for "//"
+        for (pos = start; pos < (end - 1); pos++) {
+            if (c[pos] == '/') {
+                if (c[pos + 1] == '/') {
+                    return false;
+                }
+            }
+        }
+
+        // Check for ending with "/." or "/.."
+        if (((end - start) >= 2) && (c[end - 1] == '.')) {
+            if ((c[end - 2] == '/') 
+                    || ((c[end - 2] == '.') 
+                    && (c[end - 3] == '/'))) {
+                return false;
+            }
+        }
+
+        // Check for "/./"
+        if (uriCC.indexOf("/./", 0, 3, 0) >= 0) {
+            return false;
+        }
+
+        // Check for "/../"
+        if (uriCC.indexOf("/../", 0, 4, 0) >= 0) {
+            return false;
+        }
+
+        return true;
+
+    }
+
+
     // ------------------------------------------------------ Protected Methods
 
 
Index: tc6.0.x/trunk/webapps/docs/changelog.xml
===================================================================
--- tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 678136)
+++ tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 678137)
@@ -45,6 +45,9 @@
       <update>
         <bug>45285</bug>: Look for annotations in class hierarchy. (markt)
       </update>
+      <fix>
+        Add additional checks for URI normalization. (remm)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Jasper">
