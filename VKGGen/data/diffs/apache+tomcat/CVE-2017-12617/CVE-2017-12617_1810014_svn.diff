Index: tc7.0.x/trunk/java/org/apache/naming/resources/FileDirContext.java
===================================================================
--- tc7.0.x/trunk/java/org/apache/naming/resources/FileDirContext.java	(revision 1810013)
+++ tc7.0.x/trunk/java/org/apache/naming/resources/FileDirContext.java	(revision 1810014)
@@ -810,7 +810,7 @@
 
 
     protected File validate(File file, String name, boolean mustExist, String absoluteBase,
-    		String canonicalBase) {
+            String canonicalBase) {
 
         // If the requested names ends in '/', the Java File API will return a
         // matching file if one exists. This isn't what we want as it is not
Index: tc7.0.x/trunk/java/org/apache/naming/resources/VirtualDirContext.java
===================================================================
--- tc7.0.x/trunk/java/org/apache/naming/resources/VirtualDirContext.java	(revision 1810013)
+++ tc7.0.x/trunk/java/org/apache/naming/resources/VirtualDirContext.java	(revision 1810014)
@@ -330,9 +330,9 @@
             return null;
         }
     }
-    
-    
+
+
     protected File validate(File file, String name, boolean mustExist, String absoluteBase) {
-    	return validate(file, name, mustExist, normalize(absoluteBase), absoluteBase);
+        return validate(file, name, mustExist, normalize(absoluteBase), absoluteBase);
     }
 }
