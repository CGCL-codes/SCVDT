commit f1b85da754c4760787d68a99e839b50878140b57
Author:     Mark Thomas <markt@apache.org>
AuthorDate: Sat Jun 30 20:40:20 2018 +0000
Commit:     Mark Thomas <markt@apache.org>
CommitDate: Sat Jun 30 20:40:20 2018 +0000

    Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=62498
    Correct a regression in the fix for CVE-2017-12617 that caused request failures for some requests when using the VirtualDirContext.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc7.0.x/trunk@1834763 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/naming/resources/VirtualDirContext.java b/java/org/apache/naming/resources/VirtualDirContext.java
index 8497ff2007..617b046cd9 100644
--- a/java/org/apache/naming/resources/VirtualDirContext.java
+++ b/java/org/apache/naming/resources/VirtualDirContext.java
@@ -212,7 +212,8 @@ public class VirtualDirContext extends FileDirContext {
                     }
                 }
             }
-            if (name.startsWith(path + "/")) {
+            path += "/";
+            if (name.startsWith(path)) {
                 String res = name.substring(path.length());
                 for (String resourcesDir : dirList) {
                     file = new File(resourcesDir, res);
diff --git a/test/org/apache/naming/resources/TestVirtualDirContext.java b/test/org/apache/naming/resources/TestVirtualDirContext.java
new file mode 100644
index 0000000000..1aedcd3fe7
--- /dev/null
+++ b/test/org/apache/naming/resources/TestVirtualDirContext.java
@@ -0,0 +1,102 @@
+/*
+ * Licensed to the Apache Software Foundation (ASF) under one or more
+ * contributor license agreements.  See the NOTICE file distributed with
+ * this work for additional information regarding copyright ownership.
+ * The ASF licenses this file to You under the Apache License, Version 2.0
+ * (the "License"); you may not use this file except in compliance with
+ * the License.  You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package org.apache.naming.resources;
+
+import java.io.File;
+
+import javax.naming.NamingException;
+
+import org.junit.Assert;
+import org.junit.Test;
+
+import org.apache.catalina.startup.LoggingBaseTest;
+
+public class TestVirtualDirContext {
+
+    @Test
+    public void testBug62498() throws NamingException {
+        VirtualDirContext vdc = new VirtualDirContext();
+        // No docBase
+        vdc.setExtraResourcePaths("/=" + LoggingBaseTest.getBuildDirectory().getAbsolutePath());
+
+        vdc.allocate();
+
+        File f1 = vdc.file("");
+        Assert.assertNotNull(f1);
+        File f2 = vdc.file("/");
+        Assert.assertNotNull(f2);
+        Assert.assertEquals(f1.getAbsolutePath(), f2.getAbsolutePath());
+
+        Object obj1 = vdc.lookup("");
+        Assert.assertTrue(obj1 instanceof FileDirContext);
+        Object obj2 = vdc.lookup("/");
+        Assert.assertTrue(obj2 instanceof FileDirContext);
+        Assert.assertEquals(((FileDirContext) obj1).absoluteBase, ((FileDirContext) obj2).absoluteBase);
+    }
+
+
+    @Test
+    public void testBug62498a() {
+        VirtualDirContext vdc = new VirtualDirContext();
+        // No docBase
+        vdc.setExtraResourcePaths("/=" + LoggingBaseTest.getBuildDirectory().getAbsolutePath());
+
+        vdc.allocate();
+
+        File f1 = vdc.file("");
+        Assert.assertNotNull(f1);
+    }
+
+
+    @Test
+    public void testBug62498b() {
+        VirtualDirContext vdc = new VirtualDirContext();
+        // No docBase
+        vdc.setExtraResourcePaths("/=" + LoggingBaseTest.getBuildDirectory().getAbsolutePath());
+
+        vdc.allocate();
+
+        File f2 = vdc.file("/");
+        Assert.assertNotNull(f2);
+    }
+
+
+    @Test
+    public void testBug62498c() throws NamingException {
+        VirtualDirContext vdc = new VirtualDirContext();
+        // No docBase
+        vdc.setExtraResourcePaths("/=" + LoggingBaseTest.getBuildDirectory().getAbsolutePath());
+
+        vdc.allocate();
+
+        Object obj1 = vdc.lookup("");
+        Assert.assertTrue(obj1 instanceof FileDirContext);
+    }
+
+
+    @Test
+    public void testBug62498d() throws NamingException {
+        VirtualDirContext vdc = new VirtualDirContext();
+        // No docBase
+        vdc.setExtraResourcePaths("/=" + LoggingBaseTest.getBuildDirectory().getAbsolutePath());
+
+        vdc.allocate();
+
+        Object obj2 = vdc.lookup("/");
+        Assert.assertTrue(obj2 instanceof FileDirContext);
+    }
+}
diff --git a/webapps/docs/changelog.xml b/webapps/docs/changelog.xml
index 71e9a0615f..c89148f8f2 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -58,6 +58,13 @@
   issues do not "pop up" wrt. others).
 -->
 <section name="Tomcat 7.0.90 (violetagg)">
+  <subsection name="Catalina">
+    <changelog>
+      <fix>62498</fix>: Correct a regression in the fix for CVE-2017-12617 that
+      caused request failures for some requests when using the
+      <code>VirtualDirContext</code>. (markt)
+    </changelog>
+  </subsection>
 </section>
 <section name="Tomcat 7.0.89 (violetagg)">
   <subsection name="Catalina">
