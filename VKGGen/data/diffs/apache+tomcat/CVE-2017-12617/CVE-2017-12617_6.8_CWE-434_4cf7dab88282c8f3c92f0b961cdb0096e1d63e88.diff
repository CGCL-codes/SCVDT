commit 4cf7dab88282c8f3c92f0b961cdb0096e1d63e88
Author:     Mark Thomas <markt@apache.org>
AuthorDate: Fri Sep 22 07:54:31 2017 +0000
Commit:     Mark Thomas <markt@apache.org>
CommitDate: Fri Sep 22 07:54:31 2017 +0000

    Fix https://bz.apache.org/bugzilla/show_bug.cgi?id=61542
    Remainder of fix for CVE-2017-12617
    This ensures that a path specified for creation of a file does not end in '/' since that is dropped by the File API.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/tc8.5.x/trunk@1809274 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/catalina/webresources/DirResourceSet.java b/java/org/apache/catalina/webresources/DirResourceSet.java
index e5b708dd2d..234dc74ecf 100644
--- a/java/org/apache/catalina/webresources/DirResourceSet.java
+++ b/java/org/apache/catalina/webresources/DirResourceSet.java
@@ -217,6 +217,12 @@ public class DirResourceSet extends AbstractFileResourceSet {
             return false;
         }
 
+        // write() is meant to create a file so ensure that the path doesn't
+        // end in '/'
+        if (path.endsWith("/")) {
+            return false;
+        }
+
         File dest = null;
         String webAppMount = getWebAppMount();
         if (path.startsWith(webAppMount)) {
diff --git a/test/org/apache/catalina/webresources/AbstractTestResourceSet.java b/test/org/apache/catalina/webresources/AbstractTestResourceSet.java
index 3b0445ef06..095781ed7d 100644
--- a/test/org/apache/catalina/webresources/AbstractTestResourceSet.java
+++ b/test/org/apache/catalina/webresources/AbstractTestResourceSet.java
@@ -447,14 +447,8 @@ public abstract class AbstractTestResourceSet {
     public final void testWriteDirB() {
         WebResource d1 = resourceRoot.getResource(getMount() + "/d1/");
         InputStream is = new ByteArrayInputStream("test".getBytes());
-        if (d1.exists()) {
+        if (d1.exists() || d1.isVirtual()) {
             Assert.assertFalse(resourceRoot.write(getMount() + "/d1/", is, false));
-        } else if (d1.isVirtual()) {
-            Assert.assertTrue(resourceRoot.write(
-                    getMount() + "/d1/", is, false));
-            File file = new File(getBaseDir(), "d1");
-            Assert.assertTrue(file.exists());
-            Assert.assertTrue(file.delete());
         } else {
             Assert.fail("Unhandled condition in unit test");
         }
@@ -490,6 +484,14 @@ public abstract class AbstractTestResourceSet {
         }
     }
 
+    @Test
+    public final void testWriteWithTrailingSlash() {
+        String newFileName = getNewFileName() + "/";
+        InputStream is = new ByteArrayInputStream("test".getBytes());
+        Assert.assertFalse(resourceRoot.write(
+                getMount() + "/" + newFileName, is, false));
+    }
+
     protected abstract String getNewFileName();
 
     // ------------------------------------------------------ getCanonicalPath()
diff --git a/webapps/docs/changelog.xml b/webapps/docs/changelog.xml
index 6e0e32ff6c..ca9d65f84d 100644
--- a/webapps/docs/changelog.xml
+++ b/webapps/docs/changelog.xml
@@ -57,6 +57,11 @@
         Add an option to reject requests that contain HTTP headers with invalid
         (non-token) header names with a 400 response. (markt)
       </add>
+      <fix>
+        <bug>61542</bug>: Fix CVE-2017-12617 and prevent JSPs from being
+        uploaded via a specially crafted request when HTTP PUT was enabled.
+        (markt)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Coyote">
