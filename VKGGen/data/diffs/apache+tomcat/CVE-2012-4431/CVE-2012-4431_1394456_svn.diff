Index: tc6.0.x/trunk/java/org/apache/catalina/filters/CsrfPreventionFilter.java
===================================================================
--- tc6.0.x/trunk/java/org/apache/catalina/filters/CsrfPreventionFilter.java	(revision 1394455)
+++ tc6.0.x/trunk/java/org/apache/catalina/filters/CsrfPreventionFilter.java	(revision 1394456)
@@ -34,6 +34,7 @@
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
 import javax.servlet.http.HttpServletResponseWrapper;
+import javax.servlet.http.HttpSession;
 
 import org.apache.juli.logging.Log;
 import org.apache.juli.logging.LogFactory;
@@ -154,16 +155,19 @@
                 }
             }
 
+            HttpSession session = req.getSession(false);
+
             @SuppressWarnings("unchecked")
-            LruCache<String> nonceCache =
-                (LruCache<String>) req.getSession(true).getAttribute(
-                    Constants.CSRF_NONCE_SESSION_ATTR_NAME);
-            
+            LruCache<String> nonceCache = (session == null) ? null
+                    : (LruCache<String>) session.getAttribute(
+                            Constants.CSRF_NONCE_SESSION_ATTR_NAME);
+
             if (!skipNonceCheck) {
                 String previousNonce =
                     req.getParameter(Constants.CSRF_NONCE_REQUEST_PARAM);
 
-                if (nonceCache != null && !nonceCache.contains(previousNonce)) {
+                if (nonceCache == null || previousNonce == null ||
+                        !nonceCache.contains(previousNonce)) {
                     res.sendError(HttpServletResponse.SC_FORBIDDEN);
                     return;
                 }
@@ -171,7 +175,10 @@
             
             if (nonceCache == null) {
                 nonceCache = new LruCache<String>(nonceCacheSize);
-                req.getSession().setAttribute(
+                if (session == null) {
+                    session = req.getSession(true);
+                }
+                session.setAttribute(
                         Constants.CSRF_NONCE_SESSION_ATTR_NAME, nonceCache);
             }
             
Index: tc6.0.x/trunk/webapps/docs/changelog.xml
===================================================================
--- tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1394455)
+++ tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1394456)
@@ -214,6 +214,9 @@
         <bug>53830</bug>: Better handling of <code>Manager.randomFile</code>
         default value on Windows. (kkolinko)
       </fix>
+      <fix>
+        Improve session management in CsrfPreventionFilter. (kkolinko)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Coyote">
Index: tc6.0.x/trunk/STATUS.txt
===================================================================
--- tc6.0.x/trunk/STATUS.txt	(revision 1394455)
+++ tc6.0.x/trunk/STATUS.txt	(revision 1394456)
@@ -92,11 +92,6 @@
         requires an update to tcnative:
         https://issues.apache.org/bugzilla/show_bug.cgi?id=53969
 
-* Improve session management in CsrfPreventionFilter
-  (Backport of r1393071 from Tomcat 7)
-  http://people.apache.org/~kkolinko/patches/2012-10-03_tc6_CsrfPreventionFilter.patch
-  +1: kkolinko, markt, kfujino
-  -1:
 
 PATCHES/ISSUES THAT ARE STALLED
 
