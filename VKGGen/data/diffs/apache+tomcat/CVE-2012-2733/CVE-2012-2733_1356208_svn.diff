Index: tc6.0.x/trunk/java/org/apache/coyote/http11/InternalNioInputBuffer.java
===================================================================
--- tc6.0.x/trunk/java/org/apache/coyote/http11/InternalNioInputBuffer.java	(revision 1356207)
+++ tc6.0.x/trunk/java/org/apache/coyote/http11/InternalNioInputBuffer.java	(revision 1356208)
@@ -673,10 +673,6 @@
         
         do {
             status = parseHeader();
-        } while ( status == HeaderParseStatus.HAVE_MORE_HEADERS );
-        if (status == HeaderParseStatus.DONE) {
-            parsingHeader = false;
-            end = pos;
             // Checking that
             // (1) Headers plus request line size does not exceed its limit
             // (2) There are enough bytes to avoid expanding the buffer when
@@ -685,11 +681,15 @@
             // limitation to enforce the meaning of headerBufferSize
             // From the way how buf is allocated and how blank lines are being
             // read, it should be enough to check (1) only.
-            if (end - skipBlankLinesBytes > headerBufferSize
-                    || buf.length - end < socketReadBufferSize) {
+            if (pos - skipBlankLinesBytes > headerBufferSize
+                    || buf.length - pos < socketReadBufferSize) {
                 throw new IllegalArgumentException(
                         sm.getString("iib.requestheadertoolarge.error"));
             }
+        } while ( status == HeaderParseStatus.HAVE_MORE_HEADERS );
+        if (status == HeaderParseStatus.DONE) {
+            parsingHeader = false;
+            end = pos;
             return true;
         } else {
             return false;
Index: tc6.0.x/trunk/webapps/docs/changelog.xml
===================================================================
--- tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1356207)
+++ tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1356208)
@@ -183,6 +183,9 @@
         client disconnects before the response has been fully written from an
         AJP connection using the APR/native connector. (kkolinko)
       </fix>
+      <fix>
+        Improve <code>InternalNioInputBuffer.parseHeaders()</code>. (kkolinko)
+      </fix>
     </changelog>
   </subsection>
   <subsection name="Jasper">
Index: tc6.0.x/trunk/STATUS.txt
===================================================================
--- tc6.0.x/trunk/STATUS.txt	(revision 1356207)
+++ tc6.0.x/trunk/STATUS.txt	(revision 1356208)
@@ -144,12 +144,6 @@
   +1: markt, kfujino
   -1:
 
-* Improve InternalNioInputBuffer.parseHeaders()
-  http://svn.apache.org/viewvc?view=revision&revision=1350294
-  (r1350301 in Tomcat 7)
-  +1: kkolinko, markt, kfujino
-  -1:
-
 * Implement maxHeaderCount attribute on Connector.
   It is equivalent of LimitRequestFields directive of Apache HTTPD
   (backport of r1350295)
Index: tc6.0.x/trunk
===================================================================
--- tc6.0.x/trunk	(revision 1356207)
+++ tc6.0.x/trunk	(revision 1356208)

Property changes on: tc6.0.x/trunk
___________________________________________________________________
Modified: svn:mergeinfo
## -0,0 +0,1 ##
   Merged /tomcat/trunk:r1350294
