commit 8179973033de39e8100c5a7f825a8f05dc775424
Author:     Mark Thomas <markt@apache.org>
AuthorDate: Mon Dec 15 12:48:04 2014 +0000
Commit:     Mark Thomas <markt@apache.org>
CommitDate: Mon Dec 15 12:48:04 2014 +0000

    Remove some more unnecessary code.
    
    git-svn-id: https://svn.apache.org/repos/asf/tomcat/trunk@1645641 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/java/org/apache/jasper/runtime/PageContextImpl.java b/java/org/apache/jasper/runtime/PageContextImpl.java
index 8cc3601efa..49bd1f4dc1 100644
--- a/java/org/apache/jasper/runtime/PageContextImpl.java
+++ b/java/org/apache/jasper/runtime/PageContextImpl.java
@@ -929,37 +929,11 @@ public class PageContextImpl extends PageContext {
             final Class<?> expectedType, final PageContext pageContext,
             final ProtectedFunctionMapper functionMap)
             throws ELException {
-        Object retValue;
         final ExpressionFactory exprFactory = jspf.getJspApplicationContext(pageContext.getServletContext()).getExpressionFactory();
-        if (SecurityUtil.isPackageProtectionEnabled()) {
-            try {
-                retValue = AccessController
-                        .doPrivileged(new PrivilegedExceptionAction<Object>() {
-
-                            @Override
-                            public Object run() throws Exception {
-                                ELContextImpl ctx = (ELContextImpl) pageContext.getELContext();
-                                ctx.setFunctionMapper(functionMap);
-                                ValueExpression ve = exprFactory.createValueExpression(ctx, expression, expectedType);
-                                return ve.getValue(ctx);
-                            }
-                        });
-            } catch (PrivilegedActionException ex) {
-                Exception realEx = ex.getException();
-                if (realEx instanceof ELException) {
-                    throw (ELException) realEx;
-                } else {
-                    throw new ELException(realEx);
-                }
-            }
-        } else {
-            ELContextImpl ctx = (ELContextImpl) pageContext.getELContext();
-            ctx.setFunctionMapper(functionMap);
-            ValueExpression ve = exprFactory.createValueExpression(ctx, expression, expectedType);
-            retValue = ve.getValue(ctx);
-        }
-
-        return retValue;
+        ELContextImpl ctx = (ELContextImpl) pageContext.getELContext();
+        ctx.setFunctionMapper(functionMap);
+        ValueExpression ve = exprFactory.createValueExpression(ctx, expression, expectedType);
+        return ve.getValue(ctx);
     }
 
     @Override
diff --git a/java/org/apache/jasper/security/SecurityClassLoad.java b/java/org/apache/jasper/security/SecurityClassLoad.java
index fc020b39db..109a700c68 100644
--- a/java/org/apache/jasper/security/SecurityClassLoad.java
+++ b/java/org/apache/jasper/security/SecurityClassLoad.java
@@ -91,8 +91,6 @@ public final class SecurityClassLoad {
                 "runtime.PageContextImpl$11");
             loader.loadClass( basePackage +
                 "runtime.PageContextImpl$12");
-            loader.loadClass( basePackage +
-                "runtime.PageContextImpl$13");
 
             loader.loadClass( basePackage +
                 "runtime.JspContextWrapper");
