Index: tc6.0.x/trunk/STATUS.txt
===================================================================
--- tc6.0.x/trunk/STATUS.txt	(revision 1645365)
+++ tc6.0.x/trunk/STATUS.txt	(revision 1645366)
@@ -28,10 +28,7 @@
 PATCHES PROPOSED TO BACKPORT:
   [ New proposals should be added at the end of the list ]
 
-* Fix potential issue when running EL under a security manager
-  http://people.apache.org/~markt/patches/2014-12-09-el-security-manager-tc6-v1.patch
-  +1: markt, kkolinko, remm
-  -1:
+None
 
 
 PATCHES/ISSUES THAT ARE STALLED:
Index: tc6.0.x/trunk/java/javax/el/BeanELResolver.java
===================================================================
--- tc6.0.x/trunk/java/javax/el/BeanELResolver.java	(revision 1645365)
+++ tc6.0.x/trunk/java/javax/el/BeanELResolver.java	(revision 1645366)
@@ -188,26 +188,50 @@
 		return null;
 	}
 
-	protected final static class BeanProperties {
-		private final Map<String, BeanProperty> properties;
+    protected final static class BeanProperties {
+        private final Map<String, BeanProperty> properties;
 
-		private final Class<?> type;
+        private final Class<?> type;
 
-		public BeanProperties(Class<?> type) throws ELException {
-			this.type = type;
-			this.properties = new HashMap<String, BeanProperty>();
-			try {
-				BeanInfo info = Introspector.getBeanInfo(this.type);
-				PropertyDescriptor[] pds = info.getPropertyDescriptors();
-				for (int i = 0; i < pds.length; i++) {
-					this.properties.put(pds[i].getName(), new BeanProperty(
-							type, pds[i]));
-				}
-			} catch (IntrospectionException ie) {
-				throw new ELException(ie);
-			}
-		}
+        public BeanProperties(Class<?> type) throws ELException {
+            this.type = type;
+            this.properties = new HashMap<String, BeanProperty>();
+            try {
+                BeanInfo info = Introspector.getBeanInfo(this.type);
+                PropertyDescriptor[] pds = info.getPropertyDescriptors();
+                for (PropertyDescriptor pd: pds) {
+                    this.properties.put(pd.getName(), new BeanProperty(type, pd));
+                }
+                if (System.getSecurityManager() != null) {
+                    // When running with SecurityManager, some classes may be
+                    // not accessible, but have accessible interfaces.
+                    populateFromInterfaces(type);
+                }
+            } catch (IntrospectionException ie) {
+                throw new ELException(ie);
+            }
+        }
 
+        private void populateFromInterfaces(Class<?> aClass) throws IntrospectionException {
+            Class<?> interfaces[] = aClass.getInterfaces();
+            if (interfaces.length > 0) {
+                for (Class<?> ifs : interfaces) {
+                    BeanInfo info = Introspector.getBeanInfo(ifs);
+                    PropertyDescriptor[] pds = info.getPropertyDescriptors();
+                    for (PropertyDescriptor pd : pds) {
+                        if (!this.properties.containsKey(pd.getName())) {
+                            this.properties.put(pd.getName(), new BeanProperty(
+                                    this.type, pd));
+                        }
+                    }
+                }
+            }
+            Class<?> superclass = aClass.getSuperclass();
+            if (superclass != null) {
+                populateFromInterfaces(superclass);
+            }
+        }
+
 		private BeanProperty get(ELContext ctx, String name) {
 			BeanProperty property = this.properties.get(name);
 			if (property == null) {
Index: tc6.0.x/trunk/webapps/docs/changelog.xml
===================================================================
--- tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1645365)
+++ tc6.0.x/trunk/webapps/docs/changelog.xml	(revision 1645366)
@@ -67,6 +67,15 @@
       </fix>
     </changelog>
   </subsection>
+  <subsection name="Jasper">
+    <changelog>
+      <fix>
+        Fix potential issue with BeanELResolver when running under a security
+        manager. Some classes may not be accessible but may have accessible
+        interfaces. (markt)
+      </fix>
+    </changelog>
+  </subsection>
   <subsection name="Web applications">
     <changelog>
       <fix>
Index: tc6.0.x/trunk
===================================================================
--- tc6.0.x/trunk	(revision 1645365)
+++ tc6.0.x/trunk	(revision 1645366)

Property changes on: tc6.0.x/trunk
___________________________________________________________________
Modified: svn:mergeinfo
## -0,0 +0,3 ##
   Merged /tomcat/tc7.0.x/trunk:r1644019
   Merged /tomcat/tc8.0.x/trunk:r1644018
   Merged /tomcat/trunk:r1644017
