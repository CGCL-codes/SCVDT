Index: trunk/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnectionDelegate.java
===================================================================
--- trunk/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnectionDelegate.java	(revision 1743160)
+++ trunk/broker-plugins/amqp-0-10-protocol/src/main/java/org/apache/qpid/server/protocol/v0_10/ServerConnectionDelegate.java	(revision 1743161)
@@ -51,6 +51,7 @@
 import org.apache.qpid.server.security.auth.AuthenticationResult.AuthenticationStatus;
 import org.apache.qpid.server.security.auth.SubjectAuthenticationResult;
 import org.apache.qpid.server.transport.AMQPConnection;
+import org.apache.qpid.server.util.ConnectionScopedRuntimeException;
 import org.apache.qpid.server.virtualhost.VirtualHostUnavailableException;
 import org.apache.qpid.transport.*;
 import org.apache.qpid.transport.network.NetworkConnection;
@@ -112,8 +113,10 @@
     {
         if(_state != requiredState)
         {
-            conn.sendConnectionClose(ConnectionCloseCode.FRAMING_ERROR, "Command Invalid expected "+requiredState+" but was "+_state);
+            String replyText = "Command Invalid, expected " + requiredState + " but was " + _state;
+            conn.sendConnectionClose(ConnectionCloseCode.FRAMING_ERROR, replyText);
             conn.closeAndIgnoreFutureInput();
+            throw new ConnectionScopedRuntimeException(replyText);
         }
     }
 
Index: trunk/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQPConnection_0_8.java
===================================================================
--- trunk/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQPConnection_0_8.java	(revision 1743160)
+++ trunk/broker-plugins/amqp-0-8-protocol/src/main/java/org/apache/qpid/server/protocol/v0_8/AMQPConnection_0_8.java	(revision 1743161)
@@ -918,8 +918,9 @@
     {
         if(_state != requiredState)
         {
-            sendConnectionClose(AMQConstant.COMMAND_INVALID, "Command Invalid", 0);
-
+            String replyText = "Command Invalid, expected " + requiredState + " but was " + _state;
+            sendConnectionClose(AMQConstant.COMMAND_INVALID, replyText, 0);
+            throw new ConnectionScopedRuntimeException(replyText);
         }
     }
 
@@ -933,6 +934,8 @@
             _logger.debug("RECV ConnectionOpen[" +" virtualHost: " + virtualHostName + " capabilities: " + capabilities + " insist: " + insist + " ]");
         }
 
+        assertState(ConnectionState.AWAIT_OPEN);
+
         String virtualHostStr = AMQShortString.toString(virtualHostName);
         if ((virtualHostStr != null) && virtualHostStr.charAt(0) == '/')
         {
