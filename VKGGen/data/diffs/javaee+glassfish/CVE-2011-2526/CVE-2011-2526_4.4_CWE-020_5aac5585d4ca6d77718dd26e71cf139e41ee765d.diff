commit 5aac5585d4ca6d77718dd26e71cf139e41ee765d
Author:     Shing Wai Chan <shing.wai.chan@oracle.com>
AuthorDate: Wed Jul 13 17:40:53 2011 +0000
Commit:     Shing Wai Chan <shing.wai.chan@oracle.com>
CommitDate: Wed Jul 13 17:40:53 2011 +0000

    Port Tomcat fix http://svn.apache.org/viewvc?view=revision&revision=1146005
    ("When running under a security manager and using sendfile, validate sendfile
      attributes to prevent sendfile being used to bypass the security manager.
      Part of the fix for CVE-2011-2526")
    
    svn path=/trunk/; revision=48013
    
    
    Former-commit-id: ab36ebf9f9492169ec92bb3172f0f0a5d193331b

diff --git a/v3/web/web-core/src/main/java/org/apache/catalina/connector/Request.java b/v3/web/web-core/src/main/java/org/apache/catalina/connector/Request.java
index 77baad58e4..8ba59c75dd 100644
--- a/v3/web/web-core/src/main/java/org/apache/catalina/connector/Request.java
+++ b/v3/web/web-core/src/main/java/org/apache/catalina/connector/Request.java
@@ -1769,6 +1769,26 @@ public class Request
 
         boolean replaced = false;
 
+        // Do the security check before any updates are made
+        if (Globals.IS_SECURITY_ENABLED &&
+                name.equals("org.apache.tomcat.sendfile.filename")) {
+            // Use the canonical file name to avoid any possible symlink and
+            // relative path issues
+            String canonicalPath;
+            try {
+                canonicalPath = new File(value.toString()).getCanonicalPath();
+            } catch (IOException e) {
+                throw new SecurityException(sm.getString(
+                        "coyoteRequest.sendfileNotCanonical", value), e);
+            }
+            // Sendfile is performed in Tomcat's security context so need to
+            // check if the web app is permitted to access the file while still
+            // in the web app's security context
+            System.getSecurityManager().checkRead(canonicalPath);
+            // Update the value so the canonical path is used
+            value = canonicalPath;
+        }
+
         Object oldValue = attributes.put(name, value);
         if (oldValue != null) {
             replaced = true;
diff --git a/v3/web/web-core/src/main/resources/org/apache/catalina/connector/LocalStrings.properties b/v3/web/web-core/src/main/resources/org/apache/catalina/connector/LocalStrings.properties
index 7f9f5ed4d7..5fbd8593f8 100644
--- a/v3/web/web-core/src/main/resources/org/apache/catalina/connector/LocalStrings.properties
+++ b/v3/web/web-core/src/main/resources/org/apache/catalina/connector/LocalStrings.properties
@@ -103,6 +103,7 @@ coyoteRequest.unknownHost=PWC4012: Unable to resolve IP address {0} into host na
 coyoteRequest.nullRemoteAddressFromProxy=PWC4013: Unable to determine client remote address from proxy (returns null)
 object.invalidScope=PWC4014: Cannot use this object outside a servlet's service method or outside a filter's doFilter method
 inputBuffer.streamClosed=PWC4015: Stream closed
+coyoteRequest.sendfileNotCanonical=PWC4016: Unable to determine canonical name of file [{0}] specified for use with sendfile
 
 #
 # Messages related to async processing mode
