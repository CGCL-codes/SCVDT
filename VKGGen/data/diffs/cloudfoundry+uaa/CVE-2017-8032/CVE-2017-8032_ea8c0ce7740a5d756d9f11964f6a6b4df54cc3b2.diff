diff --git a/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupExternalMembershipManager.java b/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupExternalMembershipManager.java
index 05ecd37d34..2c1e1a5565 100644
--- a/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupExternalMembershipManager.java
+++ b/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupExternalMembershipManager.java
@@ -12,12 +12,6 @@
  *******************************************************************************/
 package org.cloudfoundry.identity.uaa.scim.jdbc;
 
-import java.sql.PreparedStatement;
-import java.sql.ResultSet;
-import java.sql.SQLException;
-import java.sql.Timestamp;
-import java.util.List;
-
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable;
@@ -42,6 +36,12 @@
 import org.springframework.util.Assert;
 import org.springframework.util.StringUtils;
 
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Timestamp;
+import java.util.List;
+
 public class JdbcScimGroupExternalMembershipManager extends AbstractQueryable<ScimGroupExternalMember>
     implements ScimGroupExternalMembershipManager {
 
@@ -64,23 +64,36 @@
     public static final String ADD_EXTERNAL_GROUP_MAPPING_SQL = String.format("insert into %s ( %s ) values (?,lower(?),?,?)",
                     EXTERNAL_GROUP_MAPPING_TABLE, EXTERNAL_GROUP_MAPPING_FIELDS);
 
-    public static final String GET_EXTERNAL_GROUP_MAPPINGS_SQL =
-        String.format("select %s from %s where gm.group_id=? and %s",
-            JOIN_EXTERNAL_GROUP_MAPPING_FIELDS, JOIN_GROUP_TABLE, JOIN_WHERE_ID);
-
-    public static final String GET_GROUPS_BY_EXTERNAL_GROUP_MAPPING_SQL = String.format("select %s from %s where %s and lower(external_group)=lower(?)",
-            JOIN_EXTERNAL_GROUP_MAPPING_FIELDS, JOIN_GROUP_TABLE, JOIN_WHERE_ID);
-
-    public static final String GET_GROUPS_WITH_EXTERNAL_GROUP_MAPPINGS_SQL =
-        String.format("select %s from %s where g.id=? and %s and lower(external_group) like lower(?)",
-            JOIN_EXTERNAL_GROUP_MAPPING_FIELDS, JOIN_GROUP_TABLE, JOIN_WHERE_ID);
-
-    public static final String DELETE_EXTERNAL_GROUP_MAPPING_SQL =
-        String.format("delete from %s where group_id=? and lower(external_group)=lower(?) and origin=?",
-            EXTERNAL_GROUP_MAPPING_TABLE);
-
-    public static final String DELETE_ALL_MAPPINGS_FOR_GROUP_SQL =
-        String.format("delete from %s where group_id = ?", EXTERNAL_GROUP_MAPPING_TABLE);
+    public static final String GET_EXTERNAL_GROUP_MAPPINGS_SQL = String.format(
+        "select %s from %s where g.identity_zone_id=? and gm.group_id=? and %s",
+        JOIN_EXTERNAL_GROUP_MAPPING_FIELDS,
+        JOIN_GROUP_TABLE,
+        JOIN_WHERE_ID
+    );
+
+    public static final String GET_GROUPS_BY_EXTERNAL_GROUP_MAPPING_SQL = String.format(
+        "select %s from %s where g.identity_zone_id=? and %s and lower(external_group)=lower(?)",
+        JOIN_EXTERNAL_GROUP_MAPPING_FIELDS,
+        JOIN_GROUP_TABLE,
+        JOIN_WHERE_ID
+    );
+
+    public static final String GET_GROUPS_WITH_EXTERNAL_GROUP_MAPPINGS_SQL = String.format(
+        "select %s from %s where g.identity_zone_id=? and g.id=? and %s and lower(external_group) like lower(?)",
+        JOIN_EXTERNAL_GROUP_MAPPING_FIELDS,
+        JOIN_GROUP_TABLE,
+        JOIN_WHERE_ID
+    );
+
+    public static final String DELETE_EXTERNAL_GROUP_MAPPING_SQL = String.format(
+        "delete from %s where group_id=? and lower(external_group)=lower(?) and origin=?",
+        EXTERNAL_GROUP_MAPPING_TABLE
+    );
+
+    public static final String DELETE_ALL_MAPPINGS_FOR_GROUP_SQL = String.format(
+        "delete from %s where group_id = ?",
+        EXTERNAL_GROUP_MAPPING_TABLE
+    );
 
     private final RowMapper<ScimGroupExternalMember> rowMapper = new ScimGroupExternalMemberRowMapper();
 
@@ -215,8 +228,9 @@ public void setValues(PreparedStatement ps) throws SQLException {
         return jdbcTemplate.query(GET_EXTERNAL_GROUP_MAPPINGS_SQL, new PreparedStatementSetter() {
             @Override
             public void setValues(PreparedStatement ps) throws SQLException {
-                ps.setString(1, groupId);
-                ps.setString(2, origin);
+                ps.setString(1, IdentityZoneHolder.get().getId());
+                ps.setString(2, groupId);
+                ps.setString(3, origin);
             }
         }, rowMapper);
     }
@@ -232,8 +246,9 @@ public void setValues(PreparedStatement ps) throws SQLException {
             return jdbcTemplate.query(GET_EXTERNAL_GROUP_MAPPINGS_SQL, new PreparedStatementSetter() {
                 @Override
                 public void setValues(PreparedStatement ps) throws SQLException {
-                    ps.setString(1, groups.get(0).getId());
-                    ps.setString(2, origin);
+                    ps.setString(1, IdentityZoneHolder.get().getId());
+                    ps.setString(2, groups.get(0).getId());
+                    ps.setString(3, origin);
                 }
             }, rowMapper);
         } else {
@@ -264,8 +279,9 @@ public void setValues(PreparedStatement ps) throws SQLException {
         return jdbcTemplate.query(GET_GROUPS_BY_EXTERNAL_GROUP_MAPPING_SQL, new PreparedStatementSetter() {
             @Override
             public void setValues(PreparedStatement ps) throws SQLException {
-                ps.setString(1, origin);
-                ps.setString(2, externalGroup);
+                ps.setString(1, IdentityZoneHolder.get().getId());
+                ps.setString(2, origin);
+                ps.setString(3, externalGroup);
 
             }
         }, rowMapper);
@@ -285,7 +301,11 @@ private ScimGroupExternalMember getExternalGroupMap(final String groupId,
                     throws ScimResourceNotFoundException {
         try {
             ScimGroupExternalMember u = jdbcTemplate.queryForObject(GET_GROUPS_WITH_EXTERNAL_GROUP_MAPPINGS_SQL,
-                            rowMapper, groupId, origin, externalGroup);
+                                                                    rowMapper,
+                                                                    IdentityZoneHolder.get().getId(),
+                                                                    groupId,
+                                                                    origin,
+                                                                    externalGroup);
             return u;
         } catch (EmptyResultDataAccessException e) {
             throw new ScimResourceNotFoundException("The mapping between groupId " + groupId + " and external group "
diff --git a/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupProvisioning.java b/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupProvisioning.java
index d4b063a36d..ba105928e2 100644
--- a/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupProvisioning.java
+++ b/server/src/main/java/org/cloudfoundry/identity/uaa/scim/jdbc/JdbcScimGroupProvisioning.java
@@ -20,7 +20,6 @@
 import org.cloudfoundry.identity.uaa.resources.jdbc.AbstractQueryable;
 import org.cloudfoundry.identity.uaa.resources.jdbc.JdbcPagingListFactory;
 import org.cloudfoundry.identity.uaa.scim.ScimGroup;
-import org.cloudfoundry.identity.uaa.scim.ScimGroupMember;
 import org.cloudfoundry.identity.uaa.scim.ScimGroupProvisioning;
 import org.cloudfoundry.identity.uaa.scim.ScimMeta;
 import org.cloudfoundry.identity.uaa.scim.exception.InvalidScimResourceException;
@@ -43,7 +42,6 @@
 import java.sql.ResultSet;
 import java.sql.SQLException;
 import java.sql.Timestamp;
-import java.util.ArrayList;
 import java.util.Date;
 import java.util.List;
 import java.util.UUID;
@@ -81,7 +79,7 @@ public Log getLogger() {
 
     public static final String ALL_GROUPS = String.format("select %s from %s", GROUP_FIELDS, GROUP_TABLE);
 
-    public static final String DELETE_GROUP_SQL = String.format("delete from %s where id=? and identity_zone_id=?", GROUP_TABLE);
+    public static final String DELETE_GROUP_SQL = String.format("delete from %s where id=?", GROUP_TABLE);
 
     public static final String DELETE_GROUP_BY_ZONE = String.format("delete from %s where identity_zone_id=?", GROUP_TABLE);
     public static final String DELETE_GROUP_MEMBERSHIP_BY_ZONE = String.format("delete from %s where group_id in (select id from %s where identity_zone_id = ?)", GROUP_MEMBERSHIP_TABLE, GROUP_TABLE);
@@ -252,9 +250,9 @@ public ScimGroup delete(String id, int version) throws ScimResourceNotFoundExcep
         externalGroupMappingManager.unmapAll(id);
         int deleted;
         if (version > 0) {
-            deleted = jdbcTemplate.update(DELETE_GROUP_SQL + " and version=?;", id, IdentityZoneHolder.get().getId(),version);
+            deleted = jdbcTemplate.update(DELETE_GROUP_SQL + " and version=?;", id, version);
         } else {
-            deleted = jdbcTemplate.update(DELETE_GROUP_SQL, id, IdentityZoneHolder.get().getId());
+            deleted = jdbcTemplate.update(DELETE_GROUP_SQL, id);
         }
         if (deleted != 1) {
             throw new IncorrectResultSizeDataAccessException(1, deleted);
