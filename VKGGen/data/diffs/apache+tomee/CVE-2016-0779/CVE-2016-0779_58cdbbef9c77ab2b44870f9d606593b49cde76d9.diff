diff --git a/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java b/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java
index eab496c456..7db26ba893 100644
--- a/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java
+++ b/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/Setup.java
@@ -303,6 +303,11 @@ public static void configureSystemProperties(final File tomeeHome, final TomEECo
             properties.put("openejb.session.manager", "org.apache.tomee.catalina.session.QuickSessionManager");
         }
 
+        if (configuration.isUnsafeEjbd() && "*".equals(properties.getProperty("tomee.serialization.class.blacklist", "-").trim())) {
+            properties.remove("tomee.serialization.class.blacklist");
+            properties.put("tomee.serialization.class.whitelist", "*");
+        }
+
         try {
             IO.writeProperties(file, properties);
         } catch (final IOException e) {
diff --git a/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEConfiguration.java b/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEConfiguration.java
index 230261cb03..265cb35614 100644
--- a/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEConfiguration.java
+++ b/arquillian/arquillian-tomee-common/src/main/java/org/apache/openejb/arquillian/common/TomEEConfiguration.java
@@ -45,6 +45,7 @@
     protected String portRange = ""; // only used if port < 0, empty means whatever, can be "1024-65535"
     protected String preloadClasses; // just a client classloader.loadClass(), value is comma separated qualified names. Useful with maven resolver for instance
     protected boolean quickSession = true;
+    protected boolean unsafeEjbd = true;
     protected boolean unpackWars = true;
 
     protected String properties = "";
@@ -53,6 +54,14 @@
     protected boolean singleDumpByArchiveName;
     protected Collection<String> singleDeploymentByArchiveName = Collections.emptyList();
 
+    public boolean isUnsafeEjbd() {
+        return unsafeEjbd;
+    }
+
+    public void setUnsafeEjbd(final boolean unsafeEjbd) {
+        this.unsafeEjbd = unsafeEjbd;
+    }
+
     public boolean isUnpackWars() {
         return unpackWars;
     }
diff --git a/arquillian/arquillian-tomee-embedded/src/main/java/org/apache/openejb/arquillian/embedded/EmbeddedTomEEConfiguration.java b/arquillian/arquillian-tomee-embedded/src/main/java/org/apache/openejb/arquillian/embedded/EmbeddedTomEEConfiguration.java
index 0d18097b79..ea7ea424a8 100644
--- a/arquillian/arquillian-tomee-embedded/src/main/java/org/apache/openejb/arquillian/embedded/EmbeddedTomEEConfiguration.java
+++ b/arquillian/arquillian-tomee-embedded/src/main/java/org/apache/openejb/arquillian/embedded/EmbeddedTomEEConfiguration.java
@@ -172,7 +172,15 @@ public Properties systemPropertiesAsProperties() {
             return new Properties();
         }
 
-        return toProperties(properties);
+        final Properties properties = toProperties(this.properties);
+        if (properties != null && isUnsafeEjbd() &&
+            "*".equals(properties.getProperty("tomee.serialization.class.blacklist", "-").trim())) {
+
+            properties.remove("tomee.serialization.class.blacklist");
+            properties.put("tomee.serialization.class.whitelist", "*");
+        }
+
+        return properties;
     }
 
     private static Properties toProperties(final String value) {
diff --git a/container/openejb-core/src/main/java/org/apache/openejb/core/rmi/BlacklistClassResolver.java b/container/openejb-core/src/main/java/org/apache/openejb/core/rmi/BlacklistClassResolver.java
index 1a07ec8078..da34eec19b 100644
--- a/container/openejb-core/src/main/java/org/apache/openejb/core/rmi/BlacklistClassResolver.java
+++ b/container/openejb-core/src/main/java/org/apache/openejb/core/rmi/BlacklistClassResolver.java
@@ -56,7 +56,7 @@ public final String check(final String name) {
     private static boolean contains(final String[] list, final String name) {
         if (list != null) {
             for (final String white : list) {
-                if (name.startsWith(white)) {
+                if ("*".equals(white) || name.startsWith(white)) {
                     return true;
                 }
             }
diff --git a/container/openejb-core/src/test/java/org/apache/openejb/core/rmi/BlacklistClassResolverTest.java b/container/openejb-core/src/test/java/org/apache/openejb/core/rmi/BlacklistClassResolverTest.java
index 1174be21fc..af1e742848 100644
--- a/container/openejb-core/src/test/java/org/apache/openejb/core/rmi/BlacklistClassResolverTest.java
+++ b/container/openejb-core/src/test/java/org/apache/openejb/core/rmi/BlacklistClassResolverTest.java
@@ -38,4 +38,12 @@ public void implicitWhiteList() {
     public void whiteList() {
         assertFalse(new BlacklistClassResolver(null, new String[] { "org.apache.xalan" }).isBlacklisted("org.apache.xalan.Foo"));
     }
+
+    @Test
+    public void wildcard() {
+        final BlacklistClassResolver classResolver = new BlacklistClassResolver(new String[]{"*"}, new String[] {"white", "com.white"});
+        assertTrue(classResolver.isBlacklisted("white.Foo"));
+        assertTrue(classResolver.isBlacklisted("com.white.test"));
+        assertTrue(classResolver.isBlacklisted("other.test"));
+    }
 }
diff --git a/server/openejb-client/src/main/java/org/apache/openejb/client/EjbObjectInputStream.java b/server/openejb-client/src/main/java/org/apache/openejb/client/EjbObjectInputStream.java
index 9ce929148a..7e7155b4c9 100644
--- a/server/openejb-client/src/main/java/org/apache/openejb/client/EjbObjectInputStream.java
+++ b/server/openejb-client/src/main/java/org/apache/openejb/client/EjbObjectInputStream.java
@@ -123,7 +123,7 @@ public final String check(final String name) {
         private static boolean contains(final String[] list, String name) {
             if (list != null) {
                 for (final String white : list) {
-                    if (name.startsWith(white)) {
+                    if ("*".equals(white) || name.startsWith(white)) {
                         return true;
                     }
                 }
diff --git a/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Installer.java b/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Installer.java
index 621c82b789..4c76e4e5be 100644
--- a/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Installer.java
+++ b/tomee/tomee-common/src/main/java/org/apache/tomee/installer/Installer.java
@@ -703,6 +703,14 @@ public void installConfigFiles(final boolean builtIn) {
                 systemPropertiesWriter.write("# here some default Apache TomEE system properties\n");
                 systemPropertiesWriter.write("# for more information please see http://tomee.apache.org/properties-listing.html\n");
 
+                systemPropertiesWriter.write("\n");
+                systemPropertiesWriter.write(
+                    "# allowed packages to be deserialized, by security we denied all by default, " +
+                    "tune tomee.serialization.class.whitelist packages to change it\n");
+                systemPropertiesWriter.write("# tomee.remote.support = true\n");
+                systemPropertiesWriter.write("tomee.serialization.class.blacklist = *\n");
+                systemPropertiesWriter.write("# tomee.serialization.class.whitelist = my.package\n");
+
                 systemPropertiesWriter.write("\n");
                 systemPropertiesWriter.write("# openejb.check.classloader = false\n");
                 systemPropertiesWriter.write("# openejb.check.classloader.verbose = false\n");
