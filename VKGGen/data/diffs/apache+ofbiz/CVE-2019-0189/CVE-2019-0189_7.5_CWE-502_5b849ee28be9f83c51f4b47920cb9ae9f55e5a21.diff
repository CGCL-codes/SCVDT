commit 5b849ee28be9f83c51f4b47920cb9ae9f55e5a21
Author:     Jacques Le Roux <jleroux@apache.org>
AuthorDate: Sun Feb 17 12:40:00 2019 +0000
Commit:     Jacques Le Roux <jleroux@apache.org>
CommitDate: Sun Feb 17 12:40:00 2019 +0000

    "Applied fix from trunk framework for revision: 1853745 "
    ------------------------------------------------------------------------
    r1853745 | jleroux | 2019-02-17 13:38:06 +0100 (dim. 17 f√©vr. 2019) | 8 lignes
    
    Improved: Improve ObjectInputStream class
    (OFBIZ-10837)
    
    Fixes CVE-2019-0189
    
    The white list I used was not complete.
    This adds "java.util.HashMap", "Boolean", "Number", "Integer" which are the ones
    missing I found so far.
    Maybe other classes could still miss OOTB. So I added a warning in
    SafeObjectInputStream::resolveClass
    ------------------------------------------------------------------------
    
    
    git-svn-id: https://svn.apache.org/repos/asf/ofbiz/branches/release16.11@1853748 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/framework/base/src/main/java/org/apache/ofbiz/base/util/SafeObjectInputStream.java b/framework/base/src/main/java/org/apache/ofbiz/base/util/SafeObjectInputStream.java
index 1d232286a6..82834a4bb9 100644
--- a/framework/base/src/main/java/org/apache/ofbiz/base/util/SafeObjectInputStream.java
+++ b/framework/base/src/main/java/org/apache/ofbiz/base/util/SafeObjectInputStream.java
@@ -60,6 +60,9 @@ public class SafeObjectInputStream extends java.io.ObjectInputStream implements
     @Override
     protected Class<?> resolveClass(ObjectStreamClass classDesc) throws IOException, ClassNotFoundException {
         if (!WHITELIST_PATTERN.matcher(classDesc.getName()).find()) {
+            Debug.logWarning("************************Incompatible class: " + classDesc.getName() + 
+                    ". Please see OFBIZ-10837.  Report to dev ML if you use OFBiz without changes. "
+                    + "Else add you class into UtilObject::getObjectException", "SafeObjectInputStream");
             throw new ClassCastException("Incompatible class: " + classDesc.getName());
         }
         
diff --git a/framework/base/src/main/java/org/apache/ofbiz/base/util/UtilObject.java b/framework/base/src/main/java/org/apache/ofbiz/base/util/UtilObject.java
index 704e73d9c3..daf68e2ce2 100644
--- a/framework/base/src/main/java/org/apache/ofbiz/base/util/UtilObject.java
+++ b/framework/base/src/main/java/org/apache/ofbiz/base/util/UtilObject.java
@@ -145,7 +145,7 @@ public final class UtilObject {
         try (ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
                 SafeObjectInputStream wois = new SafeObjectInputStream(bis,
                         Thread.currentThread().getContextClassLoader(),
-                        java.util.Arrays.asList("byte\\[\\]", "Number", "Long", "foo", "SerializationInjector"));
+                        java.util.Arrays.asList("byte\\[\\]", "Number", "Long", "foo", "SerializationInjector", "java.util.HashMap", "Boolean", "Number", "Integer"));
                 ) { // byte[] used in EntityCrypto::doDecrypt, all others used in UtilObjectTests::testGetObject
             return wois.readObject();
         }
