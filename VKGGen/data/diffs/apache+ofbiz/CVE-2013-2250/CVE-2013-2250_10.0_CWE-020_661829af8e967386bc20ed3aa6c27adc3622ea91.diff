commit 661829af8e967386bc20ed3aa6c27adc3622ea91
Author:     Adrian Crum <adrianc@apache.org>
AuthorDate: Mon Jul 8 14:37:37 2013 +0000
Commit:     Adrian Crum <adrianc@apache.org>
CommitDate: Mon Jul 8 14:37:37 2013 +0000

    Removed support for runtime nested expressions in FlexibleStringExpander.java. This fixes the vulnerability CVE-2013-2250
    
    
    git-svn-id: https://svn.apache.org/repos/asf/ofbiz/trunk@1500772 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java b/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java
index b267b13dd9..f6089e13fa 100644
--- a/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java
+++ b/framework/base/src/org/ofbiz/base/util/string/FlexibleStringExpander.java
@@ -724,19 +724,6 @@ public abstract class FlexibleStringExpander implements Serializable, IsEmpty {
             } catch (Exception e) {
                 Debug.logError("Error evaluating expression " + this + ": " + e, module);
             }
-            if (obj != null) {
-                try {
-                    // Check for runtime nesting
-                    String str = (String) obj;
-                    if (str.contains(openBracket)) {
-                        FlexibleStringExpander fse = FlexibleStringExpander.getInstance(str);
-                        if (containsScript(fse)) {
-                            throw new UnsupportedOperationException("Nested scripts are not supported");
-                        }
-                        return fse.get(context, timeZone, locale);
-                    }
-                } catch (ClassCastException e) {}
-            }
             return obj;
         }
     }
diff --git a/framework/base/src/org/ofbiz/base/util/string/test/FlexibleStringExpanderTests.java b/framework/base/src/org/ofbiz/base/util/string/test/FlexibleStringExpanderTests.java
index bb30f0902c..2686b91f68 100644
--- a/framework/base/src/org/ofbiz/base/util/string/test/FlexibleStringExpanderTests.java
+++ b/framework/base/src/org/ofbiz/base/util/string/test/FlexibleStringExpanderTests.java
@@ -286,16 +286,6 @@ public class FlexibleStringExpanderTests extends TestCase {
         List<String> testList = new ArrayList<String>();
         testList.add("World");
         testMap.put("testList", testList);
-        testMap.put("testScript", "${groovy:return null;}");
-        UnsupportedOperationException caught = null;
-        try {
-            FlexibleStringExpander fse = FlexibleStringExpander.getInstance("${testScript}");
-            fse.expandString(testMap);
-        } catch (UnsupportedOperationException e) {
-            caught = e;
-        } finally {
-            assertNotNull("UnsupportedOperationException thrown for nested script", caught);
-        }
         fseTest("null FlexibleStringExpander, null map", null, null, null, null, "", null, true);
         fseTest("null FlexibleStringExpander", null, testMap, null, null, "", null, true);
         fseTest("null context", "Hello World!", null, null, null, "Hello World!", null, false);
@@ -305,9 +295,6 @@ public class FlexibleStringExpanderTests extends TestCase {
         fseTest("empty FlexibleStringExpander", "", testMap, null, null, "", null, true);
         fseTest("UEL integration(nested): throw Exception", "${${throwException.value}}", testMap, "", false);
         fseTest("UEL integration: throw Exception", "${throwException.value}", testMap, null, null, "", null, false);
-        fseTest("hidden (runtime) nested replacement", "${nested}!", testMap, "Hello World!", false);
-        fseTest("hidden (runtime) nested null replacement", "Hello ${${nullVar}}World!", testMap, "Hello World!", false);
-        fseTest("hidden (runtime) nested null callreplacement", "Hello ${${groovy:" + FlexibleStringExpanderTests.class.getName() + ".StaticReturnNull()}}World!", testMap, "Hello World!", false);
         fseTest("UEL integration(nested): throw Exception", "${throw${exc}.value}", testMap, "", false);
         fseTest("UEL integration(nested): throw NPE", "${throwNPE${blank}.value}", testMap, "", false);
         fseTest("visible nested replacement", "${'Hello ${var}'}!", testMap, "Hello World!", false);
