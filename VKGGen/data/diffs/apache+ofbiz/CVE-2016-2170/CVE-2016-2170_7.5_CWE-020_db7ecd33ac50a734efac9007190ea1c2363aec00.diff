commit db7ecd33ac50a734efac9007190ea1c2363aec00
Author:     Jacopo Cappellato <jacopoc@apache.org>
AuthorDate: Wed Feb 10 15:29:45 2016 +0000
Commit:     Jacopo Cappellato <jacopoc@apache.org>
CommitDate: Wed Feb 10 15:29:45 2016 +0000

    Applied fix from trunk for revision: 1729609
    ===
    
    OFBIZ-6568: upgraded Groovy to the latest version (2.4.5).
    [CVE-2016-2170] The infamous Java serialization vulnerability
    
    
    
    git-svn-id: https://svn.apache.org/repos/asf/ofbiz/branches/release12.04@1729630 13f79535-47bb-0310-9956-ffa450edef68

diff --git a/.classpath b/.classpath
index 73cb3d74cf..f009ce3716 100644
--- a/.classpath
+++ b/.classpath
@@ -100,7 +100,7 @@
     <classpathentry kind="lib" path="framework/base/lib/scripting/asm-util-3.2.jar"/>
     <classpathentry kind="lib" path="framework/base/lib/scripting/bsf-2.4.0.jar"/>
     <classpathentry kind="lib" path="framework/base/lib/scripting/bsh-2.0b4.jar"/>
-    <classpathentry kind="lib" path="framework/base/lib/scripting/groovy-all-1.8.6.jar"/>
+    <classpathentry kind="lib" path="framework/base/lib/scripting/groovy-all-2.4.5.jar"/>
     <classpathentry kind="lib" path="framework/base/lib/scripting/jakarta-oro-2.0.8.jar"/>
     <classpathentry kind="lib" path="framework/base/lib/scripting/jython-nooro.jar"/>
     <classpathentry kind="lib" path="framework/base/lib/scripting/jansi-1.2.1.jar"/>
diff --git a/LICENSE b/LICENSE
index d74767d5b4..bbb373ad06 100644
--- a/LICENSE
+++ b/LICENSE
@@ -71,7 +71,7 @@ framework/base/lib/j2eespecs/jsp-api-2.2.jar
 framework/base/lib/j2eespecs/servlet-api-3.0.jar
 framework/base/lib/scripting/bsf-2.4.0.jar
 framework/base/lib/scripting/jakarta-oro-2.0.8.jar
-framework/base/lib/scripting/groovy-all-1.8.6.jar
+framework/base/lib/scripting/groovy-all-2.4.5.jar
 framework/base/lib/scripting/jansi-1.2.1.jar
 framework/base/lib/xmlrpc-client-3.1.2.jar
 framework/base/lib/xmlrpc-common-3.1.2.jar
diff --git a/applications/commonext/webapp/ofbizsetup/organization/changeOrgPartyId.groovy b/applications/commonext/webapp/ofbizsetup/organization/changeOrgPartyId.groovy
index a5418e039c..00d31dedac 100644
--- a/applications/commonext/webapp/ofbizsetup/organization/changeOrgPartyId.groovy
+++ b/applications/commonext/webapp/ofbizsetup/organization/changeOrgPartyId.groovy
@@ -17,6 +17,8 @@
  * under the License.
  */
 
+@BaseScript(org.ofbiz.service.engine.GroovyBaseScript)
+import groovy.transform.BaseScript
 import org.ofbiz.base.util.*;
 
 //partyAcctgPrefAndGroupList
diff --git a/framework/base/config/ofbiz-containers.xml b/framework/base/config/ofbiz-containers.xml
index 5026357f26..cd68b3b2c8 100644
--- a/framework/base/config/ofbiz-containers.xml
+++ b/framework/base/config/ofbiz-containers.xml
@@ -259,10 +259,4 @@ under the License.
         <property name="app-name" value="OFBiz"/>
     </container-->
 
-    <!-- load Groovy remote telnet server -->
-    <!-- Commented out by default for security reasons -->
-    <!-- the port below will be opened by Groovy -->
-    <!--container name="groovyshell-container" class="org.ofbiz.base.container.GroovyShellContainer">
-        <property name="telnet-port" value="9991"/>
-    </container-->
 </ofbiz-containers>
diff --git a/framework/base/lib/scripting/groovy-all-1.8.6.jar b/framework/base/lib/scripting/groovy-all-1.8.6.jar
deleted file mode 100644
index 03c02efae3..0000000000
Binary files a/framework/base/lib/scripting/groovy-all-1.8.6.jar and /dev/null differ
diff --git a/framework/base/lib/scripting/groovy-all-2.4.5.jar b/framework/base/lib/scripting/groovy-all-2.4.5.jar
new file mode 100644
index 0000000000..07835093c0
Binary files /dev/null and b/framework/base/lib/scripting/groovy-all-2.4.5.jar differ
diff --git a/framework/base/src/org/ofbiz/base/container/GroovyShellContainer.java b/framework/base/src/org/ofbiz/base/container/GroovyShellContainer.java
deleted file mode 100644
index f984d3809c..0000000000
--- a/framework/base/src/org/ofbiz/base/container/GroovyShellContainer.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*******************************************************************************
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- *******************************************************************************/
-package org.ofbiz.base.container;
-
-import org.apache.log4j.Logger;
-
-import org.ofbiz.base.container.ContainerConfig.Container.Property;
-import org.ofbiz.base.container.groovy.GroovyService;
-import org.ofbiz.base.container.groovy.GroovyShellService;
-
-public class GroovyShellContainer implements Container {
-
-    private static final Logger log = Logger.getLogger(GroovyShellContainer.class);
-
-    private String configFileLocation = null;
-    private GroovyService gsh = null;
-
-    /**
-     * @see org.ofbiz.base.container.Container#init(java.lang.String[], java.lang.String)
-     */
-    @Override
-    public void init(String[] args, String configFile) {
-        configFileLocation = configFile;
-    }
-
-    /**
-     * @see org.ofbiz.base.container.Container#start()
-     */
-    @Override
-    public boolean start() throws ContainerException {
-        int port = getTelnetPort();
-        gsh = new GroovyShellService(port);
-        gsh.launchInBackground();
-
-        log.info("Started Groovy telnet service on port [" + port + "].");
-        log.info("NOTICE: The Groovy service port is not secure. Please protect it.");
-
-        return true;
-    }
-
-    /**
-     * @see org.ofbiz.base.container.Container#stop()
-     */
-    @Override
-    public void stop() throws ContainerException {
-        gsh = null;
-    }
-
-    private int getTelnetPort() throws ContainerException {
-        ContainerConfig.Container config = ContainerConfig.getContainer("groovyshell-container", configFileLocation);
-        Property telnetPort = config.getProperty("telnet-port");
-        try {
-            return Integer.parseInt(telnetPort.value);
-        } catch (NumberFormatException e) {
-            throw new ContainerException("Invalid telnet port [" + telnetPort.value + "] defined in container configuration.");
-        }
-    }
-}
diff --git a/framework/base/src/org/ofbiz/base/container/groovy/GroovyService.java b/framework/base/src/org/ofbiz/base/container/groovy/GroovyService.java
deleted file mode 100644
index d7bb685244..0000000000
--- a/framework/base/src/org/ofbiz/base/container/groovy/GroovyService.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Copyright 2007 Bruce Fancher
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/*
- * This file is a modified version of the original one.
- */
-
-package org.ofbiz.base.container.groovy;
-
-import groovy.lang.Binding;
-
-import java.util.Map;
-
-import org.apache.log4j.Logger;
-
-public abstract class GroovyService {
-
-    protected Logger log = Logger.getLogger(getClass());
-
-    private Map<String, Object> bindings;
-    private boolean launchAtStart;
-    private Thread serverThread;
-
-    public GroovyService() {
-    }
-
-    public GroovyService(Map<String, Object> bindings) {
-        this.bindings = bindings;
-    }
-
-    public void launchInBackground() {
-        serverThread = new Thread() {
-            @Override
-            public void run() {
-                try {
-                    launch();
-                } catch (Exception e) {
-                    log.error("Could not launch the Groovy service.", e);
-                }
-            }
-        };
-
-        serverThread.setDaemon(true);
-        serverThread.start();
-    }
-
-    public abstract void launch();
-
-    protected Binding createBinding() {
-        return new Binding(bindings);
-    }
-
-    public void initialize() {
-        if (launchAtStart) {
-            launchInBackground();
-        }
-    }
-
-    public void destroy() {}
-
-    public void setBindings(final Map<String, Object> bindings) {
-        this.bindings = bindings;
-    }
-
-    public boolean isLaunchAtStart() {
-        return launchAtStart;
-    }
-
-    public void setLaunchAtStart(boolean launchAtStart) {
-        this.launchAtStart = launchAtStart;
-    }
-}
diff --git a/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellService.java b/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellService.java
deleted file mode 100644
index bb6876d319..0000000000
--- a/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellService.java
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright 2007 Bruce Fancher
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/*
- * This file is a modified version of the original one.
- */
-
-package org.ofbiz.base.container.groovy;
-
-import java.io.IOException;
-import java.net.ServerSocket;
-import java.net.Socket;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Map;
-
-public class GroovyShellService extends GroovyService {
-
-    private ServerSocket serverSocket;
-    private int port;
-    private List<Socket> clientSockets = new ArrayList<Socket>();
-
-    public GroovyShellService() {
-        super();
-    }
-
-    public GroovyShellService(int port) {
-        super();
-        this.port = port;
-    }
-
-    public GroovyShellService(Map<String, Object> bindings, int port) {
-        super(bindings);
-        this.port = port;
-    }
-
-    @Override
-    public void launch() {
-        try {
-            serverSocket = new ServerSocket(port);
-            log.info("Opened server socket: " + serverSocket);
-
-            acceptClientConnections();
-        } catch (IOException e) {
-            log.error("Could not open server socket.", e);
-        } finally {
-            closeServerSocket();
-        }
-    }
-
-    @Override
-    public void destroy() {
-        closeServerSocket();
-
-        for (Socket clientSocket : clientSockets)  {
-            closeClientSocket(clientSocket);
-        }
-    }
-
-    public void setPort(int port) {
-        this.port = port;
-    }
-
-    private void acceptClientConnections() {
-        while (true) {
-            Socket clientSocket = null;
-            try {
-                clientSocket = serverSocket.accept();
-                log.info("Opened client socket: " + clientSocket);
-            } catch (IOException e) {
-                log.error("Could not open client socket.", e);
-                continue;
-            }
-
-            clientSockets.add(clientSocket);
-            GroovyShellThread clientThread = new GroovyShellThread(clientSocket, createBinding());
-            clientThread.start();
-        }
-    }
-
-    private void closeServerSocket() {
-        try {
-            if (serverSocket != null) {
-                log.info("Closing server socket: " + serverSocket);
-                serverSocket.close();
-            }
-        } catch (IOException e) {
-            log.error("Could not close server socket: " + serverSocket, e);
-        }
-    }
-
-    private void closeClientSocket(Socket socket) {
-        try {
-            if (socket != null) {
-                log.info("Closing client socket: " + socket);
-                socket.close();
-            }
-        } catch (IOException e) {
-            log.error("Could not close client socket: " + socket, e);
-        }
-    }
-}
diff --git a/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellThread.java b/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellThread.java
deleted file mode 100644
index c39dc24651..0000000000
--- a/framework/base/src/org/ofbiz/base/container/groovy/GroovyShellThread.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright 2007 Bruce Fancher
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *       http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/*
- * This file is a modified version of the original one.
- */
-
-package org.ofbiz.base.container.groovy;
-
-import groovy.lang.Binding;
-
-import java.io.InputStream;
-import java.io.PrintStream;
-import java.net.Socket;
-
-import org.apache.log4j.Logger;
-import org.codehaus.groovy.tools.shell.Groovysh;
-import org.codehaus.groovy.tools.shell.IO;
-
-public class GroovyShellThread extends Thread {
-
-    private static final Logger log = Logger.getLogger(GroovyShellThread.class);
-
-    private Socket socket;
-    private Binding binding;
-
-    public GroovyShellThread(Socket socket, Binding binding) {
-        super();
-        this.socket = socket;
-        this.binding = binding;
-    }
-
-    @Override
-    public void run() {
-        PrintStream out = null;
-        InputStream in = null;
-
-        try {
-            in = socket.getInputStream();
-            out = new PrintStream(socket.getOutputStream());
-            binding.setVariable("out", out);
-
-            final IO io = new IO(in, out, out);
-            final Groovysh gsh = new Groovysh(binding, io);
-            gsh.run();
-        } catch (Exception e) {
-            log.error("Error running the Groovy shell.", e);
-        } finally {
-            try { if (out != null) out.close(); } catch (Exception e) {}
-            try { if (in != null) in.close(); } catch (Exception e) {}
-            try { if (socket != null) socket.close(); } catch (Exception e) {}
-        }
-    }
-
-    public Socket getSocket() {
-        return socket;
-    }
-}
diff --git a/macros.xml b/macros.xml
index 26fb749c2f..44228618fa 100644
--- a/macros.xml
+++ b/macros.xml
@@ -57,7 +57,7 @@ under the License.
   <pathelement location="${ofbiz.home.dir}/framework/base/lib/commons/commons-cli-1.0.jar"/>
   <pathelement location="${ofbiz.home.dir}/framework/base/lib/scripting/antlr-2.7.6.jar"/>
   <pathelement location="${ofbiz.home.dir}/framework/base/lib/scripting/asm-3.2.jar"/>
-  <pathelement location="${ofbiz.home.dir}/framework/base/lib/scripting/groovy-all-1.8.6.jar"/>
+  <pathelement location="${ofbiz.home.dir}/framework/base/lib/scripting/groovy-all-2.4.5.jar"/>
  </path>
  <path id="rhino.class.path">
   <pathelement location="${ofbiz.home.dir}/extension/rhino/lib/js-1.7.R1.jar"/>
diff --git a/specialpurpose/ecommerce/webapp/ecommerce/WEB-INF/actions/order/ShipmentStatus.groovy b/specialpurpose/ecommerce/webapp/ecommerce/WEB-INF/actions/order/ShipmentStatus.groovy
index bd76798308..598e8d6bcd 100644
--- a/specialpurpose/ecommerce/webapp/ecommerce/WEB-INF/actions/order/ShipmentStatus.groovy
+++ b/specialpurpose/ecommerce/webapp/ecommerce/WEB-INF/actions/order/ShipmentStatus.groovy
@@ -17,6 +17,8 @@
  * under the License.
  */
 
+@BaseScript(org.ofbiz.service.engine.GroovyBaseScript)
+import groovy.transform.BaseScript
 import org.ofbiz.base.util.UtilMisc;
 import org.ofbiz.entity.Delegator;
 import org.ofbiz.entity.*;
