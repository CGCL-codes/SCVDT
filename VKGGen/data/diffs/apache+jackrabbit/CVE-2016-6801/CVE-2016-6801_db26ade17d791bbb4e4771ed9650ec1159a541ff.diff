diff --git a/jackrabbit-webdav/src/main/java/org/apache/jackrabbit/webdav/util/CSRFUtil.java b/jackrabbit-webdav/src/main/java/org/apache/jackrabbit/webdav/util/CSRFUtil.java
index b22b7ca1102..25b2ae5fd2c 100644
--- a/jackrabbit-webdav/src/main/java/org/apache/jackrabbit/webdav/util/CSRFUtil.java
+++ b/jackrabbit-webdav/src/main/java/org/apache/jackrabbit/webdav/util/CSRFUtil.java
@@ -102,7 +102,7 @@ public CSRFUtil(String config) {
             } else {
                 disabled = false;
                 String[] allowed = config.split(",");
-                allowedReferrerHosts = new HashSet<String>(allowed.length);                
+                allowedReferrerHosts = new HashSet<String>(allowed.length);
                 for (String entry : allowed) {
                     allowedReferrerHosts.add(entry.trim());
                 }
@@ -144,7 +144,7 @@ public boolean isValidRequest(HttpServletRequest request) {
             // empty referrer headers are not allowed for POST + relevant
             // content types (see JCR-3909)
             if (refHeader == null) {
-                log.debug("POST with content type" + ct + " blocked due to missing referer header field");
+                log.debug("POST with content type " + ct + " blocked due to missing referer header field");
                 return false;
             }
 
@@ -155,12 +155,12 @@ public boolean isValidRequest(HttpServletRequest request) {
                 // names
                 boolean ok = host == null || host.equals(request.getServerName()) || allowedReferrerHosts.contains(host);
                 if (!ok) {
-                    log.debug("POST with content type" + ct + " blocked due to referer header field being: " + refHeader);
+                    log.debug("POST with content type " + ct + " blocked due to referer header field being: " + refHeader);
                 }
                 return ok;
             } catch (URISyntaxException ex) {
                 // referrer malformed -> block access
-                log.debug("POST with content type" + ct + " blocked due to malformed referer header field: " + refHeader);
+                log.debug("POST with content type " + ct + " blocked due to malformed referer header field: " + refHeader);
                 return false;
             }
         }
