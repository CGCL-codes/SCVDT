Index: applications/console/geronimo-console-core/src/main/java/org/apache/geronimo/console/core/security/PropertiesFileLoginModuleNoCache.java
===================================================================
--- applications/console/geronimo-console-core/src/main/java/org/apache/geronimo/console/core/security/PropertiesFileLoginModuleNoCache.java	(revision 564686)
+++ applications/console/geronimo-console-core/src/main/java/org/apache/geronimo/console/core/security/PropertiesFileLoginModuleNoCache.java	(working copy)
@@ -36,6 +36,7 @@
 import javax.security.auth.callback.NameCallback;
 import javax.security.auth.callback.PasswordCallback;
 import javax.security.auth.callback.UnsupportedCallbackException;
+import javax.security.auth.login.FailedLoginException;
 import javax.security.auth.login.LoginException;
 import javax.security.auth.spi.LoginModule;
 
@@ -182,11 +183,15 @@
         assert callbacks.length == 2;
         username = ((NameCallback) callbacks[0]).getName();
         if (username == null || username.equals("")) {
-            return false;
+            throw new FailedLoginException();
         }
         password = users.getProperty(username);
 
-        return checkPassword(password, new String((((PasswordCallback) callbacks[1]).getPassword())));
+        boolean result = checkPassword(password, new String((((PasswordCallback) callbacks[1]).getPassword())));
+        if(!result) {
+            throw new FailedLoginException();
+        }
+        return true;
     }
 
     public boolean commit() throws LoginException {
Index: modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificateChainLoginModule.java
===================================================================
--- modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificateChainLoginModule.java	(revision 564686)
+++ modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificateChainLoginModule.java	(working copy)
@@ -26,6 +26,7 @@
 import javax.security.auth.callback.Callback;
 import javax.security.auth.callback.CallbackHandler;
 import javax.security.auth.callback.UnsupportedCallbackException;
+import javax.security.auth.login.FailedLoginException;
 import javax.security.auth.login.LoginException;
 import javax.security.auth.spi.LoginModule;
 import javax.security.auth.x500.X500Principal;
@@ -87,10 +88,10 @@
         assert callbacks.length == 1;
         Certificate[] certificateChain = ((CertificateChainCallback)callbacks[0]).getCertificateChain();
         if (certificateChain == null || certificateChain.length == 0) {
-            return false;
+            throw new FailedLoginException();
         }
         if (!(certificateChain[0] instanceof X509Certificate)) {
-            return false;
+            throw new FailedLoginException();
         }
         //TODO actually validate chain
         principal = ((X509Certificate)certificateChain[0]).getSubjectX500Principal();
Index: modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificatePropertiesFileLoginModule.java
===================================================================
--- modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificatePropertiesFileLoginModule.java	(revision 564686)
+++ modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/CertificatePropertiesFileLoginModule.java	(working copy)
@@ -142,7 +142,7 @@
         assert callbacks.length == 1;
         X509Certificate certificate = ((CertificateCallback)callbacks[0]).getCertificate();
         if (certificate == null) {
-            return false;
+            throw new FailedLoginException();
         }
         principal = certificate.getSubjectX500Principal();
 
Index: modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/LDAPLoginModule.java
===================================================================
--- modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/LDAPLoginModule.java	(revision 564686)
+++ modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/LDAPLoginModule.java	(working copy)
@@ -151,7 +151,7 @@
 
         if (cbUsername == null || "".equals(cbUsername)
             || cbPassword == null || "".equals(cbPassword)) {
-            return false;
+            throw new FailedLoginException();
         }
 
         try {
Index: modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/PropertiesFileLoginModule.java
===================================================================
--- modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/PropertiesFileLoginModule.java	(revision 564686)
+++ modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/PropertiesFileLoginModule.java	(working copy)
@@ -161,7 +161,7 @@
         assert callbacks.length == 2;
         username = ((NameCallback) callbacks[0]).getName();
         if(username == null || username.equals("")) {
-            return false;
+            throw new FailedLoginException();
         }
         String realPassword = users.getProperty(username);
         // Decrypt the password if needed, so we can compare it with the supplied one
Index: modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/SQLLoginModule.java
===================================================================
--- modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/SQLLoginModule.java	(revision 564686)
+++ modules/geronimo-security/src/main/java/org/apache/geronimo/security/realm/providers/SQLLoginModule.java	(working copy)
@@ -189,7 +189,7 @@
         assert callbacks.length == 2;
         cbUsername = ((NameCallback) callbacks[0]).getName();
         if (cbUsername == null || cbUsername.equals("")) {
-            return false;
+            throw new FailedLoginException();
         }
         char[] provided = ((PasswordCallback) callbacks[1]).getPassword();
         cbPassword = provided == null ? null : new String(provided);
