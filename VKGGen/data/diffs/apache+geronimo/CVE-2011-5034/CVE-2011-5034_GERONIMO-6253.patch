Index: plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/model/ConnectorType.java
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/model/ConnectorType.java	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/model/ConnectorType.java	(working copy)
@@ -93,6 +93,8 @@
     @XmlAttribute
     protected Boolean enableLookups;
     @XmlAttribute
+    protected Integer maxParameterCount;
+    @XmlAttribute
     protected Integer maxPostSize;
     @XmlAttribute
     protected Integer maxSavePostSize;
@@ -124,6 +126,7 @@
     private Map<QName, String> otherAttributes = new HashMap<QName, String>();
     private static final String EMPTY_SESSION_PATH = "emptySessionPath";
     private static final String ENABLE_LOOKUPS = "enableLookups";
+    private static final String MAX_PARAMETER_COUNT = "maxParameterCount";
     private static final String MAX_POST_SIZE = "maxPostSize";
     private static final String MAX_SAVE_POST_SIZE = "maxSavePostSize";
     private static final String PORT = "port";
@@ -247,8 +250,28 @@
     public void setEnableLookups(Boolean value) {
         this.enableLookups = value;
     }
+    
+    /**
+     * Gets the value of the maxParameterCount property.
+     *
+     * @return possible object is
+     *         {@link Integer }
+     */
+    public Integer getMaxParameterCount() {
+        return maxParameterCount;
+    }
 
     /**
+     * Sets the value of the maxParameterCount property.
+     *
+     * @param value allowed object is
+     *              {@link Integer }
+     */
+    public void setMaxParameterCount(Integer value) {
+        this.maxParameterCount = value;
+    }
+
+    /**
      * Gets the value of the maxPostSize property.
      *
      * @return possible object is
@@ -556,6 +579,9 @@
         if (isEnableLookups() != null) {
             properties.put(ENABLE_LOOKUPS, isEnableLookups());
         }
+        if (getMaxParameterCount() != null) {
+            properties.put(MAX_PARAMETER_COUNT, getMaxParameterCount());
+        }
         if (getMaxPostSize() != null) {
             properties.put(MAX_POST_SIZE, getMaxPostSize());
         }
Index: plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/TomcatManagerImpl.java
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/TomcatManagerImpl.java	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/TomcatManagerImpl.java	(working copy)
@@ -416,7 +416,8 @@
         connectorAttributes.add(new ConnectorAttribute<Boolean>("allowTrace", false, Messages.getString("TomcatManagerImpl.80"), Boolean.class)); //$NON-NLS-1$ //$NON-NLS-2$
         connectorAttributes.add(new ConnectorAttribute<Boolean>("emptySessionPath", false, Messages.getString("TomcatManagerImpl.82"), Boolean.class)); //$NON-NLS-1$ //$NON-NLS-2$
         connectorAttributes.add(new ConnectorAttribute<Boolean>("enableLookups", true, Messages.getString("TomcatManagerImpl.84"), Boolean.class)); //$NON-NLS-1$ //$NON-NLS-2$
-        connectorAttributes.add(new ConnectorAttribute<Integer>("maxPostSize", 2097152, Messages.getString("TomcatManagerImpl.86"), Integer.class)); //$NON-NLS-1$ //$NON-NLS-2$
+         connectorAttributes.add(new ConnectorAttribute<Integer>("maxParameterCount", 10000, Messages.getString("TomcatManagerImpl.85"), Integer.class)); //$NON-NLS-1$ //$NON-NLS-2$
+		connectorAttributes.add(new ConnectorAttribute<Integer>("maxPostSize", 2097152, Messages.getString("TomcatManagerImpl.86"), Integer.class)); //$NON-NLS-1$ //$NON-NLS-2$
         connectorAttributes.add(new ConnectorAttribute<Integer>("maxSavePostSize", 4096, Messages.getString("TomcatManagerImpl.88"), Integer.class)); //$NON-NLS-1$ //$NON-NLS-2$
         connectorAttributes.add(new ConnectorAttribute<String>("proxyName", null, Messages.getString("TomcatManagerImpl.90"), String.class)); //$NON-NLS-1$ //$NON-NLS-2$
         connectorAttributes.add(new ConnectorAttribute<Integer>("proxyPort", 0, Messages.getString("TomcatManagerImpl.92"), Integer.class)); //$NON-NLS-1$ //$NON-NLS-2$
Index: plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/CommonProtocol.java
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/CommonProtocol.java	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/CommonProtocol.java	(working copy)
@@ -25,6 +25,8 @@
     public void setEmptySessionPath(boolean emptySessionPath);
     public boolean getEnableLookups();
     public void setEnableLookups(boolean enableLookups);
+	public int getMaxParameterCount();
+    public void setMaxParameterCount(int count);
     public int getMaxPostSize();
     public void setMaxPostSize(int bytes);
     public int getMaxSavePostSize();
Index: plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/BaseHttp11ConnectorGBean.java
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/BaseHttp11ConnectorGBean.java	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/BaseHttp11ConnectorGBean.java	(working copy)
@@ -234,7 +234,7 @@
         return value == null ? Thread.NORM_PRIORITY : Integer.parseInt(value.toString());
     }
     
-
+    @Persistent(manageable=false)
     public void setAcceptCount(int acceptCount) {
         connector.setAttribute("acceptCount", new Integer(acceptCount));
     }
Index: plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/ConnectorGBean.java
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/ConnectorGBean.java	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/java/org/apache/geronimo/tomcat/connector/ConnectorGBean.java	(working copy)
@@ -209,6 +209,7 @@
         return name;
     }
 
+    @Persistent(manageable=false)
     public void setAllowTrace(boolean allow) {
         connector.setAllowTrace(allow);
     }
@@ -221,6 +222,7 @@
         connector.setEmptySessionPath(emptySessionPath);
     }
 
+    @Persistent(manageable=false)
     public void setEnableLookups(boolean enabled) {
         connector.setEnableLookups(enabled);
     }
@@ -230,10 +232,21 @@
         return value == 0 ? 2097152 : value;
     }
 
+    @Persistent(manageable=false)
     public void setMaxPostSize(int bytes) {
         connector.setMaxPostSize(bytes);
     }
-
+    
+    public int getMaxParameterCount(){
+    	int value = connector.getMaxParameterCount();
+    	return value == 0 ? 10000 : value;
+    }
+    
+    @Persistent(manageable=false)
+    public void setMaxParameterCount(int count){
+    	connector.setMaxParameterCount(count);
+    }
+	
     public String getProtocol() {
         //This is totally wrong on the Geronimo side and needs to be re-thought out.
         //This was done to shoe horn in gerneric Geronimo protocols which should have no relation
Index: plugins/tomcat/geronimo-tomcat6/src/main/resources/org/apache/geronimo/tomcat/messages.properties
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/resources/org/apache/geronimo/tomcat/messages.properties	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/resources/org/apache/geronimo/tomcat/messages.properties	(working copy)
@@ -48,6 +48,7 @@
 TomcatManagerImpl.80=webmanager.connector.editConnector.TomcatManagerImpl.80
 TomcatManagerImpl.82=webmanager.connector.editConnector.TomcatManagerImpl.82
 TomcatManagerImpl.84=webmanager.connector.editConnector.TomcatManagerImpl.84
+TomcatManagerImpl.85=webmanager.connector.editConnector.TomcatManagerImpl.85
 TomcatManagerImpl.86=webmanager.connector.editConnector.TomcatManagerImpl.86
 TomcatManagerImpl.88=webmanager.connector.editConnector.TomcatManagerImpl.88
 TomcatManagerImpl.90=webmanager.connector.editConnector.TomcatManagerImpl.90
Index: plugins/tomcat/geronimo-tomcat6/src/main/xsd/server.xsd
===================================================================
--- plugins/tomcat/geronimo-tomcat6/src/main/xsd/server.xsd	(revision 1227466)
+++ plugins/tomcat/geronimo-tomcat6/src/main/xsd/server.xsd	(working copy)
@@ -130,6 +130,7 @@
     <xs:attribute type="xs:boolean" name="allowTrace"/>
     <xs:attribute type="xs:boolean" name="emptySessionPath"/>
     <xs:attribute type="xs:boolean" name="enableLookups"/>
+    <xs:attribute type="xs:int" name="maxParameterCount"/>
     <xs:attribute type="xs:int" name="maxPostSize"/>
     <xs:attribute type="xs:int" name="maxSavePostSize"/>
     <xs:attribute type="xs:int" name="port"/>
@@ -264,4 +265,4 @@
       <!-- see ContextRuleSet.  Very incomplete -->
     </xs:complexContent>
   </xs:complexType>
-</xs:schema>
\ No newline at end of file
+</xs:schema>

Index: plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_ja.properties
===================================================================
--- plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_ja.properties	(revision 1227466)
+++ plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_ja.properties	(working copy)
@@ -552,6 +552,8 @@
 webmanager.common.maxHttpHeaderSizeExp                   = The maximum size of the request and response HTTP header, specified in bytes. If not specified, this attribute is set to 4096 (4 KB).
 webmanager.common.maxKeepAliveRequests                   = MaxKeepAliveRequests
 webmanager.common.maxKeepAliveRequestsExp                = The maximum number of HTTP requests which can be pipelined until the connection is closed by the server. Setting this attribute to 1 will disable HTTP/1.0 keep-alive, as well as HTTP/1.1 keep-alive and pipelining. Setting this to -1 will allow an unlimited amount of pipelined or keep-alive HTTP requests. If not specified, this attribute is set to 100.
+webmanager.common.MaxParameterCount                      = MaxParameterCount
+webmanager.common.MaxParameterCountExp                   = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.common.maxPostSize                            = MaxPostSize
 webmanager.common.maxPostSizeExp                         = The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0. Default value is 2097152 (2 megabytes)
 webmanager.common.maxSavePostSize                        = MaxSavePostSize
@@ -720,6 +722,7 @@
 webmanager.connector.editConnector.TomcatManagerImpl.80  = TRACE HTTP メソッドを有効にするか無効にするかどうかを指定するブーリアン値。
 webmanager.connector.editConnector.TomcatManagerImpl.82  = true を設定すると、セッション・クッキーのすべてのパスに / が設定されます。これはポートレットの実装に有用可能ですが、クライアントから指定されたサーバー上にある多くのアプリケーションへアクセスされると、パフォーマンスに大きく影響するでしょう。
 webmanager.connector.editConnector.TomcatManagerImpl.84  = リモート・ホストの実際のホスト名を返すための DNS 参照を実行する request.getRemoteHost() を呼び出したい場合に true を設定します。DNS 参照をスキップするには false を設定し、その替わりに String 形式の IP アドレスを返します (これによりパフォーマンスを改善します)。
+webmanager.connector.editConnector.TomcatManagerImpl.85  = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.connector.editConnector.TomcatManagerImpl.86  = コンテナーの FORM URL パラメーターの解析によってハンドルする POST データの最大バイト・サイズ。この属性に 0 以下の値を設定するとこの制限を無効化できます。
 webmanager.connector.editConnector.TomcatManagerImpl.88  = フォームまたはクライアント証明書の認証でコンテナーが保存/バッファリングする POST の最大バイト・サイズ。これら両方の認証形式では、ユーザーを認証する直前で POST データを保存バッファリングします。クライアント証明書の認証では、リクエストを処理するときに SSL ハンドシェイクおよび空いたバッファーを保持するために POST データをバッファリングします。フォーム認証では、ユーザーがログイン・フォームへリダイレクトする間に POST データを保存し、ユーザーが正常に認証するか、セッションが認証のリクエスト期限を関連付けるまで保持します。この属性に -1 を設定すると、制限を無効化できます。属性に 0 を設定すると、認証中に POST データの保存を無効化します。
 webmanager.connector.editConnector.TomcatManagerImpl.90  = このコネクターがプロキシー構成を使用する場合、この属性に request.getServerName() の呼び出し時に返されるサーバー名を指定してください。
Index: plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_zh.properties
===================================================================
--- plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_zh.properties	(revision 1227466)
+++ plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_zh.properties	(working copy)
@@ -546,6 +546,8 @@
 webmanager.common.maxHttpHeaderSizeExp                   = HTTP请求和响应头的最大大小,单位为字节.如果未指定,该属性值为4096(4KB).
 webmanager.common.maxKeepAliveRequests                   = 最大保持连接请求数
 webmanager.common.maxKeepAliveRequestsExp                = 可以放入管道直到服务器关闭连接的HTTP请求的最大数量.属性值设为1将禁用HTTP/1.0保持连接和HTTP/1.1保持连接及管道.属性值设为-1将不限制放入管道或保持连接的HTTP请求个数。.如果未指定,属性值为100.
+webmanager.common.MaxParameterCount                      = MaxParameterCount
+webmanager.common.MaxParameterCountExp                   = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.common.maxPostSize                            = POST最大大小
 webmanager.common.maxPostSizeExp                         = 容器在表单URL参数解析时处理的POST的最大字节数.将属性值设为小等于0的值将解除限制.默认值是2097152(2MB).
 webmanager.common.maxSavePostSize                        = 保存POST最大大小
@@ -711,6 +713,7 @@
 webmanager.connector.editConnector.TomcatManagerImpl.80  = 一个布尔值，用于启用或禁用TRACE HTTP方法。
 webmanager.connector.editConnector.TomcatManagerImpl.82  = 如果设为true,所有会话cookie的路径将被设置为/.这对portlet规范的实现有用，但如果一个给定的服务器中的应用被很多客户端访问的话将极大的影响性能。
 webmanager.connector.editConnector.TomcatManagerImpl.84  = 如果你希望对request.getRemoteHost()的调用执行DNS查找以返回远程客户的实际主机名的话请设为true.设为false将略过DNS查找并返回字符串形式的IP地址(因此将提高性能)。
+webmanager.connector.editConnector.TomcatManagerImpl.85  = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.connector.editConnector.TomcatManagerImpl.86  = 容器的FORM URL参数解析所处理的POST的最大字节数.将属性值设为小于或等于0的值可以不加限制.
 webmanager.connector.editConnector.TomcatManagerImpl.88  = 容器在FORM或CLIENT-CERT验证过程中保存或缓存的POST的最大字节数.对于两种类型的验证，在用户被验证前POST将被保存或缓存。对于CLIENT-CERT验证，POST在SSL握手过程中被缓存并在请求被处理后清空。对于FORM验证，POST在用户被重定向到登录表单时被保存并保留到成功验证用户或者与验证请求关联的会话过期。将属性值设为-1可以不加限制.将属性值设为0则验证时不保存POST数据。
 webmanager.connector.editConnector.TomcatManagerImpl.90  = 如果连接器用在代理设置中,设置这个属性来指定调用request.getServerName()时返回的服务器名称。
@@ -799,4 +802,4 @@
 artifact.actions.edit                = 编辑
 artifact.actions.save                = 保存
 artifact.actions.remove              = 移除
-artifact.msg.emptyText               = 空文本框
\ No newline at end of file
+artifact.msg.emptyText               = 空文本框
Index: plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_en.properties
===================================================================
--- plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_en.properties	(revision 1227466)
+++ plugins/console/console-base-portlets/src/main/i18n-resources/consolebase_en.properties	(working copy)
@@ -546,6 +546,8 @@
 webmanager.common.maxHttpHeaderSizeExp                   = The maximum size of the request and response HTTP header, specified in bytes. If not specified, this attribute is set to 4096 (4 KB).
 webmanager.common.maxKeepAliveRequests                   = MaxKeepAliveRequests
 webmanager.common.maxKeepAliveRequestsExp                = The maximum number of HTTP requests which can be pipelined until the connection is closed by the server. Setting this attribute to 1 will disable HTTP/1.0 keep-alive, as well as HTTP/1.1 keep-alive and pipelining. Setting this to -1 will allow an unlimited amount of pipelined or keep-alive HTTP requests. If not specified, this attribute is set to 100.
+webmanager.common.MaxParameterCount                      = MaxParameterCount
+webmanager.common.MaxParameterCountExp                   = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.common.maxPostSize                            = MaxPostSize
 webmanager.common.maxPostSizeExp                         = The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0. Default value is 2097152 (2 megabytes)
 webmanager.common.maxSavePostSize                        = MaxSavePostSize
@@ -714,6 +716,7 @@
 webmanager.connector.editConnector.TomcatManagerImpl.80  = A boolean value which can be used to enable or disable the TRACE HTTP method.
 webmanager.connector.editConnector.TomcatManagerImpl.82  = If set to true, all paths for session cookies will be set to /. This can be useful for portlet specification implementations, but will greatly affect performance if many applications are accessed on a given server by the client.
 webmanager.connector.editConnector.TomcatManagerImpl.84  = Set to true if you want calls to request.getRemoteHost() to perform DNS lookups in order to return the actual host name of the remote client. Set to false to skip the DNS lookup and return the IP address in String form instead (thereby improving performance).
+webmanager.connector.editConnector.TomcatManagerImpl.85  = The maximum number of parameters (GET plus POST) which will be automatically parsed by the container. 10000 by default. A value of less than 0 means no limit.
 webmanager.connector.editConnector.TomcatManagerImpl.86  = The maximum size in bytes of the POST which will be handled by the container FORM URL parameter parsing. The limit can be disabled by setting this attribute to a value less than or equal to 0.
 webmanager.connector.editConnector.TomcatManagerImpl.88  = The maximum size in bytes of the POST which will be saved/buffered by the container during FORM or CLIENT-CERT authentication. For both types of authentication, the POST will be saved/buffered before the user is authenticated. For CLIENT-CERT authentication, the POST is buffered for the duration of the SSL handshake and the buffer emptied when the request is processed. For FORM authentication the POST is saved whilst the user is re-directed to the login form and is retained until the user successfully authenticates or the session associated with the authentication request expires. The limit can be disabled by setting this attribute to -1. Setting the attribute to zero will disable the saving of POST data during authentication.
 webmanager.connector.editConnector.TomcatManagerImpl.90  = If this Connector is being used in a proxy configuration, configure this attribute to specify the server name to be returned for calls to request.getServerName().
Index: pom.xml
===================================================================
--- pom.xml	(revision 1227466)
+++ pom.xml	(working copy)
@@ -62,7 +62,7 @@
         FIXME: STOP using properties for dependency versions unless you absolutly need them,
                ie. you have a hundred dependencies that all use the same version.
         -->
-        <tomcatVersion>6.0.29.0</tomcatVersion>
+        <tomcatVersion>6.0.35.1</tomcatVersion>
         <tomcatGroupId>org.apache.geronimo.ext.tomcat</tomcatGroupId>
 
         <openejbVersion>3.1.4</openejbVersion>

