diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java
index 6444a4d91e..5a7ecf4143 100644
--- a/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java
+++ b/tika-server/src/main/java/org/apache/tika/server/resource/MetadataResource.java
@@ -57,7 +57,7 @@ public Response getMetadataFromMultipart(Attachment att, @Context UriInfo info)
     @Produces({"text/csv", "application/json", "application/rdf+xml"})
     public Response getMetadata(InputStream is, @Context HttpHeaders httpHeaders, @Context UriInfo info) throws Exception {
         return Response.ok(
-                parseMetadata(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info)).build();
+                parseMetadata(is, httpHeaders.getRequestHeaders(), info)).build();
     }
 
     /**
@@ -93,7 +93,7 @@ public Response getMetadataField(InputStream is, @Context HttpHeaders httpHeader
         Response.Status defaultErrorResponse = Response.Status.BAD_REQUEST;
         Metadata metadata = null;
         try {
-            metadata = parseMetadata(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info);
+            metadata = parseMetadata(is, httpHeaders.getRequestHeaders(), info);
             // once we've parsed the document successfully, we should use NOT_FOUND
             // if we did not see the field
             defaultErrorResponse = Response.Status.NOT_FOUND;
diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java
index ddf2f6de66..3ee6f59574 100644
--- a/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java
+++ b/tika-server/src/main/java/org/apache/tika/server/resource/RecursiveMetadataResource.java
@@ -56,7 +56,6 @@ public Response getMetadataFromMultipart(Attachment att, @Context UriInfo info)
     @PUT
     @Produces("application/json")
     public Response getMetadata(InputStream is, @Context HttpHeaders httpHeaders, @Context UriInfo info) throws Exception {
-		is = TikaUtils.getInputSteam(is, httpHeaders);
         return Response.ok(
                 parseMetadata(is, httpHeaders.getRequestHeaders(), info)).build();
     }
diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java
index cc93503392..437e87e712 100644
--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java
+++ b/tika-server/src/main/java/org/apache/tika/server/resource/TikaResource.java
@@ -334,8 +334,8 @@ public StreamingOutput getTextFromMultipart(Attachment att, @Context final UriIn
     @PUT
     @Consumes("*/*")
     @Produces("text/plain")
-    public StreamingOutput getText(final InputStream is, @Context HttpHeaders httpHeaders, @Context final UriInfo info) throws IOException {
-        return produceText(TikaUtils.getInputSteam(is, httpHeaders), httpHeaders.getRequestHeaders(), info);
+    public StreamingOutput getText(final InputStream is, @Context HttpHeaders httpHeaders, @Context final UriInfo info) {
+        return produceText(is, httpHeaders.getRequestHeaders(), info);
     }
 
     public StreamingOutput produceText(final InputStream is, MultivaluedMap<String, String> httpHeaders, final UriInfo info) {
diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/TikaUtils.java b/tika-server/src/main/java/org/apache/tika/server/resource/TikaUtils.java
deleted file mode 100644
index fe9884f3bc..0000000000
--- a/tika-server/src/main/java/org/apache/tika/server/resource/TikaUtils.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Licensed to the Apache Software Foundation (ASF) under one or more
- * contributor license agreements.  See the NOTICE file distributed with
- * this work for additional information regarding copyright ownership.
- * The ASF licenses this file to You under the Apache License, Version 2.0
- * (the "License"); you may not use this file except in compliance with
- * the License.  You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package org.apache.tika.server.resource;
-
-import javax.ws.rs.core.Context;
-import javax.ws.rs.core.HttpHeaders;
-import java.io.IOException;
-import java.io.InputStream;
-import java.net.URL;
-
-import org.apache.tika.io.TikaInputStream;
-import org.apache.tika.metadata.Metadata;
-
-public class TikaUtils {
-
-    public static InputStream getInputSteam(InputStream is, @Context HttpHeaders httpHeaders) throws IOException {
-        String fileUrl = httpHeaders.getHeaderString("fileUrl");
-        if(is.available() == 0 && !"".equals(fileUrl)){
-            Metadata metadata = new Metadata();
-            return TikaInputStream.get(new URL(fileUrl), metadata);
-        }
-        return TikaInputStream.get(is);
-    }
-}
diff --git a/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java b/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java
index e54ae4c7e0..2e9a96dc0d 100644
--- a/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java
+++ b/tika-server/src/main/java/org/apache/tika/server/resource/UnpackerResource.java
@@ -136,7 +136,6 @@ public static void metadataToCsv(Metadata metadata, OutputStream outputStream) t
         MutableInt count = new MutableInt();
 
         pc.set(EmbeddedDocumentExtractor.class, new MyEmbeddedDocumentExtractor(count, files));
-        is = TikaUtils.getInputSteam(is, httpHeaders);
         TikaResource.parse(parser, logger, info.getPath(), is, ch, metadata, pc);
 
         if (count.intValue() == 0 && !saveAll) {
