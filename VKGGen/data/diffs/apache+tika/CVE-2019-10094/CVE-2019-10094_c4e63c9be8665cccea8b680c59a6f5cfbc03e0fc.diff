From c4e63c9be8665cccea8b680c59a6f5cfbc03e0fc Mon Sep 17 00:00:00 2001
From: TALLISON <tallison@apache.org>
Date: Wed, 24 Jul 2019 20:38:36 -0400
Subject: [PATCH] prep for 1.22

---
 LICENSE.txt                                   |  26 +++++++++++++++++-
 ...AbstractRecursiveParserWrapperHandler.java |   9 ++++++
 .../tika/parser/pkg/CompressorParserTest.java |  11 ++++++++
 .../apache/tika/parser/pkg/ZipParserTest.java |  13 +++++++++
 .../resources/test-documents/testGZ_quine.gz  | Bin 0 -> 204 bytes
 5 files changed, 58 insertions(+), 1 deletion(-)
 create mode 100644 tika-parsers/src/test/resources/test-documents/testGZ_quine.gz

diff --git a/LICENSE.txt b/LICENSE.txt
index 150b1d9882..7b0246ed22 100644
--- a/LICENSE.txt
+++ b/LICENSE.txt
@@ -412,4 +412,28 @@ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
\ No newline at end of file
+THE SOFTWARE.
+
+----------------------------------------------
+testGZ_quine.gz test file (MIT License)
+https://twitter.com/WhoStoleHonno/status/1153315367235784704?s=20
+
+Copyright (c) 2019 by Matthew Barber.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
diff --git a/tika-core/src/main/java/org/apache/tika/sax/AbstractRecursiveParserWrapperHandler.java b/tika-core/src/main/java/org/apache/tika/sax/AbstractRecursiveParserWrapperHandler.java
index 55f5c58920..8bdba657ff 100644
--- a/tika-core/src/main/java/org/apache/tika/sax/AbstractRecursiveParserWrapperHandler.java
+++ b/tika-core/src/main/java/org/apache/tika/sax/AbstractRecursiveParserWrapperHandler.java
@@ -52,8 +52,12 @@
             Property.internalText(TikaCoreProperties.TIKA_META_PREFIX+"embedded_resource_path");
 
     private final ContentHandlerFactory contentHandlerFactory;
+
+    private static final int MAX_DEPTH = 100;
+
     private final int maxEmbeddedResources;
     private int embeddedResources = 0;
+    private int embeddedDepth = 0;
 
     public AbstractRecursiveParserWrapperHandler(ContentHandlerFactory contentHandlerFactory) {
         this(contentHandlerFactory, -1);
@@ -82,6 +86,10 @@ public ContentHandler getNewContentHandler(OutputStream os, Charset charset) {
      */
     public void startEmbeddedDocument(ContentHandler contentHandler, Metadata metadata) throws SAXException {
         embeddedResources++;
+        embeddedDepth++;
+        if (embeddedDepth >= MAX_DEPTH) {
+            throw new SAXException("Max embedded depth reached: "+embeddedDepth);
+        }
     }
     /**
      * This is called after parsing each embedded document.  Override this
@@ -92,6 +100,7 @@ public void startEmbeddedDocument(ContentHandler contentHandler, Metadata metada
      * @throws SAXException
      */
     public void endEmbeddedDocument(ContentHandler contentHandler, Metadata metadata) throws SAXException {
+        embeddedDepth--;
     }
 
     /**
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/CompressorParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/CompressorParserTest.java
index 656e615a5c..3a98458d57 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/CompressorParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/CompressorParserTest.java
@@ -35,6 +35,7 @@
 
 import org.apache.commons.compress.compressors.CompressorStreamFactory;
 import org.apache.tika.TikaTest;
+import org.apache.tika.exception.TikaException;
 import org.apache.tika.metadata.Metadata;
 import org.apache.tika.metadata.TikaCoreProperties;
 import org.apache.tika.mime.MediaType;
@@ -111,4 +112,14 @@ public void testCoverage() throws Exception {
             }
         }
     }
+
+    @Test(expected = TikaException.class)
+    public void testQuineXHTML() throws Exception {
+        getXML("testGZ_quine.gz");
+    }
+
+    @Test
+    public void testQuineRecursive() throws Exception {
+        getRecursiveMetadata("testGZ_quine.gz");
+    }
 }
diff --git a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
index 106d8df0ce..2659567d06 100644
--- a/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
+++ b/tika-parsers/src/test/java/org/apache/tika/parser/pkg/ZipParserTest.java
@@ -227,5 +227,18 @@ public void testJARDetection() throws Exception {
         List<Metadata> metadataList = getRecursiveMetadata("testJAR.jar");
         assertEquals("application/java-archive", metadataList.get(0).get(HttpHeaders.CONTENT_TYPE));
     }
+/*
+    If we can get permission to add http://alf.nu/s/droste.zip
+    we can turn these tests on.
 
+    @Test
+    public void testQuineRecursiveParserWrapper() throws Exception {
+        debug(getRecursiveMetadata("testZIP_quine.zip"));
+    }
+
+    @Test(expected = TikaException.class)
+    public void testQuine() throws Exception {
+        getXML("testZIP_quine.zip");
+    }
+*/
 }
diff --git a/tika-parsers/src/test/resources/test-documents/testGZ_quine.gz b/tika-parsers/src/test/resources/test-documents/testGZ_quine.gz
new file mode 100644
index 0000000000000000000000000000000000000000..67b41ba3b6567fb242296fbb5db1504dd562c285
GIT binary patch
literal 204
zcmb2|=HOref&Yc2nR%&t=~WC25)9A(%i|Dt5_1=0XJBRc^&i0ka~VV!USk*QP&~o_
nktKo!bjW{@YyLCvGJN{)1lEBn)?BbahT(tZ|CMKe>QFcU?_ozX

literal 0
HcmV?d00001

