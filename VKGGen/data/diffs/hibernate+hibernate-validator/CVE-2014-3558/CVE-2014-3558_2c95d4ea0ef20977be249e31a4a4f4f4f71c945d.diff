diff --git a/engine/src/main/java/org/hibernate/validator/internal/util/logging/Messages.java b/engine/src/main/java/org/hibernate/validator/internal/util/logging/Messages.java
index 7d16da094..8df329690 100644
--- a/engine/src/main/java/org/hibernate/validator/internal/util/logging/Messages.java
+++ b/engine/src/main/java/org/hibernate/validator/internal/util/logging/Messages.java
@@ -84,7 +84,7 @@
 	@Message(value = "The created instance must not be null.", format = Message.Format.NO_FORMAT)
 	String validatedConstructorCreatedInstanceMustNotBeNull();
 
-	@Message(value = "The input stream for #addMappging() cannot be null.")
+	@Message(value = "The input stream for #addMapping() cannot be null.")
 	String inputStreamCannotBeNull();
 }
 
diff --git a/engine/src/main/java/org/hibernate/validator/internal/util/privilegedactions/GetResource.java b/engine/src/main/java/org/hibernate/validator/internal/util/privilegedactions/GetResource.java
new file mode 100644
index 000000000..268b5073a
--- /dev/null
+++ b/engine/src/main/java/org/hibernate/validator/internal/util/privilegedactions/GetResource.java
@@ -0,0 +1,47 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2014, Red Hat, Inc. and/or its affiliates, and individual contributors
+ * by the @authors tag. See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * http://www.apache.org/licenses/LICENSE-2.0
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package org.hibernate.validator.internal.util.privilegedactions;
+
+import java.net.URL;
+import java.security.PrivilegedAction;
+
+/**
+ * Loads the given resource.
+ *
+ * @author Gunnar Morling
+ */
+public final class GetResource implements PrivilegedAction<URL> {
+
+	private final String resourceName;
+	private final ClassLoader classLoader;
+
+	public static GetResource action(ClassLoader classLoader, String resourceName) {
+		return new GetResource( classLoader, resourceName );
+	}
+
+	private GetResource(ClassLoader classLoader, String resourceName) {
+		this.classLoader = classLoader;
+		this.resourceName = resourceName;
+	}
+
+	@Override
+	public URL run() {
+		return classLoader.getResource( resourceName );
+	}
+}
diff --git a/engine/src/main/java/org/hibernate/validator/internal/xml/XmlParserHelper.java b/engine/src/main/java/org/hibernate/validator/internal/xml/XmlParserHelper.java
index db578a4ab..259e5c13f 100644
--- a/engine/src/main/java/org/hibernate/validator/internal/xml/XmlParserHelper.java
+++ b/engine/src/main/java/org/hibernate/validator/internal/xml/XmlParserHelper.java
@@ -39,6 +39,7 @@
 import org.hibernate.validator.internal.util.logging.Log;
 import org.hibernate.validator.internal.util.logging.LoggerFactory;
 import org.hibernate.validator.internal.util.privilegedactions.GetClassLoader;
+import org.hibernate.validator.internal.util.privilegedactions.GetResource;
 
 import static org.hibernate.validator.internal.util.logging.Messages.MESSAGES;
 
@@ -152,7 +153,7 @@ public Schema getSchema(String schemaResource) {
 	private Schema loadSchema(String schemaResource) {
 		ClassLoader loader = run( GetClassLoader.fromClass( XmlParserHelper.class ) );
 
-		URL schemaUrl = loader.getResource( schemaResource );
+		URL schemaUrl = run( GetResource.action( loader, schemaResource ) );
 		SchemaFactory sf = SchemaFactory.newInstance( javax.xml.XMLConstants.W3C_XML_SCHEMA_NS_URI );
 		Schema schema = null;
 		try {
