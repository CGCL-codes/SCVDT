diff --git a/src/main/java/com/waytta/SaltAPIBuilder.java b/src/main/java/com/waytta/SaltAPIBuilder.java
index d48d6c7..1b59812 100644
--- a/src/main/java/com/waytta/SaltAPIBuilder.java
+++ b/src/main/java/com/waytta/SaltAPIBuilder.java
@@ -49,6 +49,7 @@
 import org.kohsuke.stapler.StaplerRequest;
 import org.kohsuke.stapler.AncestorInPath;
 import org.kohsuke.stapler.Stapler;
+import org.kohsuke.stapler.interceptor.RequirePOST;
 
 import jenkins.model.Jenkins;
 import java.util.Collections;
@@ -467,11 +468,13 @@ public String getOutputFormat() {
             return outputFormat;
         }
 
+        @RequirePOST
         public static FormValidation doTestConnection(
                 @QueryParameter String servername,
                 @QueryParameter String credentialsId,
                 @QueryParameter String authtype,
                 @AncestorInPath Item project) {
+            project.checkPermission(Item.CONFIGURE);
             StandardUsernamePasswordCredentials usedCredential = null;
             for (StandardUsernamePasswordCredentials c : CredentialsProvider.lookupCredentials(
                     StandardUsernamePasswordCredentials.class,
@@ -510,11 +513,14 @@ public static FormValidation doTestConnection(
 
             return FormValidation.warning("Cannot expand parametrized server name.");
         }
-
+        
+        @RequirePOST
         public static ListBoxModel doFillCredentialsIdItems(
                 @AncestorInPath Job context,
                 @QueryParameter String credentialsId,
-                @QueryParameter final String servername) {
+                @QueryParameter final String servername,
+                @AncestorInPath Item project) {
+            project.checkPermission(Item.CONFIGURE);
             Item item = Stapler.getCurrentRequest().findAncestorObject(Item.class);
             return new StandardUsernameListBoxModel()
                     .includeAs(
@@ -547,9 +553,11 @@ public static FormValidation doCheckServername(@QueryParameter String value) {
             return FormValidation.warning("Cannot expand parametrized server name.");
         }
 
+        @RequirePOST
         public static FormValidation doCheckCredentialsId(
                 @AncestorInPath Item project,
                 @QueryParameter String value) {
+            project.checkPermission(Item.CONFIGURE);
             if (project == null || !project.hasPermission(Item.CONFIGURE)) {
                 return FormValidation.ok();
             }
diff --git a/src/main/java/com/waytta/SaltAPIStep.java b/src/main/java/com/waytta/SaltAPIStep.java
index f30fa6a..e35335a 100644
--- a/src/main/java/com/waytta/SaltAPIStep.java
+++ b/src/main/java/com/waytta/SaltAPIStep.java
@@ -17,6 +17,7 @@
 import org.kohsuke.stapler.DataBoundConstructor;
 import org.kohsuke.stapler.DataBoundSetter;
 import org.kohsuke.stapler.QueryParameter;
+import org.kohsuke.stapler.interceptor.RequirePOST;
 
 import hudson.Extension;
 import hudson.FilePath;
@@ -173,22 +174,26 @@ public FormValidation doCheckServername(@QueryParameter String value) {
             return SaltAPIBuilder.DescriptorImpl.doCheckServername(value);
         }
 
+        @RequirePOST
         public ListBoxModel doFillCredentialsIdItems(
                 @AncestorInPath Job context,
                 @QueryParameter final String credentialsId,
-                @QueryParameter final String servername) {
-            return SaltAPIBuilder.DescriptorImpl.doFillCredentialsIdItems(context, credentialsId, servername);
+                @QueryParameter final String servername,
+                @AncestorInPath Item project) {
+            return SaltAPIBuilder.DescriptorImpl.doFillCredentialsIdItems(context, credentialsId, servername, project);
         }
 
         public FormValidation doCheckCredentialsId(@AncestorInPath Item project, @QueryParameter String value) {
             return SaltAPIBuilder.DescriptorImpl.doCheckCredentialsId(project, value);
         }
 
+        @RequirePOST
         public FormValidation doTestConnection(
                 @QueryParameter String servername,
                 @QueryParameter String credentialsId,
                 @QueryParameter String authtype,
                 @AncestorInPath Item project) {
+            project.checkPermission(Item.CONFIGURE);
             return SaltAPIBuilder.DescriptorImpl.doTestConnection(servername, credentialsId, authtype, project);
         }
 
diff --git a/src/main/resources/com/waytta/SaltAPIBuilder/config.jelly b/src/main/resources/com/waytta/SaltAPIBuilder/config.jelly
index 40a59cc..5babd0d 100644
--- a/src/main/resources/com/waytta/SaltAPIBuilder/config.jelly
+++ b/src/main/resources/com/waytta/SaltAPIBuilder/config.jelly
@@ -6,7 +6,7 @@
   </f:entry>
 
   <f:entry title="Credentials" field="credentialsId">
-    <c:select />
+    <c:select checkMethod="post" />
   </f:entry>
 
   <f:entry title="Auth Type" field="authtype">
@@ -17,7 +17,8 @@
   </f:entry>
   <f:validateButton
    title="${%Test Connection}" progress="${%Testing...}"
-   method="testConnection" with="servername,credentialsId,authtype" />
+   method="testConnection" with="servername,credentialsId,authtype"
+   checkMethod="post" />
 
   <f:dropdownDescriptorSelector title="Client Interface" field="clientInterface"
     descriptors="${descriptor.clientDescriptors}" />
diff --git a/src/main/resources/com/waytta/SaltAPIStep/config.jelly b/src/main/resources/com/waytta/SaltAPIStep/config.jelly
index 48cf9de..0d42895 100644
--- a/src/main/resources/com/waytta/SaltAPIStep/config.jelly
+++ b/src/main/resources/com/waytta/SaltAPIStep/config.jelly
@@ -6,7 +6,7 @@
   </f:entry>
 
   <f:entry title="Credentials" field="credentialsId">
-    <c:select />
+    <c:select checkMethod="post"/>
   </f:entry>
 
   <f:entry title="Auth Type" field="authtype">
@@ -17,7 +17,8 @@
   </f:entry>
   <f:validateButton
    title="${%Test Connection}" progress="${%Testing...}"
-   method="testConnection" with="servername,credentialsId,authtype" />
+   method="testConnection" with="servername,credentialsId,authtype" 
+   checkMethod="post" />
 
   <f:dropdownDescriptorSelector title="Client Interface" field="clientInterface"
     descriptors="${descriptor.clientDescriptors}" />
