diff --git a/jVinci/src/main/java/org/apache/vinci/transport/document/XMLToVinci.java b/jVinci/src/main/java/org/apache/vinci/transport/document/XMLToVinci.java
index 278410db1..a190687ac 100644
--- a/jVinci/src/main/java/org/apache/vinci/transport/document/XMLToVinci.java
+++ b/jVinci/src/main/java/org/apache/vinci/transport/document/XMLToVinci.java
@@ -29,6 +29,8 @@
 
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
+import org.xml.sax.SAXNotRecognizedException;
+import org.xml.sax.SAXNotSupportedException;
 import org.xml.sax.XMLReader;
 import org.xml.sax.helpers.DefaultHandler;
 
@@ -48,6 +50,15 @@
  */
 public class XMLToVinci {
 
+  private static final SAXParserFactory spf = SAXParserFactory.newInstance();
+  static {
+    try {
+      spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+    } catch (SAXNotRecognizedException | SAXNotSupportedException
+        | ParserConfigurationException e) {
+      throw new RuntimeException(e);
+    }
+  }
   /**
    * Utility class not intended to be instantiated.
    */
@@ -243,7 +254,9 @@ public static Transportable xmlToTransportable(Reader r, Transportable empty)
   public static VinciFrame xmlToVinciFrame(Reader r) throws ServiceException {
     XMLReader xr;
     try {
-      xr = SAXParserFactory.newInstance().newSAXParser().getXMLReader();
+      synchronized(spf) {
+        xr = spf.newSAXParser().getXMLReader();
+      }
     } catch (SAXException e) {
       throw new ServiceException("Error creating SAX Parser: " + e);
     } catch (ParserConfigurationException e) {
@@ -284,7 +297,9 @@ public static VinciFrame xmlToVinciFrame(Reader r) throws ServiceException {
   public static AFrame xmlToAFrame(Reader r) throws ServiceException {
     XMLReader xr;
     try {
-      xr = SAXParserFactory.newInstance().newSAXParser().getXMLReader();
+      synchronized (spf) {
+        xr = spf.newSAXParser().getXMLReader();
+      }
     } catch (SAXException e) {
       throw new ServiceException("Error creating SAX Parser: " + e);
     } catch (ParserConfigurationException e) {
diff --git a/jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java b/jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
index cf0929971..86afa773a 100644
--- a/jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
+++ b/jVinci/src/main/java/org/apache/vinci/transport/vns/service/ServiceRegistry.java
@@ -407,7 +407,10 @@ ServiceStack getStack(String name, boolean create) {
   /* Methods to load and save registry info */
   public void load(String fname) throws Exception {
 
-    DocumentBuilder docBuilder = DocumentBuilderFactory.newInstance().newDocumentBuilder();
+    DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
+    dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+    DocumentBuilder docBuilder = dbf.newDocumentBuilder();
+
 
     FileReader readme = new FileReader(fname);
     Document doc;
diff --git a/uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java b/uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
index 8cb189f1c..5c0a2a9cf 100644
--- a/uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
+++ b/uimaj-adapter-vinci/src/main/java/org/apache/uima/adapter/vinci/util/Descriptor.java
@@ -72,8 +72,8 @@ public Descriptor(String filePath) {
   private Document parse(String configFile) {
     Document doc = null;
     try {
-
       SAXParserFactory factory = SAXParserFactory.newInstance();
+      factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", false);
       factory.setValidating(false);
 
       // Create the builder and parse the file
diff --git a/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java b/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
index 4acf87861..b22fca4e9 100644
--- a/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
+++ b/uimaj-core/src/main/java/org/apache/uima/cas/impl/XCASDeserializer.java
@@ -33,6 +33,7 @@
 import org.apache.uima.cas.TypeSystem;
 import org.apache.uima.internal.util.IntVector;
 import org.apache.uima.internal.util.StringUtils;
+import org.apache.uima.internal.util.XMLUtils;
 import org.apache.uima.internal.util.rb_trees.RedBlackTree;
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
@@ -1200,7 +1201,7 @@ public static void deserialize(InputStream aStream, CAS aCAS) throws SAXExceptio
    */
   public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient)
           throws SAXException, IOException {
-    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    XMLReader xmlReader = XMLUtils.createXMLReader();
     XCASDeserializer deser = new XCASDeserializer(aCAS.getTypeSystem());
     ContentHandler handler;
     if (aLenient) {
diff --git a/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java b/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
index e9192fbc9..2b2626a8d 100644
--- a/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
+++ b/uimaj-core/src/main/java/org/apache/uima/cas/impl/XmiCasDeserializer.java
@@ -52,6 +52,7 @@
 import org.apache.uima.internal.util.IntListIterator;
 import org.apache.uima.internal.util.IntVector;
 import org.apache.uima.internal.util.PositiveIntSet;
+import org.apache.uima.internal.util.XMLUtils;
 import org.apache.uima.internal.util.XmlAttribute;
 import org.apache.uima.internal.util.XmlElementName;
 import org.apache.uima.internal.util.XmlElementNameAndContents;
@@ -2059,7 +2060,7 @@ public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient,
   public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient,
           XmiSerializationSharedData aSharedData, int aMergePoint)
           throws SAXException, IOException {
-    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    XMLReader xmlReader = XMLUtils.createXMLReader();
     XmiCasDeserializer deser = new XmiCasDeserializer(aCAS.getTypeSystem());
     ContentHandler handler = deser.getXmiCasHandler(aCAS, aLenient, aSharedData, aMergePoint);
     xmlReader.setContentHandler(handler);
@@ -2133,7 +2134,7 @@ public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient,
   public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient,
 		  XmiSerializationSharedData aSharedData, int aMergePoint, AllowPreexistingFS allowPreexistingFS)
   throws SAXException, IOException {
-	  XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+	  XMLReader xmlReader = XMLUtils.createXMLReader();
 	  XmiCasDeserializer deser = new XmiCasDeserializer(aCAS.getTypeSystem());
 	  ContentHandler handler = deser.getXmiCasHandler(aCAS, aLenient, aSharedData, aMergePoint, allowPreexistingFS);
 	  xmlReader.setContentHandler(handler);
diff --git a/uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java b/uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
index 1c911de46..7fb67f340 100644
--- a/uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
+++ b/uimaj-core/src/main/java/org/apache/uima/impl/UIMAFramework_impl.java
@@ -475,6 +475,7 @@ protected void parseFactoryConfig() throws ParserConfigurationException, SAXExce
     // with XML4J v3. This is a good thing, since the UtilityClassLoader writes
     // to the logger, which isn't created yet!
     SAXParserFactory factory = SAXParserFactory.newInstance();
+    factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
     SAXParser parser = factory.newSAXParser();
     XMLReader reader = parser.getXMLReader();
 
diff --git a/uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java b/uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
index b1373783c..2135f4155 100644
--- a/uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
+++ b/uimaj-core/src/main/java/org/apache/uima/internal/util/XMLUtils.java
@@ -27,6 +27,9 @@
 import org.w3c.dom.Node;
 import org.w3c.dom.NodeList;
 import org.w3c.dom.Text;
+import org.xml.sax.SAXException;
+import org.xml.sax.XMLReader;
+import org.xml.sax.helpers.XMLReaderFactory;
 
 /**
  * Some utilities for working with XML.
@@ -517,4 +520,12 @@ private static final boolean isValidXmlUtf16int(char c, boolean xml11) {
         (c >= 0xE000 && c <= 0xFFFD));
   }
 
+  public static XMLReader createXMLReader() throws SAXException {
+    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    xmlReader.setFeature("http://xml.org/sax/features/external-general-entities", false);
+    xmlReader.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+    xmlReader.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+    return xmlReader;
+  }
+
 }
diff --git a/uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java b/uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
index 16a04c284..546f0371c 100644
--- a/uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
+++ b/uimaj-core/src/main/java/org/apache/uima/pear/util/XMLUtil.java
@@ -125,6 +125,7 @@ public static SAXParser createSAXParser() throws SAXException {
     try {
       // get SAX parser factory
       SAXParserFactory factory = SAXParserFactory.newInstance();
+      factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
       // set default SAX parser features
       factory.setFeature(NAMESPACES_FEATURE_ID, DEFAULT_NAMESPACES);
       factory.setFeature(NAMESPACE_PREFIXES_FEATURE_ID, DEFAULT_NAMESPACE_PREFIXES);
diff --git a/uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java b/uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
index 611ef6b15..24cc16873 100644
--- a/uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
+++ b/uimaj-core/src/main/java/org/apache/uima/util/XMLSerializer.java
@@ -24,6 +24,7 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import javax.xml.XMLConstants;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Result;
 import javax.xml.transform.Transformer;
@@ -58,6 +59,10 @@
   
   private static final SAXTransformerFactory transformerFactory = (SAXTransformerFactory) SAXTransformerFactory
           .newInstance();
+  
+  static { transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+           transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
+  }
 
   private TransformerHandler mHandler;
 
diff --git a/uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java b/uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
index 22c26e0e4..e0086fee6 100644
--- a/uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
+++ b/uimaj-core/src/main/java/org/apache/uima/util/XmlCasDeserializer.java
@@ -27,6 +27,7 @@
 import org.apache.uima.cas.impl.OutOfTypeSystemData;
 import org.apache.uima.cas.impl.XCASDeserializer;
 import org.apache.uima.cas.impl.XmiCasDeserializer;
+import org.apache.uima.internal.util.XMLUtils;
 import org.xml.sax.Attributes;
 import org.xml.sax.ContentHandler;
 import org.xml.sax.InputSource;
@@ -78,7 +79,7 @@ public static void deserialize(InputStream aStream, CAS aCAS) throws SAXExceptio
    */
   public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient)
           throws SAXException, IOException {
-    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    XMLReader xmlReader = XMLUtils.createXMLReader();
     XmlCasDeserializerHandler handler = new XmlCasDeserializerHandler(aCAS, aLenient);
     xmlReader.setContentHandler(handler);
     xmlReader.parse(new InputSource(aStream));
@@ -104,7 +105,7 @@ public static void deserialize(InputStream aStream, CAS aCAS, boolean aLenient)
    */
   static SerialFormat deserializeR(InputStream aStream, CAS aCAS, boolean aLenient)
       throws SAXException, IOException {
-    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    XMLReader xmlReader = XMLUtils.createXMLReader();
     XmlCasDeserializerHandler handler = new XmlCasDeserializerHandler(aCAS, aLenient);
     xmlReader.setContentHandler(handler);
     xmlReader.parse(new InputSource(aStream));
diff --git a/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java b/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
index e4e5bdba7..a5c3df27f 100644
--- a/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
+++ b/uimaj-core/src/main/java/org/apache/uima/util/impl/XMLParser_impl.java
@@ -105,6 +105,7 @@
     SCHEMA_URL = schemaURL;
     }
 
+  
   /**
    * Map from XML element names to Class objects.
    */
@@ -156,6 +157,7 @@ public XMLizable parse(XMLInputSource aInput, String aNamespaceForSchema, URL aS
     URL urlToParse = aInput.getURL();
     try {
       SAXParserFactory factory = SAXParserFactory.newInstance();
+      factory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
 
       // Turn on namespace support
       factory.setNamespaceAware(true);        
diff --git a/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java b/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java
index 89b996a3d..9965d3ed0 100644
--- a/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java
+++ b/uimaj-core/src/test/java/org/apache/uima/cas/impl/XCASDeserializerTest.java
@@ -41,6 +41,7 @@
 import org.apache.uima.cas.IntArrayFS;
 import org.apache.uima.cas.StringArrayFS;
 import org.apache.uima.cas.Type;
+import org.apache.uima.internal.util.XMLUtils;
 import org.apache.uima.jcas.cas.StringArray;
 import org.apache.uima.resource.metadata.FsIndexDescription;
 import org.apache.uima.resource.metadata.TypeSystemDescription;
@@ -235,7 +236,7 @@ public void testOutOfTypeSystem3() throws Exception {
             + "<uima.tcas.DocumentAnnotation _indexed=\"1\" _id=\"8\" sofa=\"1\" begin=\"0\" end=\"13\" language=\"en\"/>"
             + "<foo.Bar _indexed=\"1\" _id=\"2\" sofa=\"1\" begin=\"0\" end=\"0\" baz=\"blah\">this is the value feature</foo.Bar></CAS>";
     OutOfTypeSystemData ootsd = new OutOfTypeSystemData();
-    XMLReader xmlReader = XMLReaderFactory.createXMLReader();
+    XMLReader xmlReader = XMLUtils.createXMLReader();
     XCASDeserializer deser = new XCASDeserializer(cas.getTypeSystem());
     ContentHandler handler = deser.getXCASHandler(cas, ootsd);
     xmlReader.setContentHandler(handler);
diff --git a/uimaj-core/src/test/java/org/apache/uima/util/XMLSerializerTest.java b/uimaj-core/src/test/java/org/apache/uima/util/XMLSerializerTest.java
index abb8ce5fe..620caf1de 100644
--- a/uimaj-core/src/test/java/org/apache/uima/util/XMLSerializerTest.java
+++ b/uimaj-core/src/test/java/org/apache/uima/util/XMLSerializerTest.java
@@ -20,6 +20,7 @@
 
 import java.io.ByteArrayOutputStream;
 
+import javax.xml.XMLConstants;
 import javax.xml.transform.OutputKeys;
 import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerFactory;
@@ -57,7 +58,10 @@ public void testXml11() throws Exception {
 //    if (xmlStr.contains("1.0")) {
     // useful to investigate issues when bad XML output is produced
     //   related to which Java implementation is being used
-      Transformer t = TransformerFactory.newInstance().newTransformer();
+      TransformerFactory transformerFactory = TransformerFactory.newInstance();
+      transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+      transformerFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
+      Transformer t = transformerFactory.newTransformer();
       t.setOutputProperty(OutputKeys.VERSION, "1.1");
       
       System.out.println("Java version is " + 
diff --git a/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java b/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
index 592c67152..ce23a549c 100644
--- a/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
+++ b/uimaj-ep-cas-editor/src/main/java/org/apache/uima/caseditor/core/model/dotcorpus/DotCorpusSerializer.java
@@ -92,6 +92,11 @@
    */
   public static DotCorpus parseDotCorpus(InputStream dotCorpusStream) throws CoreException {
     DocumentBuilderFactory documentBuilderFacoty = DocumentBuilderFactory.newInstance();
+    try {
+      documentBuilderFacoty.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+    } catch (ParserConfigurationException e1) {
+      throw new RuntimeException(e1);
+    }
 
     DocumentBuilder documentBuilder;
 
diff --git a/uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java b/uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
index 3a9534fd3..3c97ba9f2 100644
--- a/uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
+++ b/uimaj-examples/src/main/java/org/apache/uima/examples/XmlDetagger.java
@@ -22,6 +22,7 @@
 import java.io.InputStream;
 import java.util.Iterator;
 
+import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.parsers.SAXParser;
 import javax.xml.parsers.SAXParserFactory;
 
@@ -35,6 +36,8 @@
 import org.apache.uima.resource.ResourceInitializationException;
 import org.xml.sax.Attributes;
 import org.xml.sax.SAXException;
+import org.xml.sax.SAXNotRecognizedException;
+import org.xml.sax.SAXNotSupportedException;
 import org.xml.sax.helpers.DefaultHandler;
 
 /**
@@ -53,6 +56,14 @@
   public static final String PARAM_XMLTAG = "XmlTagContainingText";
   
   private SAXParserFactory parserFactory = SAXParserFactory.newInstance();
+  { try {
+      parserFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+    } catch (SAXNotRecognizedException | SAXNotSupportedException
+        | ParserConfigurationException e) {
+      throw new RuntimeException(e);
+    }
+  }
+   
 
   private Type sourceDocInfoType;
 
diff --git a/uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java b/uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
index a90650192..f7bfcfd53 100644
--- a/uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
+++ b/uimaj-tools/src/main/java/org/apache/uima/tools/components/XmlDetagger.java
@@ -23,6 +23,7 @@
 import java.net.URL;
 import java.util.Iterator;
 
+import javax.xml.parsers.ParserConfigurationException;
 import javax.xml.parsers.SAXParser;
 import javax.xml.parsers.SAXParserFactory;
 
@@ -40,6 +41,8 @@
 import org.apache.uima.util.XMLInputSource;
 import org.xml.sax.Attributes;
 import org.xml.sax.SAXException;
+import org.xml.sax.SAXNotRecognizedException;
+import org.xml.sax.SAXNotSupportedException;
 import org.xml.sax.helpers.DefaultHandler;
 
 /**
@@ -58,6 +61,15 @@
   public static final String PARAM_TEXT_TAG = "XmlTagContainingText";
   
   private SAXParserFactory parserFactory = SAXParserFactory.newInstance();
+  
+  { try {
+      parserFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+    } catch (SAXNotRecognizedException | SAXNotSupportedException
+        | ParserConfigurationException e) {
+      throw new RuntimeException(e);
+    }
+  }
+
 
   private Type sourceDocInfoType;
 
diff --git a/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java b/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
index f6339a74a..2cd67aa66 100644
--- a/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
+++ b/uimaj-tools/src/main/java/org/apache/uima/tools/cvd/MainFrame.java
@@ -572,7 +572,9 @@ public void loadXmiFile(File xmiCasFile) {
       setXcasFileOpenDir(xmiCasFile.getParentFile());
       Timer time = new Timer();
       time.start();
-      SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
+      SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
+      saxParserFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+      SAXParser parser = saxParserFactory.newSAXParser();
       XmiCasDeserializer xmiCasDeserializer = new XmiCasDeserializer(getCas().getTypeSystem());
       getCas().reset();
       parser.parse(xmiCasFile, xmiCasDeserializer.getXmiCasHandler(getCas(), true));
diff --git a/uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java b/uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java
index 3b13d10f1..27d4cac8e 100644
--- a/uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java
+++ b/uimaj-tools/src/main/java/org/apache/uima/tools/stylemap/StyleMapXmlParser.java
@@ -58,7 +58,10 @@
   public StyleMapXmlParser(String xmlFile) {
     try {
       // create new SAX Parser
-      SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
+      SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
+      saxParserFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+      SAXParser parser = saxParserFactory.newSAXParser();
+
       XMLReader reader = parser.getXMLReader();
       // set the content handler
       reader.setContentHandler(this);
diff --git a/uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java b/uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
index 15f15def6..c663e3586 100644
--- a/uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
+++ b/uimaj-tools/src/main/java/org/apache/uima/tools/util/htmlview/AnnotationViewGenerator.java
@@ -29,6 +29,7 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 
+import javax.xml.XMLConstants;
 import javax.xml.transform.Templates;
 import javax.xml.transform.Transformer;
 import javax.xml.transform.TransformerConfigurationException;
@@ -86,6 +87,8 @@
   public AnnotationViewGenerator(File aOutputDir) {
     mOutputDir = aOutputDir;
     mTFactory = TransformerFactory.newInstance();
+    mTFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "");
+    mTFactory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "");
 
     // the viewer uses several files located via the classpath
     // parse xsl files into templates
