diff --git a/src/org/opencms/ade/galleries/CmsGalleryService.java b/src/org/opencms/ade/galleries/CmsGalleryService.java
index c74c0f16cb..0998d00fbd 100644
--- a/src/org/opencms/ade/galleries/CmsGalleryService.java
+++ b/src/org/opencms/ade/galleries/CmsGalleryService.java
@@ -2696,6 +2696,12 @@ private CmsGallerySearchParameters prepareSearchParams(CmsGallerySearchBean sear
             params.setDateLastModifiedTimeRange(Long.MIN_VALUE, dateModifiedEnd);
         }
         params.setIgnoreSearchExclude(searchData.isIgnoreSearchExclude());
+        
+        // set include expired/unreleased
+        if (searchData.isIncludeExpired()) {
+            params.setIncludeExpired(true);
+        }
+
         return params;
     }
 
diff --git a/src/org/opencms/search/galleries/CmsGallerySearchParameters.java b/src/org/opencms/search/galleries/CmsGallerySearchParameters.java
index 559797d1bb..456954e3bd 100644
--- a/src/org/opencms/search/galleries/CmsGallerySearchParameters.java
+++ b/src/org/opencms/search/galleries/CmsGallerySearchParameters.java
@@ -210,6 +210,9 @@ public long getStartTime() {
     /** Indicates the search exclude property should be ignored. */
     private boolean m_ignoreSearchExclude;
 
+    /** Indicates if expired and unreleased resources should be included in the search. */
+    private boolean m_includeExpired;
+
     /** The locale for the search. */
     private String m_locale;
 
@@ -447,6 +450,11 @@ public CmsSolrQuery getQuery(CmsObject cms) {
         // set sort order
         query.setSort(getSort().getFirst(), getSort().getSecond());
 
+        // include expired/unreleased
+        if (m_includeExpired) {
+            query.removeExpiration();
+        }
+
         return query;
     }
 
@@ -538,6 +546,16 @@ public boolean isIgnoreSearchExclude() {
         return m_ignoreSearchExclude;
     }
 
+    /**
+     * Returns a flag, indicating if release and expiration date should be ignored.<p>
+     *
+     * @return a flag, indicating if release and expiration date should be ignored
+     */
+    public boolean isIncludeExpired() {
+
+        return m_includeExpired;
+    }
+
     /**
      * Sets the categories for the search.<p>
      *
@@ -632,6 +650,16 @@ public void setIgnoreSearchExclude(boolean excludeForPageEditor) {
         m_ignoreSearchExclude = excludeForPageEditor;
     }
 
+    /**
+     * Set the flag, determining if expired and unreleased resources should be shown.
+     * @param includeExpired iff <code>true</code> expired and unreleased resources are shown.
+     */
+    public void setIncludeExpired(boolean includeExpired) {
+
+        m_includeExpired = includeExpired;
+
+    }
+
     /**
      * Sets the maximum number of matches per result page.<p>
      *
