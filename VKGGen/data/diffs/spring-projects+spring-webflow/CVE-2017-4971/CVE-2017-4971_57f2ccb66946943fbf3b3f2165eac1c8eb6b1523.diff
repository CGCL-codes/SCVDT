diff --git a/spring-webflow/src/main/java/org/springframework/webflow/mvc/view/AbstractMvcView.java b/spring-webflow/src/main/java/org/springframework/webflow/mvc/view/AbstractMvcView.java
index b3b408074..cfc48957d 100644
--- a/spring-webflow/src/main/java/org/springframework/webflow/mvc/view/AbstractMvcView.java
+++ b/spring-webflow/src/main/java/org/springframework/webflow/mvc/view/AbstractMvcView.java
@@ -31,6 +31,7 @@
 import org.springframework.binding.expression.Expression;
 import org.springframework.binding.expression.ExpressionParser;
 import org.springframework.binding.expression.ParserContext;
+import org.springframework.binding.expression.beanwrapper.BeanWrapperExpressionParser;
 import org.springframework.binding.expression.support.FluentParserContext;
 import org.springframework.binding.expression.support.StaticExpression;
 import org.springframework.binding.mapping.MappingResult;
@@ -78,6 +79,8 @@
 
 	private ExpressionParser expressionParser;
 
+	private final ExpressionParser emptyValueExpressionParser = new BeanWrapperExpressionParser();
+
 	private ConversionService conversionService;
 
 	private Validator validator;
@@ -482,7 +485,7 @@ protected void addDefaultMappings(DefaultMapper mapper, Set<String> parameterNam
 	 */
 	protected void addEmptyValueMapping(DefaultMapper mapper, String field, Object model) {
 		ParserContext parserContext = new FluentParserContext().evaluate(model.getClass());
-		Expression target = expressionParser.parseExpression(field, parserContext);
+		Expression target = emptyValueExpressionParser.parseExpression(field, parserContext);
 		try {
 			Class<?> propertyType = target.getValueType(model);
 			Expression source = new StaticExpression(getEmptyValue(propertyType));
