diff --git a/STATUS.txt b/STATUS.txt
index cc3c88c6..dcbec203 100644
--- a/STATUS.txt
+++ b/STATUS.txt
@@ -47,8 +47,3 @@ PATCHES PROPOSED TO BACKPORT:
   -0: markt - Consensus was for disabled in 5.5.x
               http://svn.apache.org/viewvc?view=revision&revision=749019
   -1:
-
-* Arrange filter logic.
-  http://svn.apache.org/viewvc?rev=958911&view=rev
-  +1: jfclere, markt, rjung, jim
-  -1:
diff --git a/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java b/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
index 744125a4..617e30ce 100644
--- a/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -77,6 +77,12 @@
     protected static StringManager sm =
         StringManager.getManager(Constants.Package);
 
+    /*
+     * Tracks how many internal filters are in the filter library so they
+     * are skipped when looking for pluggable filters. 
+     */
+    private int pluggableFilterIndex = Integer.MAX_VALUE;
+
 
     // ----------------------------------------------------------- Constructors
 
@@ -1699,6 +1705,8 @@ protected void initializeFilters() {
         //inputBuffer.addFilter(new GzipInputFilter());
         outputBuffer.addFilter(new GzipOutputFilter());
 
+        pluggableFilterIndex = inputBuffer.filterLibrary.length;
+
     }
 
 
@@ -1717,7 +1725,7 @@ protected boolean addInputFilter(InputFilter[] inputFilters,
                 (inputFilters[Constants.CHUNKED_FILTER]);
             contentDelimitation = true;
         } else {
-            for (int i = 2; i < inputFilters.length; i++) {
+            for (int i = pluggableFilterIndex; i < inputFilters.length; i++) {
                 if (inputFilters[i].getEncodingName()
                     .toString().equals(encodingName)) {
                     inputBuffer.addActiveFilter(inputFilters[i]);
diff --git a/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java b/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java
index a52aa4ba..473a12af 100644
--- a/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java
+++ b/connectors/http11/src/java/org/apache/coyote/http11/Http11Processor.java
@@ -78,6 +78,12 @@
     protected static StringManager sm =
         StringManager.getManager(Constants.Package);
 
+    /*
+     * Tracks how many internal filters are in the filter library so they
+     * are skipped when looking for pluggable filters. 
+     */
+    private int pluggableFilterIndex = Integer.MAX_VALUE;
+
 
     // ----------------------------------------------------------- Constructors
 
@@ -1657,6 +1663,8 @@ protected void initializeFilters() {
         //inputBuffer.addFilter(new GzipInputFilter());
         outputBuffer.addFilter(new GzipOutputFilter());
 
+        pluggableFilterIndex = inputBuffer.filterLibrary.length;
+
     }
 
 
@@ -1675,7 +1683,7 @@ protected boolean addInputFilter(InputFilter[] inputFilters,
                 (inputFilters[Constants.CHUNKED_FILTER]);
             contentDelimitation = true;
         } else {
-            for (int i = 2; i < inputFilters.length; i++) {
+            for (int i = pluggableFilterIndex; i < inputFilters.length; i++) {
                 if (inputFilters[i].getEncodingName()
                     .toString().equals(encodingName)) {
                     inputBuffer.addActiveFilter(inputFilters[i]);
diff --git a/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java b/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
index 768eebbb..1934bb00 100644
--- a/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
+++ b/connectors/http11/src/java/org/apache/coyote/http11/filters/BufferedInputFilter.java
@@ -102,10 +102,12 @@ public void setBuffer(InputBuffer buffer) {
     }
 
     public void recycle() {
-        if (buffered.getBuffer().length > 65536) {
-            buffered = null;
-        } else {
-            buffered.recycle();
+        if (buffered != null) {
+            if (buffered.getBuffer().length > 65536) {
+                buffered = null;
+            } else {
+                buffered.recycle();
+            }
         }
         tempRead.recycle();
         hasRead = false;
diff --git a/container/webapps/docs/changelog.xml b/container/webapps/docs/changelog.xml
index 00c77b70..647cdda5 100644
--- a/container/webapps/docs/changelog.xml
+++ b/container/webapps/docs/changelog.xml
@@ -107,6 +107,8 @@
   </subsection>
   <subsection name="Coyote">
     <changelog>
+      <fix>Arrange filter logic. (jfclere)
+      </fix>
       <fix>
         <bug>48613</bug>: Only attempt APR/native connector initialization if
         the Listener element has been specified in server.xml. (fhanik/kkolinko)
