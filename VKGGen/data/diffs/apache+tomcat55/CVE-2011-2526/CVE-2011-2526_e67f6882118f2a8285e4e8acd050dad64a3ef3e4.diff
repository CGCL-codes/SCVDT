diff --git a/STATUS.txt b/STATUS.txt
index bb8cd966..e9cf3c08 100644
--- a/STATUS.txt
+++ b/STATUS.txt
@@ -94,12 +94,6 @@ PATCHES PROPOSED TO BACKPORT:
        I think there is not much demand for this feature in 5.5 to justify this.
        The rest of changes and fixes are OK to backport (e.g. allow to specify port numbers).
 
-* Fix various sendfile issues. CVE-2011-2526
-  This is a port of r1145380, r1145694 and r1146005
-  http://people.apache.org/~markt/patches/2011-07-13-cve-2011-2526-tc5.patch
-  +1: markt, kfujino, kkolinko
-  -1:
-
 * Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=41179
   Return 404 rather than 400 if no ROOT context is deployed
   http://people.apache.org/~markt/patches/2011-07-22-bug41179-tc5.patch
diff --git a/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java b/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
index b13a9a50..dd9ca0e4 100644
--- a/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
+++ b/connectors/http11/src/java/org/apache/coyote/http11/Http11AprProcessor.java
@@ -907,7 +907,18 @@ public boolean process(long socket)
                 sendfileData.socket = socket;
                 sendfileData.keepAlive = keepAlive;
                 if (!endpoint.getSendfile().add(sendfileData)) {
-                    openSocket = true;
+                    if (sendfileData.socket == 0) {
+                        // Didn't send all the data but the socket is no longer
+                        // set. Something went wrong. Close the connection.
+                        // Too late to set status code.
+                        if (log.isDebugEnabled()) {
+                            log.debug(sm.getString(
+                                    "http11processor.sendfile.error"));
+                        }
+                        openSocket = false;
+                    } else {
+                        openSocket = true;
+                    }
                     break;
                 }
             }
diff --git a/connectors/http11/src/java/org/apache/coyote/http11/LocalStrings.properties b/connectors/http11/src/java/org/apache/coyote/http11/LocalStrings.properties
index ad0c5d95..ece87e71 100644
--- a/connectors/http11/src/java/org/apache/coyote/http11/LocalStrings.properties
+++ b/connectors/http11/src/java/org/apache/coyote/http11/LocalStrings.properties
@@ -56,6 +56,7 @@ http11processor.response.finish=Error finishing response
 http11processor.socket.info=Exception getting socket information
 http11processor.socket.ssl=Exception getting SSL attributes
 http11processor.socket.timeout=Error setting socket timeout
+http11processor.sendfile.error=Error sending data using sendfile. May be caused by invalid request attributes for start/end points
 
 #
 # InternalInputBuffer
diff --git a/connectors/util/java/org/apache/tomcat/util/net/AprEndpoint.java b/connectors/util/java/org/apache/tomcat/util/net/AprEndpoint.java
index 5d17f642..a60cdab9 100644
--- a/connectors/util/java/org/apache/tomcat/util/net/AprEndpoint.java
+++ b/connectors/util/java/org/apache/tomcat/util/net/AprEndpoint.java
@@ -1429,7 +1429,9 @@ public boolean add(SendfileData data) {
                                                data.pos, data.end - data.pos, 0);
                     if (nw < 0) {
                         if (!(-nw == Status.EAGAIN)) {
-                            Socket.destroy(data.socket);
+                            Pool.destroy(data.fdpool);
+                            // No need to close socket, this will be done by
+                            // calling code since data.socket == 0
                             data.socket = 0;
                             return false;
                         } else {
diff --git a/container/catalina/src/share/org/apache/catalina/connector/LocalStrings.properties b/container/catalina/src/share/org/apache/catalina/connector/LocalStrings.properties
index d606f8f1..ce6be1e0 100644
--- a/container/catalina/src/share/org/apache/catalina/connector/LocalStrings.properties
+++ b/container/catalina/src/share/org/apache/catalina/connector/LocalStrings.properties
@@ -60,6 +60,7 @@ coyoteRequest.parseParameters=Exception thrown whilst processing POSTed paramete
 coyoteRequest.postTooLarge=Parameters were not parsed because the size of the posted data was too big. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
 coyoteRequest.chunkedPostTooLarge=Parameters were not parsed because the size of the posted data was too big. Because this request was a chunked request, it could not be processed further. Use the maxPostSize attribute of the connector to resolve this if the application should accept large POSTs.
 coyoteRequest.sessionEndAccessFail=Exception triggered ending access to session while recycling request
+coyoteRequest.sendfileNotCanonical=Unable to determine canonical name of file [{0}] specified for use with sendfile
 
 requestFacade.nullRequest=Null request object
 responseFacade.nullResponse=Null response object
diff --git a/container/catalina/src/share/org/apache/catalina/connector/Request.java b/container/catalina/src/share/org/apache/catalina/connector/Request.java
index da82a797..4a890017 100644
--- a/container/catalina/src/share/org/apache/catalina/connector/Request.java
+++ b/container/catalina/src/share/org/apache/catalina/connector/Request.java
@@ -19,6 +19,7 @@
 package org.apache.catalina.connector;
 
 
+import java.io.File;
 import java.io.InputStream;
 import java.io.IOException;
 import java.io.BufferedReader;
@@ -1374,6 +1375,27 @@ public void setAttribute(String name, Object value) {
             return;
         }
 
+        if (System.getSecurityManager() != null &&
+                name.equals("org.apache.tomcat.sendfile.filename")) {
+            // Use the canonical file name to avoid any possible symlink and
+            // relative path issues
+            String canonicalPath;
+            try {
+                canonicalPath = new File(value.toString()).getCanonicalPath();
+            } catch (IOException e) {
+                SecurityException se = new SecurityException(sm.getString(
+                        "coyoteRequest.sendfileNotCanonical", value));
+                se.initCause(e);
+                throw se;
+            }
+            // Sendfile is performed in Tomcat's security context so need to
+            // check if the web app is permitted to access the file while still
+            // in the web app's security context
+            System.getSecurityManager().checkRead(canonicalPath);
+            // Update the value so the canonical path is used
+            value = canonicalPath;
+        }
+
         Object oldValue = null;
         boolean replaced = false;
 
diff --git a/container/catalina/src/share/org/apache/catalina/servlets/DefaultServlet.java b/container/catalina/src/share/org/apache/catalina/servlets/DefaultServlet.java
index 80efd27c..da2285b5 100644
--- a/container/catalina/src/share/org/apache/catalina/servlets/DefaultServlet.java
+++ b/container/catalina/src/share/org/apache/catalina/servlets/DefaultServlet.java
@@ -1639,7 +1639,6 @@ protected boolean checkSendfile(HttpServletRequest request,
                 request.setAttribute("org.apache.tomcat.sendfile.start", new Long(range.start));
                 request.setAttribute("org.apache.tomcat.sendfile.end", new Long(range.end + 1));
             }
-            request.setAttribute("org.apache.tomcat.sendfile.token", this);
             return true;
         } else {
             return false;
diff --git a/container/webapps/docs/changelog.xml b/container/webapps/docs/changelog.xml
index c6e24fe5..9f1e0e14 100644
--- a/container/webapps/docs/changelog.xml
+++ b/container/webapps/docs/changelog.xml
@@ -76,6 +76,14 @@
       </fix>
     </changelog>
   </subsection>
+  <subsection name="Coyote">
+    <changelog>
+      <fix>
+        Fix CVE-2011-2526. Protect against crashes (HTTP APR) if sendfile is
+        configured to send more data than is available in the file. (markt) 
+      </fix>
+    </changelog>
+  </subsection>
   <subsection name="Jasper">
     <changelog>
       <fix>
